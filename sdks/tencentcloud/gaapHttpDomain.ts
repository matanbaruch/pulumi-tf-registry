// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class GaapHttpDomain extends pulumi.CustomResource {
    /**
     * Get an existing GaapHttpDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GaapHttpDomainState, opts?: pulumi.CustomResourceOptions): GaapHttpDomain {
        return new GaapHttpDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/gaapHttpDomain:GaapHttpDomain';

    /**
     * Returns true if the given object is an instance of GaapHttpDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GaapHttpDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GaapHttpDomain.__pulumiType;
    }

    /**
     * Indicates whether basic authentication is enable, default value is `false`.
     */
    public readonly basicAuth!: pulumi.Output<boolean | undefined>;
    /**
     * ID of the basic authentication.
     */
    public readonly basicAuthId!: pulumi.Output<string>;
    /**
     * ID of the server certificate, default value is `default`.
     */
    public readonly certificateId!: pulumi.Output<string | undefined>;
    /**
     * ID of the client certificate, default value is `default`.
     *
     * @deprecated Deprecated
     */
    public readonly clientCertificateId!: pulumi.Output<string>;
    /**
     * ID list of the poly client certificate.
     */
    public readonly clientCertificateIds!: pulumi.Output<string[]>;
    /**
     * Forward domain of the layer7 listener.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * Indicates whether SSL certificate authentication is enable, default value is `false`.
     */
    public readonly gaapAuth!: pulumi.Output<boolean | undefined>;
    /**
     * ID of the SSL certificate.
     */
    public readonly gaapAuthId!: pulumi.Output<string>;
    /**
     * ID of the layer7 listener.
     */
    public readonly listenerId!: pulumi.Output<string>;
    /**
     * Indicates whether realserver authentication is enable, default value is `false`.
     */
    public readonly realserverAuth!: pulumi.Output<boolean | undefined>;
    /**
     * CA certificate domain of the realserver. It has been deprecated.
     */
    public readonly realserverCertificateDomain!: pulumi.Output<string>;
    /**
     * CA certificate ID of the realserver.
     *
     * @deprecated Deprecated
     */
    public readonly realserverCertificateId!: pulumi.Output<string>;
    /**
     * CA certificate ID list of the realserver.
     */
    public readonly realserverCertificateIds!: pulumi.Output<string[]>;

    /**
     * Create a GaapHttpDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GaapHttpDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GaapHttpDomainArgs | GaapHttpDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GaapHttpDomainState | undefined;
            resourceInputs["basicAuth"] = state ? state.basicAuth : undefined;
            resourceInputs["basicAuthId"] = state ? state.basicAuthId : undefined;
            resourceInputs["certificateId"] = state ? state.certificateId : undefined;
            resourceInputs["clientCertificateId"] = state ? state.clientCertificateId : undefined;
            resourceInputs["clientCertificateIds"] = state ? state.clientCertificateIds : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["gaapAuth"] = state ? state.gaapAuth : undefined;
            resourceInputs["gaapAuthId"] = state ? state.gaapAuthId : undefined;
            resourceInputs["listenerId"] = state ? state.listenerId : undefined;
            resourceInputs["realserverAuth"] = state ? state.realserverAuth : undefined;
            resourceInputs["realserverCertificateDomain"] = state ? state.realserverCertificateDomain : undefined;
            resourceInputs["realserverCertificateId"] = state ? state.realserverCertificateId : undefined;
            resourceInputs["realserverCertificateIds"] = state ? state.realserverCertificateIds : undefined;
        } else {
            const args = argsOrState as GaapHttpDomainArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.listenerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listenerId'");
            }
            resourceInputs["basicAuth"] = args ? args.basicAuth : undefined;
            resourceInputs["basicAuthId"] = args ? args.basicAuthId : undefined;
            resourceInputs["certificateId"] = args ? args.certificateId : undefined;
            resourceInputs["clientCertificateId"] = args ? args.clientCertificateId : undefined;
            resourceInputs["clientCertificateIds"] = args ? args.clientCertificateIds : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["gaapAuth"] = args ? args.gaapAuth : undefined;
            resourceInputs["gaapAuthId"] = args ? args.gaapAuthId : undefined;
            resourceInputs["listenerId"] = args ? args.listenerId : undefined;
            resourceInputs["realserverAuth"] = args ? args.realserverAuth : undefined;
            resourceInputs["realserverCertificateDomain"] = args ? args.realserverCertificateDomain : undefined;
            resourceInputs["realserverCertificateId"] = args ? args.realserverCertificateId : undefined;
            resourceInputs["realserverCertificateIds"] = args ? args.realserverCertificateIds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GaapHttpDomain.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GaapHttpDomain resources.
 */
export interface GaapHttpDomainState {
    /**
     * Indicates whether basic authentication is enable, default value is `false`.
     */
    basicAuth?: pulumi.Input<boolean>;
    /**
     * ID of the basic authentication.
     */
    basicAuthId?: pulumi.Input<string>;
    /**
     * ID of the server certificate, default value is `default`.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * ID of the client certificate, default value is `default`.
     *
     * @deprecated Deprecated
     */
    clientCertificateId?: pulumi.Input<string>;
    /**
     * ID list of the poly client certificate.
     */
    clientCertificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Forward domain of the layer7 listener.
     */
    domain?: pulumi.Input<string>;
    /**
     * Indicates whether SSL certificate authentication is enable, default value is `false`.
     */
    gaapAuth?: pulumi.Input<boolean>;
    /**
     * ID of the SSL certificate.
     */
    gaapAuthId?: pulumi.Input<string>;
    /**
     * ID of the layer7 listener.
     */
    listenerId?: pulumi.Input<string>;
    /**
     * Indicates whether realserver authentication is enable, default value is `false`.
     */
    realserverAuth?: pulumi.Input<boolean>;
    /**
     * CA certificate domain of the realserver. It has been deprecated.
     */
    realserverCertificateDomain?: pulumi.Input<string>;
    /**
     * CA certificate ID of the realserver.
     *
     * @deprecated Deprecated
     */
    realserverCertificateId?: pulumi.Input<string>;
    /**
     * CA certificate ID list of the realserver.
     */
    realserverCertificateIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a GaapHttpDomain resource.
 */
export interface GaapHttpDomainArgs {
    /**
     * Indicates whether basic authentication is enable, default value is `false`.
     */
    basicAuth?: pulumi.Input<boolean>;
    /**
     * ID of the basic authentication.
     */
    basicAuthId?: pulumi.Input<string>;
    /**
     * ID of the server certificate, default value is `default`.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * ID of the client certificate, default value is `default`.
     *
     * @deprecated Deprecated
     */
    clientCertificateId?: pulumi.Input<string>;
    /**
     * ID list of the poly client certificate.
     */
    clientCertificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Forward domain of the layer7 listener.
     */
    domain: pulumi.Input<string>;
    /**
     * Indicates whether SSL certificate authentication is enable, default value is `false`.
     */
    gaapAuth?: pulumi.Input<boolean>;
    /**
     * ID of the SSL certificate.
     */
    gaapAuthId?: pulumi.Input<string>;
    /**
     * ID of the layer7 listener.
     */
    listenerId: pulumi.Input<string>;
    /**
     * Indicates whether realserver authentication is enable, default value is `false`.
     */
    realserverAuth?: pulumi.Input<boolean>;
    /**
     * CA certificate domain of the realserver. It has been deprecated.
     */
    realserverCertificateDomain?: pulumi.Input<string>;
    /**
     * CA certificate ID of the realserver.
     *
     * @deprecated Deprecated
     */
    realserverCertificateId?: pulumi.Input<string>;
    /**
     * CA certificate ID list of the realserver.
     */
    realserverCertificateIds?: pulumi.Input<pulumi.Input<string>[]>;
}
