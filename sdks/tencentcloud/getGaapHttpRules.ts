// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGaapHttpRules(args: GetGaapHttpRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetGaapHttpRulesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getGaapHttpRules:getGaapHttpRules", {
        "domain": args.domain,
        "forwardHost": args.forwardHost,
        "id": args.id,
        "listenerId": args.listenerId,
        "path": args.path,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGaapHttpRules.
 */
export interface GetGaapHttpRulesArgs {
    domain?: string;
    forwardHost?: string;
    id?: string;
    listenerId: string;
    path?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getGaapHttpRules.
 */
export interface GetGaapHttpRulesResult {
    readonly domain?: string;
    readonly forwardHost?: string;
    readonly id: string;
    readonly listenerId: string;
    readonly path?: string;
    readonly resultOutputFile?: string;
    readonly rules: outputs.GetGaapHttpRulesRule[];
}
export function getGaapHttpRulesOutput(args: GetGaapHttpRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGaapHttpRulesResult> {
    return pulumi.output(args).apply((a: any) => getGaapHttpRules(a, opts))
}

/**
 * A collection of arguments for invoking getGaapHttpRules.
 */
export interface GetGaapHttpRulesOutputArgs {
    domain?: pulumi.Input<string>;
    forwardHost?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    listenerId: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
