// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMariadbPrice(args: GetMariadbPriceArgs, opts?: pulumi.InvokeOptions): Promise<GetMariadbPriceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getMariadbPrice:getMariadbPrice", {
        "amountUnit": args.amountUnit,
        "buyCount": args.buyCount,
        "id": args.id,
        "memory": args.memory,
        "nodeCount": args.nodeCount,
        "paymode": args.paymode,
        "period": args.period,
        "resultOutputFile": args.resultOutputFile,
        "storage": args.storage,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMariadbPrice.
 */
export interface GetMariadbPriceArgs {
    amountUnit?: string;
    buyCount: number;
    id?: string;
    memory: number;
    nodeCount: number;
    paymode?: string;
    period?: number;
    resultOutputFile?: string;
    storage: number;
    zone: string;
}

/**
 * A collection of values returned by getMariadbPrice.
 */
export interface GetMariadbPriceResult {
    readonly amountUnit?: string;
    readonly buyCount: number;
    readonly id: string;
    readonly memory: number;
    readonly nodeCount: number;
    readonly originalPrice: number;
    readonly paymode?: string;
    readonly period?: number;
    readonly price: number;
    readonly resultOutputFile?: string;
    readonly storage: number;
    readonly zone: string;
}
export function getMariadbPriceOutput(args: GetMariadbPriceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMariadbPriceResult> {
    return pulumi.output(args).apply((a: any) => getMariadbPrice(a, opts))
}

/**
 * A collection of arguments for invoking getMariadbPrice.
 */
export interface GetMariadbPriceOutputArgs {
    amountUnit?: pulumi.Input<string>;
    buyCount: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    memory: pulumi.Input<number>;
    nodeCount: pulumi.Input<number>;
    paymode?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    resultOutputFile?: pulumi.Input<string>;
    storage: pulumi.Input<number>;
    zone: pulumi.Input<string>;
}
