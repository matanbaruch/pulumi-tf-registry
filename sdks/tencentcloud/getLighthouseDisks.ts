// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLighthouseDisks(args?: GetLighthouseDisksArgs, opts?: pulumi.InvokeOptions): Promise<GetLighthouseDisksResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getLighthouseDisks:getLighthouseDisks", {
        "diskIds": args.diskIds,
        "filters": args.filters,
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLighthouseDisks.
 */
export interface GetLighthouseDisksArgs {
    diskIds?: string[];
    filters?: inputs.GetLighthouseDisksFilter[];
    id?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getLighthouseDisks.
 */
export interface GetLighthouseDisksResult {
    readonly diskIds?: string[];
    readonly diskLists: outputs.GetLighthouseDisksDiskList[];
    readonly filters?: outputs.GetLighthouseDisksFilter[];
    readonly id: string;
    readonly resultOutputFile?: string;
}
export function getLighthouseDisksOutput(args?: GetLighthouseDisksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLighthouseDisksResult> {
    return pulumi.output(args).apply((a: any) => getLighthouseDisks(a, opts))
}

/**
 * A collection of arguments for invoking getLighthouseDisks.
 */
export interface GetLighthouseDisksOutputArgs {
    diskIds?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetLighthouseDisksFilterArgs>[]>;
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
