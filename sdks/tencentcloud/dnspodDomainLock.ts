// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DnspodDomainLock extends pulumi.CustomResource {
    /**
     * Get an existing DnspodDomainLock resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnspodDomainLockState, opts?: pulumi.CustomResourceOptions): DnspodDomainLock {
        return new DnspodDomainLock(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/dnspodDomainLock:DnspodDomainLock';

    /**
     * Returns true if the given object is an instance of DnspodDomainLock.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DnspodDomainLock {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DnspodDomainLock.__pulumiType;
    }

    /**
     * Domain name.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * Domain unlock code, can be obtained through the ModifyDomainLock interface.
     */
    public /*out*/ readonly lockCode!: pulumi.Output<string>;
    /**
     * The number of max days to lock the domain+ Old packages: D_FREE 30 days, D_PLUS 90 days, D_EXTRA 30 days, D_EXPERT 60
     * days, D_ULTRA 365 days+ New packages: DP_FREE 365 days, DP_PLUS 365 days, DP_EXTRA 365 days, DP_EXPERT 365 days,
     * DP_ULTRA 365 days.
     */
    public readonly lockDays!: pulumi.Output<number>;

    /**
     * Create a DnspodDomainLock resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnspodDomainLockArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DnspodDomainLockArgs | DnspodDomainLockState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DnspodDomainLockState | undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["lockCode"] = state ? state.lockCode : undefined;
            resourceInputs["lockDays"] = state ? state.lockDays : undefined;
        } else {
            const args = argsOrState as DnspodDomainLockArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.lockDays === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lockDays'");
            }
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["lockDays"] = args ? args.lockDays : undefined;
            resourceInputs["lockCode"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DnspodDomainLock.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DnspodDomainLock resources.
 */
export interface DnspodDomainLockState {
    /**
     * Domain name.
     */
    domain?: pulumi.Input<string>;
    /**
     * Domain unlock code, can be obtained through the ModifyDomainLock interface.
     */
    lockCode?: pulumi.Input<string>;
    /**
     * The number of max days to lock the domain+ Old packages: D_FREE 30 days, D_PLUS 90 days, D_EXTRA 30 days, D_EXPERT 60
     * days, D_ULTRA 365 days+ New packages: DP_FREE 365 days, DP_PLUS 365 days, DP_EXTRA 365 days, DP_EXPERT 365 days,
     * DP_ULTRA 365 days.
     */
    lockDays?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DnspodDomainLock resource.
 */
export interface DnspodDomainLockArgs {
    /**
     * Domain name.
     */
    domain: pulumi.Input<string>;
    /**
     * The number of max days to lock the domain+ Old packages: D_FREE 30 days, D_PLUS 90 days, D_EXTRA 30 days, D_EXPERT 60
     * days, D_ULTRA 365 days+ New packages: DP_FREE 365 days, DP_PLUS 365 days, DP_EXTRA 365 days, DP_EXPERT 365 days,
     * DP_ULTRA 365 days.
     */
    lockDays: pulumi.Input<number>;
}
