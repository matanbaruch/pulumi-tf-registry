// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMonitorAlarmBasicMetric(args: GetMonitorAlarmBasicMetricArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitorAlarmBasicMetricResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getMonitorAlarmBasicMetric:getMonitorAlarmBasicMetric", {
        "dimensions": args.dimensions,
        "id": args.id,
        "metricName": args.metricName,
        "namespace": args.namespace,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonitorAlarmBasicMetric.
 */
export interface GetMonitorAlarmBasicMetricArgs {
    dimensions?: string[];
    id?: string;
    metricName?: string;
    namespace: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getMonitorAlarmBasicMetric.
 */
export interface GetMonitorAlarmBasicMetricResult {
    readonly dimensions?: string[];
    readonly id: string;
    readonly metricName?: string;
    readonly metricSets: outputs.GetMonitorAlarmBasicMetricMetricSet[];
    readonly namespace: string;
    readonly resultOutputFile?: string;
}
export function getMonitorAlarmBasicMetricOutput(args: GetMonitorAlarmBasicMetricOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitorAlarmBasicMetricResult> {
    return pulumi.output(args).apply((a: any) => getMonitorAlarmBasicMetric(a, opts))
}

/**
 * A collection of arguments for invoking getMonitorAlarmBasicMetric.
 */
export interface GetMonitorAlarmBasicMetricOutputArgs {
    dimensions?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    metricName?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
