// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMariadbUpgradePrice(args: GetMariadbUpgradePriceArgs, opts?: pulumi.InvokeOptions): Promise<GetMariadbUpgradePriceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getMariadbUpgradePrice:getMariadbUpgradePrice", {
        "amountUnit": args.amountUnit,
        "id": args.id,
        "instanceId": args.instanceId,
        "memory": args.memory,
        "nodeCount": args.nodeCount,
        "resultOutputFile": args.resultOutputFile,
        "storage": args.storage,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMariadbUpgradePrice.
 */
export interface GetMariadbUpgradePriceArgs {
    amountUnit?: string;
    id?: string;
    instanceId: string;
    memory: number;
    nodeCount?: number;
    resultOutputFile?: string;
    storage: number;
}

/**
 * A collection of values returned by getMariadbUpgradePrice.
 */
export interface GetMariadbUpgradePriceResult {
    readonly amountUnit?: string;
    readonly formula: string;
    readonly id: string;
    readonly instanceId: string;
    readonly memory: number;
    readonly nodeCount?: number;
    readonly originalPrice: number;
    readonly price: number;
    readonly resultOutputFile?: string;
    readonly storage: number;
}
export function getMariadbUpgradePriceOutput(args: GetMariadbUpgradePriceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMariadbUpgradePriceResult> {
    return pulumi.output(args).apply((a: any) => getMariadbUpgradePrice(a, opts))
}

/**
 * A collection of arguments for invoking getMariadbUpgradePrice.
 */
export interface GetMariadbUpgradePriceOutputArgs {
    amountUnit?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    memory: pulumi.Input<number>;
    nodeCount?: pulumi.Input<number>;
    resultOutputFile?: pulumi.Input<string>;
    storage: pulumi.Input<number>;
}
