// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMonitorAlarmMonitorType(args?: GetMonitorAlarmMonitorTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitorAlarmMonitorTypeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getMonitorAlarmMonitorType:getMonitorAlarmMonitorType", {
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonitorAlarmMonitorType.
 */
export interface GetMonitorAlarmMonitorTypeArgs {
    id?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getMonitorAlarmMonitorType.
 */
export interface GetMonitorAlarmMonitorTypeResult {
    readonly id: string;
    readonly monitorTypeInfos: outputs.GetMonitorAlarmMonitorTypeMonitorTypeInfo[];
    readonly monitorTypes: string[];
    readonly resultOutputFile?: string;
}
export function getMonitorAlarmMonitorTypeOutput(args?: GetMonitorAlarmMonitorTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitorAlarmMonitorTypeResult> {
    return pulumi.output(args).apply((a: any) => getMonitorAlarmMonitorType(a, opts))
}

/**
 * A collection of arguments for invoking getMonitorAlarmMonitorType.
 */
export interface GetMonitorAlarmMonitorTypeOutputArgs {
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
