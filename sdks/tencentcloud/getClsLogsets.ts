// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getClsLogsets(args?: GetClsLogsetsArgs, opts?: pulumi.InvokeOptions): Promise<GetClsLogsetsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getClsLogsets:getClsLogsets", {
        "filters": args.filters,
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getClsLogsets.
 */
export interface GetClsLogsetsArgs {
    filters?: inputs.GetClsLogsetsFilter[];
    id?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getClsLogsets.
 */
export interface GetClsLogsetsResult {
    readonly filters?: outputs.GetClsLogsetsFilter[];
    readonly id: string;
    readonly logsets: outputs.GetClsLogsetsLogset[];
    readonly resultOutputFile?: string;
}
export function getClsLogsetsOutput(args?: GetClsLogsetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClsLogsetsResult> {
    return pulumi.output(args).apply((a: any) => getClsLogsets(a, opts))
}

/**
 * A collection of arguments for invoking getClsLogsets.
 */
export interface GetClsLogsetsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetClsLogsetsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
