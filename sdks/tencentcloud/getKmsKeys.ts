// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKmsKeys(args?: GetKmsKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetKmsKeysResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getKmsKeys:getKmsKeys", {
        "id": args.id,
        "keyState": args.keyState,
        "keyUsage": args.keyUsage,
        "orderType": args.orderType,
        "origin": args.origin,
        "resultOutputFile": args.resultOutputFile,
        "role": args.role,
        "searchKeyAlias": args.searchKeyAlias,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsKeys.
 */
export interface GetKmsKeysArgs {
    id?: string;
    keyState?: number;
    keyUsage?: string;
    orderType?: number;
    origin?: string;
    resultOutputFile?: string;
    role?: number;
    searchKeyAlias?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getKmsKeys.
 */
export interface GetKmsKeysResult {
    readonly id: string;
    readonly keyLists: outputs.GetKmsKeysKeyList[];
    readonly keyState?: number;
    readonly keyUsage?: string;
    readonly orderType?: number;
    readonly origin?: string;
    readonly resultOutputFile?: string;
    readonly role?: number;
    readonly searchKeyAlias?: string;
    readonly tags?: {[key: string]: string};
}
export function getKmsKeysOutput(args?: GetKmsKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKmsKeysResult> {
    return pulumi.output(args).apply((a: any) => getKmsKeys(a, opts))
}

/**
 * A collection of arguments for invoking getKmsKeys.
 */
export interface GetKmsKeysOutputArgs {
    id?: pulumi.Input<string>;
    keyState?: pulumi.Input<number>;
    keyUsage?: pulumi.Input<string>;
    orderType?: pulumi.Input<number>;
    origin?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    role?: pulumi.Input<number>;
    searchKeyAlias?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
