// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ipv6AddressBandwidth extends pulumi.CustomResource {
    /**
     * Get an existing Ipv6AddressBandwidth resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ipv6AddressBandwidthState, opts?: pulumi.CustomResourceOptions): Ipv6AddressBandwidth {
        return new Ipv6AddressBandwidth(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/ipv6AddressBandwidth:Ipv6AddressBandwidth';

    /**
     * Returns true if the given object is an instance of Ipv6AddressBandwidth.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ipv6AddressBandwidth {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ipv6AddressBandwidth.__pulumiType;
    }

    /**
     * The bandwidth package id, the Legacy account and the ipv6 address to apply for the bandwidth package charge type need to
     * be passed in.
     */
    public readonly bandwidthPackageId!: pulumi.Output<string | undefined>;
    /**
     * Network billing mode. IPV6 currently supports: `TRAFFIC_POSTPAID_BY_HOUR`, for standard account types;
     * `BANDWIDTH_PACKAGE`, for traditional account types. The default network billing mode is: `TRAFFIC_POSTPAID_BY_HOUR`.
     */
    public readonly internetChargeType!: pulumi.Output<string | undefined>;
    /**
     * Bandwidth, in Mbps. The default is 1Mbps.
     */
    public readonly internetMaxBandwidthOut!: pulumi.Output<number | undefined>;
    /**
     * IPV6 address that needs to be enabled for public network access.
     */
    public readonly ipv6Address!: pulumi.Output<string>;

    /**
     * Create a Ipv6AddressBandwidth resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ipv6AddressBandwidthArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ipv6AddressBandwidthArgs | Ipv6AddressBandwidthState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ipv6AddressBandwidthState | undefined;
            resourceInputs["bandwidthPackageId"] = state ? state.bandwidthPackageId : undefined;
            resourceInputs["internetChargeType"] = state ? state.internetChargeType : undefined;
            resourceInputs["internetMaxBandwidthOut"] = state ? state.internetMaxBandwidthOut : undefined;
            resourceInputs["ipv6Address"] = state ? state.ipv6Address : undefined;
        } else {
            const args = argsOrState as Ipv6AddressBandwidthArgs | undefined;
            if ((!args || args.ipv6Address === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipv6Address'");
            }
            resourceInputs["bandwidthPackageId"] = args ? args.bandwidthPackageId : undefined;
            resourceInputs["internetChargeType"] = args ? args.internetChargeType : undefined;
            resourceInputs["internetMaxBandwidthOut"] = args ? args.internetMaxBandwidthOut : undefined;
            resourceInputs["ipv6Address"] = args ? args.ipv6Address : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ipv6AddressBandwidth.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ipv6AddressBandwidth resources.
 */
export interface Ipv6AddressBandwidthState {
    /**
     * The bandwidth package id, the Legacy account and the ipv6 address to apply for the bandwidth package charge type need to
     * be passed in.
     */
    bandwidthPackageId?: pulumi.Input<string>;
    /**
     * Network billing mode. IPV6 currently supports: `TRAFFIC_POSTPAID_BY_HOUR`, for standard account types;
     * `BANDWIDTH_PACKAGE`, for traditional account types. The default network billing mode is: `TRAFFIC_POSTPAID_BY_HOUR`.
     */
    internetChargeType?: pulumi.Input<string>;
    /**
     * Bandwidth, in Mbps. The default is 1Mbps.
     */
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * IPV6 address that needs to be enabled for public network access.
     */
    ipv6Address?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ipv6AddressBandwidth resource.
 */
export interface Ipv6AddressBandwidthArgs {
    /**
     * The bandwidth package id, the Legacy account and the ipv6 address to apply for the bandwidth package charge type need to
     * be passed in.
     */
    bandwidthPackageId?: pulumi.Input<string>;
    /**
     * Network billing mode. IPV6 currently supports: `TRAFFIC_POSTPAID_BY_HOUR`, for standard account types;
     * `BANDWIDTH_PACKAGE`, for traditional account types. The default network billing mode is: `TRAFFIC_POSTPAID_BY_HOUR`.
     */
    internetChargeType?: pulumi.Input<string>;
    /**
     * Bandwidth, in Mbps. The default is 1Mbps.
     */
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * IPV6 address that needs to be enabled for public network access.
     */
    ipv6Address: pulumi.Input<string>;
}
