// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getScfFunctionAliases(args: GetScfFunctionAliasesArgs, opts?: pulumi.InvokeOptions): Promise<GetScfFunctionAliasesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getScfFunctionAliases:getScfFunctionAliases", {
        "functionName": args.functionName,
        "functionVersion": args.functionVersion,
        "id": args.id,
        "namespace": args.namespace,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getScfFunctionAliases.
 */
export interface GetScfFunctionAliasesArgs {
    functionName: string;
    functionVersion?: string;
    id?: string;
    namespace?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getScfFunctionAliases.
 */
export interface GetScfFunctionAliasesResult {
    readonly aliases: outputs.GetScfFunctionAliasesAlias[];
    readonly functionName: string;
    readonly functionVersion?: string;
    readonly id: string;
    readonly namespace?: string;
    readonly resultOutputFile?: string;
}
export function getScfFunctionAliasesOutput(args: GetScfFunctionAliasesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScfFunctionAliasesResult> {
    return pulumi.output(args).apply((a: any) => getScfFunctionAliases(a, opts))
}

/**
 * A collection of arguments for invoking getScfFunctionAliases.
 */
export interface GetScfFunctionAliasesOutputArgs {
    functionName: pulumi.Input<string>;
    functionVersion?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
