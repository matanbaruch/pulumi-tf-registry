// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CvmChcConfig extends pulumi.CustomResource {
    /**
     * Get an existing CvmChcConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CvmChcConfigState, opts?: pulumi.CustomResourceOptions): CvmChcConfig {
        return new CvmChcConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/cvmChcConfig:CvmChcConfig';

    /**
     * Returns true if the given object is an instance of CvmChcConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CvmChcConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CvmChcConfig.__pulumiType;
    }

    /**
     * Out-of-band network security group list.
     */
    public readonly bmcSecurityGroupIds!: pulumi.Output<string[]>;
    /**
     * Valid characters: Letters, numbers, hyphens and underscores. Only set when update password.
     */
    public readonly bmcUser!: pulumi.Output<string | undefined>;
    /**
     * Out-of-band network information.
     */
    public readonly bmcVirtualPrivateCloud!: pulumi.Output<outputs.CvmChcConfigBmcVirtualPrivateCloud | undefined>;
    /**
     * CHC host ID.
     */
    public readonly chcId!: pulumi.Output<string>;
    /**
     * Deployment network security group list.
     */
    public readonly deploySecurityGroupIds!: pulumi.Output<string[]>;
    /**
     * Deployment network information.
     */
    public readonly deployVirtualPrivateCloud!: pulumi.Output<outputs.CvmChcConfigDeployVirtualPrivateCloud | undefined>;
    /**
     * Server type.
     */
    public readonly deviceType!: pulumi.Output<string>;
    /**
     * CHC host name.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * The password can contain 8 to 16 characters, including letters, numbers and special symbols
     * (()`~!@#$%^&amp;amp;*-+=_|{}).
     */
    public readonly password!: pulumi.Output<string | undefined>;

    /**
     * Create a CvmChcConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CvmChcConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CvmChcConfigArgs | CvmChcConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CvmChcConfigState | undefined;
            resourceInputs["bmcSecurityGroupIds"] = state ? state.bmcSecurityGroupIds : undefined;
            resourceInputs["bmcUser"] = state ? state.bmcUser : undefined;
            resourceInputs["bmcVirtualPrivateCloud"] = state ? state.bmcVirtualPrivateCloud : undefined;
            resourceInputs["chcId"] = state ? state.chcId : undefined;
            resourceInputs["deploySecurityGroupIds"] = state ? state.deploySecurityGroupIds : undefined;
            resourceInputs["deployVirtualPrivateCloud"] = state ? state.deployVirtualPrivateCloud : undefined;
            resourceInputs["deviceType"] = state ? state.deviceType : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
        } else {
            const args = argsOrState as CvmChcConfigArgs | undefined;
            if ((!args || args.chcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'chcId'");
            }
            resourceInputs["bmcSecurityGroupIds"] = args ? args.bmcSecurityGroupIds : undefined;
            resourceInputs["bmcUser"] = args ? args.bmcUser : undefined;
            resourceInputs["bmcVirtualPrivateCloud"] = args ? args.bmcVirtualPrivateCloud : undefined;
            resourceInputs["chcId"] = args ? args.chcId : undefined;
            resourceInputs["deploySecurityGroupIds"] = args ? args.deploySecurityGroupIds : undefined;
            resourceInputs["deployVirtualPrivateCloud"] = args ? args.deployVirtualPrivateCloud : undefined;
            resourceInputs["deviceType"] = args ? args.deviceType : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CvmChcConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CvmChcConfig resources.
 */
export interface CvmChcConfigState {
    /**
     * Out-of-band network security group list.
     */
    bmcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Valid characters: Letters, numbers, hyphens and underscores. Only set when update password.
     */
    bmcUser?: pulumi.Input<string>;
    /**
     * Out-of-band network information.
     */
    bmcVirtualPrivateCloud?: pulumi.Input<inputs.CvmChcConfigBmcVirtualPrivateCloud>;
    /**
     * CHC host ID.
     */
    chcId?: pulumi.Input<string>;
    /**
     * Deployment network security group list.
     */
    deploySecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Deployment network information.
     */
    deployVirtualPrivateCloud?: pulumi.Input<inputs.CvmChcConfigDeployVirtualPrivateCloud>;
    /**
     * Server type.
     */
    deviceType?: pulumi.Input<string>;
    /**
     * CHC host name.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The password can contain 8 to 16 characters, including letters, numbers and special symbols
     * (()`~!@#$%^&amp;amp;*-+=_|{}).
     */
    password?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CvmChcConfig resource.
 */
export interface CvmChcConfigArgs {
    /**
     * Out-of-band network security group list.
     */
    bmcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Valid characters: Letters, numbers, hyphens and underscores. Only set when update password.
     */
    bmcUser?: pulumi.Input<string>;
    /**
     * Out-of-band network information.
     */
    bmcVirtualPrivateCloud?: pulumi.Input<inputs.CvmChcConfigBmcVirtualPrivateCloud>;
    /**
     * CHC host ID.
     */
    chcId: pulumi.Input<string>;
    /**
     * Deployment network security group list.
     */
    deploySecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Deployment network information.
     */
    deployVirtualPrivateCloud?: pulumi.Input<inputs.CvmChcConfigDeployVirtualPrivateCloud>;
    /**
     * Server type.
     */
    deviceType?: pulumi.Input<string>;
    /**
     * CHC host name.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The password can contain 8 to 16 characters, including letters, numbers and special symbols
     * (()`~!@#$%^&amp;amp;*-+=_|{}).
     */
    password?: pulumi.Input<string>;
}
