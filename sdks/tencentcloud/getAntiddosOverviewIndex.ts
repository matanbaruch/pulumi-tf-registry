// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAntiddosOverviewIndex(args: GetAntiddosOverviewIndexArgs, opts?: pulumi.InvokeOptions): Promise<GetAntiddosOverviewIndexResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getAntiddosOverviewIndex:getAntiddosOverviewIndex", {
        "endTime": args.endTime,
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
        "startTime": args.startTime,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAntiddosOverviewIndex.
 */
export interface GetAntiddosOverviewIndexArgs {
    endTime: string;
    id?: string;
    resultOutputFile?: string;
    startTime: string;
}

/**
 * A collection of values returned by getAntiddosOverviewIndex.
 */
export interface GetAntiddosOverviewIndexResult {
    readonly allIpCount: number;
    readonly antiddosDomainCount: number;
    readonly antiddosIpCount: number;
    readonly attackDomainCount: number;
    readonly attackIpCount: number;
    readonly blockIpCount: number;
    readonly endTime: string;
    readonly id: string;
    readonly maxAttackFlow: number;
    readonly newAttackIp: string;
    readonly newAttackTime: string;
    readonly newAttackType: string;
    readonly resultOutputFile?: string;
    readonly startTime: string;
}
export function getAntiddosOverviewIndexOutput(args: GetAntiddosOverviewIndexOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAntiddosOverviewIndexResult> {
    return pulumi.output(args).apply((a: any) => getAntiddosOverviewIndex(a, opts))
}

/**
 * A collection of arguments for invoking getAntiddosOverviewIndex.
 */
export interface GetAntiddosOverviewIndexOutputArgs {
    endTime: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
}
