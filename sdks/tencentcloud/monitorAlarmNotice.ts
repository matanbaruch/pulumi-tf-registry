// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MonitorAlarmNotice extends pulumi.CustomResource {
    /**
     * Get an existing MonitorAlarmNotice resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MonitorAlarmNoticeState, opts?: pulumi.CustomResourceOptions): MonitorAlarmNotice {
        return new MonitorAlarmNotice(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/monitorAlarmNotice:MonitorAlarmNotice';

    /**
     * Returns true if the given object is an instance of MonitorAlarmNotice.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MonitorAlarmNotice {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MonitorAlarmNotice.__pulumiType;
    }

    /**
     * Amp consumer ID.
     */
    public /*out*/ readonly ampConsumerId!: pulumi.Output<string>;
    /**
     * A maximum of one alarm notification can be pushed to the CLS service.
     */
    public readonly clsNotices!: pulumi.Output<outputs.MonitorAlarmNoticeClsNotice[] | undefined>;
    /**
     * Whether it is the system default notification template 0=No 1=Yes.
     */
    public /*out*/ readonly isPreset!: pulumi.Output<number>;
    /**
     * Notification template name within 60.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notification language zh-CN=Chinese en-US=English.
     */
    public readonly noticeLanguage!: pulumi.Output<string>;
    /**
     * Alarm notification type ALARM=Notification not restored OK=Notification restored ALL.
     */
    public readonly noticeType!: pulumi.Output<string>;
    /**
     * List of alarm policy IDs bound to the alarm notification template.
     */
    public /*out*/ readonly policyIds!: pulumi.Output<string[]>;
    /**
     * Last modified time.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * Last Modified By.
     */
    public /*out*/ readonly updatedBy!: pulumi.Output<string>;
    /**
     * The maximum number of callback notifications is 3.
     */
    public readonly urlNotices!: pulumi.Output<outputs.MonitorAlarmNoticeUrlNotice[] | undefined>;
    /**
     * Alarm notification template list.(At most five).
     */
    public readonly userNotices!: pulumi.Output<outputs.MonitorAlarmNoticeUserNotice[] | undefined>;

    /**
     * Create a MonitorAlarmNotice resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MonitorAlarmNoticeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MonitorAlarmNoticeArgs | MonitorAlarmNoticeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MonitorAlarmNoticeState | undefined;
            resourceInputs["ampConsumerId"] = state ? state.ampConsumerId : undefined;
            resourceInputs["clsNotices"] = state ? state.clsNotices : undefined;
            resourceInputs["isPreset"] = state ? state.isPreset : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["noticeLanguage"] = state ? state.noticeLanguage : undefined;
            resourceInputs["noticeType"] = state ? state.noticeType : undefined;
            resourceInputs["policyIds"] = state ? state.policyIds : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
            resourceInputs["urlNotices"] = state ? state.urlNotices : undefined;
            resourceInputs["userNotices"] = state ? state.userNotices : undefined;
        } else {
            const args = argsOrState as MonitorAlarmNoticeArgs | undefined;
            if ((!args || args.noticeLanguage === undefined) && !opts.urn) {
                throw new Error("Missing required property 'noticeLanguage'");
            }
            if ((!args || args.noticeType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'noticeType'");
            }
            resourceInputs["clsNotices"] = args ? args.clsNotices : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["noticeLanguage"] = args ? args.noticeLanguage : undefined;
            resourceInputs["noticeType"] = args ? args.noticeType : undefined;
            resourceInputs["urlNotices"] = args ? args.urlNotices : undefined;
            resourceInputs["userNotices"] = args ? args.userNotices : undefined;
            resourceInputs["ampConsumerId"] = undefined /*out*/;
            resourceInputs["isPreset"] = undefined /*out*/;
            resourceInputs["policyIds"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["updatedBy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MonitorAlarmNotice.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MonitorAlarmNotice resources.
 */
export interface MonitorAlarmNoticeState {
    /**
     * Amp consumer ID.
     */
    ampConsumerId?: pulumi.Input<string>;
    /**
     * A maximum of one alarm notification can be pushed to the CLS service.
     */
    clsNotices?: pulumi.Input<pulumi.Input<inputs.MonitorAlarmNoticeClsNotice>[]>;
    /**
     * Whether it is the system default notification template 0=No 1=Yes.
     */
    isPreset?: pulumi.Input<number>;
    /**
     * Notification template name within 60.
     */
    name?: pulumi.Input<string>;
    /**
     * Notification language zh-CN=Chinese en-US=English.
     */
    noticeLanguage?: pulumi.Input<string>;
    /**
     * Alarm notification type ALARM=Notification not restored OK=Notification restored ALL.
     */
    noticeType?: pulumi.Input<string>;
    /**
     * List of alarm policy IDs bound to the alarm notification template.
     */
    policyIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Last modified time.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * Last Modified By.
     */
    updatedBy?: pulumi.Input<string>;
    /**
     * The maximum number of callback notifications is 3.
     */
    urlNotices?: pulumi.Input<pulumi.Input<inputs.MonitorAlarmNoticeUrlNotice>[]>;
    /**
     * Alarm notification template list.(At most five).
     */
    userNotices?: pulumi.Input<pulumi.Input<inputs.MonitorAlarmNoticeUserNotice>[]>;
}

/**
 * The set of arguments for constructing a MonitorAlarmNotice resource.
 */
export interface MonitorAlarmNoticeArgs {
    /**
     * A maximum of one alarm notification can be pushed to the CLS service.
     */
    clsNotices?: pulumi.Input<pulumi.Input<inputs.MonitorAlarmNoticeClsNotice>[]>;
    /**
     * Notification template name within 60.
     */
    name?: pulumi.Input<string>;
    /**
     * Notification language zh-CN=Chinese en-US=English.
     */
    noticeLanguage: pulumi.Input<string>;
    /**
     * Alarm notification type ALARM=Notification not restored OK=Notification restored ALL.
     */
    noticeType: pulumi.Input<string>;
    /**
     * The maximum number of callback notifications is 3.
     */
    urlNotices?: pulumi.Input<pulumi.Input<inputs.MonitorAlarmNoticeUrlNotice>[]>;
    /**
     * Alarm notification template list.(At most five).
     */
    userNotices?: pulumi.Input<pulumi.Input<inputs.MonitorAlarmNoticeUserNotice>[]>;
}
