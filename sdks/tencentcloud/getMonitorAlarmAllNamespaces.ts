// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMonitorAlarmAllNamespaces(args: GetMonitorAlarmAllNamespacesArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitorAlarmAllNamespacesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getMonitorAlarmAllNamespaces:getMonitorAlarmAllNamespaces", {
        "id": args.id,
        "ids": args.ids,
        "module": args.module,
        "monitorTypes": args.monitorTypes,
        "resultOutputFile": args.resultOutputFile,
        "sceneType": args.sceneType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonitorAlarmAllNamespaces.
 */
export interface GetMonitorAlarmAllNamespacesArgs {
    id?: string;
    ids?: string[];
    module: string;
    monitorTypes?: string[];
    resultOutputFile?: string;
    sceneType: string;
}

/**
 * A collection of values returned by getMonitorAlarmAllNamespaces.
 */
export interface GetMonitorAlarmAllNamespacesResult {
    readonly commonNamespaces: outputs.GetMonitorAlarmAllNamespacesCommonNamespace[];
    readonly customNamespacesNews: outputs.GetMonitorAlarmAllNamespacesCustomNamespacesNews[];
    readonly id: string;
    readonly ids?: string[];
    readonly module: string;
    readonly monitorTypes?: string[];
    readonly qceNamespacesNews: outputs.GetMonitorAlarmAllNamespacesQceNamespacesNews[];
    readonly resultOutputFile?: string;
    readonly sceneType: string;
}
export function getMonitorAlarmAllNamespacesOutput(args: GetMonitorAlarmAllNamespacesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitorAlarmAllNamespacesResult> {
    return pulumi.output(args).apply((a: any) => getMonitorAlarmAllNamespaces(a, opts))
}

/**
 * A collection of arguments for invoking getMonitorAlarmAllNamespaces.
 */
export interface GetMonitorAlarmAllNamespacesOutputArgs {
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    module: pulumi.Input<string>;
    monitorTypes?: pulumi.Input<pulumi.Input<string>[]>;
    resultOutputFile?: pulumi.Input<string>;
    sceneType: pulumi.Input<string>;
}
