// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DnspodDomainAlias extends pulumi.CustomResource {
    /**
     * Get an existing DnspodDomainAlias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnspodDomainAliasState, opts?: pulumi.CustomResourceOptions): DnspodDomainAlias {
        return new DnspodDomainAlias(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/dnspodDomainAlias:DnspodDomainAlias';

    /**
     * Returns true if the given object is an instance of DnspodDomainAlias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DnspodDomainAlias {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DnspodDomainAlias.__pulumiType;
    }

    /**
     * Domain.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * Domain alias.
     */
    public readonly domainAlias!: pulumi.Output<string>;
    /**
     * Domain alias ID.
     */
    public /*out*/ readonly domainAliasId!: pulumi.Output<number>;

    /**
     * Create a DnspodDomainAlias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnspodDomainAliasArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DnspodDomainAliasArgs | DnspodDomainAliasState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DnspodDomainAliasState | undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["domainAlias"] = state ? state.domainAlias : undefined;
            resourceInputs["domainAliasId"] = state ? state.domainAliasId : undefined;
        } else {
            const args = argsOrState as DnspodDomainAliasArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.domainAlias === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainAlias'");
            }
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["domainAlias"] = args ? args.domainAlias : undefined;
            resourceInputs["domainAliasId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DnspodDomainAlias.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DnspodDomainAlias resources.
 */
export interface DnspodDomainAliasState {
    /**
     * Domain.
     */
    domain?: pulumi.Input<string>;
    /**
     * Domain alias.
     */
    domainAlias?: pulumi.Input<string>;
    /**
     * Domain alias ID.
     */
    domainAliasId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DnspodDomainAlias resource.
 */
export interface DnspodDomainAliasArgs {
    /**
     * Domain.
     */
    domain: pulumi.Input<string>;
    /**
     * Domain alias.
     */
    domainAlias: pulumi.Input<string>;
}
