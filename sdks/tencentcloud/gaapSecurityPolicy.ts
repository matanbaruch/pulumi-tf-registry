// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class GaapSecurityPolicy extends pulumi.CustomResource {
    /**
     * Get an existing GaapSecurityPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GaapSecurityPolicyState, opts?: pulumi.CustomResourceOptions): GaapSecurityPolicy {
        return new GaapSecurityPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/gaapSecurityPolicy:GaapSecurityPolicy';

    /**
     * Returns true if the given object is an instance of GaapSecurityPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GaapSecurityPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GaapSecurityPolicy.__pulumiType;
    }

    /**
     * Default policy. Valid value: `ACCEPT` and `DROP`.
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * Indicates whether policy is enable, default value is `true`.
     */
    public readonly enable!: pulumi.Output<boolean | undefined>;
    /**
     * ID of the GAAP proxy.
     */
    public readonly proxyId!: pulumi.Output<string>;

    /**
     * Create a GaapSecurityPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GaapSecurityPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GaapSecurityPolicyArgs | GaapSecurityPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GaapSecurityPolicyState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["enable"] = state ? state.enable : undefined;
            resourceInputs["proxyId"] = state ? state.proxyId : undefined;
        } else {
            const args = argsOrState as GaapSecurityPolicyArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.proxyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'proxyId'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["enable"] = args ? args.enable : undefined;
            resourceInputs["proxyId"] = args ? args.proxyId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GaapSecurityPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GaapSecurityPolicy resources.
 */
export interface GaapSecurityPolicyState {
    /**
     * Default policy. Valid value: `ACCEPT` and `DROP`.
     */
    action?: pulumi.Input<string>;
    /**
     * Indicates whether policy is enable, default value is `true`.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * ID of the GAAP proxy.
     */
    proxyId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GaapSecurityPolicy resource.
 */
export interface GaapSecurityPolicyArgs {
    /**
     * Default policy. Valid value: `ACCEPT` and `DROP`.
     */
    action: pulumi.Input<string>;
    /**
     * Indicates whether policy is enable, default value is `true`.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * ID of the GAAP proxy.
     */
    proxyId: pulumi.Input<string>;
}
