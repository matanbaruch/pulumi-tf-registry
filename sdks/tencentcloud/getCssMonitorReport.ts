// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCssMonitorReport(args: GetCssMonitorReportArgs, opts?: pulumi.InvokeOptions): Promise<GetCssMonitorReportResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getCssMonitorReport:getCssMonitorReport", {
        "id": args.id,
        "monitorId": args.monitorId,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCssMonitorReport.
 */
export interface GetCssMonitorReportArgs {
    id?: string;
    monitorId: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getCssMonitorReport.
 */
export interface GetCssMonitorReportResult {
    readonly diagnoseResults: outputs.GetCssMonitorReportDiagnoseResult[];
    readonly id: string;
    readonly monitorId: string;
    readonly mpsResults: outputs.GetCssMonitorReportMpsResult[];
    readonly resultOutputFile?: string;
}
export function getCssMonitorReportOutput(args: GetCssMonitorReportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCssMonitorReportResult> {
    return pulumi.output(args).apply((a: any) => getCssMonitorReport(a, opts))
}

/**
 * A collection of arguments for invoking getCssMonitorReport.
 */
export interface GetCssMonitorReportOutputArgs {
    id?: pulumi.Input<string>;
    monitorId: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
