// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class KubernetesNativeNodePool extends pulumi.CustomResource {
    /**
     * Get an existing KubernetesNativeNodePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KubernetesNativeNodePoolState, opts?: pulumi.CustomResourceOptions): KubernetesNativeNodePool {
        return new KubernetesNativeNodePool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/kubernetesNativeNodePool:KubernetesNativeNodePool';

    /**
     * Returns true if the given object is an instance of KubernetesNativeNodePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KubernetesNativeNodePool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KubernetesNativeNodePool.__pulumiType;
    }

    /**
     * Node Annotation List.
     */
    public readonly annotations!: pulumi.Output<outputs.KubernetesNativeNodePoolAnnotation[] | undefined>;
    /**
     * ID of the cluster.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * Creation time.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Whether to enable deletion protection.
     */
    public readonly deletionProtection!: pulumi.Output<boolean>;
    /**
     * Node Labels.
     */
    public readonly labels!: pulumi.Output<outputs.KubernetesNativeNodePoolLabel[] | undefined>;
    /**
     * Node pool status.
     */
    public /*out*/ readonly lifeState!: pulumi.Output<string>;
    /**
     * Node pool name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Native node pool creation parameters.
     */
    public readonly native!: pulumi.Output<outputs.KubernetesNativeNodePoolNative>;
    /**
     * Node tags.
     */
    public readonly tags!: pulumi.Output<outputs.KubernetesNativeNodePoolTag[] | undefined>;
    /**
     * Node taint.
     */
    public readonly taints!: pulumi.Output<outputs.KubernetesNativeNodePoolTaint[] | undefined>;
    /**
     * Node pool type. Optional value is `Native`.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Whether the node is not schedulable by default. The native node is not aware of it and passes false by default.
     */
    public readonly unschedulable!: pulumi.Output<boolean>;

    /**
     * Create a KubernetesNativeNodePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KubernetesNativeNodePoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KubernetesNativeNodePoolArgs | KubernetesNativeNodePoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KubernetesNativeNodePoolState | undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["lifeState"] = state ? state.lifeState : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["native"] = state ? state.native : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["taints"] = state ? state.taints : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["unschedulable"] = state ? state.unschedulable : undefined;
        } else {
            const args = argsOrState as KubernetesNativeNodePoolArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.native === undefined) && !opts.urn) {
                throw new Error("Missing required property 'native'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["native"] = args ? args.native : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["taints"] = args ? args.taints : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["unschedulable"] = args ? args.unschedulable : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lifeState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KubernetesNativeNodePool.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering KubernetesNativeNodePool resources.
 */
export interface KubernetesNativeNodePoolState {
    /**
     * Node Annotation List.
     */
    annotations?: pulumi.Input<pulumi.Input<inputs.KubernetesNativeNodePoolAnnotation>[]>;
    /**
     * ID of the cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Creation time.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Whether to enable deletion protection.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * Node Labels.
     */
    labels?: pulumi.Input<pulumi.Input<inputs.KubernetesNativeNodePoolLabel>[]>;
    /**
     * Node pool status.
     */
    lifeState?: pulumi.Input<string>;
    /**
     * Node pool name.
     */
    name?: pulumi.Input<string>;
    /**
     * Native node pool creation parameters.
     */
    native?: pulumi.Input<inputs.KubernetesNativeNodePoolNative>;
    /**
     * Node tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.KubernetesNativeNodePoolTag>[]>;
    /**
     * Node taint.
     */
    taints?: pulumi.Input<pulumi.Input<inputs.KubernetesNativeNodePoolTaint>[]>;
    /**
     * Node pool type. Optional value is `Native`.
     */
    type?: pulumi.Input<string>;
    /**
     * Whether the node is not schedulable by default. The native node is not aware of it and passes false by default.
     */
    unschedulable?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a KubernetesNativeNodePool resource.
 */
export interface KubernetesNativeNodePoolArgs {
    /**
     * Node Annotation List.
     */
    annotations?: pulumi.Input<pulumi.Input<inputs.KubernetesNativeNodePoolAnnotation>[]>;
    /**
     * ID of the cluster.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Whether to enable deletion protection.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * Node Labels.
     */
    labels?: pulumi.Input<pulumi.Input<inputs.KubernetesNativeNodePoolLabel>[]>;
    /**
     * Node pool name.
     */
    name?: pulumi.Input<string>;
    /**
     * Native node pool creation parameters.
     */
    native: pulumi.Input<inputs.KubernetesNativeNodePoolNative>;
    /**
     * Node tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.KubernetesNativeNodePoolTag>[]>;
    /**
     * Node taint.
     */
    taints?: pulumi.Input<pulumi.Input<inputs.KubernetesNativeNodePoolTaint>[]>;
    /**
     * Node pool type. Optional value is `Native`.
     */
    type: pulumi.Input<string>;
    /**
     * Whether the node is not schedulable by default. The native node is not aware of it and passes false by default.
     */
    unschedulable?: pulumi.Input<boolean>;
}
