// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTcrImages(args: GetTcrImagesArgs, opts?: pulumi.InvokeOptions): Promise<GetTcrImagesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getTcrImages:getTcrImages", {
        "digest": args.digest,
        "exactMatch": args.exactMatch,
        "id": args.id,
        "imageVersion": args.imageVersion,
        "namespaceName": args.namespaceName,
        "registryId": args.registryId,
        "repositoryName": args.repositoryName,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTcrImages.
 */
export interface GetTcrImagesArgs {
    digest?: string;
    exactMatch?: boolean;
    id?: string;
    imageVersion?: string;
    namespaceName: string;
    registryId: string;
    repositoryName: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getTcrImages.
 */
export interface GetTcrImagesResult {
    readonly digest?: string;
    readonly exactMatch?: boolean;
    readonly id: string;
    readonly imageInfoLists: outputs.GetTcrImagesImageInfoList[];
    readonly imageVersion?: string;
    readonly namespaceName: string;
    readonly registryId: string;
    readonly repositoryName: string;
    readonly resultOutputFile?: string;
}
export function getTcrImagesOutput(args: GetTcrImagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTcrImagesResult> {
    return pulumi.output(args).apply((a: any) => getTcrImages(a, opts))
}

/**
 * A collection of arguments for invoking getTcrImages.
 */
export interface GetTcrImagesOutputArgs {
    digest?: pulumi.Input<string>;
    exactMatch?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    imageVersion?: pulumi.Input<string>;
    namespaceName: pulumi.Input<string>;
    registryId: pulumi.Input<string>;
    repositoryName: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
