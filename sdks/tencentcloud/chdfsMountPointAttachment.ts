// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ChdfsMountPointAttachment extends pulumi.CustomResource {
    /**
     * Get an existing ChdfsMountPointAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ChdfsMountPointAttachmentState, opts?: pulumi.CustomResourceOptions): ChdfsMountPointAttachment {
        return new ChdfsMountPointAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/chdfsMountPointAttachment:ChdfsMountPointAttachment';

    /**
     * Returns true if the given object is an instance of ChdfsMountPointAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ChdfsMountPointAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ChdfsMountPointAttachment.__pulumiType;
    }

    /**
     * associate access group id.
     */
    public readonly accessGroupIds!: pulumi.Output<string[]>;
    /**
     * associate mount point.
     */
    public readonly mountPointId!: pulumi.Output<string>;

    /**
     * Create a ChdfsMountPointAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ChdfsMountPointAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ChdfsMountPointAttachmentArgs | ChdfsMountPointAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ChdfsMountPointAttachmentState | undefined;
            resourceInputs["accessGroupIds"] = state ? state.accessGroupIds : undefined;
            resourceInputs["mountPointId"] = state ? state.mountPointId : undefined;
        } else {
            const args = argsOrState as ChdfsMountPointAttachmentArgs | undefined;
            if ((!args || args.accessGroupIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessGroupIds'");
            }
            if ((!args || args.mountPointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mountPointId'");
            }
            resourceInputs["accessGroupIds"] = args ? args.accessGroupIds : undefined;
            resourceInputs["mountPointId"] = args ? args.mountPointId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ChdfsMountPointAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ChdfsMountPointAttachment resources.
 */
export interface ChdfsMountPointAttachmentState {
    /**
     * associate access group id.
     */
    accessGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * associate mount point.
     */
    mountPointId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ChdfsMountPointAttachment resource.
 */
export interface ChdfsMountPointAttachmentArgs {
    /**
     * associate access group id.
     */
    accessGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * associate mount point.
     */
    mountPointId: pulumi.Input<string>;
}
