// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSqlserverCrossRegionZone(args: GetSqlserverCrossRegionZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlserverCrossRegionZoneResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getSqlserverCrossRegionZone:getSqlserverCrossRegionZone", {
        "id": args.id,
        "instanceId": args.instanceId,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSqlserverCrossRegionZone.
 */
export interface GetSqlserverCrossRegionZoneArgs {
    id?: string;
    instanceId: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getSqlserverCrossRegionZone.
 */
export interface GetSqlserverCrossRegionZoneResult {
    readonly id: string;
    readonly instanceId: string;
    readonly region: string;
    readonly resultOutputFile?: string;
    readonly zone: string;
}
export function getSqlserverCrossRegionZoneOutput(args: GetSqlserverCrossRegionZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSqlserverCrossRegionZoneResult> {
    return pulumi.output(args).apply((a: any) => getSqlserverCrossRegionZone(a, opts))
}

/**
 * A collection of arguments for invoking getSqlserverCrossRegionZone.
 */
export interface GetSqlserverCrossRegionZoneOutputArgs {
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
