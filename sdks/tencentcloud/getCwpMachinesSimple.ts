// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCwpMachinesSimple(args: GetCwpMachinesSimpleArgs, opts?: pulumi.InvokeOptions): Promise<GetCwpMachinesSimpleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getCwpMachinesSimple:getCwpMachinesSimple", {
        "filters": args.filters,
        "id": args.id,
        "machineRegion": args.machineRegion,
        "machineType": args.machineType,
        "projectIds": args.projectIds,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCwpMachinesSimple.
 */
export interface GetCwpMachinesSimpleArgs {
    filters?: inputs.GetCwpMachinesSimpleFilter[];
    id?: string;
    machineRegion: string;
    machineType: string;
    projectIds?: number[];
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getCwpMachinesSimple.
 */
export interface GetCwpMachinesSimpleResult {
    readonly filters?: outputs.GetCwpMachinesSimpleFilter[];
    readonly id: string;
    readonly machineRegion: string;
    readonly machineType: string;
    readonly machines: outputs.GetCwpMachinesSimpleMachine[];
    readonly projectIds?: number[];
    readonly resultOutputFile?: string;
}
export function getCwpMachinesSimpleOutput(args: GetCwpMachinesSimpleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCwpMachinesSimpleResult> {
    return pulumi.output(args).apply((a: any) => getCwpMachinesSimple(a, opts))
}

/**
 * A collection of arguments for invoking getCwpMachinesSimple.
 */
export interface GetCwpMachinesSimpleOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetCwpMachinesSimpleFilterArgs>[]>;
    id?: pulumi.Input<string>;
    machineRegion: pulumi.Input<string>;
    machineType: pulumi.Input<string>;
    projectIds?: pulumi.Input<pulumi.Input<number>[]>;
    resultOutputFile?: pulumi.Input<string>;
}
