// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCssDomains(args?: GetCssDomainsArgs, opts?: pulumi.InvokeOptions): Promise<GetCssDomainsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getCssDomains:getCssDomains", {
        "domainPrefix": args.domainPrefix,
        "domainStatus": args.domainStatus,
        "domainType": args.domainType,
        "id": args.id,
        "isDelayLive": args.isDelayLive,
        "playType": args.playType,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCssDomains.
 */
export interface GetCssDomainsArgs {
    domainPrefix?: string;
    domainStatus?: number;
    domainType?: number;
    id?: string;
    isDelayLive?: number;
    playType?: number;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getCssDomains.
 */
export interface GetCssDomainsResult {
    readonly domainLists: outputs.GetCssDomainsDomainList[];
    readonly domainPrefix?: string;
    readonly domainStatus?: number;
    readonly domainType?: number;
    readonly id: string;
    readonly isDelayLive?: number;
    readonly playType?: number;
    readonly resultOutputFile?: string;
}
export function getCssDomainsOutput(args?: GetCssDomainsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCssDomainsResult> {
    return pulumi.output(args).apply((a: any) => getCssDomains(a, opts))
}

/**
 * A collection of arguments for invoking getCssDomains.
 */
export interface GetCssDomainsOutputArgs {
    domainPrefix?: pulumi.Input<string>;
    domainStatus?: pulumi.Input<number>;
    domainType?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    isDelayLive?: pulumi.Input<number>;
    playType?: pulumi.Input<number>;
    resultOutputFile?: pulumi.Input<string>;
}
