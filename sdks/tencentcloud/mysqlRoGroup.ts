// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MysqlRoGroup extends pulumi.CustomResource {
    /**
     * Get an existing MysqlRoGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MysqlRoGroupState, opts?: pulumi.CustomResourceOptions): MysqlRoGroup {
        return new MysqlRoGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/mysqlRoGroup:MysqlRoGroup';

    /**
     * Returns true if the given object is an instance of MysqlRoGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MysqlRoGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MysqlRoGroup.__pulumiType;
    }

    /**
     * Instance ID, in the format: cdbro-3i70uj0k.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Whether to rebalance the load of RO instances in the RO group. Supported values include: 1 - rebalance load; 0 - do not
     * rebalance load. The default value is 0. Note that when it is set to rebalance the load, the RO instance in the RO group
     * will have a momentary disconnection of the database connection, please ensure that the application can reconnect to the
     * database.
     */
    public readonly isBalanceRoLoad!: pulumi.Output<number | undefined>;
    /**
     * The ID of the RO group.
     */
    public readonly roGroupId!: pulumi.Output<string>;
    /**
     * Details of the RO group.
     */
    public readonly roGroupInfo!: pulumi.Output<outputs.MysqlRoGroupRoGroupInfo | undefined>;
    /**
     * The weight of the instance within the RO group. If the weight mode of the RO group is changed to user-defined mode
     * (custom), this parameter must be set, and the weight value of each RO instance needs to be set.
     */
    public readonly roWeightValues!: pulumi.Output<outputs.MysqlRoGroupRoWeightValue[] | undefined>;

    /**
     * Create a MysqlRoGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MysqlRoGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MysqlRoGroupArgs | MysqlRoGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MysqlRoGroupState | undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["isBalanceRoLoad"] = state ? state.isBalanceRoLoad : undefined;
            resourceInputs["roGroupId"] = state ? state.roGroupId : undefined;
            resourceInputs["roGroupInfo"] = state ? state.roGroupInfo : undefined;
            resourceInputs["roWeightValues"] = state ? state.roWeightValues : undefined;
        } else {
            const args = argsOrState as MysqlRoGroupArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.roGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roGroupId'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["isBalanceRoLoad"] = args ? args.isBalanceRoLoad : undefined;
            resourceInputs["roGroupId"] = args ? args.roGroupId : undefined;
            resourceInputs["roGroupInfo"] = args ? args.roGroupInfo : undefined;
            resourceInputs["roWeightValues"] = args ? args.roWeightValues : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MysqlRoGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MysqlRoGroup resources.
 */
export interface MysqlRoGroupState {
    /**
     * Instance ID, in the format: cdbro-3i70uj0k.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Whether to rebalance the load of RO instances in the RO group. Supported values include: 1 - rebalance load; 0 - do not
     * rebalance load. The default value is 0. Note that when it is set to rebalance the load, the RO instance in the RO group
     * will have a momentary disconnection of the database connection, please ensure that the application can reconnect to the
     * database.
     */
    isBalanceRoLoad?: pulumi.Input<number>;
    /**
     * The ID of the RO group.
     */
    roGroupId?: pulumi.Input<string>;
    /**
     * Details of the RO group.
     */
    roGroupInfo?: pulumi.Input<inputs.MysqlRoGroupRoGroupInfo>;
    /**
     * The weight of the instance within the RO group. If the weight mode of the RO group is changed to user-defined mode
     * (custom), this parameter must be set, and the weight value of each RO instance needs to be set.
     */
    roWeightValues?: pulumi.Input<pulumi.Input<inputs.MysqlRoGroupRoWeightValue>[]>;
}

/**
 * The set of arguments for constructing a MysqlRoGroup resource.
 */
export interface MysqlRoGroupArgs {
    /**
     * Instance ID, in the format: cdbro-3i70uj0k.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Whether to rebalance the load of RO instances in the RO group. Supported values include: 1 - rebalance load; 0 - do not
     * rebalance load. The default value is 0. Note that when it is set to rebalance the load, the RO instance in the RO group
     * will have a momentary disconnection of the database connection, please ensure that the application can reconnect to the
     * database.
     */
    isBalanceRoLoad?: pulumi.Input<number>;
    /**
     * The ID of the RO group.
     */
    roGroupId: pulumi.Input<string>;
    /**
     * Details of the RO group.
     */
    roGroupInfo?: pulumi.Input<inputs.MysqlRoGroupRoGroupInfo>;
    /**
     * The weight of the instance within the RO group. If the weight mode of the RO group is changed to user-defined mode
     * (custom), this parameter must be set, and the weight value of each RO instance needs to be set.
     */
    roWeightValues?: pulumi.Input<pulumi.Input<inputs.MysqlRoGroupRoWeightValue>[]>;
}
