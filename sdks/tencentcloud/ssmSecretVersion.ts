// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SsmSecretVersion extends pulumi.CustomResource {
    /**
     * Get an existing SsmSecretVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SsmSecretVersionState, opts?: pulumi.CustomResourceOptions): SsmSecretVersion {
        return new SsmSecretVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/ssmSecretVersion:SsmSecretVersion';

    /**
     * Returns true if the given object is an instance of SsmSecretVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SsmSecretVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SsmSecretVersion.__pulumiType;
    }

    /**
     * The base64-encoded binary secret. secret_binary and secret_string must be set only one, and the maximum support is 4096
     * bytes. When secret status is `Disabled`, this field will not update anymore.
     */
    public readonly secretBinary!: pulumi.Output<string | undefined>;
    /**
     * Name of secret which cannot be repeated in the same region. The maximum length is 128 bytes. The name can only contain
     * English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
     */
    public readonly secretName!: pulumi.Output<string>;
    /**
     * The string text of secret. secret_binary and secret_string must be set only one, and the maximum support is 4096 bytes.
     * When secret status is `Disabled`, this field will not update anymore.
     */
    public readonly secretString!: pulumi.Output<string | undefined>;
    /**
     * Version of secret. The maximum length is 64 bytes. The version_id can only contain English letters, numbers, underscore
     * and hyphen '-'. The first character must be a letter or number.
     */
    public readonly versionId!: pulumi.Output<string>;

    /**
     * Create a SsmSecretVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SsmSecretVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SsmSecretVersionArgs | SsmSecretVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SsmSecretVersionState | undefined;
            resourceInputs["secretBinary"] = state ? state.secretBinary : undefined;
            resourceInputs["secretName"] = state ? state.secretName : undefined;
            resourceInputs["secretString"] = state ? state.secretString : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
        } else {
            const args = argsOrState as SsmSecretVersionArgs | undefined;
            if ((!args || args.secretName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secretName'");
            }
            if ((!args || args.versionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'versionId'");
            }
            resourceInputs["secretBinary"] = args ? args.secretBinary : undefined;
            resourceInputs["secretName"] = args ? args.secretName : undefined;
            resourceInputs["secretString"] = args ? args.secretString : undefined;
            resourceInputs["versionId"] = args ? args.versionId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SsmSecretVersion.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SsmSecretVersion resources.
 */
export interface SsmSecretVersionState {
    /**
     * The base64-encoded binary secret. secret_binary and secret_string must be set only one, and the maximum support is 4096
     * bytes. When secret status is `Disabled`, this field will not update anymore.
     */
    secretBinary?: pulumi.Input<string>;
    /**
     * Name of secret which cannot be repeated in the same region. The maximum length is 128 bytes. The name can only contain
     * English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
     */
    secretName?: pulumi.Input<string>;
    /**
     * The string text of secret. secret_binary and secret_string must be set only one, and the maximum support is 4096 bytes.
     * When secret status is `Disabled`, this field will not update anymore.
     */
    secretString?: pulumi.Input<string>;
    /**
     * Version of secret. The maximum length is 64 bytes. The version_id can only contain English letters, numbers, underscore
     * and hyphen '-'. The first character must be a letter or number.
     */
    versionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SsmSecretVersion resource.
 */
export interface SsmSecretVersionArgs {
    /**
     * The base64-encoded binary secret. secret_binary and secret_string must be set only one, and the maximum support is 4096
     * bytes. When secret status is `Disabled`, this field will not update anymore.
     */
    secretBinary?: pulumi.Input<string>;
    /**
     * Name of secret which cannot be repeated in the same region. The maximum length is 128 bytes. The name can only contain
     * English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
     */
    secretName: pulumi.Input<string>;
    /**
     * The string text of secret. secret_binary and secret_string must be set only one, and the maximum support is 4096 bytes.
     * When secret status is `Disabled`, this field will not update anymore.
     */
    secretString?: pulumi.Input<string>;
    /**
     * Version of secret. The maximum length is 64 bytes. The version_id can only contain English letters, numbers, underscore
     * and hyphen '-'. The first character must be a letter or number.
     */
    versionId: pulumi.Input<string>;
}
