// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DcInternetAddress extends pulumi.CustomResource {
    /**
     * Get an existing DcInternetAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DcInternetAddressState, opts?: pulumi.CustomResourceOptions): DcInternetAddress {
        return new DcInternetAddress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/dcInternetAddress:DcInternetAddress';

    /**
     * Returns true if the given object is an instance of DcInternetAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DcInternetAddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DcInternetAddress.__pulumiType;
    }

    /**
     * 0: IPv4, 1: IPv6.
     */
    public readonly addrProto!: pulumi.Output<number>;
    /**
     * 0: BGP, 1: china telecom, 2: china mobile, 3: china unicom.
     */
    public readonly addrType!: pulumi.Output<number>;
    /**
     * CIDR address mask.
     */
    public readonly maskLen!: pulumi.Output<number>;

    /**
     * Create a DcInternetAddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DcInternetAddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DcInternetAddressArgs | DcInternetAddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DcInternetAddressState | undefined;
            resourceInputs["addrProto"] = state ? state.addrProto : undefined;
            resourceInputs["addrType"] = state ? state.addrType : undefined;
            resourceInputs["maskLen"] = state ? state.maskLen : undefined;
        } else {
            const args = argsOrState as DcInternetAddressArgs | undefined;
            if ((!args || args.addrProto === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addrProto'");
            }
            if ((!args || args.addrType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addrType'");
            }
            if ((!args || args.maskLen === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maskLen'");
            }
            resourceInputs["addrProto"] = args ? args.addrProto : undefined;
            resourceInputs["addrType"] = args ? args.addrType : undefined;
            resourceInputs["maskLen"] = args ? args.maskLen : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DcInternetAddress.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DcInternetAddress resources.
 */
export interface DcInternetAddressState {
    /**
     * 0: IPv4, 1: IPv6.
     */
    addrProto?: pulumi.Input<number>;
    /**
     * 0: BGP, 1: china telecom, 2: china mobile, 3: china unicom.
     */
    addrType?: pulumi.Input<number>;
    /**
     * CIDR address mask.
     */
    maskLen?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DcInternetAddress resource.
 */
export interface DcInternetAddressArgs {
    /**
     * 0: IPv4, 1: IPv6.
     */
    addrProto: pulumi.Input<number>;
    /**
     * 0: BGP, 1: china telecom, 2: china mobile, 3: china unicom.
     */
    addrType: pulumi.Input<number>;
    /**
     * CIDR address mask.
     */
    maskLen: pulumi.Input<number>;
}
