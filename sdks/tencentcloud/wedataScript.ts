// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WedataScript extends pulumi.CustomResource {
    /**
     * Get an existing WedataScript resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WedataScriptState, opts?: pulumi.CustomResourceOptions): WedataScript {
        return new WedataScript(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/wedataScript:WedataScript';

    /**
     * Returns true if the given object is an instance of WedataScript.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WedataScript {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WedataScript.__pulumiType;
    }

    /**
     * Cos bucket name.
     */
    public readonly bucketName!: pulumi.Output<string | undefined>;
    /**
     * File Extension Type:jar, sql, zip, py, sh, txt, di, dg, pyspark, kjb, ktr, csv.
     */
    public readonly fileExtensionType!: pulumi.Output<string | undefined>;
    /**
     * Cos file path:/datastudio/project/projectId/.
     */
    public readonly filePath!: pulumi.Output<string | undefined>;
    /**
     * Project id.
     */
    public readonly projectId!: pulumi.Output<string | undefined>;
    /**
     * Cos region.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * Resource ID.
     */
    public /*out*/ readonly resourceId!: pulumi.Output<string>;

    /**
     * Create a WedataScript resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WedataScriptArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WedataScriptArgs | WedataScriptState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WedataScriptState | undefined;
            resourceInputs["bucketName"] = state ? state.bucketName : undefined;
            resourceInputs["fileExtensionType"] = state ? state.fileExtensionType : undefined;
            resourceInputs["filePath"] = state ? state.filePath : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
        } else {
            const args = argsOrState as WedataScriptArgs | undefined;
            resourceInputs["bucketName"] = args ? args.bucketName : undefined;
            resourceInputs["fileExtensionType"] = args ? args.fileExtensionType : undefined;
            resourceInputs["filePath"] = args ? args.filePath : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["resourceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WedataScript.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WedataScript resources.
 */
export interface WedataScriptState {
    /**
     * Cos bucket name.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * File Extension Type:jar, sql, zip, py, sh, txt, di, dg, pyspark, kjb, ktr, csv.
     */
    fileExtensionType?: pulumi.Input<string>;
    /**
     * Cos file path:/datastudio/project/projectId/.
     */
    filePath?: pulumi.Input<string>;
    /**
     * Project id.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Cos region.
     */
    region?: pulumi.Input<string>;
    /**
     * Resource ID.
     */
    resourceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WedataScript resource.
 */
export interface WedataScriptArgs {
    /**
     * Cos bucket name.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * File Extension Type:jar, sql, zip, py, sh, txt, di, dg, pyspark, kjb, ktr, csv.
     */
    fileExtensionType?: pulumi.Input<string>;
    /**
     * Cos file path:/datastudio/project/projectId/.
     */
    filePath?: pulumi.Input<string>;
    /**
     * Project id.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Cos region.
     */
    region?: pulumi.Input<string>;
}
