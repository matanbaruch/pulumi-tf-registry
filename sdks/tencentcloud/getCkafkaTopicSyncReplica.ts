// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCkafkaTopicSyncReplica(args: GetCkafkaTopicSyncReplicaArgs, opts?: pulumi.InvokeOptions): Promise<GetCkafkaTopicSyncReplicaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getCkafkaTopicSyncReplica:getCkafkaTopicSyncReplica", {
        "id": args.id,
        "instanceId": args.instanceId,
        "outOfSyncReplicaOnly": args.outOfSyncReplicaOnly,
        "resultOutputFile": args.resultOutputFile,
        "topicName": args.topicName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCkafkaTopicSyncReplica.
 */
export interface GetCkafkaTopicSyncReplicaArgs {
    id?: string;
    instanceId: string;
    outOfSyncReplicaOnly?: boolean;
    resultOutputFile?: string;
    topicName: string;
}

/**
 * A collection of values returned by getCkafkaTopicSyncReplica.
 */
export interface GetCkafkaTopicSyncReplicaResult {
    readonly id: string;
    readonly instanceId: string;
    readonly outOfSyncReplicaOnly?: boolean;
    readonly resultOutputFile?: string;
    readonly topicInSyncReplicaLists: outputs.GetCkafkaTopicSyncReplicaTopicInSyncReplicaList[];
    readonly topicName: string;
}
export function getCkafkaTopicSyncReplicaOutput(args: GetCkafkaTopicSyncReplicaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCkafkaTopicSyncReplicaResult> {
    return pulumi.output(args).apply((a: any) => getCkafkaTopicSyncReplica(a, opts))
}

/**
 * A collection of arguments for invoking getCkafkaTopicSyncReplica.
 */
export interface GetCkafkaTopicSyncReplicaOutputArgs {
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    outOfSyncReplicaOnly?: pulumi.Input<boolean>;
    resultOutputFile?: pulumi.Input<string>;
    topicName: pulumi.Input<string>;
}
