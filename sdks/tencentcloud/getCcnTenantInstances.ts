// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCcnTenantInstances(args?: GetCcnTenantInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetCcnTenantInstancesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getCcnTenantInstances:getCcnTenantInstances", {
        "ccnIds": args.ccnIds,
        "id": args.id,
        "isSecurityLocks": args.isSecurityLocks,
        "resultOutputFile": args.resultOutputFile,
        "userAccountIds": args.userAccountIds,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCcnTenantInstances.
 */
export interface GetCcnTenantInstancesArgs {
    ccnIds?: string[];
    id?: string;
    isSecurityLocks?: string[];
    resultOutputFile?: string;
    userAccountIds?: string[];
}

/**
 * A collection of values returned by getCcnTenantInstances.
 */
export interface GetCcnTenantInstancesResult {
    readonly ccnIds?: string[];
    readonly id: string;
    readonly isSecurityLocks?: string[];
    readonly resultOutputFile?: string;
    readonly userAccountIds?: string[];
}
export function getCcnTenantInstancesOutput(args?: GetCcnTenantInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCcnTenantInstancesResult> {
    return pulumi.output(args).apply((a: any) => getCcnTenantInstances(a, opts))
}

/**
 * A collection of arguments for invoking getCcnTenantInstances.
 */
export interface GetCcnTenantInstancesOutputArgs {
    ccnIds?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    isSecurityLocks?: pulumi.Input<pulumi.Input<string>[]>;
    resultOutputFile?: pulumi.Input<string>;
    userAccountIds?: pulumi.Input<pulumi.Input<string>[]>;
}
