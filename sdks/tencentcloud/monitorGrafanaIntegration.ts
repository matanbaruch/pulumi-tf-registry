// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MonitorGrafanaIntegration extends pulumi.CustomResource {
    /**
     * Get an existing MonitorGrafanaIntegration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MonitorGrafanaIntegrationState, opts?: pulumi.CustomResourceOptions): MonitorGrafanaIntegration {
        return new MonitorGrafanaIntegration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/monitorGrafanaIntegration:MonitorGrafanaIntegration';

    /**
     * Returns true if the given object is an instance of MonitorGrafanaIntegration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MonitorGrafanaIntegration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MonitorGrafanaIntegration.__pulumiType;
    }

    /**
     * generated json string of given integration json schema.
     */
    public readonly content!: pulumi.Output<string>;
    /**
     * integration desc.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * grafana instance id.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * integration id.
     */
    public /*out*/ readonly integrationId!: pulumi.Output<string>;
    /**
     * integration json schema kind.
     */
    public readonly kind!: pulumi.Output<string>;

    /**
     * Create a MonitorGrafanaIntegration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MonitorGrafanaIntegrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MonitorGrafanaIntegrationArgs | MonitorGrafanaIntegrationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MonitorGrafanaIntegrationState | undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["integrationId"] = state ? state.integrationId : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
        } else {
            const args = argsOrState as MonitorGrafanaIntegrationArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["integrationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MonitorGrafanaIntegration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MonitorGrafanaIntegration resources.
 */
export interface MonitorGrafanaIntegrationState {
    /**
     * generated json string of given integration json schema.
     */
    content?: pulumi.Input<string>;
    /**
     * integration desc.
     */
    description?: pulumi.Input<string>;
    /**
     * grafana instance id.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * integration id.
     */
    integrationId?: pulumi.Input<string>;
    /**
     * integration json schema kind.
     */
    kind?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MonitorGrafanaIntegration resource.
 */
export interface MonitorGrafanaIntegrationArgs {
    /**
     * generated json string of given integration json schema.
     */
    content?: pulumi.Input<string>;
    /**
     * integration desc.
     */
    description?: pulumi.Input<string>;
    /**
     * grafana instance id.
     */
    instanceId: pulumi.Input<string>;
    /**
     * integration json schema kind.
     */
    kind?: pulumi.Input<string>;
}
