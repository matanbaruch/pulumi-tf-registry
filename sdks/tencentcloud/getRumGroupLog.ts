// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRumGroupLog(args: GetRumGroupLogArgs, opts?: pulumi.InvokeOptions): Promise<GetRumGroupLogResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getRumGroupLog:getRumGroupLog", {
        "endTime": args.endTime,
        "groupField": args.groupField,
        "id": args.id,
        "orderBy": args.orderBy,
        "projectId": args.projectId,
        "query": args.query,
        "resultOutputFile": args.resultOutputFile,
        "startTime": args.startTime,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRumGroupLog.
 */
export interface GetRumGroupLogArgs {
    endTime: string;
    groupField: string;
    id?: string;
    orderBy: string;
    projectId: number;
    query: string;
    resultOutputFile?: string;
    startTime: string;
}

/**
 * A collection of values returned by getRumGroupLog.
 */
export interface GetRumGroupLogResult {
    readonly endTime: string;
    readonly groupField: string;
    readonly id: string;
    readonly orderBy: string;
    readonly projectId: number;
    readonly query: string;
    readonly result: string;
    readonly resultOutputFile?: string;
    readonly startTime: string;
}
export function getRumGroupLogOutput(args: GetRumGroupLogOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRumGroupLogResult> {
    return pulumi.output(args).apply((a: any) => getRumGroupLog(a, opts))
}

/**
 * A collection of arguments for invoking getRumGroupLog.
 */
export interface GetRumGroupLogOutputArgs {
    endTime: pulumi.Input<string>;
    groupField: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    orderBy: pulumi.Input<string>;
    projectId: pulumi.Input<number>;
    query: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
}
