// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CamServiceLinkedRole extends pulumi.CustomResource {
    /**
     * Get an existing CamServiceLinkedRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CamServiceLinkedRoleState, opts?: pulumi.CustomResourceOptions): CamServiceLinkedRole {
        return new CamServiceLinkedRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/camServiceLinkedRole:CamServiceLinkedRole';

    /**
     * Returns true if the given object is an instance of CamServiceLinkedRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CamServiceLinkedRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CamServiceLinkedRole.__pulumiType;
    }

    /**
     * The custom suffix, based on the string you provide, is combined with the prefix provided by the service to form the full
     * role name. This field is not allowed to contain the character `_`.
     */
    public readonly customSuffix!: pulumi.Output<string>;
    /**
     * role description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Authorization service, the Tencent Cloud service principal with this role attached.
     */
    public readonly qcsServiceNames!: pulumi.Output<string[]>;
    /**
     * Tag description list.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a CamServiceLinkedRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CamServiceLinkedRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CamServiceLinkedRoleArgs | CamServiceLinkedRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CamServiceLinkedRoleState | undefined;
            resourceInputs["customSuffix"] = state ? state.customSuffix : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["qcsServiceNames"] = state ? state.qcsServiceNames : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as CamServiceLinkedRoleArgs | undefined;
            if ((!args || args.qcsServiceNames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'qcsServiceNames'");
            }
            resourceInputs["customSuffix"] = args ? args.customSuffix : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["qcsServiceNames"] = args ? args.qcsServiceNames : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CamServiceLinkedRole.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CamServiceLinkedRole resources.
 */
export interface CamServiceLinkedRoleState {
    /**
     * The custom suffix, based on the string you provide, is combined with the prefix provided by the service to form the full
     * role name. This field is not allowed to contain the character `_`.
     */
    customSuffix?: pulumi.Input<string>;
    /**
     * role description.
     */
    description?: pulumi.Input<string>;
    /**
     * Authorization service, the Tencent Cloud service principal with this role attached.
     */
    qcsServiceNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a CamServiceLinkedRole resource.
 */
export interface CamServiceLinkedRoleArgs {
    /**
     * The custom suffix, based on the string you provide, is combined with the prefix provided by the service to form the full
     * role name. This field is not allowed to contain the character `_`.
     */
    customSuffix?: pulumi.Input<string>;
    /**
     * role description.
     */
    description?: pulumi.Input<string>;
    /**
     * Authorization service, the Tencent Cloud service principal with this role attached.
     */
    qcsServiceNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
