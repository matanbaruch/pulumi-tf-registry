// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCdcDedicatedClusterOrders(args?: GetCdcDedicatedClusterOrdersArgs, opts?: pulumi.InvokeOptions): Promise<GetCdcDedicatedClusterOrdersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getCdcDedicatedClusterOrders:getCdcDedicatedClusterOrders", {
        "actionType": args.actionType,
        "dedicatedClusterIds": args.dedicatedClusterIds,
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCdcDedicatedClusterOrders.
 */
export interface GetCdcDedicatedClusterOrdersArgs {
    actionType?: string;
    dedicatedClusterIds?: string[];
    id?: string;
    resultOutputFile?: string;
    status?: string;
}

/**
 * A collection of values returned by getCdcDedicatedClusterOrders.
 */
export interface GetCdcDedicatedClusterOrdersResult {
    readonly actionType?: string;
    readonly dedicatedClusterIds?: string[];
    readonly dedicatedClusterOrderSets: outputs.GetCdcDedicatedClusterOrdersDedicatedClusterOrderSet[];
    readonly id: string;
    readonly resultOutputFile?: string;
    readonly status?: string;
}
export function getCdcDedicatedClusterOrdersOutput(args?: GetCdcDedicatedClusterOrdersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCdcDedicatedClusterOrdersResult> {
    return pulumi.output(args).apply((a: any) => getCdcDedicatedClusterOrders(a, opts))
}

/**
 * A collection of arguments for invoking getCdcDedicatedClusterOrders.
 */
export interface GetCdcDedicatedClusterOrdersOutputArgs {
    actionType?: pulumi.Input<string>;
    dedicatedClusterIds?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
