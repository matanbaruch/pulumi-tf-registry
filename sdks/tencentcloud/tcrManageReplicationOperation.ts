// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TcrManageReplicationOperation extends pulumi.CustomResource {
    /**
     * Get an existing TcrManageReplicationOperation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TcrManageReplicationOperationState, opts?: pulumi.CustomResourceOptions): TcrManageReplicationOperation {
        return new TcrManageReplicationOperation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/tcrManageReplicationOperation:TcrManageReplicationOperation';

    /**
     * Returns true if the given object is an instance of TcrManageReplicationOperation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TcrManageReplicationOperation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TcrManageReplicationOperation.__pulumiType;
    }

    /**
     * rule description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * the region ID of the target instance, such as Guangzhou is 1.
     */
    public readonly destinationRegionId!: pulumi.Output<number | undefined>;
    /**
     * copy destination instance Id.
     */
    public readonly destinationRegistryId!: pulumi.Output<string>;
    /**
     * enable synchronization of configuration items across master account instances.
     */
    public readonly peerReplicationOption!: pulumi.Output<outputs.TcrManageReplicationOperationPeerReplicationOption | undefined>;
    /**
     * synchronization rules.
     */
    public readonly rule!: pulumi.Output<outputs.TcrManageReplicationOperationRule>;
    /**
     * copy source instance Id.
     */
    public readonly sourceRegistryId!: pulumi.Output<string>;

    /**
     * Create a TcrManageReplicationOperation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TcrManageReplicationOperationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TcrManageReplicationOperationArgs | TcrManageReplicationOperationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TcrManageReplicationOperationState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destinationRegionId"] = state ? state.destinationRegionId : undefined;
            resourceInputs["destinationRegistryId"] = state ? state.destinationRegistryId : undefined;
            resourceInputs["peerReplicationOption"] = state ? state.peerReplicationOption : undefined;
            resourceInputs["rule"] = state ? state.rule : undefined;
            resourceInputs["sourceRegistryId"] = state ? state.sourceRegistryId : undefined;
        } else {
            const args = argsOrState as TcrManageReplicationOperationArgs | undefined;
            if ((!args || args.destinationRegistryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationRegistryId'");
            }
            if ((!args || args.rule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rule'");
            }
            if ((!args || args.sourceRegistryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceRegistryId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destinationRegionId"] = args ? args.destinationRegionId : undefined;
            resourceInputs["destinationRegistryId"] = args ? args.destinationRegistryId : undefined;
            resourceInputs["peerReplicationOption"] = args ? args.peerReplicationOption : undefined;
            resourceInputs["rule"] = args ? args.rule : undefined;
            resourceInputs["sourceRegistryId"] = args ? args.sourceRegistryId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TcrManageReplicationOperation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TcrManageReplicationOperation resources.
 */
export interface TcrManageReplicationOperationState {
    /**
     * rule description.
     */
    description?: pulumi.Input<string>;
    /**
     * the region ID of the target instance, such as Guangzhou is 1.
     */
    destinationRegionId?: pulumi.Input<number>;
    /**
     * copy destination instance Id.
     */
    destinationRegistryId?: pulumi.Input<string>;
    /**
     * enable synchronization of configuration items across master account instances.
     */
    peerReplicationOption?: pulumi.Input<inputs.TcrManageReplicationOperationPeerReplicationOption>;
    /**
     * synchronization rules.
     */
    rule?: pulumi.Input<inputs.TcrManageReplicationOperationRule>;
    /**
     * copy source instance Id.
     */
    sourceRegistryId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TcrManageReplicationOperation resource.
 */
export interface TcrManageReplicationOperationArgs {
    /**
     * rule description.
     */
    description?: pulumi.Input<string>;
    /**
     * the region ID of the target instance, such as Guangzhou is 1.
     */
    destinationRegionId?: pulumi.Input<number>;
    /**
     * copy destination instance Id.
     */
    destinationRegistryId: pulumi.Input<string>;
    /**
     * enable synchronization of configuration items across master account instances.
     */
    peerReplicationOption?: pulumi.Input<inputs.TcrManageReplicationOperationPeerReplicationOption>;
    /**
     * synchronization rules.
     */
    rule: pulumi.Input<inputs.TcrManageReplicationOperationRule>;
    /**
     * copy source instance Id.
     */
    sourceRegistryId: pulumi.Input<string>;
}
