// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMonitorAlarmMetric(args: GetMonitorAlarmMetricArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitorAlarmMetricResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getMonitorAlarmMetric:getMonitorAlarmMetric", {
        "id": args.id,
        "module": args.module,
        "monitorType": args.monitorType,
        "namespace": args.namespace,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonitorAlarmMetric.
 */
export interface GetMonitorAlarmMetricArgs {
    id?: string;
    module: string;
    monitorType: string;
    namespace: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getMonitorAlarmMetric.
 */
export interface GetMonitorAlarmMetricResult {
    readonly id: string;
    readonly metrics: outputs.GetMonitorAlarmMetricMetric[];
    readonly module: string;
    readonly monitorType: string;
    readonly namespace: string;
    readonly resultOutputFile?: string;
}
export function getMonitorAlarmMetricOutput(args: GetMonitorAlarmMetricOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitorAlarmMetricResult> {
    return pulumi.output(args).apply((a: any) => getMonitorAlarmMetric(a, opts))
}

/**
 * A collection of arguments for invoking getMonitorAlarmMetric.
 */
export interface GetMonitorAlarmMetricOutputArgs {
    id?: pulumi.Input<string>;
    module: pulumi.Input<string>;
    monitorType: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
