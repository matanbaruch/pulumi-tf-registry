// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGaapProxies(args?: GetGaapProxiesArgs, opts?: pulumi.InvokeOptions): Promise<GetGaapProxiesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getGaapProxies:getGaapProxies", {
        "accessRegion": args.accessRegion,
        "id": args.id,
        "ids": args.ids,
        "projectId": args.projectId,
        "realserverRegion": args.realserverRegion,
        "resultOutputFile": args.resultOutputFile,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGaapProxies.
 */
export interface GetGaapProxiesArgs {
    accessRegion?: string;
    id?: string;
    ids?: string[];
    projectId?: number;
    realserverRegion?: string;
    resultOutputFile?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getGaapProxies.
 */
export interface GetGaapProxiesResult {
    readonly accessRegion?: string;
    readonly id: string;
    readonly ids?: string[];
    readonly projectId?: number;
    readonly proxies: outputs.GetGaapProxiesProxy[];
    readonly realserverRegion?: string;
    readonly resultOutputFile?: string;
    readonly tags?: {[key: string]: string};
}
export function getGaapProxiesOutput(args?: GetGaapProxiesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGaapProxiesResult> {
    return pulumi.output(args).apply((a: any) => getGaapProxies(a, opts))
}

/**
 * A collection of arguments for invoking getGaapProxies.
 */
export interface GetGaapProxiesOutputArgs {
    accessRegion?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    projectId?: pulumi.Input<number>;
    realserverRegion?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
