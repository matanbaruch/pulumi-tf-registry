// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PostgresqlParameterTemplate extends pulumi.CustomResource {
    /**
     * Get an existing PostgresqlParameterTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PostgresqlParameterTemplateState, opts?: pulumi.CustomResourceOptions): PostgresqlParameterTemplate {
        return new PostgresqlParameterTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/postgresqlParameterTemplate:PostgresqlParameterTemplate';

    /**
     * Returns true if the given object is an instance of PostgresqlParameterTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PostgresqlParameterTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PostgresqlParameterTemplate.__pulumiType;
    }

    /**
     * Database engine, such as postgresql, mssql_compatible.
     */
    public readonly dbEngine!: pulumi.Output<string>;
    /**
     * The major database version number, such as 11, 12, 13.
     */
    public readonly dbMajorVersion!: pulumi.Output<string>;
    /**
     * The set of parameters that need to be deleted.
     */
    public readonly deleteParamSets!: pulumi.Output<string[] | undefined>;
    /**
     * The set of parameters that need to be modified or added. Note: the same parameter cannot appear in the set of modifying
     * and adding and deleting at the same time.
     */
    public readonly modifyParamEntrySets!: pulumi.Output<outputs.PostgresqlParameterTemplateModifyParamEntrySet[] | undefined>;
    /**
     * Parameter template description, which can contain 1-60 letters, digits, and symbols (-_./()+=:@).
     */
    public readonly templateDescription!: pulumi.Output<string | undefined>;
    /**
     * Template name, which can contain 1-60 letters, digits, and symbols (-_./()+=:@).
     */
    public readonly templateName!: pulumi.Output<string>;

    /**
     * Create a PostgresqlParameterTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PostgresqlParameterTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PostgresqlParameterTemplateArgs | PostgresqlParameterTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PostgresqlParameterTemplateState | undefined;
            resourceInputs["dbEngine"] = state ? state.dbEngine : undefined;
            resourceInputs["dbMajorVersion"] = state ? state.dbMajorVersion : undefined;
            resourceInputs["deleteParamSets"] = state ? state.deleteParamSets : undefined;
            resourceInputs["modifyParamEntrySets"] = state ? state.modifyParamEntrySets : undefined;
            resourceInputs["templateDescription"] = state ? state.templateDescription : undefined;
            resourceInputs["templateName"] = state ? state.templateName : undefined;
        } else {
            const args = argsOrState as PostgresqlParameterTemplateArgs | undefined;
            if ((!args || args.dbEngine === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbEngine'");
            }
            if ((!args || args.dbMajorVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbMajorVersion'");
            }
            if ((!args || args.templateName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateName'");
            }
            resourceInputs["dbEngine"] = args ? args.dbEngine : undefined;
            resourceInputs["dbMajorVersion"] = args ? args.dbMajorVersion : undefined;
            resourceInputs["deleteParamSets"] = args ? args.deleteParamSets : undefined;
            resourceInputs["modifyParamEntrySets"] = args ? args.modifyParamEntrySets : undefined;
            resourceInputs["templateDescription"] = args ? args.templateDescription : undefined;
            resourceInputs["templateName"] = args ? args.templateName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PostgresqlParameterTemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PostgresqlParameterTemplate resources.
 */
export interface PostgresqlParameterTemplateState {
    /**
     * Database engine, such as postgresql, mssql_compatible.
     */
    dbEngine?: pulumi.Input<string>;
    /**
     * The major database version number, such as 11, 12, 13.
     */
    dbMajorVersion?: pulumi.Input<string>;
    /**
     * The set of parameters that need to be deleted.
     */
    deleteParamSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of parameters that need to be modified or added. Note: the same parameter cannot appear in the set of modifying
     * and adding and deleting at the same time.
     */
    modifyParamEntrySets?: pulumi.Input<pulumi.Input<inputs.PostgresqlParameterTemplateModifyParamEntrySet>[]>;
    /**
     * Parameter template description, which can contain 1-60 letters, digits, and symbols (-_./()+=:@).
     */
    templateDescription?: pulumi.Input<string>;
    /**
     * Template name, which can contain 1-60 letters, digits, and symbols (-_./()+=:@).
     */
    templateName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PostgresqlParameterTemplate resource.
 */
export interface PostgresqlParameterTemplateArgs {
    /**
     * Database engine, such as postgresql, mssql_compatible.
     */
    dbEngine: pulumi.Input<string>;
    /**
     * The major database version number, such as 11, 12, 13.
     */
    dbMajorVersion: pulumi.Input<string>;
    /**
     * The set of parameters that need to be deleted.
     */
    deleteParamSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of parameters that need to be modified or added. Note: the same parameter cannot appear in the set of modifying
     * and adding and deleting at the same time.
     */
    modifyParamEntrySets?: pulumi.Input<pulumi.Input<inputs.PostgresqlParameterTemplateModifyParamEntrySet>[]>;
    /**
     * Parameter template description, which can contain 1-60 letters, digits, and symbols (-_./()+=:@).
     */
    templateDescription?: pulumi.Input<string>;
    /**
     * Template name, which can contain 1-60 letters, digits, and symbols (-_./()+=:@).
     */
    templateName: pulumi.Input<string>;
}
