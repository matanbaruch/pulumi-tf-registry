// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTseGatewayCertificates(args: GetTseGatewayCertificatesArgs, opts?: pulumi.InvokeOptions): Promise<GetTseGatewayCertificatesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getTseGatewayCertificates:getTseGatewayCertificates", {
        "filters": args.filters,
        "gatewayId": args.gatewayId,
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTseGatewayCertificates.
 */
export interface GetTseGatewayCertificatesArgs {
    filters?: inputs.GetTseGatewayCertificatesFilter[];
    gatewayId: string;
    id?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getTseGatewayCertificates.
 */
export interface GetTseGatewayCertificatesResult {
    readonly filters?: outputs.GetTseGatewayCertificatesFilter[];
    readonly gatewayId: string;
    readonly id: string;
    readonly resultOutputFile?: string;
    readonly results: outputs.GetTseGatewayCertificatesResult[];
}
export function getTseGatewayCertificatesOutput(args: GetTseGatewayCertificatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTseGatewayCertificatesResult> {
    return pulumi.output(args).apply((a: any) => getTseGatewayCertificates(a, opts))
}

/**
 * A collection of arguments for invoking getTseGatewayCertificates.
 */
export interface GetTseGatewayCertificatesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetTseGatewayCertificatesFilterArgs>[]>;
    gatewayId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
