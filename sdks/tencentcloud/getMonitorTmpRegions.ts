// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMonitorTmpRegions(args?: GetMonitorTmpRegionsArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitorTmpRegionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getMonitorTmpRegions:getMonitorTmpRegions", {
        "id": args.id,
        "payMode": args.payMode,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonitorTmpRegions.
 */
export interface GetMonitorTmpRegionsArgs {
    id?: string;
    payMode?: number;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getMonitorTmpRegions.
 */
export interface GetMonitorTmpRegionsResult {
    readonly id: string;
    readonly payMode?: number;
    readonly regionSets: outputs.GetMonitorTmpRegionsRegionSet[];
    readonly resultOutputFile?: string;
}
export function getMonitorTmpRegionsOutput(args?: GetMonitorTmpRegionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitorTmpRegionsResult> {
    return pulumi.output(args).apply((a: any) => getMonitorTmpRegions(a, opts))
}

/**
 * A collection of arguments for invoking getMonitorTmpRegions.
 */
export interface GetMonitorTmpRegionsOutputArgs {
    id?: pulumi.Input<string>;
    payMode?: pulumi.Input<number>;
    resultOutputFile?: pulumi.Input<string>;
}
