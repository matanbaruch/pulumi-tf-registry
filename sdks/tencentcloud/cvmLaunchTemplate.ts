// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CvmLaunchTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CvmLaunchTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CvmLaunchTemplateState, opts?: pulumi.CustomResourceOptions): CvmLaunchTemplate {
        return new CvmLaunchTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/cvmLaunchTemplate:CvmLaunchTemplate';

    /**
     * Returns true if the given object is an instance of CvmLaunchTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CvmLaunchTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CvmLaunchTemplate.__pulumiType;
    }

    /**
     * Timed task.
     */
    public readonly actionTimer!: pulumi.Output<outputs.CvmLaunchTemplateActionTimer | undefined>;
    /**
     * The role name of CAM.
     */
    public readonly camRoleName!: pulumi.Output<string | undefined>;
    /**
     * A string to used guarantee request idempotency.
     */
    public readonly clientToken!: pulumi.Output<string | undefined>;
    /**
     * Data disk configuration information of the instance.
     */
    public readonly dataDisks!: pulumi.Output<outputs.CvmLaunchTemplateDataDisk[] | undefined>;
    /**
     * Instance destruction protection flag.
     */
    public readonly disableApiTermination!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of disaster recover group.
     */
    public readonly disasterRecoverGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * Whether to preflight only this request, true or false.
     */
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    /**
     * Enhanced service. If this parameter is not specified, cloud monitoring and cloud security services will be enabled by
     * default in public images.
     */
    public readonly enhancedService!: pulumi.Output<outputs.CvmLaunchTemplateEnhancedService | undefined>;
    /**
     * The host name of CVM.
     */
    public readonly hostName!: pulumi.Output<string | undefined>;
    /**
     * The ID of HPC cluster.
     */
    public readonly hpcClusterId!: pulumi.Output<string | undefined>;
    /**
     * Image ID.
     */
    public readonly imageId!: pulumi.Output<string>;
    /**
     * The configuration of charge prepaid.
     */
    public readonly instanceChargePrepaid!: pulumi.Output<outputs.CvmLaunchTemplateInstanceChargePrepaid | undefined>;
    /**
     * The charge type of instance. Default value: POSTPAID_BY_HOUR.
     */
    public readonly instanceChargeType!: pulumi.Output<string>;
    /**
     * The number of instances purchased.
     */
    public readonly instanceCount!: pulumi.Output<number | undefined>;
    /**
     * The marketplace options of instance.
     */
    public readonly instanceMarketOptions!: pulumi.Output<outputs.CvmLaunchTemplateInstanceMarketOptions | undefined>;
    /**
     * The name of instance. If you do not specify an instance display name, 'Unnamed' is displayed by default.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * The type of the instance. If this parameter is not specified, the system will dynamically specify the default model
     * according to the resource sales in the current region.
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * The information settings of public network bandwidth. If you do not specify this parameter, the default Internet
     * bandwidth is 0 Mbps.
     */
    public readonly internetAccessible!: pulumi.Output<outputs.CvmLaunchTemplateInternetAccessible | undefined>;
    /**
     * The name of launch template.
     */
    public readonly launchTemplateName!: pulumi.Output<string>;
    /**
     * Instance launch template version description.
     */
    public readonly launchTemplateVersionDescription!: pulumi.Output<string | undefined>;
    /**
     * The login settings of instance. By default, passwords are randomly generated and notified to users via internal
     * messages.
     */
    public readonly loginSettings!: pulumi.Output<outputs.CvmLaunchTemplateLoginSettings | undefined>;
    /**
     * The location of instance.
     */
    public readonly placement!: pulumi.Output<outputs.CvmLaunchTemplatePlacement>;
    /**
     * The security group ID of instance. If this parameter is not specified, the default security group is bound.
     */
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    /**
     * System disk configuration information of the instance. If this parameter is not specified, it is assigned according to
     * the system default.
     */
    public readonly systemDisk!: pulumi.Output<outputs.CvmLaunchTemplateSystemDisk | undefined>;
    /**
     * Tag description list.
     */
    public readonly tagSpecifications!: pulumi.Output<outputs.CvmLaunchTemplateTagSpecification[] | undefined>;
    /**
     * Tag description list.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The data of users.
     */
    public readonly userData!: pulumi.Output<string | undefined>;
    /**
     * The configuration information of VPC. If this parameter is not specified, the basic network is used by default.
     */
    public readonly virtualPrivateCloud!: pulumi.Output<outputs.CvmLaunchTemplateVirtualPrivateCloud | undefined>;

    /**
     * Create a CvmLaunchTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CvmLaunchTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CvmLaunchTemplateArgs | CvmLaunchTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CvmLaunchTemplateState | undefined;
            resourceInputs["actionTimer"] = state ? state.actionTimer : undefined;
            resourceInputs["camRoleName"] = state ? state.camRoleName : undefined;
            resourceInputs["clientToken"] = state ? state.clientToken : undefined;
            resourceInputs["dataDisks"] = state ? state.dataDisks : undefined;
            resourceInputs["disableApiTermination"] = state ? state.disableApiTermination : undefined;
            resourceInputs["disasterRecoverGroupIds"] = state ? state.disasterRecoverGroupIds : undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["enhancedService"] = state ? state.enhancedService : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["hpcClusterId"] = state ? state.hpcClusterId : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["instanceChargePrepaid"] = state ? state.instanceChargePrepaid : undefined;
            resourceInputs["instanceChargeType"] = state ? state.instanceChargeType : undefined;
            resourceInputs["instanceCount"] = state ? state.instanceCount : undefined;
            resourceInputs["instanceMarketOptions"] = state ? state.instanceMarketOptions : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["internetAccessible"] = state ? state.internetAccessible : undefined;
            resourceInputs["launchTemplateName"] = state ? state.launchTemplateName : undefined;
            resourceInputs["launchTemplateVersionDescription"] = state ? state.launchTemplateVersionDescription : undefined;
            resourceInputs["loginSettings"] = state ? state.loginSettings : undefined;
            resourceInputs["placement"] = state ? state.placement : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["systemDisk"] = state ? state.systemDisk : undefined;
            resourceInputs["tagSpecifications"] = state ? state.tagSpecifications : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["virtualPrivateCloud"] = state ? state.virtualPrivateCloud : undefined;
        } else {
            const args = argsOrState as CvmLaunchTemplateArgs | undefined;
            if ((!args || args.imageId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'imageId'");
            }
            if ((!args || args.launchTemplateName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'launchTemplateName'");
            }
            if ((!args || args.placement === undefined) && !opts.urn) {
                throw new Error("Missing required property 'placement'");
            }
            resourceInputs["actionTimer"] = args ? args.actionTimer : undefined;
            resourceInputs["camRoleName"] = args ? args.camRoleName : undefined;
            resourceInputs["clientToken"] = args ? args.clientToken : undefined;
            resourceInputs["dataDisks"] = args ? args.dataDisks : undefined;
            resourceInputs["disableApiTermination"] = args ? args.disableApiTermination : undefined;
            resourceInputs["disasterRecoverGroupIds"] = args ? args.disasterRecoverGroupIds : undefined;
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["enhancedService"] = args ? args.enhancedService : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["hpcClusterId"] = args ? args.hpcClusterId : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["instanceChargePrepaid"] = args ? args.instanceChargePrepaid : undefined;
            resourceInputs["instanceChargeType"] = args ? args.instanceChargeType : undefined;
            resourceInputs["instanceCount"] = args ? args.instanceCount : undefined;
            resourceInputs["instanceMarketOptions"] = args ? args.instanceMarketOptions : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["internetAccessible"] = args ? args.internetAccessible : undefined;
            resourceInputs["launchTemplateName"] = args ? args.launchTemplateName : undefined;
            resourceInputs["launchTemplateVersionDescription"] = args ? args.launchTemplateVersionDescription : undefined;
            resourceInputs["loginSettings"] = args ? args.loginSettings : undefined;
            resourceInputs["placement"] = args ? args.placement : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["systemDisk"] = args ? args.systemDisk : undefined;
            resourceInputs["tagSpecifications"] = args ? args.tagSpecifications : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["virtualPrivateCloud"] = args ? args.virtualPrivateCloud : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CvmLaunchTemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CvmLaunchTemplate resources.
 */
export interface CvmLaunchTemplateState {
    /**
     * Timed task.
     */
    actionTimer?: pulumi.Input<inputs.CvmLaunchTemplateActionTimer>;
    /**
     * The role name of CAM.
     */
    camRoleName?: pulumi.Input<string>;
    /**
     * A string to used guarantee request idempotency.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * Data disk configuration information of the instance.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.CvmLaunchTemplateDataDisk>[]>;
    /**
     * Instance destruction protection flag.
     */
    disableApiTermination?: pulumi.Input<boolean>;
    /**
     * The ID of disaster recover group.
     */
    disasterRecoverGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether to preflight only this request, true or false.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * Enhanced service. If this parameter is not specified, cloud monitoring and cloud security services will be enabled by
     * default in public images.
     */
    enhancedService?: pulumi.Input<inputs.CvmLaunchTemplateEnhancedService>;
    /**
     * The host name of CVM.
     */
    hostName?: pulumi.Input<string>;
    /**
     * The ID of HPC cluster.
     */
    hpcClusterId?: pulumi.Input<string>;
    /**
     * Image ID.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The configuration of charge prepaid.
     */
    instanceChargePrepaid?: pulumi.Input<inputs.CvmLaunchTemplateInstanceChargePrepaid>;
    /**
     * The charge type of instance. Default value: POSTPAID_BY_HOUR.
     */
    instanceChargeType?: pulumi.Input<string>;
    /**
     * The number of instances purchased.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * The marketplace options of instance.
     */
    instanceMarketOptions?: pulumi.Input<inputs.CvmLaunchTemplateInstanceMarketOptions>;
    /**
     * The name of instance. If you do not specify an instance display name, 'Unnamed' is displayed by default.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The type of the instance. If this parameter is not specified, the system will dynamically specify the default model
     * according to the resource sales in the current region.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The information settings of public network bandwidth. If you do not specify this parameter, the default Internet
     * bandwidth is 0 Mbps.
     */
    internetAccessible?: pulumi.Input<inputs.CvmLaunchTemplateInternetAccessible>;
    /**
     * The name of launch template.
     */
    launchTemplateName?: pulumi.Input<string>;
    /**
     * Instance launch template version description.
     */
    launchTemplateVersionDescription?: pulumi.Input<string>;
    /**
     * The login settings of instance. By default, passwords are randomly generated and notified to users via internal
     * messages.
     */
    loginSettings?: pulumi.Input<inputs.CvmLaunchTemplateLoginSettings>;
    /**
     * The location of instance.
     */
    placement?: pulumi.Input<inputs.CvmLaunchTemplatePlacement>;
    /**
     * The security group ID of instance. If this parameter is not specified, the default security group is bound.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * System disk configuration information of the instance. If this parameter is not specified, it is assigned according to
     * the system default.
     */
    systemDisk?: pulumi.Input<inputs.CvmLaunchTemplateSystemDisk>;
    /**
     * Tag description list.
     */
    tagSpecifications?: pulumi.Input<pulumi.Input<inputs.CvmLaunchTemplateTagSpecification>[]>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The data of users.
     */
    userData?: pulumi.Input<string>;
    /**
     * The configuration information of VPC. If this parameter is not specified, the basic network is used by default.
     */
    virtualPrivateCloud?: pulumi.Input<inputs.CvmLaunchTemplateVirtualPrivateCloud>;
}

/**
 * The set of arguments for constructing a CvmLaunchTemplate resource.
 */
export interface CvmLaunchTemplateArgs {
    /**
     * Timed task.
     */
    actionTimer?: pulumi.Input<inputs.CvmLaunchTemplateActionTimer>;
    /**
     * The role name of CAM.
     */
    camRoleName?: pulumi.Input<string>;
    /**
     * A string to used guarantee request idempotency.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * Data disk configuration information of the instance.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.CvmLaunchTemplateDataDisk>[]>;
    /**
     * Instance destruction protection flag.
     */
    disableApiTermination?: pulumi.Input<boolean>;
    /**
     * The ID of disaster recover group.
     */
    disasterRecoverGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether to preflight only this request, true or false.
     */
    dryRun?: pulumi.Input<boolean>;
    /**
     * Enhanced service. If this parameter is not specified, cloud monitoring and cloud security services will be enabled by
     * default in public images.
     */
    enhancedService?: pulumi.Input<inputs.CvmLaunchTemplateEnhancedService>;
    /**
     * The host name of CVM.
     */
    hostName?: pulumi.Input<string>;
    /**
     * The ID of HPC cluster.
     */
    hpcClusterId?: pulumi.Input<string>;
    /**
     * Image ID.
     */
    imageId: pulumi.Input<string>;
    /**
     * The configuration of charge prepaid.
     */
    instanceChargePrepaid?: pulumi.Input<inputs.CvmLaunchTemplateInstanceChargePrepaid>;
    /**
     * The charge type of instance. Default value: POSTPAID_BY_HOUR.
     */
    instanceChargeType?: pulumi.Input<string>;
    /**
     * The number of instances purchased.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * The marketplace options of instance.
     */
    instanceMarketOptions?: pulumi.Input<inputs.CvmLaunchTemplateInstanceMarketOptions>;
    /**
     * The name of instance. If you do not specify an instance display name, 'Unnamed' is displayed by default.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The type of the instance. If this parameter is not specified, the system will dynamically specify the default model
     * according to the resource sales in the current region.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The information settings of public network bandwidth. If you do not specify this parameter, the default Internet
     * bandwidth is 0 Mbps.
     */
    internetAccessible?: pulumi.Input<inputs.CvmLaunchTemplateInternetAccessible>;
    /**
     * The name of launch template.
     */
    launchTemplateName: pulumi.Input<string>;
    /**
     * Instance launch template version description.
     */
    launchTemplateVersionDescription?: pulumi.Input<string>;
    /**
     * The login settings of instance. By default, passwords are randomly generated and notified to users via internal
     * messages.
     */
    loginSettings?: pulumi.Input<inputs.CvmLaunchTemplateLoginSettings>;
    /**
     * The location of instance.
     */
    placement: pulumi.Input<inputs.CvmLaunchTemplatePlacement>;
    /**
     * The security group ID of instance. If this parameter is not specified, the default security group is bound.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * System disk configuration information of the instance. If this parameter is not specified, it is assigned according to
     * the system default.
     */
    systemDisk?: pulumi.Input<inputs.CvmLaunchTemplateSystemDisk>;
    /**
     * Tag description list.
     */
    tagSpecifications?: pulumi.Input<pulumi.Input<inputs.CvmLaunchTemplateTagSpecification>[]>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The data of users.
     */
    userData?: pulumi.Input<string>;
    /**
     * The configuration information of VPC. If this parameter is not specified, the basic network is used by default.
     */
    virtualPrivateCloud?: pulumi.Input<inputs.CvmLaunchTemplateVirtualPrivateCloud>;
}
