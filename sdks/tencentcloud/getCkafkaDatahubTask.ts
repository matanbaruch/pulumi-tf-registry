// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCkafkaDatahubTask(args?: GetCkafkaDatahubTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetCkafkaDatahubTaskResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getCkafkaDatahubTask:getCkafkaDatahubTask", {
        "id": args.id,
        "resource": args.resource,
        "resultOutputFile": args.resultOutputFile,
        "searchWord": args.searchWord,
        "sourceType": args.sourceType,
        "targetType": args.targetType,
        "taskType": args.taskType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCkafkaDatahubTask.
 */
export interface GetCkafkaDatahubTaskArgs {
    id?: string;
    resource?: string;
    resultOutputFile?: string;
    searchWord?: string;
    sourceType?: string;
    targetType?: string;
    taskType?: string;
}

/**
 * A collection of values returned by getCkafkaDatahubTask.
 */
export interface GetCkafkaDatahubTaskResult {
    readonly id: string;
    readonly resource?: string;
    readonly resultOutputFile?: string;
    readonly searchWord?: string;
    readonly sourceType?: string;
    readonly targetType?: string;
    readonly taskLists: outputs.GetCkafkaDatahubTaskTaskList[];
    readonly taskType?: string;
}
export function getCkafkaDatahubTaskOutput(args?: GetCkafkaDatahubTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCkafkaDatahubTaskResult> {
    return pulumi.output(args).apply((a: any) => getCkafkaDatahubTask(a, opts))
}

/**
 * A collection of arguments for invoking getCkafkaDatahubTask.
 */
export interface GetCkafkaDatahubTaskOutputArgs {
    id?: pulumi.Input<string>;
    resource?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    searchWord?: pulumi.Input<string>;
    sourceType?: pulumi.Input<string>;
    targetType?: pulumi.Input<string>;
    taskType?: pulumi.Input<string>;
}
