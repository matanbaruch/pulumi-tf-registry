// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcSubnets(args?: GetVpcSubnetsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcSubnetsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getVpcSubnets:getVpcSubnets", {
        "availabilityZone": args.availabilityZone,
        "cdcId": args.cdcId,
        "cidrBlock": args.cidrBlock,
        "id": args.id,
        "isDefault": args.isDefault,
        "isRemoteVpcSnat": args.isRemoteVpcSnat,
        "name": args.name,
        "resultOutputFile": args.resultOutputFile,
        "subnetId": args.subnetId,
        "tagKey": args.tagKey,
        "tags": args.tags,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcSubnets.
 */
export interface GetVpcSubnetsArgs {
    availabilityZone?: string;
    cdcId?: string;
    cidrBlock?: string;
    id?: string;
    isDefault?: boolean;
    isRemoteVpcSnat?: boolean;
    name?: string;
    resultOutputFile?: string;
    subnetId?: string;
    tagKey?: string;
    tags?: {[key: string]: string};
    vpcId?: string;
}

/**
 * A collection of values returned by getVpcSubnets.
 */
export interface GetVpcSubnetsResult {
    readonly availabilityZone?: string;
    readonly cdcId?: string;
    readonly cidrBlock?: string;
    readonly id: string;
    readonly instanceLists: outputs.GetVpcSubnetsInstanceList[];
    readonly isDefault?: boolean;
    readonly isRemoteVpcSnat?: boolean;
    readonly name?: string;
    readonly resultOutputFile?: string;
    readonly subnetId?: string;
    readonly tagKey?: string;
    readonly tags?: {[key: string]: string};
    readonly vpcId?: string;
}
export function getVpcSubnetsOutput(args?: GetVpcSubnetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcSubnetsResult> {
    return pulumi.output(args).apply((a: any) => getVpcSubnets(a, opts))
}

/**
 * A collection of arguments for invoking getVpcSubnets.
 */
export interface GetVpcSubnetsOutputArgs {
    availabilityZone?: pulumi.Input<string>;
    cdcId?: pulumi.Input<string>;
    cidrBlock?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isDefault?: pulumi.Input<boolean>;
    isRemoteVpcSnat?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    tagKey?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcId?: pulumi.Input<string>;
}
