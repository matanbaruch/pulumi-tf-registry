// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTsfMicroservice(args: GetTsfMicroserviceArgs, opts?: pulumi.InvokeOptions): Promise<GetTsfMicroserviceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getTsfMicroservice:getTsfMicroservice", {
        "id": args.id,
        "microserviceIdLists": args.microserviceIdLists,
        "microserviceNameLists": args.microserviceNameLists,
        "namespaceId": args.namespaceId,
        "resultOutputFile": args.resultOutputFile,
        "statuses": args.statuses,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTsfMicroservice.
 */
export interface GetTsfMicroserviceArgs {
    id?: string;
    microserviceIdLists?: string[];
    microserviceNameLists?: string[];
    namespaceId: string;
    resultOutputFile?: string;
    statuses?: string[];
}

/**
 * A collection of values returned by getTsfMicroservice.
 */
export interface GetTsfMicroserviceResult {
    readonly id: string;
    readonly microserviceIdLists?: string[];
    readonly microserviceNameLists?: string[];
    readonly namespaceId: string;
    readonly resultOutputFile?: string;
    readonly results: outputs.GetTsfMicroserviceResult[];
    readonly statuses?: string[];
}
export function getTsfMicroserviceOutput(args: GetTsfMicroserviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTsfMicroserviceResult> {
    return pulumi.output(args).apply((a: any) => getTsfMicroservice(a, opts))
}

/**
 * A collection of arguments for invoking getTsfMicroservice.
 */
export interface GetTsfMicroserviceOutputArgs {
    id?: pulumi.Input<string>;
    microserviceIdLists?: pulumi.Input<pulumi.Input<string>[]>;
    microserviceNameLists?: pulumi.Input<pulumi.Input<string>[]>;
    namespaceId: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
}
