// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TsfLane extends pulumi.CustomResource {
    /**
     * Get an existing TsfLane resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TsfLaneState, opts?: pulumi.CustomResourceOptions): TsfLane {
        return new TsfLane(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/tsfLane:TsfLane';

    /**
     * Returns true if the given object is an instance of TsfLane.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TsfLane {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TsfLane.__pulumiType;
    }

    /**
     * creation time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<number>;
    /**
     * Whether to enter the application.
     */
    public /*out*/ readonly entrance!: pulumi.Output<boolean>;
    /**
     * Swimlane Deployment Group Information.
     */
    public readonly laneGroupLists!: pulumi.Output<outputs.TsfLaneLaneGroupList[]>;
    /**
     * Lane id.
     */
    public /*out*/ readonly laneId!: pulumi.Output<string>;
    /**
     * Lane name.
     */
    public readonly laneName!: pulumi.Output<string>;
    /**
     * A list of namespaces to which the swimlane has associated deployment groups.
     */
    public /*out*/ readonly namespaceIdLists!: pulumi.Output<string[]>;
    /**
     * Program id list.
     */
    public readonly programIdLists!: pulumi.Output<string[] | undefined>;
    /**
     * Lane Remarks.
     */
    public readonly remark!: pulumi.Output<string>;
    /**
     * update time.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<number>;

    /**
     * Create a TsfLane resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TsfLaneArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TsfLaneArgs | TsfLaneState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TsfLaneState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["entrance"] = state ? state.entrance : undefined;
            resourceInputs["laneGroupLists"] = state ? state.laneGroupLists : undefined;
            resourceInputs["laneId"] = state ? state.laneId : undefined;
            resourceInputs["laneName"] = state ? state.laneName : undefined;
            resourceInputs["namespaceIdLists"] = state ? state.namespaceIdLists : undefined;
            resourceInputs["programIdLists"] = state ? state.programIdLists : undefined;
            resourceInputs["remark"] = state ? state.remark : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as TsfLaneArgs | undefined;
            if ((!args || args.laneGroupLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'laneGroupLists'");
            }
            if ((!args || args.laneName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'laneName'");
            }
            if ((!args || args.remark === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remark'");
            }
            resourceInputs["laneGroupLists"] = args ? args.laneGroupLists : undefined;
            resourceInputs["laneName"] = args ? args.laneName : undefined;
            resourceInputs["programIdLists"] = args ? args.programIdLists : undefined;
            resourceInputs["remark"] = args ? args.remark : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["entrance"] = undefined /*out*/;
            resourceInputs["laneId"] = undefined /*out*/;
            resourceInputs["namespaceIdLists"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TsfLane.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TsfLane resources.
 */
export interface TsfLaneState {
    /**
     * creation time.
     */
    createTime?: pulumi.Input<number>;
    /**
     * Whether to enter the application.
     */
    entrance?: pulumi.Input<boolean>;
    /**
     * Swimlane Deployment Group Information.
     */
    laneGroupLists?: pulumi.Input<pulumi.Input<inputs.TsfLaneLaneGroupList>[]>;
    /**
     * Lane id.
     */
    laneId?: pulumi.Input<string>;
    /**
     * Lane name.
     */
    laneName?: pulumi.Input<string>;
    /**
     * A list of namespaces to which the swimlane has associated deployment groups.
     */
    namespaceIdLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Program id list.
     */
    programIdLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Lane Remarks.
     */
    remark?: pulumi.Input<string>;
    /**
     * update time.
     */
    updateTime?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a TsfLane resource.
 */
export interface TsfLaneArgs {
    /**
     * Swimlane Deployment Group Information.
     */
    laneGroupLists: pulumi.Input<pulumi.Input<inputs.TsfLaneLaneGroupList>[]>;
    /**
     * Lane name.
     */
    laneName: pulumi.Input<string>;
    /**
     * Program id list.
     */
    programIdLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Lane Remarks.
     */
    remark: pulumi.Input<string>;
}
