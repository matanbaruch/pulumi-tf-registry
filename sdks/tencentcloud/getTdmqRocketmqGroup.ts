// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTdmqRocketmqGroup(args: GetTdmqRocketmqGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetTdmqRocketmqGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getTdmqRocketmqGroup:getTdmqRocketmqGroup", {
        "clusterId": args.clusterId,
        "filterGroup": args.filterGroup,
        "filterOneGroup": args.filterOneGroup,
        "filterTopic": args.filterTopic,
        "id": args.id,
        "namespaceId": args.namespaceId,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTdmqRocketmqGroup.
 */
export interface GetTdmqRocketmqGroupArgs {
    clusterId: string;
    filterGroup?: string;
    filterOneGroup?: string;
    filterTopic?: string;
    id?: string;
    namespaceId: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getTdmqRocketmqGroup.
 */
export interface GetTdmqRocketmqGroupResult {
    readonly clusterId: string;
    readonly filterGroup?: string;
    readonly filterOneGroup?: string;
    readonly filterTopic?: string;
    readonly groups: outputs.GetTdmqRocketmqGroupGroup[];
    readonly id: string;
    readonly namespaceId: string;
    readonly resultOutputFile?: string;
}
export function getTdmqRocketmqGroupOutput(args: GetTdmqRocketmqGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTdmqRocketmqGroupResult> {
    return pulumi.output(args).apply((a: any) => getTdmqRocketmqGroup(a, opts))
}

/**
 * A collection of arguments for invoking getTdmqRocketmqGroup.
 */
export interface GetTdmqRocketmqGroupOutputArgs {
    clusterId: pulumi.Input<string>;
    filterGroup?: pulumi.Input<string>;
    filterOneGroup?: pulumi.Input<string>;
    filterTopic?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    namespaceId: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
