// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getElasticsearchInstances(args?: GetElasticsearchInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticsearchInstancesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getElasticsearchInstances:getElasticsearchInstances", {
        "id": args.id,
        "instanceId": args.instanceId,
        "instanceName": args.instanceName,
        "resultOutputFile": args.resultOutputFile,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getElasticsearchInstances.
 */
export interface GetElasticsearchInstancesArgs {
    id?: string;
    instanceId?: string;
    instanceName?: string;
    resultOutputFile?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getElasticsearchInstances.
 */
export interface GetElasticsearchInstancesResult {
    readonly id: string;
    readonly instanceId?: string;
    readonly instanceLists: outputs.GetElasticsearchInstancesInstanceList[];
    readonly instanceName?: string;
    readonly resultOutputFile?: string;
    readonly tags?: {[key: string]: string};
}
export function getElasticsearchInstancesOutput(args?: GetElasticsearchInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetElasticsearchInstancesResult> {
    return pulumi.output(args).apply((a: any) => getElasticsearchInstances(a, opts))
}

/**
 * A collection of arguments for invoking getElasticsearchInstances.
 */
export interface GetElasticsearchInstancesOutputArgs {
    id?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    instanceName?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
