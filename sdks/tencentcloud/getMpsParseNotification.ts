// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMpsParseNotification(args: GetMpsParseNotificationArgs, opts?: pulumi.InvokeOptions): Promise<GetMpsParseNotificationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getMpsParseNotification:getMpsParseNotification", {
        "content": args.content,
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMpsParseNotification.
 */
export interface GetMpsParseNotificationArgs {
    content: string;
    id?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getMpsParseNotification.
 */
export interface GetMpsParseNotificationResult {
    readonly content: string;
    readonly id: string;
    readonly resultOutputFile?: string;
}
export function getMpsParseNotificationOutput(args: GetMpsParseNotificationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMpsParseNotificationResult> {
    return pulumi.output(args).apply((a: any) => getMpsParseNotification(a, opts))
}

/**
 * A collection of arguments for invoking getMpsParseNotification.
 */
export interface GetMpsParseNotificationOutputArgs {
    content: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
