// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PlacementGroup extends pulumi.CustomResource {
    /**
     * Get an existing PlacementGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PlacementGroupState, opts?: pulumi.CustomResourceOptions): PlacementGroup {
        return new PlacementGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/placementGroup:PlacementGroup';

    /**
     * Returns true if the given object is an instance of PlacementGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PlacementGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PlacementGroup.__pulumiType;
    }

    /**
     * Creation time of the placement group.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Number of hosts in the placement group.
     */
    public /*out*/ readonly currentNum!: pulumi.Output<number>;
    /**
     * Maximum number of hosts in the placement group.
     */
    public /*out*/ readonly cvmQuotaTotal!: pulumi.Output<number>;
    /**
     * Name of the placement group, 1-60 characters in length.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Type of the placement group. Valid values: `HOST`, `SW` and `RACK`.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a PlacementGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PlacementGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PlacementGroupArgs | PlacementGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PlacementGroupState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["currentNum"] = state ? state.currentNum : undefined;
            resourceInputs["cvmQuotaTotal"] = state ? state.cvmQuotaTotal : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as PlacementGroupArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["currentNum"] = undefined /*out*/;
            resourceInputs["cvmQuotaTotal"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PlacementGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PlacementGroup resources.
 */
export interface PlacementGroupState {
    /**
     * Creation time of the placement group.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Number of hosts in the placement group.
     */
    currentNum?: pulumi.Input<number>;
    /**
     * Maximum number of hosts in the placement group.
     */
    cvmQuotaTotal?: pulumi.Input<number>;
    /**
     * Name of the placement group, 1-60 characters in length.
     */
    name?: pulumi.Input<string>;
    /**
     * Type of the placement group. Valid values: `HOST`, `SW` and `RACK`.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PlacementGroup resource.
 */
export interface PlacementGroupArgs {
    /**
     * Name of the placement group, 1-60 characters in length.
     */
    name?: pulumi.Input<string>;
    /**
     * Type of the placement group. Valid values: `HOST`, `SW` and `RACK`.
     */
    type: pulumi.Input<string>;
}
