// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDbbrainSlowLogUserSqlAdvice(args: GetDbbrainSlowLogUserSqlAdviceArgs, opts?: pulumi.InvokeOptions): Promise<GetDbbrainSlowLogUserSqlAdviceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getDbbrainSlowLogUserSqlAdvice:getDbbrainSlowLogUserSqlAdvice", {
        "id": args.id,
        "instanceId": args.instanceId,
        "product": args.product,
        "resultOutputFile": args.resultOutputFile,
        "schema": args.schema,
        "sqlText": args.sqlText,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDbbrainSlowLogUserSqlAdvice.
 */
export interface GetDbbrainSlowLogUserSqlAdviceArgs {
    id?: string;
    instanceId: string;
    product?: string;
    resultOutputFile?: string;
    schema?: string;
    sqlText: string;
}

/**
 * A collection of values returned by getDbbrainSlowLogUserSqlAdvice.
 */
export interface GetDbbrainSlowLogUserSqlAdviceResult {
    readonly advices: string;
    readonly comments: string;
    readonly cost: string;
    readonly id: string;
    readonly instanceId: string;
    readonly product?: string;
    readonly requestId: string;
    readonly resultOutputFile?: string;
    readonly schema: string;
    readonly sqlPlan: string;
    readonly sqlText: string;
    readonly tables: string;
}
export function getDbbrainSlowLogUserSqlAdviceOutput(args: GetDbbrainSlowLogUserSqlAdviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDbbrainSlowLogUserSqlAdviceResult> {
    return pulumi.output(args).apply((a: any) => getDbbrainSlowLogUserSqlAdvice(a, opts))
}

/**
 * A collection of arguments for invoking getDbbrainSlowLogUserSqlAdvice.
 */
export interface GetDbbrainSlowLogUserSqlAdviceOutputArgs {
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    product?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    schema?: pulumi.Input<string>;
    sqlText: pulumi.Input<string>;
}
