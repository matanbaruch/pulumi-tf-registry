// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MpsPersonSample extends pulumi.CustomResource {
    /**
     * Get an existing MpsPersonSample resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MpsPersonSampleState, opts?: pulumi.CustomResourceOptions): MpsPersonSample {
        return new MpsPersonSample(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/mpsPersonSample:MpsPersonSample';

    /**
     * Returns true if the given object is an instance of MpsPersonSample.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MpsPersonSample {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MpsPersonSample.__pulumiType;
    }

    /**
     * Material description, length limit: 1024 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Material image [Base64](https://tools.ietf.org/html/rfc4648) encoded string only supports jpeg and png image formats.
     * Array length limit: 5 images.Note: The picture must be a single portrait with clearer facial features, with a pixel size
     * of not less than 200*200.
     */
    public readonly faceContents!: pulumi.Output<string[] | undefined>;
    /**
     * Material name, length limit: 20 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Material application scene, optional value:1. Recognition.Face: used for content recognition 2. Review.Face: used for
     * inappropriate content identification 3. All: contains all of the above, equivalent to 1+2.
     */
    public readonly usages!: pulumi.Output<string[]>;

    /**
     * Create a MpsPersonSample resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MpsPersonSampleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MpsPersonSampleArgs | MpsPersonSampleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MpsPersonSampleState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["faceContents"] = state ? state.faceContents : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["usages"] = state ? state.usages : undefined;
        } else {
            const args = argsOrState as MpsPersonSampleArgs | undefined;
            if ((!args || args.usages === undefined) && !opts.urn) {
                throw new Error("Missing required property 'usages'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["faceContents"] = args ? args.faceContents : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["usages"] = args ? args.usages : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MpsPersonSample.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MpsPersonSample resources.
 */
export interface MpsPersonSampleState {
    /**
     * Material description, length limit: 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Material image [Base64](https://tools.ietf.org/html/rfc4648) encoded string only supports jpeg and png image formats.
     * Array length limit: 5 images.Note: The picture must be a single portrait with clearer facial features, with a pixel size
     * of not less than 200*200.
     */
    faceContents?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Material name, length limit: 20 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Material application scene, optional value:1. Recognition.Face: used for content recognition 2. Review.Face: used for
     * inappropriate content identification 3. All: contains all of the above, equivalent to 1+2.
     */
    usages?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a MpsPersonSample resource.
 */
export interface MpsPersonSampleArgs {
    /**
     * Material description, length limit: 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Material image [Base64](https://tools.ietf.org/html/rfc4648) encoded string only supports jpeg and png image formats.
     * Array length limit: 5 images.Note: The picture must be a single portrait with clearer facial features, with a pixel size
     * of not less than 200*200.
     */
    faceContents?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Material name, length limit: 20 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Material application scene, optional value:1. Recognition.Face: used for content recognition 2. Review.Face: used for
     * inappropriate content identification 3. All: contains all of the above, equivalent to 1+2.
     */
    usages: pulumi.Input<pulumi.Input<string>[]>;
}
