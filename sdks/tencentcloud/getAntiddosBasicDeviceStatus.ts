// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAntiddosBasicDeviceStatus(args?: GetAntiddosBasicDeviceStatusArgs, opts?: pulumi.InvokeOptions): Promise<GetAntiddosBasicDeviceStatusResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getAntiddosBasicDeviceStatus:getAntiddosBasicDeviceStatus", {
        "filterRegion": args.filterRegion,
        "id": args.id,
        "idLists": args.idLists,
        "ipLists": args.ipLists,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAntiddosBasicDeviceStatus.
 */
export interface GetAntiddosBasicDeviceStatusArgs {
    filterRegion?: number;
    id?: string;
    idLists?: string[];
    ipLists?: string[];
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getAntiddosBasicDeviceStatus.
 */
export interface GetAntiddosBasicDeviceStatusResult {
    readonly clbDatas: outputs.GetAntiddosBasicDeviceStatusClbData[];
    readonly datas: outputs.GetAntiddosBasicDeviceStatusData[];
    readonly filterRegion?: number;
    readonly id: string;
    readonly idLists?: string[];
    readonly ipLists?: string[];
    readonly resultOutputFile?: string;
}
export function getAntiddosBasicDeviceStatusOutput(args?: GetAntiddosBasicDeviceStatusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAntiddosBasicDeviceStatusResult> {
    return pulumi.output(args).apply((a: any) => getAntiddosBasicDeviceStatus(a, opts))
}

/**
 * A collection of arguments for invoking getAntiddosBasicDeviceStatus.
 */
export interface GetAntiddosBasicDeviceStatusOutputArgs {
    filterRegion?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    idLists?: pulumi.Input<pulumi.Input<string>[]>;
    ipLists?: pulumi.Input<pulumi.Input<string>[]>;
    resultOutputFile?: pulumi.Input<string>;
}
