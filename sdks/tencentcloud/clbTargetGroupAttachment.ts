// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ClbTargetGroupAttachment extends pulumi.CustomResource {
    /**
     * Get an existing ClbTargetGroupAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClbTargetGroupAttachmentState, opts?: pulumi.CustomResourceOptions): ClbTargetGroupAttachment {
        return new ClbTargetGroupAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/clbTargetGroupAttachment:ClbTargetGroupAttachment';

    /**
     * Returns true if the given object is an instance of ClbTargetGroupAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClbTargetGroupAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClbTargetGroupAttachment.__pulumiType;
    }

    /**
     * ID of the CLB.
     */
    public readonly clbId!: pulumi.Output<string>;
    /**
     * ID of the CLB listener.
     */
    public readonly listenerId!: pulumi.Output<string>;
    /**
     * ID of the CLB listener rule.
     */
    public readonly ruleId!: pulumi.Output<string | undefined>;
    /**
     * ID of the CLB target group.
     */
    public readonly targetGroupId!: pulumi.Output<string | undefined>;
    /**
     * ID of the CLB target group.
     *
     * @deprecated Deprecated
     */
    public readonly targrtGroupId!: pulumi.Output<string | undefined>;

    /**
     * Create a ClbTargetGroupAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClbTargetGroupAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClbTargetGroupAttachmentArgs | ClbTargetGroupAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClbTargetGroupAttachmentState | undefined;
            resourceInputs["clbId"] = state ? state.clbId : undefined;
            resourceInputs["listenerId"] = state ? state.listenerId : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
            resourceInputs["targetGroupId"] = state ? state.targetGroupId : undefined;
            resourceInputs["targrtGroupId"] = state ? state.targrtGroupId : undefined;
        } else {
            const args = argsOrState as ClbTargetGroupAttachmentArgs | undefined;
            if ((!args || args.clbId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clbId'");
            }
            if ((!args || args.listenerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listenerId'");
            }
            resourceInputs["clbId"] = args ? args.clbId : undefined;
            resourceInputs["listenerId"] = args ? args.listenerId : undefined;
            resourceInputs["ruleId"] = args ? args.ruleId : undefined;
            resourceInputs["targetGroupId"] = args ? args.targetGroupId : undefined;
            resourceInputs["targrtGroupId"] = args ? args.targrtGroupId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClbTargetGroupAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ClbTargetGroupAttachment resources.
 */
export interface ClbTargetGroupAttachmentState {
    /**
     * ID of the CLB.
     */
    clbId?: pulumi.Input<string>;
    /**
     * ID of the CLB listener.
     */
    listenerId?: pulumi.Input<string>;
    /**
     * ID of the CLB listener rule.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * ID of the CLB target group.
     */
    targetGroupId?: pulumi.Input<string>;
    /**
     * ID of the CLB target group.
     *
     * @deprecated Deprecated
     */
    targrtGroupId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ClbTargetGroupAttachment resource.
 */
export interface ClbTargetGroupAttachmentArgs {
    /**
     * ID of the CLB.
     */
    clbId: pulumi.Input<string>;
    /**
     * ID of the CLB listener.
     */
    listenerId: pulumi.Input<string>;
    /**
     * ID of the CLB listener rule.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * ID of the CLB target group.
     */
    targetGroupId?: pulumi.Input<string>;
    /**
     * ID of the CLB target group.
     *
     * @deprecated Deprecated
     */
    targrtGroupId?: pulumi.Input<string>;
}
