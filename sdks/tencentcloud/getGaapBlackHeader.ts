// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGaapBlackHeader(args?: GetGaapBlackHeaderArgs, opts?: pulumi.InvokeOptions): Promise<GetGaapBlackHeaderResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getGaapBlackHeader:getGaapBlackHeader", {
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGaapBlackHeader.
 */
export interface GetGaapBlackHeaderArgs {
    id?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getGaapBlackHeader.
 */
export interface GetGaapBlackHeaderResult {
    readonly blackHeaders: string[];
    readonly id: string;
    readonly resultOutputFile?: string;
}
export function getGaapBlackHeaderOutput(args?: GetGaapBlackHeaderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGaapBlackHeaderResult> {
    return pulumi.output(args).apply((a: any) => getGaapBlackHeader(a, opts))
}

/**
 * A collection of arguments for invoking getGaapBlackHeader.
 */
export interface GetGaapBlackHeaderOutputArgs {
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
