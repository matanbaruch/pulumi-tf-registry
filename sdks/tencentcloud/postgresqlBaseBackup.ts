// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PostgresqlBaseBackup extends pulumi.CustomResource {
    /**
     * Get an existing PostgresqlBaseBackup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PostgresqlBaseBackupState, opts?: pulumi.CustomResourceOptions): PostgresqlBaseBackup {
        return new PostgresqlBaseBackup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/postgresqlBaseBackup:PostgresqlBaseBackup';

    /**
     * Returns true if the given object is an instance of PostgresqlBaseBackup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PostgresqlBaseBackup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PostgresqlBaseBackup.__pulumiType;
    }

    /**
     * Base backup ID.
     */
    public /*out*/ readonly baseBackupId!: pulumi.Output<string>;
    /**
     * Instance ID.
     */
    public readonly dbInstanceId!: pulumi.Output<string>;
    /**
     * New expiration time.
     */
    public readonly newExpireTime!: pulumi.Output<string>;
    /**
     * Tag description list.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a PostgresqlBaseBackup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PostgresqlBaseBackupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PostgresqlBaseBackupArgs | PostgresqlBaseBackupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PostgresqlBaseBackupState | undefined;
            resourceInputs["baseBackupId"] = state ? state.baseBackupId : undefined;
            resourceInputs["dbInstanceId"] = state ? state.dbInstanceId : undefined;
            resourceInputs["newExpireTime"] = state ? state.newExpireTime : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as PostgresqlBaseBackupArgs | undefined;
            if ((!args || args.dbInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceId'");
            }
            resourceInputs["dbInstanceId"] = args ? args.dbInstanceId : undefined;
            resourceInputs["newExpireTime"] = args ? args.newExpireTime : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["baseBackupId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PostgresqlBaseBackup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PostgresqlBaseBackup resources.
 */
export interface PostgresqlBaseBackupState {
    /**
     * Base backup ID.
     */
    baseBackupId?: pulumi.Input<string>;
    /**
     * Instance ID.
     */
    dbInstanceId?: pulumi.Input<string>;
    /**
     * New expiration time.
     */
    newExpireTime?: pulumi.Input<string>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a PostgresqlBaseBackup resource.
 */
export interface PostgresqlBaseBackupArgs {
    /**
     * Instance ID.
     */
    dbInstanceId: pulumi.Input<string>;
    /**
     * New expiration time.
     */
    newExpireTime?: pulumi.Input<string>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
