// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TseCngwCanaryRule extends pulumi.CustomResource {
    /**
     * Get an existing TseCngwCanaryRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TseCngwCanaryRuleState, opts?: pulumi.CustomResourceOptions): TseCngwCanaryRule {
        return new TseCngwCanaryRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/tseCngwCanaryRule:TseCngwCanaryRule';

    /**
     * Returns true if the given object is an instance of TseCngwCanaryRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TseCngwCanaryRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TseCngwCanaryRule.__pulumiType;
    }

    /**
     * canary rule configuration.
     */
    public readonly canaryRule!: pulumi.Output<outputs.TseCngwCanaryRuleCanaryRule>;
    /**
     * gateway ID.
     */
    public readonly gatewayId!: pulumi.Output<string>;
    /**
     * service ID.
     */
    public readonly serviceId!: pulumi.Output<string>;
    /**
     * Tag description list.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a TseCngwCanaryRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TseCngwCanaryRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TseCngwCanaryRuleArgs | TseCngwCanaryRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TseCngwCanaryRuleState | undefined;
            resourceInputs["canaryRule"] = state ? state.canaryRule : undefined;
            resourceInputs["gatewayId"] = state ? state.gatewayId : undefined;
            resourceInputs["serviceId"] = state ? state.serviceId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as TseCngwCanaryRuleArgs | undefined;
            if ((!args || args.canaryRule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'canaryRule'");
            }
            if ((!args || args.gatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayId'");
            }
            if ((!args || args.serviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceId'");
            }
            resourceInputs["canaryRule"] = args ? args.canaryRule : undefined;
            resourceInputs["gatewayId"] = args ? args.gatewayId : undefined;
            resourceInputs["serviceId"] = args ? args.serviceId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TseCngwCanaryRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TseCngwCanaryRule resources.
 */
export interface TseCngwCanaryRuleState {
    /**
     * canary rule configuration.
     */
    canaryRule?: pulumi.Input<inputs.TseCngwCanaryRuleCanaryRule>;
    /**
     * gateway ID.
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * service ID.
     */
    serviceId?: pulumi.Input<string>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a TseCngwCanaryRule resource.
 */
export interface TseCngwCanaryRuleArgs {
    /**
     * canary rule configuration.
     */
    canaryRule: pulumi.Input<inputs.TseCngwCanaryRuleCanaryRule>;
    /**
     * gateway ID.
     */
    gatewayId: pulumi.Input<string>;
    /**
     * service ID.
     */
    serviceId: pulumi.Input<string>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
