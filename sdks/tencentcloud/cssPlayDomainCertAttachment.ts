// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CssPlayDomainCertAttachment extends pulumi.CustomResource {
    /**
     * Get an existing CssPlayDomainCertAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CssPlayDomainCertAttachmentState, opts?: pulumi.CustomResourceOptions): CssPlayDomainCertAttachment {
        return new CssPlayDomainCertAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/cssPlayDomainCertAttachment:CssPlayDomainCertAttachment';

    /**
     * Returns true if the given object is an instance of CssPlayDomainCertAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CssPlayDomainCertAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CssPlayDomainCertAttachment.__pulumiType;
    }

    /**
     * certificate expiration time.
     */
    public /*out*/ readonly certExpireTime!: pulumi.Output<string>;
    /**
     * certificate ID.
     */
    public /*out*/ readonly certId!: pulumi.Output<number>;
    /**
     * certificate type. 0: Self-owned certificate, 1: Tencent Cloud ssl managed certificate.
     */
    public /*out*/ readonly certType!: pulumi.Output<number>;
    /**
     * certificate remarks. Synonymous with CertName.
     */
    public /*out*/ readonly certificateAlias!: pulumi.Output<string>;
    /**
     * Tencent cloud ssl certificate Id. Refer to `tencentcloud.SslCertificate` to create or obtain the resource ID.
     */
    public readonly cloudCertId!: pulumi.Output<string | undefined>;
    /**
     * The playback domains to bind and whether to enable HTTPS for them. If `CloudCertId` is unspecified, and a domain is
     * already bound with a certificate, this API will only update the HTTPS configuration of the domain.
     */
    public readonly domainInfo!: pulumi.Output<outputs.CssPlayDomainCertAttachmentDomainInfo>;
    /**
     * The time when the rule was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a CssPlayDomainCertAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CssPlayDomainCertAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CssPlayDomainCertAttachmentArgs | CssPlayDomainCertAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CssPlayDomainCertAttachmentState | undefined;
            resourceInputs["certExpireTime"] = state ? state.certExpireTime : undefined;
            resourceInputs["certId"] = state ? state.certId : undefined;
            resourceInputs["certType"] = state ? state.certType : undefined;
            resourceInputs["certificateAlias"] = state ? state.certificateAlias : undefined;
            resourceInputs["cloudCertId"] = state ? state.cloudCertId : undefined;
            resourceInputs["domainInfo"] = state ? state.domainInfo : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as CssPlayDomainCertAttachmentArgs | undefined;
            if ((!args || args.domainInfo === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainInfo'");
            }
            resourceInputs["cloudCertId"] = args ? args.cloudCertId : undefined;
            resourceInputs["domainInfo"] = args ? args.domainInfo : undefined;
            resourceInputs["certExpireTime"] = undefined /*out*/;
            resourceInputs["certId"] = undefined /*out*/;
            resourceInputs["certType"] = undefined /*out*/;
            resourceInputs["certificateAlias"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CssPlayDomainCertAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CssPlayDomainCertAttachment resources.
 */
export interface CssPlayDomainCertAttachmentState {
    /**
     * certificate expiration time.
     */
    certExpireTime?: pulumi.Input<string>;
    /**
     * certificate ID.
     */
    certId?: pulumi.Input<number>;
    /**
     * certificate type. 0: Self-owned certificate, 1: Tencent Cloud ssl managed certificate.
     */
    certType?: pulumi.Input<number>;
    /**
     * certificate remarks. Synonymous with CertName.
     */
    certificateAlias?: pulumi.Input<string>;
    /**
     * Tencent cloud ssl certificate Id. Refer to `tencentcloud.SslCertificate` to create or obtain the resource ID.
     */
    cloudCertId?: pulumi.Input<string>;
    /**
     * The playback domains to bind and whether to enable HTTPS for them. If `CloudCertId` is unspecified, and a domain is
     * already bound with a certificate, this API will only update the HTTPS configuration of the domain.
     */
    domainInfo?: pulumi.Input<inputs.CssPlayDomainCertAttachmentDomainInfo>;
    /**
     * The time when the rule was last updated.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CssPlayDomainCertAttachment resource.
 */
export interface CssPlayDomainCertAttachmentArgs {
    /**
     * Tencent cloud ssl certificate Id. Refer to `tencentcloud.SslCertificate` to create or obtain the resource ID.
     */
    cloudCertId?: pulumi.Input<string>;
    /**
     * The playback domains to bind and whether to enable HTTPS for them. If `CloudCertId` is unspecified, and a domain is
     * already bound with a certificate, this API will only update the HTTPS configuration of the domain.
     */
    domainInfo: pulumi.Input<inputs.CssPlayDomainCertAttachmentDomainInfo>;
}
