// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class TsfGroup extends pulumi.CustomResource {
    /**
     * Get an existing TsfGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TsfGroupState, opts?: pulumi.CustomResourceOptions): TsfGroup {
        return new TsfGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/tsfGroup:TsfGroup';

    /**
     * Returns true if the given object is an instance of TsfGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TsfGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TsfGroup.__pulumiType;
    }

    /**
     * Deployment Group Notes.
     */
    public readonly alias!: pulumi.Output<string | undefined>;
    /**
     * The application ID to which the group belongs.
     */
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * Cluster ID.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * Group description.
     */
    public readonly groupDesc!: pulumi.Output<string | undefined>;
    /**
     * Group name field, length 1~60, beginning with a letter or underscore, can contain alphanumeric underscore.
     */
    public readonly groupName!: pulumi.Output<string>;
    /**
     * Deployment Group Resource Type.
     */
    public /*out*/ readonly groupResourceType!: pulumi.Output<string>;
    /**
     * ID of the namespace to which the group belongs.
     */
    public readonly namespaceId!: pulumi.Output<string>;
    /**
     * Tag description list.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a TsfGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TsfGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TsfGroupArgs | TsfGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TsfGroupState | undefined;
            resourceInputs["alias"] = state ? state.alias : undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["groupDesc"] = state ? state.groupDesc : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["groupResourceType"] = state ? state.groupResourceType : undefined;
            resourceInputs["namespaceId"] = state ? state.namespaceId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as TsfGroupArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.groupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupName'");
            }
            if ((!args || args.namespaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespaceId'");
            }
            resourceInputs["alias"] = args ? args.alias : undefined;
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["groupDesc"] = args ? args.groupDesc : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["namespaceId"] = args ? args.namespaceId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["groupResourceType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TsfGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TsfGroup resources.
 */
export interface TsfGroupState {
    /**
     * Deployment Group Notes.
     */
    alias?: pulumi.Input<string>;
    /**
     * The application ID to which the group belongs.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Cluster ID.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Group description.
     */
    groupDesc?: pulumi.Input<string>;
    /**
     * Group name field, length 1~60, beginning with a letter or underscore, can contain alphanumeric underscore.
     */
    groupName?: pulumi.Input<string>;
    /**
     * Deployment Group Resource Type.
     */
    groupResourceType?: pulumi.Input<string>;
    /**
     * ID of the namespace to which the group belongs.
     */
    namespaceId?: pulumi.Input<string>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a TsfGroup resource.
 */
export interface TsfGroupArgs {
    /**
     * Deployment Group Notes.
     */
    alias?: pulumi.Input<string>;
    /**
     * The application ID to which the group belongs.
     */
    applicationId: pulumi.Input<string>;
    /**
     * Cluster ID.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Group description.
     */
    groupDesc?: pulumi.Input<string>;
    /**
     * Group name field, length 1~60, beginning with a letter or underscore, can contain alphanumeric underscore.
     */
    groupName: pulumi.Input<string>;
    /**
     * ID of the namespace to which the group belongs.
     */
    namespaceId: pulumi.Input<string>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
