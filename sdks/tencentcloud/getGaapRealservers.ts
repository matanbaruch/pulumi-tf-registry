// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGaapRealservers(args?: GetGaapRealserversArgs, opts?: pulumi.InvokeOptions): Promise<GetGaapRealserversResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getGaapRealservers:getGaapRealservers", {
        "domain": args.domain,
        "id": args.id,
        "ip": args.ip,
        "name": args.name,
        "projectId": args.projectId,
        "resultOutputFile": args.resultOutputFile,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGaapRealservers.
 */
export interface GetGaapRealserversArgs {
    domain?: string;
    id?: string;
    ip?: string;
    name?: string;
    projectId?: number;
    resultOutputFile?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getGaapRealservers.
 */
export interface GetGaapRealserversResult {
    readonly domain?: string;
    readonly id: string;
    readonly ip?: string;
    readonly name?: string;
    readonly projectId?: number;
    readonly realservers: outputs.GetGaapRealserversRealserver[];
    readonly resultOutputFile?: string;
    readonly tags?: {[key: string]: string};
}
export function getGaapRealserversOutput(args?: GetGaapRealserversOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGaapRealserversResult> {
    return pulumi.output(args).apply((a: any) => getGaapRealservers(a, opts))
}

/**
 * A collection of arguments for invoking getGaapRealservers.
 */
export interface GetGaapRealserversOutputArgs {
    domain?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<number>;
    resultOutputFile?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
