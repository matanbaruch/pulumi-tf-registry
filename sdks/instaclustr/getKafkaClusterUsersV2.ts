// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKafkaClusterUsersV2(args: GetKafkaClusterUsersV2Args, opts?: pulumi.InvokeOptions): Promise<GetKafkaClusterUsersV2Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("instaclustr:index/getKafkaClusterUsersV2:getKafkaClusterUsersV2", {
        "clusterId": args.clusterId,
        "filters": args.filters,
        "id": args.id,
        "kafkaClusterId": args.kafkaClusterId,
        "kafkaUsers": args.kafkaUsers,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKafkaClusterUsersV2.
 */
export interface GetKafkaClusterUsersV2Args {
    clusterId?: string;
    filters?: inputs.GetKafkaClusterUsersV2Filter[];
    id?: string;
    kafkaClusterId: string;
    kafkaUsers?: inputs.GetKafkaClusterUsersV2KafkaUser[];
}

/**
 * A collection of values returned by getKafkaClusterUsersV2.
 */
export interface GetKafkaClusterUsersV2Result {
    readonly clusterId: string;
    readonly filters?: outputs.GetKafkaClusterUsersV2Filter[];
    readonly id: string;
    readonly kafkaClusterId: string;
    readonly kafkaUsers?: outputs.GetKafkaClusterUsersV2KafkaUser[];
}
export function getKafkaClusterUsersV2Output(args: GetKafkaClusterUsersV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaClusterUsersV2Result> {
    return pulumi.output(args).apply((a: any) => getKafkaClusterUsersV2(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaClusterUsersV2.
 */
export interface GetKafkaClusterUsersV2OutputArgs {
    clusterId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetKafkaClusterUsersV2FilterArgs>[]>;
    id?: pulumi.Input<string>;
    kafkaClusterId: pulumi.Input<string>;
    kafkaUsers?: pulumi.Input<pulumi.Input<inputs.GetKafkaClusterUsersV2KafkaUserArgs>[]>;
}
