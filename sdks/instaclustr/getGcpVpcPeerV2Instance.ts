// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGcpVpcPeerV2Instance(args: GetGcpVpcPeerV2InstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetGcpVpcPeerV2InstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("instaclustr:index/getGcpVpcPeerV2Instance:getGcpVpcPeerV2Instance", {
        "cdcId": args.cdcId,
        "dataCentreProjectId": args.dataCentreProjectId,
        "dataCentreVpcNetworkName": args.dataCentreVpcNetworkName,
        "failureReason": args.failureReason,
        "id": args.id,
        "name": args.name,
        "peerProjectId": args.peerProjectId,
        "peerSubnets": args.peerSubnets,
        "peerVpcNetworkName": args.peerVpcNetworkName,
        "statusCode": args.statusCode,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGcpVpcPeerV2Instance.
 */
export interface GetGcpVpcPeerV2InstanceArgs {
    cdcId?: string;
    dataCentreProjectId?: string;
    dataCentreVpcNetworkName?: string;
    failureReason?: string;
    id: string;
    name?: string;
    peerProjectId?: string;
    peerSubnets?: string[];
    peerVpcNetworkName?: string;
    statusCode?: string;
}

/**
 * A collection of values returned by getGcpVpcPeerV2Instance.
 */
export interface GetGcpVpcPeerV2InstanceResult {
    readonly cdcId: string;
    readonly dataCentreProjectId: string;
    readonly dataCentreVpcNetworkName: string;
    readonly failureReason: string;
    readonly id: string;
    readonly name: string;
    readonly peerProjectId: string;
    readonly peerSubnets: string[];
    readonly peerVpcNetworkName: string;
    readonly statusCode: string;
}
export function getGcpVpcPeerV2InstanceOutput(args: GetGcpVpcPeerV2InstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGcpVpcPeerV2InstanceResult> {
    return pulumi.output(args).apply((a: any) => getGcpVpcPeerV2Instance(a, opts))
}

/**
 * A collection of arguments for invoking getGcpVpcPeerV2Instance.
 */
export interface GetGcpVpcPeerV2InstanceOutputArgs {
    cdcId?: pulumi.Input<string>;
    dataCentreProjectId?: pulumi.Input<string>;
    dataCentreVpcNetworkName?: pulumi.Input<string>;
    failureReason?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    peerProjectId?: pulumi.Input<string>;
    peerSubnets?: pulumi.Input<pulumi.Input<string>[]>;
    peerVpcNetworkName?: pulumi.Input<string>;
    statusCode?: pulumi.Input<string>;
}
