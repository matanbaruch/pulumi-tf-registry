// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getV2(args?: GetV2Args, opts?: pulumi.InvokeOptions): Promise<GetV2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("instaclustr:index/getV2:getV2", {
        "cloudProviderNodeSizes": args.cloudProviderNodeSizes,
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getV2.
 */
export interface GetV2Args {
    cloudProviderNodeSizes?: inputs.GetV2CloudProviderNodeSize[];
    filters?: inputs.GetV2Filter[];
    id?: string;
}

/**
 * A collection of values returned by getV2.
 */
export interface GetV2Result {
    readonly cloudProviderNodeSizes?: outputs.GetV2CloudProviderNodeSize[];
    readonly filters?: outputs.GetV2Filter[];
    readonly id: string;
}
export function getV2Output(args?: GetV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetV2Result> {
    return pulumi.output(args).apply((a: any) => getV2(a, opts))
}

/**
 * A collection of arguments for invoking getV2.
 */
export interface GetV2OutputArgs {
    cloudProviderNodeSizes?: pulumi.Input<pulumi.Input<inputs.GetV2CloudProviderNodeSizeArgs>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetV2FilterArgs>[]>;
    id?: pulumi.Input<string>;
}
