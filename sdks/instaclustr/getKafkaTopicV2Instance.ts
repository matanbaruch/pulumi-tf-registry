// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKafkaTopicV2Instance(args: GetKafkaTopicV2InstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetKafkaTopicV2InstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("instaclustr:index/getKafkaTopicV2Instance:getKafkaTopicV2Instance", {
        "clusterId": args.clusterId,
        "configs": args.configs,
        "id": args.id,
        "partitions": args.partitions,
        "replicationFactor": args.replicationFactor,
        "topic": args.topic,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKafkaTopicV2Instance.
 */
export interface GetKafkaTopicV2InstanceArgs {
    clusterId?: string;
    configs?: inputs.GetKafkaTopicV2InstanceConfig[];
    id: string;
    partitions?: number;
    replicationFactor?: number;
    topic?: string;
}

/**
 * A collection of values returned by getKafkaTopicV2Instance.
 */
export interface GetKafkaTopicV2InstanceResult {
    readonly clusterId: string;
    readonly configs?: outputs.GetKafkaTopicV2InstanceConfig[];
    readonly id: string;
    readonly partitions: number;
    readonly replicationFactor: number;
    readonly topic: string;
}
export function getKafkaTopicV2InstanceOutput(args: GetKafkaTopicV2InstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaTopicV2InstanceResult> {
    return pulumi.output(args).apply((a: any) => getKafkaTopicV2Instance(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaTopicV2Instance.
 */
export interface GetKafkaTopicV2InstanceOutputArgs {
    clusterId?: pulumi.Input<string>;
    configs?: pulumi.Input<pulumi.Input<inputs.GetKafkaTopicV2InstanceConfigArgs>[]>;
    id: pulumi.Input<string>;
    partitions?: pulumi.Input<number>;
    replicationFactor?: pulumi.Input<number>;
    topic?: pulumi.Input<string>;
}
