// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRedisClusterUsersV2(args: GetRedisClusterUsersV2Args, opts?: pulumi.InvokeOptions): Promise<GetRedisClusterUsersV2Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("instaclustr:index/getRedisClusterUsersV2:getRedisClusterUsersV2", {
        "clusterId": args.clusterId,
        "filters": args.filters,
        "id": args.id,
        "redisClusterId": args.redisClusterId,
        "redisUsers": args.redisUsers,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRedisClusterUsersV2.
 */
export interface GetRedisClusterUsersV2Args {
    clusterId?: string;
    filters?: inputs.GetRedisClusterUsersV2Filter[];
    id?: string;
    redisClusterId: string;
    redisUsers?: inputs.GetRedisClusterUsersV2RedisUser[];
}

/**
 * A collection of values returned by getRedisClusterUsersV2.
 */
export interface GetRedisClusterUsersV2Result {
    readonly clusterId: string;
    readonly filters?: outputs.GetRedisClusterUsersV2Filter[];
    readonly id: string;
    readonly redisClusterId: string;
    readonly redisUsers?: outputs.GetRedisClusterUsersV2RedisUser[];
}
export function getRedisClusterUsersV2Output(args: GetRedisClusterUsersV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRedisClusterUsersV2Result> {
    return pulumi.output(args).apply((a: any) => getRedisClusterUsersV2(a, opts))
}

/**
 * A collection of arguments for invoking getRedisClusterUsersV2.
 */
export interface GetRedisClusterUsersV2OutputArgs {
    clusterId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetRedisClusterUsersV2FilterArgs>[]>;
    id?: pulumi.Input<string>;
    redisClusterId: pulumi.Input<string>;
    redisUsers?: pulumi.Input<pulumi.Input<inputs.GetRedisClusterUsersV2RedisUserArgs>[]>;
}
