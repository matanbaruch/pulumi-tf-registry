// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKafkaConnectClusterMirrorsV2(args: GetKafkaConnectClusterMirrorsV2Args, opts?: pulumi.InvokeOptions): Promise<GetKafkaConnectClusterMirrorsV2Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("instaclustr:index/getKafkaConnectClusterMirrorsV2:getKafkaConnectClusterMirrorsV2", {
        "clusterId": args.clusterId,
        "filters": args.filters,
        "id": args.id,
        "kafkaConnectClusterId": args.kafkaConnectClusterId,
        "mirrors": args.mirrors,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKafkaConnectClusterMirrorsV2.
 */
export interface GetKafkaConnectClusterMirrorsV2Args {
    clusterId?: string;
    filters?: inputs.GetKafkaConnectClusterMirrorsV2Filter[];
    id?: string;
    kafkaConnectClusterId: string;
    mirrors?: inputs.GetKafkaConnectClusterMirrorsV2Mirror[];
}

/**
 * A collection of values returned by getKafkaConnectClusterMirrorsV2.
 */
export interface GetKafkaConnectClusterMirrorsV2Result {
    readonly clusterId: string;
    readonly filters?: outputs.GetKafkaConnectClusterMirrorsV2Filter[];
    readonly id: string;
    readonly kafkaConnectClusterId: string;
    readonly mirrors?: outputs.GetKafkaConnectClusterMirrorsV2Mirror[];
}
export function getKafkaConnectClusterMirrorsV2Output(args: GetKafkaConnectClusterMirrorsV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaConnectClusterMirrorsV2Result> {
    return pulumi.output(args).apply((a: any) => getKafkaConnectClusterMirrorsV2(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaConnectClusterMirrorsV2.
 */
export interface GetKafkaConnectClusterMirrorsV2OutputArgs {
    clusterId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetKafkaConnectClusterMirrorsV2FilterArgs>[]>;
    id?: pulumi.Input<string>;
    kafkaConnectClusterId: pulumi.Input<string>;
    mirrors?: pulumi.Input<pulumi.Input<inputs.GetKafkaConnectClusterMirrorsV2MirrorArgs>[]>;
}
