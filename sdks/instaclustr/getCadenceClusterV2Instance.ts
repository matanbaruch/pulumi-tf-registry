// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCadenceClusterV2Instance(args: GetCadenceClusterV2InstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetCadenceClusterV2InstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("instaclustr:index/getCadenceClusterV2Instance:getCadenceClusterV2Instance", {
        "awsArchivals": args.awsArchivals,
        "cadenceVersion": args.cadenceVersion,
        "currentClusterOperationStatus": args.currentClusterOperationStatus,
        "dataCentres": args.dataCentres,
        "description": args.description,
        "id": args.id,
        "name": args.name,
        "pciComplianceMode": args.pciComplianceMode,
        "privateNetworkCluster": args.privateNetworkCluster,
        "resizeSettings": args.resizeSettings,
        "sharedProvisionings": args.sharedProvisionings,
        "slaTier": args.slaTier,
        "standardProvisionings": args.standardProvisionings,
        "status": args.status,
        "targetPrimaryCadences": args.targetPrimaryCadences,
        "targetSecondaryCadences": args.targetSecondaryCadences,
        "twoFactorDeletes": args.twoFactorDeletes,
        "useCadenceWebAuth": args.useCadenceWebAuth,
        "useHttpApi": args.useHttpApi,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCadenceClusterV2Instance.
 */
export interface GetCadenceClusterV2InstanceArgs {
    awsArchivals?: inputs.GetCadenceClusterV2InstanceAwsArchival[];
    cadenceVersion?: string;
    currentClusterOperationStatus?: string;
    dataCentres?: inputs.GetCadenceClusterV2InstanceDataCentre[];
    description?: string;
    id: string;
    name?: string;
    pciComplianceMode?: boolean;
    privateNetworkCluster?: boolean;
    resizeSettings?: inputs.GetCadenceClusterV2InstanceResizeSetting[];
    sharedProvisionings?: inputs.GetCadenceClusterV2InstanceSharedProvisioning[];
    slaTier?: string;
    standardProvisionings?: inputs.GetCadenceClusterV2InstanceStandardProvisioning[];
    status?: string;
    targetPrimaryCadences?: inputs.GetCadenceClusterV2InstanceTargetPrimaryCadence[];
    targetSecondaryCadences?: inputs.GetCadenceClusterV2InstanceTargetSecondaryCadence[];
    twoFactorDeletes?: inputs.GetCadenceClusterV2InstanceTwoFactorDelete[];
    useCadenceWebAuth?: boolean;
    useHttpApi?: boolean;
}

/**
 * A collection of values returned by getCadenceClusterV2Instance.
 */
export interface GetCadenceClusterV2InstanceResult {
    readonly awsArchivals?: outputs.GetCadenceClusterV2InstanceAwsArchival[];
    readonly cadenceVersion: string;
    readonly currentClusterOperationStatus: string;
    readonly dataCentres?: outputs.GetCadenceClusterV2InstanceDataCentre[];
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly pciComplianceMode: boolean;
    readonly privateNetworkCluster: boolean;
    readonly resizeSettings?: outputs.GetCadenceClusterV2InstanceResizeSetting[];
    readonly sharedProvisionings?: outputs.GetCadenceClusterV2InstanceSharedProvisioning[];
    readonly slaTier: string;
    readonly standardProvisionings?: outputs.GetCadenceClusterV2InstanceStandardProvisioning[];
    readonly status: string;
    readonly targetPrimaryCadences?: outputs.GetCadenceClusterV2InstanceTargetPrimaryCadence[];
    readonly targetSecondaryCadences?: outputs.GetCadenceClusterV2InstanceTargetSecondaryCadence[];
    readonly twoFactorDeletes?: outputs.GetCadenceClusterV2InstanceTwoFactorDelete[];
    readonly useCadenceWebAuth: boolean;
    readonly useHttpApi: boolean;
}
export function getCadenceClusterV2InstanceOutput(args: GetCadenceClusterV2InstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCadenceClusterV2InstanceResult> {
    return pulumi.output(args).apply((a: any) => getCadenceClusterV2Instance(a, opts))
}

/**
 * A collection of arguments for invoking getCadenceClusterV2Instance.
 */
export interface GetCadenceClusterV2InstanceOutputArgs {
    awsArchivals?: pulumi.Input<pulumi.Input<inputs.GetCadenceClusterV2InstanceAwsArchivalArgs>[]>;
    cadenceVersion?: pulumi.Input<string>;
    currentClusterOperationStatus?: pulumi.Input<string>;
    dataCentres?: pulumi.Input<pulumi.Input<inputs.GetCadenceClusterV2InstanceDataCentreArgs>[]>;
    description?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pciComplianceMode?: pulumi.Input<boolean>;
    privateNetworkCluster?: pulumi.Input<boolean>;
    resizeSettings?: pulumi.Input<pulumi.Input<inputs.GetCadenceClusterV2InstanceResizeSettingArgs>[]>;
    sharedProvisionings?: pulumi.Input<pulumi.Input<inputs.GetCadenceClusterV2InstanceSharedProvisioningArgs>[]>;
    slaTier?: pulumi.Input<string>;
    standardProvisionings?: pulumi.Input<pulumi.Input<inputs.GetCadenceClusterV2InstanceStandardProvisioningArgs>[]>;
    status?: pulumi.Input<string>;
    targetPrimaryCadences?: pulumi.Input<pulumi.Input<inputs.GetCadenceClusterV2InstanceTargetPrimaryCadenceArgs>[]>;
    targetSecondaryCadences?: pulumi.Input<pulumi.Input<inputs.GetCadenceClusterV2InstanceTargetSecondaryCadenceArgs>[]>;
    twoFactorDeletes?: pulumi.Input<pulumi.Input<inputs.GetCadenceClusterV2InstanceTwoFactorDeleteArgs>[]>;
    useCadenceWebAuth?: pulumi.Input<boolean>;
    useHttpApi?: pulumi.Input<boolean>;
}
