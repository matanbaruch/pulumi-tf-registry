// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CassandraClusterV2 extends pulumi.CustomResource {
    /**
     * Get an existing CassandraClusterV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CassandraClusterV2State, opts?: pulumi.CustomResourceOptions): CassandraClusterV2 {
        return new CassandraClusterV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'instaclustr:index/cassandraClusterV2:CassandraClusterV2';

    /**
     * Returns true if the given object is an instance of CassandraClusterV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CassandraClusterV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CassandraClusterV2.__pulumiType;
    }

    /**
     * Provision this cluster for [Bundled Use
     * only](https://www.instaclustr.com/support/documentation/cadence/getting-started-with-cadence/bundled-use-only-cluster-deployments/).
     */
    public readonly bundledUseOnly!: pulumi.Output<boolean>;
    /**
     * Version of Cassandra to run on the cluster. Available versions: <ul> <li>`5.0.0`</li> <li>`4.1.5`</li> <li>`4.1.4`</li>
     * <li>`3.11.17`</li> <li>`4.0.13`</li> <li>`3.11.16`</li> <li>`4.0.12`</li> </ul>
     */
    public readonly cassandraVersion!: pulumi.Output<string>;
    /**
     * Indicates if the cluster is currently performing any restructuring operation such as being created or resized
     */
    public readonly currentClusterOperationStatus!: pulumi.Output<string>;
    /**
     * List of data centre settings.
     */
    public readonly dataCentres!: pulumi.Output<outputs.CassandraClusterV2DataCentre[]>;
    /**
     * Password of the default user created for the Cassandra cluster.
     */
    public readonly defaultUserPassword!: pulumi.Output<string>;
    /**
     * A description of the cluster
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Adds Apache Lucene to the Cassandra cluster.
     */
    public readonly luceneEnabled!: pulumi.Output<boolean>;
    /**
     * Name of the cluster.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enables Password Authentication and User Authorization.
     */
    public readonly passwordAndUserAuth!: pulumi.Output<boolean>;
    /**
     * Creates a PCI compliant cluster, see [PCI
     * Compliance](https://www.instaclustr.com/support/documentation/useful-information/pci-compliance/).
     */
    public readonly pciComplianceMode!: pulumi.Output<boolean>;
    /**
     * Creates the cluster with private network only, see [Private Network
     * Clusters](https://www.instaclustr.com/support/documentation/useful-information/private-network-clusters/).
     */
    public readonly privateNetworkCluster!: pulumi.Output<boolean>;
    /**
     * Settings to determine how resize requests will be performed for the cluster.
     */
    public readonly resizeSettings!: pulumi.Output<outputs.CassandraClusterV2ResizeSetting[] | undefined>;
    /**
     * SLA Tier of the cluster. Non-production clusters may receive lower priority support and reduced SLAs. Production tier is
     * not available when using Developer class nodes. See [SLA
     * Tier](https://www.instaclustr.com/support/documentation/useful-information/sla-tier/) for more information.
     */
    public readonly slaTier!: pulumi.Output<string>;
    /**
     * Adds the specified version of Apache Spark to the Cassandra cluster.
     */
    public readonly sparks!: pulumi.Output<outputs.CassandraClusterV2Spark[] | undefined>;
    /**
     * Status of the cluster.
     */
    public readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CassandraClusterV2Timeouts | undefined>;
    public readonly twoFactorDeletes!: pulumi.Output<outputs.CassandraClusterV2TwoFactorDelete[] | undefined>;

    /**
     * Create a CassandraClusterV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CassandraClusterV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CassandraClusterV2Args | CassandraClusterV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CassandraClusterV2State | undefined;
            resourceInputs["bundledUseOnly"] = state ? state.bundledUseOnly : undefined;
            resourceInputs["cassandraVersion"] = state ? state.cassandraVersion : undefined;
            resourceInputs["currentClusterOperationStatus"] = state ? state.currentClusterOperationStatus : undefined;
            resourceInputs["dataCentres"] = state ? state.dataCentres : undefined;
            resourceInputs["defaultUserPassword"] = state ? state.defaultUserPassword : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["luceneEnabled"] = state ? state.luceneEnabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["passwordAndUserAuth"] = state ? state.passwordAndUserAuth : undefined;
            resourceInputs["pciComplianceMode"] = state ? state.pciComplianceMode : undefined;
            resourceInputs["privateNetworkCluster"] = state ? state.privateNetworkCluster : undefined;
            resourceInputs["resizeSettings"] = state ? state.resizeSettings : undefined;
            resourceInputs["slaTier"] = state ? state.slaTier : undefined;
            resourceInputs["sparks"] = state ? state.sparks : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["twoFactorDeletes"] = state ? state.twoFactorDeletes : undefined;
        } else {
            const args = argsOrState as CassandraClusterV2Args | undefined;
            if ((!args || args.cassandraVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cassandraVersion'");
            }
            if ((!args || args.dataCentres === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataCentres'");
            }
            if ((!args || args.luceneEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'luceneEnabled'");
            }
            if ((!args || args.passwordAndUserAuth === undefined) && !opts.urn) {
                throw new Error("Missing required property 'passwordAndUserAuth'");
            }
            if ((!args || args.pciComplianceMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pciComplianceMode'");
            }
            if ((!args || args.privateNetworkCluster === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateNetworkCluster'");
            }
            if ((!args || args.slaTier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slaTier'");
            }
            resourceInputs["bundledUseOnly"] = args ? args.bundledUseOnly : undefined;
            resourceInputs["cassandraVersion"] = args ? args.cassandraVersion : undefined;
            resourceInputs["currentClusterOperationStatus"] = args ? args.currentClusterOperationStatus : undefined;
            resourceInputs["dataCentres"] = args ? args.dataCentres : undefined;
            resourceInputs["defaultUserPassword"] = args?.defaultUserPassword ? pulumi.secret(args.defaultUserPassword) : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["luceneEnabled"] = args ? args.luceneEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passwordAndUserAuth"] = args ? args.passwordAndUserAuth : undefined;
            resourceInputs["pciComplianceMode"] = args ? args.pciComplianceMode : undefined;
            resourceInputs["privateNetworkCluster"] = args ? args.privateNetworkCluster : undefined;
            resourceInputs["resizeSettings"] = args ? args.resizeSettings : undefined;
            resourceInputs["slaTier"] = args ? args.slaTier : undefined;
            resourceInputs["sparks"] = args ? args.sparks : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["twoFactorDeletes"] = args ? args.twoFactorDeletes : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["defaultUserPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CassandraClusterV2.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CassandraClusterV2 resources.
 */
export interface CassandraClusterV2State {
    /**
     * Provision this cluster for [Bundled Use
     * only](https://www.instaclustr.com/support/documentation/cadence/getting-started-with-cadence/bundled-use-only-cluster-deployments/).
     */
    bundledUseOnly?: pulumi.Input<boolean>;
    /**
     * Version of Cassandra to run on the cluster. Available versions: <ul> <li>`5.0.0`</li> <li>`4.1.5`</li> <li>`4.1.4`</li>
     * <li>`3.11.17`</li> <li>`4.0.13`</li> <li>`3.11.16`</li> <li>`4.0.12`</li> </ul>
     */
    cassandraVersion?: pulumi.Input<string>;
    /**
     * Indicates if the cluster is currently performing any restructuring operation such as being created or resized
     */
    currentClusterOperationStatus?: pulumi.Input<string>;
    /**
     * List of data centre settings.
     */
    dataCentres?: pulumi.Input<pulumi.Input<inputs.CassandraClusterV2DataCentre>[]>;
    /**
     * Password of the default user created for the Cassandra cluster.
     */
    defaultUserPassword?: pulumi.Input<string>;
    /**
     * A description of the cluster
     */
    description?: pulumi.Input<string>;
    /**
     * Adds Apache Lucene to the Cassandra cluster.
     */
    luceneEnabled?: pulumi.Input<boolean>;
    /**
     * Name of the cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * Enables Password Authentication and User Authorization.
     */
    passwordAndUserAuth?: pulumi.Input<boolean>;
    /**
     * Creates a PCI compliant cluster, see [PCI
     * Compliance](https://www.instaclustr.com/support/documentation/useful-information/pci-compliance/).
     */
    pciComplianceMode?: pulumi.Input<boolean>;
    /**
     * Creates the cluster with private network only, see [Private Network
     * Clusters](https://www.instaclustr.com/support/documentation/useful-information/private-network-clusters/).
     */
    privateNetworkCluster?: pulumi.Input<boolean>;
    /**
     * Settings to determine how resize requests will be performed for the cluster.
     */
    resizeSettings?: pulumi.Input<pulumi.Input<inputs.CassandraClusterV2ResizeSetting>[]>;
    /**
     * SLA Tier of the cluster. Non-production clusters may receive lower priority support and reduced SLAs. Production tier is
     * not available when using Developer class nodes. See [SLA
     * Tier](https://www.instaclustr.com/support/documentation/useful-information/sla-tier/) for more information.
     */
    slaTier?: pulumi.Input<string>;
    /**
     * Adds the specified version of Apache Spark to the Cassandra cluster.
     */
    sparks?: pulumi.Input<pulumi.Input<inputs.CassandraClusterV2Spark>[]>;
    /**
     * Status of the cluster.
     */
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CassandraClusterV2Timeouts>;
    twoFactorDeletes?: pulumi.Input<pulumi.Input<inputs.CassandraClusterV2TwoFactorDelete>[]>;
}

/**
 * The set of arguments for constructing a CassandraClusterV2 resource.
 */
export interface CassandraClusterV2Args {
    /**
     * Provision this cluster for [Bundled Use
     * only](https://www.instaclustr.com/support/documentation/cadence/getting-started-with-cadence/bundled-use-only-cluster-deployments/).
     */
    bundledUseOnly?: pulumi.Input<boolean>;
    /**
     * Version of Cassandra to run on the cluster. Available versions: <ul> <li>`5.0.0`</li> <li>`4.1.5`</li> <li>`4.1.4`</li>
     * <li>`3.11.17`</li> <li>`4.0.13`</li> <li>`3.11.16`</li> <li>`4.0.12`</li> </ul>
     */
    cassandraVersion: pulumi.Input<string>;
    /**
     * Indicates if the cluster is currently performing any restructuring operation such as being created or resized
     */
    currentClusterOperationStatus?: pulumi.Input<string>;
    /**
     * List of data centre settings.
     */
    dataCentres: pulumi.Input<pulumi.Input<inputs.CassandraClusterV2DataCentre>[]>;
    /**
     * Password of the default user created for the Cassandra cluster.
     */
    defaultUserPassword?: pulumi.Input<string>;
    /**
     * A description of the cluster
     */
    description?: pulumi.Input<string>;
    /**
     * Adds Apache Lucene to the Cassandra cluster.
     */
    luceneEnabled: pulumi.Input<boolean>;
    /**
     * Name of the cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * Enables Password Authentication and User Authorization.
     */
    passwordAndUserAuth: pulumi.Input<boolean>;
    /**
     * Creates a PCI compliant cluster, see [PCI
     * Compliance](https://www.instaclustr.com/support/documentation/useful-information/pci-compliance/).
     */
    pciComplianceMode: pulumi.Input<boolean>;
    /**
     * Creates the cluster with private network only, see [Private Network
     * Clusters](https://www.instaclustr.com/support/documentation/useful-information/private-network-clusters/).
     */
    privateNetworkCluster: pulumi.Input<boolean>;
    /**
     * Settings to determine how resize requests will be performed for the cluster.
     */
    resizeSettings?: pulumi.Input<pulumi.Input<inputs.CassandraClusterV2ResizeSetting>[]>;
    /**
     * SLA Tier of the cluster. Non-production clusters may receive lower priority support and reduced SLAs. Production tier is
     * not available when using Developer class nodes. See [SLA
     * Tier](https://www.instaclustr.com/support/documentation/useful-information/sla-tier/) for more information.
     */
    slaTier: pulumi.Input<string>;
    /**
     * Adds the specified version of Apache Spark to the Cassandra cluster.
     */
    sparks?: pulumi.Input<pulumi.Input<inputs.CassandraClusterV2Spark>[]>;
    /**
     * Status of the cluster.
     */
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CassandraClusterV2Timeouts>;
    twoFactorDeletes?: pulumi.Input<pulumi.Input<inputs.CassandraClusterV2TwoFactorDelete>[]>;
}
