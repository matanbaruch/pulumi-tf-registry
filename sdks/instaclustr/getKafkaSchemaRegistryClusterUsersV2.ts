// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKafkaSchemaRegistryClusterUsersV2(args: GetKafkaSchemaRegistryClusterUsersV2Args, opts?: pulumi.InvokeOptions): Promise<GetKafkaSchemaRegistryClusterUsersV2Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("instaclustr:index/getKafkaSchemaRegistryClusterUsersV2:getKafkaSchemaRegistryClusterUsersV2", {
        "clusterId": args.clusterId,
        "filters": args.filters,
        "id": args.id,
        "kafkaSchemaRegistryClusterId": args.kafkaSchemaRegistryClusterId,
        "kafkaSchemaRegistryUsers": args.kafkaSchemaRegistryUsers,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKafkaSchemaRegistryClusterUsersV2.
 */
export interface GetKafkaSchemaRegistryClusterUsersV2Args {
    clusterId?: string;
    filters?: inputs.GetKafkaSchemaRegistryClusterUsersV2Filter[];
    id?: string;
    kafkaSchemaRegistryClusterId: string;
    kafkaSchemaRegistryUsers?: inputs.GetKafkaSchemaRegistryClusterUsersV2KafkaSchemaRegistryUser[];
}

/**
 * A collection of values returned by getKafkaSchemaRegistryClusterUsersV2.
 */
export interface GetKafkaSchemaRegistryClusterUsersV2Result {
    readonly clusterId: string;
    readonly filters?: outputs.GetKafkaSchemaRegistryClusterUsersV2Filter[];
    readonly id: string;
    readonly kafkaSchemaRegistryClusterId: string;
    readonly kafkaSchemaRegistryUsers?: outputs.GetKafkaSchemaRegistryClusterUsersV2KafkaSchemaRegistryUser[];
}
export function getKafkaSchemaRegistryClusterUsersV2Output(args: GetKafkaSchemaRegistryClusterUsersV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaSchemaRegistryClusterUsersV2Result> {
    return pulumi.output(args).apply((a: any) => getKafkaSchemaRegistryClusterUsersV2(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaSchemaRegistryClusterUsersV2.
 */
export interface GetKafkaSchemaRegistryClusterUsersV2OutputArgs {
    clusterId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetKafkaSchemaRegistryClusterUsersV2FilterArgs>[]>;
    id?: pulumi.Input<string>;
    kafkaSchemaRegistryClusterId: pulumi.Input<string>;
    kafkaSchemaRegistryUsers?: pulumi.Input<pulumi.Input<inputs.GetKafkaSchemaRegistryClusterUsersV2KafkaSchemaRegistryUserArgs>[]>;
}
