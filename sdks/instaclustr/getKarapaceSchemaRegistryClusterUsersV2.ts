// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKarapaceSchemaRegistryClusterUsersV2(args: GetKarapaceSchemaRegistryClusterUsersV2Args, opts?: pulumi.InvokeOptions): Promise<GetKarapaceSchemaRegistryClusterUsersV2Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("instaclustr:index/getKarapaceSchemaRegistryClusterUsersV2:getKarapaceSchemaRegistryClusterUsersV2", {
        "clusterId": args.clusterId,
        "filters": args.filters,
        "id": args.id,
        "karapaceSchemaRegistryClusterId": args.karapaceSchemaRegistryClusterId,
        "karapaceSchemaRegistryUsers": args.karapaceSchemaRegistryUsers,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKarapaceSchemaRegistryClusterUsersV2.
 */
export interface GetKarapaceSchemaRegistryClusterUsersV2Args {
    clusterId?: string;
    filters?: inputs.GetKarapaceSchemaRegistryClusterUsersV2Filter[];
    id?: string;
    karapaceSchemaRegistryClusterId: string;
    karapaceSchemaRegistryUsers?: inputs.GetKarapaceSchemaRegistryClusterUsersV2KarapaceSchemaRegistryUser[];
}

/**
 * A collection of values returned by getKarapaceSchemaRegistryClusterUsersV2.
 */
export interface GetKarapaceSchemaRegistryClusterUsersV2Result {
    readonly clusterId: string;
    readonly filters?: outputs.GetKarapaceSchemaRegistryClusterUsersV2Filter[];
    readonly id: string;
    readonly karapaceSchemaRegistryClusterId: string;
    readonly karapaceSchemaRegistryUsers?: outputs.GetKarapaceSchemaRegistryClusterUsersV2KarapaceSchemaRegistryUser[];
}
export function getKarapaceSchemaRegistryClusterUsersV2Output(args: GetKarapaceSchemaRegistryClusterUsersV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKarapaceSchemaRegistryClusterUsersV2Result> {
    return pulumi.output(args).apply((a: any) => getKarapaceSchemaRegistryClusterUsersV2(a, opts))
}

/**
 * A collection of arguments for invoking getKarapaceSchemaRegistryClusterUsersV2.
 */
export interface GetKarapaceSchemaRegistryClusterUsersV2OutputArgs {
    clusterId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetKarapaceSchemaRegistryClusterUsersV2FilterArgs>[]>;
    id?: pulumi.Input<string>;
    karapaceSchemaRegistryClusterId: pulumi.Input<string>;
    karapaceSchemaRegistryUsers?: pulumi.Input<pulumi.Input<inputs.GetKarapaceSchemaRegistryClusterUsersV2KarapaceSchemaRegistryUserArgs>[]>;
}
