// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAwsVpcPeerV2Instance(args: GetAwsVpcPeerV2InstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetAwsVpcPeerV2InstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("instaclustr:index/getAwsVpcPeerV2Instance:getAwsVpcPeerV2Instance", {
        "cdcId": args.cdcId,
        "dataCentreVpcId": args.dataCentreVpcId,
        "id": args.id,
        "peerAwsAccountId": args.peerAwsAccountId,
        "peerRegion": args.peerRegion,
        "peerSubnets": args.peerSubnets,
        "peerVpcId": args.peerVpcId,
        "statusCode": args.statusCode,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAwsVpcPeerV2Instance.
 */
export interface GetAwsVpcPeerV2InstanceArgs {
    cdcId?: string;
    dataCentreVpcId?: string;
    id: string;
    peerAwsAccountId?: string;
    peerRegion?: string;
    peerSubnets?: string[];
    peerVpcId?: string;
    statusCode?: string;
}

/**
 * A collection of values returned by getAwsVpcPeerV2Instance.
 */
export interface GetAwsVpcPeerV2InstanceResult {
    readonly cdcId: string;
    readonly dataCentreVpcId: string;
    readonly id: string;
    readonly peerAwsAccountId: string;
    readonly peerRegion: string;
    readonly peerSubnets: string[];
    readonly peerVpcId: string;
    readonly statusCode: string;
}
export function getAwsVpcPeerV2InstanceOutput(args: GetAwsVpcPeerV2InstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAwsVpcPeerV2InstanceResult> {
    return pulumi.output(args).apply((a: any) => getAwsVpcPeerV2Instance(a, opts))
}

/**
 * A collection of arguments for invoking getAwsVpcPeerV2Instance.
 */
export interface GetAwsVpcPeerV2InstanceOutputArgs {
    cdcId?: pulumi.Input<string>;
    dataCentreVpcId?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    peerAwsAccountId?: pulumi.Input<string>;
    peerRegion?: pulumi.Input<string>;
    peerSubnets?: pulumi.Input<pulumi.Input<string>[]>;
    peerVpcId?: pulumi.Input<string>;
    statusCode?: pulumi.Input<string>;
}
