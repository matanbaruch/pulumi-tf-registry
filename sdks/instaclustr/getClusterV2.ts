// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getClusterV2(args: GetClusterV2Args, opts?: pulumi.InvokeOptions): Promise<GetClusterV2Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("instaclustr:index/getClusterV2:getClusterV2", {
        "clusterId": args.clusterId,
        "filters": args.filters,
        "id": args.id,
        "maintenanceEvents": args.maintenanceEvents,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getClusterV2.
 */
export interface GetClusterV2Args {
    clusterId: string;
    filters?: inputs.GetClusterV2Filter[];
    id?: string;
    maintenanceEvents?: inputs.GetClusterV2MaintenanceEvent[];
}

/**
 * A collection of values returned by getClusterV2.
 */
export interface GetClusterV2Result {
    readonly clusterId: string;
    readonly filters?: outputs.GetClusterV2Filter[];
    readonly id: string;
    readonly maintenanceEvents?: outputs.GetClusterV2MaintenanceEvent[];
}
export function getClusterV2Output(args: GetClusterV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterV2Result> {
    return pulumi.output(args).apply((a: any) => getClusterV2(a, opts))
}

/**
 * A collection of arguments for invoking getClusterV2.
 */
export interface GetClusterV2OutputArgs {
    clusterId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetClusterV2FilterArgs>[]>;
    id?: pulumi.Input<string>;
    maintenanceEvents?: pulumi.Input<pulumi.Input<inputs.GetClusterV2MaintenanceEventArgs>[]>;
}
