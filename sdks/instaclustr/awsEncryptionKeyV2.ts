// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AwsEncryptionKeyV2 extends pulumi.CustomResource {
    /**
     * Get an existing AwsEncryptionKeyV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsEncryptionKeyV2State, opts?: pulumi.CustomResourceOptions): AwsEncryptionKeyV2 {
        return new AwsEncryptionKeyV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'instaclustr:index/awsEncryptionKeyV2:AwsEncryptionKeyV2';

    /**
     * Returns true if the given object is an instance of AwsEncryptionKeyV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsEncryptionKeyV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsEncryptionKeyV2.__pulumiType;
    }

    /**
     * Encryption key alias for display purposes.
     */
    public readonly alias!: pulumi.Output<string>;
    /**
     * AWS ARN for the encryption key.
     */
    public readonly arn!: pulumi.Output<string>;
    /**
     * Whether the encryption key is used by a cluster.
     */
    public readonly inUse!: pulumi.Output<boolean>;
    /**
     * For customers running in their own account. Your provider account can be found on the Create Cluster page on the
     * Instaclustr Console, or the "Provider Account" property on any existing cluster. For customers provisioning on
     * Instaclustr's cloud provider accounts, this property may be omitted.
     */
    public readonly providerAccountName!: pulumi.Output<string>;
    /**
     * Regions of the key
     */
    public readonly regions!: pulumi.Output<outputs.AwsEncryptionKeyV2Region[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.AwsEncryptionKeyV2Timeouts | undefined>;

    /**
     * Create a AwsEncryptionKeyV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsEncryptionKeyV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsEncryptionKeyV2Args | AwsEncryptionKeyV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsEncryptionKeyV2State | undefined;
            resourceInputs["alias"] = state ? state.alias : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["inUse"] = state ? state.inUse : undefined;
            resourceInputs["providerAccountName"] = state ? state.providerAccountName : undefined;
            resourceInputs["regions"] = state ? state.regions : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AwsEncryptionKeyV2Args | undefined;
            if ((!args || args.alias === undefined) && !opts.urn) {
                throw new Error("Missing required property 'alias'");
            }
            if ((!args || args.arn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'arn'");
            }
            resourceInputs["alias"] = args ? args.alias : undefined;
            resourceInputs["arn"] = args ? args.arn : undefined;
            resourceInputs["inUse"] = args ? args.inUse : undefined;
            resourceInputs["providerAccountName"] = args ? args.providerAccountName : undefined;
            resourceInputs["regions"] = args ? args.regions : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsEncryptionKeyV2.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsEncryptionKeyV2 resources.
 */
export interface AwsEncryptionKeyV2State {
    /**
     * Encryption key alias for display purposes.
     */
    alias?: pulumi.Input<string>;
    /**
     * AWS ARN for the encryption key.
     */
    arn?: pulumi.Input<string>;
    /**
     * Whether the encryption key is used by a cluster.
     */
    inUse?: pulumi.Input<boolean>;
    /**
     * For customers running in their own account. Your provider account can be found on the Create Cluster page on the
     * Instaclustr Console, or the "Provider Account" property on any existing cluster. For customers provisioning on
     * Instaclustr's cloud provider accounts, this property may be omitted.
     */
    providerAccountName?: pulumi.Input<string>;
    /**
     * Regions of the key
     */
    regions?: pulumi.Input<pulumi.Input<inputs.AwsEncryptionKeyV2Region>[]>;
    timeouts?: pulumi.Input<inputs.AwsEncryptionKeyV2Timeouts>;
}

/**
 * The set of arguments for constructing a AwsEncryptionKeyV2 resource.
 */
export interface AwsEncryptionKeyV2Args {
    /**
     * Encryption key alias for display purposes.
     */
    alias: pulumi.Input<string>;
    /**
     * AWS ARN for the encryption key.
     */
    arn: pulumi.Input<string>;
    /**
     * Whether the encryption key is used by a cluster.
     */
    inUse?: pulumi.Input<boolean>;
    /**
     * For customers running in their own account. Your provider account can be found on the Create Cluster page on the
     * Instaclustr Console, or the "Provider Account" property on any existing cluster. For customers provisioning on
     * Instaclustr's cloud provider accounts, this property may be omitted.
     */
    providerAccountName?: pulumi.Input<string>;
    /**
     * Regions of the key
     */
    regions?: pulumi.Input<pulumi.Input<inputs.AwsEncryptionKeyV2Region>[]>;
    timeouts?: pulumi.Input<inputs.AwsEncryptionKeyV2Timeouts>;
}
