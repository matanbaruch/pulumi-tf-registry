// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getClusterNetworkFirewallRuleV2Instance(args: GetClusterNetworkFirewallRuleV2InstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterNetworkFirewallRuleV2InstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("instaclustr:index/getClusterNetworkFirewallRuleV2Instance:getClusterNetworkFirewallRuleV2Instance", {
        "clusterId": args.clusterId,
        "deferredReason": args.deferredReason,
        "id": args.id,
        "network": args.network,
        "status": args.status,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getClusterNetworkFirewallRuleV2Instance.
 */
export interface GetClusterNetworkFirewallRuleV2InstanceArgs {
    clusterId?: string;
    deferredReason?: string;
    id: string;
    network?: string;
    status?: string;
    type?: string;
}

/**
 * A collection of values returned by getClusterNetworkFirewallRuleV2Instance.
 */
export interface GetClusterNetworkFirewallRuleV2InstanceResult {
    readonly clusterId: string;
    readonly deferredReason: string;
    readonly id: string;
    readonly network: string;
    readonly status: string;
    readonly type: string;
}
export function getClusterNetworkFirewallRuleV2InstanceOutput(args: GetClusterNetworkFirewallRuleV2InstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterNetworkFirewallRuleV2InstanceResult> {
    return pulumi.output(args).apply((a: any) => getClusterNetworkFirewallRuleV2Instance(a, opts))
}

/**
 * A collection of arguments for invoking getClusterNetworkFirewallRuleV2Instance.
 */
export interface GetClusterNetworkFirewallRuleV2InstanceOutputArgs {
    clusterId?: pulumi.Input<string>;
    deferredReason?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    network?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
