// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PostgresqlClusterV2 extends pulumi.CustomResource {
    /**
     * Get an existing PostgresqlClusterV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PostgresqlClusterV2State, opts?: pulumi.CustomResourceOptions): PostgresqlClusterV2 {
        return new PostgresqlClusterV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'instaclustr:index/postgresqlClusterV2:PostgresqlClusterV2';

    /**
     * Returns true if the given object is an instance of PostgresqlClusterV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PostgresqlClusterV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PostgresqlClusterV2.__pulumiType;
    }

    /**
     * Indicates if the cluster is currently performing any restructuring operation such as being created or resized
     */
    public readonly currentClusterOperationStatus!: pulumi.Output<string>;
    /**
     * List of data centre settings.
     */
    public readonly dataCentres!: pulumi.Output<outputs.PostgresqlClusterV2DataCentre[]>;
    /**
     * Password of the default user created for the PostgreSQL cluster.
     */
    public readonly defaultUserPassword!: pulumi.Output<string>;
    /**
     * A description of the cluster
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * List of PostgreSQL extensions.
     */
    public readonly extensions!: pulumi.Output<string[] | undefined>;
    /**
     * Name of the cluster.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Creates a PCI compliant cluster, see [PCI
     * Compliance](https://www.instaclustr.com/support/documentation/useful-information/pci-compliance/).
     */
    public readonly pciComplianceMode!: pulumi.Output<boolean>;
    /**
     * Version of Postgresql to run on the cluster. Available versions: <ul> <li>`15.7.0`</li> <li>`16.3.0`</li>
     * <li>`14.12.0`</li> </ul>
     */
    public readonly postgresqlVersion!: pulumi.Output<string>;
    /**
     * Creates the cluster with private network only, see [Private Network
     * Clusters](https://www.instaclustr.com/support/documentation/useful-information/private-network-clusters/).
     */
    public readonly privateNetworkCluster!: pulumi.Output<boolean>;
    /**
     * Settings to determine how resize requests will be performed for the cluster.
     */
    public readonly resizeSettings!: pulumi.Output<outputs.PostgresqlClusterV2ResizeSetting[] | undefined>;
    /**
     * SLA Tier of the cluster. Non-production clusters may receive lower priority support and reduced SLAs. Production tier is
     * not available when using Developer class nodes. See [SLA
     * Tier](https://www.instaclustr.com/support/documentation/useful-information/sla-tier/) for more information.
     */
    public readonly slaTier!: pulumi.Output<string>;
    /**
     * Status of the cluster.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Create the PostgreSQL cluster with the selected replication mode, see [PostgreSQL replication mode]
     * (https://www.instaclustr.com/support/documentation/postgresql/options/replication-mode/).
     */
    public readonly synchronousModeStrict!: pulumi.Output<boolean>;
    public readonly timeouts!: pulumi.Output<outputs.PostgresqlClusterV2Timeouts | undefined>;
    public readonly twoFactorDeletes!: pulumi.Output<outputs.PostgresqlClusterV2TwoFactorDelete[] | undefined>;

    /**
     * Create a PostgresqlClusterV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PostgresqlClusterV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PostgresqlClusterV2Args | PostgresqlClusterV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PostgresqlClusterV2State | undefined;
            resourceInputs["currentClusterOperationStatus"] = state ? state.currentClusterOperationStatus : undefined;
            resourceInputs["dataCentres"] = state ? state.dataCentres : undefined;
            resourceInputs["defaultUserPassword"] = state ? state.defaultUserPassword : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["extensions"] = state ? state.extensions : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pciComplianceMode"] = state ? state.pciComplianceMode : undefined;
            resourceInputs["postgresqlVersion"] = state ? state.postgresqlVersion : undefined;
            resourceInputs["privateNetworkCluster"] = state ? state.privateNetworkCluster : undefined;
            resourceInputs["resizeSettings"] = state ? state.resizeSettings : undefined;
            resourceInputs["slaTier"] = state ? state.slaTier : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["synchronousModeStrict"] = state ? state.synchronousModeStrict : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["twoFactorDeletes"] = state ? state.twoFactorDeletes : undefined;
        } else {
            const args = argsOrState as PostgresqlClusterV2Args | undefined;
            if ((!args || args.dataCentres === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataCentres'");
            }
            if ((!args || args.postgresqlVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'postgresqlVersion'");
            }
            if ((!args || args.privateNetworkCluster === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateNetworkCluster'");
            }
            if ((!args || args.slaTier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slaTier'");
            }
            if ((!args || args.synchronousModeStrict === undefined) && !opts.urn) {
                throw new Error("Missing required property 'synchronousModeStrict'");
            }
            resourceInputs["currentClusterOperationStatus"] = args ? args.currentClusterOperationStatus : undefined;
            resourceInputs["dataCentres"] = args ? args.dataCentres : undefined;
            resourceInputs["defaultUserPassword"] = args?.defaultUserPassword ? pulumi.secret(args.defaultUserPassword) : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["extensions"] = args ? args.extensions : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pciComplianceMode"] = args ? args.pciComplianceMode : undefined;
            resourceInputs["postgresqlVersion"] = args ? args.postgresqlVersion : undefined;
            resourceInputs["privateNetworkCluster"] = args ? args.privateNetworkCluster : undefined;
            resourceInputs["resizeSettings"] = args ? args.resizeSettings : undefined;
            resourceInputs["slaTier"] = args ? args.slaTier : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["synchronousModeStrict"] = args ? args.synchronousModeStrict : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["twoFactorDeletes"] = args ? args.twoFactorDeletes : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["defaultUserPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(PostgresqlClusterV2.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PostgresqlClusterV2 resources.
 */
export interface PostgresqlClusterV2State {
    /**
     * Indicates if the cluster is currently performing any restructuring operation such as being created or resized
     */
    currentClusterOperationStatus?: pulumi.Input<string>;
    /**
     * List of data centre settings.
     */
    dataCentres?: pulumi.Input<pulumi.Input<inputs.PostgresqlClusterV2DataCentre>[]>;
    /**
     * Password of the default user created for the PostgreSQL cluster.
     */
    defaultUserPassword?: pulumi.Input<string>;
    /**
     * A description of the cluster
     */
    description?: pulumi.Input<string>;
    /**
     * List of PostgreSQL extensions.
     */
    extensions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * Creates a PCI compliant cluster, see [PCI
     * Compliance](https://www.instaclustr.com/support/documentation/useful-information/pci-compliance/).
     */
    pciComplianceMode?: pulumi.Input<boolean>;
    /**
     * Version of Postgresql to run on the cluster. Available versions: <ul> <li>`15.7.0`</li> <li>`16.3.0`</li>
     * <li>`14.12.0`</li> </ul>
     */
    postgresqlVersion?: pulumi.Input<string>;
    /**
     * Creates the cluster with private network only, see [Private Network
     * Clusters](https://www.instaclustr.com/support/documentation/useful-information/private-network-clusters/).
     */
    privateNetworkCluster?: pulumi.Input<boolean>;
    /**
     * Settings to determine how resize requests will be performed for the cluster.
     */
    resizeSettings?: pulumi.Input<pulumi.Input<inputs.PostgresqlClusterV2ResizeSetting>[]>;
    /**
     * SLA Tier of the cluster. Non-production clusters may receive lower priority support and reduced SLAs. Production tier is
     * not available when using Developer class nodes. See [SLA
     * Tier](https://www.instaclustr.com/support/documentation/useful-information/sla-tier/) for more information.
     */
    slaTier?: pulumi.Input<string>;
    /**
     * Status of the cluster.
     */
    status?: pulumi.Input<string>;
    /**
     * Create the PostgreSQL cluster with the selected replication mode, see [PostgreSQL replication mode]
     * (https://www.instaclustr.com/support/documentation/postgresql/options/replication-mode/).
     */
    synchronousModeStrict?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.PostgresqlClusterV2Timeouts>;
    twoFactorDeletes?: pulumi.Input<pulumi.Input<inputs.PostgresqlClusterV2TwoFactorDelete>[]>;
}

/**
 * The set of arguments for constructing a PostgresqlClusterV2 resource.
 */
export interface PostgresqlClusterV2Args {
    /**
     * Indicates if the cluster is currently performing any restructuring operation such as being created or resized
     */
    currentClusterOperationStatus?: pulumi.Input<string>;
    /**
     * List of data centre settings.
     */
    dataCentres: pulumi.Input<pulumi.Input<inputs.PostgresqlClusterV2DataCentre>[]>;
    /**
     * Password of the default user created for the PostgreSQL cluster.
     */
    defaultUserPassword?: pulumi.Input<string>;
    /**
     * A description of the cluster
     */
    description?: pulumi.Input<string>;
    /**
     * List of PostgreSQL extensions.
     */
    extensions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * Creates a PCI compliant cluster, see [PCI
     * Compliance](https://www.instaclustr.com/support/documentation/useful-information/pci-compliance/).
     */
    pciComplianceMode?: pulumi.Input<boolean>;
    /**
     * Version of Postgresql to run on the cluster. Available versions: <ul> <li>`15.7.0`</li> <li>`16.3.0`</li>
     * <li>`14.12.0`</li> </ul>
     */
    postgresqlVersion: pulumi.Input<string>;
    /**
     * Creates the cluster with private network only, see [Private Network
     * Clusters](https://www.instaclustr.com/support/documentation/useful-information/private-network-clusters/).
     */
    privateNetworkCluster: pulumi.Input<boolean>;
    /**
     * Settings to determine how resize requests will be performed for the cluster.
     */
    resizeSettings?: pulumi.Input<pulumi.Input<inputs.PostgresqlClusterV2ResizeSetting>[]>;
    /**
     * SLA Tier of the cluster. Non-production clusters may receive lower priority support and reduced SLAs. Production tier is
     * not available when using Developer class nodes. See [SLA
     * Tier](https://www.instaclustr.com/support/documentation/useful-information/sla-tier/) for more information.
     */
    slaTier: pulumi.Input<string>;
    /**
     * Status of the cluster.
     */
    status?: pulumi.Input<string>;
    /**
     * Create the PostgreSQL cluster with the selected replication mode, see [PostgreSQL replication mode]
     * (https://www.instaclustr.com/support/documentation/postgresql/options/replication-mode/).
     */
    synchronousModeStrict: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.PostgresqlClusterV2Timeouts>;
    twoFactorDeletes?: pulumi.Input<pulumi.Input<inputs.PostgresqlClusterV2TwoFactorDelete>[]>;
}
