// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKafkaConnectClusterV2Instance(args: GetKafkaConnectClusterV2InstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetKafkaConnectClusterV2InstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("instaclustr:index/getKafkaConnectClusterV2Instance:getKafkaConnectClusterV2Instance", {
        "currentClusterOperationStatus": args.currentClusterOperationStatus,
        "customConnectors": args.customConnectors,
        "dataCentres": args.dataCentres,
        "description": args.description,
        "id": args.id,
        "kafkaConnectVersion": args.kafkaConnectVersion,
        "name": args.name,
        "privateNetworkCluster": args.privateNetworkCluster,
        "slaTier": args.slaTier,
        "status": args.status,
        "targetClusters": args.targetClusters,
        "twoFactorDeletes": args.twoFactorDeletes,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKafkaConnectClusterV2Instance.
 */
export interface GetKafkaConnectClusterV2InstanceArgs {
    currentClusterOperationStatus?: string;
    customConnectors?: inputs.GetKafkaConnectClusterV2InstanceCustomConnector[];
    dataCentres?: inputs.GetKafkaConnectClusterV2InstanceDataCentre[];
    description?: string;
    id: string;
    kafkaConnectVersion?: string;
    name?: string;
    privateNetworkCluster?: boolean;
    slaTier?: string;
    status?: string;
    targetClusters?: inputs.GetKafkaConnectClusterV2InstanceTargetCluster[];
    twoFactorDeletes?: inputs.GetKafkaConnectClusterV2InstanceTwoFactorDelete[];
}

/**
 * A collection of values returned by getKafkaConnectClusterV2Instance.
 */
export interface GetKafkaConnectClusterV2InstanceResult {
    readonly currentClusterOperationStatus: string;
    readonly customConnectors?: outputs.GetKafkaConnectClusterV2InstanceCustomConnector[];
    readonly dataCentres?: outputs.GetKafkaConnectClusterV2InstanceDataCentre[];
    readonly description: string;
    readonly id: string;
    readonly kafkaConnectVersion: string;
    readonly name: string;
    readonly privateNetworkCluster: boolean;
    readonly slaTier: string;
    readonly status: string;
    readonly targetClusters?: outputs.GetKafkaConnectClusterV2InstanceTargetCluster[];
    readonly twoFactorDeletes?: outputs.GetKafkaConnectClusterV2InstanceTwoFactorDelete[];
}
export function getKafkaConnectClusterV2InstanceOutput(args: GetKafkaConnectClusterV2InstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaConnectClusterV2InstanceResult> {
    return pulumi.output(args).apply((a: any) => getKafkaConnectClusterV2Instance(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaConnectClusterV2Instance.
 */
export interface GetKafkaConnectClusterV2InstanceOutputArgs {
    currentClusterOperationStatus?: pulumi.Input<string>;
    customConnectors?: pulumi.Input<pulumi.Input<inputs.GetKafkaConnectClusterV2InstanceCustomConnectorArgs>[]>;
    dataCentres?: pulumi.Input<pulumi.Input<inputs.GetKafkaConnectClusterV2InstanceDataCentreArgs>[]>;
    description?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    kafkaConnectVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    privateNetworkCluster?: pulumi.Input<boolean>;
    slaTier?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    targetClusters?: pulumi.Input<pulumi.Input<inputs.GetKafkaConnectClusterV2InstanceTargetClusterArgs>[]>;
    twoFactorDeletes?: pulumi.Input<pulumi.Input<inputs.GetKafkaConnectClusterV2InstanceTwoFactorDeleteArgs>[]>;
}
