// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKafkaAclV2Instance(args: GetKafkaAclV2InstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetKafkaAclV2InstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("instaclustr:index/getKafkaAclV2Instance:getKafkaAclV2Instance", {
        "acls": args.acls,
        "clusterId": args.clusterId,
        "id": args.id,
        "userQuery": args.userQuery,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKafkaAclV2Instance.
 */
export interface GetKafkaAclV2InstanceArgs {
    acls?: inputs.GetKafkaAclV2InstanceAcl[];
    clusterId?: string;
    id: string;
    userQuery?: string;
}

/**
 * A collection of values returned by getKafkaAclV2Instance.
 */
export interface GetKafkaAclV2InstanceResult {
    readonly acls?: outputs.GetKafkaAclV2InstanceAcl[];
    readonly clusterId: string;
    readonly id: string;
    readonly userQuery: string;
}
export function getKafkaAclV2InstanceOutput(args: GetKafkaAclV2InstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaAclV2InstanceResult> {
    return pulumi.output(args).apply((a: any) => getKafkaAclV2Instance(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaAclV2Instance.
 */
export interface GetKafkaAclV2InstanceOutputArgs {
    acls?: pulumi.Input<pulumi.Input<inputs.GetKafkaAclV2InstanceAclArgs>[]>;
    clusterId?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    userQuery?: pulumi.Input<string>;
}
