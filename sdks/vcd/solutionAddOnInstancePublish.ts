// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SolutionAddOnInstancePublish extends pulumi.CustomResource {
    /**
     * Get an existing SolutionAddOnInstancePublish resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SolutionAddOnInstancePublishState, opts?: pulumi.CustomResourceOptions): SolutionAddOnInstancePublish {
        return new SolutionAddOnInstancePublish(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vcd:index/solutionAddOnInstancePublish:SolutionAddOnInstancePublish';

    /**
     * Returns true if the given object is an instance of SolutionAddOnInstancePublish.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SolutionAddOnInstancePublish {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SolutionAddOnInstancePublish.__pulumiType;
    }

    /**
     * Solution Add-On Instance ID
     */
    public readonly addOnInstanceId!: pulumi.Output<string>;
    /**
     * A set of Organization IDs
     */
    public readonly orgIds!: pulumi.Output<string[] | undefined>;
    /**
     * Publish Solution Add-On Instance to all tenants
     */
    public readonly publishToAllTenants!: pulumi.Output<boolean | undefined>;
    /**
     * Parent RDE state
     */
    public /*out*/ readonly rdeState!: pulumi.Output<string>;

    /**
     * Create a SolutionAddOnInstancePublish resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SolutionAddOnInstancePublishArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SolutionAddOnInstancePublishArgs | SolutionAddOnInstancePublishState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SolutionAddOnInstancePublishState | undefined;
            resourceInputs["addOnInstanceId"] = state ? state.addOnInstanceId : undefined;
            resourceInputs["orgIds"] = state ? state.orgIds : undefined;
            resourceInputs["publishToAllTenants"] = state ? state.publishToAllTenants : undefined;
            resourceInputs["rdeState"] = state ? state.rdeState : undefined;
        } else {
            const args = argsOrState as SolutionAddOnInstancePublishArgs | undefined;
            if ((!args || args.addOnInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addOnInstanceId'");
            }
            resourceInputs["addOnInstanceId"] = args ? args.addOnInstanceId : undefined;
            resourceInputs["orgIds"] = args ? args.orgIds : undefined;
            resourceInputs["publishToAllTenants"] = args ? args.publishToAllTenants : undefined;
            resourceInputs["rdeState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SolutionAddOnInstancePublish.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SolutionAddOnInstancePublish resources.
 */
export interface SolutionAddOnInstancePublishState {
    /**
     * Solution Add-On Instance ID
     */
    addOnInstanceId?: pulumi.Input<string>;
    /**
     * A set of Organization IDs
     */
    orgIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Publish Solution Add-On Instance to all tenants
     */
    publishToAllTenants?: pulumi.Input<boolean>;
    /**
     * Parent RDE state
     */
    rdeState?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SolutionAddOnInstancePublish resource.
 */
export interface SolutionAddOnInstancePublishArgs {
    /**
     * Solution Add-On Instance ID
     */
    addOnInstanceId: pulumi.Input<string>;
    /**
     * A set of Organization IDs
     */
    orgIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Publish Solution Add-On Instance to all tenants
     */
    publishToAllTenants?: pulumi.Input<boolean>;
}
