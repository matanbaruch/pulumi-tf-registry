// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOrgLdap(args: GetOrgLdapArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgLdapResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getOrgLdap:getOrgLdap", {
        "id": args.id,
        "orgId": args.orgId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrgLdap.
 */
export interface GetOrgLdapArgs {
    id?: string;
    orgId: string;
}

/**
 * A collection of values returned by getOrgLdap.
 */
export interface GetOrgLdapResult {
    readonly customSettings: outputs.GetOrgLdapCustomSetting[];
    readonly customUserOu: string;
    readonly id: string;
    readonly ldapMode: string;
    readonly orgId: string;
}
export function getOrgLdapOutput(args: GetOrgLdapOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgLdapResult> {
    return pulumi.output(args).apply((a: any) => getOrgLdap(a, opts))
}

/**
 * A collection of arguments for invoking getOrgLdap.
 */
export interface GetOrgLdapOutputArgs {
    id?: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
}
