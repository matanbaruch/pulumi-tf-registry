// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NsxvDnat extends pulumi.CustomResource {
    /**
     * Get an existing NsxvDnat resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NsxvDnatState, opts?: pulumi.CustomResourceOptions): NsxvDnat {
        return new NsxvDnat(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vcd:index/nsxvDnat:NsxvDnat';

    /**
     * Returns true if the given object is an instance of NsxvDnat.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NsxvDnat {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NsxvDnat.__pulumiType;
    }

    /**
     * NAT rule description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Edge gateway name in which NAT Rule is located
     */
    public readonly edgeGateway!: pulumi.Output<string>;
    /**
     * Whether the rule should be enabled. Default 'true'
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * ICMP type. Only supported when protocol is ICMP. One of `any`, `address-mask-request`, `address-mask-reply`,
     * `destination-unreachable`, `echo-request`, `echo-reply`, `parameter-problem`, `redirect`, `router-advertisement`,
     * `router-solicitation`, `source-quench`, `time-exceeded`, `timestamp-request`, `timestamp-reply`. Default `any`
     */
    public readonly icmpType!: pulumi.Output<string | undefined>;
    /**
     * Whether logging should be enabled for this rule. Default 'false'
     */
    public readonly loggingEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Org or external network name
     */
    public readonly networkName!: pulumi.Output<string>;
    /**
     * Network type. One of 'ext', 'org'
     */
    public readonly networkType!: pulumi.Output<string>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
     * different organizations
     */
    public readonly org!: pulumi.Output<string | undefined>;
    /**
     * Original address or address range. This is the the destination address for DNAT rules.
     */
    public readonly originalAddress!: pulumi.Output<string>;
    /**
     * Original port. This is the destination port for DNAT rules
     */
    public readonly originalPort!: pulumi.Output<string | undefined>;
    /**
     * Protocol. Such as 'tcp', 'udp', 'icmp', 'any'
     */
    public readonly protocol!: pulumi.Output<string | undefined>;
    /**
     * Optional. Allows to set custom rule tag
     */
    public readonly ruleTag!: pulumi.Output<number>;
    /**
     * Read only. Possible values 'user', 'internal_high'
     */
    public readonly ruleType!: pulumi.Output<string>;
    /**
     * Translated address or address range
     */
    public readonly translatedAddress!: pulumi.Output<string | undefined>;
    /**
     * Translated port
     */
    public readonly translatedPort!: pulumi.Output<string | undefined>;
    /**
     * The name of VDC to use, optional if defined at provider level
     */
    public readonly vdc!: pulumi.Output<string | undefined>;

    /**
     * Create a NsxvDnat resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NsxvDnatArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NsxvDnatArgs | NsxvDnatState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NsxvDnatState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["edgeGateway"] = state ? state.edgeGateway : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["icmpType"] = state ? state.icmpType : undefined;
            resourceInputs["loggingEnabled"] = state ? state.loggingEnabled : undefined;
            resourceInputs["networkName"] = state ? state.networkName : undefined;
            resourceInputs["networkType"] = state ? state.networkType : undefined;
            resourceInputs["org"] = state ? state.org : undefined;
            resourceInputs["originalAddress"] = state ? state.originalAddress : undefined;
            resourceInputs["originalPort"] = state ? state.originalPort : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["ruleTag"] = state ? state.ruleTag : undefined;
            resourceInputs["ruleType"] = state ? state.ruleType : undefined;
            resourceInputs["translatedAddress"] = state ? state.translatedAddress : undefined;
            resourceInputs["translatedPort"] = state ? state.translatedPort : undefined;
            resourceInputs["vdc"] = state ? state.vdc : undefined;
        } else {
            const args = argsOrState as NsxvDnatArgs | undefined;
            if ((!args || args.edgeGateway === undefined) && !opts.urn) {
                throw new Error("Missing required property 'edgeGateway'");
            }
            if ((!args || args.networkName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkName'");
            }
            if ((!args || args.networkType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkType'");
            }
            if ((!args || args.originalAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'originalAddress'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["edgeGateway"] = args ? args.edgeGateway : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["icmpType"] = args ? args.icmpType : undefined;
            resourceInputs["loggingEnabled"] = args ? args.loggingEnabled : undefined;
            resourceInputs["networkName"] = args ? args.networkName : undefined;
            resourceInputs["networkType"] = args ? args.networkType : undefined;
            resourceInputs["org"] = args ? args.org : undefined;
            resourceInputs["originalAddress"] = args ? args.originalAddress : undefined;
            resourceInputs["originalPort"] = args ? args.originalPort : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["ruleTag"] = args ? args.ruleTag : undefined;
            resourceInputs["ruleType"] = args ? args.ruleType : undefined;
            resourceInputs["translatedAddress"] = args ? args.translatedAddress : undefined;
            resourceInputs["translatedPort"] = args ? args.translatedPort : undefined;
            resourceInputs["vdc"] = args ? args.vdc : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NsxvDnat.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NsxvDnat resources.
 */
export interface NsxvDnatState {
    /**
     * NAT rule description
     */
    description?: pulumi.Input<string>;
    /**
     * Edge gateway name in which NAT Rule is located
     */
    edgeGateway?: pulumi.Input<string>;
    /**
     * Whether the rule should be enabled. Default 'true'
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * ICMP type. Only supported when protocol is ICMP. One of `any`, `address-mask-request`, `address-mask-reply`,
     * `destination-unreachable`, `echo-request`, `echo-reply`, `parameter-problem`, `redirect`, `router-advertisement`,
     * `router-solicitation`, `source-quench`, `time-exceeded`, `timestamp-request`, `timestamp-reply`. Default `any`
     */
    icmpType?: pulumi.Input<string>;
    /**
     * Whether logging should be enabled for this rule. Default 'false'
     */
    loggingEnabled?: pulumi.Input<boolean>;
    /**
     * Org or external network name
     */
    networkName?: pulumi.Input<string>;
    /**
     * Network type. One of 'ext', 'org'
     */
    networkType?: pulumi.Input<string>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
     * different organizations
     */
    org?: pulumi.Input<string>;
    /**
     * Original address or address range. This is the the destination address for DNAT rules.
     */
    originalAddress?: pulumi.Input<string>;
    /**
     * Original port. This is the destination port for DNAT rules
     */
    originalPort?: pulumi.Input<string>;
    /**
     * Protocol. Such as 'tcp', 'udp', 'icmp', 'any'
     */
    protocol?: pulumi.Input<string>;
    /**
     * Optional. Allows to set custom rule tag
     */
    ruleTag?: pulumi.Input<number>;
    /**
     * Read only. Possible values 'user', 'internal_high'
     */
    ruleType?: pulumi.Input<string>;
    /**
     * Translated address or address range
     */
    translatedAddress?: pulumi.Input<string>;
    /**
     * Translated port
     */
    translatedPort?: pulumi.Input<string>;
    /**
     * The name of VDC to use, optional if defined at provider level
     */
    vdc?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NsxvDnat resource.
 */
export interface NsxvDnatArgs {
    /**
     * NAT rule description
     */
    description?: pulumi.Input<string>;
    /**
     * Edge gateway name in which NAT Rule is located
     */
    edgeGateway: pulumi.Input<string>;
    /**
     * Whether the rule should be enabled. Default 'true'
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * ICMP type. Only supported when protocol is ICMP. One of `any`, `address-mask-request`, `address-mask-reply`,
     * `destination-unreachable`, `echo-request`, `echo-reply`, `parameter-problem`, `redirect`, `router-advertisement`,
     * `router-solicitation`, `source-quench`, `time-exceeded`, `timestamp-request`, `timestamp-reply`. Default `any`
     */
    icmpType?: pulumi.Input<string>;
    /**
     * Whether logging should be enabled for this rule. Default 'false'
     */
    loggingEnabled?: pulumi.Input<boolean>;
    /**
     * Org or external network name
     */
    networkName: pulumi.Input<string>;
    /**
     * Network type. One of 'ext', 'org'
     */
    networkType: pulumi.Input<string>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
     * different organizations
     */
    org?: pulumi.Input<string>;
    /**
     * Original address or address range. This is the the destination address for DNAT rules.
     */
    originalAddress: pulumi.Input<string>;
    /**
     * Original port. This is the destination port for DNAT rules
     */
    originalPort?: pulumi.Input<string>;
    /**
     * Protocol. Such as 'tcp', 'udp', 'icmp', 'any'
     */
    protocol?: pulumi.Input<string>;
    /**
     * Optional. Allows to set custom rule tag
     */
    ruleTag?: pulumi.Input<number>;
    /**
     * Read only. Possible values 'user', 'internal_high'
     */
    ruleType?: pulumi.Input<string>;
    /**
     * Translated address or address range
     */
    translatedAddress?: pulumi.Input<string>;
    /**
     * Translated port
     */
    translatedPort?: pulumi.Input<string>;
    /**
     * The name of VDC to use, optional if defined at provider level
     */
    vdc?: pulumi.Input<string>;
}
