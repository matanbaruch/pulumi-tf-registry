// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSolutionLandingZone(args?: GetSolutionLandingZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetSolutionLandingZoneResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getSolutionLandingZone:getSolutionLandingZone", {
        "id": args.id,
        "org": args.org,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSolutionLandingZone.
 */
export interface GetSolutionLandingZoneArgs {
    id?: string;
    org?: string;
}

/**
 * A collection of values returned by getSolutionLandingZone.
 */
export interface GetSolutionLandingZoneResult {
    readonly catalogs: outputs.GetSolutionLandingZoneCatalog[];
    readonly id: string;
    readonly org?: string;
    readonly state: string;
    readonly vdcs: outputs.GetSolutionLandingZoneVdc[];
}
export function getSolutionLandingZoneOutput(args?: GetSolutionLandingZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSolutionLandingZoneResult> {
    return pulumi.output(args).apply((a: any) => getSolutionLandingZone(a, opts))
}

/**
 * A collection of arguments for invoking getSolutionLandingZone.
 */
export interface GetSolutionLandingZoneOutputArgs {
    id?: pulumi.Input<string>;
    org?: pulumi.Input<string>;
}
