// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMultisiteSiteData(args?: GetMultisiteSiteDataArgs, opts?: pulumi.InvokeOptions): Promise<GetMultisiteSiteDataResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getMultisiteSiteData:getMultisiteSiteData", {
        "downloadToFile": args.downloadToFile,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMultisiteSiteData.
 */
export interface GetMultisiteSiteDataArgs {
    downloadToFile?: string;
    id?: string;
}

/**
 * A collection of values returned by getMultisiteSiteData.
 */
export interface GetMultisiteSiteDataResult {
    readonly associationData: string;
    readonly downloadToFile?: string;
    readonly id: string;
}
export function getMultisiteSiteDataOutput(args?: GetMultisiteSiteDataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMultisiteSiteDataResult> {
    return pulumi.output(args).apply((a: any) => getMultisiteSiteData(a, opts))
}

/**
 * A collection of arguments for invoking getMultisiteSiteData.
 */
export interface GetMultisiteSiteDataOutputArgs {
    downloadToFile?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
