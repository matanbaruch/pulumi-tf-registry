// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNsxvDistributedFirewall(args: GetNsxvDistributedFirewallArgs, opts?: pulumi.InvokeOptions): Promise<GetNsxvDistributedFirewallResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNsxvDistributedFirewall:getNsxvDistributedFirewall", {
        "id": args.id,
        "vdcId": args.vdcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNsxvDistributedFirewall.
 */
export interface GetNsxvDistributedFirewallArgs {
    id?: string;
    vdcId: string;
}

/**
 * A collection of values returned by getNsxvDistributedFirewall.
 */
export interface GetNsxvDistributedFirewallResult {
    readonly enabled: boolean;
    readonly id: string;
    readonly rules: outputs.GetNsxvDistributedFirewallRule[];
    readonly vdcId: string;
}
export function getNsxvDistributedFirewallOutput(args: GetNsxvDistributedFirewallOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNsxvDistributedFirewallResult> {
    return pulumi.output(args).apply((a: any) => getNsxvDistributedFirewall(a, opts))
}

/**
 * A collection of arguments for invoking getNsxvDistributedFirewall.
 */
export interface GetNsxvDistributedFirewallOutputArgs {
    id?: pulumi.Input<string>;
    vdcId: pulumi.Input<string>;
}
