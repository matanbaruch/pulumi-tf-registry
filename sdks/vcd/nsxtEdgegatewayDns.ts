// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NsxtEdgegatewayDns extends pulumi.CustomResource {
    /**
     * Get an existing NsxtEdgegatewayDns resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NsxtEdgegatewayDnsState, opts?: pulumi.CustomResourceOptions): NsxtEdgegatewayDns {
        return new NsxtEdgegatewayDns(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vcd:index/nsxtEdgegatewayDns:NsxtEdgegatewayDns';

    /**
     * Returns true if the given object is an instance of NsxtEdgegatewayDns.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NsxtEdgegatewayDns {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NsxtEdgegatewayDns.__pulumiType;
    }

    /**
     * Conditional forwarder zones
     */
    public readonly conditionalForwarderZones!: pulumi.Output<outputs.NsxtEdgegatewayDnsConditionalForwarderZone[] | undefined>;
    /**
     * The default forwarder zone.
     */
    public readonly defaultForwarderZone!: pulumi.Output<outputs.NsxtEdgegatewayDnsDefaultForwarderZone>;
    /**
     * Edge gateway ID for DNS configuration
     */
    public readonly edgeGatewayId!: pulumi.Output<string>;
    /**
     * Status of the DNS Forwarder. Defaults to `true`
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * IP on which the DNS forwarder listens.Can be modified only if the Edge Gateway has a dedicated external network.
     */
    public readonly listenerIp!: pulumi.Output<string>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
     * different organizations
     */
    public readonly org!: pulumi.Output<string | undefined>;
    /**
     * The value is `true` if a SNAT rule exists for the DNS forwarder.
     */
    public /*out*/ readonly snatRuleEnabled!: pulumi.Output<boolean>;
    /**
     * The external IP address of the SNAT rule. Can be modified only if the Edge Gateway's external network is using IP
     * spaces. (VCD 10.5.0+)
     */
    public readonly snatRuleIpAddress!: pulumi.Output<string>;

    /**
     * Create a NsxtEdgegatewayDns resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NsxtEdgegatewayDnsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NsxtEdgegatewayDnsArgs | NsxtEdgegatewayDnsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NsxtEdgegatewayDnsState | undefined;
            resourceInputs["conditionalForwarderZones"] = state ? state.conditionalForwarderZones : undefined;
            resourceInputs["defaultForwarderZone"] = state ? state.defaultForwarderZone : undefined;
            resourceInputs["edgeGatewayId"] = state ? state.edgeGatewayId : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["listenerIp"] = state ? state.listenerIp : undefined;
            resourceInputs["org"] = state ? state.org : undefined;
            resourceInputs["snatRuleEnabled"] = state ? state.snatRuleEnabled : undefined;
            resourceInputs["snatRuleIpAddress"] = state ? state.snatRuleIpAddress : undefined;
        } else {
            const args = argsOrState as NsxtEdgegatewayDnsArgs | undefined;
            if ((!args || args.defaultForwarderZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultForwarderZone'");
            }
            if ((!args || args.edgeGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'edgeGatewayId'");
            }
            resourceInputs["conditionalForwarderZones"] = args ? args.conditionalForwarderZones : undefined;
            resourceInputs["defaultForwarderZone"] = args ? args.defaultForwarderZone : undefined;
            resourceInputs["edgeGatewayId"] = args ? args.edgeGatewayId : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["listenerIp"] = args ? args.listenerIp : undefined;
            resourceInputs["org"] = args ? args.org : undefined;
            resourceInputs["snatRuleIpAddress"] = args ? args.snatRuleIpAddress : undefined;
            resourceInputs["snatRuleEnabled"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NsxtEdgegatewayDns.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NsxtEdgegatewayDns resources.
 */
export interface NsxtEdgegatewayDnsState {
    /**
     * Conditional forwarder zones
     */
    conditionalForwarderZones?: pulumi.Input<pulumi.Input<inputs.NsxtEdgegatewayDnsConditionalForwarderZone>[]>;
    /**
     * The default forwarder zone.
     */
    defaultForwarderZone?: pulumi.Input<inputs.NsxtEdgegatewayDnsDefaultForwarderZone>;
    /**
     * Edge gateway ID for DNS configuration
     */
    edgeGatewayId?: pulumi.Input<string>;
    /**
     * Status of the DNS Forwarder. Defaults to `true`
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * IP on which the DNS forwarder listens.Can be modified only if the Edge Gateway has a dedicated external network.
     */
    listenerIp?: pulumi.Input<string>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
     * different organizations
     */
    org?: pulumi.Input<string>;
    /**
     * The value is `true` if a SNAT rule exists for the DNS forwarder.
     */
    snatRuleEnabled?: pulumi.Input<boolean>;
    /**
     * The external IP address of the SNAT rule. Can be modified only if the Edge Gateway's external network is using IP
     * spaces. (VCD 10.5.0+)
     */
    snatRuleIpAddress?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NsxtEdgegatewayDns resource.
 */
export interface NsxtEdgegatewayDnsArgs {
    /**
     * Conditional forwarder zones
     */
    conditionalForwarderZones?: pulumi.Input<pulumi.Input<inputs.NsxtEdgegatewayDnsConditionalForwarderZone>[]>;
    /**
     * The default forwarder zone.
     */
    defaultForwarderZone: pulumi.Input<inputs.NsxtEdgegatewayDnsDefaultForwarderZone>;
    /**
     * Edge gateway ID for DNS configuration
     */
    edgeGatewayId: pulumi.Input<string>;
    /**
     * Status of the DNS Forwarder. Defaults to `true`
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * IP on which the DNS forwarder listens.Can be modified only if the Edge Gateway has a dedicated external network.
     */
    listenerIp?: pulumi.Input<string>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
     * different organizations
     */
    org?: pulumi.Input<string>;
    /**
     * The external IP address of the SNAT rule. Can be modified only if the Edge Gateway's external network is using IP
     * spaces. (VCD 10.5.0+)
     */
    snatRuleIpAddress?: pulumi.Input<string>;
}
