// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSolutionAddOnInstancePublish(args: GetSolutionAddOnInstancePublishArgs, opts?: pulumi.InvokeOptions): Promise<GetSolutionAddOnInstancePublishResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getSolutionAddOnInstancePublish:getSolutionAddOnInstancePublish", {
        "addOnInstanceName": args.addOnInstanceName,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSolutionAddOnInstancePublish.
 */
export interface GetSolutionAddOnInstancePublishArgs {
    addOnInstanceName: string;
    id?: string;
}

/**
 * A collection of values returned by getSolutionAddOnInstancePublish.
 */
export interface GetSolutionAddOnInstancePublishResult {
    readonly addOnInstanceId: string;
    readonly addOnInstanceName: string;
    readonly id: string;
    readonly orgIds: string[];
    readonly publishToAllTenants: boolean;
    readonly rdeState: string;
}
export function getSolutionAddOnInstancePublishOutput(args: GetSolutionAddOnInstancePublishOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSolutionAddOnInstancePublishResult> {
    return pulumi.output(args).apply((a: any) => getSolutionAddOnInstancePublish(a, opts))
}

/**
 * A collection of arguments for invoking getSolutionAddOnInstancePublish.
 */
export interface GetSolutionAddOnInstancePublishOutputArgs {
    addOnInstanceName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
