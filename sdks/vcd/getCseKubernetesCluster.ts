// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCseKubernetesCluster(args?: GetCseKubernetesClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetCseKubernetesClusterResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getCseKubernetesCluster:getCseKubernetesCluster", {
        "clusterId": args.clusterId,
        "cseVersion": args.cseVersion,
        "id": args.id,
        "name": args.name,
        "orgId": args.orgId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCseKubernetesCluster.
 */
export interface GetCseKubernetesClusterArgs {
    clusterId?: string;
    cseVersion?: string;
    id?: string;
    name?: string;
    orgId?: string;
}

/**
 * A collection of values returned by getCseKubernetesCluster.
 */
export interface GetCseKubernetesClusterResult {
    readonly autoRepairOnErrors: boolean;
    readonly capvcdVersion: string;
    readonly clusterId?: string;
    readonly clusterResourceSetBindings: string[];
    readonly controlPlanes: outputs.GetCseKubernetesClusterControlPlane[];
    readonly cpiVersion: string;
    readonly cseVersion?: string;
    readonly csiVersion: string;
    readonly defaultStorageClasses: outputs.GetCseKubernetesClusterDefaultStorageClass[];
    readonly events: outputs.GetCseKubernetesClusterEvent[];
    readonly id: string;
    readonly kubeconfig: string;
    readonly kubernetesTemplateId: string;
    readonly kubernetesVersion: string;
    readonly name?: string;
    readonly networkId: string;
    readonly nodeHealthCheck: boolean;
    readonly orgId?: string;
    readonly owner: string;
    readonly podsCidr: string;
    readonly runtime: string;
    readonly servicesCidr: string;
    readonly sshPublicKey: string;
    readonly state: string;
    readonly supportedUpgrades: string[];
    readonly tkgProductVersion: string;
    readonly vdcId: string;
    readonly virtualIpSubnet: string;
    readonly workerPools: outputs.GetCseKubernetesClusterWorkerPool[];
}
export function getCseKubernetesClusterOutput(args?: GetCseKubernetesClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCseKubernetesClusterResult> {
    return pulumi.output(args).apply((a: any) => getCseKubernetesCluster(a, opts))
}

/**
 * A collection of arguments for invoking getCseKubernetesCluster.
 */
export interface GetCseKubernetesClusterOutputArgs {
    clusterId?: pulumi.Input<string>;
    cseVersion?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
}
