// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getResourcePool(args: GetResourcePoolArgs, opts?: pulumi.InvokeOptions): Promise<GetResourcePoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getResourcePool:getResourcePool", {
        "id": args.id,
        "name": args.name,
        "vcenterId": args.vcenterId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getResourcePool.
 */
export interface GetResourcePoolArgs {
    id?: string;
    name: string;
    vcenterId: string;
}

/**
 * A collection of values returned by getResourcePool.
 */
export interface GetResourcePoolResult {
    readonly clusterMoref: string;
    readonly hardwareVersion: string;
    readonly id: string;
    readonly name: string;
    readonly vcenterId: string;
}
export function getResourcePoolOutput(args: GetResourcePoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourcePoolResult> {
    return pulumi.output(args).apply((a: any) => getResourcePool(a, opts))
}

/**
 * A collection of arguments for invoking getResourcePool.
 */
export interface GetResourcePoolOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    vcenterId: pulumi.Input<string>;
}
