// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIpSpaceCustomQuota(args: GetIpSpaceCustomQuotaArgs, opts?: pulumi.InvokeOptions): Promise<GetIpSpaceCustomQuotaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getIpSpaceCustomQuota:getIpSpaceCustomQuota", {
        "id": args.id,
        "ipSpaceId": args.ipSpaceId,
        "orgId": args.orgId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpSpaceCustomQuota.
 */
export interface GetIpSpaceCustomQuotaArgs {
    id?: string;
    ipSpaceId: string;
    orgId: string;
}

/**
 * A collection of values returned by getIpSpaceCustomQuota.
 */
export interface GetIpSpaceCustomQuotaResult {
    readonly id: string;
    readonly ipPrefixQuotas: outputs.GetIpSpaceCustomQuotaIpPrefixQuota[];
    readonly ipRangeQuota: string;
    readonly ipSpaceId: string;
    readonly orgId: string;
}
export function getIpSpaceCustomQuotaOutput(args: GetIpSpaceCustomQuotaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpSpaceCustomQuotaResult> {
    return pulumi.output(args).apply((a: any) => getIpSpaceCustomQuota(a, opts))
}

/**
 * A collection of arguments for invoking getIpSpaceCustomQuota.
 */
export interface GetIpSpaceCustomQuotaOutputArgs {
    id?: pulumi.Input<string>;
    ipSpaceId: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
}
