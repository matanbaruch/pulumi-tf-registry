// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIndependentDisk(args?: GetIndependentDiskArgs, opts?: pulumi.InvokeOptions): Promise<GetIndependentDiskResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getIndependentDisk:getIndependentDisk", {
        "id": args.id,
        "name": args.name,
        "org": args.org,
        "vdc": args.vdc,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIndependentDisk.
 */
export interface GetIndependentDiskArgs {
    id?: string;
    name?: string;
    org?: string;
    vdc?: string;
}

/**
 * A collection of values returned by getIndependentDisk.
 */
export interface GetIndependentDiskResult {
    readonly attachedVmIds: string[];
    readonly busSubType: string;
    readonly busType: string;
    readonly datastoreName: string;
    readonly description: string;
    readonly encrypted: boolean;
    readonly id?: string;
    readonly iops: number;
    readonly isAttached: boolean;
    /**
     * @deprecated Deprecated
     */
    readonly metadata: {[key: string]: string};
    readonly metadataEntries: outputs.GetIndependentDiskMetadataEntry[];
    readonly name?: string;
    readonly org?: string;
    readonly ownerName: string;
    readonly sharingType: string;
    readonly sizeInMb: number;
    readonly storageProfile: string;
    readonly uuid: string;
    readonly vdc?: string;
}
export function getIndependentDiskOutput(args?: GetIndependentDiskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIndependentDiskResult> {
    return pulumi.output(args).apply((a: any) => getIndependentDisk(a, opts))
}

/**
 * A collection of arguments for invoking getIndependentDisk.
 */
export interface GetIndependentDiskOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    org?: pulumi.Input<string>;
    vdc?: pulumi.Input<string>;
}
