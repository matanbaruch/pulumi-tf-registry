// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrgSamlMetadata(args: GetOrgSamlMetadataArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgSamlMetadataResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getOrgSamlMetadata:getOrgSamlMetadata", {
        "fileName": args.fileName,
        "id": args.id,
        "orgId": args.orgId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrgSamlMetadata.
 */
export interface GetOrgSamlMetadataArgs {
    fileName?: string;
    id?: string;
    orgId: string;
}

/**
 * A collection of values returned by getOrgSamlMetadata.
 */
export interface GetOrgSamlMetadataResult {
    readonly fileName?: string;
    readonly id: string;
    readonly metadataText: string;
    readonly orgId: string;
}
export function getOrgSamlMetadataOutput(args: GetOrgSamlMetadataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgSamlMetadataResult> {
    return pulumi.output(args).apply((a: any) => getOrgSamlMetadata(a, opts))
}

/**
 * A collection of arguments for invoking getOrgSamlMetadata.
 */
export interface GetOrgSamlMetadataOutputArgs {
    fileName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
}
