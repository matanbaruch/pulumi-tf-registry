// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getUiPlugin(args: GetUiPluginArgs, opts?: pulumi.InvokeOptions): Promise<GetUiPluginResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getUiPlugin:getUiPlugin", {
        "id": args.id,
        "name": args.name,
        "vendor": args.vendor,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUiPlugin.
 */
export interface GetUiPluginArgs {
    id?: string;
    name: string;
    vendor: string;
    version: string;
}

/**
 * A collection of values returned by getUiPlugin.
 */
export interface GetUiPluginResult {
    readonly description: string;
    readonly enabled: boolean;
    readonly id: string;
    readonly license: string;
    readonly link: string;
    readonly name: string;
    readonly providerScoped: boolean;
    readonly status: string;
    readonly tenantIds: string[];
    readonly tenantScoped: boolean;
    readonly vendor: string;
    readonly version: string;
}
export function getUiPluginOutput(args: GetUiPluginOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUiPluginResult> {
    return pulumi.output(args).apply((a: any) => getUiPlugin(a, opts))
}

/**
 * A collection of arguments for invoking getUiPlugin.
 */
export interface GetUiPluginOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    vendor: pulumi.Input<string>;
    version: pulumi.Input<string>;
}
