// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRde(args: GetRdeArgs, opts?: pulumi.InvokeOptions): Promise<GetRdeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getRde:getRde", {
        "id": args.id,
        "name": args.name,
        "org": args.org,
        "rdeTypeId": args.rdeTypeId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRde.
 */
export interface GetRdeArgs {
    id?: string;
    name: string;
    org?: string;
    rdeTypeId: string;
}

/**
 * A collection of values returned by getRde.
 */
export interface GetRdeResult {
    readonly entity: string;
    readonly externalId: string;
    readonly id: string;
    readonly metadataEntries: outputs.GetRdeMetadataEntry[];
    readonly name: string;
    readonly org?: string;
    readonly orgId: string;
    readonly ownerUserId: string;
    readonly rdeTypeId: string;
    readonly state: string;
}
export function getRdeOutput(args: GetRdeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRdeResult> {
    return pulumi.output(args).apply((a: any) => getRde(a, opts))
}

/**
 * A collection of arguments for invoking getRde.
 */
export interface GetRdeOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    org?: pulumi.Input<string>;
    rdeTypeId: pulumi.Input<string>;
}
