// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNsxtEdgegatewayDhcpForwarding(args: GetNsxtEdgegatewayDhcpForwardingArgs, opts?: pulumi.InvokeOptions): Promise<GetNsxtEdgegatewayDhcpForwardingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNsxtEdgegatewayDhcpForwarding:getNsxtEdgegatewayDhcpForwarding", {
        "edgeGatewayId": args.edgeGatewayId,
        "id": args.id,
        "org": args.org,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNsxtEdgegatewayDhcpForwarding.
 */
export interface GetNsxtEdgegatewayDhcpForwardingArgs {
    edgeGatewayId: string;
    id?: string;
    org?: string;
}

/**
 * A collection of values returned by getNsxtEdgegatewayDhcpForwarding.
 */
export interface GetNsxtEdgegatewayDhcpForwardingResult {
    readonly dhcpServers: string[];
    readonly edgeGatewayId: string;
    readonly enabled: boolean;
    readonly id: string;
    readonly org?: string;
}
export function getNsxtEdgegatewayDhcpForwardingOutput(args: GetNsxtEdgegatewayDhcpForwardingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNsxtEdgegatewayDhcpForwardingResult> {
    return pulumi.output(args).apply((a: any) => getNsxtEdgegatewayDhcpForwarding(a, opts))
}

/**
 * A collection of arguments for invoking getNsxtEdgegatewayDhcpForwarding.
 */
export interface GetNsxtEdgegatewayDhcpForwardingOutputArgs {
    edgeGatewayId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    org?: pulumi.Input<string>;
}
