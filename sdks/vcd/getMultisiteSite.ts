// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMultisiteSite(args?: GetMultisiteSiteArgs, opts?: pulumi.InvokeOptions): Promise<GetMultisiteSiteResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getMultisiteSite:getMultisiteSite", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMultisiteSite.
 */
export interface GetMultisiteSiteArgs {
    id?: string;
}

/**
 * A collection of values returned by getMultisiteSite.
 */
export interface GetMultisiteSiteResult {
    readonly associations: string[];
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly numberOfAssociations: number;
}
export function getMultisiteSiteOutput(args?: GetMultisiteSiteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMultisiteSiteResult> {
    return pulumi.output(args).apply((a: any) => getMultisiteSite(a, opts))
}

/**
 * A collection of arguments for invoking getMultisiteSite.
 */
export interface GetMultisiteSiteOutputArgs {
    id?: pulumi.Input<string>;
}
