// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrgGroup(args: GetOrgGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getOrgGroup:getOrgGroup", {
        "id": args.id,
        "name": args.name,
        "org": args.org,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrgGroup.
 */
export interface GetOrgGroupArgs {
    id?: string;
    name: string;
    org?: string;
}

/**
 * A collection of values returned by getOrgGroup.
 */
export interface GetOrgGroupResult {
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly org?: string;
    readonly providerType: string;
    readonly role: string;
    readonly userNames: string[];
}
export function getOrgGroupOutput(args: GetOrgGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgGroupResult> {
    return pulumi.output(args).apply((a: any) => getOrgGroup(a, opts))
}

/**
 * A collection of arguments for invoking getOrgGroup.
 */
export interface GetOrgGroupOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    org?: pulumi.Input<string>;
}
