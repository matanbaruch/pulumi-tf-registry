// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVmPlacementPolicy(args: GetVmPlacementPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetVmPlacementPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getVmPlacementPolicy:getVmPlacementPolicy", {
        "id": args.id,
        "name": args.name,
        "providerVdcId": args.providerVdcId,
        "vdcId": args.vdcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVmPlacementPolicy.
 */
export interface GetVmPlacementPolicyArgs {
    id?: string;
    name: string;
    providerVdcId?: string;
    vdcId?: string;
}

/**
 * A collection of values returned by getVmPlacementPolicy.
 */
export interface GetVmPlacementPolicyResult {
    readonly description: string;
    readonly id: string;
    readonly logicalVmGroupIds: string[];
    readonly name: string;
    readonly providerVdcId?: string;
    readonly vdcId?: string;
    readonly vmGroupIds: string[];
}
export function getVmPlacementPolicyOutput(args: GetVmPlacementPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVmPlacementPolicyResult> {
    return pulumi.output(args).apply((a: any) => getVmPlacementPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getVmPlacementPolicy.
 */
export interface GetVmPlacementPolicyOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    providerVdcId?: pulumi.Input<string>;
    vdcId?: pulumi.Input<string>;
}
