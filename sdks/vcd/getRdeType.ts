// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRdeType(args: GetRdeTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetRdeTypeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getRdeType:getRdeType", {
        "id": args.id,
        "nss": args.nss,
        "vendor": args.vendor,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRdeType.
 */
export interface GetRdeTypeArgs {
    id?: string;
    nss: string;
    vendor: string;
    version: string;
}

/**
 * A collection of values returned by getRdeType.
 */
export interface GetRdeTypeResult {
    readonly description: string;
    readonly externalId: string;
    readonly hooks: outputs.GetRdeTypeHook[];
    readonly id: string;
    readonly inheritedVersion: string;
    readonly interfaceIds: string[];
    readonly name: string;
    readonly nss: string;
    readonly readonly: boolean;
    readonly schema: string;
    readonly vendor: string;
    readonly version: string;
}
export function getRdeTypeOutput(args: GetRdeTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRdeTypeResult> {
    return pulumi.output(args).apply((a: any) => getRdeType(a, opts))
}

/**
 * A collection of arguments for invoking getRdeType.
 */
export interface GetRdeTypeOutputArgs {
    id?: pulumi.Input<string>;
    nss: pulumi.Input<string>;
    vendor: pulumi.Input<string>;
    version: pulumi.Input<string>;
}
