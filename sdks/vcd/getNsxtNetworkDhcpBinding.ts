// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNsxtNetworkDhcpBinding(args: GetNsxtNetworkDhcpBindingArgs, opts?: pulumi.InvokeOptions): Promise<GetNsxtNetworkDhcpBindingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNsxtNetworkDhcpBinding:getNsxtNetworkDhcpBinding", {
        "id": args.id,
        "name": args.name,
        "org": args.org,
        "orgNetworkId": args.orgNetworkId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNsxtNetworkDhcpBinding.
 */
export interface GetNsxtNetworkDhcpBindingArgs {
    id?: string;
    name: string;
    org?: string;
    orgNetworkId: string;
}

/**
 * A collection of values returned by getNsxtNetworkDhcpBinding.
 */
export interface GetNsxtNetworkDhcpBindingResult {
    readonly bindingType: string;
    readonly description: string;
    readonly dhcpV4Configs: outputs.GetNsxtNetworkDhcpBindingDhcpV4Config[];
    readonly dhcpV6Configs: outputs.GetNsxtNetworkDhcpBindingDhcpV6Config[];
    readonly dnsServers: string[];
    readonly id: string;
    readonly ipAddress: string;
    readonly leaseTime: number;
    readonly macAddress: string;
    readonly name: string;
    readonly org?: string;
    readonly orgNetworkId: string;
}
export function getNsxtNetworkDhcpBindingOutput(args: GetNsxtNetworkDhcpBindingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNsxtNetworkDhcpBindingResult> {
    return pulumi.output(args).apply((a: any) => getNsxtNetworkDhcpBinding(a, opts))
}

/**
 * A collection of arguments for invoking getNsxtNetworkDhcpBinding.
 */
export interface GetNsxtNetworkDhcpBindingOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    org?: pulumi.Input<string>;
    orgNetworkId: pulumi.Input<string>;
}
