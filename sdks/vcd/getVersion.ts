// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVersion(args?: GetVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetVersionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getVersion:getVersion", {
        "condition": args.condition,
        "failIfNotMatch": args.failIfNotMatch,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVersion.
 */
export interface GetVersionArgs {
    condition?: string;
    failIfNotMatch?: boolean;
    id?: string;
}

/**
 * A collection of values returned by getVersion.
 */
export interface GetVersionResult {
    readonly apiVersion: string;
    readonly condition?: string;
    readonly failIfNotMatch?: boolean;
    readonly id: string;
    readonly matchesCondition: boolean;
    readonly vcdVersion: string;
}
export function getVersionOutput(args?: GetVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVersionResult> {
    return pulumi.output(args).apply((a: any) => getVersion(a, opts))
}

/**
 * A collection of arguments for invoking getVersion.
 */
export interface GetVersionOutputArgs {
    condition?: pulumi.Input<string>;
    failIfNotMatch?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
}
