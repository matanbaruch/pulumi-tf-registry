// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLibraryCertificate(args?: GetLibraryCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetLibraryCertificateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getLibraryCertificate:getLibraryCertificate", {
        "alias": args.alias,
        "certificate": args.certificate,
        "description": args.description,
        "id": args.id,
        "org": args.org,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLibraryCertificate.
 */
export interface GetLibraryCertificateArgs {
    alias?: string;
    certificate?: string;
    description?: string;
    id?: string;
    org?: string;
}

/**
 * A collection of values returned by getLibraryCertificate.
 */
export interface GetLibraryCertificateResult {
    readonly alias: string;
    readonly certificate: string;
    readonly description: string;
    readonly id: string;
    readonly org?: string;
}
export function getLibraryCertificateOutput(args?: GetLibraryCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLibraryCertificateResult> {
    return pulumi.output(args).apply((a: any) => getLibraryCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getLibraryCertificate.
 */
export interface GetLibraryCertificateOutputArgs {
    alias?: pulumi.Input<string>;
    certificate?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    org?: pulumi.Input<string>;
}
