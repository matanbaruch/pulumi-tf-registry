// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVmVgpuPolicy(args: GetVmVgpuPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetVmVgpuPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getVmVgpuPolicy:getVmVgpuPolicy", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVmVgpuPolicy.
 */
export interface GetVmVgpuPolicyArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getVmVgpuPolicy.
 */
export interface GetVmVgpuPolicyResult {
    readonly cpus: outputs.GetVmVgpuPolicyCpus[];
    readonly description: string;
    readonly id: string;
    readonly memories: outputs.GetVmVgpuPolicyMemory[];
    readonly name: string;
    readonly providerVdcScopes: outputs.GetVmVgpuPolicyProviderVdcScope[];
    readonly vgpuProfiles: outputs.GetVmVgpuPolicyVgpuProfile[];
}
export function getVmVgpuPolicyOutput(args: GetVmVgpuPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVmVgpuPolicyResult> {
    return pulumi.output(args).apply((a: any) => getVmVgpuPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getVmVgpuPolicy.
 */
export interface GetVmVgpuPolicyOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
