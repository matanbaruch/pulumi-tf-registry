// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTask(args: GetTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetTaskResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getTask:getTask", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTask.
 */
export interface GetTaskArgs {
    id: string;
}

/**
 * A collection of values returned by getTask.
 */
export interface GetTaskResult {
    readonly cancelRequested: boolean;
    readonly description: string;
    readonly endTime: string;
    readonly error: string;
    readonly expiryTime: string;
    readonly href: string;
    readonly id: string;
    readonly name: string;
    readonly operation: string;
    readonly operationName: string;
    readonly orgId: string;
    readonly orgName: string;
    readonly ownerId: string;
    readonly ownerName: string;
    readonly ownerType: string;
    readonly progress: number;
    readonly startTime: string;
    readonly status: string;
    readonly type: string;
    readonly userId: string;
    readonly userName: string;
}
export function getTaskOutput(args: GetTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTaskResult> {
    return pulumi.output(args).apply((a: any) => getTask(a, opts))
}

/**
 * A collection of arguments for invoking getTask.
 */
export interface GetTaskOutputArgs {
    id: pulumi.Input<string>;
}
