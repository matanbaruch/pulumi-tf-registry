// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NsxvDhcpRelay extends pulumi.CustomResource {
    /**
     * Get an existing NsxvDhcpRelay resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NsxvDhcpRelayState, opts?: pulumi.CustomResourceOptions): NsxvDhcpRelay {
        return new NsxvDhcpRelay(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vcd:index/nsxvDhcpRelay:NsxvDhcpRelay';

    /**
     * Returns true if the given object is an instance of NsxvDhcpRelay.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NsxvDhcpRelay {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NsxvDhcpRelay.__pulumiType;
    }

    /**
     * A set of IP domain names of DHCP servers
     */
    public readonly domainNames!: pulumi.Output<string[] | undefined>;
    /**
     * Edge gateway name for DHCP relay settings
     */
    public readonly edgeGateway!: pulumi.Output<string>;
    /**
     * A set of IP address of DHCP servers
     */
    public readonly ipAddresses!: pulumi.Output<string[] | undefined>;
    /**
     * A set of IP set names which consist DHCP servers
     */
    public readonly ipSets!: pulumi.Output<string[] | undefined>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
     * different organizations
     */
    public readonly org!: pulumi.Output<string | undefined>;
    public readonly relayAgents!: pulumi.Output<outputs.NsxvDhcpRelayRelayAgent[]>;
    /**
     * The name of VDC to use, optional if defined at provider level
     */
    public readonly vdc!: pulumi.Output<string | undefined>;

    /**
     * Create a NsxvDhcpRelay resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NsxvDhcpRelayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NsxvDhcpRelayArgs | NsxvDhcpRelayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NsxvDhcpRelayState | undefined;
            resourceInputs["domainNames"] = state ? state.domainNames : undefined;
            resourceInputs["edgeGateway"] = state ? state.edgeGateway : undefined;
            resourceInputs["ipAddresses"] = state ? state.ipAddresses : undefined;
            resourceInputs["ipSets"] = state ? state.ipSets : undefined;
            resourceInputs["org"] = state ? state.org : undefined;
            resourceInputs["relayAgents"] = state ? state.relayAgents : undefined;
            resourceInputs["vdc"] = state ? state.vdc : undefined;
        } else {
            const args = argsOrState as NsxvDhcpRelayArgs | undefined;
            if ((!args || args.edgeGateway === undefined) && !opts.urn) {
                throw new Error("Missing required property 'edgeGateway'");
            }
            if ((!args || args.relayAgents === undefined) && !opts.urn) {
                throw new Error("Missing required property 'relayAgents'");
            }
            resourceInputs["domainNames"] = args ? args.domainNames : undefined;
            resourceInputs["edgeGateway"] = args ? args.edgeGateway : undefined;
            resourceInputs["ipAddresses"] = args ? args.ipAddresses : undefined;
            resourceInputs["ipSets"] = args ? args.ipSets : undefined;
            resourceInputs["org"] = args ? args.org : undefined;
            resourceInputs["relayAgents"] = args ? args.relayAgents : undefined;
            resourceInputs["vdc"] = args ? args.vdc : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NsxvDhcpRelay.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NsxvDhcpRelay resources.
 */
export interface NsxvDhcpRelayState {
    /**
     * A set of IP domain names of DHCP servers
     */
    domainNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Edge gateway name for DHCP relay settings
     */
    edgeGateway?: pulumi.Input<string>;
    /**
     * A set of IP address of DHCP servers
     */
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of IP set names which consist DHCP servers
     */
    ipSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
     * different organizations
     */
    org?: pulumi.Input<string>;
    relayAgents?: pulumi.Input<pulumi.Input<inputs.NsxvDhcpRelayRelayAgent>[]>;
    /**
     * The name of VDC to use, optional if defined at provider level
     */
    vdc?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NsxvDhcpRelay resource.
 */
export interface NsxvDhcpRelayArgs {
    /**
     * A set of IP domain names of DHCP servers
     */
    domainNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Edge gateway name for DHCP relay settings
     */
    edgeGateway: pulumi.Input<string>;
    /**
     * A set of IP address of DHCP servers
     */
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of IP set names which consist DHCP servers
     */
    ipSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
     * different organizations
     */
    org?: pulumi.Input<string>;
    relayAgents: pulumi.Input<pulumi.Input<inputs.NsxvDhcpRelayRelayAgent>[]>;
    /**
     * The name of VDC to use, optional if defined at provider level
     */
    vdc?: pulumi.Input<string>;
}
