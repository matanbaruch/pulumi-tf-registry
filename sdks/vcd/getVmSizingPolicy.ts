// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVmSizingPolicy(args: GetVmSizingPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetVmSizingPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getVmSizingPolicy:getVmSizingPolicy", {
        "id": args.id,
        "name": args.name,
        "org": args.org,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVmSizingPolicy.
 */
export interface GetVmSizingPolicyArgs {
    id?: string;
    name: string;
    /**
     * @deprecated Deprecated
     */
    org?: string;
}

/**
 * A collection of values returned by getVmSizingPolicy.
 */
export interface GetVmSizingPolicyResult {
    readonly cpus: outputs.GetVmSizingPolicyCpus[];
    readonly description: string;
    readonly id: string;
    readonly memories: outputs.GetVmSizingPolicyMemory[];
    readonly name: string;
    /**
     * @deprecated Deprecated
     */
    readonly org?: string;
}
export function getVmSizingPolicyOutput(args: GetVmSizingPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVmSizingPolicyResult> {
    return pulumi.output(args).apply((a: any) => getVmSizingPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getVmSizingPolicy.
 */
export interface GetVmSizingPolicyOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    org?: pulumi.Input<string>;
}
