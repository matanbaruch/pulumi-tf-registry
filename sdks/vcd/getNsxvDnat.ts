// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNsxvDnat(args: GetNsxvDnatArgs, opts?: pulumi.InvokeOptions): Promise<GetNsxvDnatResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNsxvDnat:getNsxvDnat", {
        "edgeGateway": args.edgeGateway,
        "id": args.id,
        "org": args.org,
        "ruleId": args.ruleId,
        "vdc": args.vdc,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNsxvDnat.
 */
export interface GetNsxvDnatArgs {
    edgeGateway: string;
    id?: string;
    org?: string;
    ruleId: string;
    vdc?: string;
}

/**
 * A collection of values returned by getNsxvDnat.
 */
export interface GetNsxvDnatResult {
    readonly description: string;
    readonly edgeGateway: string;
    readonly enabled: boolean;
    readonly icmpType: string;
    readonly id: string;
    readonly loggingEnabled: boolean;
    readonly networkName: string;
    readonly networkType: string;
    readonly org?: string;
    readonly originalAddress: string;
    readonly originalPort: string;
    readonly protocol: string;
    readonly ruleId: string;
    readonly ruleTag: number;
    readonly ruleType: string;
    readonly translatedAddress: string;
    readonly translatedPort: string;
    readonly vdc?: string;
}
export function getNsxvDnatOutput(args: GetNsxvDnatOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNsxvDnatResult> {
    return pulumi.output(args).apply((a: any) => getNsxvDnat(a, opts))
}

/**
 * A collection of arguments for invoking getNsxvDnat.
 */
export interface GetNsxvDnatOutputArgs {
    edgeGateway: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    org?: pulumi.Input<string>;
    ruleId: pulumi.Input<string>;
    vdc?: pulumi.Input<string>;
}
