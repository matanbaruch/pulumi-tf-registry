// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrgSaml(args: GetOrgSamlArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgSamlResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getOrgSaml:getOrgSaml", {
        "id": args.id,
        "orgId": args.orgId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrgSaml.
 */
export interface GetOrgSamlArgs {
    id?: string;
    orgId: string;
}

/**
 * A collection of values returned by getOrgSaml.
 */
export interface GetOrgSamlResult {
    readonly email: string;
    readonly enabled: boolean;
    readonly entityId: string;
    readonly firstName: string;
    readonly fullName: string;
    readonly group: string;
    readonly id: string;
    readonly orgId: string;
    readonly role: string;
    readonly surname: string;
    readonly userName: string;
}
export function getOrgSamlOutput(args: GetOrgSamlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgSamlResult> {
    return pulumi.output(args).apply((a: any) => getOrgSaml(a, opts))
}

/**
 * A collection of arguments for invoking getOrgSaml.
 */
export interface GetOrgSamlOutputArgs {
    id?: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
}
