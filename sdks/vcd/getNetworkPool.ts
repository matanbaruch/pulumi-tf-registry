// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkPool(args: GetNetworkPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkPoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcd:index/getNetworkPool:getNetworkPool", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkPool.
 */
export interface GetNetworkPoolArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getNetworkPool.
 */
export interface GetNetworkPoolResult {
    readonly backings: outputs.GetNetworkPoolBacking[];
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly networkProviderId: string;
    readonly networkProviderName: string;
    readonly networkProviderType: string;
    readonly promiscuousMode: boolean;
    readonly status: string;
    readonly totalBackingsCount: number;
    readonly type: string;
    readonly usedBackingsCount: number;
}
export function getNetworkPoolOutput(args: GetNetworkPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkPoolResult> {
    return pulumi.output(args).apply((a: any) => getNetworkPool(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkPool.
 */
export interface GetNetworkPoolOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
