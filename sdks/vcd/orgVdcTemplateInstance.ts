// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OrgVdcTemplateInstance extends pulumi.CustomResource {
    /**
     * Get an existing OrgVdcTemplateInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrgVdcTemplateInstanceState, opts?: pulumi.CustomResourceOptions): OrgVdcTemplateInstance {
        return new OrgVdcTemplateInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vcd:index/orgVdcTemplateInstance:OrgVdcTemplateInstance';

    /**
     * Returns true if the given object is an instance of OrgVdcTemplateInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrgVdcTemplateInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrgVdcTemplateInstance.__pulumiType;
    }

    /**
     * If this flag is set to 'true', it forcefully deletes the VDC, only when delete_instantiated_vdc_on_removal=true
     */
    public readonly deleteForce!: pulumi.Output<boolean | undefined>;
    /**
     * If this flag is set to 'true', removing this resource will attempt to delete the instantiated VDC
     */
    public readonly deleteInstantiatedVdcOnRemoval!: pulumi.Output<boolean>;
    /**
     * If this flag is set to 'true', it recursively deletes the VDC, only when delete_instantiated_vdc_on_removal=true
     */
    public readonly deleteRecursive!: pulumi.Output<boolean | undefined>;
    /**
     * Description of the VDC to be instantiated
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Name of the VDC to be instantiated
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * ID of the Organization where the VDC will be instantiated
     */
    public readonly orgId!: pulumi.Output<string>;
    /**
     * ID of the VDC template to instantiate
     */
    public readonly orgVdcTemplateId!: pulumi.Output<string>;

    /**
     * Create a OrgVdcTemplateInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrgVdcTemplateInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrgVdcTemplateInstanceArgs | OrgVdcTemplateInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrgVdcTemplateInstanceState | undefined;
            resourceInputs["deleteForce"] = state ? state.deleteForce : undefined;
            resourceInputs["deleteInstantiatedVdcOnRemoval"] = state ? state.deleteInstantiatedVdcOnRemoval : undefined;
            resourceInputs["deleteRecursive"] = state ? state.deleteRecursive : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["orgVdcTemplateId"] = state ? state.orgVdcTemplateId : undefined;
        } else {
            const args = argsOrState as OrgVdcTemplateInstanceArgs | undefined;
            if ((!args || args.deleteInstantiatedVdcOnRemoval === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deleteInstantiatedVdcOnRemoval'");
            }
            if ((!args || args.orgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            if ((!args || args.orgVdcTemplateId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orgVdcTemplateId'");
            }
            resourceInputs["deleteForce"] = args ? args.deleteForce : undefined;
            resourceInputs["deleteInstantiatedVdcOnRemoval"] = args ? args.deleteInstantiatedVdcOnRemoval : undefined;
            resourceInputs["deleteRecursive"] = args ? args.deleteRecursive : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["orgVdcTemplateId"] = args ? args.orgVdcTemplateId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrgVdcTemplateInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OrgVdcTemplateInstance resources.
 */
export interface OrgVdcTemplateInstanceState {
    /**
     * If this flag is set to 'true', it forcefully deletes the VDC, only when delete_instantiated_vdc_on_removal=true
     */
    deleteForce?: pulumi.Input<boolean>;
    /**
     * If this flag is set to 'true', removing this resource will attempt to delete the instantiated VDC
     */
    deleteInstantiatedVdcOnRemoval?: pulumi.Input<boolean>;
    /**
     * If this flag is set to 'true', it recursively deletes the VDC, only when delete_instantiated_vdc_on_removal=true
     */
    deleteRecursive?: pulumi.Input<boolean>;
    /**
     * Description of the VDC to be instantiated
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the VDC to be instantiated
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the Organization where the VDC will be instantiated
     */
    orgId?: pulumi.Input<string>;
    /**
     * ID of the VDC template to instantiate
     */
    orgVdcTemplateId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrgVdcTemplateInstance resource.
 */
export interface OrgVdcTemplateInstanceArgs {
    /**
     * If this flag is set to 'true', it forcefully deletes the VDC, only when delete_instantiated_vdc_on_removal=true
     */
    deleteForce?: pulumi.Input<boolean>;
    /**
     * If this flag is set to 'true', removing this resource will attempt to delete the instantiated VDC
     */
    deleteInstantiatedVdcOnRemoval: pulumi.Input<boolean>;
    /**
     * If this flag is set to 'true', it recursively deletes the VDC, only when delete_instantiated_vdc_on_removal=true
     */
    deleteRecursive?: pulumi.Input<boolean>;
    /**
     * Description of the VDC to be instantiated
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the VDC to be instantiated
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the Organization where the VDC will be instantiated
     */
    orgId: pulumi.Input<string>;
    /**
     * ID of the VDC template to instantiate
     */
    orgVdcTemplateId: pulumi.Input<string>;
}
