// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { GetCoreDashboardArgs, GetCoreDashboardResult, GetCoreDashboardOutputArgs } from "./getCoreDashboard";
export const getCoreDashboard: typeof import("./getCoreDashboard").getCoreDashboard = null as any;
export const getCoreDashboardOutput: typeof import("./getCoreDashboard").getCoreDashboardOutput = null as any;
utilities.lazyLoad(exports, ["getCoreDashboard","getCoreDashboardOutput"], () => require("./getCoreDashboard"));

export { GetPanelAlertGroupsArgs, GetPanelAlertGroupsResult, GetPanelAlertGroupsOutputArgs } from "./getPanelAlertGroups";
export const getPanelAlertGroups: typeof import("./getPanelAlertGroups").getPanelAlertGroups = null as any;
export const getPanelAlertGroupsOutput: typeof import("./getPanelAlertGroups").getPanelAlertGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getPanelAlertGroups","getPanelAlertGroupsOutput"], () => require("./getPanelAlertGroups"));

export { GetPanelAnnotationsListArgs, GetPanelAnnotationsListResult, GetPanelAnnotationsListOutputArgs } from "./getPanelAnnotationsList";
export const getPanelAnnotationsList: typeof import("./getPanelAnnotationsList").getPanelAnnotationsList = null as any;
export const getPanelAnnotationsListOutput: typeof import("./getPanelAnnotationsList").getPanelAnnotationsListOutput = null as any;
utilities.lazyLoad(exports, ["getPanelAnnotationsList","getPanelAnnotationsListOutput"], () => require("./getPanelAnnotationsList"));

export { GetPanelBarChartArgs, GetPanelBarChartResult, GetPanelBarChartOutputArgs } from "./getPanelBarChart";
export const getPanelBarChart: typeof import("./getPanelBarChart").getPanelBarChart = null as any;
export const getPanelBarChartOutput: typeof import("./getPanelBarChart").getPanelBarChartOutput = null as any;
utilities.lazyLoad(exports, ["getPanelBarChart","getPanelBarChartOutput"], () => require("./getPanelBarChart"));

export { GetPanelBarGaugeArgs, GetPanelBarGaugeResult, GetPanelBarGaugeOutputArgs } from "./getPanelBarGauge";
export const getPanelBarGauge: typeof import("./getPanelBarGauge").getPanelBarGauge = null as any;
export const getPanelBarGaugeOutput: typeof import("./getPanelBarGauge").getPanelBarGaugeOutput = null as any;
utilities.lazyLoad(exports, ["getPanelBarGauge","getPanelBarGaugeOutput"], () => require("./getPanelBarGauge"));

export { GetPanelCandlestickArgs, GetPanelCandlestickResult, GetPanelCandlestickOutputArgs } from "./getPanelCandlestick";
export const getPanelCandlestick: typeof import("./getPanelCandlestick").getPanelCandlestick = null as any;
export const getPanelCandlestickOutput: typeof import("./getPanelCandlestick").getPanelCandlestickOutput = null as any;
utilities.lazyLoad(exports, ["getPanelCandlestick","getPanelCandlestickOutput"], () => require("./getPanelCandlestick"));

export { GetPanelCanvasArgs, GetPanelCanvasResult, GetPanelCanvasOutputArgs } from "./getPanelCanvas";
export const getPanelCanvas: typeof import("./getPanelCanvas").getPanelCanvas = null as any;
export const getPanelCanvasOutput: typeof import("./getPanelCanvas").getPanelCanvasOutput = null as any;
utilities.lazyLoad(exports, ["getPanelCanvas","getPanelCanvasOutput"], () => require("./getPanelCanvas"));

export { GetPanelDashboardListArgs, GetPanelDashboardListResult, GetPanelDashboardListOutputArgs } from "./getPanelDashboardList";
export const getPanelDashboardList: typeof import("./getPanelDashboardList").getPanelDashboardList = null as any;
export const getPanelDashboardListOutput: typeof import("./getPanelDashboardList").getPanelDashboardListOutput = null as any;
utilities.lazyLoad(exports, ["getPanelDashboardList","getPanelDashboardListOutput"], () => require("./getPanelDashboardList"));

export { GetPanelDatagridArgs, GetPanelDatagridResult, GetPanelDatagridOutputArgs } from "./getPanelDatagrid";
export const getPanelDatagrid: typeof import("./getPanelDatagrid").getPanelDatagrid = null as any;
export const getPanelDatagridOutput: typeof import("./getPanelDatagrid").getPanelDatagridOutput = null as any;
utilities.lazyLoad(exports, ["getPanelDatagrid","getPanelDatagridOutput"], () => require("./getPanelDatagrid"));

export { GetPanelDebugArgs, GetPanelDebugResult, GetPanelDebugOutputArgs } from "./getPanelDebug";
export const getPanelDebug: typeof import("./getPanelDebug").getPanelDebug = null as any;
export const getPanelDebugOutput: typeof import("./getPanelDebug").getPanelDebugOutput = null as any;
utilities.lazyLoad(exports, ["getPanelDebug","getPanelDebugOutput"], () => require("./getPanelDebug"));

export { GetPanelGaugeArgs, GetPanelGaugeResult, GetPanelGaugeOutputArgs } from "./getPanelGauge";
export const getPanelGauge: typeof import("./getPanelGauge").getPanelGauge = null as any;
export const getPanelGaugeOutput: typeof import("./getPanelGauge").getPanelGaugeOutput = null as any;
utilities.lazyLoad(exports, ["getPanelGauge","getPanelGaugeOutput"], () => require("./getPanelGauge"));

export { GetPanelGeomapArgs, GetPanelGeomapResult, GetPanelGeomapOutputArgs } from "./getPanelGeomap";
export const getPanelGeomap: typeof import("./getPanelGeomap").getPanelGeomap = null as any;
export const getPanelGeomapOutput: typeof import("./getPanelGeomap").getPanelGeomapOutput = null as any;
utilities.lazyLoad(exports, ["getPanelGeomap","getPanelGeomapOutput"], () => require("./getPanelGeomap"));

export { GetPanelHeatmapArgs, GetPanelHeatmapResult, GetPanelHeatmapOutputArgs } from "./getPanelHeatmap";
export const getPanelHeatmap: typeof import("./getPanelHeatmap").getPanelHeatmap = null as any;
export const getPanelHeatmapOutput: typeof import("./getPanelHeatmap").getPanelHeatmapOutput = null as any;
utilities.lazyLoad(exports, ["getPanelHeatmap","getPanelHeatmapOutput"], () => require("./getPanelHeatmap"));

export { GetPanelHistogramArgs, GetPanelHistogramResult, GetPanelHistogramOutputArgs } from "./getPanelHistogram";
export const getPanelHistogram: typeof import("./getPanelHistogram").getPanelHistogram = null as any;
export const getPanelHistogramOutput: typeof import("./getPanelHistogram").getPanelHistogramOutput = null as any;
utilities.lazyLoad(exports, ["getPanelHistogram","getPanelHistogramOutput"], () => require("./getPanelHistogram"));

export { GetPanelLogsArgs, GetPanelLogsResult, GetPanelLogsOutputArgs } from "./getPanelLogs";
export const getPanelLogs: typeof import("./getPanelLogs").getPanelLogs = null as any;
export const getPanelLogsOutput: typeof import("./getPanelLogs").getPanelLogsOutput = null as any;
utilities.lazyLoad(exports, ["getPanelLogs","getPanelLogsOutput"], () => require("./getPanelLogs"));

export { GetPanelNewsArgs, GetPanelNewsResult, GetPanelNewsOutputArgs } from "./getPanelNews";
export const getPanelNews: typeof import("./getPanelNews").getPanelNews = null as any;
export const getPanelNewsOutput: typeof import("./getPanelNews").getPanelNewsOutput = null as any;
utilities.lazyLoad(exports, ["getPanelNews","getPanelNewsOutput"], () => require("./getPanelNews"));

export { GetPanelNodeGraphArgs, GetPanelNodeGraphResult, GetPanelNodeGraphOutputArgs } from "./getPanelNodeGraph";
export const getPanelNodeGraph: typeof import("./getPanelNodeGraph").getPanelNodeGraph = null as any;
export const getPanelNodeGraphOutput: typeof import("./getPanelNodeGraph").getPanelNodeGraphOutput = null as any;
utilities.lazyLoad(exports, ["getPanelNodeGraph","getPanelNodeGraphOutput"], () => require("./getPanelNodeGraph"));

export { GetPanelPieChartArgs, GetPanelPieChartResult, GetPanelPieChartOutputArgs } from "./getPanelPieChart";
export const getPanelPieChart: typeof import("./getPanelPieChart").getPanelPieChart = null as any;
export const getPanelPieChartOutput: typeof import("./getPanelPieChart").getPanelPieChartOutput = null as any;
utilities.lazyLoad(exports, ["getPanelPieChart","getPanelPieChartOutput"], () => require("./getPanelPieChart"));

export { GetPanelStatArgs, GetPanelStatResult, GetPanelStatOutputArgs } from "./getPanelStat";
export const getPanelStat: typeof import("./getPanelStat").getPanelStat = null as any;
export const getPanelStatOutput: typeof import("./getPanelStat").getPanelStatOutput = null as any;
utilities.lazyLoad(exports, ["getPanelStat","getPanelStatOutput"], () => require("./getPanelStat"));

export { GetPanelStateTimelineArgs, GetPanelStateTimelineResult, GetPanelStateTimelineOutputArgs } from "./getPanelStateTimeline";
export const getPanelStateTimeline: typeof import("./getPanelStateTimeline").getPanelStateTimeline = null as any;
export const getPanelStateTimelineOutput: typeof import("./getPanelStateTimeline").getPanelStateTimelineOutput = null as any;
utilities.lazyLoad(exports, ["getPanelStateTimeline","getPanelStateTimelineOutput"], () => require("./getPanelStateTimeline"));

export { GetPanelStatusHistoryArgs, GetPanelStatusHistoryResult, GetPanelStatusHistoryOutputArgs } from "./getPanelStatusHistory";
export const getPanelStatusHistory: typeof import("./getPanelStatusHistory").getPanelStatusHistory = null as any;
export const getPanelStatusHistoryOutput: typeof import("./getPanelStatusHistory").getPanelStatusHistoryOutput = null as any;
utilities.lazyLoad(exports, ["getPanelStatusHistory","getPanelStatusHistoryOutput"], () => require("./getPanelStatusHistory"));

export { GetPanelTableArgs, GetPanelTableResult, GetPanelTableOutputArgs } from "./getPanelTable";
export const getPanelTable: typeof import("./getPanelTable").getPanelTable = null as any;
export const getPanelTableOutput: typeof import("./getPanelTable").getPanelTableOutput = null as any;
utilities.lazyLoad(exports, ["getPanelTable","getPanelTableOutput"], () => require("./getPanelTable"));

export { GetPanelTextArgs, GetPanelTextResult, GetPanelTextOutputArgs } from "./getPanelText";
export const getPanelText: typeof import("./getPanelText").getPanelText = null as any;
export const getPanelTextOutput: typeof import("./getPanelText").getPanelTextOutput = null as any;
utilities.lazyLoad(exports, ["getPanelText","getPanelTextOutput"], () => require("./getPanelText"));

export { GetPanelTimeSeriesArgs, GetPanelTimeSeriesResult, GetPanelTimeSeriesOutputArgs } from "./getPanelTimeSeries";
export const getPanelTimeSeries: typeof import("./getPanelTimeSeries").getPanelTimeSeries = null as any;
export const getPanelTimeSeriesOutput: typeof import("./getPanelTimeSeries").getPanelTimeSeriesOutput = null as any;
utilities.lazyLoad(exports, ["getPanelTimeSeries","getPanelTimeSeriesOutput"], () => require("./getPanelTimeSeries"));

export { GetPanelTrendArgs, GetPanelTrendResult, GetPanelTrendOutputArgs } from "./getPanelTrend";
export const getPanelTrend: typeof import("./getPanelTrend").getPanelTrend = null as any;
export const getPanelTrendOutput: typeof import("./getPanelTrend").getPanelTrendOutput = null as any;
utilities.lazyLoad(exports, ["getPanelTrend","getPanelTrendOutput"], () => require("./getPanelTrend"));

export { GetPanelXyChartArgs, GetPanelXyChartResult, GetPanelXyChartOutputArgs } from "./getPanelXyChart";
export const getPanelXyChart: typeof import("./getPanelXyChart").getPanelXyChart = null as any;
export const getPanelXyChartOutput: typeof import("./getPanelXyChart").getPanelXyChartOutput = null as any;
utilities.lazyLoad(exports, ["getPanelXyChart","getPanelXyChartOutput"], () => require("./getPanelXyChart"));

export { GetQueryElasticsearchArgs, GetQueryElasticsearchResult, GetQueryElasticsearchOutputArgs } from "./getQueryElasticsearch";
export const getQueryElasticsearch: typeof import("./getQueryElasticsearch").getQueryElasticsearch = null as any;
export const getQueryElasticsearchOutput: typeof import("./getQueryElasticsearch").getQueryElasticsearchOutput = null as any;
utilities.lazyLoad(exports, ["getQueryElasticsearch","getQueryElasticsearchOutput"], () => require("./getQueryElasticsearch"));

export { GetQueryGrafanaPyroscopeArgs, GetQueryGrafanaPyroscopeResult, GetQueryGrafanaPyroscopeOutputArgs } from "./getQueryGrafanaPyroscope";
export const getQueryGrafanaPyroscope: typeof import("./getQueryGrafanaPyroscope").getQueryGrafanaPyroscope = null as any;
export const getQueryGrafanaPyroscopeOutput: typeof import("./getQueryGrafanaPyroscope").getQueryGrafanaPyroscopeOutput = null as any;
utilities.lazyLoad(exports, ["getQueryGrafanaPyroscope","getQueryGrafanaPyroscopeOutput"], () => require("./getQueryGrafanaPyroscope"));

export { GetQueryLokiArgs, GetQueryLokiResult, GetQueryLokiOutputArgs } from "./getQueryLoki";
export const getQueryLoki: typeof import("./getQueryLoki").getQueryLoki = null as any;
export const getQueryLokiOutput: typeof import("./getQueryLoki").getQueryLokiOutput = null as any;
utilities.lazyLoad(exports, ["getQueryLoki","getQueryLokiOutput"], () => require("./getQueryLoki"));

export { GetQueryParcaArgs, GetQueryParcaResult, GetQueryParcaOutputArgs } from "./getQueryParca";
export const getQueryParca: typeof import("./getQueryParca").getQueryParca = null as any;
export const getQueryParcaOutput: typeof import("./getQueryParca").getQueryParcaOutput = null as any;
utilities.lazyLoad(exports, ["getQueryParca","getQueryParcaOutput"], () => require("./getQueryParca"));

export { GetQueryPrometheusArgs, GetQueryPrometheusResult, GetQueryPrometheusOutputArgs } from "./getQueryPrometheus";
export const getQueryPrometheus: typeof import("./getQueryPrometheus").getQueryPrometheus = null as any;
export const getQueryPrometheusOutput: typeof import("./getQueryPrometheus").getQueryPrometheusOutput = null as any;
utilities.lazyLoad(exports, ["getQueryPrometheus","getQueryPrometheusOutput"], () => require("./getQueryPrometheus"));

export { GetQueryTestDataArgs, GetQueryTestDataResult, GetQueryTestDataOutputArgs } from "./getQueryTestData";
export const getQueryTestData: typeof import("./getQueryTestData").getQueryTestData = null as any;
export const getQueryTestDataOutput: typeof import("./getQueryTestData").getQueryTestDataOutput = null as any;
utilities.lazyLoad(exports, ["getQueryTestData","getQueryTestDataOutput"], () => require("./getQueryTestData"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));


// Export sub-modules:
import * as types from "./types";

export {
    types,
};
pulumi.runtime.registerResourcePackage("schemas", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:schemas") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
