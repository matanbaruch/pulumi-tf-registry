// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreDashboard(args?: GetCoreDashboardArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreDashboardResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("schemas:index/getCoreDashboard:getCoreDashboard", {
        "annotations": args.annotations,
        "description": args.description,
        "editable": args.editable,
        "fiscalYearStartMonth": args.fiscalYearStartMonth,
        "gnetId": args.gnetId,
        "graphTooltip": args.graphTooltip,
        "links": args.links,
        "liveNow": args.liveNow,
        "panels": args.panels,
        "refresh": args.refresh,
        "revision": args.revision,
        "schemaVersion": args.schemaVersion,
        "snapshot": args.snapshot,
        "style": args.style,
        "tags": args.tags,
        "templating": args.templating,
        "time": args.time,
        "timepicker": args.timepicker,
        "timezone": args.timezone,
        "title": args.title,
        "uid": args.uid,
        "version": args.version,
        "weekStart": args.weekStart,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreDashboard.
 */
export interface GetCoreDashboardArgs {
    annotations?: inputs.GetCoreDashboardAnnotations;
    description?: string;
    editable?: boolean;
    fiscalYearStartMonth?: number;
    gnetId?: string;
    graphTooltip?: number;
    links?: inputs.GetCoreDashboardLink[];
    liveNow?: boolean;
    panels?: string[];
    refresh?: string;
    revision?: number;
    schemaVersion?: number;
    snapshot?: inputs.GetCoreDashboardSnapshot;
    style?: string;
    tags?: string[];
    templating?: inputs.GetCoreDashboardTemplating;
    time?: inputs.GetCoreDashboardTime;
    timepicker?: inputs.GetCoreDashboardTimepicker;
    timezone?: string;
    title?: string;
    uid?: string;
    version?: number;
    weekStart?: string;
}

/**
 * A collection of values returned by getCoreDashboard.
 */
export interface GetCoreDashboardResult {
    readonly annotations: outputs.GetCoreDashboardAnnotations;
    readonly description?: string;
    readonly editable: boolean;
    readonly fiscalYearStartMonth: number;
    readonly gnetId?: string;
    readonly graphTooltip: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly links?: outputs.GetCoreDashboardLink[];
    readonly liveNow?: boolean;
    readonly panels?: string[];
    readonly refresh?: string;
    readonly renderedJson: string;
    readonly revision?: number;
    readonly schemaVersion: number;
    readonly snapshot: outputs.GetCoreDashboardSnapshot;
    readonly style: string;
    readonly tags?: string[];
    readonly templating: outputs.GetCoreDashboardTemplating;
    readonly time: outputs.GetCoreDashboardTime;
    readonly timepicker: outputs.GetCoreDashboardTimepicker;
    readonly timezone: string;
    readonly title?: string;
    readonly uid?: string;
    readonly version?: number;
    readonly weekStart?: string;
}
export function getCoreDashboardOutput(args?: GetCoreDashboardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreDashboardResult> {
    return pulumi.output(args).apply((a: any) => getCoreDashboard(a, opts))
}

/**
 * A collection of arguments for invoking getCoreDashboard.
 */
export interface GetCoreDashboardOutputArgs {
    annotations?: pulumi.Input<inputs.GetCoreDashboardAnnotationsArgs>;
    description?: pulumi.Input<string>;
    editable?: pulumi.Input<boolean>;
    fiscalYearStartMonth?: pulumi.Input<number>;
    gnetId?: pulumi.Input<string>;
    graphTooltip?: pulumi.Input<number>;
    links?: pulumi.Input<pulumi.Input<inputs.GetCoreDashboardLinkArgs>[]>;
    liveNow?: pulumi.Input<boolean>;
    panels?: pulumi.Input<pulumi.Input<string>[]>;
    refresh?: pulumi.Input<string>;
    revision?: pulumi.Input<number>;
    schemaVersion?: pulumi.Input<number>;
    snapshot?: pulumi.Input<inputs.GetCoreDashboardSnapshotArgs>;
    style?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    templating?: pulumi.Input<inputs.GetCoreDashboardTemplatingArgs>;
    time?: pulumi.Input<inputs.GetCoreDashboardTimeArgs>;
    timepicker?: pulumi.Input<inputs.GetCoreDashboardTimepickerArgs>;
    timezone?: pulumi.Input<string>;
    title?: pulumi.Input<string>;
    uid?: pulumi.Input<string>;
    version?: pulumi.Input<number>;
    weekStart?: pulumi.Input<string>;
}
