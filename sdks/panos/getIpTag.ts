// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIpTag(args?: GetIpTagArgs, opts?: pulumi.InvokeOptions): Promise<GetIpTagResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("panos:index/getIpTag:getIpTag", {
        "id": args.id,
        "ip": args.ip,
        "tag": args.tag,
        "vsys": args.vsys,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpTag.
 */
export interface GetIpTagArgs {
    id?: string;
    ip?: string;
    tag?: string;
    vsys?: string;
}

/**
 * A collection of values returned by getIpTag.
 */
export interface GetIpTagResult {
    readonly entries: outputs.GetIpTagEntry[];
    readonly id: string;
    readonly ip?: string;
    readonly tag?: string;
    readonly total: number;
    readonly vsys?: string;
}
export function getIpTagOutput(args?: GetIpTagOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpTagResult> {
    return pulumi.output(args).apply((a: any) => getIpTag(a, opts))
}

/**
 * A collection of arguments for invoking getIpTag.
 */
export interface GetIpTagOutputArgs {
    id?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
    vsys?: pulumi.Input<string>;
}
