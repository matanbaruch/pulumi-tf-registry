// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCertificateProfile(args: GetCertificateProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("panos:index/getCertificateProfile:getCertificateProfile", {
        "id": args.id,
        "name": args.name,
        "template": args.template,
        "templateStack": args.templateStack,
        "vsys": args.vsys,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCertificateProfile.
 */
export interface GetCertificateProfileArgs {
    id?: string;
    name: string;
    template?: string;
    templateStack?: string;
    vsys?: string;
}

/**
 * A collection of values returned by getCertificateProfile.
 */
export interface GetCertificateProfileResult {
    readonly blockCertificateTimeout: boolean;
    readonly blockExpiredCertificate: boolean;
    readonly blockUnauthenticatedCertificate: boolean;
    readonly blockUnknownCertificate: boolean;
    readonly certificateStatusTimeout: number;
    readonly certificates: outputs.GetCertificateProfileCertificate[];
    readonly crlReceiveTimeout: number;
    readonly domain: string;
    readonly id: string;
    readonly name: string;
    readonly ocspExcludeNonce: boolean;
    readonly ocspReceiveTimeout: number;
    readonly template?: string;
    readonly templateStack?: string;
    readonly useCrl: boolean;
    readonly useOcsp: boolean;
    readonly usernameField: string;
    readonly usernameFieldValue: string;
    readonly vsys?: string;
}
export function getCertificateProfileOutput(args: GetCertificateProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateProfileResult> {
    return pulumi.output(args).apply((a: any) => getCertificateProfile(a, opts))
}

/**
 * A collection of arguments for invoking getCertificateProfile.
 */
export interface GetCertificateProfileOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    template?: pulumi.Input<string>;
    templateStack?: pulumi.Input<string>;
    vsys?: pulumi.Input<string>;
}
