// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPanoramaPlugin(args?: GetPanoramaPluginArgs, opts?: pulumi.InvokeOptions): Promise<GetPanoramaPluginResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("panos:index/getPanoramaPlugin:getPanoramaPlugin", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPanoramaPlugin.
 */
export interface GetPanoramaPluginArgs {
    id?: string;
}

/**
 * A collection of values returned by getPanoramaPlugin.
 */
export interface GetPanoramaPluginResult {
    readonly details: outputs.GetPanoramaPluginDetail[];
    readonly id: string;
    readonly installeds: string[];
    readonly total: number;
}
export function getPanoramaPluginOutput(args?: GetPanoramaPluginOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPanoramaPluginResult> {
    return pulumi.output(args).apply((a: any) => getPanoramaPlugin(a, opts))
}

/**
 * A collection of arguments for invoking getPanoramaPlugin.
 */
export interface GetPanoramaPluginOutputArgs {
    id?: pulumi.Input<string>;
}
