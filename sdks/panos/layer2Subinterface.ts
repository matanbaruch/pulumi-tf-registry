// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Layer2Subinterface extends pulumi.CustomResource {
    /**
     * Get an existing Layer2Subinterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Layer2SubinterfaceState, opts?: pulumi.CustomResourceOptions): Layer2Subinterface {
        return new Layer2Subinterface(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'panos:index/layer2Subinterface:Layer2Subinterface';

    /**
     * Returns true if the given object is an instance of Layer2Subinterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Layer2Subinterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Layer2Subinterface.__pulumiType;
    }

    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly interfaceType!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly netflowProfile!: pulumi.Output<string | undefined>;
    public readonly parentInterface!: pulumi.Output<string>;
    public readonly parentMode!: pulumi.Output<string | undefined>;
    public readonly tag!: pulumi.Output<number | undefined>;
    public readonly vsys!: pulumi.Output<string | undefined>;

    /**
     * Create a Layer2Subinterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Layer2SubinterfaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Layer2SubinterfaceArgs | Layer2SubinterfaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Layer2SubinterfaceState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["interfaceType"] = state ? state.interfaceType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["netflowProfile"] = state ? state.netflowProfile : undefined;
            resourceInputs["parentInterface"] = state ? state.parentInterface : undefined;
            resourceInputs["parentMode"] = state ? state.parentMode : undefined;
            resourceInputs["tag"] = state ? state.tag : undefined;
            resourceInputs["vsys"] = state ? state.vsys : undefined;
        } else {
            const args = argsOrState as Layer2SubinterfaceArgs | undefined;
            if ((!args || args.parentInterface === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parentInterface'");
            }
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["interfaceType"] = args ? args.interfaceType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["netflowProfile"] = args ? args.netflowProfile : undefined;
            resourceInputs["parentInterface"] = args ? args.parentInterface : undefined;
            resourceInputs["parentMode"] = args ? args.parentMode : undefined;
            resourceInputs["tag"] = args ? args.tag : undefined;
            resourceInputs["vsys"] = args ? args.vsys : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Layer2Subinterface.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Layer2Subinterface resources.
 */
export interface Layer2SubinterfaceState {
    comment?: pulumi.Input<string>;
    interfaceType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    netflowProfile?: pulumi.Input<string>;
    parentInterface?: pulumi.Input<string>;
    parentMode?: pulumi.Input<string>;
    tag?: pulumi.Input<number>;
    vsys?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Layer2Subinterface resource.
 */
export interface Layer2SubinterfaceArgs {
    comment?: pulumi.Input<string>;
    interfaceType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    netflowProfile?: pulumi.Input<string>;
    parentInterface: pulumi.Input<string>;
    parentMode?: pulumi.Input<string>;
    tag?: pulumi.Input<number>;
    vsys?: pulumi.Input<string>;
}
