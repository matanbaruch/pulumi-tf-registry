// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSslTlsServiceProfile(args: GetSslTlsServiceProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetSslTlsServiceProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("panos:index/getSslTlsServiceProfile:getSslTlsServiceProfile", {
        "id": args.id,
        "name": args.name,
        "template": args.template,
        "templateStack": args.templateStack,
        "vsys": args.vsys,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSslTlsServiceProfile.
 */
export interface GetSslTlsServiceProfileArgs {
    id?: string;
    name: string;
    template?: string;
    templateStack?: string;
    vsys?: string;
}

/**
 * A collection of values returned by getSslTlsServiceProfile.
 */
export interface GetSslTlsServiceProfileResult {
    readonly allowAlgorithm3des: boolean;
    readonly allowAlgorithmAes128Cbc: boolean;
    readonly allowAlgorithmAes128Gcm: boolean;
    readonly allowAlgorithmAes256Cbc: boolean;
    readonly allowAlgorithmAes256Gcm: boolean;
    readonly allowAlgorithmDhe: boolean;
    readonly allowAlgorithmEcdhe: boolean;
    readonly allowAlgorithmRc4: boolean;
    readonly allowAlgorithmRsa: boolean;
    readonly allowAuthenticationSha1: boolean;
    readonly allowAuthenticationSha256: boolean;
    readonly allowAuthenticationSha384: boolean;
    readonly certificate: string;
    readonly id: string;
    readonly maxVersion: string;
    readonly minVersion: string;
    readonly name: string;
    readonly template?: string;
    readonly templateStack?: string;
    readonly vsys?: string;
}
export function getSslTlsServiceProfileOutput(args: GetSslTlsServiceProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSslTlsServiceProfileResult> {
    return pulumi.output(args).apply((a: any) => getSslTlsServiceProfile(a, opts))
}

/**
 * A collection of arguments for invoking getSslTlsServiceProfile.
 */
export interface GetSslTlsServiceProfileOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    template?: pulumi.Input<string>;
    templateStack?: pulumi.Input<string>;
    vsys?: pulumi.Input<string>;
}
