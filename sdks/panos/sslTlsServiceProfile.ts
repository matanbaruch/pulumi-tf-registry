// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SslTlsServiceProfile extends pulumi.CustomResource {
    /**
     * Get an existing SslTlsServiceProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SslTlsServiceProfileState, opts?: pulumi.CustomResourceOptions): SslTlsServiceProfile {
        return new SslTlsServiceProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'panos:index/sslTlsServiceProfile:SslTlsServiceProfile';

    /**
     * Returns true if the given object is an instance of SslTlsServiceProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SslTlsServiceProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SslTlsServiceProfile.__pulumiType;
    }

    /**
     * Allow algorithm 3DES.
     */
    public readonly allowAlgorithm3des!: pulumi.Output<boolean | undefined>;
    /**
     * Allow algorithm AES-128-CBC.
     */
    public readonly allowAlgorithmAes128Cbc!: pulumi.Output<boolean | undefined>;
    /**
     * Allow algorithm AES-128-GCM.
     */
    public readonly allowAlgorithmAes128Gcm!: pulumi.Output<boolean | undefined>;
    /**
     * Allow algorithm AES-256-CBC.
     */
    public readonly allowAlgorithmAes256Cbc!: pulumi.Output<boolean | undefined>;
    /**
     * Allow algorithm AES-256-GCM.
     */
    public readonly allowAlgorithmAes256Gcm!: pulumi.Output<boolean | undefined>;
    /**
     * Allow algorithm DHE.
     */
    public readonly allowAlgorithmDhe!: pulumi.Output<boolean | undefined>;
    /**
     * Allow algorithm ECDHE.
     */
    public readonly allowAlgorithmEcdhe!: pulumi.Output<boolean | undefined>;
    /**
     * Allow algorithm RC4.
     */
    public readonly allowAlgorithmRc4!: pulumi.Output<boolean | undefined>;
    /**
     * Allow algorithm RSA.
     */
    public readonly allowAlgorithmRsa!: pulumi.Output<boolean | undefined>;
    /**
     * Allow authentication SHA1.
     */
    public readonly allowAuthenticationSha1!: pulumi.Output<boolean | undefined>;
    /**
     * Allow authentication SHA256.
     */
    public readonly allowAuthenticationSha256!: pulumi.Output<boolean | undefined>;
    /**
     * Allow authentication SHA384.
     */
    public readonly allowAuthenticationSha384!: pulumi.Output<boolean | undefined>;
    /**
     * SSL certificate file name.
     */
    public readonly certificate!: pulumi.Output<string>;
    /**
     * Maximum TLS protocol version. Valid values are `tls1-0`, `tls1-1`, `tls1-2`, or `max`.
     */
    public readonly maxVersion!: pulumi.Output<string | undefined>;
    /**
     * Minimum TLS protocol version. Valid values are `tls1-0`, `tls1-1`, or `tls1-2`.
     */
    public readonly minVersion!: pulumi.Output<string | undefined>;
    /**
     * The object name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The template.
     */
    public readonly template!: pulumi.Output<string | undefined>;
    /**
     * The template stack.
     */
    public readonly templateStack!: pulumi.Output<string | undefined>;
    /**
     * The vsys this object belongs in.
     */
    public readonly vsys!: pulumi.Output<string | undefined>;

    /**
     * Create a SslTlsServiceProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SslTlsServiceProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SslTlsServiceProfileArgs | SslTlsServiceProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SslTlsServiceProfileState | undefined;
            resourceInputs["allowAlgorithm3des"] = state ? state.allowAlgorithm3des : undefined;
            resourceInputs["allowAlgorithmAes128Cbc"] = state ? state.allowAlgorithmAes128Cbc : undefined;
            resourceInputs["allowAlgorithmAes128Gcm"] = state ? state.allowAlgorithmAes128Gcm : undefined;
            resourceInputs["allowAlgorithmAes256Cbc"] = state ? state.allowAlgorithmAes256Cbc : undefined;
            resourceInputs["allowAlgorithmAes256Gcm"] = state ? state.allowAlgorithmAes256Gcm : undefined;
            resourceInputs["allowAlgorithmDhe"] = state ? state.allowAlgorithmDhe : undefined;
            resourceInputs["allowAlgorithmEcdhe"] = state ? state.allowAlgorithmEcdhe : undefined;
            resourceInputs["allowAlgorithmRc4"] = state ? state.allowAlgorithmRc4 : undefined;
            resourceInputs["allowAlgorithmRsa"] = state ? state.allowAlgorithmRsa : undefined;
            resourceInputs["allowAuthenticationSha1"] = state ? state.allowAuthenticationSha1 : undefined;
            resourceInputs["allowAuthenticationSha256"] = state ? state.allowAuthenticationSha256 : undefined;
            resourceInputs["allowAuthenticationSha384"] = state ? state.allowAuthenticationSha384 : undefined;
            resourceInputs["certificate"] = state ? state.certificate : undefined;
            resourceInputs["maxVersion"] = state ? state.maxVersion : undefined;
            resourceInputs["minVersion"] = state ? state.minVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["template"] = state ? state.template : undefined;
            resourceInputs["templateStack"] = state ? state.templateStack : undefined;
            resourceInputs["vsys"] = state ? state.vsys : undefined;
        } else {
            const args = argsOrState as SslTlsServiceProfileArgs | undefined;
            if ((!args || args.certificate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'certificate'");
            }
            resourceInputs["allowAlgorithm3des"] = args ? args.allowAlgorithm3des : undefined;
            resourceInputs["allowAlgorithmAes128Cbc"] = args ? args.allowAlgorithmAes128Cbc : undefined;
            resourceInputs["allowAlgorithmAes128Gcm"] = args ? args.allowAlgorithmAes128Gcm : undefined;
            resourceInputs["allowAlgorithmAes256Cbc"] = args ? args.allowAlgorithmAes256Cbc : undefined;
            resourceInputs["allowAlgorithmAes256Gcm"] = args ? args.allowAlgorithmAes256Gcm : undefined;
            resourceInputs["allowAlgorithmDhe"] = args ? args.allowAlgorithmDhe : undefined;
            resourceInputs["allowAlgorithmEcdhe"] = args ? args.allowAlgorithmEcdhe : undefined;
            resourceInputs["allowAlgorithmRc4"] = args ? args.allowAlgorithmRc4 : undefined;
            resourceInputs["allowAlgorithmRsa"] = args ? args.allowAlgorithmRsa : undefined;
            resourceInputs["allowAuthenticationSha1"] = args ? args.allowAuthenticationSha1 : undefined;
            resourceInputs["allowAuthenticationSha256"] = args ? args.allowAuthenticationSha256 : undefined;
            resourceInputs["allowAuthenticationSha384"] = args ? args.allowAuthenticationSha384 : undefined;
            resourceInputs["certificate"] = args ? args.certificate : undefined;
            resourceInputs["maxVersion"] = args ? args.maxVersion : undefined;
            resourceInputs["minVersion"] = args ? args.minVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["template"] = args ? args.template : undefined;
            resourceInputs["templateStack"] = args ? args.templateStack : undefined;
            resourceInputs["vsys"] = args ? args.vsys : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SslTlsServiceProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SslTlsServiceProfile resources.
 */
export interface SslTlsServiceProfileState {
    /**
     * Allow algorithm 3DES.
     */
    allowAlgorithm3des?: pulumi.Input<boolean>;
    /**
     * Allow algorithm AES-128-CBC.
     */
    allowAlgorithmAes128Cbc?: pulumi.Input<boolean>;
    /**
     * Allow algorithm AES-128-GCM.
     */
    allowAlgorithmAes128Gcm?: pulumi.Input<boolean>;
    /**
     * Allow algorithm AES-256-CBC.
     */
    allowAlgorithmAes256Cbc?: pulumi.Input<boolean>;
    /**
     * Allow algorithm AES-256-GCM.
     */
    allowAlgorithmAes256Gcm?: pulumi.Input<boolean>;
    /**
     * Allow algorithm DHE.
     */
    allowAlgorithmDhe?: pulumi.Input<boolean>;
    /**
     * Allow algorithm ECDHE.
     */
    allowAlgorithmEcdhe?: pulumi.Input<boolean>;
    /**
     * Allow algorithm RC4.
     */
    allowAlgorithmRc4?: pulumi.Input<boolean>;
    /**
     * Allow algorithm RSA.
     */
    allowAlgorithmRsa?: pulumi.Input<boolean>;
    /**
     * Allow authentication SHA1.
     */
    allowAuthenticationSha1?: pulumi.Input<boolean>;
    /**
     * Allow authentication SHA256.
     */
    allowAuthenticationSha256?: pulumi.Input<boolean>;
    /**
     * Allow authentication SHA384.
     */
    allowAuthenticationSha384?: pulumi.Input<boolean>;
    /**
     * SSL certificate file name.
     */
    certificate?: pulumi.Input<string>;
    /**
     * Maximum TLS protocol version. Valid values are `tls1-0`, `tls1-1`, `tls1-2`, or `max`.
     */
    maxVersion?: pulumi.Input<string>;
    /**
     * Minimum TLS protocol version. Valid values are `tls1-0`, `tls1-1`, or `tls1-2`.
     */
    minVersion?: pulumi.Input<string>;
    /**
     * The object name.
     */
    name?: pulumi.Input<string>;
    /**
     * The template.
     */
    template?: pulumi.Input<string>;
    /**
     * The template stack.
     */
    templateStack?: pulumi.Input<string>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SslTlsServiceProfile resource.
 */
export interface SslTlsServiceProfileArgs {
    /**
     * Allow algorithm 3DES.
     */
    allowAlgorithm3des?: pulumi.Input<boolean>;
    /**
     * Allow algorithm AES-128-CBC.
     */
    allowAlgorithmAes128Cbc?: pulumi.Input<boolean>;
    /**
     * Allow algorithm AES-128-GCM.
     */
    allowAlgorithmAes128Gcm?: pulumi.Input<boolean>;
    /**
     * Allow algorithm AES-256-CBC.
     */
    allowAlgorithmAes256Cbc?: pulumi.Input<boolean>;
    /**
     * Allow algorithm AES-256-GCM.
     */
    allowAlgorithmAes256Gcm?: pulumi.Input<boolean>;
    /**
     * Allow algorithm DHE.
     */
    allowAlgorithmDhe?: pulumi.Input<boolean>;
    /**
     * Allow algorithm ECDHE.
     */
    allowAlgorithmEcdhe?: pulumi.Input<boolean>;
    /**
     * Allow algorithm RC4.
     */
    allowAlgorithmRc4?: pulumi.Input<boolean>;
    /**
     * Allow algorithm RSA.
     */
    allowAlgorithmRsa?: pulumi.Input<boolean>;
    /**
     * Allow authentication SHA1.
     */
    allowAuthenticationSha1?: pulumi.Input<boolean>;
    /**
     * Allow authentication SHA256.
     */
    allowAuthenticationSha256?: pulumi.Input<boolean>;
    /**
     * Allow authentication SHA384.
     */
    allowAuthenticationSha384?: pulumi.Input<boolean>;
    /**
     * SSL certificate file name.
     */
    certificate: pulumi.Input<string>;
    /**
     * Maximum TLS protocol version. Valid values are `tls1-0`, `tls1-1`, `tls1-2`, or `max`.
     */
    maxVersion?: pulumi.Input<string>;
    /**
     * Minimum TLS protocol version. Valid values are `tls1-0`, `tls1-1`, or `tls1-2`.
     */
    minVersion?: pulumi.Input<string>;
    /**
     * The object name.
     */
    name?: pulumi.Input<string>;
    /**
     * The template.
     */
    template?: pulumi.Input<string>;
    /**
     * The template stack.
     */
    templateStack?: pulumi.Input<string>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
}
