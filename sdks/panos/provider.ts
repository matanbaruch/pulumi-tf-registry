// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the panos package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'panos';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * The api key of the firewall
     */
    public readonly apiKey!: pulumi.Output<string | undefined>;
    /**
     * Hostname/IP address of the Palo Alto Networks firewall to connect to
     */
    public readonly hostname!: pulumi.Output<string | undefined>;
    /**
     * Retrieve the provider configuration from this JSON file
     */
    public readonly jsonConfigFile!: pulumi.Output<string | undefined>;
    /**
     * The password (not used if the API key is set)
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * The protocol (https or http)
     */
    public readonly protocol!: pulumi.Output<string | undefined>;
    /**
     * Target setting (NGFW serial number)
     */
    public readonly target!: pulumi.Output<string | undefined>;
    /**
     * The username (not used if the API key is set)
     */
    public readonly username!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["additionalHeaders"] = pulumi.output(args ? args.additionalHeaders : undefined).apply(JSON.stringify);
            resourceInputs["apiKey"] = args ? args.apiKey : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["jsonConfigFile"] = args ? args.jsonConfigFile : undefined;
            resourceInputs["loggings"] = pulumi.output(args ? args.loggings : undefined).apply(JSON.stringify);
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["port"] = pulumi.output(args ? args.port : undefined).apply(JSON.stringify);
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["target"] = args ? args.target : undefined;
            resourceInputs["timeout"] = pulumi.output(args ? args.timeout : undefined).apply(JSON.stringify);
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["verifyCertificate"] = pulumi.output(args ? args.verifyCertificate : undefined).apply(JSON.stringify);
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Provider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * Additional HTTP headers to send with API calls
     */
    additionalHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The api key of the firewall
     */
    apiKey?: pulumi.Input<string>;
    /**
     * Hostname/IP address of the Palo Alto Networks firewall to connect to
     */
    hostname?: pulumi.Input<string>;
    /**
     * Retrieve the provider configuration from this JSON file
     */
    jsonConfigFile?: pulumi.Input<string>;
    /**
     * Logging options for the API connection
     */
    loggings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The password (not used if the API key is set)
     */
    password?: pulumi.Input<string>;
    /**
     * If the port is non-standard for the protocol, the port number to use
     */
    port?: pulumi.Input<number>;
    /**
     * The protocol (https or http)
     */
    protocol?: pulumi.Input<string>;
    /**
     * Target setting (NGFW serial number)
     */
    target?: pulumi.Input<string>;
    /**
     * The timeout for all communications with the firewall
     */
    timeout?: pulumi.Input<number>;
    /**
     * The username (not used if the API key is set)
     */
    username?: pulumi.Input<string>;
    /**
     * For HTTPS protocol connections, verify the certificate
     */
    verifyCertificate?: pulumi.Input<boolean>;
}
