// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SslDecrypt extends pulumi.CustomResource {
    /**
     * Get an existing SslDecrypt resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SslDecryptState, opts?: pulumi.CustomResourceOptions): SslDecrypt {
        return new SslDecrypt(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'panos:index/sslDecrypt:SslDecrypt';

    /**
     * Returns true if the given object is an instance of SslDecrypt.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SslDecrypt {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SslDecrypt.__pulumiType;
    }

    public readonly disabledPredefinedExcludeCertificates!: pulumi.Output<string[] | undefined>;
    public readonly forwardTrustCertificateEcdsa!: pulumi.Output<string | undefined>;
    public readonly forwardTrustCertificateRsa!: pulumi.Output<string | undefined>;
    public readonly forwardUntrustCertificateEcdsa!: pulumi.Output<string | undefined>;
    public readonly forwardUntrustCertificateRsa!: pulumi.Output<string | undefined>;
    public readonly rootCaExcludes!: pulumi.Output<string[] | undefined>;
    public readonly sslDecryptExcludeCertificates!: pulumi.Output<outputs.SslDecryptSslDecryptExcludeCertificate[] | undefined>;
    /**
     * The template.
     */
    public readonly template!: pulumi.Output<string | undefined>;
    /**
     * The template stack.
     */
    public readonly templateStack!: pulumi.Output<string | undefined>;
    public readonly trustedRootCas!: pulumi.Output<string[]>;
    /**
     * The vsys this object belongs in.
     */
    public readonly vsys!: pulumi.Output<string | undefined>;

    /**
     * Create a SslDecrypt resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SslDecryptArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SslDecryptArgs | SslDecryptState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SslDecryptState | undefined;
            resourceInputs["disabledPredefinedExcludeCertificates"] = state ? state.disabledPredefinedExcludeCertificates : undefined;
            resourceInputs["forwardTrustCertificateEcdsa"] = state ? state.forwardTrustCertificateEcdsa : undefined;
            resourceInputs["forwardTrustCertificateRsa"] = state ? state.forwardTrustCertificateRsa : undefined;
            resourceInputs["forwardUntrustCertificateEcdsa"] = state ? state.forwardUntrustCertificateEcdsa : undefined;
            resourceInputs["forwardUntrustCertificateRsa"] = state ? state.forwardUntrustCertificateRsa : undefined;
            resourceInputs["rootCaExcludes"] = state ? state.rootCaExcludes : undefined;
            resourceInputs["sslDecryptExcludeCertificates"] = state ? state.sslDecryptExcludeCertificates : undefined;
            resourceInputs["template"] = state ? state.template : undefined;
            resourceInputs["templateStack"] = state ? state.templateStack : undefined;
            resourceInputs["trustedRootCas"] = state ? state.trustedRootCas : undefined;
            resourceInputs["vsys"] = state ? state.vsys : undefined;
        } else {
            const args = argsOrState as SslDecryptArgs | undefined;
            resourceInputs["disabledPredefinedExcludeCertificates"] = args ? args.disabledPredefinedExcludeCertificates : undefined;
            resourceInputs["forwardTrustCertificateEcdsa"] = args ? args.forwardTrustCertificateEcdsa : undefined;
            resourceInputs["forwardTrustCertificateRsa"] = args ? args.forwardTrustCertificateRsa : undefined;
            resourceInputs["forwardUntrustCertificateEcdsa"] = args ? args.forwardUntrustCertificateEcdsa : undefined;
            resourceInputs["forwardUntrustCertificateRsa"] = args ? args.forwardUntrustCertificateRsa : undefined;
            resourceInputs["rootCaExcludes"] = args ? args.rootCaExcludes : undefined;
            resourceInputs["sslDecryptExcludeCertificates"] = args ? args.sslDecryptExcludeCertificates : undefined;
            resourceInputs["template"] = args ? args.template : undefined;
            resourceInputs["templateStack"] = args ? args.templateStack : undefined;
            resourceInputs["trustedRootCas"] = args ? args.trustedRootCas : undefined;
            resourceInputs["vsys"] = args ? args.vsys : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SslDecrypt.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SslDecrypt resources.
 */
export interface SslDecryptState {
    disabledPredefinedExcludeCertificates?: pulumi.Input<pulumi.Input<string>[]>;
    forwardTrustCertificateEcdsa?: pulumi.Input<string>;
    forwardTrustCertificateRsa?: pulumi.Input<string>;
    forwardUntrustCertificateEcdsa?: pulumi.Input<string>;
    forwardUntrustCertificateRsa?: pulumi.Input<string>;
    rootCaExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    sslDecryptExcludeCertificates?: pulumi.Input<pulumi.Input<inputs.SslDecryptSslDecryptExcludeCertificate>[]>;
    /**
     * The template.
     */
    template?: pulumi.Input<string>;
    /**
     * The template stack.
     */
    templateStack?: pulumi.Input<string>;
    trustedRootCas?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SslDecrypt resource.
 */
export interface SslDecryptArgs {
    disabledPredefinedExcludeCertificates?: pulumi.Input<pulumi.Input<string>[]>;
    forwardTrustCertificateEcdsa?: pulumi.Input<string>;
    forwardTrustCertificateRsa?: pulumi.Input<string>;
    forwardUntrustCertificateEcdsa?: pulumi.Input<string>;
    forwardUntrustCertificateRsa?: pulumi.Input<string>;
    rootCaExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    sslDecryptExcludeCertificates?: pulumi.Input<pulumi.Input<inputs.SslDecryptSslDecryptExcludeCertificate>[]>;
    /**
     * The template.
     */
    template?: pulumi.Input<string>;
    /**
     * The template stack.
     */
    templateStack?: pulumi.Input<string>;
    trustedRootCas?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
}
