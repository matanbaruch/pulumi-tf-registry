// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CustomUrlCategoryEntry extends pulumi.CustomResource {
    /**
     * Get an existing CustomUrlCategoryEntry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomUrlCategoryEntryState, opts?: pulumi.CustomResourceOptions): CustomUrlCategoryEntry {
        return new CustomUrlCategoryEntry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'panos:index/customUrlCategoryEntry:CustomUrlCategoryEntry';

    /**
     * Returns true if the given object is an instance of CustomUrlCategoryEntry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomUrlCategoryEntry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomUrlCategoryEntry.__pulumiType;
    }

    /**
     * The custom URL category name.
     */
    public readonly customUrlCategory!: pulumi.Output<string>;
    /**
     * The device group.
     */
    public readonly deviceGroup!: pulumi.Output<string | undefined>;
    /**
     * The site.
     */
    public readonly site!: pulumi.Output<string>;
    /**
     * The vsys this object belongs in.
     */
    public readonly vsys!: pulumi.Output<string | undefined>;

    /**
     * Create a CustomUrlCategoryEntry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomUrlCategoryEntryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomUrlCategoryEntryArgs | CustomUrlCategoryEntryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomUrlCategoryEntryState | undefined;
            resourceInputs["customUrlCategory"] = state ? state.customUrlCategory : undefined;
            resourceInputs["deviceGroup"] = state ? state.deviceGroup : undefined;
            resourceInputs["site"] = state ? state.site : undefined;
            resourceInputs["vsys"] = state ? state.vsys : undefined;
        } else {
            const args = argsOrState as CustomUrlCategoryEntryArgs | undefined;
            if ((!args || args.customUrlCategory === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customUrlCategory'");
            }
            if ((!args || args.site === undefined) && !opts.urn) {
                throw new Error("Missing required property 'site'");
            }
            resourceInputs["customUrlCategory"] = args ? args.customUrlCategory : undefined;
            resourceInputs["deviceGroup"] = args ? args.deviceGroup : undefined;
            resourceInputs["site"] = args ? args.site : undefined;
            resourceInputs["vsys"] = args ? args.vsys : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomUrlCategoryEntry.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CustomUrlCategoryEntry resources.
 */
export interface CustomUrlCategoryEntryState {
    /**
     * The custom URL category name.
     */
    customUrlCategory?: pulumi.Input<string>;
    /**
     * The device group.
     */
    deviceGroup?: pulumi.Input<string>;
    /**
     * The site.
     */
    site?: pulumi.Input<string>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomUrlCategoryEntry resource.
 */
export interface CustomUrlCategoryEntryArgs {
    /**
     * The custom URL category name.
     */
    customUrlCategory: pulumi.Input<string>;
    /**
     * The device group.
     */
    deviceGroup?: pulumi.Input<string>;
    /**
     * The site.
     */
    site: pulumi.Input<string>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
}
