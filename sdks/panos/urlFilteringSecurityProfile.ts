// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class UrlFilteringSecurityProfile extends pulumi.CustomResource {
    /**
     * Get an existing UrlFilteringSecurityProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UrlFilteringSecurityProfileState, opts?: pulumi.CustomResourceOptions): UrlFilteringSecurityProfile {
        return new UrlFilteringSecurityProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'panos:index/urlFilteringSecurityProfile:UrlFilteringSecurityProfile';

    /**
     * Returns true if the given object is an instance of UrlFilteringSecurityProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UrlFilteringSecurityProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UrlFilteringSecurityProfile.__pulumiType;
    }

    /**
     * List of categories to alert
     */
    public readonly alertCategories!: pulumi.Output<string[] | undefined>;
    /**
     * List of categories to allow
     */
    public readonly allowCategories!: pulumi.Output<string[] | undefined>;
    /**
     * (Removed in PAN-OS 9.0) Allow list
     */
    public readonly allowLists!: pulumi.Output<string[] | undefined>;
    /**
     * List of categories to block
     */
    public readonly blockCategories!: pulumi.Output<string[] | undefined>;
    /**
     * (Removed in PAN-OS 9.0) Block list action
     */
    public readonly blockListAction!: pulumi.Output<string | undefined>;
    /**
     * (Removed in PAN-OS 9.0) Block list
     */
    public readonly blockLists!: pulumi.Output<string[] | undefined>;
    /**
     * List of categories to continue
     */
    public readonly continueCategories!: pulumi.Output<string[] | undefined>;
    /**
     * Description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The device group.
     */
    public readonly deviceGroup!: pulumi.Output<string | undefined>;
    /**
     * (Removed in PAN-OS 9.0) Dynamic URL
     */
    public readonly dynamicUrl!: pulumi.Output<boolean | undefined>;
    /**
     * (Removed in PAN-OS 9.0) Expired license action
     */
    public readonly expiredLicenseAction!: pulumi.Output<boolean | undefined>;
    /**
     * List of http header specs
     */
    public readonly httpHeaderInsertions!: pulumi.Output<outputs.UrlFilteringSecurityProfileHttpHeaderInsertion[] | undefined>;
    /**
     * Set to true to log container page only
     */
    public readonly logContainerPageOnly!: pulumi.Output<boolean | undefined>;
    /**
     * HTTP Header Logging: Referer
     */
    public readonly logHttpHeaderReferer!: pulumi.Output<boolean | undefined>;
    /**
     * HTTP Header Logging: User-Agent
     */
    public readonly logHttpHeaderUserAgent!: pulumi.Output<boolean | undefined>;
    /**
     * HTTP Header Logging: X-Forwarded-For
     */
    public readonly logHttpHeaderXff!: pulumi.Output<boolean | undefined>;
    /**
     * (PAN-OS 10.0+) List of machine learning exceptions
     */
    public readonly machineLearningExceptions!: pulumi.Output<string[] | undefined>;
    /**
     * (PAN-OS 10.0+) List of machine learning model specs
     */
    public readonly machineLearningModels!: pulumi.Output<outputs.UrlFilteringSecurityProfileMachineLearningModel[] | undefined>;
    /**
     * Security profile name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * List of categories to allow
     */
    public readonly overrideCategories!: pulumi.Output<string[] | undefined>;
    /**
     * Set to true for safe search enforcement
     */
    public readonly safeSearchEnforcement!: pulumi.Output<boolean | undefined>;
    /**
     * Set to true to track the container page
     */
    public readonly trackContainerPage!: pulumi.Output<boolean | undefined>;
    /**
     * (PAN-OS 8.0+) Categories alerted on with user credential submission
     */
    public readonly ucdAlertCategories!: pulumi.Output<string[] | undefined>;
    /**
     * (PAN-OS 8.0+) Categories allowed with user credential submission
     */
    public readonly ucdAllowCategories!: pulumi.Output<string[] | undefined>;
    /**
     * (PAN-OS 8.0+) Categories blocked with user credential submission
     */
    public readonly ucdBlockCategories!: pulumi.Output<string[] | undefined>;
    /**
     * (PAN-OS 8.0+) Categories continued with user credential submission
     */
    public readonly ucdContinueCategories!: pulumi.Output<string[] | undefined>;
    /**
     * (PAN-OS 8.0+) User credential detection: valid username detected log severity
     */
    public readonly ucdLogSeverity!: pulumi.Output<string | undefined>;
    /**
     * (PAN-OS 8.0+) User credential detection mode
     */
    public readonly ucdMode!: pulumi.Output<string | undefined>;
    /**
     * (PAN-OS 8.0+, ucd_mode = group-mapping) User credential detection: the group mapping settings
     */
    public readonly ucdModeGroupMapping!: pulumi.Output<string | undefined>;
    /**
     * The vsys this object belongs in.
     */
    public readonly vsys!: pulumi.Output<string | undefined>;

    /**
     * Create a UrlFilteringSecurityProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UrlFilteringSecurityProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UrlFilteringSecurityProfileArgs | UrlFilteringSecurityProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UrlFilteringSecurityProfileState | undefined;
            resourceInputs["alertCategories"] = state ? state.alertCategories : undefined;
            resourceInputs["allowCategories"] = state ? state.allowCategories : undefined;
            resourceInputs["allowLists"] = state ? state.allowLists : undefined;
            resourceInputs["blockCategories"] = state ? state.blockCategories : undefined;
            resourceInputs["blockListAction"] = state ? state.blockListAction : undefined;
            resourceInputs["blockLists"] = state ? state.blockLists : undefined;
            resourceInputs["continueCategories"] = state ? state.continueCategories : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceGroup"] = state ? state.deviceGroup : undefined;
            resourceInputs["dynamicUrl"] = state ? state.dynamicUrl : undefined;
            resourceInputs["expiredLicenseAction"] = state ? state.expiredLicenseAction : undefined;
            resourceInputs["httpHeaderInsertions"] = state ? state.httpHeaderInsertions : undefined;
            resourceInputs["logContainerPageOnly"] = state ? state.logContainerPageOnly : undefined;
            resourceInputs["logHttpHeaderReferer"] = state ? state.logHttpHeaderReferer : undefined;
            resourceInputs["logHttpHeaderUserAgent"] = state ? state.logHttpHeaderUserAgent : undefined;
            resourceInputs["logHttpHeaderXff"] = state ? state.logHttpHeaderXff : undefined;
            resourceInputs["machineLearningExceptions"] = state ? state.machineLearningExceptions : undefined;
            resourceInputs["machineLearningModels"] = state ? state.machineLearningModels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overrideCategories"] = state ? state.overrideCategories : undefined;
            resourceInputs["safeSearchEnforcement"] = state ? state.safeSearchEnforcement : undefined;
            resourceInputs["trackContainerPage"] = state ? state.trackContainerPage : undefined;
            resourceInputs["ucdAlertCategories"] = state ? state.ucdAlertCategories : undefined;
            resourceInputs["ucdAllowCategories"] = state ? state.ucdAllowCategories : undefined;
            resourceInputs["ucdBlockCategories"] = state ? state.ucdBlockCategories : undefined;
            resourceInputs["ucdContinueCategories"] = state ? state.ucdContinueCategories : undefined;
            resourceInputs["ucdLogSeverity"] = state ? state.ucdLogSeverity : undefined;
            resourceInputs["ucdMode"] = state ? state.ucdMode : undefined;
            resourceInputs["ucdModeGroupMapping"] = state ? state.ucdModeGroupMapping : undefined;
            resourceInputs["vsys"] = state ? state.vsys : undefined;
        } else {
            const args = argsOrState as UrlFilteringSecurityProfileArgs | undefined;
            resourceInputs["alertCategories"] = args ? args.alertCategories : undefined;
            resourceInputs["allowCategories"] = args ? args.allowCategories : undefined;
            resourceInputs["allowLists"] = args ? args.allowLists : undefined;
            resourceInputs["blockCategories"] = args ? args.blockCategories : undefined;
            resourceInputs["blockListAction"] = args ? args.blockListAction : undefined;
            resourceInputs["blockLists"] = args ? args.blockLists : undefined;
            resourceInputs["continueCategories"] = args ? args.continueCategories : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceGroup"] = args ? args.deviceGroup : undefined;
            resourceInputs["dynamicUrl"] = args ? args.dynamicUrl : undefined;
            resourceInputs["expiredLicenseAction"] = args ? args.expiredLicenseAction : undefined;
            resourceInputs["httpHeaderInsertions"] = args ? args.httpHeaderInsertions : undefined;
            resourceInputs["logContainerPageOnly"] = args ? args.logContainerPageOnly : undefined;
            resourceInputs["logHttpHeaderReferer"] = args ? args.logHttpHeaderReferer : undefined;
            resourceInputs["logHttpHeaderUserAgent"] = args ? args.logHttpHeaderUserAgent : undefined;
            resourceInputs["logHttpHeaderXff"] = args ? args.logHttpHeaderXff : undefined;
            resourceInputs["machineLearningExceptions"] = args ? args.machineLearningExceptions : undefined;
            resourceInputs["machineLearningModels"] = args ? args.machineLearningModels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overrideCategories"] = args ? args.overrideCategories : undefined;
            resourceInputs["safeSearchEnforcement"] = args ? args.safeSearchEnforcement : undefined;
            resourceInputs["trackContainerPage"] = args ? args.trackContainerPage : undefined;
            resourceInputs["ucdAlertCategories"] = args ? args.ucdAlertCategories : undefined;
            resourceInputs["ucdAllowCategories"] = args ? args.ucdAllowCategories : undefined;
            resourceInputs["ucdBlockCategories"] = args ? args.ucdBlockCategories : undefined;
            resourceInputs["ucdContinueCategories"] = args ? args.ucdContinueCategories : undefined;
            resourceInputs["ucdLogSeverity"] = args ? args.ucdLogSeverity : undefined;
            resourceInputs["ucdMode"] = args ? args.ucdMode : undefined;
            resourceInputs["ucdModeGroupMapping"] = args ? args.ucdModeGroupMapping : undefined;
            resourceInputs["vsys"] = args ? args.vsys : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UrlFilteringSecurityProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering UrlFilteringSecurityProfile resources.
 */
export interface UrlFilteringSecurityProfileState {
    /**
     * List of categories to alert
     */
    alertCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of categories to allow
     */
    allowCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Removed in PAN-OS 9.0) Allow list
     */
    allowLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of categories to block
     */
    blockCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Removed in PAN-OS 9.0) Block list action
     */
    blockListAction?: pulumi.Input<string>;
    /**
     * (Removed in PAN-OS 9.0) Block list
     */
    blockLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of categories to continue
     */
    continueCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * The device group.
     */
    deviceGroup?: pulumi.Input<string>;
    /**
     * (Removed in PAN-OS 9.0) Dynamic URL
     */
    dynamicUrl?: pulumi.Input<boolean>;
    /**
     * (Removed in PAN-OS 9.0) Expired license action
     */
    expiredLicenseAction?: pulumi.Input<boolean>;
    /**
     * List of http header specs
     */
    httpHeaderInsertions?: pulumi.Input<pulumi.Input<inputs.UrlFilteringSecurityProfileHttpHeaderInsertion>[]>;
    /**
     * Set to true to log container page only
     */
    logContainerPageOnly?: pulumi.Input<boolean>;
    /**
     * HTTP Header Logging: Referer
     */
    logHttpHeaderReferer?: pulumi.Input<boolean>;
    /**
     * HTTP Header Logging: User-Agent
     */
    logHttpHeaderUserAgent?: pulumi.Input<boolean>;
    /**
     * HTTP Header Logging: X-Forwarded-For
     */
    logHttpHeaderXff?: pulumi.Input<boolean>;
    /**
     * (PAN-OS 10.0+) List of machine learning exceptions
     */
    machineLearningExceptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (PAN-OS 10.0+) List of machine learning model specs
     */
    machineLearningModels?: pulumi.Input<pulumi.Input<inputs.UrlFilteringSecurityProfileMachineLearningModel>[]>;
    /**
     * Security profile name
     */
    name?: pulumi.Input<string>;
    /**
     * List of categories to allow
     */
    overrideCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set to true for safe search enforcement
     */
    safeSearchEnforcement?: pulumi.Input<boolean>;
    /**
     * Set to true to track the container page
     */
    trackContainerPage?: pulumi.Input<boolean>;
    /**
     * (PAN-OS 8.0+) Categories alerted on with user credential submission
     */
    ucdAlertCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (PAN-OS 8.0+) Categories allowed with user credential submission
     */
    ucdAllowCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (PAN-OS 8.0+) Categories blocked with user credential submission
     */
    ucdBlockCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (PAN-OS 8.0+) Categories continued with user credential submission
     */
    ucdContinueCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (PAN-OS 8.0+) User credential detection: valid username detected log severity
     */
    ucdLogSeverity?: pulumi.Input<string>;
    /**
     * (PAN-OS 8.0+) User credential detection mode
     */
    ucdMode?: pulumi.Input<string>;
    /**
     * (PAN-OS 8.0+, ucd_mode = group-mapping) User credential detection: the group mapping settings
     */
    ucdModeGroupMapping?: pulumi.Input<string>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UrlFilteringSecurityProfile resource.
 */
export interface UrlFilteringSecurityProfileArgs {
    /**
     * List of categories to alert
     */
    alertCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of categories to allow
     */
    allowCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Removed in PAN-OS 9.0) Allow list
     */
    allowLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of categories to block
     */
    blockCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Removed in PAN-OS 9.0) Block list action
     */
    blockListAction?: pulumi.Input<string>;
    /**
     * (Removed in PAN-OS 9.0) Block list
     */
    blockLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of categories to continue
     */
    continueCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * The device group.
     */
    deviceGroup?: pulumi.Input<string>;
    /**
     * (Removed in PAN-OS 9.0) Dynamic URL
     */
    dynamicUrl?: pulumi.Input<boolean>;
    /**
     * (Removed in PAN-OS 9.0) Expired license action
     */
    expiredLicenseAction?: pulumi.Input<boolean>;
    /**
     * List of http header specs
     */
    httpHeaderInsertions?: pulumi.Input<pulumi.Input<inputs.UrlFilteringSecurityProfileHttpHeaderInsertion>[]>;
    /**
     * Set to true to log container page only
     */
    logContainerPageOnly?: pulumi.Input<boolean>;
    /**
     * HTTP Header Logging: Referer
     */
    logHttpHeaderReferer?: pulumi.Input<boolean>;
    /**
     * HTTP Header Logging: User-Agent
     */
    logHttpHeaderUserAgent?: pulumi.Input<boolean>;
    /**
     * HTTP Header Logging: X-Forwarded-For
     */
    logHttpHeaderXff?: pulumi.Input<boolean>;
    /**
     * (PAN-OS 10.0+) List of machine learning exceptions
     */
    machineLearningExceptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (PAN-OS 10.0+) List of machine learning model specs
     */
    machineLearningModels?: pulumi.Input<pulumi.Input<inputs.UrlFilteringSecurityProfileMachineLearningModel>[]>;
    /**
     * Security profile name
     */
    name?: pulumi.Input<string>;
    /**
     * List of categories to allow
     */
    overrideCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set to true for safe search enforcement
     */
    safeSearchEnforcement?: pulumi.Input<boolean>;
    /**
     * Set to true to track the container page
     */
    trackContainerPage?: pulumi.Input<boolean>;
    /**
     * (PAN-OS 8.0+) Categories alerted on with user credential submission
     */
    ucdAlertCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (PAN-OS 8.0+) Categories allowed with user credential submission
     */
    ucdAllowCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (PAN-OS 8.0+) Categories blocked with user credential submission
     */
    ucdBlockCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (PAN-OS 8.0+) Categories continued with user credential submission
     */
    ucdContinueCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (PAN-OS 8.0+) User credential detection: valid username detected log severity
     */
    ucdLogSeverity?: pulumi.Input<string>;
    /**
     * (PAN-OS 8.0+) User credential detection mode
     */
    ucdMode?: pulumi.Input<string>;
    /**
     * (PAN-OS 8.0+, ucd_mode = group-mapping) User credential detection: the group mapping settings
     */
    ucdModeGroupMapping?: pulumi.Input<string>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
}
