// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getArps(args?: GetArpsArgs, opts?: pulumi.InvokeOptions): Promise<GetArpsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("panos:index/getArps:getArps", {
        "id": args.id,
        "interfaceName": args.interfaceName,
        "interfaceType": args.interfaceType,
        "subinterfaceName": args.subinterfaceName,
        "template": args.template,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getArps.
 */
export interface GetArpsArgs {
    id?: string;
    interfaceName?: string;
    interfaceType?: string;
    subinterfaceName?: string;
    template?: string;
}

/**
 * A collection of values returned by getArps.
 */
export interface GetArpsResult {
    readonly id: string;
    readonly interfaceName?: string;
    readonly interfaceType?: string;
    readonly listings: string[];
    readonly subinterfaceName?: string;
    readonly template?: string;
    readonly total: number;
}
export function getArpsOutput(args?: GetArpsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetArpsResult> {
    return pulumi.output(args).apply((a: any) => getArps(a, opts))
}

/**
 * A collection of arguments for invoking getArps.
 */
export interface GetArpsOutputArgs {
    id?: pulumi.Input<string>;
    interfaceName?: pulumi.Input<string>;
    interfaceType?: pulumi.Input<string>;
    subinterfaceName?: pulumi.Input<string>;
    template?: pulumi.Input<string>;
}
