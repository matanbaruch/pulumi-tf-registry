// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApiKey(args?: GetApiKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetApiKeyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("panos:index/getApiKey:getApiKey", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApiKey.
 */
export interface GetApiKeyArgs {
    id?: string;
}

/**
 * A collection of values returned by getApiKey.
 */
export interface GetApiKeyResult {
    readonly apiKey: string;
    readonly id: string;
}
export function getApiKeyOutput(args?: GetApiKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApiKeyResult> {
    return pulumi.output(args).apply((a: any) => getApiKey(a, opts))
}

/**
 * A collection of arguments for invoking getApiKey.
 */
export interface GetApiKeyOutputArgs {
    id?: pulumi.Input<string>;
}
