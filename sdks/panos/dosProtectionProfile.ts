// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DosProtectionProfile extends pulumi.CustomResource {
    /**
     * Get an existing DosProtectionProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DosProtectionProfileState, opts?: pulumi.CustomResourceOptions): DosProtectionProfile {
        return new DosProtectionProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'panos:index/dosProtectionProfile:DosProtectionProfile';

    /**
     * Returns true if the given object is an instance of DosProtectionProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DosProtectionProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DosProtectionProfile.__pulumiType;
    }

    /**
     * Description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The device group.
     */
    public readonly deviceGroup!: pulumi.Output<string | undefined>;
    /**
     * Enable sessions protections
     */
    public readonly enableSessionsProtections!: pulumi.Output<boolean | undefined>;
    /**
     * ICMP flood protection spec
     */
    public readonly icmp!: pulumi.Output<outputs.DosProtectionProfileIcmp | undefined>;
    /**
     * ICMPv6 flood protection spec
     */
    public readonly icmpv6!: pulumi.Output<outputs.DosProtectionProfileIcmpv6 | undefined>;
    /**
     * Max concurrent sessions
     */
    public readonly maxConcurrentSessions!: pulumi.Output<number | undefined>;
    /**
     * Security profile name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Other IP flood protection spec
     */
    public readonly other!: pulumi.Output<outputs.DosProtectionProfileOther | undefined>;
    /**
     * SYN flood protection spec
     */
    public readonly syn!: pulumi.Output<outputs.DosProtectionProfileSyn | undefined>;
    /**
     * The profile type
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * UDP flood protection spec
     */
    public readonly udp!: pulumi.Output<outputs.DosProtectionProfileUdp | undefined>;
    /**
     * The vsys this object belongs in.
     */
    public readonly vsys!: pulumi.Output<string | undefined>;

    /**
     * Create a DosProtectionProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DosProtectionProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DosProtectionProfileArgs | DosProtectionProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DosProtectionProfileState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceGroup"] = state ? state.deviceGroup : undefined;
            resourceInputs["enableSessionsProtections"] = state ? state.enableSessionsProtections : undefined;
            resourceInputs["icmp"] = state ? state.icmp : undefined;
            resourceInputs["icmpv6"] = state ? state.icmpv6 : undefined;
            resourceInputs["maxConcurrentSessions"] = state ? state.maxConcurrentSessions : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["other"] = state ? state.other : undefined;
            resourceInputs["syn"] = state ? state.syn : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["udp"] = state ? state.udp : undefined;
            resourceInputs["vsys"] = state ? state.vsys : undefined;
        } else {
            const args = argsOrState as DosProtectionProfileArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceGroup"] = args ? args.deviceGroup : undefined;
            resourceInputs["enableSessionsProtections"] = args ? args.enableSessionsProtections : undefined;
            resourceInputs["icmp"] = args ? args.icmp : undefined;
            resourceInputs["icmpv6"] = args ? args.icmpv6 : undefined;
            resourceInputs["maxConcurrentSessions"] = args ? args.maxConcurrentSessions : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["other"] = args ? args.other : undefined;
            resourceInputs["syn"] = args ? args.syn : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["udp"] = args ? args.udp : undefined;
            resourceInputs["vsys"] = args ? args.vsys : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DosProtectionProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DosProtectionProfile resources.
 */
export interface DosProtectionProfileState {
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * The device group.
     */
    deviceGroup?: pulumi.Input<string>;
    /**
     * Enable sessions protections
     */
    enableSessionsProtections?: pulumi.Input<boolean>;
    /**
     * ICMP flood protection spec
     */
    icmp?: pulumi.Input<inputs.DosProtectionProfileIcmp>;
    /**
     * ICMPv6 flood protection spec
     */
    icmpv6?: pulumi.Input<inputs.DosProtectionProfileIcmpv6>;
    /**
     * Max concurrent sessions
     */
    maxConcurrentSessions?: pulumi.Input<number>;
    /**
     * Security profile name
     */
    name?: pulumi.Input<string>;
    /**
     * Other IP flood protection spec
     */
    other?: pulumi.Input<inputs.DosProtectionProfileOther>;
    /**
     * SYN flood protection spec
     */
    syn?: pulumi.Input<inputs.DosProtectionProfileSyn>;
    /**
     * The profile type
     */
    type?: pulumi.Input<string>;
    /**
     * UDP flood protection spec
     */
    udp?: pulumi.Input<inputs.DosProtectionProfileUdp>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DosProtectionProfile resource.
 */
export interface DosProtectionProfileArgs {
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * The device group.
     */
    deviceGroup?: pulumi.Input<string>;
    /**
     * Enable sessions protections
     */
    enableSessionsProtections?: pulumi.Input<boolean>;
    /**
     * ICMP flood protection spec
     */
    icmp?: pulumi.Input<inputs.DosProtectionProfileIcmp>;
    /**
     * ICMPv6 flood protection spec
     */
    icmpv6?: pulumi.Input<inputs.DosProtectionProfileIcmpv6>;
    /**
     * Max concurrent sessions
     */
    maxConcurrentSessions?: pulumi.Input<number>;
    /**
     * Security profile name
     */
    name?: pulumi.Input<string>;
    /**
     * Other IP flood protection spec
     */
    other?: pulumi.Input<inputs.DosProtectionProfileOther>;
    /**
     * SYN flood protection spec
     */
    syn?: pulumi.Input<inputs.DosProtectionProfileSyn>;
    /**
     * The profile type
     */
    type?: pulumi.Input<string>;
    /**
     * UDP flood protection spec
     */
    udp?: pulumi.Input<inputs.DosProtectionProfileUdp>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
}
