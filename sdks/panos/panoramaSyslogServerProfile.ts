// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PanoramaSyslogServerProfile extends pulumi.CustomResource {
    /**
     * Get an existing PanoramaSyslogServerProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PanoramaSyslogServerProfileState, opts?: pulumi.CustomResourceOptions): PanoramaSyslogServerProfile {
        return new PanoramaSyslogServerProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'panos:index/panoramaSyslogServerProfile:PanoramaSyslogServerProfile';

    /**
     * Returns true if the given object is an instance of PanoramaSyslogServerProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PanoramaSyslogServerProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PanoramaSyslogServerProfile.__pulumiType;
    }

    public readonly authFormat!: pulumi.Output<string | undefined>;
    public readonly configFormat!: pulumi.Output<string | undefined>;
    public readonly dataFormat!: pulumi.Output<string | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly deviceGroup!: pulumi.Output<string | undefined>;
    public readonly escapeCharacter!: pulumi.Output<string | undefined>;
    public readonly escapedCharacters!: pulumi.Output<string | undefined>;
    public readonly gtpFormat!: pulumi.Output<string | undefined>;
    public readonly hipMatchFormat!: pulumi.Output<string | undefined>;
    public readonly iptagFormat!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly sctpFormat!: pulumi.Output<string | undefined>;
    public readonly syslogServers!: pulumi.Output<outputs.PanoramaSyslogServerProfileSyslogServer[]>;
    public readonly systemFormat!: pulumi.Output<string | undefined>;
    public readonly template!: pulumi.Output<string | undefined>;
    public readonly templateStack!: pulumi.Output<string | undefined>;
    public readonly threatFormat!: pulumi.Output<string | undefined>;
    public readonly trafficFormat!: pulumi.Output<string | undefined>;
    public readonly tunnelFormat!: pulumi.Output<string | undefined>;
    public readonly urlFormat!: pulumi.Output<string | undefined>;
    public readonly userIdFormat!: pulumi.Output<string | undefined>;
    /**
     * The vsys this object belongs in.
     */
    public readonly vsys!: pulumi.Output<string | undefined>;
    public readonly wildfireFormat!: pulumi.Output<string | undefined>;

    /**
     * Create a PanoramaSyslogServerProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PanoramaSyslogServerProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PanoramaSyslogServerProfileArgs | PanoramaSyslogServerProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PanoramaSyslogServerProfileState | undefined;
            resourceInputs["authFormat"] = state ? state.authFormat : undefined;
            resourceInputs["configFormat"] = state ? state.configFormat : undefined;
            resourceInputs["dataFormat"] = state ? state.dataFormat : undefined;
            resourceInputs["deviceGroup"] = state ? state.deviceGroup : undefined;
            resourceInputs["escapeCharacter"] = state ? state.escapeCharacter : undefined;
            resourceInputs["escapedCharacters"] = state ? state.escapedCharacters : undefined;
            resourceInputs["gtpFormat"] = state ? state.gtpFormat : undefined;
            resourceInputs["hipMatchFormat"] = state ? state.hipMatchFormat : undefined;
            resourceInputs["iptagFormat"] = state ? state.iptagFormat : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sctpFormat"] = state ? state.sctpFormat : undefined;
            resourceInputs["syslogServers"] = state ? state.syslogServers : undefined;
            resourceInputs["systemFormat"] = state ? state.systemFormat : undefined;
            resourceInputs["template"] = state ? state.template : undefined;
            resourceInputs["templateStack"] = state ? state.templateStack : undefined;
            resourceInputs["threatFormat"] = state ? state.threatFormat : undefined;
            resourceInputs["trafficFormat"] = state ? state.trafficFormat : undefined;
            resourceInputs["tunnelFormat"] = state ? state.tunnelFormat : undefined;
            resourceInputs["urlFormat"] = state ? state.urlFormat : undefined;
            resourceInputs["userIdFormat"] = state ? state.userIdFormat : undefined;
            resourceInputs["vsys"] = state ? state.vsys : undefined;
            resourceInputs["wildfireFormat"] = state ? state.wildfireFormat : undefined;
        } else {
            const args = argsOrState as PanoramaSyslogServerProfileArgs | undefined;
            if ((!args || args.syslogServers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'syslogServers'");
            }
            resourceInputs["authFormat"] = args ? args.authFormat : undefined;
            resourceInputs["configFormat"] = args ? args.configFormat : undefined;
            resourceInputs["dataFormat"] = args ? args.dataFormat : undefined;
            resourceInputs["deviceGroup"] = args ? args.deviceGroup : undefined;
            resourceInputs["escapeCharacter"] = args ? args.escapeCharacter : undefined;
            resourceInputs["escapedCharacters"] = args ? args.escapedCharacters : undefined;
            resourceInputs["gtpFormat"] = args ? args.gtpFormat : undefined;
            resourceInputs["hipMatchFormat"] = args ? args.hipMatchFormat : undefined;
            resourceInputs["iptagFormat"] = args ? args.iptagFormat : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sctpFormat"] = args ? args.sctpFormat : undefined;
            resourceInputs["syslogServers"] = args ? args.syslogServers : undefined;
            resourceInputs["systemFormat"] = args ? args.systemFormat : undefined;
            resourceInputs["template"] = args ? args.template : undefined;
            resourceInputs["templateStack"] = args ? args.templateStack : undefined;
            resourceInputs["threatFormat"] = args ? args.threatFormat : undefined;
            resourceInputs["trafficFormat"] = args ? args.trafficFormat : undefined;
            resourceInputs["tunnelFormat"] = args ? args.tunnelFormat : undefined;
            resourceInputs["urlFormat"] = args ? args.urlFormat : undefined;
            resourceInputs["userIdFormat"] = args ? args.userIdFormat : undefined;
            resourceInputs["vsys"] = args ? args.vsys : undefined;
            resourceInputs["wildfireFormat"] = args ? args.wildfireFormat : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PanoramaSyslogServerProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PanoramaSyslogServerProfile resources.
 */
export interface PanoramaSyslogServerProfileState {
    authFormat?: pulumi.Input<string>;
    configFormat?: pulumi.Input<string>;
    dataFormat?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    deviceGroup?: pulumi.Input<string>;
    escapeCharacter?: pulumi.Input<string>;
    escapedCharacters?: pulumi.Input<string>;
    gtpFormat?: pulumi.Input<string>;
    hipMatchFormat?: pulumi.Input<string>;
    iptagFormat?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sctpFormat?: pulumi.Input<string>;
    syslogServers?: pulumi.Input<pulumi.Input<inputs.PanoramaSyslogServerProfileSyslogServer>[]>;
    systemFormat?: pulumi.Input<string>;
    template?: pulumi.Input<string>;
    templateStack?: pulumi.Input<string>;
    threatFormat?: pulumi.Input<string>;
    trafficFormat?: pulumi.Input<string>;
    tunnelFormat?: pulumi.Input<string>;
    urlFormat?: pulumi.Input<string>;
    userIdFormat?: pulumi.Input<string>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
    wildfireFormat?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PanoramaSyslogServerProfile resource.
 */
export interface PanoramaSyslogServerProfileArgs {
    authFormat?: pulumi.Input<string>;
    configFormat?: pulumi.Input<string>;
    dataFormat?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    deviceGroup?: pulumi.Input<string>;
    escapeCharacter?: pulumi.Input<string>;
    escapedCharacters?: pulumi.Input<string>;
    gtpFormat?: pulumi.Input<string>;
    hipMatchFormat?: pulumi.Input<string>;
    iptagFormat?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sctpFormat?: pulumi.Input<string>;
    syslogServers: pulumi.Input<pulumi.Input<inputs.PanoramaSyslogServerProfileSyslogServer>[]>;
    systemFormat?: pulumi.Input<string>;
    template?: pulumi.Input<string>;
    templateStack?: pulumi.Input<string>;
    threatFormat?: pulumi.Input<string>;
    trafficFormat?: pulumi.Input<string>;
    tunnelFormat?: pulumi.Input<string>;
    urlFormat?: pulumi.Input<string>;
    userIdFormat?: pulumi.Input<string>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
    wildfireFormat?: pulumi.Input<string>;
}
