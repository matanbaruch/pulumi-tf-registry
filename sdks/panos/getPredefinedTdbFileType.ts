// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPredefinedTdbFileType(args?: GetPredefinedTdbFileTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetPredefinedTdbFileTypeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("panos:index/getPredefinedTdbFileType:getPredefinedTdbFileType", {
        "dataIdentOnly": args.dataIdentOnly,
        "fullName": args.fullName,
        "fullNameRegex": args.fullNameRegex,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPredefinedTdbFileType.
 */
export interface GetPredefinedTdbFileTypeArgs {
    dataIdentOnly?: boolean;
    fullName?: string;
    fullNameRegex?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getPredefinedTdbFileType.
 */
export interface GetPredefinedTdbFileTypeResult {
    readonly dataIdentOnly?: boolean;
    readonly fileTypes: outputs.GetPredefinedTdbFileTypeFileType[];
    readonly fullName?: string;
    readonly fullNameRegex?: string;
    readonly id: string;
    readonly name?: string;
    readonly total: number;
}
export function getPredefinedTdbFileTypeOutput(args?: GetPredefinedTdbFileTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPredefinedTdbFileTypeResult> {
    return pulumi.output(args).apply((a: any) => getPredefinedTdbFileType(a, opts))
}

/**
 * A collection of arguments for invoking getPredefinedTdbFileType.
 */
export interface GetPredefinedTdbFileTypeOutputArgs {
    dataIdentOnly?: pulumi.Input<boolean>;
    fullName?: pulumi.Input<string>;
    fullNameRegex?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
