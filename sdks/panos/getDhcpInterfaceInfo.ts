// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDhcpInterfaceInfo(args: GetDhcpInterfaceInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetDhcpInterfaceInfoResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("panos:index/getDhcpInterfaceInfo:getDhcpInterfaceInfo", {
        "id": args.id,
        "interface": args.interface,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDhcpInterfaceInfo.
 */
export interface GetDhcpInterfaceInfoArgs {
    id?: string;
    interface: string;
}

/**
 * A collection of values returned by getDhcpInterfaceInfo.
 */
export interface GetDhcpInterfaceInfoResult {
    readonly dnsSuffix: string;
    readonly gateway: string;
    readonly id: string;
    readonly interface: string;
    readonly ip: string;
    readonly pop3Server: string;
    readonly primaryDns: string;
    readonly primaryNis: string;
    readonly primaryNtp: string;
    readonly primaryWins: string;
    readonly secondaryDns: string;
    readonly secondaryNis: string;
    readonly secondaryNtp: string;
    readonly secondaryWins: string;
    readonly server: string;
    readonly serverId: string;
    readonly smtpServer: string;
    readonly state: string;
}
export function getDhcpInterfaceInfoOutput(args: GetDhcpInterfaceInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDhcpInterfaceInfoResult> {
    return pulumi.output(args).apply((a: any) => getDhcpInterfaceInfo(a, opts))
}

/**
 * A collection of arguments for invoking getDhcpInterfaceInfo.
 */
export interface GetDhcpInterfaceInfoOutputArgs {
    id?: pulumi.Input<string>;
    interface: pulumi.Input<string>;
}
