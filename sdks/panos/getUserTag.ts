// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUserTag(args?: GetUserTagArgs, opts?: pulumi.InvokeOptions): Promise<GetUserTagResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("panos:index/getUserTag:getUserTag", {
        "id": args.id,
        "user": args.user,
        "vsys": args.vsys,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUserTag.
 */
export interface GetUserTagArgs {
    id?: string;
    user?: string;
    vsys?: string;
}

/**
 * A collection of values returned by getUserTag.
 */
export interface GetUserTagResult {
    readonly entries: outputs.GetUserTagEntry[];
    readonly id: string;
    readonly user?: string;
    readonly vsys?: string;
}
export function getUserTagOutput(args?: GetUserTagOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserTagResult> {
    return pulumi.output(args).apply((a: any) => getUserTag(a, opts))
}

/**
 * A collection of arguments for invoking getUserTag.
 */
export interface GetUserTagOutputArgs {
    id?: pulumi.Input<string>;
    user?: pulumi.Input<string>;
    vsys?: pulumi.Input<string>;
}
