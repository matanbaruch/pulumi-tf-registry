// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AntiSpywareSecurityProfile extends pulumi.CustomResource {
    /**
     * Get an existing AntiSpywareSecurityProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AntiSpywareSecurityProfileState, opts?: pulumi.CustomResourceOptions): AntiSpywareSecurityProfile {
        return new AntiSpywareSecurityProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'panos:index/antiSpywareSecurityProfile:AntiSpywareSecurityProfile';

    /**
     * Returns true if the given object is an instance of AntiSpywareSecurityProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AntiSpywareSecurityProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AntiSpywareSecurityProfile.__pulumiType;
    }

    /**
     * Botnet list specs
     */
    public readonly botnetLists!: pulumi.Output<outputs.AntiSpywareSecurityProfileBotnetList[] | undefined>;
    /**
     * Description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The device group.
     */
    public readonly deviceGroup!: pulumi.Output<string | undefined>;
    /**
     * (PAN-OS 10.0+) DNS category specs
     */
    public readonly dnsCategories!: pulumi.Output<outputs.AntiSpywareSecurityProfileDnsCategory[] | undefined>;
    /**
     * Exception list spec
     */
    public readonly exceptions!: pulumi.Output<outputs.AntiSpywareSecurityProfileException[] | undefined>;
    /**
     * Security profile name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (PAN-OS 8.x only) Packet capture config
     */
    public readonly packetCapture!: pulumi.Output<string | undefined>;
    /**
     * Rule list spec
     */
    public readonly rules!: pulumi.Output<outputs.AntiSpywareSecurityProfileRule[] | undefined>;
    /**
     * IPv4 sinkhole address
     */
    public readonly sinkholeIpv4Address!: pulumi.Output<string | undefined>;
    /**
     * IPv6 sinkhole address
     */
    public readonly sinkholeIpv6Address!: pulumi.Output<string | undefined>;
    /**
     * List of threat exceptions
     */
    public readonly threatExceptions!: pulumi.Output<string[] | undefined>;
    /**
     * The vsys this object belongs in.
     */
    public readonly vsys!: pulumi.Output<string | undefined>;
    /**
     * (PAN-OS 10.0+) White list specs
     */
    public readonly whiteLists!: pulumi.Output<outputs.AntiSpywareSecurityProfileWhiteList[] | undefined>;

    /**
     * Create a AntiSpywareSecurityProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AntiSpywareSecurityProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AntiSpywareSecurityProfileArgs | AntiSpywareSecurityProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AntiSpywareSecurityProfileState | undefined;
            resourceInputs["botnetLists"] = state ? state.botnetLists : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceGroup"] = state ? state.deviceGroup : undefined;
            resourceInputs["dnsCategories"] = state ? state.dnsCategories : undefined;
            resourceInputs["exceptions"] = state ? state.exceptions : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["packetCapture"] = state ? state.packetCapture : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["sinkholeIpv4Address"] = state ? state.sinkholeIpv4Address : undefined;
            resourceInputs["sinkholeIpv6Address"] = state ? state.sinkholeIpv6Address : undefined;
            resourceInputs["threatExceptions"] = state ? state.threatExceptions : undefined;
            resourceInputs["vsys"] = state ? state.vsys : undefined;
            resourceInputs["whiteLists"] = state ? state.whiteLists : undefined;
        } else {
            const args = argsOrState as AntiSpywareSecurityProfileArgs | undefined;
            resourceInputs["botnetLists"] = args ? args.botnetLists : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceGroup"] = args ? args.deviceGroup : undefined;
            resourceInputs["dnsCategories"] = args ? args.dnsCategories : undefined;
            resourceInputs["exceptions"] = args ? args.exceptions : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["packetCapture"] = args ? args.packetCapture : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["sinkholeIpv4Address"] = args ? args.sinkholeIpv4Address : undefined;
            resourceInputs["sinkholeIpv6Address"] = args ? args.sinkholeIpv6Address : undefined;
            resourceInputs["threatExceptions"] = args ? args.threatExceptions : undefined;
            resourceInputs["vsys"] = args ? args.vsys : undefined;
            resourceInputs["whiteLists"] = args ? args.whiteLists : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AntiSpywareSecurityProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AntiSpywareSecurityProfile resources.
 */
export interface AntiSpywareSecurityProfileState {
    /**
     * Botnet list specs
     */
    botnetLists?: pulumi.Input<pulumi.Input<inputs.AntiSpywareSecurityProfileBotnetList>[]>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * The device group.
     */
    deviceGroup?: pulumi.Input<string>;
    /**
     * (PAN-OS 10.0+) DNS category specs
     */
    dnsCategories?: pulumi.Input<pulumi.Input<inputs.AntiSpywareSecurityProfileDnsCategory>[]>;
    /**
     * Exception list spec
     */
    exceptions?: pulumi.Input<pulumi.Input<inputs.AntiSpywareSecurityProfileException>[]>;
    /**
     * Security profile name
     */
    name?: pulumi.Input<string>;
    /**
     * (PAN-OS 8.x only) Packet capture config
     */
    packetCapture?: pulumi.Input<string>;
    /**
     * Rule list spec
     */
    rules?: pulumi.Input<pulumi.Input<inputs.AntiSpywareSecurityProfileRule>[]>;
    /**
     * IPv4 sinkhole address
     */
    sinkholeIpv4Address?: pulumi.Input<string>;
    /**
     * IPv6 sinkhole address
     */
    sinkholeIpv6Address?: pulumi.Input<string>;
    /**
     * List of threat exceptions
     */
    threatExceptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
    /**
     * (PAN-OS 10.0+) White list specs
     */
    whiteLists?: pulumi.Input<pulumi.Input<inputs.AntiSpywareSecurityProfileWhiteList>[]>;
}

/**
 * The set of arguments for constructing a AntiSpywareSecurityProfile resource.
 */
export interface AntiSpywareSecurityProfileArgs {
    /**
     * Botnet list specs
     */
    botnetLists?: pulumi.Input<pulumi.Input<inputs.AntiSpywareSecurityProfileBotnetList>[]>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * The device group.
     */
    deviceGroup?: pulumi.Input<string>;
    /**
     * (PAN-OS 10.0+) DNS category specs
     */
    dnsCategories?: pulumi.Input<pulumi.Input<inputs.AntiSpywareSecurityProfileDnsCategory>[]>;
    /**
     * Exception list spec
     */
    exceptions?: pulumi.Input<pulumi.Input<inputs.AntiSpywareSecurityProfileException>[]>;
    /**
     * Security profile name
     */
    name?: pulumi.Input<string>;
    /**
     * (PAN-OS 8.x only) Packet capture config
     */
    packetCapture?: pulumi.Input<string>;
    /**
     * Rule list spec
     */
    rules?: pulumi.Input<pulumi.Input<inputs.AntiSpywareSecurityProfileRule>[]>;
    /**
     * IPv4 sinkhole address
     */
    sinkholeIpv4Address?: pulumi.Input<string>;
    /**
     * IPv6 sinkhole address
     */
    sinkholeIpv6Address?: pulumi.Input<string>;
    /**
     * List of threat exceptions
     */
    threatExceptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
    /**
     * (PAN-OS 10.0+) White list specs
     */
    whiteLists?: pulumi.Input<pulumi.Input<inputs.AntiSpywareSecurityProfileWhiteList>[]>;
}
