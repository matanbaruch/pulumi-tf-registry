// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AuthenticationProfile extends pulumi.CustomResource {
    /**
     * Get an existing AuthenticationProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthenticationProfileState, opts?: pulumi.CustomResourceOptions): AuthenticationProfile {
        return new AuthenticationProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'panos:index/authenticationProfile:AuthenticationProfile';

    /**
     * Returns true if the given object is an instance of AuthenticationProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthenticationProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthenticationProfile.__pulumiType;
    }

    /**
     * List of allowed users or user groups.
     */
    public readonly allowLists!: pulumi.Output<string[] | undefined>;
    /**
     * The encrypted Kerberos keytab value.
     */
    public /*out*/ readonly keytabEnc!: pulumi.Output<string>;
    /**
     * The raw Kerberos keytab value.
     */
    public /*out*/ readonly keytabRaw!: pulumi.Output<string>;
    /**
     * Number of failed attempts to trigger lock-out.
     */
    public readonly lockoutFailedAttempts!: pulumi.Output<string | undefined>;
    /**
     * Number of minutes to lock-out.
     */
    public readonly lockoutTime!: pulumi.Output<number | undefined>;
    /**
     * (PAN-OS 8.0+) Specify MFA configuration.
     */
    public readonly multiFactorAuthentication!: pulumi.Output<outputs.AuthenticationProfileMultiFactorAuthentication | undefined>;
    /**
     * The name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (PAN-OS 7.0+) Kerberos SSO settings.
     */
    public readonly singleSignOn!: pulumi.Output<outputs.AuthenticationProfileSingleSignOn | undefined>;
    /**
     * The template.
     */
    public readonly template!: pulumi.Output<string | undefined>;
    /**
     * The template stack.
     */
    public readonly templateStack!: pulumi.Output<string | undefined>;
    /**
     * The type specification.
     */
    public readonly type!: pulumi.Output<outputs.AuthenticationProfileType>;
    /**
     * (PAN-OS 7.0+) Domain name to be used for authentication.
     */
    public readonly userDomain!: pulumi.Output<string | undefined>;
    /**
     * (PAN-OS 7.0+) Username modifier to handle user domain.
     */
    public readonly usernameModifier!: pulumi.Output<string | undefined>;
    /**
     * The vsys this object belongs in.
     */
    public readonly vsys!: pulumi.Output<string | undefined>;

    /**
     * Create a AuthenticationProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthenticationProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthenticationProfileArgs | AuthenticationProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthenticationProfileState | undefined;
            resourceInputs["allowLists"] = state ? state.allowLists : undefined;
            resourceInputs["keytabEnc"] = state ? state.keytabEnc : undefined;
            resourceInputs["keytabRaw"] = state ? state.keytabRaw : undefined;
            resourceInputs["lockoutFailedAttempts"] = state ? state.lockoutFailedAttempts : undefined;
            resourceInputs["lockoutTime"] = state ? state.lockoutTime : undefined;
            resourceInputs["multiFactorAuthentication"] = state ? state.multiFactorAuthentication : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["singleSignOn"] = state ? state.singleSignOn : undefined;
            resourceInputs["template"] = state ? state.template : undefined;
            resourceInputs["templateStack"] = state ? state.templateStack : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["userDomain"] = state ? state.userDomain : undefined;
            resourceInputs["usernameModifier"] = state ? state.usernameModifier : undefined;
            resourceInputs["vsys"] = state ? state.vsys : undefined;
        } else {
            const args = argsOrState as AuthenticationProfileArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["allowLists"] = args ? args.allowLists : undefined;
            resourceInputs["lockoutFailedAttempts"] = args ? args.lockoutFailedAttempts : undefined;
            resourceInputs["lockoutTime"] = args ? args.lockoutTime : undefined;
            resourceInputs["multiFactorAuthentication"] = args ? args.multiFactorAuthentication : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["singleSignOn"] = args ? args.singleSignOn : undefined;
            resourceInputs["template"] = args ? args.template : undefined;
            resourceInputs["templateStack"] = args ? args.templateStack : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["userDomain"] = args ? args.userDomain : undefined;
            resourceInputs["usernameModifier"] = args ? args.usernameModifier : undefined;
            resourceInputs["vsys"] = args ? args.vsys : undefined;
            resourceInputs["keytabEnc"] = undefined /*out*/;
            resourceInputs["keytabRaw"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["keytabEnc", "keytabRaw"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AuthenticationProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AuthenticationProfile resources.
 */
export interface AuthenticationProfileState {
    /**
     * List of allowed users or user groups.
     */
    allowLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The encrypted Kerberos keytab value.
     */
    keytabEnc?: pulumi.Input<string>;
    /**
     * The raw Kerberos keytab value.
     */
    keytabRaw?: pulumi.Input<string>;
    /**
     * Number of failed attempts to trigger lock-out.
     */
    lockoutFailedAttempts?: pulumi.Input<string>;
    /**
     * Number of minutes to lock-out.
     */
    lockoutTime?: pulumi.Input<number>;
    /**
     * (PAN-OS 8.0+) Specify MFA configuration.
     */
    multiFactorAuthentication?: pulumi.Input<inputs.AuthenticationProfileMultiFactorAuthentication>;
    /**
     * The name.
     */
    name?: pulumi.Input<string>;
    /**
     * (PAN-OS 7.0+) Kerberos SSO settings.
     */
    singleSignOn?: pulumi.Input<inputs.AuthenticationProfileSingleSignOn>;
    /**
     * The template.
     */
    template?: pulumi.Input<string>;
    /**
     * The template stack.
     */
    templateStack?: pulumi.Input<string>;
    /**
     * The type specification.
     */
    type?: pulumi.Input<inputs.AuthenticationProfileType>;
    /**
     * (PAN-OS 7.0+) Domain name to be used for authentication.
     */
    userDomain?: pulumi.Input<string>;
    /**
     * (PAN-OS 7.0+) Username modifier to handle user domain.
     */
    usernameModifier?: pulumi.Input<string>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AuthenticationProfile resource.
 */
export interface AuthenticationProfileArgs {
    /**
     * List of allowed users or user groups.
     */
    allowLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Number of failed attempts to trigger lock-out.
     */
    lockoutFailedAttempts?: pulumi.Input<string>;
    /**
     * Number of minutes to lock-out.
     */
    lockoutTime?: pulumi.Input<number>;
    /**
     * (PAN-OS 8.0+) Specify MFA configuration.
     */
    multiFactorAuthentication?: pulumi.Input<inputs.AuthenticationProfileMultiFactorAuthentication>;
    /**
     * The name.
     */
    name?: pulumi.Input<string>;
    /**
     * (PAN-OS 7.0+) Kerberos SSO settings.
     */
    singleSignOn?: pulumi.Input<inputs.AuthenticationProfileSingleSignOn>;
    /**
     * The template.
     */
    template?: pulumi.Input<string>;
    /**
     * The template stack.
     */
    templateStack?: pulumi.Input<string>;
    /**
     * The type specification.
     */
    type: pulumi.Input<inputs.AuthenticationProfileType>;
    /**
     * (PAN-OS 7.0+) Domain name to be used for authentication.
     */
    userDomain?: pulumi.Input<string>;
    /**
     * (PAN-OS 7.0+) Username modifier to handle user domain.
     */
    usernameModifier?: pulumi.Input<string>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
}
