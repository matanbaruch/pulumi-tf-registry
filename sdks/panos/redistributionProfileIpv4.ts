// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RedistributionProfileIpv4 extends pulumi.CustomResource {
    /**
     * Get an existing RedistributionProfileIpv4 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RedistributionProfileIpv4State, opts?: pulumi.CustomResourceOptions): RedistributionProfileIpv4 {
        return new RedistributionProfileIpv4(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'panos:index/redistributionProfileIpv4:RedistributionProfileIpv4';

    /**
     * Returns true if the given object is an instance of RedistributionProfileIpv4.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RedistributionProfileIpv4 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RedistributionProfileIpv4.__pulumiType;
    }

    public readonly action!: pulumi.Output<string | undefined>;
    public readonly bgpCommunities!: pulumi.Output<string[] | undefined>;
    public readonly bgpExtendedCommunities!: pulumi.Output<string[] | undefined>;
    public readonly destinations!: pulumi.Output<string[] | undefined>;
    public readonly interfaces!: pulumi.Output<string[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly nextHops!: pulumi.Output<string[] | undefined>;
    public readonly ospfAreas!: pulumi.Output<string[] | undefined>;
    public readonly ospfPathTypes!: pulumi.Output<string[] | undefined>;
    public readonly ospfTags!: pulumi.Output<string[] | undefined>;
    public readonly priority!: pulumi.Output<number>;
    public readonly types!: pulumi.Output<string[] | undefined>;
    public readonly virtualRouter!: pulumi.Output<string>;

    /**
     * Create a RedistributionProfileIpv4 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RedistributionProfileIpv4Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RedistributionProfileIpv4Args | RedistributionProfileIpv4State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RedistributionProfileIpv4State | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["bgpCommunities"] = state ? state.bgpCommunities : undefined;
            resourceInputs["bgpExtendedCommunities"] = state ? state.bgpExtendedCommunities : undefined;
            resourceInputs["destinations"] = state ? state.destinations : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nextHops"] = state ? state.nextHops : undefined;
            resourceInputs["ospfAreas"] = state ? state.ospfAreas : undefined;
            resourceInputs["ospfPathTypes"] = state ? state.ospfPathTypes : undefined;
            resourceInputs["ospfTags"] = state ? state.ospfTags : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["types"] = state ? state.types : undefined;
            resourceInputs["virtualRouter"] = state ? state.virtualRouter : undefined;
        } else {
            const args = argsOrState as RedistributionProfileIpv4Args | undefined;
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if ((!args || args.virtualRouter === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virtualRouter'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["bgpCommunities"] = args ? args.bgpCommunities : undefined;
            resourceInputs["bgpExtendedCommunities"] = args ? args.bgpExtendedCommunities : undefined;
            resourceInputs["destinations"] = args ? args.destinations : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nextHops"] = args ? args.nextHops : undefined;
            resourceInputs["ospfAreas"] = args ? args.ospfAreas : undefined;
            resourceInputs["ospfPathTypes"] = args ? args.ospfPathTypes : undefined;
            resourceInputs["ospfTags"] = args ? args.ospfTags : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["types"] = args ? args.types : undefined;
            resourceInputs["virtualRouter"] = args ? args.virtualRouter : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RedistributionProfileIpv4.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RedistributionProfileIpv4 resources.
 */
export interface RedistributionProfileIpv4State {
    action?: pulumi.Input<string>;
    bgpCommunities?: pulumi.Input<pulumi.Input<string>[]>;
    bgpExtendedCommunities?: pulumi.Input<pulumi.Input<string>[]>;
    destinations?: pulumi.Input<pulumi.Input<string>[]>;
    interfaces?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    nextHops?: pulumi.Input<pulumi.Input<string>[]>;
    ospfAreas?: pulumi.Input<pulumi.Input<string>[]>;
    ospfPathTypes?: pulumi.Input<pulumi.Input<string>[]>;
    ospfTags?: pulumi.Input<pulumi.Input<string>[]>;
    priority?: pulumi.Input<number>;
    types?: pulumi.Input<pulumi.Input<string>[]>;
    virtualRouter?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RedistributionProfileIpv4 resource.
 */
export interface RedistributionProfileIpv4Args {
    action?: pulumi.Input<string>;
    bgpCommunities?: pulumi.Input<pulumi.Input<string>[]>;
    bgpExtendedCommunities?: pulumi.Input<pulumi.Input<string>[]>;
    destinations?: pulumi.Input<pulumi.Input<string>[]>;
    interfaces?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    nextHops?: pulumi.Input<pulumi.Input<string>[]>;
    ospfAreas?: pulumi.Input<pulumi.Input<string>[]>;
    ospfPathTypes?: pulumi.Input<pulumi.Input<string>[]>;
    ospfTags?: pulumi.Input<pulumi.Input<string>[]>;
    priority: pulumi.Input<number>;
    types?: pulumi.Input<pulumi.Input<string>[]>;
    virtualRouter: pulumi.Input<string>;
}
