// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDosProtectionProfile(args: GetDosProtectionProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetDosProtectionProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("panos:index/getDosProtectionProfile:getDosProtectionProfile", {
        "deviceGroup": args.deviceGroup,
        "id": args.id,
        "name": args.name,
        "vsys": args.vsys,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDosProtectionProfile.
 */
export interface GetDosProtectionProfileArgs {
    deviceGroup?: string;
    id?: string;
    name: string;
    vsys?: string;
}

/**
 * A collection of values returned by getDosProtectionProfile.
 */
export interface GetDosProtectionProfileResult {
    readonly description: string;
    readonly deviceGroup?: string;
    readonly enableSessionsProtections: boolean;
    readonly icmps: outputs.GetDosProtectionProfileIcmp[];
    readonly icmpv6s: outputs.GetDosProtectionProfileIcmpv6[];
    readonly id: string;
    readonly maxConcurrentSessions: number;
    readonly name: string;
    readonly others: outputs.GetDosProtectionProfileOther[];
    readonly syns: outputs.GetDosProtectionProfileSyn[];
    readonly type: string;
    readonly udps: outputs.GetDosProtectionProfileUdp[];
    readonly vsys?: string;
}
export function getDosProtectionProfileOutput(args: GetDosProtectionProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDosProtectionProfileResult> {
    return pulumi.output(args).apply((a: any) => getDosProtectionProfile(a, opts))
}

/**
 * A collection of arguments for invoking getDosProtectionProfile.
 */
export interface GetDosProtectionProfileOutputArgs {
    deviceGroup?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    vsys?: pulumi.Input<string>;
}
