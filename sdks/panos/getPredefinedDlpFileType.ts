// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPredefinedDlpFileType(args?: GetPredefinedDlpFileTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetPredefinedDlpFileTypeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("panos:index/getPredefinedDlpFileType:getPredefinedDlpFileType", {
        "id": args.id,
        "label": args.label,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPredefinedDlpFileType.
 */
export interface GetPredefinedDlpFileTypeArgs {
    id?: string;
    label?: string;
    name?: string;
}

/**
 * A collection of values returned by getPredefinedDlpFileType.
 */
export interface GetPredefinedDlpFileTypeResult {
    readonly fileTypes: outputs.GetPredefinedDlpFileTypeFileType[];
    readonly id: string;
    readonly label?: string;
    readonly name?: string;
    readonly total: number;
}
export function getPredefinedDlpFileTypeOutput(args?: GetPredefinedDlpFileTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPredefinedDlpFileTypeResult> {
    return pulumi.output(args).apply((a: any) => getPredefinedDlpFileType(a, opts))
}

/**
 * A collection of arguments for invoking getPredefinedDlpFileType.
 */
export interface GetPredefinedDlpFileTypeOutputArgs {
    id?: pulumi.Input<string>;
    label?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
