// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOspfAreas(args: GetOspfAreasArgs, opts?: pulumi.InvokeOptions): Promise<GetOspfAreasResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("panos:index/getOspfAreas:getOspfAreas", {
        "id": args.id,
        "template": args.template,
        "templateStack": args.templateStack,
        "virtualRouter": args.virtualRouter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOspfAreas.
 */
export interface GetOspfAreasArgs {
    id?: string;
    template?: string;
    templateStack?: string;
    virtualRouter: string;
}

/**
 * A collection of values returned by getOspfAreas.
 */
export interface GetOspfAreasResult {
    readonly id: string;
    readonly listings: string[];
    readonly template?: string;
    readonly templateStack?: string;
    readonly total: number;
    readonly virtualRouter: string;
}
export function getOspfAreasOutput(args: GetOspfAreasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOspfAreasResult> {
    return pulumi.output(args).apply((a: any) => getOspfAreas(a, opts))
}

/**
 * A collection of arguments for invoking getOspfAreas.
 */
export interface GetOspfAreasOutputArgs {
    id?: pulumi.Input<string>;
    template?: pulumi.Input<string>;
    templateStack?: pulumi.Input<string>;
    virtualRouter: pulumi.Input<string>;
}
