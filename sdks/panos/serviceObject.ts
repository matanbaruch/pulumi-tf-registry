// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ServiceObject extends pulumi.CustomResource {
    /**
     * Get an existing ServiceObject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceObjectState, opts?: pulumi.CustomResourceOptions): ServiceObject {
        return new ServiceObject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'panos:index/serviceObject:ServiceObject';

    /**
     * Returns true if the given object is an instance of ServiceObject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceObject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceObject.__pulumiType;
    }

    /**
     * Object's description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The destination port definition
     */
    public readonly destinationPort!: pulumi.Output<string>;
    /**
     * The service object's name
     */
    public readonly name!: pulumi.Output<string>;
    public readonly overrideHalfClosedTimeout!: pulumi.Output<number | undefined>;
    public readonly overrideSessionTimeout!: pulumi.Output<boolean | undefined>;
    public readonly overrideTimeWaitTimeout!: pulumi.Output<number | undefined>;
    public readonly overrideTimeout!: pulumi.Output<number | undefined>;
    public readonly protocol!: pulumi.Output<string>;
    /**
     * The source port definition
     */
    public readonly sourcePort!: pulumi.Output<string | undefined>;
    /**
     * The administrative tags.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The vsys this object belongs in.
     */
    public readonly vsys!: pulumi.Output<string | undefined>;

    /**
     * Create a ServiceObject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceObjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceObjectArgs | ServiceObjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceObjectState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destinationPort"] = state ? state.destinationPort : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overrideHalfClosedTimeout"] = state ? state.overrideHalfClosedTimeout : undefined;
            resourceInputs["overrideSessionTimeout"] = state ? state.overrideSessionTimeout : undefined;
            resourceInputs["overrideTimeWaitTimeout"] = state ? state.overrideTimeWaitTimeout : undefined;
            resourceInputs["overrideTimeout"] = state ? state.overrideTimeout : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["sourcePort"] = state ? state.sourcePort : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vsys"] = state ? state.vsys : undefined;
        } else {
            const args = argsOrState as ServiceObjectArgs | undefined;
            if ((!args || args.destinationPort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationPort'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destinationPort"] = args ? args.destinationPort : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overrideHalfClosedTimeout"] = args ? args.overrideHalfClosedTimeout : undefined;
            resourceInputs["overrideSessionTimeout"] = args ? args.overrideSessionTimeout : undefined;
            resourceInputs["overrideTimeWaitTimeout"] = args ? args.overrideTimeWaitTimeout : undefined;
            resourceInputs["overrideTimeout"] = args ? args.overrideTimeout : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["sourcePort"] = args ? args.sourcePort : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vsys"] = args ? args.vsys : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceObject.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ServiceObject resources.
 */
export interface ServiceObjectState {
    /**
     * Object's description
     */
    description?: pulumi.Input<string>;
    /**
     * The destination port definition
     */
    destinationPort?: pulumi.Input<string>;
    /**
     * The service object's name
     */
    name?: pulumi.Input<string>;
    overrideHalfClosedTimeout?: pulumi.Input<number>;
    overrideSessionTimeout?: pulumi.Input<boolean>;
    overrideTimeWaitTimeout?: pulumi.Input<number>;
    overrideTimeout?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    /**
     * The source port definition
     */
    sourcePort?: pulumi.Input<string>;
    /**
     * The administrative tags.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceObject resource.
 */
export interface ServiceObjectArgs {
    /**
     * Object's description
     */
    description?: pulumi.Input<string>;
    /**
     * The destination port definition
     */
    destinationPort: pulumi.Input<string>;
    /**
     * The service object's name
     */
    name?: pulumi.Input<string>;
    overrideHalfClosedTimeout?: pulumi.Input<number>;
    overrideSessionTimeout?: pulumi.Input<boolean>;
    overrideTimeWaitTimeout?: pulumi.Input<number>;
    overrideTimeout?: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    /**
     * The source port definition
     */
    sourcePort?: pulumi.Input<string>;
    /**
     * The administrative tags.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The vsys this object belongs in.
     */
    vsys?: pulumi.Input<string>;
}
