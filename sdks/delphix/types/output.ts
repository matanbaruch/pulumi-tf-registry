// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AppdataDsourceOpsPostSync {
    command?: string;
    credentialsEnvVars?: outputs.AppdataDsourceOpsPostSyncCredentialsEnvVar[];
    name?: string;
    shell?: string;
}

export interface AppdataDsourceOpsPostSyncCredentialsEnvVar {
    azureVaultName?: string;
    azureVaultSecretKey?: string;
    azureVaultUsernameKey?: string;
    baseVarName: string;
    cyberarkVaultQueryString?: string;
    hashicorpVaultEngine?: string;
    hashicorpVaultSecretKey?: string;
    hashicorpVaultSecretPath?: string;
    hashicorpVaultUsernameKey?: string;
    password?: string;
    vault?: string;
}

export interface AppdataDsourceOpsPreSync {
    command?: string;
    credentialsEnvVars?: outputs.AppdataDsourceOpsPreSyncCredentialsEnvVar[];
    name?: string;
    shell?: string;
}

export interface AppdataDsourceOpsPreSyncCredentialsEnvVar {
    azureVaultName?: string;
    azureVaultSecretKey?: string;
    azureVaultUsernameKey?: string;
    baseVarName: string;
    cyberarkVaultQueryString?: string;
    hashicorpVaultEngine?: string;
    hashicorpVaultSecretKey?: string;
    hashicorpVaultSecretPath?: string;
    hashicorpVaultUsernameKey?: string;
    password?: string;
    vault?: string;
}

export interface AppdataDsourceTag {
    key?: string;
    value?: string;
}

export interface DatabasePostgresqlTag {
    key?: string;
    value?: string;
}

export interface EnvironmentHost {
    hostname: string;
    memorySize: number;
    osName: string;
    osVersion: string;
}

export interface EnvironmentRepository {
    allowProvisioning: boolean;
    databaseType: string;
    id: string;
    isStaging: boolean;
    name: string;
}

export interface EnvironmentTag {
    key: string;
    value?: string;
}

export interface OracleDsourceOpsPostSync {
    command?: string;
    credentialsEnvVars?: outputs.OracleDsourceOpsPostSyncCredentialsEnvVar[];
    name?: string;
    shell?: string;
}

export interface OracleDsourceOpsPostSyncCredentialsEnvVar {
    azureVaultName?: string;
    azureVaultSecretKey?: string;
    azureVaultUsernameKey?: string;
    baseVarName: string;
    cyberarkVaultQueryString?: string;
    hashicorpVaultEngine?: string;
    hashicorpVaultSecretKey?: string;
    hashicorpVaultSecretPath?: string;
    hashicorpVaultUsernameKey?: string;
    password?: string;
    vault?: string;
}

export interface OracleDsourceOpsPreLogSync {
    command?: string;
    credentialsEnvVars?: outputs.OracleDsourceOpsPreLogSyncCredentialsEnvVar[];
    name?: string;
    shell?: string;
}

export interface OracleDsourceOpsPreLogSyncCredentialsEnvVar {
    azureVaultName?: string;
    azureVaultSecretKey?: string;
    azureVaultUsernameKey?: string;
    baseVarName: string;
    cyberarkVaultQueryString?: string;
    hashicorpVaultEngine?: string;
    hashicorpVaultSecretKey?: string;
    hashicorpVaultSecretPath?: string;
    hashicorpVaultUsernameKey?: string;
    password?: string;
    vault?: string;
}

export interface OracleDsourceOpsPreSync {
    command?: string;
    credentialsEnvVars?: outputs.OracleDsourceOpsPreSyncCredentialsEnvVar[];
    name?: string;
    shell?: string;
}

export interface OracleDsourceOpsPreSyncCredentialsEnvVar {
    azureVaultName?: string;
    azureVaultSecretKey?: string;
    azureVaultUsernameKey?: string;
    baseVarName: string;
    cyberarkVaultQueryString?: string;
    hashicorpVaultEngine?: string;
    hashicorpVaultSecretKey?: string;
    hashicorpVaultSecretPath?: string;
    hashicorpVaultUsernameKey?: string;
    password?: string;
    vault?: string;
}

export interface OracleDsourceTag {
    key?: string;
    value?: string;
}

export interface VdbAdditionalMountPoint {
    environmentId?: string;
    mountPath?: string;
    sharedPath: string;
}

export interface VdbConfigureClone {
    command: string;
    elementId?: string;
    hasCredentials?: boolean;
    name?: string;
    shell?: string;
}

export interface VdbOracleRacCustomEnvFile {
    nodeId: string;
    pathParameters?: string;
}

export interface VdbOracleRacCustomEnvVar {
    name?: string;
    nodeId: string;
    value?: string;
}

export interface VdbPostRefresh {
    command: string;
    elementId?: string;
    hasCredentials?: boolean;
    name?: string;
    shell?: string;
}

export interface VdbPostRollback {
    command: string;
    elementId?: string;
    hasCredentials?: boolean;
    name?: string;
    shell?: string;
}

export interface VdbPostSnapshot {
    command: string;
    elementId?: string;
    hasCredentials?: boolean;
    name?: string;
    shell?: string;
}

export interface VdbPostStart {
    command: string;
    elementId?: string;
    hasCredentials?: boolean;
    name?: string;
    shell?: string;
}

export interface VdbPostStop {
    command: string;
    elementId?: string;
    hasCredentials?: boolean;
    name?: string;
    shell?: string;
}

export interface VdbPreRefresh {
    command: string;
    elementId?: string;
    hasCredentials?: boolean;
    name?: string;
    shell?: string;
}

export interface VdbPreRollback {
    command: string;
    elementId?: string;
    hasCredentials?: boolean;
    name?: string;
    shell?: string;
}

export interface VdbPreSnapshot {
    command: string;
    elementId?: string;
    hasCredentials?: boolean;
    name?: string;
    shell?: string;
}

export interface VdbPreStart {
    command: string;
    elementId?: string;
    hasCredentials?: boolean;
    name?: string;
    shell?: string;
}

export interface VdbPreStop {
    command: string;
    elementId?: string;
    hasCredentials?: boolean;
    name?: string;
    shell?: string;
}

export interface VdbTag {
    key: string;
    value?: string;
}

