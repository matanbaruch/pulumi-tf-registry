// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OracleDsource extends pulumi.CustomResource {
    /**
     * Get an existing OracleDsource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OracleDsourceState, opts?: pulumi.CustomResourceOptions): OracleDsource {
        return new OracleDsource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'delphix:index/oracleDsource:OracleDsource';

    /**
     * Returns true if the given object is an instance of OracleDsource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OracleDsource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OracleDsource.__pulumiType;
    }

    public readonly backupLevelEnabled!: pulumi.Output<boolean | undefined>;
    public readonly bandwidthLimit!: pulumi.Output<number | undefined>;
    public readonly checkLogical!: pulumi.Output<boolean | undefined>;
    public readonly compressedLinkingEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly contentType!: pulumi.Output<string>;
    public /*out*/ readonly creationDate!: pulumi.Output<string>;
    public /*out*/ readonly currentTimeflowId!: pulumi.Output<string>;
    public /*out*/ readonly dataUuid!: pulumi.Output<string>;
    public /*out*/ readonly databaseType!: pulumi.Output<string>;
    public /*out*/ readonly databaseVersion!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly diagnoseNoLoggingFaults!: pulumi.Output<boolean | undefined>;
    public readonly doNotResume!: pulumi.Output<boolean | undefined>;
    public readonly doubleSync!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly enabled!: pulumi.Output<boolean>;
    public readonly encryptedLinkingEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly engineId!: pulumi.Output<string>;
    public /*out*/ readonly engineName!: pulumi.Output<string>;
    public readonly environmentUserId!: pulumi.Output<string | undefined>;
    public readonly externalFilePath!: pulumi.Output<string | undefined>;
    public readonly fallbackAzureVaultName!: pulumi.Output<string | undefined>;
    public readonly fallbackAzureVaultSecretKey!: pulumi.Output<string | undefined>;
    public readonly fallbackAzureVaultUsernameKey!: pulumi.Output<string | undefined>;
    public readonly fallbackCyberarkVaultQueryString!: pulumi.Output<string | undefined>;
    public readonly fallbackHashicorpVaultEngine!: pulumi.Output<string | undefined>;
    public readonly fallbackHashicorpVaultSecretKey!: pulumi.Output<string | undefined>;
    public readonly fallbackHashicorpVaultSecretPath!: pulumi.Output<string | undefined>;
    public readonly fallbackHashicorpVaultUsernameKey!: pulumi.Output<string | undefined>;
    public readonly fallbackPassword!: pulumi.Output<string | undefined>;
    public readonly fallbackUsername!: pulumi.Output<string | undefined>;
    public readonly fallbackVault!: pulumi.Output<string | undefined>;
    public readonly filesForFullBackups!: pulumi.Output<number[] | undefined>;
    public readonly filesPerSet!: pulumi.Output<number | undefined>;
    public readonly forceFullBackup!: pulumi.Output<boolean | undefined>;
    public readonly groupId!: pulumi.Output<string>;
    public /*out*/ readonly groupName!: pulumi.Output<string>;
    public /*out*/ readonly isAppdata!: pulumi.Output<boolean>;
    public /*out*/ readonly isReplica!: pulumi.Output<boolean>;
    public readonly linkNow!: pulumi.Output<boolean | undefined>;
    public readonly logSyncEnabled!: pulumi.Output<boolean | undefined>;
    public readonly logSyncInterval!: pulumi.Output<number | undefined>;
    public readonly logSyncMode!: pulumi.Output<string | undefined>;
    public readonly makeCurrentAccountOwner!: pulumi.Output<boolean | undefined>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly namespaceId!: pulumi.Output<string>;
    public /*out*/ readonly namespaceName!: pulumi.Output<string>;
    public readonly nonSysAzureVaultName!: pulumi.Output<string | undefined>;
    public readonly nonSysAzureVaultSecretKey!: pulumi.Output<string | undefined>;
    public readonly nonSysAzureVaultUsernameKey!: pulumi.Output<string | undefined>;
    public readonly nonSysCyberarkVaultQueryString!: pulumi.Output<string | undefined>;
    public readonly nonSysHashicorpVaultEngine!: pulumi.Output<string | undefined>;
    public readonly nonSysHashicorpVaultSecretKey!: pulumi.Output<string | undefined>;
    public readonly nonSysHashicorpVaultSecretPath!: pulumi.Output<string | undefined>;
    public readonly nonSysHashicorpVaultUsernameKey!: pulumi.Output<string | undefined>;
    public readonly nonSysPassword!: pulumi.Output<string | undefined>;
    public readonly nonSysUsername!: pulumi.Output<string | undefined>;
    public readonly nonSysVault!: pulumi.Output<string | undefined>;
    public readonly numberOfConnections!: pulumi.Output<number | undefined>;
    public readonly opsPostSyncs!: pulumi.Output<outputs.OracleDsourceOpsPostSync[] | undefined>;
    public readonly opsPreLogSyncs!: pulumi.Output<outputs.OracleDsourceOpsPreLogSync[] | undefined>;
    public readonly opsPreSyncs!: pulumi.Output<outputs.OracleDsourceOpsPreSync[] | undefined>;
    public /*out*/ readonly pluginVersion!: pulumi.Output<string>;
    public readonly preProvisioningEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly previousTimeflowId!: pulumi.Output<string>;
    public readonly rmanChannels!: pulumi.Output<number | undefined>;
    public readonly skipSpaceCheck!: pulumi.Output<boolean | undefined>;
    public readonly skipWaitForSnapshotCreation!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly sourceId!: pulumi.Output<string>;
    public readonly sourceValue!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.OracleDsourceTag[] | undefined>;
    public readonly waitTime!: pulumi.Output<number | undefined>;

    /**
     * Create a OracleDsource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OracleDsourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OracleDsourceArgs | OracleDsourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OracleDsourceState | undefined;
            resourceInputs["backupLevelEnabled"] = state ? state.backupLevelEnabled : undefined;
            resourceInputs["bandwidthLimit"] = state ? state.bandwidthLimit : undefined;
            resourceInputs["checkLogical"] = state ? state.checkLogical : undefined;
            resourceInputs["compressedLinkingEnabled"] = state ? state.compressedLinkingEnabled : undefined;
            resourceInputs["contentType"] = state ? state.contentType : undefined;
            resourceInputs["creationDate"] = state ? state.creationDate : undefined;
            resourceInputs["currentTimeflowId"] = state ? state.currentTimeflowId : undefined;
            resourceInputs["dataUuid"] = state ? state.dataUuid : undefined;
            resourceInputs["databaseType"] = state ? state.databaseType : undefined;
            resourceInputs["databaseVersion"] = state ? state.databaseVersion : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["diagnoseNoLoggingFaults"] = state ? state.diagnoseNoLoggingFaults : undefined;
            resourceInputs["doNotResume"] = state ? state.doNotResume : undefined;
            resourceInputs["doubleSync"] = state ? state.doubleSync : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["encryptedLinkingEnabled"] = state ? state.encryptedLinkingEnabled : undefined;
            resourceInputs["engineId"] = state ? state.engineId : undefined;
            resourceInputs["engineName"] = state ? state.engineName : undefined;
            resourceInputs["environmentUserId"] = state ? state.environmentUserId : undefined;
            resourceInputs["externalFilePath"] = state ? state.externalFilePath : undefined;
            resourceInputs["fallbackAzureVaultName"] = state ? state.fallbackAzureVaultName : undefined;
            resourceInputs["fallbackAzureVaultSecretKey"] = state ? state.fallbackAzureVaultSecretKey : undefined;
            resourceInputs["fallbackAzureVaultUsernameKey"] = state ? state.fallbackAzureVaultUsernameKey : undefined;
            resourceInputs["fallbackCyberarkVaultQueryString"] = state ? state.fallbackCyberarkVaultQueryString : undefined;
            resourceInputs["fallbackHashicorpVaultEngine"] = state ? state.fallbackHashicorpVaultEngine : undefined;
            resourceInputs["fallbackHashicorpVaultSecretKey"] = state ? state.fallbackHashicorpVaultSecretKey : undefined;
            resourceInputs["fallbackHashicorpVaultSecretPath"] = state ? state.fallbackHashicorpVaultSecretPath : undefined;
            resourceInputs["fallbackHashicorpVaultUsernameKey"] = state ? state.fallbackHashicorpVaultUsernameKey : undefined;
            resourceInputs["fallbackPassword"] = state ? state.fallbackPassword : undefined;
            resourceInputs["fallbackUsername"] = state ? state.fallbackUsername : undefined;
            resourceInputs["fallbackVault"] = state ? state.fallbackVault : undefined;
            resourceInputs["filesForFullBackups"] = state ? state.filesForFullBackups : undefined;
            resourceInputs["filesPerSet"] = state ? state.filesPerSet : undefined;
            resourceInputs["forceFullBackup"] = state ? state.forceFullBackup : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["isAppdata"] = state ? state.isAppdata : undefined;
            resourceInputs["isReplica"] = state ? state.isReplica : undefined;
            resourceInputs["linkNow"] = state ? state.linkNow : undefined;
            resourceInputs["logSyncEnabled"] = state ? state.logSyncEnabled : undefined;
            resourceInputs["logSyncInterval"] = state ? state.logSyncInterval : undefined;
            resourceInputs["logSyncMode"] = state ? state.logSyncMode : undefined;
            resourceInputs["makeCurrentAccountOwner"] = state ? state.makeCurrentAccountOwner : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespaceId"] = state ? state.namespaceId : undefined;
            resourceInputs["namespaceName"] = state ? state.namespaceName : undefined;
            resourceInputs["nonSysAzureVaultName"] = state ? state.nonSysAzureVaultName : undefined;
            resourceInputs["nonSysAzureVaultSecretKey"] = state ? state.nonSysAzureVaultSecretKey : undefined;
            resourceInputs["nonSysAzureVaultUsernameKey"] = state ? state.nonSysAzureVaultUsernameKey : undefined;
            resourceInputs["nonSysCyberarkVaultQueryString"] = state ? state.nonSysCyberarkVaultQueryString : undefined;
            resourceInputs["nonSysHashicorpVaultEngine"] = state ? state.nonSysHashicorpVaultEngine : undefined;
            resourceInputs["nonSysHashicorpVaultSecretKey"] = state ? state.nonSysHashicorpVaultSecretKey : undefined;
            resourceInputs["nonSysHashicorpVaultSecretPath"] = state ? state.nonSysHashicorpVaultSecretPath : undefined;
            resourceInputs["nonSysHashicorpVaultUsernameKey"] = state ? state.nonSysHashicorpVaultUsernameKey : undefined;
            resourceInputs["nonSysPassword"] = state ? state.nonSysPassword : undefined;
            resourceInputs["nonSysUsername"] = state ? state.nonSysUsername : undefined;
            resourceInputs["nonSysVault"] = state ? state.nonSysVault : undefined;
            resourceInputs["numberOfConnections"] = state ? state.numberOfConnections : undefined;
            resourceInputs["opsPostSyncs"] = state ? state.opsPostSyncs : undefined;
            resourceInputs["opsPreLogSyncs"] = state ? state.opsPreLogSyncs : undefined;
            resourceInputs["opsPreSyncs"] = state ? state.opsPreSyncs : undefined;
            resourceInputs["pluginVersion"] = state ? state.pluginVersion : undefined;
            resourceInputs["preProvisioningEnabled"] = state ? state.preProvisioningEnabled : undefined;
            resourceInputs["previousTimeflowId"] = state ? state.previousTimeflowId : undefined;
            resourceInputs["rmanChannels"] = state ? state.rmanChannels : undefined;
            resourceInputs["skipSpaceCheck"] = state ? state.skipSpaceCheck : undefined;
            resourceInputs["skipWaitForSnapshotCreation"] = state ? state.skipWaitForSnapshotCreation : undefined;
            resourceInputs["sourceId"] = state ? state.sourceId : undefined;
            resourceInputs["sourceValue"] = state ? state.sourceValue : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["waitTime"] = state ? state.waitTime : undefined;
        } else {
            const args = argsOrState as OracleDsourceArgs | undefined;
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.sourceValue === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceValue'");
            }
            resourceInputs["backupLevelEnabled"] = args ? args.backupLevelEnabled : undefined;
            resourceInputs["bandwidthLimit"] = args ? args.bandwidthLimit : undefined;
            resourceInputs["checkLogical"] = args ? args.checkLogical : undefined;
            resourceInputs["compressedLinkingEnabled"] = args ? args.compressedLinkingEnabled : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["diagnoseNoLoggingFaults"] = args ? args.diagnoseNoLoggingFaults : undefined;
            resourceInputs["doNotResume"] = args ? args.doNotResume : undefined;
            resourceInputs["doubleSync"] = args ? args.doubleSync : undefined;
            resourceInputs["encryptedLinkingEnabled"] = args ? args.encryptedLinkingEnabled : undefined;
            resourceInputs["environmentUserId"] = args ? args.environmentUserId : undefined;
            resourceInputs["externalFilePath"] = args ? args.externalFilePath : undefined;
            resourceInputs["fallbackAzureVaultName"] = args ? args.fallbackAzureVaultName : undefined;
            resourceInputs["fallbackAzureVaultSecretKey"] = args ? args.fallbackAzureVaultSecretKey : undefined;
            resourceInputs["fallbackAzureVaultUsernameKey"] = args ? args.fallbackAzureVaultUsernameKey : undefined;
            resourceInputs["fallbackCyberarkVaultQueryString"] = args ? args.fallbackCyberarkVaultQueryString : undefined;
            resourceInputs["fallbackHashicorpVaultEngine"] = args ? args.fallbackHashicorpVaultEngine : undefined;
            resourceInputs["fallbackHashicorpVaultSecretKey"] = args ? args.fallbackHashicorpVaultSecretKey : undefined;
            resourceInputs["fallbackHashicorpVaultSecretPath"] = args ? args.fallbackHashicorpVaultSecretPath : undefined;
            resourceInputs["fallbackHashicorpVaultUsernameKey"] = args ? args.fallbackHashicorpVaultUsernameKey : undefined;
            resourceInputs["fallbackPassword"] = args ? args.fallbackPassword : undefined;
            resourceInputs["fallbackUsername"] = args ? args.fallbackUsername : undefined;
            resourceInputs["fallbackVault"] = args ? args.fallbackVault : undefined;
            resourceInputs["filesForFullBackups"] = args ? args.filesForFullBackups : undefined;
            resourceInputs["filesPerSet"] = args ? args.filesPerSet : undefined;
            resourceInputs["forceFullBackup"] = args ? args.forceFullBackup : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["linkNow"] = args ? args.linkNow : undefined;
            resourceInputs["logSyncEnabled"] = args ? args.logSyncEnabled : undefined;
            resourceInputs["logSyncInterval"] = args ? args.logSyncInterval : undefined;
            resourceInputs["logSyncMode"] = args ? args.logSyncMode : undefined;
            resourceInputs["makeCurrentAccountOwner"] = args ? args.makeCurrentAccountOwner : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nonSysAzureVaultName"] = args ? args.nonSysAzureVaultName : undefined;
            resourceInputs["nonSysAzureVaultSecretKey"] = args ? args.nonSysAzureVaultSecretKey : undefined;
            resourceInputs["nonSysAzureVaultUsernameKey"] = args ? args.nonSysAzureVaultUsernameKey : undefined;
            resourceInputs["nonSysCyberarkVaultQueryString"] = args ? args.nonSysCyberarkVaultQueryString : undefined;
            resourceInputs["nonSysHashicorpVaultEngine"] = args ? args.nonSysHashicorpVaultEngine : undefined;
            resourceInputs["nonSysHashicorpVaultSecretKey"] = args ? args.nonSysHashicorpVaultSecretKey : undefined;
            resourceInputs["nonSysHashicorpVaultSecretPath"] = args ? args.nonSysHashicorpVaultSecretPath : undefined;
            resourceInputs["nonSysHashicorpVaultUsernameKey"] = args ? args.nonSysHashicorpVaultUsernameKey : undefined;
            resourceInputs["nonSysPassword"] = args ? args.nonSysPassword : undefined;
            resourceInputs["nonSysUsername"] = args ? args.nonSysUsername : undefined;
            resourceInputs["nonSysVault"] = args ? args.nonSysVault : undefined;
            resourceInputs["numberOfConnections"] = args ? args.numberOfConnections : undefined;
            resourceInputs["opsPostSyncs"] = args ? args.opsPostSyncs : undefined;
            resourceInputs["opsPreLogSyncs"] = args ? args.opsPreLogSyncs : undefined;
            resourceInputs["opsPreSyncs"] = args ? args.opsPreSyncs : undefined;
            resourceInputs["preProvisioningEnabled"] = args ? args.preProvisioningEnabled : undefined;
            resourceInputs["rmanChannels"] = args ? args.rmanChannels : undefined;
            resourceInputs["skipSpaceCheck"] = args ? args.skipSpaceCheck : undefined;
            resourceInputs["skipWaitForSnapshotCreation"] = args ? args.skipWaitForSnapshotCreation : undefined;
            resourceInputs["sourceValue"] = args ? args.sourceValue : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["waitTime"] = args ? args.waitTime : undefined;
            resourceInputs["contentType"] = undefined /*out*/;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["currentTimeflowId"] = undefined /*out*/;
            resourceInputs["dataUuid"] = undefined /*out*/;
            resourceInputs["databaseType"] = undefined /*out*/;
            resourceInputs["databaseVersion"] = undefined /*out*/;
            resourceInputs["enabled"] = undefined /*out*/;
            resourceInputs["engineId"] = undefined /*out*/;
            resourceInputs["engineName"] = undefined /*out*/;
            resourceInputs["groupName"] = undefined /*out*/;
            resourceInputs["isAppdata"] = undefined /*out*/;
            resourceInputs["isReplica"] = undefined /*out*/;
            resourceInputs["namespaceId"] = undefined /*out*/;
            resourceInputs["namespaceName"] = undefined /*out*/;
            resourceInputs["pluginVersion"] = undefined /*out*/;
            resourceInputs["previousTimeflowId"] = undefined /*out*/;
            resourceInputs["sourceId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OracleDsource.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OracleDsource resources.
 */
export interface OracleDsourceState {
    backupLevelEnabled?: pulumi.Input<boolean>;
    bandwidthLimit?: pulumi.Input<number>;
    checkLogical?: pulumi.Input<boolean>;
    compressedLinkingEnabled?: pulumi.Input<boolean>;
    contentType?: pulumi.Input<string>;
    creationDate?: pulumi.Input<string>;
    currentTimeflowId?: pulumi.Input<string>;
    dataUuid?: pulumi.Input<string>;
    databaseType?: pulumi.Input<string>;
    databaseVersion?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    diagnoseNoLoggingFaults?: pulumi.Input<boolean>;
    doNotResume?: pulumi.Input<boolean>;
    doubleSync?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    encryptedLinkingEnabled?: pulumi.Input<boolean>;
    engineId?: pulumi.Input<string>;
    engineName?: pulumi.Input<string>;
    environmentUserId?: pulumi.Input<string>;
    externalFilePath?: pulumi.Input<string>;
    fallbackAzureVaultName?: pulumi.Input<string>;
    fallbackAzureVaultSecretKey?: pulumi.Input<string>;
    fallbackAzureVaultUsernameKey?: pulumi.Input<string>;
    fallbackCyberarkVaultQueryString?: pulumi.Input<string>;
    fallbackHashicorpVaultEngine?: pulumi.Input<string>;
    fallbackHashicorpVaultSecretKey?: pulumi.Input<string>;
    fallbackHashicorpVaultSecretPath?: pulumi.Input<string>;
    fallbackHashicorpVaultUsernameKey?: pulumi.Input<string>;
    fallbackPassword?: pulumi.Input<string>;
    fallbackUsername?: pulumi.Input<string>;
    fallbackVault?: pulumi.Input<string>;
    filesForFullBackups?: pulumi.Input<pulumi.Input<number>[]>;
    filesPerSet?: pulumi.Input<number>;
    forceFullBackup?: pulumi.Input<boolean>;
    groupId?: pulumi.Input<string>;
    groupName?: pulumi.Input<string>;
    isAppdata?: pulumi.Input<boolean>;
    isReplica?: pulumi.Input<boolean>;
    linkNow?: pulumi.Input<boolean>;
    logSyncEnabled?: pulumi.Input<boolean>;
    logSyncInterval?: pulumi.Input<number>;
    logSyncMode?: pulumi.Input<string>;
    makeCurrentAccountOwner?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    namespaceId?: pulumi.Input<string>;
    namespaceName?: pulumi.Input<string>;
    nonSysAzureVaultName?: pulumi.Input<string>;
    nonSysAzureVaultSecretKey?: pulumi.Input<string>;
    nonSysAzureVaultUsernameKey?: pulumi.Input<string>;
    nonSysCyberarkVaultQueryString?: pulumi.Input<string>;
    nonSysHashicorpVaultEngine?: pulumi.Input<string>;
    nonSysHashicorpVaultSecretKey?: pulumi.Input<string>;
    nonSysHashicorpVaultSecretPath?: pulumi.Input<string>;
    nonSysHashicorpVaultUsernameKey?: pulumi.Input<string>;
    nonSysPassword?: pulumi.Input<string>;
    nonSysUsername?: pulumi.Input<string>;
    nonSysVault?: pulumi.Input<string>;
    numberOfConnections?: pulumi.Input<number>;
    opsPostSyncs?: pulumi.Input<pulumi.Input<inputs.OracleDsourceOpsPostSync>[]>;
    opsPreLogSyncs?: pulumi.Input<pulumi.Input<inputs.OracleDsourceOpsPreLogSync>[]>;
    opsPreSyncs?: pulumi.Input<pulumi.Input<inputs.OracleDsourceOpsPreSync>[]>;
    pluginVersion?: pulumi.Input<string>;
    preProvisioningEnabled?: pulumi.Input<boolean>;
    previousTimeflowId?: pulumi.Input<string>;
    rmanChannels?: pulumi.Input<number>;
    skipSpaceCheck?: pulumi.Input<boolean>;
    skipWaitForSnapshotCreation?: pulumi.Input<boolean>;
    sourceId?: pulumi.Input<string>;
    sourceValue?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.OracleDsourceTag>[]>;
    waitTime?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a OracleDsource resource.
 */
export interface OracleDsourceArgs {
    backupLevelEnabled?: pulumi.Input<boolean>;
    bandwidthLimit?: pulumi.Input<number>;
    checkLogical?: pulumi.Input<boolean>;
    compressedLinkingEnabled?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    diagnoseNoLoggingFaults?: pulumi.Input<boolean>;
    doNotResume?: pulumi.Input<boolean>;
    doubleSync?: pulumi.Input<boolean>;
    encryptedLinkingEnabled?: pulumi.Input<boolean>;
    environmentUserId?: pulumi.Input<string>;
    externalFilePath?: pulumi.Input<string>;
    fallbackAzureVaultName?: pulumi.Input<string>;
    fallbackAzureVaultSecretKey?: pulumi.Input<string>;
    fallbackAzureVaultUsernameKey?: pulumi.Input<string>;
    fallbackCyberarkVaultQueryString?: pulumi.Input<string>;
    fallbackHashicorpVaultEngine?: pulumi.Input<string>;
    fallbackHashicorpVaultSecretKey?: pulumi.Input<string>;
    fallbackHashicorpVaultSecretPath?: pulumi.Input<string>;
    fallbackHashicorpVaultUsernameKey?: pulumi.Input<string>;
    fallbackPassword?: pulumi.Input<string>;
    fallbackUsername?: pulumi.Input<string>;
    fallbackVault?: pulumi.Input<string>;
    filesForFullBackups?: pulumi.Input<pulumi.Input<number>[]>;
    filesPerSet?: pulumi.Input<number>;
    forceFullBackup?: pulumi.Input<boolean>;
    groupId: pulumi.Input<string>;
    linkNow?: pulumi.Input<boolean>;
    logSyncEnabled?: pulumi.Input<boolean>;
    logSyncInterval?: pulumi.Input<number>;
    logSyncMode?: pulumi.Input<string>;
    makeCurrentAccountOwner?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    nonSysAzureVaultName?: pulumi.Input<string>;
    nonSysAzureVaultSecretKey?: pulumi.Input<string>;
    nonSysAzureVaultUsernameKey?: pulumi.Input<string>;
    nonSysCyberarkVaultQueryString?: pulumi.Input<string>;
    nonSysHashicorpVaultEngine?: pulumi.Input<string>;
    nonSysHashicorpVaultSecretKey?: pulumi.Input<string>;
    nonSysHashicorpVaultSecretPath?: pulumi.Input<string>;
    nonSysHashicorpVaultUsernameKey?: pulumi.Input<string>;
    nonSysPassword?: pulumi.Input<string>;
    nonSysUsername?: pulumi.Input<string>;
    nonSysVault?: pulumi.Input<string>;
    numberOfConnections?: pulumi.Input<number>;
    opsPostSyncs?: pulumi.Input<pulumi.Input<inputs.OracleDsourceOpsPostSync>[]>;
    opsPreLogSyncs?: pulumi.Input<pulumi.Input<inputs.OracleDsourceOpsPreLogSync>[]>;
    opsPreSyncs?: pulumi.Input<pulumi.Input<inputs.OracleDsourceOpsPreSync>[]>;
    preProvisioningEnabled?: pulumi.Input<boolean>;
    rmanChannels?: pulumi.Input<number>;
    skipSpaceCheck?: pulumi.Input<boolean>;
    skipWaitForSnapshotCreation?: pulumi.Input<boolean>;
    sourceValue: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.OracleDsourceTag>[]>;
    waitTime?: pulumi.Input<number>;
}
