// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Vdb extends pulumi.CustomResource {
    /**
     * Get an existing Vdb resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VdbState, opts?: pulumi.CustomResourceOptions): Vdb {
        return new Vdb(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'delphix:index/vdb:Vdb';

    /**
     * Returns true if the given object is an instance of Vdb.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vdb {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vdb.__pulumiType;
    }

    public readonly additionalMountPoints!: pulumi.Output<outputs.VdbAdditionalMountPoint[] | undefined>;
    public readonly appdataConfigParams!: pulumi.Output<string>;
    public readonly appdataSourceParams!: pulumi.Output<string>;
    public readonly archiveLog!: pulumi.Output<boolean | undefined>;
    public readonly autoSelectRepository!: pulumi.Output<boolean | undefined>;
    public readonly auxiliaryTemplateId!: pulumi.Output<string | undefined>;
    public readonly bookmarkId!: pulumi.Output<string | undefined>;
    public readonly cdbId!: pulumi.Output<string | undefined>;
    public readonly cdbTdeKeystorePassword!: pulumi.Output<string | undefined>;
    public readonly cdcOnProvision!: pulumi.Output<boolean | undefined>;
    public readonly clusterNodeIds!: pulumi.Output<string[] | undefined>;
    public readonly configParams!: pulumi.Output<string>;
    public readonly configureClones!: pulumi.Output<outputs.VdbConfigureClone[] | undefined>;
    public /*out*/ readonly creationDate!: pulumi.Output<string>;
    public readonly customEnvFiles!: pulumi.Output<string[] | undefined>;
    public readonly customEnvVars!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly databaseName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly databaseType!: pulumi.Output<string>;
    public /*out*/ readonly databaseVersion!: pulumi.Output<string>;
    public readonly dbPassword!: pulumi.Output<string | undefined>;
    public readonly dbUsername!: pulumi.Output<string | undefined>;
    public readonly engineId!: pulumi.Output<string>;
    public readonly environmentId!: pulumi.Output<string>;
    public readonly environmentUserId!: pulumi.Output<string | undefined>;
    public readonly fileMappingRules!: pulumi.Output<string | undefined>;
    public /*out*/ readonly fqdn!: pulumi.Output<string>;
    public /*out*/ readonly groupName!: pulumi.Output<string>;
    public /*out*/ readonly ipAddress!: pulumi.Output<string>;
    public readonly listenerIds!: pulumi.Output<string[] | undefined>;
    public readonly makeCurrentAccountOwner!: pulumi.Output<boolean | undefined>;
    public readonly masked!: pulumi.Output<boolean | undefined>;
    public readonly mountPoint!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly newDbid!: pulumi.Output<boolean | undefined>;
    public readonly onlineLogGroups!: pulumi.Output<number | undefined>;
    public readonly onlineLogSize!: pulumi.Output<number | undefined>;
    public readonly openResetLogs!: pulumi.Output<boolean | undefined>;
    public readonly oracleInstanceName!: pulumi.Output<string | undefined>;
    public readonly oracleRacCustomEnvFiles!: pulumi.Output<outputs.VdbOracleRacCustomEnvFile[] | undefined>;
    public readonly oracleRacCustomEnvVars!: pulumi.Output<outputs.VdbOracleRacCustomEnvVar[] | undefined>;
    public readonly osPassword!: pulumi.Output<string | undefined>;
    public readonly osUsername!: pulumi.Output<string | undefined>;
    public /*out*/ readonly parentId!: pulumi.Output<string>;
    public readonly parentTdeKeystorePassword!: pulumi.Output<string | undefined>;
    public readonly parentTdeKeystorePath!: pulumi.Output<string | undefined>;
    public readonly postRefreshes!: pulumi.Output<outputs.VdbPostRefresh[] | undefined>;
    public readonly postRollbacks!: pulumi.Output<outputs.VdbPostRollback[] | undefined>;
    public readonly postScript!: pulumi.Output<string | undefined>;
    public readonly postSnapshots!: pulumi.Output<outputs.VdbPostSnapshot[] | undefined>;
    public readonly postStarts!: pulumi.Output<outputs.VdbPostStart[] | undefined>;
    public readonly postStops!: pulumi.Output<outputs.VdbPostStop[] | undefined>;
    public readonly preRefreshes!: pulumi.Output<outputs.VdbPreRefresh[] | undefined>;
    public readonly preRollbacks!: pulumi.Output<outputs.VdbPreRollback[] | undefined>;
    public readonly preScript!: pulumi.Output<string | undefined>;
    public readonly preSnapshots!: pulumi.Output<outputs.VdbPreSnapshot[] | undefined>;
    public readonly preStarts!: pulumi.Output<outputs.VdbPreStart[] | undefined>;
    public readonly preStops!: pulumi.Output<outputs.VdbPreStop[] | undefined>;
    public readonly provisionType!: pulumi.Output<string | undefined>;
    public readonly recoveryModel!: pulumi.Output<string | undefined>;
    public readonly repositoryId!: pulumi.Output<string | undefined>;
    public readonly retentionPolicyId!: pulumi.Output<string | undefined>;
    public readonly snapshotId!: pulumi.Output<string | undefined>;
    public readonly snapshotPolicyId!: pulumi.Output<string | undefined>;
    public readonly sourceDataId!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.VdbTag[] | undefined>;
    public readonly targetGroupId!: pulumi.Output<string | undefined>;
    public readonly targetVcdbTdeKeystorePath!: pulumi.Output<string | undefined>;
    public readonly tdeExportedKeyFileSecret!: pulumi.Output<string | undefined>;
    public readonly tdeKeyIdentifier!: pulumi.Output<string | undefined>;
    public readonly templateId!: pulumi.Output<string | undefined>;
    public readonly timestamp!: pulumi.Output<string | undefined>;
    public readonly timestampInDatabaseTimezone!: pulumi.Output<string | undefined>;
    public readonly truncateLogOnCheckpoint!: pulumi.Output<boolean | undefined>;
    public readonly uniqueName!: pulumi.Output<string | undefined>;
    public readonly vcdbDatabaseName!: pulumi.Output<string | undefined>;
    public readonly vcdbName!: pulumi.Output<string | undefined>;
    public readonly vcdbTdeKeyIdentifier!: pulumi.Output<string | undefined>;
    public readonly vdbRestart!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Vdb resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VdbArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VdbArgs | VdbState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VdbState | undefined;
            resourceInputs["additionalMountPoints"] = state ? state.additionalMountPoints : undefined;
            resourceInputs["appdataConfigParams"] = state ? state.appdataConfigParams : undefined;
            resourceInputs["appdataSourceParams"] = state ? state.appdataSourceParams : undefined;
            resourceInputs["archiveLog"] = state ? state.archiveLog : undefined;
            resourceInputs["autoSelectRepository"] = state ? state.autoSelectRepository : undefined;
            resourceInputs["auxiliaryTemplateId"] = state ? state.auxiliaryTemplateId : undefined;
            resourceInputs["bookmarkId"] = state ? state.bookmarkId : undefined;
            resourceInputs["cdbId"] = state ? state.cdbId : undefined;
            resourceInputs["cdbTdeKeystorePassword"] = state ? state.cdbTdeKeystorePassword : undefined;
            resourceInputs["cdcOnProvision"] = state ? state.cdcOnProvision : undefined;
            resourceInputs["clusterNodeIds"] = state ? state.clusterNodeIds : undefined;
            resourceInputs["configParams"] = state ? state.configParams : undefined;
            resourceInputs["configureClones"] = state ? state.configureClones : undefined;
            resourceInputs["creationDate"] = state ? state.creationDate : undefined;
            resourceInputs["customEnvFiles"] = state ? state.customEnvFiles : undefined;
            resourceInputs["customEnvVars"] = state ? state.customEnvVars : undefined;
            resourceInputs["databaseName"] = state ? state.databaseName : undefined;
            resourceInputs["databaseType"] = state ? state.databaseType : undefined;
            resourceInputs["databaseVersion"] = state ? state.databaseVersion : undefined;
            resourceInputs["dbPassword"] = state ? state.dbPassword : undefined;
            resourceInputs["dbUsername"] = state ? state.dbUsername : undefined;
            resourceInputs["engineId"] = state ? state.engineId : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["environmentUserId"] = state ? state.environmentUserId : undefined;
            resourceInputs["fileMappingRules"] = state ? state.fileMappingRules : undefined;
            resourceInputs["fqdn"] = state ? state.fqdn : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["listenerIds"] = state ? state.listenerIds : undefined;
            resourceInputs["makeCurrentAccountOwner"] = state ? state.makeCurrentAccountOwner : undefined;
            resourceInputs["masked"] = state ? state.masked : undefined;
            resourceInputs["mountPoint"] = state ? state.mountPoint : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["newDbid"] = state ? state.newDbid : undefined;
            resourceInputs["onlineLogGroups"] = state ? state.onlineLogGroups : undefined;
            resourceInputs["onlineLogSize"] = state ? state.onlineLogSize : undefined;
            resourceInputs["openResetLogs"] = state ? state.openResetLogs : undefined;
            resourceInputs["oracleInstanceName"] = state ? state.oracleInstanceName : undefined;
            resourceInputs["oracleRacCustomEnvFiles"] = state ? state.oracleRacCustomEnvFiles : undefined;
            resourceInputs["oracleRacCustomEnvVars"] = state ? state.oracleRacCustomEnvVars : undefined;
            resourceInputs["osPassword"] = state ? state.osPassword : undefined;
            resourceInputs["osUsername"] = state ? state.osUsername : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["parentTdeKeystorePassword"] = state ? state.parentTdeKeystorePassword : undefined;
            resourceInputs["parentTdeKeystorePath"] = state ? state.parentTdeKeystorePath : undefined;
            resourceInputs["postRefreshes"] = state ? state.postRefreshes : undefined;
            resourceInputs["postRollbacks"] = state ? state.postRollbacks : undefined;
            resourceInputs["postScript"] = state ? state.postScript : undefined;
            resourceInputs["postSnapshots"] = state ? state.postSnapshots : undefined;
            resourceInputs["postStarts"] = state ? state.postStarts : undefined;
            resourceInputs["postStops"] = state ? state.postStops : undefined;
            resourceInputs["preRefreshes"] = state ? state.preRefreshes : undefined;
            resourceInputs["preRollbacks"] = state ? state.preRollbacks : undefined;
            resourceInputs["preScript"] = state ? state.preScript : undefined;
            resourceInputs["preSnapshots"] = state ? state.preSnapshots : undefined;
            resourceInputs["preStarts"] = state ? state.preStarts : undefined;
            resourceInputs["preStops"] = state ? state.preStops : undefined;
            resourceInputs["provisionType"] = state ? state.provisionType : undefined;
            resourceInputs["recoveryModel"] = state ? state.recoveryModel : undefined;
            resourceInputs["repositoryId"] = state ? state.repositoryId : undefined;
            resourceInputs["retentionPolicyId"] = state ? state.retentionPolicyId : undefined;
            resourceInputs["snapshotId"] = state ? state.snapshotId : undefined;
            resourceInputs["snapshotPolicyId"] = state ? state.snapshotPolicyId : undefined;
            resourceInputs["sourceDataId"] = state ? state.sourceDataId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetGroupId"] = state ? state.targetGroupId : undefined;
            resourceInputs["targetVcdbTdeKeystorePath"] = state ? state.targetVcdbTdeKeystorePath : undefined;
            resourceInputs["tdeExportedKeyFileSecret"] = state ? state.tdeExportedKeyFileSecret : undefined;
            resourceInputs["tdeKeyIdentifier"] = state ? state.tdeKeyIdentifier : undefined;
            resourceInputs["templateId"] = state ? state.templateId : undefined;
            resourceInputs["timestamp"] = state ? state.timestamp : undefined;
            resourceInputs["timestampInDatabaseTimezone"] = state ? state.timestampInDatabaseTimezone : undefined;
            resourceInputs["truncateLogOnCheckpoint"] = state ? state.truncateLogOnCheckpoint : undefined;
            resourceInputs["uniqueName"] = state ? state.uniqueName : undefined;
            resourceInputs["vcdbDatabaseName"] = state ? state.vcdbDatabaseName : undefined;
            resourceInputs["vcdbName"] = state ? state.vcdbName : undefined;
            resourceInputs["vcdbTdeKeyIdentifier"] = state ? state.vcdbTdeKeyIdentifier : undefined;
            resourceInputs["vdbRestart"] = state ? state.vdbRestart : undefined;
        } else {
            const args = argsOrState as VdbArgs | undefined;
            resourceInputs["additionalMountPoints"] = args ? args.additionalMountPoints : undefined;
            resourceInputs["appdataConfigParams"] = args ? args.appdataConfigParams : undefined;
            resourceInputs["appdataSourceParams"] = args ? args.appdataSourceParams : undefined;
            resourceInputs["archiveLog"] = args ? args.archiveLog : undefined;
            resourceInputs["autoSelectRepository"] = args ? args.autoSelectRepository : undefined;
            resourceInputs["auxiliaryTemplateId"] = args ? args.auxiliaryTemplateId : undefined;
            resourceInputs["bookmarkId"] = args ? args.bookmarkId : undefined;
            resourceInputs["cdbId"] = args ? args.cdbId : undefined;
            resourceInputs["cdbTdeKeystorePassword"] = args ? args.cdbTdeKeystorePassword : undefined;
            resourceInputs["cdcOnProvision"] = args ? args.cdcOnProvision : undefined;
            resourceInputs["clusterNodeIds"] = args ? args.clusterNodeIds : undefined;
            resourceInputs["configParams"] = args ? args.configParams : undefined;
            resourceInputs["configureClones"] = args ? args.configureClones : undefined;
            resourceInputs["customEnvFiles"] = args ? args.customEnvFiles : undefined;
            resourceInputs["customEnvVars"] = args ? args.customEnvVars : undefined;
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["dbPassword"] = args ? args.dbPassword : undefined;
            resourceInputs["dbUsername"] = args ? args.dbUsername : undefined;
            resourceInputs["engineId"] = args ? args.engineId : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["environmentUserId"] = args ? args.environmentUserId : undefined;
            resourceInputs["fileMappingRules"] = args ? args.fileMappingRules : undefined;
            resourceInputs["listenerIds"] = args ? args.listenerIds : undefined;
            resourceInputs["makeCurrentAccountOwner"] = args ? args.makeCurrentAccountOwner : undefined;
            resourceInputs["masked"] = args ? args.masked : undefined;
            resourceInputs["mountPoint"] = args ? args.mountPoint : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["newDbid"] = args ? args.newDbid : undefined;
            resourceInputs["onlineLogGroups"] = args ? args.onlineLogGroups : undefined;
            resourceInputs["onlineLogSize"] = args ? args.onlineLogSize : undefined;
            resourceInputs["openResetLogs"] = args ? args.openResetLogs : undefined;
            resourceInputs["oracleInstanceName"] = args ? args.oracleInstanceName : undefined;
            resourceInputs["oracleRacCustomEnvFiles"] = args ? args.oracleRacCustomEnvFiles : undefined;
            resourceInputs["oracleRacCustomEnvVars"] = args ? args.oracleRacCustomEnvVars : undefined;
            resourceInputs["osPassword"] = args ? args.osPassword : undefined;
            resourceInputs["osUsername"] = args ? args.osUsername : undefined;
            resourceInputs["parentTdeKeystorePassword"] = args ? args.parentTdeKeystorePassword : undefined;
            resourceInputs["parentTdeKeystorePath"] = args ? args.parentTdeKeystorePath : undefined;
            resourceInputs["postRefreshes"] = args ? args.postRefreshes : undefined;
            resourceInputs["postRollbacks"] = args ? args.postRollbacks : undefined;
            resourceInputs["postScript"] = args ? args.postScript : undefined;
            resourceInputs["postSnapshots"] = args ? args.postSnapshots : undefined;
            resourceInputs["postStarts"] = args ? args.postStarts : undefined;
            resourceInputs["postStops"] = args ? args.postStops : undefined;
            resourceInputs["preRefreshes"] = args ? args.preRefreshes : undefined;
            resourceInputs["preRollbacks"] = args ? args.preRollbacks : undefined;
            resourceInputs["preScript"] = args ? args.preScript : undefined;
            resourceInputs["preSnapshots"] = args ? args.preSnapshots : undefined;
            resourceInputs["preStarts"] = args ? args.preStarts : undefined;
            resourceInputs["preStops"] = args ? args.preStops : undefined;
            resourceInputs["provisionType"] = args ? args.provisionType : undefined;
            resourceInputs["recoveryModel"] = args ? args.recoveryModel : undefined;
            resourceInputs["repositoryId"] = args ? args.repositoryId : undefined;
            resourceInputs["retentionPolicyId"] = args ? args.retentionPolicyId : undefined;
            resourceInputs["snapshotId"] = args ? args.snapshotId : undefined;
            resourceInputs["snapshotPolicyId"] = args ? args.snapshotPolicyId : undefined;
            resourceInputs["sourceDataId"] = args ? args.sourceDataId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetGroupId"] = args ? args.targetGroupId : undefined;
            resourceInputs["targetVcdbTdeKeystorePath"] = args ? args.targetVcdbTdeKeystorePath : undefined;
            resourceInputs["tdeExportedKeyFileSecret"] = args ? args.tdeExportedKeyFileSecret : undefined;
            resourceInputs["tdeKeyIdentifier"] = args ? args.tdeKeyIdentifier : undefined;
            resourceInputs["templateId"] = args ? args.templateId : undefined;
            resourceInputs["timestamp"] = args ? args.timestamp : undefined;
            resourceInputs["timestampInDatabaseTimezone"] = args ? args.timestampInDatabaseTimezone : undefined;
            resourceInputs["truncateLogOnCheckpoint"] = args ? args.truncateLogOnCheckpoint : undefined;
            resourceInputs["uniqueName"] = args ? args.uniqueName : undefined;
            resourceInputs["vcdbDatabaseName"] = args ? args.vcdbDatabaseName : undefined;
            resourceInputs["vcdbName"] = args ? args.vcdbName : undefined;
            resourceInputs["vcdbTdeKeyIdentifier"] = args ? args.vcdbTdeKeyIdentifier : undefined;
            resourceInputs["vdbRestart"] = args ? args.vdbRestart : undefined;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["databaseType"] = undefined /*out*/;
            resourceInputs["databaseVersion"] = undefined /*out*/;
            resourceInputs["fqdn"] = undefined /*out*/;
            resourceInputs["groupName"] = undefined /*out*/;
            resourceInputs["ipAddress"] = undefined /*out*/;
            resourceInputs["parentId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vdb.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Vdb resources.
 */
export interface VdbState {
    additionalMountPoints?: pulumi.Input<pulumi.Input<inputs.VdbAdditionalMountPoint>[]>;
    appdataConfigParams?: pulumi.Input<string>;
    appdataSourceParams?: pulumi.Input<string>;
    archiveLog?: pulumi.Input<boolean>;
    autoSelectRepository?: pulumi.Input<boolean>;
    auxiliaryTemplateId?: pulumi.Input<string>;
    bookmarkId?: pulumi.Input<string>;
    cdbId?: pulumi.Input<string>;
    cdbTdeKeystorePassword?: pulumi.Input<string>;
    cdcOnProvision?: pulumi.Input<boolean>;
    clusterNodeIds?: pulumi.Input<pulumi.Input<string>[]>;
    configParams?: pulumi.Input<string>;
    configureClones?: pulumi.Input<pulumi.Input<inputs.VdbConfigureClone>[]>;
    creationDate?: pulumi.Input<string>;
    customEnvFiles?: pulumi.Input<pulumi.Input<string>[]>;
    customEnvVars?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    databaseName?: pulumi.Input<string>;
    databaseType?: pulumi.Input<string>;
    databaseVersion?: pulumi.Input<string>;
    dbPassword?: pulumi.Input<string>;
    dbUsername?: pulumi.Input<string>;
    engineId?: pulumi.Input<string>;
    environmentId?: pulumi.Input<string>;
    environmentUserId?: pulumi.Input<string>;
    fileMappingRules?: pulumi.Input<string>;
    fqdn?: pulumi.Input<string>;
    groupName?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    listenerIds?: pulumi.Input<pulumi.Input<string>[]>;
    makeCurrentAccountOwner?: pulumi.Input<boolean>;
    masked?: pulumi.Input<boolean>;
    mountPoint?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    newDbid?: pulumi.Input<boolean>;
    onlineLogGroups?: pulumi.Input<number>;
    onlineLogSize?: pulumi.Input<number>;
    openResetLogs?: pulumi.Input<boolean>;
    oracleInstanceName?: pulumi.Input<string>;
    oracleRacCustomEnvFiles?: pulumi.Input<pulumi.Input<inputs.VdbOracleRacCustomEnvFile>[]>;
    oracleRacCustomEnvVars?: pulumi.Input<pulumi.Input<inputs.VdbOracleRacCustomEnvVar>[]>;
    osPassword?: pulumi.Input<string>;
    osUsername?: pulumi.Input<string>;
    parentId?: pulumi.Input<string>;
    parentTdeKeystorePassword?: pulumi.Input<string>;
    parentTdeKeystorePath?: pulumi.Input<string>;
    postRefreshes?: pulumi.Input<pulumi.Input<inputs.VdbPostRefresh>[]>;
    postRollbacks?: pulumi.Input<pulumi.Input<inputs.VdbPostRollback>[]>;
    postScript?: pulumi.Input<string>;
    postSnapshots?: pulumi.Input<pulumi.Input<inputs.VdbPostSnapshot>[]>;
    postStarts?: pulumi.Input<pulumi.Input<inputs.VdbPostStart>[]>;
    postStops?: pulumi.Input<pulumi.Input<inputs.VdbPostStop>[]>;
    preRefreshes?: pulumi.Input<pulumi.Input<inputs.VdbPreRefresh>[]>;
    preRollbacks?: pulumi.Input<pulumi.Input<inputs.VdbPreRollback>[]>;
    preScript?: pulumi.Input<string>;
    preSnapshots?: pulumi.Input<pulumi.Input<inputs.VdbPreSnapshot>[]>;
    preStarts?: pulumi.Input<pulumi.Input<inputs.VdbPreStart>[]>;
    preStops?: pulumi.Input<pulumi.Input<inputs.VdbPreStop>[]>;
    provisionType?: pulumi.Input<string>;
    recoveryModel?: pulumi.Input<string>;
    repositoryId?: pulumi.Input<string>;
    retentionPolicyId?: pulumi.Input<string>;
    snapshotId?: pulumi.Input<string>;
    snapshotPolicyId?: pulumi.Input<string>;
    sourceDataId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VdbTag>[]>;
    targetGroupId?: pulumi.Input<string>;
    targetVcdbTdeKeystorePath?: pulumi.Input<string>;
    tdeExportedKeyFileSecret?: pulumi.Input<string>;
    tdeKeyIdentifier?: pulumi.Input<string>;
    templateId?: pulumi.Input<string>;
    timestamp?: pulumi.Input<string>;
    timestampInDatabaseTimezone?: pulumi.Input<string>;
    truncateLogOnCheckpoint?: pulumi.Input<boolean>;
    uniqueName?: pulumi.Input<string>;
    vcdbDatabaseName?: pulumi.Input<string>;
    vcdbName?: pulumi.Input<string>;
    vcdbTdeKeyIdentifier?: pulumi.Input<string>;
    vdbRestart?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Vdb resource.
 */
export interface VdbArgs {
    additionalMountPoints?: pulumi.Input<pulumi.Input<inputs.VdbAdditionalMountPoint>[]>;
    appdataConfigParams?: pulumi.Input<string>;
    appdataSourceParams?: pulumi.Input<string>;
    archiveLog?: pulumi.Input<boolean>;
    autoSelectRepository?: pulumi.Input<boolean>;
    auxiliaryTemplateId?: pulumi.Input<string>;
    bookmarkId?: pulumi.Input<string>;
    cdbId?: pulumi.Input<string>;
    cdbTdeKeystorePassword?: pulumi.Input<string>;
    cdcOnProvision?: pulumi.Input<boolean>;
    clusterNodeIds?: pulumi.Input<pulumi.Input<string>[]>;
    configParams?: pulumi.Input<string>;
    configureClones?: pulumi.Input<pulumi.Input<inputs.VdbConfigureClone>[]>;
    customEnvFiles?: pulumi.Input<pulumi.Input<string>[]>;
    customEnvVars?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    databaseName?: pulumi.Input<string>;
    dbPassword?: pulumi.Input<string>;
    dbUsername?: pulumi.Input<string>;
    engineId?: pulumi.Input<string>;
    environmentId?: pulumi.Input<string>;
    environmentUserId?: pulumi.Input<string>;
    fileMappingRules?: pulumi.Input<string>;
    listenerIds?: pulumi.Input<pulumi.Input<string>[]>;
    makeCurrentAccountOwner?: pulumi.Input<boolean>;
    masked?: pulumi.Input<boolean>;
    mountPoint?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    newDbid?: pulumi.Input<boolean>;
    onlineLogGroups?: pulumi.Input<number>;
    onlineLogSize?: pulumi.Input<number>;
    openResetLogs?: pulumi.Input<boolean>;
    oracleInstanceName?: pulumi.Input<string>;
    oracleRacCustomEnvFiles?: pulumi.Input<pulumi.Input<inputs.VdbOracleRacCustomEnvFile>[]>;
    oracleRacCustomEnvVars?: pulumi.Input<pulumi.Input<inputs.VdbOracleRacCustomEnvVar>[]>;
    osPassword?: pulumi.Input<string>;
    osUsername?: pulumi.Input<string>;
    parentTdeKeystorePassword?: pulumi.Input<string>;
    parentTdeKeystorePath?: pulumi.Input<string>;
    postRefreshes?: pulumi.Input<pulumi.Input<inputs.VdbPostRefresh>[]>;
    postRollbacks?: pulumi.Input<pulumi.Input<inputs.VdbPostRollback>[]>;
    postScript?: pulumi.Input<string>;
    postSnapshots?: pulumi.Input<pulumi.Input<inputs.VdbPostSnapshot>[]>;
    postStarts?: pulumi.Input<pulumi.Input<inputs.VdbPostStart>[]>;
    postStops?: pulumi.Input<pulumi.Input<inputs.VdbPostStop>[]>;
    preRefreshes?: pulumi.Input<pulumi.Input<inputs.VdbPreRefresh>[]>;
    preRollbacks?: pulumi.Input<pulumi.Input<inputs.VdbPreRollback>[]>;
    preScript?: pulumi.Input<string>;
    preSnapshots?: pulumi.Input<pulumi.Input<inputs.VdbPreSnapshot>[]>;
    preStarts?: pulumi.Input<pulumi.Input<inputs.VdbPreStart>[]>;
    preStops?: pulumi.Input<pulumi.Input<inputs.VdbPreStop>[]>;
    provisionType?: pulumi.Input<string>;
    recoveryModel?: pulumi.Input<string>;
    repositoryId?: pulumi.Input<string>;
    retentionPolicyId?: pulumi.Input<string>;
    snapshotId?: pulumi.Input<string>;
    snapshotPolicyId?: pulumi.Input<string>;
    sourceDataId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VdbTag>[]>;
    targetGroupId?: pulumi.Input<string>;
    targetVcdbTdeKeystorePath?: pulumi.Input<string>;
    tdeExportedKeyFileSecret?: pulumi.Input<string>;
    tdeKeyIdentifier?: pulumi.Input<string>;
    templateId?: pulumi.Input<string>;
    timestamp?: pulumi.Input<string>;
    timestampInDatabaseTimezone?: pulumi.Input<string>;
    truncateLogOnCheckpoint?: pulumi.Input<boolean>;
    uniqueName?: pulumi.Input<string>;
    vcdbDatabaseName?: pulumi.Input<string>;
    vcdbName?: pulumi.Input<string>;
    vcdbTdeKeyIdentifier?: pulumi.Input<string>;
    vdbRestart?: pulumi.Input<boolean>;
}
