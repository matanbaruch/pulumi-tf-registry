// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getChangeSubscription(args: GetChangeSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetChangeSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getChangeSubscription:getChangeSubscription", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getChangeSubscription.
 */
export interface GetChangeSubscriptionArgs {
    name: string;
}

/**
 * A collection of values returned by getChangeSubscription.
 */
export interface GetChangeSubscriptionResult {
    readonly connectionCriteria: string;
    readonly description: string;
    readonly expirationTime: string;
    readonly id: string;
    readonly name: string;
    readonly requestCriteria: string;
    readonly resultCriteria: string;
    readonly type: string;
}
export function getChangeSubscriptionOutput(args: GetChangeSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetChangeSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getChangeSubscription(a, opts))
}

/**
 * A collection of arguments for invoking getChangeSubscription.
 */
export interface GetChangeSubscriptionOutputArgs {
    name: pulumi.Input<string>;
}
