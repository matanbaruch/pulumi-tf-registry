// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DefaultScimSubattribute extends pulumi.CustomResource {
    /**
     * Get an existing DefaultScimSubattribute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultScimSubattributeState, opts?: pulumi.CustomResourceOptions): DefaultScimSubattribute {
        return new DefaultScimSubattribute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/defaultScimSubattribute:DefaultScimSubattribute';

    /**
     * Returns true if the given object is an instance of DefaultScimSubattribute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultScimSubattribute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultScimSubattribute.__pulumiType;
    }

    /**
     * Specifies the suggested canonical type values for the sub-attribute.
     */
    public readonly canonicalValues!: pulumi.Output<string[]>;
    /**
     * Specifies whether the sub-attribute values are case sensitive.
     */
    public readonly caseExact!: pulumi.Output<boolean>;
    /**
     * A description for this SCIM Subattribute
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Specifies whether this attribute may have multiple values.
     */
    public readonly multiValued!: pulumi.Output<boolean>;
    /**
     * Specifies the circumstances under which the values of the sub-attribute can be written.
     */
    public readonly mutability!: pulumi.Output<string>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * Specifies the SCIM resource types that may be referenced. This property is only applicable for sub-attributes that are
     * of type 'reference'. Valid values are: A SCIM resource type (e.g., 'User' or 'Group'), 'external' - indicating the
     * resource is an external resource (e.g., such as a photo), or 'uri' - indicating that the reference is to a service
     * endpoint or an identifier (such as a schema urn).
     */
    public readonly referenceTypes!: pulumi.Output<string[]>;
    /**
     * Specifies whether this sub-attribute is required.
     */
    public readonly required!: pulumi.Output<boolean>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.DefaultScimSubattributeRequiredAction[]>;
    /**
     * The type of SCIM Subattribute resource. Options are ['scim-subattribute']
     */
    public /*out*/ readonly resourceType!: pulumi.Output<string>;
    /**
     * Specifies the circumstances under which the values of the sub-attribute are returned in response to a request.
     */
    public readonly returned!: pulumi.Output<string>;
    /**
     * Name of the parent SCIM Attribute
     */
    public readonly scimAttributeName!: pulumi.Output<string>;
    /**
     * Name of the parent SCIM Schema
     */
    public readonly scimSchemaName!: pulumi.Output<string>;
    /**
     * Specifies the data type for this sub-attribute.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a DefaultScimSubattribute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DefaultScimSubattributeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultScimSubattributeArgs | DefaultScimSubattributeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultScimSubattributeState | undefined;
            resourceInputs["canonicalValues"] = state ? state.canonicalValues : undefined;
            resourceInputs["caseExact"] = state ? state.caseExact : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["multiValued"] = state ? state.multiValued : undefined;
            resourceInputs["mutability"] = state ? state.mutability : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["referenceTypes"] = state ? state.referenceTypes : undefined;
            resourceInputs["required"] = state ? state.required : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
            resourceInputs["returned"] = state ? state.returned : undefined;
            resourceInputs["scimAttributeName"] = state ? state.scimAttributeName : undefined;
            resourceInputs["scimSchemaName"] = state ? state.scimSchemaName : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DefaultScimSubattributeArgs | undefined;
            if ((!args || args.scimAttributeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scimAttributeName'");
            }
            if ((!args || args.scimSchemaName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scimSchemaName'");
            }
            resourceInputs["canonicalValues"] = args ? args.canonicalValues : undefined;
            resourceInputs["caseExact"] = args ? args.caseExact : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["multiValued"] = args ? args.multiValued : undefined;
            resourceInputs["mutability"] = args ? args.mutability : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["referenceTypes"] = args ? args.referenceTypes : undefined;
            resourceInputs["required"] = args ? args.required : undefined;
            resourceInputs["returned"] = args ? args.returned : undefined;
            resourceInputs["scimAttributeName"] = args ? args.scimAttributeName : undefined;
            resourceInputs["scimSchemaName"] = args ? args.scimSchemaName : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
            resourceInputs["resourceType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultScimSubattribute.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DefaultScimSubattribute resources.
 */
export interface DefaultScimSubattributeState {
    /**
     * Specifies the suggested canonical type values for the sub-attribute.
     */
    canonicalValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether the sub-attribute values are case sensitive.
     */
    caseExact?: pulumi.Input<boolean>;
    /**
     * A description for this SCIM Subattribute
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether this attribute may have multiple values.
     */
    multiValued?: pulumi.Input<boolean>;
    /**
     * Specifies the circumstances under which the values of the sub-attribute can be written.
     */
    mutability?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the SCIM resource types that may be referenced. This property is only applicable for sub-attributes that are
     * of type 'reference'. Valid values are: A SCIM resource type (e.g., 'User' or 'Group'), 'external' - indicating the
     * resource is an external resource (e.g., such as a photo), or 'uri' - indicating that the reference is to a service
     * endpoint or an identifier (such as a schema urn).
     */
    referenceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether this sub-attribute is required.
     */
    required?: pulumi.Input<boolean>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.DefaultScimSubattributeRequiredAction>[]>;
    /**
     * The type of SCIM Subattribute resource. Options are ['scim-subattribute']
     */
    resourceType?: pulumi.Input<string>;
    /**
     * Specifies the circumstances under which the values of the sub-attribute are returned in response to a request.
     */
    returned?: pulumi.Input<string>;
    /**
     * Name of the parent SCIM Attribute
     */
    scimAttributeName?: pulumi.Input<string>;
    /**
     * Name of the parent SCIM Schema
     */
    scimSchemaName?: pulumi.Input<string>;
    /**
     * Specifies the data type for this sub-attribute.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DefaultScimSubattribute resource.
 */
export interface DefaultScimSubattributeArgs {
    /**
     * Specifies the suggested canonical type values for the sub-attribute.
     */
    canonicalValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether the sub-attribute values are case sensitive.
     */
    caseExact?: pulumi.Input<boolean>;
    /**
     * A description for this SCIM Subattribute
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether this attribute may have multiple values.
     */
    multiValued?: pulumi.Input<boolean>;
    /**
     * Specifies the circumstances under which the values of the sub-attribute can be written.
     */
    mutability?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the SCIM resource types that may be referenced. This property is only applicable for sub-attributes that are
     * of type 'reference'. Valid values are: A SCIM resource type (e.g., 'User' or 'Group'), 'external' - indicating the
     * resource is an external resource (e.g., such as a photo), or 'uri' - indicating that the reference is to a service
     * endpoint or an identifier (such as a schema urn).
     */
    referenceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether this sub-attribute is required.
     */
    required?: pulumi.Input<boolean>;
    /**
     * Specifies the circumstances under which the values of the sub-attribute are returned in response to a request.
     */
    returned?: pulumi.Input<string>;
    /**
     * Name of the parent SCIM Attribute
     */
    scimAttributeName: pulumi.Input<string>;
    /**
     * Name of the parent SCIM Schema
     */
    scimSchemaName: pulumi.Input<string>;
    /**
     * Specifies the data type for this sub-attribute.
     */
    type?: pulumi.Input<string>;
}
