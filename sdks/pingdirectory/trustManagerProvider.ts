// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TrustManagerProvider extends pulumi.CustomResource {
    /**
     * Get an existing TrustManagerProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TrustManagerProviderState, opts?: pulumi.CustomResourceOptions): TrustManagerProvider {
        return new TrustManagerProvider(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/trustManagerProvider:TrustManagerProvider';

    /**
     * Returns true if the given object is an instance of TrustManagerProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TrustManagerProvider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrustManagerProvider.__pulumiType;
    }

    /**
     * Indicate whether the Trust Manager Provider is enabled for use.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Trust Manager Provider. Each configuration
     * property should be given in the form 'name=value'.
     */
    public readonly extensionArguments!: pulumi.Output<string[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Trust Manager Provider.
     */
    public readonly extensionClass!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether certificates issued by an authority included in the JVM's set of default issuers should be
     * automatically trusted, even if they would not otherwise be trusted by this provider.
     */
    public readonly includeJvmDefaultIssuers!: pulumi.Output<boolean>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.TrustManagerProviderRequiredAction[]>;
    /**
     * Specifies the path to the file containing the trust information. It can be an absolute path or a path that is relative
     * to the Directory Server instance root.
     */
    public readonly trustStoreFile!: pulumi.Output<string | undefined>;
    /**
     * Specifies the clear-text PIN needed to access the File Based Trust Manager Provider.
     */
    public readonly trustStorePin!: pulumi.Output<string | undefined>;
    /**
     * Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to
     * access the File Based Trust Manager Provider.
     */
    public readonly trustStorePinFile!: pulumi.Output<string | undefined>;
    /**
     * The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Trust Manager Provider.
     */
    public readonly trustStorePinPassphraseProvider!: pulumi.Output<string | undefined>;
    /**
     * Specifies the format for the data in the trust store file.
     */
    public readonly trustStoreType!: pulumi.Output<string | undefined>;
    /**
     * The type of Trust Manager Provider resource. Options are ['blind', 'file-based', 'jvm-default', 'third-party']
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a TrustManagerProvider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TrustManagerProviderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TrustManagerProviderArgs | TrustManagerProviderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TrustManagerProviderState | undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["extensionArguments"] = state ? state.extensionArguments : undefined;
            resourceInputs["extensionClass"] = state ? state.extensionClass : undefined;
            resourceInputs["includeJvmDefaultIssuers"] = state ? state.includeJvmDefaultIssuers : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["trustStoreFile"] = state ? state.trustStoreFile : undefined;
            resourceInputs["trustStorePin"] = state ? state.trustStorePin : undefined;
            resourceInputs["trustStorePinFile"] = state ? state.trustStorePinFile : undefined;
            resourceInputs["trustStorePinPassphraseProvider"] = state ? state.trustStorePinPassphraseProvider : undefined;
            resourceInputs["trustStoreType"] = state ? state.trustStoreType : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as TrustManagerProviderArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["extensionArguments"] = args ? args.extensionArguments : undefined;
            resourceInputs["extensionClass"] = args ? args.extensionClass : undefined;
            resourceInputs["includeJvmDefaultIssuers"] = args ? args.includeJvmDefaultIssuers : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["trustStoreFile"] = args ? args.trustStoreFile : undefined;
            resourceInputs["trustStorePin"] = args?.trustStorePin ? pulumi.secret(args.trustStorePin) : undefined;
            resourceInputs["trustStorePinFile"] = args ? args.trustStorePinFile : undefined;
            resourceInputs["trustStorePinPassphraseProvider"] = args ? args.trustStorePinPassphraseProvider : undefined;
            resourceInputs["trustStoreType"] = args ? args.trustStoreType : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["trustStorePin"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(TrustManagerProvider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TrustManagerProvider resources.
 */
export interface TrustManagerProviderState {
    /**
     * Indicate whether the Trust Manager Provider is enabled for use.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Trust Manager Provider. Each configuration
     * property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Trust Manager Provider.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * Indicates whether certificates issued by an authority included in the JVM's set of default issuers should be
     * automatically trusted, even if they would not otherwise be trusted by this provider.
     */
    includeJvmDefaultIssuers?: pulumi.Input<boolean>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.TrustManagerProviderRequiredAction>[]>;
    /**
     * Specifies the path to the file containing the trust information. It can be an absolute path or a path that is relative
     * to the Directory Server instance root.
     */
    trustStoreFile?: pulumi.Input<string>;
    /**
     * Specifies the clear-text PIN needed to access the File Based Trust Manager Provider.
     */
    trustStorePin?: pulumi.Input<string>;
    /**
     * Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to
     * access the File Based Trust Manager Provider.
     */
    trustStorePinFile?: pulumi.Input<string>;
    /**
     * The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Trust Manager Provider.
     */
    trustStorePinPassphraseProvider?: pulumi.Input<string>;
    /**
     * Specifies the format for the data in the trust store file.
     */
    trustStoreType?: pulumi.Input<string>;
    /**
     * The type of Trust Manager Provider resource. Options are ['blind', 'file-based', 'jvm-default', 'third-party']
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TrustManagerProvider resource.
 */
export interface TrustManagerProviderArgs {
    /**
     * Indicate whether the Trust Manager Provider is enabled for use.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Trust Manager Provider. Each configuration
     * property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Trust Manager Provider.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * Indicates whether certificates issued by an authority included in the JVM's set of default issuers should be
     * automatically trusted, even if they would not otherwise be trusted by this provider.
     */
    includeJvmDefaultIssuers?: pulumi.Input<boolean>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the path to the file containing the trust information. It can be an absolute path or a path that is relative
     * to the Directory Server instance root.
     */
    trustStoreFile?: pulumi.Input<string>;
    /**
     * Specifies the clear-text PIN needed to access the File Based Trust Manager Provider.
     */
    trustStorePin?: pulumi.Input<string>;
    /**
     * Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to
     * access the File Based Trust Manager Provider.
     */
    trustStorePinFile?: pulumi.Input<string>;
    /**
     * The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Trust Manager Provider.
     */
    trustStorePinPassphraseProvider?: pulumi.Input<string>;
    /**
     * Specifies the format for the data in the trust store file.
     */
    trustStoreType?: pulumi.Input<string>;
    /**
     * The type of Trust Manager Provider resource. Options are ['blind', 'file-based', 'jvm-default', 'third-party']
     */
    type: pulumi.Input<string>;
}
