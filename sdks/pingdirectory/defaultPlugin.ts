// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DefaultPlugin extends pulumi.CustomResource {
    /**
     * Get an existing DefaultPlugin resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultPluginState, opts?: pulumi.CustomResourceOptions): DefaultPlugin {
        return new DefaultPlugin(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/defaultPlugin:DefaultPlugin';

    /**
     * Returns true if the given object is an instance of DefaultPlugin.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultPlugin {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultPlugin.__pulumiType;
    }

    /**
     * An optional SCIM filter that will be ANDed with the filter created to identify the account in the PingOne service that
     * corresponds to the local entry. Only the "eq", "sw", "and", and "or" filter types may be used.
     */
    public readonly additionalUserMappingScimFilter!: pulumi.Output<string>;
    /**
     * The hostname or IP address of the SNMP master agent.
     */
    public readonly agentxAddress!: pulumi.Output<string>;
    /**
     * The port number on which the SNMP master agent will be contacted.
     */
    public readonly agentxPort!: pulumi.Output<number>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: Indicates whether to overwrite the user's
     * local password even if the password used to authenticate to the PingOne service would have failed validation if the user
     * attempted to set it directly. - `pass-through-authentication`: Indicates whether updates to the local password value
     * should accept passwords that do not meet password policy constraints. - `pluggable-pass-through-authentication`:
     * Indicates whether to overwrite the user's local password even if the password used to authenticate to the external
     * service would have failed validation if the user attempted to set it directly.
     */
    public readonly allowLaxPassThroughAuthenticationPasswords!: pulumi.Output<boolean>;
    /**
     * Specifies the OIDs of the controls that are allowed to be present in operations to coalesce. These controls are passed
     * through when the request is validated, but they will not be included when the background thread applies the coalesced
     * modify requests.
     */
    public readonly allowedRequestControls!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - `dn-mapper`: Indicates whether DNs in response messages containing the target DN
     * should always be remapped back to the source DN. If this is "false", then mapping will be performed for a response
     * message only if one or more elements of the associated request are mapped. Otherwise, the mapping will be performed for
     * all responses regardless of whether the mapping was applied to the request. - `attribute-mapper`: Indicates whether the
     * target attribute in response messages should always be remapped back to the source attribute. If this is "false", then
     * the mapping will be performed for a response message only if one or more elements of the associated request are mapped.
     * Otherwise, the mapping will be performed for all responses regardless of whether the mapping was applied to the request.
     */
    public readonly alwaysMapResponses!: pulumi.Output<boolean>;
    /**
     * Specifies the API endpoint for the PingOne web service.
     */
    public readonly apiUrl!: pulumi.Output<string>;
    /**
     * Specifies whether to append to existing log files.
     */
    public readonly append!: pulumi.Output<boolean>;
    /**
     * When the `type` attribute is set to: - `seven-bit-clean`: Specifies the name or OID of an attribute type for which
     * values should be checked to ensure that they are 7-bit clean. - `encrypt-attribute-values`: The attribute types whose
     * values should be encrypted. - `composed-attribute`: The name or OID of the attribute type for which values are to be
     * generated. - `referential-integrity`: Specifies the attribute types for which referential integrity is to be maintained.
     */
    public readonly attributeTypes!: pulumi.Output<string[]>;
    /**
     * Specifies the API endpoint for the PingOne authentication service.
     */
    public readonly authUrl!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - One of [`clean-up-expired-pingfederate-persistent-access-grants`,
     * `purge-expired-data`, `clean-up-inactive-pingfederate-persistent-sessions`,
     * `clean-up-expired-pingfederate-persistent-sessions`]: Only entries located within the subtree specified by this base DN
     * are eligible for purging. - `internal-search-rate`: Specifies the base DN to use for the searches to perform. -
     * `modifiable-password-policy-state`: A base DN that may be used to identify entries that should support the
     * ds-pwp-modifiable-state-json operational attribute. - `seven-bit-clean`: Specifies the base DN below which the checking
     * is performed. - `search-shutdown`: The base DN to use for the search. - `referral-on-update`: Specifies a base DN for
     * requests for which to send referrals in response to update operations. - `referential-integrity`: Specifies the base DN
     * that limits the scope within which referential integrity is maintained. - `unique-attribute`: Specifies a base DN within
     * which the attribute must be unique.
     */
    public readonly baseDns!: pulumi.Output<string[]>;
    /**
     * A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of
     * a combination of static text and attribute values and other directives enclosed in curly braces. For example, the value
     * "cn={cn},ou=People,dc=example,dc=com" indicates that the remote bind DN should be constructed from the text "cn="
     * followed by the value of the local entry's cn attribute followed by the text "ou=People,dc=example,dc=com". If an
     * attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the
     * name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a
     * bind DN pattern of "{seeAlso}" would be appropriate). Note that a bind DN pattern can be used to construct a bind DN
     * that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a
     * Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an
     * alternative to a distinguished name.
     */
    public readonly bindDnPattern!: pulumi.Output<string>;
    /**
     * A passphrase that may be used to generate the key for encrypting passwords stored in the changelog. The same passphrase
     * also needs to be set (either through the "changelog-password-decryption-key" property or the
     * "changelog-password-decryption-key-passphrase-provider" property) in the Global Sync Configuration in the Data Sync
     * Server.
     */
    public readonly changelogPasswordEncryptionKey!: pulumi.Output<string>;
    /**
     * A passphrase provider that may be used to obtain the passphrase that will be used to generate the key for encrypting
     * passwords stored in the changelog. The same passphrase also needs to be set (either through the
     * "changelog-password-decryption-key" property or the "changelog-password-decryption-key-passphrase-provider" property) in
     * the Global Sync Configuration in the Data Sync Server.
     */
    public readonly changelogPasswordEncryptionKeyPassphraseProvider!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `stats-collector`: Some of the calculated statistics, such as the average and
     * maximum queue sizes, can use multiple samples within a log interval. This value controls how often samples are gathered,
     * and setting this value too small can have an adverse impact on performance. - `periodic-stats-logger`: Some of the
     * calculated statistics, such as the average and maximum queue sizes, can use multiple samples within a log interval. This
     * value controls how often samples are gathered. It should be a multiple of the log-interval.
     */
    public readonly collectionInterval!: pulumi.Output<string>;
    /**
     * The maximum amount of time to wait between attempts to establish a connection to the master agent.
     */
    public readonly connectRetryMaxWait!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: A reference to connection criteria that
     * will be used to indicate which bind requests should be passed through to the PingOne service. -
     * `pass-through-authentication`: Specifies a set of connection criteria that must match the client associated with the
     * bind request for the bind to be passed through to an alternate server. - `simple-to-external-bind`: Specifies a
     * connection criteria object that may be used to indicate the set of clients for which this plugin should be used. If a
     * value is provided, then this plugin will only be used for requests from client connections matching this criteria. -
     * `delay`: Specifies a set of connection criteria used to indicate that only operations from clients matching this
     * criteria should be subject to the configured delay. - `pluggable-pass-through-authentication`: A reference to connection
     * criteria that will be used to indicate which bind requests should be passed through to the external authentication
     * service.
     */
    public readonly connectionCriteria!: pulumi.Output<string>;
    /**
     * The SNMP context name for this sub-agent. The context name must not be longer than 30 ASCII characters. Each server in a
     * topology must have a unique SNMP context name.
     */
    public readonly contextName!: pulumi.Output<string>;
    /**
     * When the datetime-format property is configured with a value of "custom", this specifies the format (using a string
     * compatible with the java.text.SimpleDateFormat class) that will be used to search for expired data.
     */
    public readonly customDatetimeFormat!: pulumi.Output<string>;
    /**
     * Specifies the time zone to use when generating a date string using the configured custom-datetime-format value. The
     * provided value must be accepted by java.util.TimeZone.getTimeZone.
     */
    public readonly customTimezone!: pulumi.Output<string>;
    /**
     * The LDAP attribute that determines when data should be deleted. This could store the expiration time, or it could store
     * the creation time and the expiration-offset property specifies the duration before data is deleted.
     */
    public readonly datetimeAttribute!: pulumi.Output<string>;
    /**
     * Specifies the format of the datetime stored within the entry that determines when data should be purged.
     */
    public readonly datetimeFormat!: pulumi.Output<string>;
    /**
     * The top-level JSON field within the configured datetime-attribute that determines when data should be deleted. This
     * could store the expiration time, or it could store the creation time and the expiration-offset property specifies the
     * duration before data is deleted.
     */
    public readonly datetimeJsonField!: pulumi.Output<string>;
    /**
     * Specifies the names of password storage schemes that to be used for encoding passwords contained in attributes with the
     * auth password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password
     * policy should be used to govern them.
     */
    public readonly defaultAuthPasswordStorageSchemes!: pulumi.Output<string[]>;
    /**
     * Specifies the names of the password storage schemes to be used for encoding passwords contained in attributes with the
     * user password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password
     * policy is to be used to govern them.
     */
    public readonly defaultUserPasswordStorageSchemes!: pulumi.Output<string[]>;
    /**
     * The delay to inject for operations matching the associated criteria.
     */
    public readonly delay!: pulumi.Output<string>;
    /**
     * Specifies the length of time that the Directory Server should wait after sending the "force-gc-starting" administrative
     * alert before actually invoking the garbage collection processing.
     */
    public readonly delayAfterAlert!: pulumi.Output<string>;
    /**
     * Specifies the length of time that the Directory Server should wait after successfully completing the garbage collection
     * processing, before removing the "force-gc-starting" administrative alert, which marks the server as unavailable.
     */
    public readonly delayPostGc!: pulumi.Output<string>;
    /**
     * A description for this Plugin
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external
     * servers.
     */
    public readonly dnMaps!: pulumi.Output<string[]>;
    /**
     * This property controls whether a value in the output is shown as empty if the value is zero.
     */
    public readonly emptyInsteadOfZero!: pulumi.Output<boolean>;
    /**
     * Indicates whether DN mapping should be applied to the values of attributes with appropriate syntaxes.
     */
    public readonly enableAttributeMapping!: pulumi.Output<boolean>;
    /**
     * When the `type` attribute is set to: - `dn-mapper`: Indicates whether DN mapping should be applied to DNs that may be
     * present in specific controls. DN mapping will only be applied for control types which are specifically supported by the
     * DN mapper plugin. - `attribute-mapper`: Indicates whether mapping should be applied to attribute types that may be
     * present in specific controls. If enabled, attribute mapping will only be applied for control types which are
     * specifically supported by the attribute mapper plugin.
     */
    public readonly enableControlMapping!: pulumi.Output<boolean>;
    /**
     * Indicates whether the profiler plug-in is to start collecting data automatically when the Directory Server is started.
     */
    public readonly enableProfilingOnStartup!: pulumi.Output<boolean>;
    /**
     * Indicates whether the plug-in is enabled for use.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided,
     * the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used
     * to obtain a list of the encryption settings definitions available in the server.
     */
    public readonly encryptionSettingsDefinitionId!: pulumi.Output<string>;
    /**
     * Specifies the level of detail to include for each entry cache.
     */
    public readonly entryCacheInfo!: pulumi.Output<string>;
    /**
     * Specifies the PingOne Environment that will be associated with this PingOne Pass Through Authentication Plugin.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * Specifies the name or OID of an attribute type which may be updated in a modify or modify DN operation without causing
     * the modifiersName and modifyTimestamp values to be updated for that entry.
     */
    public readonly excludeAttributes!: pulumi.Output<string[]>;
    /**
     * The set of base DNs below which composed values will not be generated.
     */
    public readonly excludeBaseDns!: pulumi.Output<string[]>;
    /**
     * The set of search filters that identify entries for which composed values will not be generated.
     */
    public readonly excludeFilters!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - `purge-expired-data`: The duration to wait after the value specified in
     * datetime-attribute (and optionally datetime-json-field) before purging the data. -
     * `clean-up-inactive-pingfederate-persistent-sessions`: Sessions whose last activity timestamp is older than this offset
     * will be removed.
     */
    public readonly expirationOffset!: pulumi.Output<string>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Plugin. Each configuration property should be
     * given in the form 'name=value'.
     */
    public readonly extensionArguments!: pulumi.Output<string[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Plugin.
     */
    public readonly extensionClass!: pulumi.Output<string>;
    /**
     * Specifies a prefix which will be used in front of the randomly-selected numeric value in all search filters used. If no
     * upper bound is defined, then this should contain the entire filter string.
     */
    public readonly filterPrefix!: pulumi.Output<string>;
    /**
     * Specifies a suffix which will be used after of the randomly-selected numeric value in all search filters used. If no
     * upper bound is defined, then this should be omitted.
     */
    public readonly filterSuffix!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `modifiable-password-policy-state`: A filter that may be used to identify entries
     * that should support the ds-pwp-modifiable-state-json operational attribute. - `search-shutdown`: The filter to use for
     * the search. - `purge-expired-data`: Only entries that match this LDAP filter will be eligible for having data purged. -
     * `unique-attribute`: Specifies the search filter to apply to determine if attribute uniqueness is enforced for the
     * matching entries.
     */
    public readonly filters!: pulumi.Output<string[]>;
    /**
     * Specifies the level of detail to include for Gauges.
     */
    public readonly gaugeInfo!: pulumi.Output<string>;
    /**
     * Indicates whether this plugin should store metric samples on disk for use by the Data Metrics Server. If the Stats
     * Collector Plugin is only being used to collect metrics for one or more StatsD Monitoring Endpoints, then this can be set
     * to false to prevent unnecessary I/O.
     */
    public readonly generateCollectorFiles!: pulumi.Output<boolean>;
    /**
     * This property controls whether the header prefix, which applies to a group of columns, appears at the start of each
     * column header or only the first column in a group.
     */
    public readonly headerPrefixPerColumn!: pulumi.Output<boolean>;
    /**
     * Specifies the boundary values that will be used to separate the processing times into categories. Values should be
     * specified as durations, and all values must be greater than zero.
     */
    public readonly histogramCategoryBoundaries!: pulumi.Output<string[]>;
    /**
     * The format of the data in the processing time histogram.
     */
    public readonly histogramFormat!: pulumi.Output<string>;
    /**
     * Specifies the operation type(s) to use when outputting the response time histogram data. The order of the operations
     * here determines the order of the columns in the output. Use the per-application-ldap-stats setting to further control
     * this.
     */
    public readonly histogramOpTypes!: pulumi.Output<string[]>;
    /**
     * Specifies the level of detail to include about the host system resource utilization including CPU, memory, disk and
     * network activity.
     */
    public readonly hostInfos!: pulumi.Output<string[]>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. A reference to an HTTP proxy server that should be used for
     * requests sent to the PingOne service.
     */
    public readonly httpProxyExternalServer!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: A set of password policy state error
     * conditions that should not be enforced when authentication succeeds when attempted in the PingOne service. This option
     * can only be used if try-local-bind is true. - `pluggable-pass-through-authentication`: A set of password policy state
     * error conditions that should not be enforced when authentication succeeds when attempted in the external service. This
     * option can only be used if try-local-bind is true.
     */
    public readonly ignoredPasswordPolicyStateErrorConditions!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - `search-shutdown`: The name of an attribute that should be included in the
     * results. This may include any token which is allowed as a requested attribute in search requests, including the name of
     * an attribute, an asterisk (to indicate all user attributes), a plus sign (to indicate all operational attributes), an
     * object class name preceded with an at symbol (to indicate all attributes associated with that object class), an
     * attribute name preceded by a caret (to indicate that attribute should be excluded), or an object class name preceded by
     * a caret and an at symbol (to indicate that all attributes associated with that object class should be excluded). -
     * `last-mod`: Specifies the name or OID of an attribute type that must be updated in order for the modifiersName and
     * modifyTimestamp attributes to be updated in the target entry.
     */
    public readonly includeAttributes!: pulumi.Output<string[]>;
    /**
     * The set of base DNs below which composed values may be generated.
     */
    public readonly includeBaseDns!: pulumi.Output<string[]>;
    /**
     * The set of search filters that identify entries for which composed values may be generated.
     */
    public readonly includeFilters!: pulumi.Output<string[]>;
    /**
     * Indicates whether operation processing times should include the time spent waiting on the work queue. This will only be
     * available if the work queue is configured to monitor the queue time.
     */
    public readonly includeQueueTime!: pulumi.Output<boolean>;
    /**
     * If statistics should not be included for all applications, this property names the subset of applications that should be
     * included.
     */
    public readonly includedLdapApplications!: pulumi.Output<string[]>;
    /**
     * Specifies the types of statistics related to LDAP connections and operation processing that should be included in the
     * output.
     */
    public readonly includedLdapStats!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: The base DNs for the local users whose
     * authentication attempts may be passed through to the PingOne service. - `pass-through-authentication`: The base DNs for
     * the local users whose authentication attempts may be passed through to an alternate server. -
     * `pluggable-pass-through-authentication`: The base DNs for the local users whose authentication attempts may be passed
     * through to the external authentication service.
     */
    public readonly includedLocalEntryBaseDns!: pulumi.Output<string[]>;
    /**
     * Specifies whether statistics related to resource utilization such as JVM memory.
     */
    public readonly includedResourceStats!: pulumi.Output<string[]>;
    /**
     * Specifies the initial number of connections to establish to each external server against which authentication may be
     * attempted.
     */
    public readonly initialConnections!: pulumi.Output<number>;
    /**
     * Indicates whether to update the last access time for an entry targeted by a bind operation if the bind is unsuccessful.
     */
    public readonly invokeForFailedBinds!: pulumi.Output<boolean>;
    /**
     * Indicates whether the plug-in should be invoked for internal operations.
     */
    public readonly invokeForInternalOperations!: pulumi.Output<boolean>;
    /**
     * Specifies the days of the week which the Periodic GC Plugin should run. If no values are provided, then the plugin will
     * run every day at the specified time.
     */
    public readonly invokeGcDayOfWeeks!: pulumi.Output<string[]>;
    /**
     * Specifies the times of the day at which garbage collection may be explicitly invoked. The times should be specified in
     * "HH:MM" format, with "HH" as a two-digit numeric value between 00 and 23 representing the hour of the day, and MM as a
     * two-digit numeric value between 00 and 59 representing the minute of the hour. All times will be interpreted in the UTC
     * time zone.
     */
    public readonly invokeGcTimeUtcs!: pulumi.Output<string[]>;
    /**
     * Specifies the level of detail to include for the LDAP changelog.
     */
    public readonly ldapChangelogInfo!: pulumi.Output<string>;
    /**
     * Specifies the level of detail to include about the LDAP connection handlers.
     */
    public readonly ldapInfo!: pulumi.Output<string>;
    /**
     * The number of lines to log between logging the header line that summarizes the columns in the table.
     */
    public readonly linesBetweenHeader!: pulumi.Output<number>;
    /**
     * Specifies the level of detail to include about the Local DB Backends.
     */
    public readonly localDbBackendInfo!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `periodic-stats-logger`: The file name to use for the log files generated by the
     * Periodic Stats Logger Plugin. The path to the file can be specified either as relative to the server root or as an
     * absolute path. - `monitor-history`: The file name to use for the log files generated by the Monitor History Plugin. The
     * path to the file can be specified either as relative to the server root or as an absolute path. -
     * `referential-integrity`: Specifies the log file location where the update records are written when the plug-in is in
     * background-mode processing.
     */
    public readonly logFile!: pulumi.Output<string>;
    /**
     * Specifies the format to use when logging server statistics.
     */
    public readonly logFileFormat!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `periodic-stats-logger`: The UNIX permissions of the log files created by this
     * Periodic Stats Logger Plugin. - `monitor-history`: The UNIX permissions of the log files created by this Monitor History
     * Plugin.
     */
    public readonly logFilePermissions!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `periodic-stats-logger`: The duration between statistics collection and logging.
     * A new line is logged to the output for each interval. Setting this value too small can have an impact on performance. -
     * `monitor-history`: The duration between logging dumps of cn=monitor to a file.
     */
    public readonly logInterval!: pulumi.Output<string>;
    /**
     * Specifies the behavior that the server should exhibit if an error occurs during logging processing.
     */
    public readonly loggingErrorBehavior!: pulumi.Output<string>;
    /**
     * Specifies the lower bound for the numeric value which will be inserted into the search filter.
     */
    public readonly lowerBound!: pulumi.Output<number>;
    /**
     * Specifies a set of specific attributes for which DN mapping should be applied. This will only be applicable if the
     * enable-attribute-mapping property has a value of "true". Any attributes listed must be defined in the server schema with
     * either the distinguished name syntax or the name and optional UID syntax.
     */
    public readonly mapAttributes!: pulumi.Output<string[]>;
    /**
     * Specifies the maximum number of connections to maintain to each external server against which authentication may be
     * attempted. This value must be greater than or equal to the value for the initial-connections property.
     */
    public readonly maxConnections!: pulumi.Output<number>;
    /**
     * Specifies the maximum number of entries that should be updated in a search operation. Only search result entries
     * actually returned to the client may have their last access time updated, but because a single search operation may
     * return a very large number of entries, the plugin will only update entries if no more than a specified number of entries
     * are updated.
     */
    public readonly maxSearchResultEntriesToUpdate!: pulumi.Output<number>;
    /**
     * Specifies the maximum frequency with which last access time values should be written for an entry. This may help limit
     * the rate of internal write operations processed in the server.
     */
    public readonly maxUpdateFrequency!: pulumi.Output<string>;
    /**
     * This setting smooths out the performance impact on the server by throttling the purging to the specified maximum number
     * of updates per second. To avoid a large backlog, this value should be set comfortably above the average rate that
     * expired data is generated. When purge-behavior is set to subtree-delete-entries, then deletion of the entire subtree is
     * considered a single update for the purposes of throttling.
     */
    public readonly maxUpdatesPerSecond!: pulumi.Output<number>;
    /**
     * An integer property that specifies the maximum number of membership changes that will be supported in a single modify
     * operation. A value of zero indicates that modify operations targeting the group entry should not be permitted to alter
     * the set of members for the group.
     */
    public readonly maximumMembershipUpdatesPerModify!: pulumi.Output<number>;
    /**
     * The behavior to exhibit for source attributes that have multiple values.
     */
    public readonly multiValuedAttributeBehavior!: pulumi.Output<string>;
    /**
     * The behavior to exhibit if multiple attribute types are specified.
     */
    public readonly multipleAttributeBehavior!: pulumi.Output<string>;
    /**
     * The behavior to exhibit if the plugin is configured with multiple value patterns.
     */
    public readonly multipleValuePatternBehavior!: pulumi.Output<string>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * The number of threads used to delete expired entries.
     */
    public readonly numDeleteThreads!: pulumi.Output<number>;
    /**
     * This controls how many of the most expensive phases are included per operation type in the monitor entry.
     */
    public readonly numMostExpensivePhasesShown!: pulumi.Output<number>;
    /**
     * Specifies the number of concurrent threads that should be used to process the search operations.
     */
    public readonly numThreads!: pulumi.Output<number>;
    /**
     * The number of worker threads to use to handle SNMP requests.
     */
    public readonly numWorkerThreads!: pulumi.Output<number>;
    /**
     * Specifies the OAuth Client ID used to authenticate connections to the PingOne API.
     */
    public readonly oauthClientId!: pulumi.Output<string>;
    /**
     * Specifies the OAuth Client Secret used to authenticate connections to the PingOne API.
     */
    public readonly oauthClientSecret!: pulumi.Output<string>;
    /**
     * Specifies a passphrase provider that can be used to obtain the OAuth Client Secret used to authenticate connections to
     * the PingOne API.
     */
    public readonly oauthClientSecretPassphraseProvider!: pulumi.Output<string>;
    /**
     * Specifies the types of operations that should result in access time updates.
     */
    public readonly operationTypes!: pulumi.Output<string[]>;
    /**
     * The path of an LDIF file that should be created with the results of the search.
     */
    public readonly outputFile!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: Indicates whether to attempt the
     * authentication in the PingOne service if the local user entry includes a password. This property will only be used if
     * try-local-bind is true. - `pass-through-authentication`: Indicates whether the bind attempt should be attempted against
     * a remote server in the event that the local bind fails but the local password is present. -
     * `pluggable-pass-through-authentication`: Indicates whether to attempt the authentication in the external service if the
     * local user entry includes a password. This property will be ignored if try-local-bind is false.
     */
    public readonly overrideLocalPassword!: pulumi.Output<boolean>;
    /**
     * The component used to manage authentication with the external authentication service.
     */
    public readonly passThroughAuthenticationHandler!: pulumi.Output<string>;
    /**
     * In a replicated environment, this determines the order in which peer servers should attempt to purge data.
     */
    public readonly peerServerPriorityIndex!: pulumi.Output<number>;
    /**
     * Controls whether per application LDAP statistics are included in the output for selected LDAP operation statistics.
     */
    public readonly perApplicationLdapStats!: pulumi.Output<string>;
    /**
     * The amount of time between consecutive pings sent by the sub-agent on its connection to the master agent. A value of
     * zero disables the sending of pings by the sub-agent.
     */
    public readonly pingInterval!: pulumi.Output<string>;
    /**
     * Specifies the set of plug-in types for the plug-in, which specifies the times at which the plug-in is invoked.
     */
    public readonly pluginTypes!: pulumi.Output<string[]>;
    /**
     * This specifies how often the plugin should check for expired data. It also controls the offset of peer servers (see the
     * peer-server-priority-index for more information).
     */
    public readonly pollingInterval!: pulumi.Output<string>;
    /**
     * Indicates whether the server should prevent attempts to add a group as a regular member of an inverted static group. If
     * the members of another group should be considered members of an inverted static group, then the other group should be
     * added as a nested group rather than a regular member.
     */
    public readonly preventAddingGroupsAsInvertedStaticGroupMembers!: pulumi.Output<boolean>;
    /**
     * Indicates whether the server should prevent updates to user entries that attempt to add them as a member of an inverted
     * static group that does not exist.
     */
    public readonly preventAddingMembersToNonexistentGroups!: pulumi.Output<boolean>;
    /**
     * Indicates whether this Unique Attribute Plugin should reject a change that would result in one or more conflicts, even
     * if those conflicts only exist in soft-deleted entries.
     */
    public readonly preventConflictsWithSoftDeletedEntries!: pulumi.Output<boolean>;
    /**
     * Indicates whether the server should prevent updates to inverted static groups that add references to nested groups that
     * don't exist.
     */
    public readonly preventNestingNonexistentGroups!: pulumi.Output<boolean>;
    /**
     * An extension that should be appended to the name of an existing output file rather than deleting it. If a file already
     * exists with the full previous file name, then it will be deleted before the current file is renamed to become the
     * previous file.
     */
    public readonly previousFileExtension!: pulumi.Output<string>;
    /**
     * Specifies the action that should be taken by the profiler.
     */
    public readonly profileAction!: pulumi.Output<string>;
    /**
     * Specifies the path to the directory where profile information is to be written. This path may be either an absolute path
     * or a path that is relative to the root of the Directory Server instance.
     */
    public readonly profileDirectory!: pulumi.Output<string>;
    /**
     * Specifies the sample interval in milliseconds to be used when capturing profiling information in the server.
     */
    public readonly profileSampleInterval!: pulumi.Output<string>;
    /**
     * Specifies whether to delete expired entries or attribute values. By default entries are deleted.
     */
    public readonly purgeBehavior!: pulumi.Output<string>;
    /**
     * The level of support that the server should offer to allow treating search and compare operations targeting inverted
     * static groups as if they were traditional static groups.
     */
    public readonly readOperationSupport!: pulumi.Output<string>;
    /**
     * Specifies the base URL to use for the referrals generated by this plugin. It should include only the scheme, address,
     * and port to use to communicate with the target server (e.g., "ldap://server.example.com:389/").
     */
    public readonly referralBaseUrls!: pulumi.Output<string[]>;
    /**
     * Specifies the level of detail to include about replication.
     */
    public readonly replicationInfo!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `last-access-time`: Specifies a set of request criteria that may be used to
     * indicate whether to apply access time updates for the associated operation. - `ping-one-pass-through-authentication`: A
     * reference to request criteria that will be used to indicate which bind requests should be passed through to the PingOne
     * service. - `sub-operation-timing`: Specifies a set of request criteria used to indicate that only operations for
     * requests matching this criteria should be counted when aggregating timing data. - `third-party`: Specifies a set of
     * request criteria that may be used to indicate that this Third Party Plugin should only be invoked for operations in
     * which the associated request matches this criteria. - `pass-through-authentication`: Specifies a set of request criteria
     * that must match the bind request for the bind to be passed through to an alternate server. - `simple-to-external-bind`:
     * Specifies a request criteria object that may be used to indicate the set of requests for which this plugin should be
     * used. If a value is provided, then this plugin will only be used for bind requests matching this criteria. -
     * `coalesce-modifications`: A reference to request criteria that indicates which modify requests should be coalesced. -
     * `delay`: Specifies a set of request criteria used to indicate that only operations for requests matching this criteria
     * should be subject to the configured delay. - `groovy-scripted`: Specifies a set of request criteria that may be used to
     * indicate that this Groovy Scripted Plugin should only be invoked for operations in which the associated request matches
     * this criteria. - `pluggable-pass-through-authentication`: A reference to request criteria that will be used to indicate
     * which bind requests should be passed through to the external authentication service.
     */
    public readonly requestCriteria!: pulumi.Output<string>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.DefaultPluginRequiredAction[]>;
    /**
     * The type of Plugin resource. Options are ['last-access-time', 'stats-collector',
     * 'traditional-static-group-support-for-inverted-static-groups', 'internal-search-rate',
     * 'modifiable-password-policy-state', 'seven-bit-clean', 'clean-up-expired-pingfederate-persistent-access-grants',
     * 'periodic-gc', 'ping-one-pass-through-authentication', 'changelog-password-encryption', 'processing-time-histogram',
     * 'search-shutdown', 'periodic-stats-logger', 'purge-expired-data', 'change-subscription-notification',
     * 'sub-operation-timing', 'third-party', 'encrypt-attribute-values', 'pass-through-authentication', 'dn-mapper',
     * 'monitor-history', 'referral-on-update', 'simple-to-external-bind', 'custom', 'snmp-subagent', 'coalesce-modifications',
     * 'password-policy-import', 'profiler', 'clean-up-inactive-pingfederate-persistent-sessions', 'composed-attribute',
     * 'ldap-result-code-tracker', 'attribute-mapper', 'delay', 'clean-up-expired-pingfederate-persistent-sessions',
     * 'groovy-scripted', 'last-mod', 'pluggable-pass-through-authentication', 'referential-integrity', 'unique-attribute',
     * 'inverted-static-group-referential-integrity']
     */
    public /*out*/ readonly resourceType!: pulumi.Output<string>;
    /**
     * Retain some older files to give greater perspective on how monitoring information has changed over time.
     */
    public readonly retainFilesSparselyByAge!: pulumi.Output<boolean>;
    /**
     * When the `type` attribute is set to: - `periodic-stats-logger`: The retention policy to use for the Periodic Stats
     * Logger Plugin . - `monitor-history`: The retention policy to use for the Monitor History Plugin .
     */
    public readonly retentionPolicies!: pulumi.Output<string[]>;
    /**
     * A listener that should be notified whenever a log file is rotated out of service.
     */
    public readonly rotationListeners!: pulumi.Output<string[]>;
    /**
     * The rotation policy to use for the Periodic Stats Logger Plugin .
     */
    public readonly rotationPolicies!: pulumi.Output<string[]>;
    /**
     * The duration between statistics collections. Setting this value too small can have an impact on performance. This value
     * should be a multiple of collection-interval.
     */
    public readonly sampleInterval!: pulumi.Output<string>;
    /**
     * Server monitoring data can include a small amount of personally identifiable information in the form of LDAP DNs and
     * search filters. Setting this property to true will redact this information from the monitor files. This should only be
     * used when necessary, as it reduces the information available in the archive and can increase the time to find the source
     * of support issues.
     */
    public readonly sanitize!: pulumi.Output<boolean>;
    /**
     * The scope to use for the search.
     */
    public readonly scope!: pulumi.Output<string>;
    /**
     * The set of arguments used to customize the behavior for the Scripted Plugin. Each configuration property should be given
     * in the form 'name=value'.
     */
    public readonly scriptArguments!: pulumi.Output<string[]>;
    /**
     * The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Plugin.
     */
    public readonly scriptClass!: pulumi.Output<string>;
    /**
     * The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the
     * search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.
     */
    public readonly searchBaseDn!: pulumi.Output<string>;
    /**
     * A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to
     * bind. For example, "(mail={uid:ldapFilterEscape}@example.com)" would construct a search filter to search for a user
     * whose entry in the local server contains a uid attribute whose value appears before "@example.com" in the mail attribute
     * in the external server. Note that the "ldapFilterEscape" modifier should almost always be used with attributes specified
     * in the pattern.
     */
    public readonly searchFilterPattern!: pulumi.Output<string>;
    /**
     * When enabled, separate monitor entries will be included for each application defined in the Global Configuration's
     * tracked-application property.
     */
    public readonly separateMonitorEntryPerTrackedApplication!: pulumi.Output<boolean>;
    /**
     * Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple
     * servers are defined.
     */
    public readonly serverAccessMode!: pulumi.Output<string>;
    /**
     * Specifies whether statistics related to resource utilization such as JVM memory and CPU/Network/Disk utilization.
     */
    public readonly serverInfo!: pulumi.Output<string>;
    /**
     * Specifies the LDAP external server(s) to which authentication attempts should be forwarded.
     */
    public readonly servers!: pulumi.Output<string[]>;
    /**
     * Specifies the maximum amount of time to wait for a session to the master agent to be established.
     */
    public readonly sessionTimeout!: pulumi.Output<string>;
    /**
     * Specifies the source attribute type that may appear in client requests which should be remapped to the target attribute.
     * Note that the source attribute type must be defined in the server schema and must not be equal to the target attribute
     * type.
     */
    public readonly sourceAttribute!: pulumi.Output<string>;
    /**
     * The behavior to exhibit for modify and modify DN operations that update an entry to remove source attributes in such a
     * way that this plugin would no longer generate any composed values for that entry.
     */
    public readonly sourceAttributeRemovalBehavior!: pulumi.Output<string>;
    /**
     * Specifies the source DN that may appear in client requests which should be remapped to the target DN. Note that the
     * source DN must not be equal to the target DN.
     */
    public readonly sourceDn!: pulumi.Output<string>;
    /**
     * Specifies the level of detail to include about the status summary monitor entry.
     */
    public readonly statusSummaryInfo!: pulumi.Output<string>;
    /**
     * If the server is idle during the specified interval, then do not log any output if this property is set to true. The
     * server is idle if during the interval, no new connections were established, no operations were processed, and no
     * operations are pending.
     */
    public readonly suppressIfIdle!: pulumi.Output<boolean>;
    /**
     * Specifies the target attribute type to which the source attribute type should be mapped. Note that the target attribute
     * type must be defined in the server schema and must not be equal to the source attribute type.
     */
    public readonly targetAttribute!: pulumi.Output<string>;
    /**
     * The behavior to exhibit if the target attribute exists when initially populating the entry with composed values (whether
     * during an LDIF import, an add operation, or an invocation of the populate composed attribute values task).
     */
    public readonly targetAttributeExistsDuringInitialPopulationBehavior!: pulumi.Output<string>;
    /**
     * Specifies the DN to which the source DN should be mapped. Note that the target DN must not be equal to the source DN.
     */
    public readonly targetDn!: pulumi.Output<string>;
    /**
     * The object class that defines the type of traditional static group that this plugin will attempt to emulate for inverted
     * static groups.
     */
    public readonly traditionalStaticGroupObjectClass!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: Indicates whether to attempt the bind in
     * the local server first, or to only send it to the PingOne service. - `pass-through-authentication`: Indicates whether
     * the bind attempt should first be attempted against the local server. Depending on the value of the
     * override-local-password property, the bind attempt may then be attempted against a remote server if the local bind
     * fails. - `pluggable-pass-through-authentication`: Indicates whether to attempt the bind in the local server first and
     * only send the request to the external authentication service if the local bind attempt fails, or to only attempt the
     * bind in the external service.
     */
    public readonly tryLocalBind!: pulumi.Output<boolean>;
    /**
     * Specifies the type of attributes to check for value uniqueness.
     */
    public readonly types!: pulumi.Output<string[]>;
    /**
     * Specifies the interval in seconds when referential integrity updates are made.
     */
    public readonly updateInterval!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: Indicates whether to overwrite the user's
     * local password if the local bind fails but the authentication attempt succeeds when attempted in the PingOne service. -
     * `pass-through-authentication`: Indicates whether the local password value should be updated to the value used in the
     * bind request in the event that the local bind fails but the remote bind succeeds. -
     * `pluggable-pass-through-authentication`: Indicates whether to overwrite the user's local password if the local bind
     * fails but the authentication attempt succeeds when attempted in the external service. This property may only be set to
     * true if try-local-bind is also true.
     */
    public readonly updateLocalPassword!: pulumi.Output<boolean>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: This is the DN of the user that will be
     * used to overwrite the user's local password if update-local-password is set. The DN put here should be added to
     * 'ignore-changes-by-dn' in the appropriate Sync Source. - `pluggable-pass-through-authentication`: The DN of the
     * authorization identity that will be used when updating the user's local password if update-local-password is true. This
     * is primarily intended for use if the Data Sync Server will be used to synchronize passwords between the local server and
     * the external service, and in that case, the DN used here should also be added to the ignore-changes-by-dn property in
     * the appropriate Sync Source object in the Data Sync Server configuration.
     */
    public readonly updateLocalPasswordDn!: pulumi.Output<string>;
    /**
     * The behavior to exhibit for modify and modify DN operations that update one or more of the source attributes used in any
     * of the value patterns.
     */
    public readonly updateSourceAttributeBehavior!: pulumi.Output<string>;
    /**
     * The behavior to exhibit for modify and modify DN operations that attempt to update the set of values for the target
     * attribute.
     */
    public readonly updateTargetAttributeBehavior!: pulumi.Output<string>;
    /**
     * The behavior to exhibit for modify or modify DN operations that update an entry that previously did not satisfy either
     * the base DN or filter criteria, but now do satisfy that criteria.
     */
    public readonly updatedEntryNewlyMatchesCriteriaBehavior!: pulumi.Output<string>;
    /**
     * The behavior to exhibit for modify or modify DN operations that update an entry that previously satisfied the base DN
     * and filter criteria, but now no longer satisfies that criteria.
     */
    public readonly updatedEntryNoLongerMatchesCriteriaBehavior!: pulumi.Output<string>;
    /**
     * Specifies the upper bound for the numeric value which will be inserted into the search filter.
     */
    public readonly upperBound!: pulumi.Output<number>;
    /**
     * The names of the attributes in the local user entry whose values must match the values of the corresponding fields in
     * the PingOne service.
     */
    public readonly userMappingLocalAttributes!: pulumi.Output<string[]>;
    /**
     * The names of the fields in the PingOne service whose values must match the values of the corresponding attributes in the
     * local user entry, as specified in the user-mapping-local-attribute property.
     */
    public readonly userMappingRemoteJsonFields!: pulumi.Output<string[]>;
    /**
     * Specifies a pattern for constructing the values to use for the target attribute type.
     */
    public readonly valuePatterns!: pulumi.Output<string[]>;

    /**
     * Create a DefaultPlugin resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DefaultPluginArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultPluginArgs | DefaultPluginState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultPluginState | undefined;
            resourceInputs["additionalUserMappingScimFilter"] = state ? state.additionalUserMappingScimFilter : undefined;
            resourceInputs["agentxAddress"] = state ? state.agentxAddress : undefined;
            resourceInputs["agentxPort"] = state ? state.agentxPort : undefined;
            resourceInputs["allowLaxPassThroughAuthenticationPasswords"] = state ? state.allowLaxPassThroughAuthenticationPasswords : undefined;
            resourceInputs["allowedRequestControls"] = state ? state.allowedRequestControls : undefined;
            resourceInputs["alwaysMapResponses"] = state ? state.alwaysMapResponses : undefined;
            resourceInputs["apiUrl"] = state ? state.apiUrl : undefined;
            resourceInputs["append"] = state ? state.append : undefined;
            resourceInputs["attributeTypes"] = state ? state.attributeTypes : undefined;
            resourceInputs["authUrl"] = state ? state.authUrl : undefined;
            resourceInputs["baseDns"] = state ? state.baseDns : undefined;
            resourceInputs["bindDnPattern"] = state ? state.bindDnPattern : undefined;
            resourceInputs["changelogPasswordEncryptionKey"] = state ? state.changelogPasswordEncryptionKey : undefined;
            resourceInputs["changelogPasswordEncryptionKeyPassphraseProvider"] = state ? state.changelogPasswordEncryptionKeyPassphraseProvider : undefined;
            resourceInputs["collectionInterval"] = state ? state.collectionInterval : undefined;
            resourceInputs["connectRetryMaxWait"] = state ? state.connectRetryMaxWait : undefined;
            resourceInputs["connectionCriteria"] = state ? state.connectionCriteria : undefined;
            resourceInputs["contextName"] = state ? state.contextName : undefined;
            resourceInputs["customDatetimeFormat"] = state ? state.customDatetimeFormat : undefined;
            resourceInputs["customTimezone"] = state ? state.customTimezone : undefined;
            resourceInputs["datetimeAttribute"] = state ? state.datetimeAttribute : undefined;
            resourceInputs["datetimeFormat"] = state ? state.datetimeFormat : undefined;
            resourceInputs["datetimeJsonField"] = state ? state.datetimeJsonField : undefined;
            resourceInputs["defaultAuthPasswordStorageSchemes"] = state ? state.defaultAuthPasswordStorageSchemes : undefined;
            resourceInputs["defaultUserPasswordStorageSchemes"] = state ? state.defaultUserPasswordStorageSchemes : undefined;
            resourceInputs["delay"] = state ? state.delay : undefined;
            resourceInputs["delayAfterAlert"] = state ? state.delayAfterAlert : undefined;
            resourceInputs["delayPostGc"] = state ? state.delayPostGc : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dnMaps"] = state ? state.dnMaps : undefined;
            resourceInputs["emptyInsteadOfZero"] = state ? state.emptyInsteadOfZero : undefined;
            resourceInputs["enableAttributeMapping"] = state ? state.enableAttributeMapping : undefined;
            resourceInputs["enableControlMapping"] = state ? state.enableControlMapping : undefined;
            resourceInputs["enableProfilingOnStartup"] = state ? state.enableProfilingOnStartup : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["encryptionSettingsDefinitionId"] = state ? state.encryptionSettingsDefinitionId : undefined;
            resourceInputs["entryCacheInfo"] = state ? state.entryCacheInfo : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["excludeAttributes"] = state ? state.excludeAttributes : undefined;
            resourceInputs["excludeBaseDns"] = state ? state.excludeBaseDns : undefined;
            resourceInputs["excludeFilters"] = state ? state.excludeFilters : undefined;
            resourceInputs["expirationOffset"] = state ? state.expirationOffset : undefined;
            resourceInputs["extensionArguments"] = state ? state.extensionArguments : undefined;
            resourceInputs["extensionClass"] = state ? state.extensionClass : undefined;
            resourceInputs["filterPrefix"] = state ? state.filterPrefix : undefined;
            resourceInputs["filterSuffix"] = state ? state.filterSuffix : undefined;
            resourceInputs["filters"] = state ? state.filters : undefined;
            resourceInputs["gaugeInfo"] = state ? state.gaugeInfo : undefined;
            resourceInputs["generateCollectorFiles"] = state ? state.generateCollectorFiles : undefined;
            resourceInputs["headerPrefixPerColumn"] = state ? state.headerPrefixPerColumn : undefined;
            resourceInputs["histogramCategoryBoundaries"] = state ? state.histogramCategoryBoundaries : undefined;
            resourceInputs["histogramFormat"] = state ? state.histogramFormat : undefined;
            resourceInputs["histogramOpTypes"] = state ? state.histogramOpTypes : undefined;
            resourceInputs["hostInfos"] = state ? state.hostInfos : undefined;
            resourceInputs["httpProxyExternalServer"] = state ? state.httpProxyExternalServer : undefined;
            resourceInputs["ignoredPasswordPolicyStateErrorConditions"] = state ? state.ignoredPasswordPolicyStateErrorConditions : undefined;
            resourceInputs["includeAttributes"] = state ? state.includeAttributes : undefined;
            resourceInputs["includeBaseDns"] = state ? state.includeBaseDns : undefined;
            resourceInputs["includeFilters"] = state ? state.includeFilters : undefined;
            resourceInputs["includeQueueTime"] = state ? state.includeQueueTime : undefined;
            resourceInputs["includedLdapApplications"] = state ? state.includedLdapApplications : undefined;
            resourceInputs["includedLdapStats"] = state ? state.includedLdapStats : undefined;
            resourceInputs["includedLocalEntryBaseDns"] = state ? state.includedLocalEntryBaseDns : undefined;
            resourceInputs["includedResourceStats"] = state ? state.includedResourceStats : undefined;
            resourceInputs["initialConnections"] = state ? state.initialConnections : undefined;
            resourceInputs["invokeForFailedBinds"] = state ? state.invokeForFailedBinds : undefined;
            resourceInputs["invokeForInternalOperations"] = state ? state.invokeForInternalOperations : undefined;
            resourceInputs["invokeGcDayOfWeeks"] = state ? state.invokeGcDayOfWeeks : undefined;
            resourceInputs["invokeGcTimeUtcs"] = state ? state.invokeGcTimeUtcs : undefined;
            resourceInputs["ldapChangelogInfo"] = state ? state.ldapChangelogInfo : undefined;
            resourceInputs["ldapInfo"] = state ? state.ldapInfo : undefined;
            resourceInputs["linesBetweenHeader"] = state ? state.linesBetweenHeader : undefined;
            resourceInputs["localDbBackendInfo"] = state ? state.localDbBackendInfo : undefined;
            resourceInputs["logFile"] = state ? state.logFile : undefined;
            resourceInputs["logFileFormat"] = state ? state.logFileFormat : undefined;
            resourceInputs["logFilePermissions"] = state ? state.logFilePermissions : undefined;
            resourceInputs["logInterval"] = state ? state.logInterval : undefined;
            resourceInputs["loggingErrorBehavior"] = state ? state.loggingErrorBehavior : undefined;
            resourceInputs["lowerBound"] = state ? state.lowerBound : undefined;
            resourceInputs["mapAttributes"] = state ? state.mapAttributes : undefined;
            resourceInputs["maxConnections"] = state ? state.maxConnections : undefined;
            resourceInputs["maxSearchResultEntriesToUpdate"] = state ? state.maxSearchResultEntriesToUpdate : undefined;
            resourceInputs["maxUpdateFrequency"] = state ? state.maxUpdateFrequency : undefined;
            resourceInputs["maxUpdatesPerSecond"] = state ? state.maxUpdatesPerSecond : undefined;
            resourceInputs["maximumMembershipUpdatesPerModify"] = state ? state.maximumMembershipUpdatesPerModify : undefined;
            resourceInputs["multiValuedAttributeBehavior"] = state ? state.multiValuedAttributeBehavior : undefined;
            resourceInputs["multipleAttributeBehavior"] = state ? state.multipleAttributeBehavior : undefined;
            resourceInputs["multipleValuePatternBehavior"] = state ? state.multipleValuePatternBehavior : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["numDeleteThreads"] = state ? state.numDeleteThreads : undefined;
            resourceInputs["numMostExpensivePhasesShown"] = state ? state.numMostExpensivePhasesShown : undefined;
            resourceInputs["numThreads"] = state ? state.numThreads : undefined;
            resourceInputs["numWorkerThreads"] = state ? state.numWorkerThreads : undefined;
            resourceInputs["oauthClientId"] = state ? state.oauthClientId : undefined;
            resourceInputs["oauthClientSecret"] = state ? state.oauthClientSecret : undefined;
            resourceInputs["oauthClientSecretPassphraseProvider"] = state ? state.oauthClientSecretPassphraseProvider : undefined;
            resourceInputs["operationTypes"] = state ? state.operationTypes : undefined;
            resourceInputs["outputFile"] = state ? state.outputFile : undefined;
            resourceInputs["overrideLocalPassword"] = state ? state.overrideLocalPassword : undefined;
            resourceInputs["passThroughAuthenticationHandler"] = state ? state.passThroughAuthenticationHandler : undefined;
            resourceInputs["peerServerPriorityIndex"] = state ? state.peerServerPriorityIndex : undefined;
            resourceInputs["perApplicationLdapStats"] = state ? state.perApplicationLdapStats : undefined;
            resourceInputs["pingInterval"] = state ? state.pingInterval : undefined;
            resourceInputs["pluginTypes"] = state ? state.pluginTypes : undefined;
            resourceInputs["pollingInterval"] = state ? state.pollingInterval : undefined;
            resourceInputs["preventAddingGroupsAsInvertedStaticGroupMembers"] = state ? state.preventAddingGroupsAsInvertedStaticGroupMembers : undefined;
            resourceInputs["preventAddingMembersToNonexistentGroups"] = state ? state.preventAddingMembersToNonexistentGroups : undefined;
            resourceInputs["preventConflictsWithSoftDeletedEntries"] = state ? state.preventConflictsWithSoftDeletedEntries : undefined;
            resourceInputs["preventNestingNonexistentGroups"] = state ? state.preventNestingNonexistentGroups : undefined;
            resourceInputs["previousFileExtension"] = state ? state.previousFileExtension : undefined;
            resourceInputs["profileAction"] = state ? state.profileAction : undefined;
            resourceInputs["profileDirectory"] = state ? state.profileDirectory : undefined;
            resourceInputs["profileSampleInterval"] = state ? state.profileSampleInterval : undefined;
            resourceInputs["purgeBehavior"] = state ? state.purgeBehavior : undefined;
            resourceInputs["readOperationSupport"] = state ? state.readOperationSupport : undefined;
            resourceInputs["referralBaseUrls"] = state ? state.referralBaseUrls : undefined;
            resourceInputs["replicationInfo"] = state ? state.replicationInfo : undefined;
            resourceInputs["requestCriteria"] = state ? state.requestCriteria : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
            resourceInputs["retainFilesSparselyByAge"] = state ? state.retainFilesSparselyByAge : undefined;
            resourceInputs["retentionPolicies"] = state ? state.retentionPolicies : undefined;
            resourceInputs["rotationListeners"] = state ? state.rotationListeners : undefined;
            resourceInputs["rotationPolicies"] = state ? state.rotationPolicies : undefined;
            resourceInputs["sampleInterval"] = state ? state.sampleInterval : undefined;
            resourceInputs["sanitize"] = state ? state.sanitize : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["scriptArguments"] = state ? state.scriptArguments : undefined;
            resourceInputs["scriptClass"] = state ? state.scriptClass : undefined;
            resourceInputs["searchBaseDn"] = state ? state.searchBaseDn : undefined;
            resourceInputs["searchFilterPattern"] = state ? state.searchFilterPattern : undefined;
            resourceInputs["separateMonitorEntryPerTrackedApplication"] = state ? state.separateMonitorEntryPerTrackedApplication : undefined;
            resourceInputs["serverAccessMode"] = state ? state.serverAccessMode : undefined;
            resourceInputs["serverInfo"] = state ? state.serverInfo : undefined;
            resourceInputs["servers"] = state ? state.servers : undefined;
            resourceInputs["sessionTimeout"] = state ? state.sessionTimeout : undefined;
            resourceInputs["sourceAttribute"] = state ? state.sourceAttribute : undefined;
            resourceInputs["sourceAttributeRemovalBehavior"] = state ? state.sourceAttributeRemovalBehavior : undefined;
            resourceInputs["sourceDn"] = state ? state.sourceDn : undefined;
            resourceInputs["statusSummaryInfo"] = state ? state.statusSummaryInfo : undefined;
            resourceInputs["suppressIfIdle"] = state ? state.suppressIfIdle : undefined;
            resourceInputs["targetAttribute"] = state ? state.targetAttribute : undefined;
            resourceInputs["targetAttributeExistsDuringInitialPopulationBehavior"] = state ? state.targetAttributeExistsDuringInitialPopulationBehavior : undefined;
            resourceInputs["targetDn"] = state ? state.targetDn : undefined;
            resourceInputs["traditionalStaticGroupObjectClass"] = state ? state.traditionalStaticGroupObjectClass : undefined;
            resourceInputs["tryLocalBind"] = state ? state.tryLocalBind : undefined;
            resourceInputs["types"] = state ? state.types : undefined;
            resourceInputs["updateInterval"] = state ? state.updateInterval : undefined;
            resourceInputs["updateLocalPassword"] = state ? state.updateLocalPassword : undefined;
            resourceInputs["updateLocalPasswordDn"] = state ? state.updateLocalPasswordDn : undefined;
            resourceInputs["updateSourceAttributeBehavior"] = state ? state.updateSourceAttributeBehavior : undefined;
            resourceInputs["updateTargetAttributeBehavior"] = state ? state.updateTargetAttributeBehavior : undefined;
            resourceInputs["updatedEntryNewlyMatchesCriteriaBehavior"] = state ? state.updatedEntryNewlyMatchesCriteriaBehavior : undefined;
            resourceInputs["updatedEntryNoLongerMatchesCriteriaBehavior"] = state ? state.updatedEntryNoLongerMatchesCriteriaBehavior : undefined;
            resourceInputs["upperBound"] = state ? state.upperBound : undefined;
            resourceInputs["userMappingLocalAttributes"] = state ? state.userMappingLocalAttributes : undefined;
            resourceInputs["userMappingRemoteJsonFields"] = state ? state.userMappingRemoteJsonFields : undefined;
            resourceInputs["valuePatterns"] = state ? state.valuePatterns : undefined;
        } else {
            const args = argsOrState as DefaultPluginArgs | undefined;
            resourceInputs["additionalUserMappingScimFilter"] = args ? args.additionalUserMappingScimFilter : undefined;
            resourceInputs["agentxAddress"] = args ? args.agentxAddress : undefined;
            resourceInputs["agentxPort"] = args ? args.agentxPort : undefined;
            resourceInputs["allowLaxPassThroughAuthenticationPasswords"] = args ? args.allowLaxPassThroughAuthenticationPasswords : undefined;
            resourceInputs["allowedRequestControls"] = args ? args.allowedRequestControls : undefined;
            resourceInputs["alwaysMapResponses"] = args ? args.alwaysMapResponses : undefined;
            resourceInputs["apiUrl"] = args ? args.apiUrl : undefined;
            resourceInputs["append"] = args ? args.append : undefined;
            resourceInputs["attributeTypes"] = args ? args.attributeTypes : undefined;
            resourceInputs["authUrl"] = args ? args.authUrl : undefined;
            resourceInputs["baseDns"] = args ? args.baseDns : undefined;
            resourceInputs["bindDnPattern"] = args ? args.bindDnPattern : undefined;
            resourceInputs["changelogPasswordEncryptionKey"] = args?.changelogPasswordEncryptionKey ? pulumi.secret(args.changelogPasswordEncryptionKey) : undefined;
            resourceInputs["changelogPasswordEncryptionKeyPassphraseProvider"] = args ? args.changelogPasswordEncryptionKeyPassphraseProvider : undefined;
            resourceInputs["collectionInterval"] = args ? args.collectionInterval : undefined;
            resourceInputs["connectRetryMaxWait"] = args ? args.connectRetryMaxWait : undefined;
            resourceInputs["connectionCriteria"] = args ? args.connectionCriteria : undefined;
            resourceInputs["contextName"] = args ? args.contextName : undefined;
            resourceInputs["customDatetimeFormat"] = args ? args.customDatetimeFormat : undefined;
            resourceInputs["customTimezone"] = args ? args.customTimezone : undefined;
            resourceInputs["datetimeAttribute"] = args ? args.datetimeAttribute : undefined;
            resourceInputs["datetimeFormat"] = args ? args.datetimeFormat : undefined;
            resourceInputs["datetimeJsonField"] = args ? args.datetimeJsonField : undefined;
            resourceInputs["defaultAuthPasswordStorageSchemes"] = args ? args.defaultAuthPasswordStorageSchemes : undefined;
            resourceInputs["defaultUserPasswordStorageSchemes"] = args ? args.defaultUserPasswordStorageSchemes : undefined;
            resourceInputs["delay"] = args ? args.delay : undefined;
            resourceInputs["delayAfterAlert"] = args ? args.delayAfterAlert : undefined;
            resourceInputs["delayPostGc"] = args ? args.delayPostGc : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dnMaps"] = args ? args.dnMaps : undefined;
            resourceInputs["emptyInsteadOfZero"] = args ? args.emptyInsteadOfZero : undefined;
            resourceInputs["enableAttributeMapping"] = args ? args.enableAttributeMapping : undefined;
            resourceInputs["enableControlMapping"] = args ? args.enableControlMapping : undefined;
            resourceInputs["enableProfilingOnStartup"] = args ? args.enableProfilingOnStartup : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["encryptionSettingsDefinitionId"] = args ? args.encryptionSettingsDefinitionId : undefined;
            resourceInputs["entryCacheInfo"] = args ? args.entryCacheInfo : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["excludeAttributes"] = args ? args.excludeAttributes : undefined;
            resourceInputs["excludeBaseDns"] = args ? args.excludeBaseDns : undefined;
            resourceInputs["excludeFilters"] = args ? args.excludeFilters : undefined;
            resourceInputs["expirationOffset"] = args ? args.expirationOffset : undefined;
            resourceInputs["extensionArguments"] = args ? args.extensionArguments : undefined;
            resourceInputs["extensionClass"] = args ? args.extensionClass : undefined;
            resourceInputs["filterPrefix"] = args ? args.filterPrefix : undefined;
            resourceInputs["filterSuffix"] = args ? args.filterSuffix : undefined;
            resourceInputs["filters"] = args ? args.filters : undefined;
            resourceInputs["gaugeInfo"] = args ? args.gaugeInfo : undefined;
            resourceInputs["generateCollectorFiles"] = args ? args.generateCollectorFiles : undefined;
            resourceInputs["headerPrefixPerColumn"] = args ? args.headerPrefixPerColumn : undefined;
            resourceInputs["histogramCategoryBoundaries"] = args ? args.histogramCategoryBoundaries : undefined;
            resourceInputs["histogramFormat"] = args ? args.histogramFormat : undefined;
            resourceInputs["histogramOpTypes"] = args ? args.histogramOpTypes : undefined;
            resourceInputs["hostInfos"] = args ? args.hostInfos : undefined;
            resourceInputs["httpProxyExternalServer"] = args ? args.httpProxyExternalServer : undefined;
            resourceInputs["ignoredPasswordPolicyStateErrorConditions"] = args ? args.ignoredPasswordPolicyStateErrorConditions : undefined;
            resourceInputs["includeAttributes"] = args ? args.includeAttributes : undefined;
            resourceInputs["includeBaseDns"] = args ? args.includeBaseDns : undefined;
            resourceInputs["includeFilters"] = args ? args.includeFilters : undefined;
            resourceInputs["includeQueueTime"] = args ? args.includeQueueTime : undefined;
            resourceInputs["includedLdapApplications"] = args ? args.includedLdapApplications : undefined;
            resourceInputs["includedLdapStats"] = args ? args.includedLdapStats : undefined;
            resourceInputs["includedLocalEntryBaseDns"] = args ? args.includedLocalEntryBaseDns : undefined;
            resourceInputs["includedResourceStats"] = args ? args.includedResourceStats : undefined;
            resourceInputs["initialConnections"] = args ? args.initialConnections : undefined;
            resourceInputs["invokeForFailedBinds"] = args ? args.invokeForFailedBinds : undefined;
            resourceInputs["invokeForInternalOperations"] = args ? args.invokeForInternalOperations : undefined;
            resourceInputs["invokeGcDayOfWeeks"] = args ? args.invokeGcDayOfWeeks : undefined;
            resourceInputs["invokeGcTimeUtcs"] = args ? args.invokeGcTimeUtcs : undefined;
            resourceInputs["ldapChangelogInfo"] = args ? args.ldapChangelogInfo : undefined;
            resourceInputs["ldapInfo"] = args ? args.ldapInfo : undefined;
            resourceInputs["linesBetweenHeader"] = args ? args.linesBetweenHeader : undefined;
            resourceInputs["localDbBackendInfo"] = args ? args.localDbBackendInfo : undefined;
            resourceInputs["logFile"] = args ? args.logFile : undefined;
            resourceInputs["logFileFormat"] = args ? args.logFileFormat : undefined;
            resourceInputs["logFilePermissions"] = args ? args.logFilePermissions : undefined;
            resourceInputs["logInterval"] = args ? args.logInterval : undefined;
            resourceInputs["loggingErrorBehavior"] = args ? args.loggingErrorBehavior : undefined;
            resourceInputs["lowerBound"] = args ? args.lowerBound : undefined;
            resourceInputs["mapAttributes"] = args ? args.mapAttributes : undefined;
            resourceInputs["maxConnections"] = args ? args.maxConnections : undefined;
            resourceInputs["maxSearchResultEntriesToUpdate"] = args ? args.maxSearchResultEntriesToUpdate : undefined;
            resourceInputs["maxUpdateFrequency"] = args ? args.maxUpdateFrequency : undefined;
            resourceInputs["maxUpdatesPerSecond"] = args ? args.maxUpdatesPerSecond : undefined;
            resourceInputs["maximumMembershipUpdatesPerModify"] = args ? args.maximumMembershipUpdatesPerModify : undefined;
            resourceInputs["multiValuedAttributeBehavior"] = args ? args.multiValuedAttributeBehavior : undefined;
            resourceInputs["multipleAttributeBehavior"] = args ? args.multipleAttributeBehavior : undefined;
            resourceInputs["multipleValuePatternBehavior"] = args ? args.multipleValuePatternBehavior : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["numDeleteThreads"] = args ? args.numDeleteThreads : undefined;
            resourceInputs["numMostExpensivePhasesShown"] = args ? args.numMostExpensivePhasesShown : undefined;
            resourceInputs["numThreads"] = args ? args.numThreads : undefined;
            resourceInputs["numWorkerThreads"] = args ? args.numWorkerThreads : undefined;
            resourceInputs["oauthClientId"] = args ? args.oauthClientId : undefined;
            resourceInputs["oauthClientSecret"] = args?.oauthClientSecret ? pulumi.secret(args.oauthClientSecret) : undefined;
            resourceInputs["oauthClientSecretPassphraseProvider"] = args ? args.oauthClientSecretPassphraseProvider : undefined;
            resourceInputs["operationTypes"] = args ? args.operationTypes : undefined;
            resourceInputs["outputFile"] = args ? args.outputFile : undefined;
            resourceInputs["overrideLocalPassword"] = args ? args.overrideLocalPassword : undefined;
            resourceInputs["passThroughAuthenticationHandler"] = args ? args.passThroughAuthenticationHandler : undefined;
            resourceInputs["peerServerPriorityIndex"] = args ? args.peerServerPriorityIndex : undefined;
            resourceInputs["perApplicationLdapStats"] = args ? args.perApplicationLdapStats : undefined;
            resourceInputs["pingInterval"] = args ? args.pingInterval : undefined;
            resourceInputs["pluginTypes"] = args ? args.pluginTypes : undefined;
            resourceInputs["pollingInterval"] = args ? args.pollingInterval : undefined;
            resourceInputs["preventAddingGroupsAsInvertedStaticGroupMembers"] = args ? args.preventAddingGroupsAsInvertedStaticGroupMembers : undefined;
            resourceInputs["preventAddingMembersToNonexistentGroups"] = args ? args.preventAddingMembersToNonexistentGroups : undefined;
            resourceInputs["preventConflictsWithSoftDeletedEntries"] = args ? args.preventConflictsWithSoftDeletedEntries : undefined;
            resourceInputs["preventNestingNonexistentGroups"] = args ? args.preventNestingNonexistentGroups : undefined;
            resourceInputs["previousFileExtension"] = args ? args.previousFileExtension : undefined;
            resourceInputs["profileAction"] = args ? args.profileAction : undefined;
            resourceInputs["profileDirectory"] = args ? args.profileDirectory : undefined;
            resourceInputs["profileSampleInterval"] = args ? args.profileSampleInterval : undefined;
            resourceInputs["purgeBehavior"] = args ? args.purgeBehavior : undefined;
            resourceInputs["readOperationSupport"] = args ? args.readOperationSupport : undefined;
            resourceInputs["referralBaseUrls"] = args ? args.referralBaseUrls : undefined;
            resourceInputs["replicationInfo"] = args ? args.replicationInfo : undefined;
            resourceInputs["requestCriteria"] = args ? args.requestCriteria : undefined;
            resourceInputs["retainFilesSparselyByAge"] = args ? args.retainFilesSparselyByAge : undefined;
            resourceInputs["retentionPolicies"] = args ? args.retentionPolicies : undefined;
            resourceInputs["rotationListeners"] = args ? args.rotationListeners : undefined;
            resourceInputs["rotationPolicies"] = args ? args.rotationPolicies : undefined;
            resourceInputs["sampleInterval"] = args ? args.sampleInterval : undefined;
            resourceInputs["sanitize"] = args ? args.sanitize : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["scriptArguments"] = args ? args.scriptArguments : undefined;
            resourceInputs["scriptClass"] = args ? args.scriptClass : undefined;
            resourceInputs["searchBaseDn"] = args ? args.searchBaseDn : undefined;
            resourceInputs["searchFilterPattern"] = args ? args.searchFilterPattern : undefined;
            resourceInputs["separateMonitorEntryPerTrackedApplication"] = args ? args.separateMonitorEntryPerTrackedApplication : undefined;
            resourceInputs["serverAccessMode"] = args ? args.serverAccessMode : undefined;
            resourceInputs["serverInfo"] = args ? args.serverInfo : undefined;
            resourceInputs["servers"] = args ? args.servers : undefined;
            resourceInputs["sessionTimeout"] = args ? args.sessionTimeout : undefined;
            resourceInputs["sourceAttribute"] = args ? args.sourceAttribute : undefined;
            resourceInputs["sourceAttributeRemovalBehavior"] = args ? args.sourceAttributeRemovalBehavior : undefined;
            resourceInputs["sourceDn"] = args ? args.sourceDn : undefined;
            resourceInputs["statusSummaryInfo"] = args ? args.statusSummaryInfo : undefined;
            resourceInputs["suppressIfIdle"] = args ? args.suppressIfIdle : undefined;
            resourceInputs["targetAttribute"] = args ? args.targetAttribute : undefined;
            resourceInputs["targetAttributeExistsDuringInitialPopulationBehavior"] = args ? args.targetAttributeExistsDuringInitialPopulationBehavior : undefined;
            resourceInputs["targetDn"] = args ? args.targetDn : undefined;
            resourceInputs["traditionalStaticGroupObjectClass"] = args ? args.traditionalStaticGroupObjectClass : undefined;
            resourceInputs["tryLocalBind"] = args ? args.tryLocalBind : undefined;
            resourceInputs["types"] = args ? args.types : undefined;
            resourceInputs["updateInterval"] = args ? args.updateInterval : undefined;
            resourceInputs["updateLocalPassword"] = args ? args.updateLocalPassword : undefined;
            resourceInputs["updateLocalPasswordDn"] = args ? args.updateLocalPasswordDn : undefined;
            resourceInputs["updateSourceAttributeBehavior"] = args ? args.updateSourceAttributeBehavior : undefined;
            resourceInputs["updateTargetAttributeBehavior"] = args ? args.updateTargetAttributeBehavior : undefined;
            resourceInputs["updatedEntryNewlyMatchesCriteriaBehavior"] = args ? args.updatedEntryNewlyMatchesCriteriaBehavior : undefined;
            resourceInputs["updatedEntryNoLongerMatchesCriteriaBehavior"] = args ? args.updatedEntryNoLongerMatchesCriteriaBehavior : undefined;
            resourceInputs["upperBound"] = args ? args.upperBound : undefined;
            resourceInputs["userMappingLocalAttributes"] = args ? args.userMappingLocalAttributes : undefined;
            resourceInputs["userMappingRemoteJsonFields"] = args ? args.userMappingRemoteJsonFields : undefined;
            resourceInputs["valuePatterns"] = args ? args.valuePatterns : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
            resourceInputs["resourceType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["changelogPasswordEncryptionKey", "oauthClientSecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DefaultPlugin.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DefaultPlugin resources.
 */
export interface DefaultPluginState {
    /**
     * An optional SCIM filter that will be ANDed with the filter created to identify the account in the PingOne service that
     * corresponds to the local entry. Only the "eq", "sw", "and", and "or" filter types may be used.
     */
    additionalUserMappingScimFilter?: pulumi.Input<string>;
    /**
     * The hostname or IP address of the SNMP master agent.
     */
    agentxAddress?: pulumi.Input<string>;
    /**
     * The port number on which the SNMP master agent will be contacted.
     */
    agentxPort?: pulumi.Input<number>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: Indicates whether to overwrite the user's
     * local password even if the password used to authenticate to the PingOne service would have failed validation if the user
     * attempted to set it directly. - `pass-through-authentication`: Indicates whether updates to the local password value
     * should accept passwords that do not meet password policy constraints. - `pluggable-pass-through-authentication`:
     * Indicates whether to overwrite the user's local password even if the password used to authenticate to the external
     * service would have failed validation if the user attempted to set it directly.
     */
    allowLaxPassThroughAuthenticationPasswords?: pulumi.Input<boolean>;
    /**
     * Specifies the OIDs of the controls that are allowed to be present in operations to coalesce. These controls are passed
     * through when the request is validated, but they will not be included when the background thread applies the coalesced
     * modify requests.
     */
    allowedRequestControls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `dn-mapper`: Indicates whether DNs in response messages containing the target DN
     * should always be remapped back to the source DN. If this is "false", then mapping will be performed for a response
     * message only if one or more elements of the associated request are mapped. Otherwise, the mapping will be performed for
     * all responses regardless of whether the mapping was applied to the request. - `attribute-mapper`: Indicates whether the
     * target attribute in response messages should always be remapped back to the source attribute. If this is "false", then
     * the mapping will be performed for a response message only if one or more elements of the associated request are mapped.
     * Otherwise, the mapping will be performed for all responses regardless of whether the mapping was applied to the request.
     */
    alwaysMapResponses?: pulumi.Input<boolean>;
    /**
     * Specifies the API endpoint for the PingOne web service.
     */
    apiUrl?: pulumi.Input<string>;
    /**
     * Specifies whether to append to existing log files.
     */
    append?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `seven-bit-clean`: Specifies the name or OID of an attribute type for which
     * values should be checked to ensure that they are 7-bit clean. - `encrypt-attribute-values`: The attribute types whose
     * values should be encrypted. - `composed-attribute`: The name or OID of the attribute type for which values are to be
     * generated. - `referential-integrity`: Specifies the attribute types for which referential integrity is to be maintained.
     */
    attributeTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the API endpoint for the PingOne authentication service.
     */
    authUrl?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - One of [`clean-up-expired-pingfederate-persistent-access-grants`,
     * `purge-expired-data`, `clean-up-inactive-pingfederate-persistent-sessions`,
     * `clean-up-expired-pingfederate-persistent-sessions`]: Only entries located within the subtree specified by this base DN
     * are eligible for purging. - `internal-search-rate`: Specifies the base DN to use for the searches to perform. -
     * `modifiable-password-policy-state`: A base DN that may be used to identify entries that should support the
     * ds-pwp-modifiable-state-json operational attribute. - `seven-bit-clean`: Specifies the base DN below which the checking
     * is performed. - `search-shutdown`: The base DN to use for the search. - `referral-on-update`: Specifies a base DN for
     * requests for which to send referrals in response to update operations. - `referential-integrity`: Specifies the base DN
     * that limits the scope within which referential integrity is maintained. - `unique-attribute`: Specifies a base DN within
     * which the attribute must be unique.
     */
    baseDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of
     * a combination of static text and attribute values and other directives enclosed in curly braces. For example, the value
     * "cn={cn},ou=People,dc=example,dc=com" indicates that the remote bind DN should be constructed from the text "cn="
     * followed by the value of the local entry's cn attribute followed by the text "ou=People,dc=example,dc=com". If an
     * attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the
     * name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a
     * bind DN pattern of "{seeAlso}" would be appropriate). Note that a bind DN pattern can be used to construct a bind DN
     * that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a
     * Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an
     * alternative to a distinguished name.
     */
    bindDnPattern?: pulumi.Input<string>;
    /**
     * A passphrase that may be used to generate the key for encrypting passwords stored in the changelog. The same passphrase
     * also needs to be set (either through the "changelog-password-decryption-key" property or the
     * "changelog-password-decryption-key-passphrase-provider" property) in the Global Sync Configuration in the Data Sync
     * Server.
     */
    changelogPasswordEncryptionKey?: pulumi.Input<string>;
    /**
     * A passphrase provider that may be used to obtain the passphrase that will be used to generate the key for encrypting
     * passwords stored in the changelog. The same passphrase also needs to be set (either through the
     * "changelog-password-decryption-key" property or the "changelog-password-decryption-key-passphrase-provider" property) in
     * the Global Sync Configuration in the Data Sync Server.
     */
    changelogPasswordEncryptionKeyPassphraseProvider?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `stats-collector`: Some of the calculated statistics, such as the average and
     * maximum queue sizes, can use multiple samples within a log interval. This value controls how often samples are gathered,
     * and setting this value too small can have an adverse impact on performance. - `periodic-stats-logger`: Some of the
     * calculated statistics, such as the average and maximum queue sizes, can use multiple samples within a log interval. This
     * value controls how often samples are gathered. It should be a multiple of the log-interval.
     */
    collectionInterval?: pulumi.Input<string>;
    /**
     * The maximum amount of time to wait between attempts to establish a connection to the master agent.
     */
    connectRetryMaxWait?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: A reference to connection criteria that
     * will be used to indicate which bind requests should be passed through to the PingOne service. -
     * `pass-through-authentication`: Specifies a set of connection criteria that must match the client associated with the
     * bind request for the bind to be passed through to an alternate server. - `simple-to-external-bind`: Specifies a
     * connection criteria object that may be used to indicate the set of clients for which this plugin should be used. If a
     * value is provided, then this plugin will only be used for requests from client connections matching this criteria. -
     * `delay`: Specifies a set of connection criteria used to indicate that only operations from clients matching this
     * criteria should be subject to the configured delay. - `pluggable-pass-through-authentication`: A reference to connection
     * criteria that will be used to indicate which bind requests should be passed through to the external authentication
     * service.
     */
    connectionCriteria?: pulumi.Input<string>;
    /**
     * The SNMP context name for this sub-agent. The context name must not be longer than 30 ASCII characters. Each server in a
     * topology must have a unique SNMP context name.
     */
    contextName?: pulumi.Input<string>;
    /**
     * When the datetime-format property is configured with a value of "custom", this specifies the format (using a string
     * compatible with the java.text.SimpleDateFormat class) that will be used to search for expired data.
     */
    customDatetimeFormat?: pulumi.Input<string>;
    /**
     * Specifies the time zone to use when generating a date string using the configured custom-datetime-format value. The
     * provided value must be accepted by java.util.TimeZone.getTimeZone.
     */
    customTimezone?: pulumi.Input<string>;
    /**
     * The LDAP attribute that determines when data should be deleted. This could store the expiration time, or it could store
     * the creation time and the expiration-offset property specifies the duration before data is deleted.
     */
    datetimeAttribute?: pulumi.Input<string>;
    /**
     * Specifies the format of the datetime stored within the entry that determines when data should be purged.
     */
    datetimeFormat?: pulumi.Input<string>;
    /**
     * The top-level JSON field within the configured datetime-attribute that determines when data should be deleted. This
     * could store the expiration time, or it could store the creation time and the expiration-offset property specifies the
     * duration before data is deleted.
     */
    datetimeJsonField?: pulumi.Input<string>;
    /**
     * Specifies the names of password storage schemes that to be used for encoding passwords contained in attributes with the
     * auth password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password
     * policy should be used to govern them.
     */
    defaultAuthPasswordStorageSchemes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the names of the password storage schemes to be used for encoding passwords contained in attributes with the
     * user password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password
     * policy is to be used to govern them.
     */
    defaultUserPasswordStorageSchemes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The delay to inject for operations matching the associated criteria.
     */
    delay?: pulumi.Input<string>;
    /**
     * Specifies the length of time that the Directory Server should wait after sending the "force-gc-starting" administrative
     * alert before actually invoking the garbage collection processing.
     */
    delayAfterAlert?: pulumi.Input<string>;
    /**
     * Specifies the length of time that the Directory Server should wait after successfully completing the garbage collection
     * processing, before removing the "force-gc-starting" administrative alert, which marks the server as unavailable.
     */
    delayPostGc?: pulumi.Input<string>;
    /**
     * A description for this Plugin
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external
     * servers.
     */
    dnMaps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This property controls whether a value in the output is shown as empty if the value is zero.
     */
    emptyInsteadOfZero?: pulumi.Input<boolean>;
    /**
     * Indicates whether DN mapping should be applied to the values of attributes with appropriate syntaxes.
     */
    enableAttributeMapping?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `dn-mapper`: Indicates whether DN mapping should be applied to DNs that may be
     * present in specific controls. DN mapping will only be applied for control types which are specifically supported by the
     * DN mapper plugin. - `attribute-mapper`: Indicates whether mapping should be applied to attribute types that may be
     * present in specific controls. If enabled, attribute mapping will only be applied for control types which are
     * specifically supported by the attribute mapper plugin.
     */
    enableControlMapping?: pulumi.Input<boolean>;
    /**
     * Indicates whether the profiler plug-in is to start collecting data automatically when the Directory Server is started.
     */
    enableProfilingOnStartup?: pulumi.Input<boolean>;
    /**
     * Indicates whether the plug-in is enabled for use.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided,
     * the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used
     * to obtain a list of the encryption settings definitions available in the server.
     */
    encryptionSettingsDefinitionId?: pulumi.Input<string>;
    /**
     * Specifies the level of detail to include for each entry cache.
     */
    entryCacheInfo?: pulumi.Input<string>;
    /**
     * Specifies the PingOne Environment that will be associated with this PingOne Pass Through Authentication Plugin.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * Specifies the name or OID of an attribute type which may be updated in a modify or modify DN operation without causing
     * the modifiersName and modifyTimestamp values to be updated for that entry.
     */
    excludeAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of base DNs below which composed values will not be generated.
     */
    excludeBaseDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of search filters that identify entries for which composed values will not be generated.
     */
    excludeFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `purge-expired-data`: The duration to wait after the value specified in
     * datetime-attribute (and optionally datetime-json-field) before purging the data. -
     * `clean-up-inactive-pingfederate-persistent-sessions`: Sessions whose last activity timestamp is older than this offset
     * will be removed.
     */
    expirationOffset?: pulumi.Input<string>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Plugin. Each configuration property should be
     * given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Plugin.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * Specifies a prefix which will be used in front of the randomly-selected numeric value in all search filters used. If no
     * upper bound is defined, then this should contain the entire filter string.
     */
    filterPrefix?: pulumi.Input<string>;
    /**
     * Specifies a suffix which will be used after of the randomly-selected numeric value in all search filters used. If no
     * upper bound is defined, then this should be omitted.
     */
    filterSuffix?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `modifiable-password-policy-state`: A filter that may be used to identify entries
     * that should support the ds-pwp-modifiable-state-json operational attribute. - `search-shutdown`: The filter to use for
     * the search. - `purge-expired-data`: Only entries that match this LDAP filter will be eligible for having data purged. -
     * `unique-attribute`: Specifies the search filter to apply to determine if attribute uniqueness is enforced for the
     * matching entries.
     */
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the level of detail to include for Gauges.
     */
    gaugeInfo?: pulumi.Input<string>;
    /**
     * Indicates whether this plugin should store metric samples on disk for use by the Data Metrics Server. If the Stats
     * Collector Plugin is only being used to collect metrics for one or more StatsD Monitoring Endpoints, then this can be set
     * to false to prevent unnecessary I/O.
     */
    generateCollectorFiles?: pulumi.Input<boolean>;
    /**
     * This property controls whether the header prefix, which applies to a group of columns, appears at the start of each
     * column header or only the first column in a group.
     */
    headerPrefixPerColumn?: pulumi.Input<boolean>;
    /**
     * Specifies the boundary values that will be used to separate the processing times into categories. Values should be
     * specified as durations, and all values must be greater than zero.
     */
    histogramCategoryBoundaries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The format of the data in the processing time histogram.
     */
    histogramFormat?: pulumi.Input<string>;
    /**
     * Specifies the operation type(s) to use when outputting the response time histogram data. The order of the operations
     * here determines the order of the columns in the output. Use the per-application-ldap-stats setting to further control
     * this.
     */
    histogramOpTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the level of detail to include about the host system resource utilization including CPU, memory, disk and
     * network activity.
     */
    hostInfos?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. A reference to an HTTP proxy server that should be used for
     * requests sent to the PingOne service.
     */
    httpProxyExternalServer?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: A set of password policy state error
     * conditions that should not be enforced when authentication succeeds when attempted in the PingOne service. This option
     * can only be used if try-local-bind is true. - `pluggable-pass-through-authentication`: A set of password policy state
     * error conditions that should not be enforced when authentication succeeds when attempted in the external service. This
     * option can only be used if try-local-bind is true.
     */
    ignoredPasswordPolicyStateErrorConditions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `search-shutdown`: The name of an attribute that should be included in the
     * results. This may include any token which is allowed as a requested attribute in search requests, including the name of
     * an attribute, an asterisk (to indicate all user attributes), a plus sign (to indicate all operational attributes), an
     * object class name preceded with an at symbol (to indicate all attributes associated with that object class), an
     * attribute name preceded by a caret (to indicate that attribute should be excluded), or an object class name preceded by
     * a caret and an at symbol (to indicate that all attributes associated with that object class should be excluded). -
     * `last-mod`: Specifies the name or OID of an attribute type that must be updated in order for the modifiersName and
     * modifyTimestamp attributes to be updated in the target entry.
     */
    includeAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of base DNs below which composed values may be generated.
     */
    includeBaseDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of search filters that identify entries for which composed values may be generated.
     */
    includeFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether operation processing times should include the time spent waiting on the work queue. This will only be
     * available if the work queue is configured to monitor the queue time.
     */
    includeQueueTime?: pulumi.Input<boolean>;
    /**
     * If statistics should not be included for all applications, this property names the subset of applications that should be
     * included.
     */
    includedLdapApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the types of statistics related to LDAP connections and operation processing that should be included in the
     * output.
     */
    includedLdapStats?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: The base DNs for the local users whose
     * authentication attempts may be passed through to the PingOne service. - `pass-through-authentication`: The base DNs for
     * the local users whose authentication attempts may be passed through to an alternate server. -
     * `pluggable-pass-through-authentication`: The base DNs for the local users whose authentication attempts may be passed
     * through to the external authentication service.
     */
    includedLocalEntryBaseDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether statistics related to resource utilization such as JVM memory.
     */
    includedResourceStats?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the initial number of connections to establish to each external server against which authentication may be
     * attempted.
     */
    initialConnections?: pulumi.Input<number>;
    /**
     * Indicates whether to update the last access time for an entry targeted by a bind operation if the bind is unsuccessful.
     */
    invokeForFailedBinds?: pulumi.Input<boolean>;
    /**
     * Indicates whether the plug-in should be invoked for internal operations.
     */
    invokeForInternalOperations?: pulumi.Input<boolean>;
    /**
     * Specifies the days of the week which the Periodic GC Plugin should run. If no values are provided, then the plugin will
     * run every day at the specified time.
     */
    invokeGcDayOfWeeks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the times of the day at which garbage collection may be explicitly invoked. The times should be specified in
     * "HH:MM" format, with "HH" as a two-digit numeric value between 00 and 23 representing the hour of the day, and MM as a
     * two-digit numeric value between 00 and 59 representing the minute of the hour. All times will be interpreted in the UTC
     * time zone.
     */
    invokeGcTimeUtcs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the level of detail to include for the LDAP changelog.
     */
    ldapChangelogInfo?: pulumi.Input<string>;
    /**
     * Specifies the level of detail to include about the LDAP connection handlers.
     */
    ldapInfo?: pulumi.Input<string>;
    /**
     * The number of lines to log between logging the header line that summarizes the columns in the table.
     */
    linesBetweenHeader?: pulumi.Input<number>;
    /**
     * Specifies the level of detail to include about the Local DB Backends.
     */
    localDbBackendInfo?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `periodic-stats-logger`: The file name to use for the log files generated by the
     * Periodic Stats Logger Plugin. The path to the file can be specified either as relative to the server root or as an
     * absolute path. - `monitor-history`: The file name to use for the log files generated by the Monitor History Plugin. The
     * path to the file can be specified either as relative to the server root or as an absolute path. -
     * `referential-integrity`: Specifies the log file location where the update records are written when the plug-in is in
     * background-mode processing.
     */
    logFile?: pulumi.Input<string>;
    /**
     * Specifies the format to use when logging server statistics.
     */
    logFileFormat?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `periodic-stats-logger`: The UNIX permissions of the log files created by this
     * Periodic Stats Logger Plugin. - `monitor-history`: The UNIX permissions of the log files created by this Monitor History
     * Plugin.
     */
    logFilePermissions?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `periodic-stats-logger`: The duration between statistics collection and logging.
     * A new line is logged to the output for each interval. Setting this value too small can have an impact on performance. -
     * `monitor-history`: The duration between logging dumps of cn=monitor to a file.
     */
    logInterval?: pulumi.Input<string>;
    /**
     * Specifies the behavior that the server should exhibit if an error occurs during logging processing.
     */
    loggingErrorBehavior?: pulumi.Input<string>;
    /**
     * Specifies the lower bound for the numeric value which will be inserted into the search filter.
     */
    lowerBound?: pulumi.Input<number>;
    /**
     * Specifies a set of specific attributes for which DN mapping should be applied. This will only be applicable if the
     * enable-attribute-mapping property has a value of "true". Any attributes listed must be defined in the server schema with
     * either the distinguished name syntax or the name and optional UID syntax.
     */
    mapAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the maximum number of connections to maintain to each external server against which authentication may be
     * attempted. This value must be greater than or equal to the value for the initial-connections property.
     */
    maxConnections?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of entries that should be updated in a search operation. Only search result entries
     * actually returned to the client may have their last access time updated, but because a single search operation may
     * return a very large number of entries, the plugin will only update entries if no more than a specified number of entries
     * are updated.
     */
    maxSearchResultEntriesToUpdate?: pulumi.Input<number>;
    /**
     * Specifies the maximum frequency with which last access time values should be written for an entry. This may help limit
     * the rate of internal write operations processed in the server.
     */
    maxUpdateFrequency?: pulumi.Input<string>;
    /**
     * This setting smooths out the performance impact on the server by throttling the purging to the specified maximum number
     * of updates per second. To avoid a large backlog, this value should be set comfortably above the average rate that
     * expired data is generated. When purge-behavior is set to subtree-delete-entries, then deletion of the entire subtree is
     * considered a single update for the purposes of throttling.
     */
    maxUpdatesPerSecond?: pulumi.Input<number>;
    /**
     * An integer property that specifies the maximum number of membership changes that will be supported in a single modify
     * operation. A value of zero indicates that modify operations targeting the group entry should not be permitted to alter
     * the set of members for the group.
     */
    maximumMembershipUpdatesPerModify?: pulumi.Input<number>;
    /**
     * The behavior to exhibit for source attributes that have multiple values.
     */
    multiValuedAttributeBehavior?: pulumi.Input<string>;
    /**
     * The behavior to exhibit if multiple attribute types are specified.
     */
    multipleAttributeBehavior?: pulumi.Input<string>;
    /**
     * The behavior to exhibit if the plugin is configured with multiple value patterns.
     */
    multipleValuePatternBehavior?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The number of threads used to delete expired entries.
     */
    numDeleteThreads?: pulumi.Input<number>;
    /**
     * This controls how many of the most expensive phases are included per operation type in the monitor entry.
     */
    numMostExpensivePhasesShown?: pulumi.Input<number>;
    /**
     * Specifies the number of concurrent threads that should be used to process the search operations.
     */
    numThreads?: pulumi.Input<number>;
    /**
     * The number of worker threads to use to handle SNMP requests.
     */
    numWorkerThreads?: pulumi.Input<number>;
    /**
     * Specifies the OAuth Client ID used to authenticate connections to the PingOne API.
     */
    oauthClientId?: pulumi.Input<string>;
    /**
     * Specifies the OAuth Client Secret used to authenticate connections to the PingOne API.
     */
    oauthClientSecret?: pulumi.Input<string>;
    /**
     * Specifies a passphrase provider that can be used to obtain the OAuth Client Secret used to authenticate connections to
     * the PingOne API.
     */
    oauthClientSecretPassphraseProvider?: pulumi.Input<string>;
    /**
     * Specifies the types of operations that should result in access time updates.
     */
    operationTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path of an LDIF file that should be created with the results of the search.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: Indicates whether to attempt the
     * authentication in the PingOne service if the local user entry includes a password. This property will only be used if
     * try-local-bind is true. - `pass-through-authentication`: Indicates whether the bind attempt should be attempted against
     * a remote server in the event that the local bind fails but the local password is present. -
     * `pluggable-pass-through-authentication`: Indicates whether to attempt the authentication in the external service if the
     * local user entry includes a password. This property will be ignored if try-local-bind is false.
     */
    overrideLocalPassword?: pulumi.Input<boolean>;
    /**
     * The component used to manage authentication with the external authentication service.
     */
    passThroughAuthenticationHandler?: pulumi.Input<string>;
    /**
     * In a replicated environment, this determines the order in which peer servers should attempt to purge data.
     */
    peerServerPriorityIndex?: pulumi.Input<number>;
    /**
     * Controls whether per application LDAP statistics are included in the output for selected LDAP operation statistics.
     */
    perApplicationLdapStats?: pulumi.Input<string>;
    /**
     * The amount of time between consecutive pings sent by the sub-agent on its connection to the master agent. A value of
     * zero disables the sending of pings by the sub-agent.
     */
    pingInterval?: pulumi.Input<string>;
    /**
     * Specifies the set of plug-in types for the plug-in, which specifies the times at which the plug-in is invoked.
     */
    pluginTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This specifies how often the plugin should check for expired data. It also controls the offset of peer servers (see the
     * peer-server-priority-index for more information).
     */
    pollingInterval?: pulumi.Input<string>;
    /**
     * Indicates whether the server should prevent attempts to add a group as a regular member of an inverted static group. If
     * the members of another group should be considered members of an inverted static group, then the other group should be
     * added as a nested group rather than a regular member.
     */
    preventAddingGroupsAsInvertedStaticGroupMembers?: pulumi.Input<boolean>;
    /**
     * Indicates whether the server should prevent updates to user entries that attempt to add them as a member of an inverted
     * static group that does not exist.
     */
    preventAddingMembersToNonexistentGroups?: pulumi.Input<boolean>;
    /**
     * Indicates whether this Unique Attribute Plugin should reject a change that would result in one or more conflicts, even
     * if those conflicts only exist in soft-deleted entries.
     */
    preventConflictsWithSoftDeletedEntries?: pulumi.Input<boolean>;
    /**
     * Indicates whether the server should prevent updates to inverted static groups that add references to nested groups that
     * don't exist.
     */
    preventNestingNonexistentGroups?: pulumi.Input<boolean>;
    /**
     * An extension that should be appended to the name of an existing output file rather than deleting it. If a file already
     * exists with the full previous file name, then it will be deleted before the current file is renamed to become the
     * previous file.
     */
    previousFileExtension?: pulumi.Input<string>;
    /**
     * Specifies the action that should be taken by the profiler.
     */
    profileAction?: pulumi.Input<string>;
    /**
     * Specifies the path to the directory where profile information is to be written. This path may be either an absolute path
     * or a path that is relative to the root of the Directory Server instance.
     */
    profileDirectory?: pulumi.Input<string>;
    /**
     * Specifies the sample interval in milliseconds to be used when capturing profiling information in the server.
     */
    profileSampleInterval?: pulumi.Input<string>;
    /**
     * Specifies whether to delete expired entries or attribute values. By default entries are deleted.
     */
    purgeBehavior?: pulumi.Input<string>;
    /**
     * The level of support that the server should offer to allow treating search and compare operations targeting inverted
     * static groups as if they were traditional static groups.
     */
    readOperationSupport?: pulumi.Input<string>;
    /**
     * Specifies the base URL to use for the referrals generated by this plugin. It should include only the scheme, address,
     * and port to use to communicate with the target server (e.g., "ldap://server.example.com:389/").
     */
    referralBaseUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the level of detail to include about replication.
     */
    replicationInfo?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `last-access-time`: Specifies a set of request criteria that may be used to
     * indicate whether to apply access time updates for the associated operation. - `ping-one-pass-through-authentication`: A
     * reference to request criteria that will be used to indicate which bind requests should be passed through to the PingOne
     * service. - `sub-operation-timing`: Specifies a set of request criteria used to indicate that only operations for
     * requests matching this criteria should be counted when aggregating timing data. - `third-party`: Specifies a set of
     * request criteria that may be used to indicate that this Third Party Plugin should only be invoked for operations in
     * which the associated request matches this criteria. - `pass-through-authentication`: Specifies a set of request criteria
     * that must match the bind request for the bind to be passed through to an alternate server. - `simple-to-external-bind`:
     * Specifies a request criteria object that may be used to indicate the set of requests for which this plugin should be
     * used. If a value is provided, then this plugin will only be used for bind requests matching this criteria. -
     * `coalesce-modifications`: A reference to request criteria that indicates which modify requests should be coalesced. -
     * `delay`: Specifies a set of request criteria used to indicate that only operations for requests matching this criteria
     * should be subject to the configured delay. - `groovy-scripted`: Specifies a set of request criteria that may be used to
     * indicate that this Groovy Scripted Plugin should only be invoked for operations in which the associated request matches
     * this criteria. - `pluggable-pass-through-authentication`: A reference to request criteria that will be used to indicate
     * which bind requests should be passed through to the external authentication service.
     */
    requestCriteria?: pulumi.Input<string>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.DefaultPluginRequiredAction>[]>;
    /**
     * The type of Plugin resource. Options are ['last-access-time', 'stats-collector',
     * 'traditional-static-group-support-for-inverted-static-groups', 'internal-search-rate',
     * 'modifiable-password-policy-state', 'seven-bit-clean', 'clean-up-expired-pingfederate-persistent-access-grants',
     * 'periodic-gc', 'ping-one-pass-through-authentication', 'changelog-password-encryption', 'processing-time-histogram',
     * 'search-shutdown', 'periodic-stats-logger', 'purge-expired-data', 'change-subscription-notification',
     * 'sub-operation-timing', 'third-party', 'encrypt-attribute-values', 'pass-through-authentication', 'dn-mapper',
     * 'monitor-history', 'referral-on-update', 'simple-to-external-bind', 'custom', 'snmp-subagent', 'coalesce-modifications',
     * 'password-policy-import', 'profiler', 'clean-up-inactive-pingfederate-persistent-sessions', 'composed-attribute',
     * 'ldap-result-code-tracker', 'attribute-mapper', 'delay', 'clean-up-expired-pingfederate-persistent-sessions',
     * 'groovy-scripted', 'last-mod', 'pluggable-pass-through-authentication', 'referential-integrity', 'unique-attribute',
     * 'inverted-static-group-referential-integrity']
     */
    resourceType?: pulumi.Input<string>;
    /**
     * Retain some older files to give greater perspective on how monitoring information has changed over time.
     */
    retainFilesSparselyByAge?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `periodic-stats-logger`: The retention policy to use for the Periodic Stats
     * Logger Plugin . - `monitor-history`: The retention policy to use for the Monitor History Plugin .
     */
    retentionPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A listener that should be notified whenever a log file is rotated out of service.
     */
    rotationListeners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The rotation policy to use for the Periodic Stats Logger Plugin .
     */
    rotationPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The duration between statistics collections. Setting this value too small can have an impact on performance. This value
     * should be a multiple of collection-interval.
     */
    sampleInterval?: pulumi.Input<string>;
    /**
     * Server monitoring data can include a small amount of personally identifiable information in the form of LDAP DNs and
     * search filters. Setting this property to true will redact this information from the monitor files. This should only be
     * used when necessary, as it reduces the information available in the archive and can increase the time to find the source
     * of support issues.
     */
    sanitize?: pulumi.Input<boolean>;
    /**
     * The scope to use for the search.
     */
    scope?: pulumi.Input<string>;
    /**
     * The set of arguments used to customize the behavior for the Scripted Plugin. Each configuration property should be given
     * in the form 'name=value'.
     */
    scriptArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Plugin.
     */
    scriptClass?: pulumi.Input<string>;
    /**
     * The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the
     * search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.
     */
    searchBaseDn?: pulumi.Input<string>;
    /**
     * A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to
     * bind. For example, "(mail={uid:ldapFilterEscape}@example.com)" would construct a search filter to search for a user
     * whose entry in the local server contains a uid attribute whose value appears before "@example.com" in the mail attribute
     * in the external server. Note that the "ldapFilterEscape" modifier should almost always be used with attributes specified
     * in the pattern.
     */
    searchFilterPattern?: pulumi.Input<string>;
    /**
     * When enabled, separate monitor entries will be included for each application defined in the Global Configuration's
     * tracked-application property.
     */
    separateMonitorEntryPerTrackedApplication?: pulumi.Input<boolean>;
    /**
     * Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple
     * servers are defined.
     */
    serverAccessMode?: pulumi.Input<string>;
    /**
     * Specifies whether statistics related to resource utilization such as JVM memory and CPU/Network/Disk utilization.
     */
    serverInfo?: pulumi.Input<string>;
    /**
     * Specifies the LDAP external server(s) to which authentication attempts should be forwarded.
     */
    servers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the maximum amount of time to wait for a session to the master agent to be established.
     */
    sessionTimeout?: pulumi.Input<string>;
    /**
     * Specifies the source attribute type that may appear in client requests which should be remapped to the target attribute.
     * Note that the source attribute type must be defined in the server schema and must not be equal to the target attribute
     * type.
     */
    sourceAttribute?: pulumi.Input<string>;
    /**
     * The behavior to exhibit for modify and modify DN operations that update an entry to remove source attributes in such a
     * way that this plugin would no longer generate any composed values for that entry.
     */
    sourceAttributeRemovalBehavior?: pulumi.Input<string>;
    /**
     * Specifies the source DN that may appear in client requests which should be remapped to the target DN. Note that the
     * source DN must not be equal to the target DN.
     */
    sourceDn?: pulumi.Input<string>;
    /**
     * Specifies the level of detail to include about the status summary monitor entry.
     */
    statusSummaryInfo?: pulumi.Input<string>;
    /**
     * If the server is idle during the specified interval, then do not log any output if this property is set to true. The
     * server is idle if during the interval, no new connections were established, no operations were processed, and no
     * operations are pending.
     */
    suppressIfIdle?: pulumi.Input<boolean>;
    /**
     * Specifies the target attribute type to which the source attribute type should be mapped. Note that the target attribute
     * type must be defined in the server schema and must not be equal to the source attribute type.
     */
    targetAttribute?: pulumi.Input<string>;
    /**
     * The behavior to exhibit if the target attribute exists when initially populating the entry with composed values (whether
     * during an LDIF import, an add operation, or an invocation of the populate composed attribute values task).
     */
    targetAttributeExistsDuringInitialPopulationBehavior?: pulumi.Input<string>;
    /**
     * Specifies the DN to which the source DN should be mapped. Note that the target DN must not be equal to the source DN.
     */
    targetDn?: pulumi.Input<string>;
    /**
     * The object class that defines the type of traditional static group that this plugin will attempt to emulate for inverted
     * static groups.
     */
    traditionalStaticGroupObjectClass?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: Indicates whether to attempt the bind in
     * the local server first, or to only send it to the PingOne service. - `pass-through-authentication`: Indicates whether
     * the bind attempt should first be attempted against the local server. Depending on the value of the
     * override-local-password property, the bind attempt may then be attempted against a remote server if the local bind
     * fails. - `pluggable-pass-through-authentication`: Indicates whether to attempt the bind in the local server first and
     * only send the request to the external authentication service if the local bind attempt fails, or to only attempt the
     * bind in the external service.
     */
    tryLocalBind?: pulumi.Input<boolean>;
    /**
     * Specifies the type of attributes to check for value uniqueness.
     */
    types?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the interval in seconds when referential integrity updates are made.
     */
    updateInterval?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: Indicates whether to overwrite the user's
     * local password if the local bind fails but the authentication attempt succeeds when attempted in the PingOne service. -
     * `pass-through-authentication`: Indicates whether the local password value should be updated to the value used in the
     * bind request in the event that the local bind fails but the remote bind succeeds. -
     * `pluggable-pass-through-authentication`: Indicates whether to overwrite the user's local password if the local bind
     * fails but the authentication attempt succeeds when attempted in the external service. This property may only be set to
     * true if try-local-bind is also true.
     */
    updateLocalPassword?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: This is the DN of the user that will be
     * used to overwrite the user's local password if update-local-password is set. The DN put here should be added to
     * 'ignore-changes-by-dn' in the appropriate Sync Source. - `pluggable-pass-through-authentication`: The DN of the
     * authorization identity that will be used when updating the user's local password if update-local-password is true. This
     * is primarily intended for use if the Data Sync Server will be used to synchronize passwords between the local server and
     * the external service, and in that case, the DN used here should also be added to the ignore-changes-by-dn property in
     * the appropriate Sync Source object in the Data Sync Server configuration.
     */
    updateLocalPasswordDn?: pulumi.Input<string>;
    /**
     * The behavior to exhibit for modify and modify DN operations that update one or more of the source attributes used in any
     * of the value patterns.
     */
    updateSourceAttributeBehavior?: pulumi.Input<string>;
    /**
     * The behavior to exhibit for modify and modify DN operations that attempt to update the set of values for the target
     * attribute.
     */
    updateTargetAttributeBehavior?: pulumi.Input<string>;
    /**
     * The behavior to exhibit for modify or modify DN operations that update an entry that previously did not satisfy either
     * the base DN or filter criteria, but now do satisfy that criteria.
     */
    updatedEntryNewlyMatchesCriteriaBehavior?: pulumi.Input<string>;
    /**
     * The behavior to exhibit for modify or modify DN operations that update an entry that previously satisfied the base DN
     * and filter criteria, but now no longer satisfies that criteria.
     */
    updatedEntryNoLongerMatchesCriteriaBehavior?: pulumi.Input<string>;
    /**
     * Specifies the upper bound for the numeric value which will be inserted into the search filter.
     */
    upperBound?: pulumi.Input<number>;
    /**
     * The names of the attributes in the local user entry whose values must match the values of the corresponding fields in
     * the PingOne service.
     */
    userMappingLocalAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The names of the fields in the PingOne service whose values must match the values of the corresponding attributes in the
     * local user entry, as specified in the user-mapping-local-attribute property.
     */
    userMappingRemoteJsonFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a pattern for constructing the values to use for the target attribute type.
     */
    valuePatterns?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a DefaultPlugin resource.
 */
export interface DefaultPluginArgs {
    /**
     * An optional SCIM filter that will be ANDed with the filter created to identify the account in the PingOne service that
     * corresponds to the local entry. Only the "eq", "sw", "and", and "or" filter types may be used.
     */
    additionalUserMappingScimFilter?: pulumi.Input<string>;
    /**
     * The hostname or IP address of the SNMP master agent.
     */
    agentxAddress?: pulumi.Input<string>;
    /**
     * The port number on which the SNMP master agent will be contacted.
     */
    agentxPort?: pulumi.Input<number>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: Indicates whether to overwrite the user's
     * local password even if the password used to authenticate to the PingOne service would have failed validation if the user
     * attempted to set it directly. - `pass-through-authentication`: Indicates whether updates to the local password value
     * should accept passwords that do not meet password policy constraints. - `pluggable-pass-through-authentication`:
     * Indicates whether to overwrite the user's local password even if the password used to authenticate to the external
     * service would have failed validation if the user attempted to set it directly.
     */
    allowLaxPassThroughAuthenticationPasswords?: pulumi.Input<boolean>;
    /**
     * Specifies the OIDs of the controls that are allowed to be present in operations to coalesce. These controls are passed
     * through when the request is validated, but they will not be included when the background thread applies the coalesced
     * modify requests.
     */
    allowedRequestControls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `dn-mapper`: Indicates whether DNs in response messages containing the target DN
     * should always be remapped back to the source DN. If this is "false", then mapping will be performed for a response
     * message only if one or more elements of the associated request are mapped. Otherwise, the mapping will be performed for
     * all responses regardless of whether the mapping was applied to the request. - `attribute-mapper`: Indicates whether the
     * target attribute in response messages should always be remapped back to the source attribute. If this is "false", then
     * the mapping will be performed for a response message only if one or more elements of the associated request are mapped.
     * Otherwise, the mapping will be performed for all responses regardless of whether the mapping was applied to the request.
     */
    alwaysMapResponses?: pulumi.Input<boolean>;
    /**
     * Specifies the API endpoint for the PingOne web service.
     */
    apiUrl?: pulumi.Input<string>;
    /**
     * Specifies whether to append to existing log files.
     */
    append?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `seven-bit-clean`: Specifies the name or OID of an attribute type for which
     * values should be checked to ensure that they are 7-bit clean. - `encrypt-attribute-values`: The attribute types whose
     * values should be encrypted. - `composed-attribute`: The name or OID of the attribute type for which values are to be
     * generated. - `referential-integrity`: Specifies the attribute types for which referential integrity is to be maintained.
     */
    attributeTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the API endpoint for the PingOne authentication service.
     */
    authUrl?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - One of [`clean-up-expired-pingfederate-persistent-access-grants`,
     * `purge-expired-data`, `clean-up-inactive-pingfederate-persistent-sessions`,
     * `clean-up-expired-pingfederate-persistent-sessions`]: Only entries located within the subtree specified by this base DN
     * are eligible for purging. - `internal-search-rate`: Specifies the base DN to use for the searches to perform. -
     * `modifiable-password-policy-state`: A base DN that may be used to identify entries that should support the
     * ds-pwp-modifiable-state-json operational attribute. - `seven-bit-clean`: Specifies the base DN below which the checking
     * is performed. - `search-shutdown`: The base DN to use for the search. - `referral-on-update`: Specifies a base DN for
     * requests for which to send referrals in response to update operations. - `referential-integrity`: Specifies the base DN
     * that limits the scope within which referential integrity is maintained. - `unique-attribute`: Specifies a base DN within
     * which the attribute must be unique.
     */
    baseDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of
     * a combination of static text and attribute values and other directives enclosed in curly braces. For example, the value
     * "cn={cn},ou=People,dc=example,dc=com" indicates that the remote bind DN should be constructed from the text "cn="
     * followed by the value of the local entry's cn attribute followed by the text "ou=People,dc=example,dc=com". If an
     * attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the
     * name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a
     * bind DN pattern of "{seeAlso}" would be appropriate). Note that a bind DN pattern can be used to construct a bind DN
     * that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a
     * Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an
     * alternative to a distinguished name.
     */
    bindDnPattern?: pulumi.Input<string>;
    /**
     * A passphrase that may be used to generate the key for encrypting passwords stored in the changelog. The same passphrase
     * also needs to be set (either through the "changelog-password-decryption-key" property or the
     * "changelog-password-decryption-key-passphrase-provider" property) in the Global Sync Configuration in the Data Sync
     * Server.
     */
    changelogPasswordEncryptionKey?: pulumi.Input<string>;
    /**
     * A passphrase provider that may be used to obtain the passphrase that will be used to generate the key for encrypting
     * passwords stored in the changelog. The same passphrase also needs to be set (either through the
     * "changelog-password-decryption-key" property or the "changelog-password-decryption-key-passphrase-provider" property) in
     * the Global Sync Configuration in the Data Sync Server.
     */
    changelogPasswordEncryptionKeyPassphraseProvider?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `stats-collector`: Some of the calculated statistics, such as the average and
     * maximum queue sizes, can use multiple samples within a log interval. This value controls how often samples are gathered,
     * and setting this value too small can have an adverse impact on performance. - `periodic-stats-logger`: Some of the
     * calculated statistics, such as the average and maximum queue sizes, can use multiple samples within a log interval. This
     * value controls how often samples are gathered. It should be a multiple of the log-interval.
     */
    collectionInterval?: pulumi.Input<string>;
    /**
     * The maximum amount of time to wait between attempts to establish a connection to the master agent.
     */
    connectRetryMaxWait?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: A reference to connection criteria that
     * will be used to indicate which bind requests should be passed through to the PingOne service. -
     * `pass-through-authentication`: Specifies a set of connection criteria that must match the client associated with the
     * bind request for the bind to be passed through to an alternate server. - `simple-to-external-bind`: Specifies a
     * connection criteria object that may be used to indicate the set of clients for which this plugin should be used. If a
     * value is provided, then this plugin will only be used for requests from client connections matching this criteria. -
     * `delay`: Specifies a set of connection criteria used to indicate that only operations from clients matching this
     * criteria should be subject to the configured delay. - `pluggable-pass-through-authentication`: A reference to connection
     * criteria that will be used to indicate which bind requests should be passed through to the external authentication
     * service.
     */
    connectionCriteria?: pulumi.Input<string>;
    /**
     * The SNMP context name for this sub-agent. The context name must not be longer than 30 ASCII characters. Each server in a
     * topology must have a unique SNMP context name.
     */
    contextName?: pulumi.Input<string>;
    /**
     * When the datetime-format property is configured with a value of "custom", this specifies the format (using a string
     * compatible with the java.text.SimpleDateFormat class) that will be used to search for expired data.
     */
    customDatetimeFormat?: pulumi.Input<string>;
    /**
     * Specifies the time zone to use when generating a date string using the configured custom-datetime-format value. The
     * provided value must be accepted by java.util.TimeZone.getTimeZone.
     */
    customTimezone?: pulumi.Input<string>;
    /**
     * The LDAP attribute that determines when data should be deleted. This could store the expiration time, or it could store
     * the creation time and the expiration-offset property specifies the duration before data is deleted.
     */
    datetimeAttribute?: pulumi.Input<string>;
    /**
     * Specifies the format of the datetime stored within the entry that determines when data should be purged.
     */
    datetimeFormat?: pulumi.Input<string>;
    /**
     * The top-level JSON field within the configured datetime-attribute that determines when data should be deleted. This
     * could store the expiration time, or it could store the creation time and the expiration-offset property specifies the
     * duration before data is deleted.
     */
    datetimeJsonField?: pulumi.Input<string>;
    /**
     * Specifies the names of password storage schemes that to be used for encoding passwords contained in attributes with the
     * auth password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password
     * policy should be used to govern them.
     */
    defaultAuthPasswordStorageSchemes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the names of the password storage schemes to be used for encoding passwords contained in attributes with the
     * user password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password
     * policy is to be used to govern them.
     */
    defaultUserPasswordStorageSchemes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The delay to inject for operations matching the associated criteria.
     */
    delay?: pulumi.Input<string>;
    /**
     * Specifies the length of time that the Directory Server should wait after sending the "force-gc-starting" administrative
     * alert before actually invoking the garbage collection processing.
     */
    delayAfterAlert?: pulumi.Input<string>;
    /**
     * Specifies the length of time that the Directory Server should wait after successfully completing the garbage collection
     * processing, before removing the "force-gc-starting" administrative alert, which marks the server as unavailable.
     */
    delayPostGc?: pulumi.Input<string>;
    /**
     * A description for this Plugin
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external
     * servers.
     */
    dnMaps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This property controls whether a value in the output is shown as empty if the value is zero.
     */
    emptyInsteadOfZero?: pulumi.Input<boolean>;
    /**
     * Indicates whether DN mapping should be applied to the values of attributes with appropriate syntaxes.
     */
    enableAttributeMapping?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `dn-mapper`: Indicates whether DN mapping should be applied to DNs that may be
     * present in specific controls. DN mapping will only be applied for control types which are specifically supported by the
     * DN mapper plugin. - `attribute-mapper`: Indicates whether mapping should be applied to attribute types that may be
     * present in specific controls. If enabled, attribute mapping will only be applied for control types which are
     * specifically supported by the attribute mapper plugin.
     */
    enableControlMapping?: pulumi.Input<boolean>;
    /**
     * Indicates whether the profiler plug-in is to start collecting data automatically when the Directory Server is started.
     */
    enableProfilingOnStartup?: pulumi.Input<boolean>;
    /**
     * Indicates whether the plug-in is enabled for use.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided,
     * the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used
     * to obtain a list of the encryption settings definitions available in the server.
     */
    encryptionSettingsDefinitionId?: pulumi.Input<string>;
    /**
     * Specifies the level of detail to include for each entry cache.
     */
    entryCacheInfo?: pulumi.Input<string>;
    /**
     * Specifies the PingOne Environment that will be associated with this PingOne Pass Through Authentication Plugin.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * Specifies the name or OID of an attribute type which may be updated in a modify or modify DN operation without causing
     * the modifiersName and modifyTimestamp values to be updated for that entry.
     */
    excludeAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of base DNs below which composed values will not be generated.
     */
    excludeBaseDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of search filters that identify entries for which composed values will not be generated.
     */
    excludeFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `purge-expired-data`: The duration to wait after the value specified in
     * datetime-attribute (and optionally datetime-json-field) before purging the data. -
     * `clean-up-inactive-pingfederate-persistent-sessions`: Sessions whose last activity timestamp is older than this offset
     * will be removed.
     */
    expirationOffset?: pulumi.Input<string>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Plugin. Each configuration property should be
     * given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Plugin.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * Specifies a prefix which will be used in front of the randomly-selected numeric value in all search filters used. If no
     * upper bound is defined, then this should contain the entire filter string.
     */
    filterPrefix?: pulumi.Input<string>;
    /**
     * Specifies a suffix which will be used after of the randomly-selected numeric value in all search filters used. If no
     * upper bound is defined, then this should be omitted.
     */
    filterSuffix?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `modifiable-password-policy-state`: A filter that may be used to identify entries
     * that should support the ds-pwp-modifiable-state-json operational attribute. - `search-shutdown`: The filter to use for
     * the search. - `purge-expired-data`: Only entries that match this LDAP filter will be eligible for having data purged. -
     * `unique-attribute`: Specifies the search filter to apply to determine if attribute uniqueness is enforced for the
     * matching entries.
     */
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the level of detail to include for Gauges.
     */
    gaugeInfo?: pulumi.Input<string>;
    /**
     * Indicates whether this plugin should store metric samples on disk for use by the Data Metrics Server. If the Stats
     * Collector Plugin is only being used to collect metrics for one or more StatsD Monitoring Endpoints, then this can be set
     * to false to prevent unnecessary I/O.
     */
    generateCollectorFiles?: pulumi.Input<boolean>;
    /**
     * This property controls whether the header prefix, which applies to a group of columns, appears at the start of each
     * column header or only the first column in a group.
     */
    headerPrefixPerColumn?: pulumi.Input<boolean>;
    /**
     * Specifies the boundary values that will be used to separate the processing times into categories. Values should be
     * specified as durations, and all values must be greater than zero.
     */
    histogramCategoryBoundaries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The format of the data in the processing time histogram.
     */
    histogramFormat?: pulumi.Input<string>;
    /**
     * Specifies the operation type(s) to use when outputting the response time histogram data. The order of the operations
     * here determines the order of the columns in the output. Use the per-application-ldap-stats setting to further control
     * this.
     */
    histogramOpTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the level of detail to include about the host system resource utilization including CPU, memory, disk and
     * network activity.
     */
    hostInfos?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. A reference to an HTTP proxy server that should be used for
     * requests sent to the PingOne service.
     */
    httpProxyExternalServer?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: A set of password policy state error
     * conditions that should not be enforced when authentication succeeds when attempted in the PingOne service. This option
     * can only be used if try-local-bind is true. - `pluggable-pass-through-authentication`: A set of password policy state
     * error conditions that should not be enforced when authentication succeeds when attempted in the external service. This
     * option can only be used if try-local-bind is true.
     */
    ignoredPasswordPolicyStateErrorConditions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `search-shutdown`: The name of an attribute that should be included in the
     * results. This may include any token which is allowed as a requested attribute in search requests, including the name of
     * an attribute, an asterisk (to indicate all user attributes), a plus sign (to indicate all operational attributes), an
     * object class name preceded with an at symbol (to indicate all attributes associated with that object class), an
     * attribute name preceded by a caret (to indicate that attribute should be excluded), or an object class name preceded by
     * a caret and an at symbol (to indicate that all attributes associated with that object class should be excluded). -
     * `last-mod`: Specifies the name or OID of an attribute type that must be updated in order for the modifiersName and
     * modifyTimestamp attributes to be updated in the target entry.
     */
    includeAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of base DNs below which composed values may be generated.
     */
    includeBaseDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of search filters that identify entries for which composed values may be generated.
     */
    includeFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether operation processing times should include the time spent waiting on the work queue. This will only be
     * available if the work queue is configured to monitor the queue time.
     */
    includeQueueTime?: pulumi.Input<boolean>;
    /**
     * If statistics should not be included for all applications, this property names the subset of applications that should be
     * included.
     */
    includedLdapApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the types of statistics related to LDAP connections and operation processing that should be included in the
     * output.
     */
    includedLdapStats?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: The base DNs for the local users whose
     * authentication attempts may be passed through to the PingOne service. - `pass-through-authentication`: The base DNs for
     * the local users whose authentication attempts may be passed through to an alternate server. -
     * `pluggable-pass-through-authentication`: The base DNs for the local users whose authentication attempts may be passed
     * through to the external authentication service.
     */
    includedLocalEntryBaseDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether statistics related to resource utilization such as JVM memory.
     */
    includedResourceStats?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the initial number of connections to establish to each external server against which authentication may be
     * attempted.
     */
    initialConnections?: pulumi.Input<number>;
    /**
     * Indicates whether to update the last access time for an entry targeted by a bind operation if the bind is unsuccessful.
     */
    invokeForFailedBinds?: pulumi.Input<boolean>;
    /**
     * Indicates whether the plug-in should be invoked for internal operations.
     */
    invokeForInternalOperations?: pulumi.Input<boolean>;
    /**
     * Specifies the days of the week which the Periodic GC Plugin should run. If no values are provided, then the plugin will
     * run every day at the specified time.
     */
    invokeGcDayOfWeeks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the times of the day at which garbage collection may be explicitly invoked. The times should be specified in
     * "HH:MM" format, with "HH" as a two-digit numeric value between 00 and 23 representing the hour of the day, and MM as a
     * two-digit numeric value between 00 and 59 representing the minute of the hour. All times will be interpreted in the UTC
     * time zone.
     */
    invokeGcTimeUtcs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the level of detail to include for the LDAP changelog.
     */
    ldapChangelogInfo?: pulumi.Input<string>;
    /**
     * Specifies the level of detail to include about the LDAP connection handlers.
     */
    ldapInfo?: pulumi.Input<string>;
    /**
     * The number of lines to log between logging the header line that summarizes the columns in the table.
     */
    linesBetweenHeader?: pulumi.Input<number>;
    /**
     * Specifies the level of detail to include about the Local DB Backends.
     */
    localDbBackendInfo?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `periodic-stats-logger`: The file name to use for the log files generated by the
     * Periodic Stats Logger Plugin. The path to the file can be specified either as relative to the server root or as an
     * absolute path. - `monitor-history`: The file name to use for the log files generated by the Monitor History Plugin. The
     * path to the file can be specified either as relative to the server root or as an absolute path. -
     * `referential-integrity`: Specifies the log file location where the update records are written when the plug-in is in
     * background-mode processing.
     */
    logFile?: pulumi.Input<string>;
    /**
     * Specifies the format to use when logging server statistics.
     */
    logFileFormat?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `periodic-stats-logger`: The UNIX permissions of the log files created by this
     * Periodic Stats Logger Plugin. - `monitor-history`: The UNIX permissions of the log files created by this Monitor History
     * Plugin.
     */
    logFilePermissions?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `periodic-stats-logger`: The duration between statistics collection and logging.
     * A new line is logged to the output for each interval. Setting this value too small can have an impact on performance. -
     * `monitor-history`: The duration between logging dumps of cn=monitor to a file.
     */
    logInterval?: pulumi.Input<string>;
    /**
     * Specifies the behavior that the server should exhibit if an error occurs during logging processing.
     */
    loggingErrorBehavior?: pulumi.Input<string>;
    /**
     * Specifies the lower bound for the numeric value which will be inserted into the search filter.
     */
    lowerBound?: pulumi.Input<number>;
    /**
     * Specifies a set of specific attributes for which DN mapping should be applied. This will only be applicable if the
     * enable-attribute-mapping property has a value of "true". Any attributes listed must be defined in the server schema with
     * either the distinguished name syntax or the name and optional UID syntax.
     */
    mapAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the maximum number of connections to maintain to each external server against which authentication may be
     * attempted. This value must be greater than or equal to the value for the initial-connections property.
     */
    maxConnections?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of entries that should be updated in a search operation. Only search result entries
     * actually returned to the client may have their last access time updated, but because a single search operation may
     * return a very large number of entries, the plugin will only update entries if no more than a specified number of entries
     * are updated.
     */
    maxSearchResultEntriesToUpdate?: pulumi.Input<number>;
    /**
     * Specifies the maximum frequency with which last access time values should be written for an entry. This may help limit
     * the rate of internal write operations processed in the server.
     */
    maxUpdateFrequency?: pulumi.Input<string>;
    /**
     * This setting smooths out the performance impact on the server by throttling the purging to the specified maximum number
     * of updates per second. To avoid a large backlog, this value should be set comfortably above the average rate that
     * expired data is generated. When purge-behavior is set to subtree-delete-entries, then deletion of the entire subtree is
     * considered a single update for the purposes of throttling.
     */
    maxUpdatesPerSecond?: pulumi.Input<number>;
    /**
     * An integer property that specifies the maximum number of membership changes that will be supported in a single modify
     * operation. A value of zero indicates that modify operations targeting the group entry should not be permitted to alter
     * the set of members for the group.
     */
    maximumMembershipUpdatesPerModify?: pulumi.Input<number>;
    /**
     * The behavior to exhibit for source attributes that have multiple values.
     */
    multiValuedAttributeBehavior?: pulumi.Input<string>;
    /**
     * The behavior to exhibit if multiple attribute types are specified.
     */
    multipleAttributeBehavior?: pulumi.Input<string>;
    /**
     * The behavior to exhibit if the plugin is configured with multiple value patterns.
     */
    multipleValuePatternBehavior?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * The number of threads used to delete expired entries.
     */
    numDeleteThreads?: pulumi.Input<number>;
    /**
     * This controls how many of the most expensive phases are included per operation type in the monitor entry.
     */
    numMostExpensivePhasesShown?: pulumi.Input<number>;
    /**
     * Specifies the number of concurrent threads that should be used to process the search operations.
     */
    numThreads?: pulumi.Input<number>;
    /**
     * The number of worker threads to use to handle SNMP requests.
     */
    numWorkerThreads?: pulumi.Input<number>;
    /**
     * Specifies the OAuth Client ID used to authenticate connections to the PingOne API.
     */
    oauthClientId?: pulumi.Input<string>;
    /**
     * Specifies the OAuth Client Secret used to authenticate connections to the PingOne API.
     */
    oauthClientSecret?: pulumi.Input<string>;
    /**
     * Specifies a passphrase provider that can be used to obtain the OAuth Client Secret used to authenticate connections to
     * the PingOne API.
     */
    oauthClientSecretPassphraseProvider?: pulumi.Input<string>;
    /**
     * Specifies the types of operations that should result in access time updates.
     */
    operationTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path of an LDIF file that should be created with the results of the search.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: Indicates whether to attempt the
     * authentication in the PingOne service if the local user entry includes a password. This property will only be used if
     * try-local-bind is true. - `pass-through-authentication`: Indicates whether the bind attempt should be attempted against
     * a remote server in the event that the local bind fails but the local password is present. -
     * `pluggable-pass-through-authentication`: Indicates whether to attempt the authentication in the external service if the
     * local user entry includes a password. This property will be ignored if try-local-bind is false.
     */
    overrideLocalPassword?: pulumi.Input<boolean>;
    /**
     * The component used to manage authentication with the external authentication service.
     */
    passThroughAuthenticationHandler?: pulumi.Input<string>;
    /**
     * In a replicated environment, this determines the order in which peer servers should attempt to purge data.
     */
    peerServerPriorityIndex?: pulumi.Input<number>;
    /**
     * Controls whether per application LDAP statistics are included in the output for selected LDAP operation statistics.
     */
    perApplicationLdapStats?: pulumi.Input<string>;
    /**
     * The amount of time between consecutive pings sent by the sub-agent on its connection to the master agent. A value of
     * zero disables the sending of pings by the sub-agent.
     */
    pingInterval?: pulumi.Input<string>;
    /**
     * Specifies the set of plug-in types for the plug-in, which specifies the times at which the plug-in is invoked.
     */
    pluginTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This specifies how often the plugin should check for expired data. It also controls the offset of peer servers (see the
     * peer-server-priority-index for more information).
     */
    pollingInterval?: pulumi.Input<string>;
    /**
     * Indicates whether the server should prevent attempts to add a group as a regular member of an inverted static group. If
     * the members of another group should be considered members of an inverted static group, then the other group should be
     * added as a nested group rather than a regular member.
     */
    preventAddingGroupsAsInvertedStaticGroupMembers?: pulumi.Input<boolean>;
    /**
     * Indicates whether the server should prevent updates to user entries that attempt to add them as a member of an inverted
     * static group that does not exist.
     */
    preventAddingMembersToNonexistentGroups?: pulumi.Input<boolean>;
    /**
     * Indicates whether this Unique Attribute Plugin should reject a change that would result in one or more conflicts, even
     * if those conflicts only exist in soft-deleted entries.
     */
    preventConflictsWithSoftDeletedEntries?: pulumi.Input<boolean>;
    /**
     * Indicates whether the server should prevent updates to inverted static groups that add references to nested groups that
     * don't exist.
     */
    preventNestingNonexistentGroups?: pulumi.Input<boolean>;
    /**
     * An extension that should be appended to the name of an existing output file rather than deleting it. If a file already
     * exists with the full previous file name, then it will be deleted before the current file is renamed to become the
     * previous file.
     */
    previousFileExtension?: pulumi.Input<string>;
    /**
     * Specifies the action that should be taken by the profiler.
     */
    profileAction?: pulumi.Input<string>;
    /**
     * Specifies the path to the directory where profile information is to be written. This path may be either an absolute path
     * or a path that is relative to the root of the Directory Server instance.
     */
    profileDirectory?: pulumi.Input<string>;
    /**
     * Specifies the sample interval in milliseconds to be used when capturing profiling information in the server.
     */
    profileSampleInterval?: pulumi.Input<string>;
    /**
     * Specifies whether to delete expired entries or attribute values. By default entries are deleted.
     */
    purgeBehavior?: pulumi.Input<string>;
    /**
     * The level of support that the server should offer to allow treating search and compare operations targeting inverted
     * static groups as if they were traditional static groups.
     */
    readOperationSupport?: pulumi.Input<string>;
    /**
     * Specifies the base URL to use for the referrals generated by this plugin. It should include only the scheme, address,
     * and port to use to communicate with the target server (e.g., "ldap://server.example.com:389/").
     */
    referralBaseUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the level of detail to include about replication.
     */
    replicationInfo?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `last-access-time`: Specifies a set of request criteria that may be used to
     * indicate whether to apply access time updates for the associated operation. - `ping-one-pass-through-authentication`: A
     * reference to request criteria that will be used to indicate which bind requests should be passed through to the PingOne
     * service. - `sub-operation-timing`: Specifies a set of request criteria used to indicate that only operations for
     * requests matching this criteria should be counted when aggregating timing data. - `third-party`: Specifies a set of
     * request criteria that may be used to indicate that this Third Party Plugin should only be invoked for operations in
     * which the associated request matches this criteria. - `pass-through-authentication`: Specifies a set of request criteria
     * that must match the bind request for the bind to be passed through to an alternate server. - `simple-to-external-bind`:
     * Specifies a request criteria object that may be used to indicate the set of requests for which this plugin should be
     * used. If a value is provided, then this plugin will only be used for bind requests matching this criteria. -
     * `coalesce-modifications`: A reference to request criteria that indicates which modify requests should be coalesced. -
     * `delay`: Specifies a set of request criteria used to indicate that only operations for requests matching this criteria
     * should be subject to the configured delay. - `groovy-scripted`: Specifies a set of request criteria that may be used to
     * indicate that this Groovy Scripted Plugin should only be invoked for operations in which the associated request matches
     * this criteria. - `pluggable-pass-through-authentication`: A reference to request criteria that will be used to indicate
     * which bind requests should be passed through to the external authentication service.
     */
    requestCriteria?: pulumi.Input<string>;
    /**
     * Retain some older files to give greater perspective on how monitoring information has changed over time.
     */
    retainFilesSparselyByAge?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `periodic-stats-logger`: The retention policy to use for the Periodic Stats
     * Logger Plugin . - `monitor-history`: The retention policy to use for the Monitor History Plugin .
     */
    retentionPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A listener that should be notified whenever a log file is rotated out of service.
     */
    rotationListeners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The rotation policy to use for the Periodic Stats Logger Plugin .
     */
    rotationPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The duration between statistics collections. Setting this value too small can have an impact on performance. This value
     * should be a multiple of collection-interval.
     */
    sampleInterval?: pulumi.Input<string>;
    /**
     * Server monitoring data can include a small amount of personally identifiable information in the form of LDAP DNs and
     * search filters. Setting this property to true will redact this information from the monitor files. This should only be
     * used when necessary, as it reduces the information available in the archive and can increase the time to find the source
     * of support issues.
     */
    sanitize?: pulumi.Input<boolean>;
    /**
     * The scope to use for the search.
     */
    scope?: pulumi.Input<string>;
    /**
     * The set of arguments used to customize the behavior for the Scripted Plugin. Each configuration property should be given
     * in the form 'name=value'.
     */
    scriptArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Plugin.
     */
    scriptClass?: pulumi.Input<string>;
    /**
     * The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the
     * search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.
     */
    searchBaseDn?: pulumi.Input<string>;
    /**
     * A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to
     * bind. For example, "(mail={uid:ldapFilterEscape}@example.com)" would construct a search filter to search for a user
     * whose entry in the local server contains a uid attribute whose value appears before "@example.com" in the mail attribute
     * in the external server. Note that the "ldapFilterEscape" modifier should almost always be used with attributes specified
     * in the pattern.
     */
    searchFilterPattern?: pulumi.Input<string>;
    /**
     * When enabled, separate monitor entries will be included for each application defined in the Global Configuration's
     * tracked-application property.
     */
    separateMonitorEntryPerTrackedApplication?: pulumi.Input<boolean>;
    /**
     * Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple
     * servers are defined.
     */
    serverAccessMode?: pulumi.Input<string>;
    /**
     * Specifies whether statistics related to resource utilization such as JVM memory and CPU/Network/Disk utilization.
     */
    serverInfo?: pulumi.Input<string>;
    /**
     * Specifies the LDAP external server(s) to which authentication attempts should be forwarded.
     */
    servers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the maximum amount of time to wait for a session to the master agent to be established.
     */
    sessionTimeout?: pulumi.Input<string>;
    /**
     * Specifies the source attribute type that may appear in client requests which should be remapped to the target attribute.
     * Note that the source attribute type must be defined in the server schema and must not be equal to the target attribute
     * type.
     */
    sourceAttribute?: pulumi.Input<string>;
    /**
     * The behavior to exhibit for modify and modify DN operations that update an entry to remove source attributes in such a
     * way that this plugin would no longer generate any composed values for that entry.
     */
    sourceAttributeRemovalBehavior?: pulumi.Input<string>;
    /**
     * Specifies the source DN that may appear in client requests which should be remapped to the target DN. Note that the
     * source DN must not be equal to the target DN.
     */
    sourceDn?: pulumi.Input<string>;
    /**
     * Specifies the level of detail to include about the status summary monitor entry.
     */
    statusSummaryInfo?: pulumi.Input<string>;
    /**
     * If the server is idle during the specified interval, then do not log any output if this property is set to true. The
     * server is idle if during the interval, no new connections were established, no operations were processed, and no
     * operations are pending.
     */
    suppressIfIdle?: pulumi.Input<boolean>;
    /**
     * Specifies the target attribute type to which the source attribute type should be mapped. Note that the target attribute
     * type must be defined in the server schema and must not be equal to the source attribute type.
     */
    targetAttribute?: pulumi.Input<string>;
    /**
     * The behavior to exhibit if the target attribute exists when initially populating the entry with composed values (whether
     * during an LDIF import, an add operation, or an invocation of the populate composed attribute values task).
     */
    targetAttributeExistsDuringInitialPopulationBehavior?: pulumi.Input<string>;
    /**
     * Specifies the DN to which the source DN should be mapped. Note that the target DN must not be equal to the source DN.
     */
    targetDn?: pulumi.Input<string>;
    /**
     * The object class that defines the type of traditional static group that this plugin will attempt to emulate for inverted
     * static groups.
     */
    traditionalStaticGroupObjectClass?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: Indicates whether to attempt the bind in
     * the local server first, or to only send it to the PingOne service. - `pass-through-authentication`: Indicates whether
     * the bind attempt should first be attempted against the local server. Depending on the value of the
     * override-local-password property, the bind attempt may then be attempted against a remote server if the local bind
     * fails. - `pluggable-pass-through-authentication`: Indicates whether to attempt the bind in the local server first and
     * only send the request to the external authentication service if the local bind attempt fails, or to only attempt the
     * bind in the external service.
     */
    tryLocalBind?: pulumi.Input<boolean>;
    /**
     * Specifies the type of attributes to check for value uniqueness.
     */
    types?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the interval in seconds when referential integrity updates are made.
     */
    updateInterval?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: Indicates whether to overwrite the user's
     * local password if the local bind fails but the authentication attempt succeeds when attempted in the PingOne service. -
     * `pass-through-authentication`: Indicates whether the local password value should be updated to the value used in the
     * bind request in the event that the local bind fails but the remote bind succeeds. -
     * `pluggable-pass-through-authentication`: Indicates whether to overwrite the user's local password if the local bind
     * fails but the authentication attempt succeeds when attempted in the external service. This property may only be set to
     * true if try-local-bind is also true.
     */
    updateLocalPassword?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `ping-one-pass-through-authentication`: This is the DN of the user that will be
     * used to overwrite the user's local password if update-local-password is set. The DN put here should be added to
     * 'ignore-changes-by-dn' in the appropriate Sync Source. - `pluggable-pass-through-authentication`: The DN of the
     * authorization identity that will be used when updating the user's local password if update-local-password is true. This
     * is primarily intended for use if the Data Sync Server will be used to synchronize passwords between the local server and
     * the external service, and in that case, the DN used here should also be added to the ignore-changes-by-dn property in
     * the appropriate Sync Source object in the Data Sync Server configuration.
     */
    updateLocalPasswordDn?: pulumi.Input<string>;
    /**
     * The behavior to exhibit for modify and modify DN operations that update one or more of the source attributes used in any
     * of the value patterns.
     */
    updateSourceAttributeBehavior?: pulumi.Input<string>;
    /**
     * The behavior to exhibit for modify and modify DN operations that attempt to update the set of values for the target
     * attribute.
     */
    updateTargetAttributeBehavior?: pulumi.Input<string>;
    /**
     * The behavior to exhibit for modify or modify DN operations that update an entry that previously did not satisfy either
     * the base DN or filter criteria, but now do satisfy that criteria.
     */
    updatedEntryNewlyMatchesCriteriaBehavior?: pulumi.Input<string>;
    /**
     * The behavior to exhibit for modify or modify DN operations that update an entry that previously satisfied the base DN
     * and filter criteria, but now no longer satisfies that criteria.
     */
    updatedEntryNoLongerMatchesCriteriaBehavior?: pulumi.Input<string>;
    /**
     * Specifies the upper bound for the numeric value which will be inserted into the search filter.
     */
    upperBound?: pulumi.Input<number>;
    /**
     * The names of the attributes in the local user entry whose values must match the values of the corresponding fields in
     * the PingOne service.
     */
    userMappingLocalAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The names of the fields in the PingOne service whose values must match the values of the corresponding attributes in the
     * local user entry, as specified in the user-mapping-local-attribute property.
     */
    userMappingRemoteJsonFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a pattern for constructing the values to use for the target attribute type.
     */
    valuePatterns?: pulumi.Input<pulumi.Input<string>[]>;
}
