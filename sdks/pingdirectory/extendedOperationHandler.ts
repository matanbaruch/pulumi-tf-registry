// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ExtendedOperationHandler extends pulumi.CustomResource {
    /**
     * Get an existing ExtendedOperationHandler resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExtendedOperationHandlerState, opts?: pulumi.CustomResourceOptions): ExtendedOperationHandler {
        return new ExtendedOperationHandler(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/extendedOperationHandler:ExtendedOperationHandler';

    /**
     * Returns true if the given object is an instance of ExtendedOperationHandler.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExtendedOperationHandler {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExtendedOperationHandler.__pulumiType;
    }

    /**
     * The number of adjacent time intervals (both before and after the current time) that should be checked when performing
     * authentication.
     */
    public readonly adjacentIntervalsToCheck!: pulumi.Output<number>;
    /**
     * Indicates whether clients should be allowed to directly provide a new listener or inter-server certificate chain in the
     * extended request.
     */
    public readonly allowRemotelyProvidedCertificates!: pulumi.Output<boolean>;
    /**
     * The types of replace certificate operations that clients will be allowed to request.
     */
    public readonly allowedOperations!: pulumi.Output<string[]>;
    /**
     * A set of criteria that client connections must satisfy before they will be allowed to request the associated extended
     * operations.
     */
    public readonly connectionCriteria!: pulumi.Output<string | undefined>;
    /**
     * When the `type` attribute is set to: - `single-use-tokens`: The set of delivery mechanisms that may be used to deliver
     * single-use tokens to users in requests that do not specify one or more preferred delivery mechanisms. - `deliver-otp`:
     * The set of delivery mechanisms that may be used to deliver one-time passwords to users in requests that do not specify
     * one or more preferred delivery mechanisms.
     */
    public readonly defaultOtpDeliveryMechanisms!: pulumi.Output<string[]>;
    /**
     * The default length of time that a single-use token will be considered valid by the server if the client doesn't specify
     * a duration in the deliver single-use token request.
     */
    public readonly defaultSingleUseTokenValidityDuration!: pulumi.Output<string>;
    /**
     * The set of delivery mechanisms that may be used to deliver password reset tokens to users for requests that do not
     * specify one or more preferred delivery mechanisms.
     */
    public readonly defaultTokenDeliveryMechanisms!: pulumi.Output<string[]>;
    /**
     * A description for this Extended Operation Handler
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are
     * allowed in the server).
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Extended Operation Handler. Each configuration
     * property should be given in the form 'name=value'.
     */
    public readonly extensionArguments!: pulumi.Output<string[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Extended Operation Handler.
     */
    public readonly extensionClass!: pulumi.Output<string | undefined>;
    /**
     * When the `type` attribute is set to: - `password-modify`: Specifies the name of the identity mapper that should be used
     * in conjunction with the password modify extended operation. - `deliver-otp`: The identity mapper that should be used to
     * identify the user(s) targeted by the authentication identity contained in the extended request. This will only be used
     * for "u:"-style authentication identities.
     */
    public readonly identityMapper!: pulumi.Output<string | undefined>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - `single-use-tokens`: The password generator that will be used to create the
     * single-use token values to be delivered to the end user. - `deliver-password-reset-token`: The password generator that
     * will be used to create the password reset token values to be delivered to the end user. - `deliver-otp`: The password
     * generator that will be used to create the one-time password values to be delivered to the end user.
     */
    public readonly passwordGenerator!: pulumi.Output<string | undefined>;
    /**
     * The maximum length of time that a password reset token should be considered valid.
     */
    public readonly passwordResetTokenValidityDuration!: pulumi.Output<string>;
    /**
     * Indicates whether to prevent clients from re-using TOTP passwords.
     */
    public readonly preventTotpReuse!: pulumi.Output<boolean>;
    /**
     * Indicates whether the server should reject attempts to use this extended operation over an insecure connection.
     */
    public readonly rejectInsecureRequests!: pulumi.Output<boolean>;
    /**
     * A set of criteria that the extended requests must satisfy before they will be processed by the server.
     */
    public readonly requestCriteria!: pulumi.Output<string | undefined>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.ExtendedOperationHandlerRequiredAction[]>;
    /**
     * The name or OID of the attribute that will be used to hold the shared secret key used during TOTP processing.
     */
    public readonly sharedSecretAttributeType!: pulumi.Output<string>;
    /**
     * The duration of the time interval used for TOTP processing.
     */
    public readonly timeIntervalDuration!: pulumi.Output<string>;
    /**
     * The type of Extended Operation Handler resource. Options are ['cancel', 'validate-totp-password', 'replace-certificate',
     * 'get-connection-id', 'multi-update', 'notification-subscription', 'password-modify', 'custom', 'collect-support-data',
     * 'export-reversible-passwords', 'batched-transactions', 'get-changelog-batch', 'get-supported-otp-delivery-mechanisms',
     * 'verify-password', 'single-use-tokens', 'generate-password', 'who-am-i', 'start-tls', 'deliver-password-reset-token',
     * 'password-policy-state', 'get-password-quality-requirements', 'deliver-otp', 'third-party']
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a ExtendedOperationHandler resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExtendedOperationHandlerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExtendedOperationHandlerArgs | ExtendedOperationHandlerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExtendedOperationHandlerState | undefined;
            resourceInputs["adjacentIntervalsToCheck"] = state ? state.adjacentIntervalsToCheck : undefined;
            resourceInputs["allowRemotelyProvidedCertificates"] = state ? state.allowRemotelyProvidedCertificates : undefined;
            resourceInputs["allowedOperations"] = state ? state.allowedOperations : undefined;
            resourceInputs["connectionCriteria"] = state ? state.connectionCriteria : undefined;
            resourceInputs["defaultOtpDeliveryMechanisms"] = state ? state.defaultOtpDeliveryMechanisms : undefined;
            resourceInputs["defaultSingleUseTokenValidityDuration"] = state ? state.defaultSingleUseTokenValidityDuration : undefined;
            resourceInputs["defaultTokenDeliveryMechanisms"] = state ? state.defaultTokenDeliveryMechanisms : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["extensionArguments"] = state ? state.extensionArguments : undefined;
            resourceInputs["extensionClass"] = state ? state.extensionClass : undefined;
            resourceInputs["identityMapper"] = state ? state.identityMapper : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["passwordGenerator"] = state ? state.passwordGenerator : undefined;
            resourceInputs["passwordResetTokenValidityDuration"] = state ? state.passwordResetTokenValidityDuration : undefined;
            resourceInputs["preventTotpReuse"] = state ? state.preventTotpReuse : undefined;
            resourceInputs["rejectInsecureRequests"] = state ? state.rejectInsecureRequests : undefined;
            resourceInputs["requestCriteria"] = state ? state.requestCriteria : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["sharedSecretAttributeType"] = state ? state.sharedSecretAttributeType : undefined;
            resourceInputs["timeIntervalDuration"] = state ? state.timeIntervalDuration : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ExtendedOperationHandlerArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["adjacentIntervalsToCheck"] = args ? args.adjacentIntervalsToCheck : undefined;
            resourceInputs["allowRemotelyProvidedCertificates"] = args ? args.allowRemotelyProvidedCertificates : undefined;
            resourceInputs["allowedOperations"] = args ? args.allowedOperations : undefined;
            resourceInputs["connectionCriteria"] = args ? args.connectionCriteria : undefined;
            resourceInputs["defaultOtpDeliveryMechanisms"] = args ? args.defaultOtpDeliveryMechanisms : undefined;
            resourceInputs["defaultSingleUseTokenValidityDuration"] = args ? args.defaultSingleUseTokenValidityDuration : undefined;
            resourceInputs["defaultTokenDeliveryMechanisms"] = args ? args.defaultTokenDeliveryMechanisms : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["extensionArguments"] = args ? args.extensionArguments : undefined;
            resourceInputs["extensionClass"] = args ? args.extensionClass : undefined;
            resourceInputs["identityMapper"] = args ? args.identityMapper : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passwordGenerator"] = args ? args.passwordGenerator : undefined;
            resourceInputs["passwordResetTokenValidityDuration"] = args ? args.passwordResetTokenValidityDuration : undefined;
            resourceInputs["preventTotpReuse"] = args ? args.preventTotpReuse : undefined;
            resourceInputs["rejectInsecureRequests"] = args ? args.rejectInsecureRequests : undefined;
            resourceInputs["requestCriteria"] = args ? args.requestCriteria : undefined;
            resourceInputs["sharedSecretAttributeType"] = args ? args.sharedSecretAttributeType : undefined;
            resourceInputs["timeIntervalDuration"] = args ? args.timeIntervalDuration : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExtendedOperationHandler.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ExtendedOperationHandler resources.
 */
export interface ExtendedOperationHandlerState {
    /**
     * The number of adjacent time intervals (both before and after the current time) that should be checked when performing
     * authentication.
     */
    adjacentIntervalsToCheck?: pulumi.Input<number>;
    /**
     * Indicates whether clients should be allowed to directly provide a new listener or inter-server certificate chain in the
     * extended request.
     */
    allowRemotelyProvidedCertificates?: pulumi.Input<boolean>;
    /**
     * The types of replace certificate operations that clients will be allowed to request.
     */
    allowedOperations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of criteria that client connections must satisfy before they will be allowed to request the associated extended
     * operations.
     */
    connectionCriteria?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `single-use-tokens`: The set of delivery mechanisms that may be used to deliver
     * single-use tokens to users in requests that do not specify one or more preferred delivery mechanisms. - `deliver-otp`:
     * The set of delivery mechanisms that may be used to deliver one-time passwords to users in requests that do not specify
     * one or more preferred delivery mechanisms.
     */
    defaultOtpDeliveryMechanisms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default length of time that a single-use token will be considered valid by the server if the client doesn't specify
     * a duration in the deliver single-use token request.
     */
    defaultSingleUseTokenValidityDuration?: pulumi.Input<string>;
    /**
     * The set of delivery mechanisms that may be used to deliver password reset tokens to users for requests that do not
     * specify one or more preferred delivery mechanisms.
     */
    defaultTokenDeliveryMechanisms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A description for this Extended Operation Handler
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are
     * allowed in the server).
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Extended Operation Handler. Each configuration
     * property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Extended Operation Handler.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `password-modify`: Specifies the name of the identity mapper that should be used
     * in conjunction with the password modify extended operation. - `deliver-otp`: The identity mapper that should be used to
     * identify the user(s) targeted by the authentication identity contained in the extended request. This will only be used
     * for "u:"-style authentication identities.
     */
    identityMapper?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `single-use-tokens`: The password generator that will be used to create the
     * single-use token values to be delivered to the end user. - `deliver-password-reset-token`: The password generator that
     * will be used to create the password reset token values to be delivered to the end user. - `deliver-otp`: The password
     * generator that will be used to create the one-time password values to be delivered to the end user.
     */
    passwordGenerator?: pulumi.Input<string>;
    /**
     * The maximum length of time that a password reset token should be considered valid.
     */
    passwordResetTokenValidityDuration?: pulumi.Input<string>;
    /**
     * Indicates whether to prevent clients from re-using TOTP passwords.
     */
    preventTotpReuse?: pulumi.Input<boolean>;
    /**
     * Indicates whether the server should reject attempts to use this extended operation over an insecure connection.
     */
    rejectInsecureRequests?: pulumi.Input<boolean>;
    /**
     * A set of criteria that the extended requests must satisfy before they will be processed by the server.
     */
    requestCriteria?: pulumi.Input<string>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.ExtendedOperationHandlerRequiredAction>[]>;
    /**
     * The name or OID of the attribute that will be used to hold the shared secret key used during TOTP processing.
     */
    sharedSecretAttributeType?: pulumi.Input<string>;
    /**
     * The duration of the time interval used for TOTP processing.
     */
    timeIntervalDuration?: pulumi.Input<string>;
    /**
     * The type of Extended Operation Handler resource. Options are ['cancel', 'validate-totp-password', 'replace-certificate',
     * 'get-connection-id', 'multi-update', 'notification-subscription', 'password-modify', 'custom', 'collect-support-data',
     * 'export-reversible-passwords', 'batched-transactions', 'get-changelog-batch', 'get-supported-otp-delivery-mechanisms',
     * 'verify-password', 'single-use-tokens', 'generate-password', 'who-am-i', 'start-tls', 'deliver-password-reset-token',
     * 'password-policy-state', 'get-password-quality-requirements', 'deliver-otp', 'third-party']
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExtendedOperationHandler resource.
 */
export interface ExtendedOperationHandlerArgs {
    /**
     * The number of adjacent time intervals (both before and after the current time) that should be checked when performing
     * authentication.
     */
    adjacentIntervalsToCheck?: pulumi.Input<number>;
    /**
     * Indicates whether clients should be allowed to directly provide a new listener or inter-server certificate chain in the
     * extended request.
     */
    allowRemotelyProvidedCertificates?: pulumi.Input<boolean>;
    /**
     * The types of replace certificate operations that clients will be allowed to request.
     */
    allowedOperations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of criteria that client connections must satisfy before they will be allowed to request the associated extended
     * operations.
     */
    connectionCriteria?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `single-use-tokens`: The set of delivery mechanisms that may be used to deliver
     * single-use tokens to users in requests that do not specify one or more preferred delivery mechanisms. - `deliver-otp`:
     * The set of delivery mechanisms that may be used to deliver one-time passwords to users in requests that do not specify
     * one or more preferred delivery mechanisms.
     */
    defaultOtpDeliveryMechanisms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default length of time that a single-use token will be considered valid by the server if the client doesn't specify
     * a duration in the deliver single-use token request.
     */
    defaultSingleUseTokenValidityDuration?: pulumi.Input<string>;
    /**
     * The set of delivery mechanisms that may be used to deliver password reset tokens to users for requests that do not
     * specify one or more preferred delivery mechanisms.
     */
    defaultTokenDeliveryMechanisms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A description for this Extended Operation Handler
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are
     * allowed in the server).
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Extended Operation Handler. Each configuration
     * property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Extended Operation Handler.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `password-modify`: Specifies the name of the identity mapper that should be used
     * in conjunction with the password modify extended operation. - `deliver-otp`: The identity mapper that should be used to
     * identify the user(s) targeted by the authentication identity contained in the extended request. This will only be used
     * for "u:"-style authentication identities.
     */
    identityMapper?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `single-use-tokens`: The password generator that will be used to create the
     * single-use token values to be delivered to the end user. - `deliver-password-reset-token`: The password generator that
     * will be used to create the password reset token values to be delivered to the end user. - `deliver-otp`: The password
     * generator that will be used to create the one-time password values to be delivered to the end user.
     */
    passwordGenerator?: pulumi.Input<string>;
    /**
     * The maximum length of time that a password reset token should be considered valid.
     */
    passwordResetTokenValidityDuration?: pulumi.Input<string>;
    /**
     * Indicates whether to prevent clients from re-using TOTP passwords.
     */
    preventTotpReuse?: pulumi.Input<boolean>;
    /**
     * Indicates whether the server should reject attempts to use this extended operation over an insecure connection.
     */
    rejectInsecureRequests?: pulumi.Input<boolean>;
    /**
     * A set of criteria that the extended requests must satisfy before they will be processed by the server.
     */
    requestCriteria?: pulumi.Input<string>;
    /**
     * The name or OID of the attribute that will be used to hold the shared secret key used during TOTP processing.
     */
    sharedSecretAttributeType?: pulumi.Input<string>;
    /**
     * The duration of the time interval used for TOTP processing.
     */
    timeIntervalDuration?: pulumi.Input<string>;
    /**
     * The type of Extended Operation Handler resource. Options are ['cancel', 'validate-totp-password', 'replace-certificate',
     * 'get-connection-id', 'multi-update', 'notification-subscription', 'password-modify', 'custom', 'collect-support-data',
     * 'export-reversible-passwords', 'batched-transactions', 'get-changelog-batch', 'get-supported-otp-delivery-mechanisms',
     * 'verify-password', 'single-use-tokens', 'generate-password', 'who-am-i', 'start-tls', 'deliver-password-reset-token',
     * 'password-policy-state', 'get-password-quality-requirements', 'deliver-otp', 'third-party']
     */
    type: pulumi.Input<string>;
}
