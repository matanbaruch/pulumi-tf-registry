// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLocalDbVlvIndex(args: GetLocalDbVlvIndexArgs, opts?: pulumi.InvokeOptions): Promise<GetLocalDbVlvIndexResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getLocalDbVlvIndex:getLocalDbVlvIndex", {
        "backendName": args.backendName,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLocalDbVlvIndex.
 */
export interface GetLocalDbVlvIndexArgs {
    backendName: string;
    name: string;
}

/**
 * A collection of values returned by getLocalDbVlvIndex.
 */
export interface GetLocalDbVlvIndexResult {
    readonly backendName: string;
    readonly baseDn: string;
    readonly cacheMode: string;
    readonly filter: string;
    readonly id: string;
    readonly maxBlockSize: number;
    readonly name: string;
    readonly scope: string;
    readonly sortOrder: string;
    readonly type: string;
}
export function getLocalDbVlvIndexOutput(args: GetLocalDbVlvIndexOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocalDbVlvIndexResult> {
    return pulumi.output(args).apply((a: any) => getLocalDbVlvIndex(a, opts))
}

/**
 * A collection of arguments for invoking getLocalDbVlvIndex.
 */
export interface GetLocalDbVlvIndexOutputArgs {
    backendName: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
