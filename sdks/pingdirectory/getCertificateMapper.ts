// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCertificateMapper(args: GetCertificateMapperArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateMapperResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getCertificateMapper:getCertificateMapper", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCertificateMapper.
 */
export interface GetCertificateMapperArgs {
    name: string;
}

/**
 * A collection of values returned by getCertificateMapper.
 */
export interface GetCertificateMapperResult {
    readonly description: string;
    readonly enabled: boolean;
    readonly extensionArguments: string[];
    readonly extensionClass: string;
    readonly fingerprintAlgorithm: string;
    readonly fingerprintAttribute: string;
    readonly id: string;
    readonly name: string;
    readonly scriptArguments: string[];
    readonly scriptClass: string;
    readonly subjectAttribute: string;
    readonly subjectAttributeMappings: string[];
    readonly type: string;
    readonly userBaseDns: string[];
}
export function getCertificateMapperOutput(args: GetCertificateMapperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateMapperResult> {
    return pulumi.output(args).apply((a: any) => getCertificateMapper(a, opts))
}

/**
 * A collection of arguments for invoking getCertificateMapper.
 */
export interface GetCertificateMapperOutputArgs {
    name: pulumi.Input<string>;
}
