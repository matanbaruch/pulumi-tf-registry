// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DefaultPostLdifExportTaskProcessor extends pulumi.CustomResource {
    /**
     * Get an existing DefaultPostLdifExportTaskProcessor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultPostLdifExportTaskProcessorState, opts?: pulumi.CustomResourceOptions): DefaultPostLdifExportTaskProcessor {
        return new DefaultPostLdifExportTaskProcessor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/defaultPostLdifExportTaskProcessor:DefaultPostLdifExportTaskProcessor';

    /**
     * Returns true if the given object is an instance of DefaultPostLdifExportTaskProcessor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultPostLdifExportTaskProcessor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultPostLdifExportTaskProcessor.__pulumiType;
    }

    /**
     * The external server with information to use when interacting with the AWS S3 service.
     */
    public readonly awsExternalServer!: pulumi.Output<string>;
    /**
     * A description for this Post LDIF Export Task Processor
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Indicates whether the Post LDIF Export Task Processor is enabled for use.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Post LDIF Export Task Processor. Each
     * configuration property should be given in the form 'name=value'.
     */
    public readonly extensionArguments!: pulumi.Output<string[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Post LDIF Export Task Processor.
     */
    public readonly extensionClass!: pulumi.Output<string>;
    /**
     * A regular expression pattern that will be used to identify which files are candidates for automatic removal based on the
     * maximum-file-count-to-retain and maximum-file-age-to-retain properties. By default, all files in the bucket will be
     * eligible for removal by retention processing.
     */
    public readonly fileRetentionPattern!: pulumi.Output<string>;
    /**
     * The maximum number of concurrent connections that may be used when transferring data to or from S3.
     */
    public readonly maximumConcurrentTransferConnections!: pulumi.Output<number>;
    /**
     * The maximum length of time to retain files matching the file retention pattern that should be retained in the S3 bucket
     * after successfully uploading a newly exported file.
     */
    public readonly maximumFileAgeToRetain!: pulumi.Output<string>;
    /**
     * The maximum number of existing files matching the file retention pattern that should be retained in the S3 bucket after
     * successfully uploading a newly exported file.
     */
    public readonly maximumFileCountToRetain!: pulumi.Output<number>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.DefaultPostLdifExportTaskProcessorRequiredAction[]>;
    /**
     * The name of the S3 bucket into which LDIF files should be copied.
     */
    public readonly s3BucketName!: pulumi.Output<string>;
    /**
     * The target throughput to attempt to achieve for data transfers to or from S3, in megabits per second.
     */
    public readonly targetThroughputInMegabitsPerSecond!: pulumi.Output<number>;
    /**
     * The type of Post LDIF Export Task Processor resource. Options are ['upload-to-s3', 'third-party']
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DefaultPostLdifExportTaskProcessor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DefaultPostLdifExportTaskProcessorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultPostLdifExportTaskProcessorArgs | DefaultPostLdifExportTaskProcessorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultPostLdifExportTaskProcessorState | undefined;
            resourceInputs["awsExternalServer"] = state ? state.awsExternalServer : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["extensionArguments"] = state ? state.extensionArguments : undefined;
            resourceInputs["extensionClass"] = state ? state.extensionClass : undefined;
            resourceInputs["fileRetentionPattern"] = state ? state.fileRetentionPattern : undefined;
            resourceInputs["maximumConcurrentTransferConnections"] = state ? state.maximumConcurrentTransferConnections : undefined;
            resourceInputs["maximumFileAgeToRetain"] = state ? state.maximumFileAgeToRetain : undefined;
            resourceInputs["maximumFileCountToRetain"] = state ? state.maximumFileCountToRetain : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["s3BucketName"] = state ? state.s3BucketName : undefined;
            resourceInputs["targetThroughputInMegabitsPerSecond"] = state ? state.targetThroughputInMegabitsPerSecond : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DefaultPostLdifExportTaskProcessorArgs | undefined;
            resourceInputs["awsExternalServer"] = args ? args.awsExternalServer : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["extensionArguments"] = args ? args.extensionArguments : undefined;
            resourceInputs["extensionClass"] = args ? args.extensionClass : undefined;
            resourceInputs["fileRetentionPattern"] = args ? args.fileRetentionPattern : undefined;
            resourceInputs["maximumConcurrentTransferConnections"] = args ? args.maximumConcurrentTransferConnections : undefined;
            resourceInputs["maximumFileAgeToRetain"] = args ? args.maximumFileAgeToRetain : undefined;
            resourceInputs["maximumFileCountToRetain"] = args ? args.maximumFileCountToRetain : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["s3BucketName"] = args ? args.s3BucketName : undefined;
            resourceInputs["targetThroughputInMegabitsPerSecond"] = args ? args.targetThroughputInMegabitsPerSecond : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultPostLdifExportTaskProcessor.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DefaultPostLdifExportTaskProcessor resources.
 */
export interface DefaultPostLdifExportTaskProcessorState {
    /**
     * The external server with information to use when interacting with the AWS S3 service.
     */
    awsExternalServer?: pulumi.Input<string>;
    /**
     * A description for this Post LDIF Export Task Processor
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the Post LDIF Export Task Processor is enabled for use.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Post LDIF Export Task Processor. Each
     * configuration property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Post LDIF Export Task Processor.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * A regular expression pattern that will be used to identify which files are candidates for automatic removal based on the
     * maximum-file-count-to-retain and maximum-file-age-to-retain properties. By default, all files in the bucket will be
     * eligible for removal by retention processing.
     */
    fileRetentionPattern?: pulumi.Input<string>;
    /**
     * The maximum number of concurrent connections that may be used when transferring data to or from S3.
     */
    maximumConcurrentTransferConnections?: pulumi.Input<number>;
    /**
     * The maximum length of time to retain files matching the file retention pattern that should be retained in the S3 bucket
     * after successfully uploading a newly exported file.
     */
    maximumFileAgeToRetain?: pulumi.Input<string>;
    /**
     * The maximum number of existing files matching the file retention pattern that should be retained in the S3 bucket after
     * successfully uploading a newly exported file.
     */
    maximumFileCountToRetain?: pulumi.Input<number>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.DefaultPostLdifExportTaskProcessorRequiredAction>[]>;
    /**
     * The name of the S3 bucket into which LDIF files should be copied.
     */
    s3BucketName?: pulumi.Input<string>;
    /**
     * The target throughput to attempt to achieve for data transfers to or from S3, in megabits per second.
     */
    targetThroughputInMegabitsPerSecond?: pulumi.Input<number>;
    /**
     * The type of Post LDIF Export Task Processor resource. Options are ['upload-to-s3', 'third-party']
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DefaultPostLdifExportTaskProcessor resource.
 */
export interface DefaultPostLdifExportTaskProcessorArgs {
    /**
     * The external server with information to use when interacting with the AWS S3 service.
     */
    awsExternalServer?: pulumi.Input<string>;
    /**
     * A description for this Post LDIF Export Task Processor
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the Post LDIF Export Task Processor is enabled for use.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Post LDIF Export Task Processor. Each
     * configuration property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Post LDIF Export Task Processor.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * A regular expression pattern that will be used to identify which files are candidates for automatic removal based on the
     * maximum-file-count-to-retain and maximum-file-age-to-retain properties. By default, all files in the bucket will be
     * eligible for removal by retention processing.
     */
    fileRetentionPattern?: pulumi.Input<string>;
    /**
     * The maximum number of concurrent connections that may be used when transferring data to or from S3.
     */
    maximumConcurrentTransferConnections?: pulumi.Input<number>;
    /**
     * The maximum length of time to retain files matching the file retention pattern that should be retained in the S3 bucket
     * after successfully uploading a newly exported file.
     */
    maximumFileAgeToRetain?: pulumi.Input<string>;
    /**
     * The maximum number of existing files matching the file retention pattern that should be retained in the S3 bucket after
     * successfully uploading a newly exported file.
     */
    maximumFileCountToRetain?: pulumi.Input<number>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the S3 bucket into which LDIF files should be copied.
     */
    s3BucketName?: pulumi.Input<string>;
    /**
     * The target throughput to attempt to achieve for data transfers to or from S3, in megabits per second.
     */
    targetThroughputInMegabitsPerSecond?: pulumi.Input<number>;
}
