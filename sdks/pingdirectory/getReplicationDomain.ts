// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getReplicationDomain(args: GetReplicationDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetReplicationDomainResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getReplicationDomain:getReplicationDomain", {
        "name": args.name,
        "synchronizationProviderName": args.synchronizationProviderName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getReplicationDomain.
 */
export interface GetReplicationDomainArgs {
    name: string;
    synchronizationProviderName: string;
}

/**
 * A collection of values returned by getReplicationDomain.
 */
export interface GetReplicationDomainResult {
    readonly baseDn: string;
    readonly dependentOpsReplayFailureWaitTime: string;
    readonly heartbeatInterval: string;
    readonly id: string;
    readonly missingChangesPolicy: string;
    readonly name: string;
    readonly onReplayFailureWaitForDependentOpsTimeout: string;
    readonly restricted: boolean;
    readonly serverId: number;
    readonly syncHistPurgeDelay: string;
    readonly synchronizationProviderName: string;
    readonly type: string;
    readonly windowSize: number;
}
export function getReplicationDomainOutput(args: GetReplicationDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReplicationDomainResult> {
    return pulumi.output(args).apply((a: any) => getReplicationDomain(a, opts))
}

/**
 * A collection of arguments for invoking getReplicationDomain.
 */
export interface GetReplicationDomainOutputArgs {
    name: pulumi.Input<string>;
    synchronizationProviderName: pulumi.Input<string>;
}
