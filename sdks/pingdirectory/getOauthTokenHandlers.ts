// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOauthTokenHandlers(args?: GetOauthTokenHandlersArgs, opts?: pulumi.InvokeOptions): Promise<GetOauthTokenHandlersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getOauthTokenHandlers:getOauthTokenHandlers", {
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOauthTokenHandlers.
 */
export interface GetOauthTokenHandlersArgs {
    filter?: string;
}

/**
 * A collection of values returned by getOauthTokenHandlers.
 */
export interface GetOauthTokenHandlersResult {
    readonly filter?: string;
    readonly id: string;
    readonly objects: outputs.GetOauthTokenHandlersObject[];
}
export function getOauthTokenHandlersOutput(args?: GetOauthTokenHandlersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOauthTokenHandlersResult> {
    return pulumi.output(args).apply((a: any) => getOauthTokenHandlers(a, opts))
}

/**
 * A collection of arguments for invoking getOauthTokenHandlers.
 */
export interface GetOauthTokenHandlersOutputArgs {
    filter?: pulumi.Input<string>;
}
