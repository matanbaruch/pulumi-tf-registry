// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRootDnUser(args: GetRootDnUserArgs, opts?: pulumi.InvokeOptions): Promise<GetRootDnUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getRootDnUser:getRootDnUser", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRootDnUser.
 */
export interface GetRootDnUserArgs {
    name: string;
}

/**
 * A collection of values returned by getRootDnUser.
 */
export interface GetRootDnUserResult {
    readonly accountActivationTime: string;
    readonly accountExpirationTime: string;
    readonly allowedAuthenticationIpAddresses: string[];
    readonly allowedAuthenticationTypes: string[];
    readonly alternateBindDns: string[];
    readonly description: string;
    readonly disabled: boolean;
    readonly emailAddresses: string[];
    readonly firstNames: string[];
    readonly homeTelephoneNumbers: string[];
    readonly id: string;
    readonly idleTimeLimitSeconds: number;
    readonly inheritDefaultRootPrivileges: boolean;
    readonly isProxyable: string;
    readonly isProxyableByDns: string[];
    readonly isProxyableByGroups: string[];
    readonly isProxyableByUrls: string[];
    readonly lastNames: string[];
    readonly lookThroughEntryLimit: number;
    readonly mayProxyAsDns: string[];
    readonly mayProxyAsGroups: string[];
    readonly mayProxyAsUrls: string[];
    readonly mobileTelephoneNumbers: string[];
    readonly name: string;
    readonly pagerTelephoneNumbers: string[];
    readonly password: string;
    readonly passwordPolicy: string;
    readonly preferredOtpDeliveryMechanisms: string[];
    readonly privileges: string[];
    readonly requireSecureAuthentication: boolean;
    readonly requireSecureConnections: boolean;
    readonly searchResultEntryLimit: number;
    readonly timeLimitSeconds: number;
    readonly type: string;
    readonly userId: string;
    readonly workTelephoneNumbers: string[];
}
export function getRootDnUserOutput(args: GetRootDnUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRootDnUserResult> {
    return pulumi.output(args).apply((a: any) => getRootDnUser(a, opts))
}

/**
 * A collection of arguments for invoking getRootDnUser.
 */
export interface GetRootDnUserOutputArgs {
    name: pulumi.Input<string>;
}
