// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogFieldMapping(args: GetLogFieldMappingArgs, opts?: pulumi.InvokeOptions): Promise<GetLogFieldMappingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getLogFieldMapping:getLogFieldMapping", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogFieldMapping.
 */
export interface GetLogFieldMappingArgs {
    name: string;
}

/**
 * A collection of values returned by getLogFieldMapping.
 */
export interface GetLogFieldMappingResult {
    readonly description: string;
    readonly id: string;
    readonly logFieldAdditionalInformation: string;
    readonly logFieldAlternateAuthorizationDn: string;
    readonly logFieldAuthenticatedUserDn: string;
    readonly logFieldAuthenticationFailureId: string;
    readonly logFieldAuthenticationFailureReason: string;
    readonly logFieldAuthenticationType: string;
    readonly logFieldBaseDn: string;
    readonly logFieldBindDn: string;
    readonly logFieldCategory: string;
    readonly logFieldConnectionId: string;
    readonly logFieldDeleteOldRdn: string;
    readonly logFieldDisconnectReason: string;
    readonly logFieldEntriesReturned: string;
    readonly logFieldEntryDn: string;
    readonly logFieldFilter: string;
    readonly logFieldInstanceName: string;
    readonly logFieldIntermediateClientRequest: string;
    readonly logFieldIntermediateClientResult: string;
    readonly logFieldMatchedDn: string;
    readonly logFieldMessage: string;
    readonly logFieldMessageId: string;
    readonly logFieldMessageIdToAbandon: string;
    readonly logFieldMessageType: string;
    readonly logFieldNewRdn: string;
    readonly logFieldNewSuperiorDn: string;
    readonly logFieldOperationId: string;
    readonly logFieldOperationType: string;
    readonly logFieldOrigin: string;
    readonly logFieldProcessingTime: string;
    readonly logFieldProductName: string;
    readonly logFieldProtocolName: string;
    readonly logFieldProtocolVersion: string;
    readonly logFieldReferralUrls: string;
    readonly logFieldReplicationChangeId: string;
    readonly logFieldRequestControls: string;
    readonly logFieldRequestOid: string;
    readonly logFieldRequestedAttributes: string;
    readonly logFieldRequesterDn: string;
    readonly logFieldRequesterIpAddress: string;
    readonly logFieldResponseControls: string;
    readonly logFieldResponseOid: string;
    readonly logFieldResultCode: string;
    readonly logFieldSaslMechanismName: string;
    readonly logFieldScope: string;
    readonly logFieldSeverity: string;
    readonly logFieldSourceAddress: string;
    readonly logFieldStartupid: string;
    readonly logFieldTargetAddress: string;
    readonly logFieldTargetAttribute: string;
    readonly logFieldTargetHost: string;
    readonly logFieldTargetPort: string;
    readonly logFieldTargetProtocol: string;
    readonly logFieldTimestamp: string;
    readonly logFieldUnindexed: string;
    readonly name: string;
    readonly type: string;
}
export function getLogFieldMappingOutput(args: GetLogFieldMappingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogFieldMappingResult> {
    return pulumi.output(args).apply((a: any) => getLogFieldMapping(a, opts))
}

/**
 * A collection of arguments for invoking getLogFieldMapping.
 */
export interface GetLogFieldMappingOutputArgs {
    name: pulumi.Input<string>;
}
