// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getScimAttributes(args: GetScimAttributesArgs, opts?: pulumi.InvokeOptions): Promise<GetScimAttributesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getScimAttributes:getScimAttributes", {
        "filter": args.filter,
        "scimSchemaName": args.scimSchemaName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getScimAttributes.
 */
export interface GetScimAttributesArgs {
    filter?: string;
    scimSchemaName: string;
}

/**
 * A collection of values returned by getScimAttributes.
 */
export interface GetScimAttributesResult {
    readonly filter?: string;
    readonly id: string;
    readonly ids: string[];
    readonly scimSchemaName: string;
}
export function getScimAttributesOutput(args: GetScimAttributesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScimAttributesResult> {
    return pulumi.output(args).apply((a: any) => getScimAttributes(a, opts))
}

/**
 * A collection of arguments for invoking getScimAttributes.
 */
export interface GetScimAttributesOutputArgs {
    filter?: pulumi.Input<string>;
    scimSchemaName: pulumi.Input<string>;
}
