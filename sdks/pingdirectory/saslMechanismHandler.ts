// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SaslMechanismHandler extends pulumi.CustomResource {
    /**
     * Get an existing SaslMechanismHandler resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SaslMechanismHandlerState, opts?: pulumi.CustomResourceOptions): SaslMechanismHandler {
        return new SaslMechanismHandler(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/saslMechanismHandler:SaslMechanismHandler';

    /**
     * Returns true if the given object is an instance of SaslMechanismHandler.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SaslMechanismHandler {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SaslMechanismHandler.__pulumiType;
    }

    /**
     * An access token validator that will ensure that each presented OAuth access token is authentic and trustworthy. It must
     * be configured with an identity mapper that will be used to map the access token to a local entry.
     */
    public readonly accessTokenValidators!: pulumi.Output<string[]>;
    /**
     * The set of OAuth scopes that will all be required for any access tokens that will be allowed for authentication.
     */
    public readonly allRequiredScopes!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - `oauth-bearer`: The identity mapper that will be used to map an alternate
     * authorization identity (provided in the GS2 header of the encoded OAUTHBEARER bind request credentials) to the
     * corresponding local entry. - `gssapi`: Specifies the name of the identity mapper that is to be used with this SASL
     * mechanism handler to map the alternate authorization identity (if provided, and if different from the Kerberos principal
     * used as the authentication identity) to the corresponding user in the directory. If no value is specified, then the
     * mapper specified in the identity-mapper configuration property will be used.
     */
    public readonly alternateAuthorizationIdentityMapper!: pulumi.Output<string | undefined>;
    /**
     * The set of OAuth scopes that a token may have to be allowed for authentication.
     */
    public readonly anyRequiredScopes!: pulumi.Output<string[]>;
    /**
     * A description for this SASL Mechanism Handler
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the SASL mechanism handler is enabled for use.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party SASL Mechanism Handler. Each configuration
     * property should be given in the form 'name=value'.
     */
    public readonly extensionArguments!: pulumi.Output<string[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party SASL Mechanism Handler.
     */
    public readonly extensionClass!: pulumi.Output<string | undefined>;
    /**
     * An ID token validator that will ensure that each presented OpenID Connect ID token is authentic and trustworthy, and
     * that will map the token to a local entry.
     */
    public readonly idTokenValidators!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - One of [`unboundid-totp`, `unboundid-yubikey-otp`, `unboundid-delivered-otp`]:
     * The identity mapper that should be used to identify the user(s) targeted in the authentication and/or authorization
     * identities contained in the bind request. This will only be used for "u:"-style identities. - One of [`digest-md5`,
     * `plain`]: Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to match the
     * authentication or authorization ID included in the SASL bind request to the corresponding user in the directory. -
     * `unboundid-ms-chap-v2`: The identity mapper that should be used to identify the entry associated with the username
     * provided in the bind request. - `unboundid-external-auth`: The identity mapper that should be used to identify the user
     * targeted by the authentication ID contained in the bind request. This will only be used for "u:"-style authentication ID
     * values. - `cram-md5`: Specifies the name of the identity mapper used with this SASL mechanism handler to match the
     * authentication ID included in the SASL bind request to the corresponding user in the directory. - `gssapi`: Specifies
     * the name of the identity mapper that is to be used with this SASL mechanism handler to match the Kerberos principal
     * included in the SASL bind request to the corresponding user in the directory. - `third-party`: The identity mapper that
     * may be used to map usernames to user entries. If the custom SASL mechanism involves a username or some other form of
     * authentication and/or authorization identity, then this may be used to map that ID to an entry for that user.
     */
    public readonly identityMapper!: pulumi.Output<string | undefined>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * The maximum length of time that a one-time password value should be considered valid.
     */
    public readonly otpValidityDuration!: pulumi.Output<string>;
    /**
     * Indicates whether bind requests will be required to have both an OAuth access token (in the "auth" element of the bind
     * request) and an OpenID Connect ID token (in the "pingidentityidtoken" element of the bind request).
     */
    public readonly requireBothAccessTokenAndIdToken!: pulumi.Output<boolean>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.SaslMechanismHandlerRequiredAction[]>;
    /**
     * When the `type` attribute is set to: - `digest-md5`: Specifies the DNS-resolvable fully-qualified domain name for the
     * server that is used when validating the digest-uri parameter during the authentication process. - `oauth-bearer`: The
     * fully-qualified name that clients are expected to use when communicating with the server. - `gssapi`: Specifies the
     * DNS-resolvable fully-qualified domain name for the system.
     */
    public readonly serverFqdn!: pulumi.Output<string | undefined>;
    /**
     * The type of SASL Mechanism Handler resource. Options are ['unboundid-ms-chap-v2', 'unboundid-totp',
     * 'unboundid-yubikey-otp', 'external', 'digest-md5', 'plain', 'unboundid-delivered-otp', 'unboundid-external-auth',
     * 'anonymous', 'cram-md5', 'oauth-bearer', 'unboundid-certificate-plus-password', 'gssapi', 'third-party']
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Indicates whether to validate the OAuth access token in addition to the OpenID Connect ID token in OAUTHBEARER bind
     * requests that contain both types of tokens.
     */
    public readonly validateAccessTokenWhenIdTokenIsAlsoProvided!: pulumi.Output<string>;

    /**
     * Create a SaslMechanismHandler resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SaslMechanismHandlerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SaslMechanismHandlerArgs | SaslMechanismHandlerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SaslMechanismHandlerState | undefined;
            resourceInputs["accessTokenValidators"] = state ? state.accessTokenValidators : undefined;
            resourceInputs["allRequiredScopes"] = state ? state.allRequiredScopes : undefined;
            resourceInputs["alternateAuthorizationIdentityMapper"] = state ? state.alternateAuthorizationIdentityMapper : undefined;
            resourceInputs["anyRequiredScopes"] = state ? state.anyRequiredScopes : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["extensionArguments"] = state ? state.extensionArguments : undefined;
            resourceInputs["extensionClass"] = state ? state.extensionClass : undefined;
            resourceInputs["idTokenValidators"] = state ? state.idTokenValidators : undefined;
            resourceInputs["identityMapper"] = state ? state.identityMapper : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["otpValidityDuration"] = state ? state.otpValidityDuration : undefined;
            resourceInputs["requireBothAccessTokenAndIdToken"] = state ? state.requireBothAccessTokenAndIdToken : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["serverFqdn"] = state ? state.serverFqdn : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["validateAccessTokenWhenIdTokenIsAlsoProvided"] = state ? state.validateAccessTokenWhenIdTokenIsAlsoProvided : undefined;
        } else {
            const args = argsOrState as SaslMechanismHandlerArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["accessTokenValidators"] = args ? args.accessTokenValidators : undefined;
            resourceInputs["allRequiredScopes"] = args ? args.allRequiredScopes : undefined;
            resourceInputs["alternateAuthorizationIdentityMapper"] = args ? args.alternateAuthorizationIdentityMapper : undefined;
            resourceInputs["anyRequiredScopes"] = args ? args.anyRequiredScopes : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["extensionArguments"] = args ? args.extensionArguments : undefined;
            resourceInputs["extensionClass"] = args ? args.extensionClass : undefined;
            resourceInputs["idTokenValidators"] = args ? args.idTokenValidators : undefined;
            resourceInputs["identityMapper"] = args ? args.identityMapper : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["otpValidityDuration"] = args ? args.otpValidityDuration : undefined;
            resourceInputs["requireBothAccessTokenAndIdToken"] = args ? args.requireBothAccessTokenAndIdToken : undefined;
            resourceInputs["serverFqdn"] = args ? args.serverFqdn : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["validateAccessTokenWhenIdTokenIsAlsoProvided"] = args ? args.validateAccessTokenWhenIdTokenIsAlsoProvided : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SaslMechanismHandler.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SaslMechanismHandler resources.
 */
export interface SaslMechanismHandlerState {
    /**
     * An access token validator that will ensure that each presented OAuth access token is authentic and trustworthy. It must
     * be configured with an identity mapper that will be used to map the access token to a local entry.
     */
    accessTokenValidators?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of OAuth scopes that will all be required for any access tokens that will be allowed for authentication.
     */
    allRequiredScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `oauth-bearer`: The identity mapper that will be used to map an alternate
     * authorization identity (provided in the GS2 header of the encoded OAUTHBEARER bind request credentials) to the
     * corresponding local entry. - `gssapi`: Specifies the name of the identity mapper that is to be used with this SASL
     * mechanism handler to map the alternate authorization identity (if provided, and if different from the Kerberos principal
     * used as the authentication identity) to the corresponding user in the directory. If no value is specified, then the
     * mapper specified in the identity-mapper configuration property will be used.
     */
    alternateAuthorizationIdentityMapper?: pulumi.Input<string>;
    /**
     * The set of OAuth scopes that a token may have to be allowed for authentication.
     */
    anyRequiredScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A description for this SASL Mechanism Handler
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the SASL mechanism handler is enabled for use.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party SASL Mechanism Handler. Each configuration
     * property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party SASL Mechanism Handler.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * An ID token validator that will ensure that each presented OpenID Connect ID token is authentic and trustworthy, and
     * that will map the token to a local entry.
     */
    idTokenValidators?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - One of [`unboundid-totp`, `unboundid-yubikey-otp`, `unboundid-delivered-otp`]:
     * The identity mapper that should be used to identify the user(s) targeted in the authentication and/or authorization
     * identities contained in the bind request. This will only be used for "u:"-style identities. - One of [`digest-md5`,
     * `plain`]: Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to match the
     * authentication or authorization ID included in the SASL bind request to the corresponding user in the directory. -
     * `unboundid-ms-chap-v2`: The identity mapper that should be used to identify the entry associated with the username
     * provided in the bind request. - `unboundid-external-auth`: The identity mapper that should be used to identify the user
     * targeted by the authentication ID contained in the bind request. This will only be used for "u:"-style authentication ID
     * values. - `cram-md5`: Specifies the name of the identity mapper used with this SASL mechanism handler to match the
     * authentication ID included in the SASL bind request to the corresponding user in the directory. - `gssapi`: Specifies
     * the name of the identity mapper that is to be used with this SASL mechanism handler to match the Kerberos principal
     * included in the SASL bind request to the corresponding user in the directory. - `third-party`: The identity mapper that
     * may be used to map usernames to user entries. If the custom SASL mechanism involves a username or some other form of
     * authentication and/or authorization identity, then this may be used to map that ID to an entry for that user.
     */
    identityMapper?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum length of time that a one-time password value should be considered valid.
     */
    otpValidityDuration?: pulumi.Input<string>;
    /**
     * Indicates whether bind requests will be required to have both an OAuth access token (in the "auth" element of the bind
     * request) and an OpenID Connect ID token (in the "pingidentityidtoken" element of the bind request).
     */
    requireBothAccessTokenAndIdToken?: pulumi.Input<boolean>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.SaslMechanismHandlerRequiredAction>[]>;
    /**
     * When the `type` attribute is set to: - `digest-md5`: Specifies the DNS-resolvable fully-qualified domain name for the
     * server that is used when validating the digest-uri parameter during the authentication process. - `oauth-bearer`: The
     * fully-qualified name that clients are expected to use when communicating with the server. - `gssapi`: Specifies the
     * DNS-resolvable fully-qualified domain name for the system.
     */
    serverFqdn?: pulumi.Input<string>;
    /**
     * The type of SASL Mechanism Handler resource. Options are ['unboundid-ms-chap-v2', 'unboundid-totp',
     * 'unboundid-yubikey-otp', 'external', 'digest-md5', 'plain', 'unboundid-delivered-otp', 'unboundid-external-auth',
     * 'anonymous', 'cram-md5', 'oauth-bearer', 'unboundid-certificate-plus-password', 'gssapi', 'third-party']
     */
    type?: pulumi.Input<string>;
    /**
     * Indicates whether to validate the OAuth access token in addition to the OpenID Connect ID token in OAUTHBEARER bind
     * requests that contain both types of tokens.
     */
    validateAccessTokenWhenIdTokenIsAlsoProvided?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SaslMechanismHandler resource.
 */
export interface SaslMechanismHandlerArgs {
    /**
     * An access token validator that will ensure that each presented OAuth access token is authentic and trustworthy. It must
     * be configured with an identity mapper that will be used to map the access token to a local entry.
     */
    accessTokenValidators?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of OAuth scopes that will all be required for any access tokens that will be allowed for authentication.
     */
    allRequiredScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `oauth-bearer`: The identity mapper that will be used to map an alternate
     * authorization identity (provided in the GS2 header of the encoded OAUTHBEARER bind request credentials) to the
     * corresponding local entry. - `gssapi`: Specifies the name of the identity mapper that is to be used with this SASL
     * mechanism handler to map the alternate authorization identity (if provided, and if different from the Kerberos principal
     * used as the authentication identity) to the corresponding user in the directory. If no value is specified, then the
     * mapper specified in the identity-mapper configuration property will be used.
     */
    alternateAuthorizationIdentityMapper?: pulumi.Input<string>;
    /**
     * The set of OAuth scopes that a token may have to be allowed for authentication.
     */
    anyRequiredScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A description for this SASL Mechanism Handler
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the SASL mechanism handler is enabled for use.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party SASL Mechanism Handler. Each configuration
     * property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party SASL Mechanism Handler.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * An ID token validator that will ensure that each presented OpenID Connect ID token is authentic and trustworthy, and
     * that will map the token to a local entry.
     */
    idTokenValidators?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - One of [`unboundid-totp`, `unboundid-yubikey-otp`, `unboundid-delivered-otp`]:
     * The identity mapper that should be used to identify the user(s) targeted in the authentication and/or authorization
     * identities contained in the bind request. This will only be used for "u:"-style identities. - One of [`digest-md5`,
     * `plain`]: Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to match the
     * authentication or authorization ID included in the SASL bind request to the corresponding user in the directory. -
     * `unboundid-ms-chap-v2`: The identity mapper that should be used to identify the entry associated with the username
     * provided in the bind request. - `unboundid-external-auth`: The identity mapper that should be used to identify the user
     * targeted by the authentication ID contained in the bind request. This will only be used for "u:"-style authentication ID
     * values. - `cram-md5`: Specifies the name of the identity mapper used with this SASL mechanism handler to match the
     * authentication ID included in the SASL bind request to the corresponding user in the directory. - `gssapi`: Specifies
     * the name of the identity mapper that is to be used with this SASL mechanism handler to match the Kerberos principal
     * included in the SASL bind request to the corresponding user in the directory. - `third-party`: The identity mapper that
     * may be used to map usernames to user entries. If the custom SASL mechanism involves a username or some other form of
     * authentication and/or authorization identity, then this may be used to map that ID to an entry for that user.
     */
    identityMapper?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * The maximum length of time that a one-time password value should be considered valid.
     */
    otpValidityDuration?: pulumi.Input<string>;
    /**
     * Indicates whether bind requests will be required to have both an OAuth access token (in the "auth" element of the bind
     * request) and an OpenID Connect ID token (in the "pingidentityidtoken" element of the bind request).
     */
    requireBothAccessTokenAndIdToken?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `digest-md5`: Specifies the DNS-resolvable fully-qualified domain name for the
     * server that is used when validating the digest-uri parameter during the authentication process. - `oauth-bearer`: The
     * fully-qualified name that clients are expected to use when communicating with the server. - `gssapi`: Specifies the
     * DNS-resolvable fully-qualified domain name for the system.
     */
    serverFqdn?: pulumi.Input<string>;
    /**
     * The type of SASL Mechanism Handler resource. Options are ['unboundid-ms-chap-v2', 'unboundid-totp',
     * 'unboundid-yubikey-otp', 'external', 'digest-md5', 'plain', 'unboundid-delivered-otp', 'unboundid-external-auth',
     * 'anonymous', 'cram-md5', 'oauth-bearer', 'unboundid-certificate-plus-password', 'gssapi', 'third-party']
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether to validate the OAuth access token in addition to the OpenID Connect ID token in OAUTHBEARER bind
     * requests that contain both types of tokens.
     */
    validateAccessTokenWhenIdTokenIsAlsoProvided?: pulumi.Input<string>;
}
