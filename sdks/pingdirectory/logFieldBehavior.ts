// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LogFieldBehavior extends pulumi.CustomResource {
    /**
     * Get an existing LogFieldBehavior resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogFieldBehaviorState, opts?: pulumi.CustomResourceOptions): LogFieldBehavior {
        return new LogFieldBehavior(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/logFieldBehavior:LogFieldBehavior';

    /**
     * Returns true if the given object is an instance of LogFieldBehavior.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogFieldBehavior {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogFieldBehavior.__pulumiType;
    }

    /**
     * The default behavior that the server should exhibit for fields for which no explicit behavior is defined. If no default
     * behavior is defined, the server will fall back to using the default behavior configured for the syntax used for each log
     * field.
     */
    public readonly defaultBehavior!: pulumi.Output<string | undefined>;
    /**
     * A description for this Log Field Behavior
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * The names of any custom fields that should be omitted from log messages. This should generally only be used for fields
     * that are not available through the omit-field property (for example, custom log fields defined in Server SDK
     * extensions).
     */
    public readonly omitFieldNames!: pulumi.Output<string[]>;
    /**
     * The log fields that should be omitted entirely from log messages. Neither the field name nor value will be included.
     */
    public readonly omitFields!: pulumi.Output<string[]>;
    /**
     * The names of any custom fields whose values should be preserved. This should generally only be used for fields that are
     * not available through the preserve-field property (for example, custom log fields defined in Server SDK extensions).
     */
    public readonly preserveFieldNames!: pulumi.Output<string[]>;
    /**
     * The log fields whose values should be logged with the intended value. The values for these fields will be preserved,
     * although they may be sanitized for parsability or safety purposes (for example, to escape special characters in the
     * value), and values that are too long may be truncated.
     */
    public readonly preserveFields!: pulumi.Output<string[]>;
    /**
     * The names of any custom fields whose values should be completely redacted. This should generally only be used for fields
     * that are not available through the redact-entire-value-field property (for example, custom log fields defined in Server
     * SDK extensions).
     */
    public readonly redactEntireValueFieldNames!: pulumi.Output<string[]>;
    /**
     * The log fields whose values should be completely redacted in log messages. The field name will be included, but with a
     * fixed value that does not reflect the actual value for the field.
     */
    public readonly redactEntireValueFields!: pulumi.Output<string[]>;
    /**
     * The names of any custom fields for which to redact components within the value. This should generally only be used for
     * fields that are not available through the redact-value-components-field property (for example, custom log fields defined
     * in Server SDK extensions).
     */
    public readonly redactValueComponentsFieldNames!: pulumi.Output<string[]>;
    /**
     * The log fields whose values will include redacted components.
     */
    public readonly redactValueComponentsFields!: pulumi.Output<string[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.LogFieldBehaviorRequiredAction[]>;
    /**
     * The names of any custom fields whose values should be completely tokenized. This should generally only be used for
     * fields that are not available through the tokenize-entire-value-field property (for example, custom log fields defined
     * in Server SDK extensions).
     */
    public readonly tokenizeEntireValueFieldNames!: pulumi.Output<string[]>;
    /**
     * The log fields whose values should be completely tokenized in log messages. The field name will be included, but the
     * value will be replaced with a token that does not reveal the actual value, but that is generated from the value.
     */
    public readonly tokenizeEntireValueFields!: pulumi.Output<string[]>;
    /**
     * The names of any custom fields for which to tokenize components within the value. This should generally only be used for
     * fields that are not available through the tokenize-value-components-field property (for example, custom log fields
     * defined in Server SDK extensions).
     */
    public readonly tokenizeValueComponentsFieldNames!: pulumi.Output<string[]>;
    /**
     * The log fields whose values will include tokenized components.
     */
    public readonly tokenizeValueComponentsFields!: pulumi.Output<string[]>;
    /**
     * The type of Log Field Behavior resource. Options are ['text-access', 'json-formatted-access']
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a LogFieldBehavior resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogFieldBehaviorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogFieldBehaviorArgs | LogFieldBehaviorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogFieldBehaviorState | undefined;
            resourceInputs["defaultBehavior"] = state ? state.defaultBehavior : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["omitFieldNames"] = state ? state.omitFieldNames : undefined;
            resourceInputs["omitFields"] = state ? state.omitFields : undefined;
            resourceInputs["preserveFieldNames"] = state ? state.preserveFieldNames : undefined;
            resourceInputs["preserveFields"] = state ? state.preserveFields : undefined;
            resourceInputs["redactEntireValueFieldNames"] = state ? state.redactEntireValueFieldNames : undefined;
            resourceInputs["redactEntireValueFields"] = state ? state.redactEntireValueFields : undefined;
            resourceInputs["redactValueComponentsFieldNames"] = state ? state.redactValueComponentsFieldNames : undefined;
            resourceInputs["redactValueComponentsFields"] = state ? state.redactValueComponentsFields : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["tokenizeEntireValueFieldNames"] = state ? state.tokenizeEntireValueFieldNames : undefined;
            resourceInputs["tokenizeEntireValueFields"] = state ? state.tokenizeEntireValueFields : undefined;
            resourceInputs["tokenizeValueComponentsFieldNames"] = state ? state.tokenizeValueComponentsFieldNames : undefined;
            resourceInputs["tokenizeValueComponentsFields"] = state ? state.tokenizeValueComponentsFields : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as LogFieldBehaviorArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["defaultBehavior"] = args ? args.defaultBehavior : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["omitFieldNames"] = args ? args.omitFieldNames : undefined;
            resourceInputs["omitFields"] = args ? args.omitFields : undefined;
            resourceInputs["preserveFieldNames"] = args ? args.preserveFieldNames : undefined;
            resourceInputs["preserveFields"] = args ? args.preserveFields : undefined;
            resourceInputs["redactEntireValueFieldNames"] = args ? args.redactEntireValueFieldNames : undefined;
            resourceInputs["redactEntireValueFields"] = args ? args.redactEntireValueFields : undefined;
            resourceInputs["redactValueComponentsFieldNames"] = args ? args.redactValueComponentsFieldNames : undefined;
            resourceInputs["redactValueComponentsFields"] = args ? args.redactValueComponentsFields : undefined;
            resourceInputs["tokenizeEntireValueFieldNames"] = args ? args.tokenizeEntireValueFieldNames : undefined;
            resourceInputs["tokenizeEntireValueFields"] = args ? args.tokenizeEntireValueFields : undefined;
            resourceInputs["tokenizeValueComponentsFieldNames"] = args ? args.tokenizeValueComponentsFieldNames : undefined;
            resourceInputs["tokenizeValueComponentsFields"] = args ? args.tokenizeValueComponentsFields : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogFieldBehavior.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LogFieldBehavior resources.
 */
export interface LogFieldBehaviorState {
    /**
     * The default behavior that the server should exhibit for fields for which no explicit behavior is defined. If no default
     * behavior is defined, the server will fall back to using the default behavior configured for the syntax used for each log
     * field.
     */
    defaultBehavior?: pulumi.Input<string>;
    /**
     * A description for this Log Field Behavior
     */
    description?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The names of any custom fields that should be omitted from log messages. This should generally only be used for fields
     * that are not available through the omit-field property (for example, custom log fields defined in Server SDK
     * extensions).
     */
    omitFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log fields that should be omitted entirely from log messages. Neither the field name nor value will be included.
     */
    omitFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The names of any custom fields whose values should be preserved. This should generally only be used for fields that are
     * not available through the preserve-field property (for example, custom log fields defined in Server SDK extensions).
     */
    preserveFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log fields whose values should be logged with the intended value. The values for these fields will be preserved,
     * although they may be sanitized for parsability or safety purposes (for example, to escape special characters in the
     * value), and values that are too long may be truncated.
     */
    preserveFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The names of any custom fields whose values should be completely redacted. This should generally only be used for fields
     * that are not available through the redact-entire-value-field property (for example, custom log fields defined in Server
     * SDK extensions).
     */
    redactEntireValueFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log fields whose values should be completely redacted in log messages. The field name will be included, but with a
     * fixed value that does not reflect the actual value for the field.
     */
    redactEntireValueFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The names of any custom fields for which to redact components within the value. This should generally only be used for
     * fields that are not available through the redact-value-components-field property (for example, custom log fields defined
     * in Server SDK extensions).
     */
    redactValueComponentsFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log fields whose values will include redacted components.
     */
    redactValueComponentsFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.LogFieldBehaviorRequiredAction>[]>;
    /**
     * The names of any custom fields whose values should be completely tokenized. This should generally only be used for
     * fields that are not available through the tokenize-entire-value-field property (for example, custom log fields defined
     * in Server SDK extensions).
     */
    tokenizeEntireValueFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log fields whose values should be completely tokenized in log messages. The field name will be included, but the
     * value will be replaced with a token that does not reveal the actual value, but that is generated from the value.
     */
    tokenizeEntireValueFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The names of any custom fields for which to tokenize components within the value. This should generally only be used for
     * fields that are not available through the tokenize-value-components-field property (for example, custom log fields
     * defined in Server SDK extensions).
     */
    tokenizeValueComponentsFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log fields whose values will include tokenized components.
     */
    tokenizeValueComponentsFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of Log Field Behavior resource. Options are ['text-access', 'json-formatted-access']
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogFieldBehavior resource.
 */
export interface LogFieldBehaviorArgs {
    /**
     * The default behavior that the server should exhibit for fields for which no explicit behavior is defined. If no default
     * behavior is defined, the server will fall back to using the default behavior configured for the syntax used for each log
     * field.
     */
    defaultBehavior?: pulumi.Input<string>;
    /**
     * A description for this Log Field Behavior
     */
    description?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * The names of any custom fields that should be omitted from log messages. This should generally only be used for fields
     * that are not available through the omit-field property (for example, custom log fields defined in Server SDK
     * extensions).
     */
    omitFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log fields that should be omitted entirely from log messages. Neither the field name nor value will be included.
     */
    omitFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The names of any custom fields whose values should be preserved. This should generally only be used for fields that are
     * not available through the preserve-field property (for example, custom log fields defined in Server SDK extensions).
     */
    preserveFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log fields whose values should be logged with the intended value. The values for these fields will be preserved,
     * although they may be sanitized for parsability or safety purposes (for example, to escape special characters in the
     * value), and values that are too long may be truncated.
     */
    preserveFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The names of any custom fields whose values should be completely redacted. This should generally only be used for fields
     * that are not available through the redact-entire-value-field property (for example, custom log fields defined in Server
     * SDK extensions).
     */
    redactEntireValueFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log fields whose values should be completely redacted in log messages. The field name will be included, but with a
     * fixed value that does not reflect the actual value for the field.
     */
    redactEntireValueFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The names of any custom fields for which to redact components within the value. This should generally only be used for
     * fields that are not available through the redact-value-components-field property (for example, custom log fields defined
     * in Server SDK extensions).
     */
    redactValueComponentsFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log fields whose values will include redacted components.
     */
    redactValueComponentsFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The names of any custom fields whose values should be completely tokenized. This should generally only be used for
     * fields that are not available through the tokenize-entire-value-field property (for example, custom log fields defined
     * in Server SDK extensions).
     */
    tokenizeEntireValueFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log fields whose values should be completely tokenized in log messages. The field name will be included, but the
     * value will be replaced with a token that does not reveal the actual value, but that is generated from the value.
     */
    tokenizeEntireValueFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The names of any custom fields for which to tokenize components within the value. This should generally only be used for
     * fields that are not available through the tokenize-value-components-field property (for example, custom log fields
     * defined in Server SDK extensions).
     */
    tokenizeValueComponentsFieldNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log fields whose values will include tokenized components.
     */
    tokenizeValueComponentsFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of Log Field Behavior resource. Options are ['text-access', 'json-formatted-access']
     */
    type: pulumi.Input<string>;
}
