// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIdTokenValidator(args: GetIdTokenValidatorArgs, opts?: pulumi.InvokeOptions): Promise<GetIdTokenValidatorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getIdTokenValidator:getIdTokenValidator", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdTokenValidator.
 */
export interface GetIdTokenValidatorArgs {
    name: string;
}

/**
 * A collection of values returned by getIdTokenValidator.
 */
export interface GetIdTokenValidatorResult {
    readonly allowedSigningAlgorithms: string[];
    readonly clockSkewGracePeriod: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly evaluationOrderIndex: number;
    readonly id: string;
    readonly identityMapper: string;
    readonly issuerUrl: string;
    readonly jwksCacheDuration: string;
    readonly jwksEndpointPath: string;
    readonly name: string;
    readonly openidConnectMetadataCacheDuration: string;
    readonly openidConnectProvider: string;
    readonly signingCertificates: string[];
    readonly subjectClaimName: string;
    readonly type: string;
}
export function getIdTokenValidatorOutput(args: GetIdTokenValidatorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdTokenValidatorResult> {
    return pulumi.output(args).apply((a: any) => getIdTokenValidator(a, opts))
}

/**
 * A collection of arguments for invoking getIdTokenValidator.
 */
export interface GetIdTokenValidatorOutputArgs {
    name: pulumi.Input<string>;
}
