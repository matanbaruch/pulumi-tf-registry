// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ConnectionCriteria extends pulumi.CustomResource {
    /**
     * Get an existing ConnectionCriteria resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectionCriteriaState, opts?: pulumi.CustomResourceOptions): ConnectionCriteria {
        return new ConnectionCriteria(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/connectionCriteria:ConnectionCriteria';

    /**
     * Returns true if the given object is an instance of ConnectionCriteria.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConnectionCriteria {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectionCriteria.__pulumiType;
    }

    /**
     * Specifies a connection criteria object that must match the associated client connection in order to match the aggregate
     * connection criteria. If one or more all-included connection criteria objects are provided, then a client connection must
     * match all of them in order to match the aggregate connection criteria.
     */
    public readonly allIncludedConnectionCriterias!: pulumi.Output<string[]>;
    /**
     * Specifies a search filter that must match the entry of the authenticated user for clients included in this Simple
     * Connection Criteria. If any filters are provided, then all of those filters must match the authenticated user entry.
     * This will only be taken into account for client connections that have authenticated to the server and will be ignored
     * for unauthenticated client connections.
     */
    public readonly allIncludedUserFilters!: pulumi.Output<string[]>;
    /**
     * Specifies the DN of a group in which authenticated users must exist for clients included in this Simple Connection
     * Criteria. If any group DNs are provided, then the authenticated user must be a member of all of those groups. This will
     * only be taken into account for client connections that have authenticated to the server and will be ignored for
     * unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations
     * are being proxied (performed using proxied authorization), and you need to match the originating user of the operation
     * rather than the proxy user (the user the proxy authenticated as).
     */
    public readonly allIncludedUserGroupDns!: pulumi.Output<string[]>;
    /**
     * Specifies the name of a privilege that must be held by the authenticated user for clients included in this Simple
     * Connection Criteria. If any privilege names are provided, then the authenticated user must have all of those privileges.
     * This will only be taken into account for client connections that have authenticated to the server and will be ignored
     * for unauthenticated client connections.
     */
    public readonly allIncludedUserPrivileges!: pulumi.Output<string[]>;
    /**
     * Specifies a connection criteria object that may match the associated client connection in order to match the aggregate
     * connection criteria. If one or more any-included connection criteria objects are provided, then a client connection must
     * match at least one of them in order to match the aggregate connection criteria.
     */
    public readonly anyIncludedConnectionCriterias!: pulumi.Output<string[]>;
    /**
     * Specifies a search filter that may match the entry of the authenticated user for clients included in this Simple
     * Connection Criteria. If any filters are provided, then at least one of those filters must match the authenticated user
     * entry. This will only be taken into account for client connections that have authenticated to the server and will be
     * ignored for unauthenticated client connections.
     */
    public readonly anyIncludedUserFilters!: pulumi.Output<string[]>;
    /**
     * Specifies the DN of a group in which authenticated users may exist for clients included in this Simple Connection
     * Criteria. If any group DNs are provided, then the authenticated user must be a member of at least one of those groups.
     * This will only be taken into account for client connections that have authenticated to the server and will be ignored
     * for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if
     * operations are being proxied (performed using proxied authorization), and you need to match the originating user of the
     * operation rather than the proxy user (the user the proxy authenticated as).
     */
    public readonly anyIncludedUserGroupDns!: pulumi.Output<string[]>;
    /**
     * Specifies the name of a privilege that may be held by the authenticated user for clients included in this Simple
     * Connection Criteria. If any privilege names are provided, then the authenticated user must have at least one of those
     * privileges. This will only be taken into account for client connections that have authenticated to the server and will
     * be ignored for unauthenticated client connections.
     */
    public readonly anyIncludedUserPrivileges!: pulumi.Output<string[]>;
    /**
     * Indicates whether this Simple Connection Criteria should require or allow clients that authenticated using a secure
     * manner. This will only be taken into account for client connections that have authenticated to the server and will be
     * ignored for unauthenticated client connections.
     */
    public readonly authenticationSecurityLevel!: pulumi.Output<string>;
    /**
     * Indicates whether this Simple Connection Criteria should require or allow clients using a secure communication channel.
     */
    public readonly communicationSecurityLevel!: pulumi.Output<string>;
    /**
     * A description for this Connection Criteria
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies an address mask that may be used to specify a set of clients that should be excluded from this Simple
     * Connection Criteria.
     */
    public readonly excludedClientAddresses!: pulumi.Output<string[]>;
    /**
     * Specifies a connection handler for clients that should be excluded from this Simple Connection Criteria.
     */
    public readonly excludedConnectionHandlers!: pulumi.Output<string[]>;
    /**
     * Specifies the name of a communication protocol that should be used by clients excluded from this Simple Connection
     * Criteria.
     */
    public readonly excludedProtocols!: pulumi.Output<string[]>;
    /**
     * Specifies a base DN below which authenticated user entries may exist for clients excluded from this Simple Connection
     * Criteria. This will only be taken into account for client connections that have authenticated to the server and will be
     * ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if
     * operations are being proxied (performed using proxied authorization), and you need to match the originating user of the
     * operation rather than the proxy user (the user the proxy authenticated as).
     */
    public readonly excludedUserBaseDns!: pulumi.Output<string[]>;
    /**
     * Specifies the name of a SASL mechanism that should be used by clients excluded from this Simple Connection Criteria.
     * This will only be taken into account for client connections that have authenticated to the server using a SASL mechanism
     * and will be ignored for unauthenticated client connections and for client connections that authenticated using some
     * other method (e.g., those performing simple or internal authentication).
     */
    public readonly excludedUserSaslMechanisms!: pulumi.Output<string[]>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Connection Criteria. Each configuration property
     * should be given in the form 'name=value'.
     */
    public readonly extensionArguments!: pulumi.Output<string[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Connection Criteria.
     */
    public readonly extensionClass!: pulumi.Output<string | undefined>;
    /**
     * Specifies an address mask that may be used to specify a set of clients that should be included in this Simple Connection
     * Criteria.
     */
    public readonly includedClientAddresses!: pulumi.Output<string[]>;
    /**
     * Specifies a connection handler for clients that should be included in this Simple Connection Criteria.
     */
    public readonly includedConnectionHandlers!: pulumi.Output<string[]>;
    /**
     * Specifies the name of a communication protocol that should be used by clients included in this Simple Connection
     * Criteria.
     */
    public readonly includedProtocols!: pulumi.Output<string[]>;
    /**
     * Specifies a base DN below which authenticated user entries may exist for clients included in this Simple Connection
     * Criteria. This will only be taken into account for client connections that have authenticated to the server and will be
     * ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if
     * operations are being proxied (performed using proxied authorization), and you need to match the originating user of the
     * operation rather than the proxy user (the user the proxy authenticated as).
     */
    public readonly includedUserBaseDns!: pulumi.Output<string[]>;
    /**
     * Specifies the name of a SASL mechanism that should be used by clients included in this Simple Connection Criteria. This
     * will only be taken into account for client connections that have authenticated to the server using a SASL mechanism and
     * will be ignored for unauthenticated client connections and for client connections that authenticated using some other
     * method (e.g., those performing simple or internal authentication).
     */
    public readonly includedUserSaslMechanisms!: pulumi.Output<string[]>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies a connection criteria object that must not match the associated client connection in order to match the
     * aggregate connection criteria. If one or more none-included connection criteria objects are provided, then a client
     * connection must not match any of them in order to match the aggregate connection criteria.
     */
    public readonly noneIncludedConnectionCriterias!: pulumi.Output<string[]>;
    /**
     * Specifies a search filter that must not match the entry of the authenticated user for clients included in this Simple
     * Connection Criteria. If any filters are provided, then none of those filters may match the authenticated user entry.
     * This will only be taken into account for client connections that have authenticated to the server and will be ignored
     * for unauthenticated client connections.
     */
    public readonly noneIncludedUserFilters!: pulumi.Output<string[]>;
    /**
     * Specifies the DN of a group in which authenticated users must not exist for clients included in this Simple Connection
     * Criteria. If any group DNs are provided, then the authenticated user must not be a member any of those groups. This will
     * only be taken into account for client connections that have authenticated to the server and will be ignored for
     * unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations
     * are being proxied (performed using proxied authorization), and you need to match the originating user of the operation
     * rather than the proxy user (the user the proxy authenticated as).
     */
    public readonly noneIncludedUserGroupDns!: pulumi.Output<string[]>;
    /**
     * Specifies the name of a privilege that must not be held by the authenticated user for clients included in this Simple
     * Connection Criteria. If any privilege names are provided, then the authenticated user must not have any of those
     * privileges. This will only be taken into account for client connections that have authenticated to the server and will
     * be ignored for unauthenticated client connections.
     */
    public readonly noneIncludedUserPrivileges!: pulumi.Output<string[]>;
    /**
     * Specifies a connection criteria object that should not match the associated client connection in order to match the
     * aggregate connection criteria. If one or more not-all-included connection criteria objects are provided, then a client
     * connection must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in
     * order to match the aggregate connection criteria.
     */
    public readonly notAllIncludedConnectionCriterias!: pulumi.Output<string[]>;
    /**
     * Specifies a search filter that should not match the entry of the authenticated user for clients included in this Simple
     * Connection Criteria. If any filters are provided, then at least one of those filters must not match the authenticated
     * user entry (that is, the user entry may match zero or more of those filters, but not all of them). This will only be
     * taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated
     * client connections.
     */
    public readonly notAllIncludedUserFilters!: pulumi.Output<string[]>;
    /**
     * Specifies the DN of a group in which authenticated users should not exist for clients included in this Simple Connection
     * Criteria. If any group DNs are provided, then the authenticated user must not be a member of at least one of those
     * groups (that is, the user may be a member of zero or more of those groups, but not of all of them). This will only be
     * taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated
     * client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being
     * proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than
     * the proxy user (the user the proxy authenticated as).
     */
    public readonly notAllIncludedUserGroupDns!: pulumi.Output<string[]>;
    /**
     * Specifies the name of a privilege that should not be held by the authenticated user for clients included in this Simple
     * Connection Criteria. If any privilege names are provided, then the authenticated user must not have at least one of
     * those privileges (that is, the user may hold zero or more of those privileges, but not all of them). This will only be
     * taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated
     * client connections.
     */
    public readonly notAllIncludedUserPrivileges!: pulumi.Output<string[]>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.ConnectionCriteriaRequiredAction[]>;
    /**
     * The type of Connection Criteria resource. Options are ['simple', 'aggregate', 'third-party']
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Specifies the authentication types for client connections that may be included in this Simple Connection Criteria.
     */
    public readonly userAuthTypes!: pulumi.Output<string[]>;

    /**
     * Create a ConnectionCriteria resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectionCriteriaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectionCriteriaArgs | ConnectionCriteriaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectionCriteriaState | undefined;
            resourceInputs["allIncludedConnectionCriterias"] = state ? state.allIncludedConnectionCriterias : undefined;
            resourceInputs["allIncludedUserFilters"] = state ? state.allIncludedUserFilters : undefined;
            resourceInputs["allIncludedUserGroupDns"] = state ? state.allIncludedUserGroupDns : undefined;
            resourceInputs["allIncludedUserPrivileges"] = state ? state.allIncludedUserPrivileges : undefined;
            resourceInputs["anyIncludedConnectionCriterias"] = state ? state.anyIncludedConnectionCriterias : undefined;
            resourceInputs["anyIncludedUserFilters"] = state ? state.anyIncludedUserFilters : undefined;
            resourceInputs["anyIncludedUserGroupDns"] = state ? state.anyIncludedUserGroupDns : undefined;
            resourceInputs["anyIncludedUserPrivileges"] = state ? state.anyIncludedUserPrivileges : undefined;
            resourceInputs["authenticationSecurityLevel"] = state ? state.authenticationSecurityLevel : undefined;
            resourceInputs["communicationSecurityLevel"] = state ? state.communicationSecurityLevel : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["excludedClientAddresses"] = state ? state.excludedClientAddresses : undefined;
            resourceInputs["excludedConnectionHandlers"] = state ? state.excludedConnectionHandlers : undefined;
            resourceInputs["excludedProtocols"] = state ? state.excludedProtocols : undefined;
            resourceInputs["excludedUserBaseDns"] = state ? state.excludedUserBaseDns : undefined;
            resourceInputs["excludedUserSaslMechanisms"] = state ? state.excludedUserSaslMechanisms : undefined;
            resourceInputs["extensionArguments"] = state ? state.extensionArguments : undefined;
            resourceInputs["extensionClass"] = state ? state.extensionClass : undefined;
            resourceInputs["includedClientAddresses"] = state ? state.includedClientAddresses : undefined;
            resourceInputs["includedConnectionHandlers"] = state ? state.includedConnectionHandlers : undefined;
            resourceInputs["includedProtocols"] = state ? state.includedProtocols : undefined;
            resourceInputs["includedUserBaseDns"] = state ? state.includedUserBaseDns : undefined;
            resourceInputs["includedUserSaslMechanisms"] = state ? state.includedUserSaslMechanisms : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["noneIncludedConnectionCriterias"] = state ? state.noneIncludedConnectionCriterias : undefined;
            resourceInputs["noneIncludedUserFilters"] = state ? state.noneIncludedUserFilters : undefined;
            resourceInputs["noneIncludedUserGroupDns"] = state ? state.noneIncludedUserGroupDns : undefined;
            resourceInputs["noneIncludedUserPrivileges"] = state ? state.noneIncludedUserPrivileges : undefined;
            resourceInputs["notAllIncludedConnectionCriterias"] = state ? state.notAllIncludedConnectionCriterias : undefined;
            resourceInputs["notAllIncludedUserFilters"] = state ? state.notAllIncludedUserFilters : undefined;
            resourceInputs["notAllIncludedUserGroupDns"] = state ? state.notAllIncludedUserGroupDns : undefined;
            resourceInputs["notAllIncludedUserPrivileges"] = state ? state.notAllIncludedUserPrivileges : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["userAuthTypes"] = state ? state.userAuthTypes : undefined;
        } else {
            const args = argsOrState as ConnectionCriteriaArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["allIncludedConnectionCriterias"] = args ? args.allIncludedConnectionCriterias : undefined;
            resourceInputs["allIncludedUserFilters"] = args ? args.allIncludedUserFilters : undefined;
            resourceInputs["allIncludedUserGroupDns"] = args ? args.allIncludedUserGroupDns : undefined;
            resourceInputs["allIncludedUserPrivileges"] = args ? args.allIncludedUserPrivileges : undefined;
            resourceInputs["anyIncludedConnectionCriterias"] = args ? args.anyIncludedConnectionCriterias : undefined;
            resourceInputs["anyIncludedUserFilters"] = args ? args.anyIncludedUserFilters : undefined;
            resourceInputs["anyIncludedUserGroupDns"] = args ? args.anyIncludedUserGroupDns : undefined;
            resourceInputs["anyIncludedUserPrivileges"] = args ? args.anyIncludedUserPrivileges : undefined;
            resourceInputs["authenticationSecurityLevel"] = args ? args.authenticationSecurityLevel : undefined;
            resourceInputs["communicationSecurityLevel"] = args ? args.communicationSecurityLevel : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["excludedClientAddresses"] = args ? args.excludedClientAddresses : undefined;
            resourceInputs["excludedConnectionHandlers"] = args ? args.excludedConnectionHandlers : undefined;
            resourceInputs["excludedProtocols"] = args ? args.excludedProtocols : undefined;
            resourceInputs["excludedUserBaseDns"] = args ? args.excludedUserBaseDns : undefined;
            resourceInputs["excludedUserSaslMechanisms"] = args ? args.excludedUserSaslMechanisms : undefined;
            resourceInputs["extensionArguments"] = args ? args.extensionArguments : undefined;
            resourceInputs["extensionClass"] = args ? args.extensionClass : undefined;
            resourceInputs["includedClientAddresses"] = args ? args.includedClientAddresses : undefined;
            resourceInputs["includedConnectionHandlers"] = args ? args.includedConnectionHandlers : undefined;
            resourceInputs["includedProtocols"] = args ? args.includedProtocols : undefined;
            resourceInputs["includedUserBaseDns"] = args ? args.includedUserBaseDns : undefined;
            resourceInputs["includedUserSaslMechanisms"] = args ? args.includedUserSaslMechanisms : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["noneIncludedConnectionCriterias"] = args ? args.noneIncludedConnectionCriterias : undefined;
            resourceInputs["noneIncludedUserFilters"] = args ? args.noneIncludedUserFilters : undefined;
            resourceInputs["noneIncludedUserGroupDns"] = args ? args.noneIncludedUserGroupDns : undefined;
            resourceInputs["noneIncludedUserPrivileges"] = args ? args.noneIncludedUserPrivileges : undefined;
            resourceInputs["notAllIncludedConnectionCriterias"] = args ? args.notAllIncludedConnectionCriterias : undefined;
            resourceInputs["notAllIncludedUserFilters"] = args ? args.notAllIncludedUserFilters : undefined;
            resourceInputs["notAllIncludedUserGroupDns"] = args ? args.notAllIncludedUserGroupDns : undefined;
            resourceInputs["notAllIncludedUserPrivileges"] = args ? args.notAllIncludedUserPrivileges : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["userAuthTypes"] = args ? args.userAuthTypes : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConnectionCriteria.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ConnectionCriteria resources.
 */
export interface ConnectionCriteriaState {
    /**
     * Specifies a connection criteria object that must match the associated client connection in order to match the aggregate
     * connection criteria. If one or more all-included connection criteria objects are provided, then a client connection must
     * match all of them in order to match the aggregate connection criteria.
     */
    allIncludedConnectionCriterias?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a search filter that must match the entry of the authenticated user for clients included in this Simple
     * Connection Criteria. If any filters are provided, then all of those filters must match the authenticated user entry.
     * This will only be taken into account for client connections that have authenticated to the server and will be ignored
     * for unauthenticated client connections.
     */
    allIncludedUserFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the DN of a group in which authenticated users must exist for clients included in this Simple Connection
     * Criteria. If any group DNs are provided, then the authenticated user must be a member of all of those groups. This will
     * only be taken into account for client connections that have authenticated to the server and will be ignored for
     * unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations
     * are being proxied (performed using proxied authorization), and you need to match the originating user of the operation
     * rather than the proxy user (the user the proxy authenticated as).
     */
    allIncludedUserGroupDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a privilege that must be held by the authenticated user for clients included in this Simple
     * Connection Criteria. If any privilege names are provided, then the authenticated user must have all of those privileges.
     * This will only be taken into account for client connections that have authenticated to the server and will be ignored
     * for unauthenticated client connections.
     */
    allIncludedUserPrivileges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a connection criteria object that may match the associated client connection in order to match the aggregate
     * connection criteria. If one or more any-included connection criteria objects are provided, then a client connection must
     * match at least one of them in order to match the aggregate connection criteria.
     */
    anyIncludedConnectionCriterias?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a search filter that may match the entry of the authenticated user for clients included in this Simple
     * Connection Criteria. If any filters are provided, then at least one of those filters must match the authenticated user
     * entry. This will only be taken into account for client connections that have authenticated to the server and will be
     * ignored for unauthenticated client connections.
     */
    anyIncludedUserFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the DN of a group in which authenticated users may exist for clients included in this Simple Connection
     * Criteria. If any group DNs are provided, then the authenticated user must be a member of at least one of those groups.
     * This will only be taken into account for client connections that have authenticated to the server and will be ignored
     * for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if
     * operations are being proxied (performed using proxied authorization), and you need to match the originating user of the
     * operation rather than the proxy user (the user the proxy authenticated as).
     */
    anyIncludedUserGroupDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a privilege that may be held by the authenticated user for clients included in this Simple
     * Connection Criteria. If any privilege names are provided, then the authenticated user must have at least one of those
     * privileges. This will only be taken into account for client connections that have authenticated to the server and will
     * be ignored for unauthenticated client connections.
     */
    anyIncludedUserPrivileges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether this Simple Connection Criteria should require or allow clients that authenticated using a secure
     * manner. This will only be taken into account for client connections that have authenticated to the server and will be
     * ignored for unauthenticated client connections.
     */
    authenticationSecurityLevel?: pulumi.Input<string>;
    /**
     * Indicates whether this Simple Connection Criteria should require or allow clients using a secure communication channel.
     */
    communicationSecurityLevel?: pulumi.Input<string>;
    /**
     * A description for this Connection Criteria
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies an address mask that may be used to specify a set of clients that should be excluded from this Simple
     * Connection Criteria.
     */
    excludedClientAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a connection handler for clients that should be excluded from this Simple Connection Criteria.
     */
    excludedConnectionHandlers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a communication protocol that should be used by clients excluded from this Simple Connection
     * Criteria.
     */
    excludedProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a base DN below which authenticated user entries may exist for clients excluded from this Simple Connection
     * Criteria. This will only be taken into account for client connections that have authenticated to the server and will be
     * ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if
     * operations are being proxied (performed using proxied authorization), and you need to match the originating user of the
     * operation rather than the proxy user (the user the proxy authenticated as).
     */
    excludedUserBaseDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a SASL mechanism that should be used by clients excluded from this Simple Connection Criteria.
     * This will only be taken into account for client connections that have authenticated to the server using a SASL mechanism
     * and will be ignored for unauthenticated client connections and for client connections that authenticated using some
     * other method (e.g., those performing simple or internal authentication).
     */
    excludedUserSaslMechanisms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Connection Criteria. Each configuration property
     * should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Connection Criteria.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * Specifies an address mask that may be used to specify a set of clients that should be included in this Simple Connection
     * Criteria.
     */
    includedClientAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a connection handler for clients that should be included in this Simple Connection Criteria.
     */
    includedConnectionHandlers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a communication protocol that should be used by clients included in this Simple Connection
     * Criteria.
     */
    includedProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a base DN below which authenticated user entries may exist for clients included in this Simple Connection
     * Criteria. This will only be taken into account for client connections that have authenticated to the server and will be
     * ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if
     * operations are being proxied (performed using proxied authorization), and you need to match the originating user of the
     * operation rather than the proxy user (the user the proxy authenticated as).
     */
    includedUserBaseDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a SASL mechanism that should be used by clients included in this Simple Connection Criteria. This
     * will only be taken into account for client connections that have authenticated to the server using a SASL mechanism and
     * will be ignored for unauthenticated client connections and for client connections that authenticated using some other
     * method (e.g., those performing simple or internal authentication).
     */
    includedUserSaslMechanisms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies a connection criteria object that must not match the associated client connection in order to match the
     * aggregate connection criteria. If one or more none-included connection criteria objects are provided, then a client
     * connection must not match any of them in order to match the aggregate connection criteria.
     */
    noneIncludedConnectionCriterias?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a search filter that must not match the entry of the authenticated user for clients included in this Simple
     * Connection Criteria. If any filters are provided, then none of those filters may match the authenticated user entry.
     * This will only be taken into account for client connections that have authenticated to the server and will be ignored
     * for unauthenticated client connections.
     */
    noneIncludedUserFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the DN of a group in which authenticated users must not exist for clients included in this Simple Connection
     * Criteria. If any group DNs are provided, then the authenticated user must not be a member any of those groups. This will
     * only be taken into account for client connections that have authenticated to the server and will be ignored for
     * unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations
     * are being proxied (performed using proxied authorization), and you need to match the originating user of the operation
     * rather than the proxy user (the user the proxy authenticated as).
     */
    noneIncludedUserGroupDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a privilege that must not be held by the authenticated user for clients included in this Simple
     * Connection Criteria. If any privilege names are provided, then the authenticated user must not have any of those
     * privileges. This will only be taken into account for client connections that have authenticated to the server and will
     * be ignored for unauthenticated client connections.
     */
    noneIncludedUserPrivileges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a connection criteria object that should not match the associated client connection in order to match the
     * aggregate connection criteria. If one or more not-all-included connection criteria objects are provided, then a client
     * connection must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in
     * order to match the aggregate connection criteria.
     */
    notAllIncludedConnectionCriterias?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a search filter that should not match the entry of the authenticated user for clients included in this Simple
     * Connection Criteria. If any filters are provided, then at least one of those filters must not match the authenticated
     * user entry (that is, the user entry may match zero or more of those filters, but not all of them). This will only be
     * taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated
     * client connections.
     */
    notAllIncludedUserFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the DN of a group in which authenticated users should not exist for clients included in this Simple Connection
     * Criteria. If any group DNs are provided, then the authenticated user must not be a member of at least one of those
     * groups (that is, the user may be a member of zero or more of those groups, but not of all of them). This will only be
     * taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated
     * client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being
     * proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than
     * the proxy user (the user the proxy authenticated as).
     */
    notAllIncludedUserGroupDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a privilege that should not be held by the authenticated user for clients included in this Simple
     * Connection Criteria. If any privilege names are provided, then the authenticated user must not have at least one of
     * those privileges (that is, the user may hold zero or more of those privileges, but not all of them). This will only be
     * taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated
     * client connections.
     */
    notAllIncludedUserPrivileges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.ConnectionCriteriaRequiredAction>[]>;
    /**
     * The type of Connection Criteria resource. Options are ['simple', 'aggregate', 'third-party']
     */
    type?: pulumi.Input<string>;
    /**
     * Specifies the authentication types for client connections that may be included in this Simple Connection Criteria.
     */
    userAuthTypes?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ConnectionCriteria resource.
 */
export interface ConnectionCriteriaArgs {
    /**
     * Specifies a connection criteria object that must match the associated client connection in order to match the aggregate
     * connection criteria. If one or more all-included connection criteria objects are provided, then a client connection must
     * match all of them in order to match the aggregate connection criteria.
     */
    allIncludedConnectionCriterias?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a search filter that must match the entry of the authenticated user for clients included in this Simple
     * Connection Criteria. If any filters are provided, then all of those filters must match the authenticated user entry.
     * This will only be taken into account for client connections that have authenticated to the server and will be ignored
     * for unauthenticated client connections.
     */
    allIncludedUserFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the DN of a group in which authenticated users must exist for clients included in this Simple Connection
     * Criteria. If any group DNs are provided, then the authenticated user must be a member of all of those groups. This will
     * only be taken into account for client connections that have authenticated to the server and will be ignored for
     * unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations
     * are being proxied (performed using proxied authorization), and you need to match the originating user of the operation
     * rather than the proxy user (the user the proxy authenticated as).
     */
    allIncludedUserGroupDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a privilege that must be held by the authenticated user for clients included in this Simple
     * Connection Criteria. If any privilege names are provided, then the authenticated user must have all of those privileges.
     * This will only be taken into account for client connections that have authenticated to the server and will be ignored
     * for unauthenticated client connections.
     */
    allIncludedUserPrivileges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a connection criteria object that may match the associated client connection in order to match the aggregate
     * connection criteria. If one or more any-included connection criteria objects are provided, then a client connection must
     * match at least one of them in order to match the aggregate connection criteria.
     */
    anyIncludedConnectionCriterias?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a search filter that may match the entry of the authenticated user for clients included in this Simple
     * Connection Criteria. If any filters are provided, then at least one of those filters must match the authenticated user
     * entry. This will only be taken into account for client connections that have authenticated to the server and will be
     * ignored for unauthenticated client connections.
     */
    anyIncludedUserFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the DN of a group in which authenticated users may exist for clients included in this Simple Connection
     * Criteria. If any group DNs are provided, then the authenticated user must be a member of at least one of those groups.
     * This will only be taken into account for client connections that have authenticated to the server and will be ignored
     * for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if
     * operations are being proxied (performed using proxied authorization), and you need to match the originating user of the
     * operation rather than the proxy user (the user the proxy authenticated as).
     */
    anyIncludedUserGroupDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a privilege that may be held by the authenticated user for clients included in this Simple
     * Connection Criteria. If any privilege names are provided, then the authenticated user must have at least one of those
     * privileges. This will only be taken into account for client connections that have authenticated to the server and will
     * be ignored for unauthenticated client connections.
     */
    anyIncludedUserPrivileges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether this Simple Connection Criteria should require or allow clients that authenticated using a secure
     * manner. This will only be taken into account for client connections that have authenticated to the server and will be
     * ignored for unauthenticated client connections.
     */
    authenticationSecurityLevel?: pulumi.Input<string>;
    /**
     * Indicates whether this Simple Connection Criteria should require or allow clients using a secure communication channel.
     */
    communicationSecurityLevel?: pulumi.Input<string>;
    /**
     * A description for this Connection Criteria
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies an address mask that may be used to specify a set of clients that should be excluded from this Simple
     * Connection Criteria.
     */
    excludedClientAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a connection handler for clients that should be excluded from this Simple Connection Criteria.
     */
    excludedConnectionHandlers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a communication protocol that should be used by clients excluded from this Simple Connection
     * Criteria.
     */
    excludedProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a base DN below which authenticated user entries may exist for clients excluded from this Simple Connection
     * Criteria. This will only be taken into account for client connections that have authenticated to the server and will be
     * ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if
     * operations are being proxied (performed using proxied authorization), and you need to match the originating user of the
     * operation rather than the proxy user (the user the proxy authenticated as).
     */
    excludedUserBaseDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a SASL mechanism that should be used by clients excluded from this Simple Connection Criteria.
     * This will only be taken into account for client connections that have authenticated to the server using a SASL mechanism
     * and will be ignored for unauthenticated client connections and for client connections that authenticated using some
     * other method (e.g., those performing simple or internal authentication).
     */
    excludedUserSaslMechanisms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Connection Criteria. Each configuration property
     * should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Connection Criteria.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * Specifies an address mask that may be used to specify a set of clients that should be included in this Simple Connection
     * Criteria.
     */
    includedClientAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a connection handler for clients that should be included in this Simple Connection Criteria.
     */
    includedConnectionHandlers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a communication protocol that should be used by clients included in this Simple Connection
     * Criteria.
     */
    includedProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a base DN below which authenticated user entries may exist for clients included in this Simple Connection
     * Criteria. This will only be taken into account for client connections that have authenticated to the server and will be
     * ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if
     * operations are being proxied (performed using proxied authorization), and you need to match the originating user of the
     * operation rather than the proxy user (the user the proxy authenticated as).
     */
    includedUserBaseDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a SASL mechanism that should be used by clients included in this Simple Connection Criteria. This
     * will only be taken into account for client connections that have authenticated to the server using a SASL mechanism and
     * will be ignored for unauthenticated client connections and for client connections that authenticated using some other
     * method (e.g., those performing simple or internal authentication).
     */
    includedUserSaslMechanisms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies a connection criteria object that must not match the associated client connection in order to match the
     * aggregate connection criteria. If one or more none-included connection criteria objects are provided, then a client
     * connection must not match any of them in order to match the aggregate connection criteria.
     */
    noneIncludedConnectionCriterias?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a search filter that must not match the entry of the authenticated user for clients included in this Simple
     * Connection Criteria. If any filters are provided, then none of those filters may match the authenticated user entry.
     * This will only be taken into account for client connections that have authenticated to the server and will be ignored
     * for unauthenticated client connections.
     */
    noneIncludedUserFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the DN of a group in which authenticated users must not exist for clients included in this Simple Connection
     * Criteria. If any group DNs are provided, then the authenticated user must not be a member any of those groups. This will
     * only be taken into account for client connections that have authenticated to the server and will be ignored for
     * unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations
     * are being proxied (performed using proxied authorization), and you need to match the originating user of the operation
     * rather than the proxy user (the user the proxy authenticated as).
     */
    noneIncludedUserGroupDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a privilege that must not be held by the authenticated user for clients included in this Simple
     * Connection Criteria. If any privilege names are provided, then the authenticated user must not have any of those
     * privileges. This will only be taken into account for client connections that have authenticated to the server and will
     * be ignored for unauthenticated client connections.
     */
    noneIncludedUserPrivileges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a connection criteria object that should not match the associated client connection in order to match the
     * aggregate connection criteria. If one or more not-all-included connection criteria objects are provided, then a client
     * connection must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in
     * order to match the aggregate connection criteria.
     */
    notAllIncludedConnectionCriterias?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a search filter that should not match the entry of the authenticated user for clients included in this Simple
     * Connection Criteria. If any filters are provided, then at least one of those filters must not match the authenticated
     * user entry (that is, the user entry may match zero or more of those filters, but not all of them). This will only be
     * taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated
     * client connections.
     */
    notAllIncludedUserFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the DN of a group in which authenticated users should not exist for clients included in this Simple Connection
     * Criteria. If any group DNs are provided, then the authenticated user must not be a member of at least one of those
     * groups (that is, the user may be a member of zero or more of those groups, but not of all of them). This will only be
     * taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated
     * client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being
     * proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than
     * the proxy user (the user the proxy authenticated as).
     */
    notAllIncludedUserGroupDns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of a privilege that should not be held by the authenticated user for clients included in this Simple
     * Connection Criteria. If any privilege names are provided, then the authenticated user must not have at least one of
     * those privileges (that is, the user may hold zero or more of those privileges, but not all of them). This will only be
     * taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated
     * client connections.
     */
    notAllIncludedUserPrivileges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of Connection Criteria resource. Options are ['simple', 'aggregate', 'third-party']
     */
    type: pulumi.Input<string>;
    /**
     * Specifies the authentication types for client connections that may be included in this Simple Connection Criteria.
     */
    userAuthTypes?: pulumi.Input<pulumi.Input<string>[]>;
}
