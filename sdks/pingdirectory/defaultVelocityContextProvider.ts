// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DefaultVelocityContextProvider extends pulumi.CustomResource {
    /**
     * Get an existing DefaultVelocityContextProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultVelocityContextProviderState, opts?: pulumi.CustomResourceOptions): DefaultVelocityContextProvider {
        return new DefaultVelocityContextProvider(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/defaultVelocityContextProvider:DefaultVelocityContextProvider';

    /**
     * Returns true if the given object is an instance of DefaultVelocityContextProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultVelocityContextProvider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultVelocityContextProvider.__pulumiType;
    }

    /**
     * The fully-qualified name of a Velocity Tool class that will be initialized once for the life of the server. May
     * optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon
     * (;). The path may absolute or relative to the server root.
     */
    public readonly applicationTools!: pulumi.Output<string[]>;
    /**
     * Indicates whether this Velocity Context Provider is enabled. If set to 'false' this Velocity Context Provider will not
     * contribute context content for any requests.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The name of a view for which this Velocity Context Provider will not contribute content.
     */
    public readonly excludedViews!: pulumi.Output<string[]>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Velocity Context Provider. Each configuration
     * property should be given in the form 'name=value'.
     */
    public readonly extensionArguments!: pulumi.Output<string[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Velocity Context Provider.
     */
    public readonly extensionClass!: pulumi.Output<string>;
    /**
     * Specifies the set of HTTP methods handled by this Velocity Context Provider, which will perform actions necessary to
     * fulfill the request before updating the context for the response. The values of this property are not case-sensitive.
     */
    public readonly httpMethods!: pulumi.Output<string[]>;
    /**
     * Name of the parent HTTP Servlet Extension
     */
    public readonly httpServletExtensionName!: pulumi.Output<string>;
    /**
     * The name of a view for which this Velocity Context Provider will contribute content.
     */
    public readonly includedViews!: pulumi.Output<string[]>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * Scope for context objects contributed by this Velocity Context Provider. Must be either 'request' or 'session' or
     * 'application'.
     */
    public readonly objectScope!: pulumi.Output<string>;
    /**
     * The fully-qualified name of a Velocity Tool class that will be initialized for each request. May optionally include a
     * path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may
     * absolute or relative to the server root.
     */
    public readonly requestTools!: pulumi.Output<string[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.DefaultVelocityContextProviderRequiredAction[]>;
    /**
     * Specifies HTTP header fields and values added to response headers for template page requests to which this Velocity
     * Context Provider contributes content.
     */
    public readonly responseHeaders!: pulumi.Output<string[]>;
    /**
     * The fully-qualified name of a Velocity Tool class that will be initialized for each session. May optionally include a
     * path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may
     * absolute or relative to the server root.
     */
    public readonly sessionTools!: pulumi.Output<string[]>;
    /**
     * The type of Velocity Context Provider resource. Options are ['velocity-tools', 'custom', 'third-party']
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DefaultVelocityContextProvider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DefaultVelocityContextProviderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultVelocityContextProviderArgs | DefaultVelocityContextProviderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultVelocityContextProviderState | undefined;
            resourceInputs["applicationTools"] = state ? state.applicationTools : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["excludedViews"] = state ? state.excludedViews : undefined;
            resourceInputs["extensionArguments"] = state ? state.extensionArguments : undefined;
            resourceInputs["extensionClass"] = state ? state.extensionClass : undefined;
            resourceInputs["httpMethods"] = state ? state.httpMethods : undefined;
            resourceInputs["httpServletExtensionName"] = state ? state.httpServletExtensionName : undefined;
            resourceInputs["includedViews"] = state ? state.includedViews : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["objectScope"] = state ? state.objectScope : undefined;
            resourceInputs["requestTools"] = state ? state.requestTools : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["responseHeaders"] = state ? state.responseHeaders : undefined;
            resourceInputs["sessionTools"] = state ? state.sessionTools : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DefaultVelocityContextProviderArgs | undefined;
            if ((!args || args.httpServletExtensionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'httpServletExtensionName'");
            }
            resourceInputs["applicationTools"] = args ? args.applicationTools : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["excludedViews"] = args ? args.excludedViews : undefined;
            resourceInputs["extensionArguments"] = args ? args.extensionArguments : undefined;
            resourceInputs["extensionClass"] = args ? args.extensionClass : undefined;
            resourceInputs["httpMethods"] = args ? args.httpMethods : undefined;
            resourceInputs["httpServletExtensionName"] = args ? args.httpServletExtensionName : undefined;
            resourceInputs["includedViews"] = args ? args.includedViews : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectScope"] = args ? args.objectScope : undefined;
            resourceInputs["requestTools"] = args ? args.requestTools : undefined;
            resourceInputs["responseHeaders"] = args ? args.responseHeaders : undefined;
            resourceInputs["sessionTools"] = args ? args.sessionTools : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultVelocityContextProvider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DefaultVelocityContextProvider resources.
 */
export interface DefaultVelocityContextProviderState {
    /**
     * The fully-qualified name of a Velocity Tool class that will be initialized once for the life of the server. May
     * optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon
     * (;). The path may absolute or relative to the server root.
     */
    applicationTools?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether this Velocity Context Provider is enabled. If set to 'false' this Velocity Context Provider will not
     * contribute context content for any requests.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of a view for which this Velocity Context Provider will not contribute content.
     */
    excludedViews?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Velocity Context Provider. Each configuration
     * property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Velocity Context Provider.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * Specifies the set of HTTP methods handled by this Velocity Context Provider, which will perform actions necessary to
     * fulfill the request before updating the context for the response. The values of this property are not case-sensitive.
     */
    httpMethods?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the parent HTTP Servlet Extension
     */
    httpServletExtensionName?: pulumi.Input<string>;
    /**
     * The name of a view for which this Velocity Context Provider will contribute content.
     */
    includedViews?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Scope for context objects contributed by this Velocity Context Provider. Must be either 'request' or 'session' or
     * 'application'.
     */
    objectScope?: pulumi.Input<string>;
    /**
     * The fully-qualified name of a Velocity Tool class that will be initialized for each request. May optionally include a
     * path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may
     * absolute or relative to the server root.
     */
    requestTools?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.DefaultVelocityContextProviderRequiredAction>[]>;
    /**
     * Specifies HTTP header fields and values added to response headers for template page requests to which this Velocity
     * Context Provider contributes content.
     */
    responseHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of a Velocity Tool class that will be initialized for each session. May optionally include a
     * path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may
     * absolute or relative to the server root.
     */
    sessionTools?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of Velocity Context Provider resource. Options are ['velocity-tools', 'custom', 'third-party']
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DefaultVelocityContextProvider resource.
 */
export interface DefaultVelocityContextProviderArgs {
    /**
     * The fully-qualified name of a Velocity Tool class that will be initialized once for the life of the server. May
     * optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon
     * (;). The path may absolute or relative to the server root.
     */
    applicationTools?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether this Velocity Context Provider is enabled. If set to 'false' this Velocity Context Provider will not
     * contribute context content for any requests.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of a view for which this Velocity Context Provider will not contribute content.
     */
    excludedViews?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Velocity Context Provider. Each configuration
     * property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Velocity Context Provider.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * Specifies the set of HTTP methods handled by this Velocity Context Provider, which will perform actions necessary to
     * fulfill the request before updating the context for the response. The values of this property are not case-sensitive.
     */
    httpMethods?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the parent HTTP Servlet Extension
     */
    httpServletExtensionName: pulumi.Input<string>;
    /**
     * The name of a view for which this Velocity Context Provider will contribute content.
     */
    includedViews?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Scope for context objects contributed by this Velocity Context Provider. Must be either 'request' or 'session' or
     * 'application'.
     */
    objectScope?: pulumi.Input<string>;
    /**
     * The fully-qualified name of a Velocity Tool class that will be initialized for each request. May optionally include a
     * path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may
     * absolute or relative to the server root.
     */
    requestTools?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies HTTP header fields and values added to response headers for template page requests to which this Velocity
     * Context Provider contributes content.
     */
    responseHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of a Velocity Tool class that will be initialized for each session. May optionally include a
     * path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may
     * absolute or relative to the server root.
     */
    sessionTools?: pulumi.Input<pulumi.Input<string>[]>;
}
