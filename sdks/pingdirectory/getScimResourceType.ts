// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getScimResourceType(args: GetScimResourceTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetScimResourceTypeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getScimResourceType:getScimResourceType", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getScimResourceType.
 */
export interface GetScimResourceTypeArgs {
    name: string;
}

/**
 * A collection of values returned by getScimResourceType.
 */
export interface GetScimResourceTypeResult {
    readonly auxiliaryLdapObjectclasses: string[];
    readonly coreSchema: string;
    readonly createDnPattern: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly endpoint: string;
    readonly id: string;
    readonly includeBaseDn: string;
    readonly includeFilters: string[];
    readonly includeOperationalAttributes: string[];
    readonly lookthroughLimit: number;
    readonly name: string;
    readonly optionalSchemaExtensions: string[];
    readonly requiredSchemaExtensions: string[];
    readonly schemaCheckingOptions: string[];
    readonly structuralLdapObjectclass: string;
    readonly type: string;
}
export function getScimResourceTypeOutput(args: GetScimResourceTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScimResourceTypeResult> {
    return pulumi.output(args).apply((a: any) => getScimResourceType(a, opts))
}

/**
 * A collection of arguments for invoking getScimResourceType.
 */
export interface GetScimResourceTypeOutputArgs {
    name: pulumi.Input<string>;
}
