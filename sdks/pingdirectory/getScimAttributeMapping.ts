// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getScimAttributeMapping(args: GetScimAttributeMappingArgs, opts?: pulumi.InvokeOptions): Promise<GetScimAttributeMappingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getScimAttributeMapping:getScimAttributeMapping", {
        "name": args.name,
        "scimResourceTypeName": args.scimResourceTypeName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getScimAttributeMapping.
 */
export interface GetScimAttributeMappingArgs {
    name: string;
    scimResourceTypeName: string;
}

/**
 * A collection of values returned by getScimAttributeMapping.
 */
export interface GetScimAttributeMappingResult {
    readonly authoritative: boolean;
    readonly correlatedLdapDataView: string;
    readonly id: string;
    readonly ldapAttribute: string;
    readonly name: string;
    readonly readable: boolean;
    readonly scimResourceTypeAttribute: string;
    readonly scimResourceTypeName: string;
    readonly searchable: boolean;
    readonly type: string;
    readonly writable: boolean;
}
export function getScimAttributeMappingOutput(args: GetScimAttributeMappingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScimAttributeMappingResult> {
    return pulumi.output(args).apply((a: any) => getScimAttributeMapping(a, opts))
}

/**
 * A collection of arguments for invoking getScimAttributeMapping.
 */
export interface GetScimAttributeMappingOutputArgs {
    name: pulumi.Input<string>;
    scimResourceTypeName: pulumi.Input<string>;
}
