// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getReplicationAssurancePolicy(args: GetReplicationAssurancePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetReplicationAssurancePolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getReplicationAssurancePolicy:getReplicationAssurancePolicy", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getReplicationAssurancePolicy.
 */
export interface GetReplicationAssurancePolicyArgs {
    name: string;
}

/**
 * A collection of values returned by getReplicationAssurancePolicy.
 */
export interface GetReplicationAssurancePolicyResult {
    readonly connectionCriteria: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly evaluationOrderIndex: number;
    readonly id: string;
    readonly localLevel: string;
    readonly name: string;
    readonly remoteLevel: string;
    readonly requestCriteria: string;
    readonly timeout: string;
    readonly type: string;
}
export function getReplicationAssurancePolicyOutput(args: GetReplicationAssurancePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReplicationAssurancePolicyResult> {
    return pulumi.output(args).apply((a: any) => getReplicationAssurancePolicy(a, opts))
}

/**
 * A collection of arguments for invoking getReplicationAssurancePolicy.
 */
export interface GetReplicationAssurancePolicyOutputArgs {
    name: pulumi.Input<string>;
}
