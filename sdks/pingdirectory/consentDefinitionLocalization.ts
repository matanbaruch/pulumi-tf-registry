// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ConsentDefinitionLocalization extends pulumi.CustomResource {
    /**
     * Get an existing ConsentDefinitionLocalization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConsentDefinitionLocalizationState, opts?: pulumi.CustomResourceOptions): ConsentDefinitionLocalization {
        return new ConsentDefinitionLocalization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/consentDefinitionLocalization:ConsentDefinitionLocalization';

    /**
     * Returns true if the given object is an instance of ConsentDefinitionLocalization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConsentDefinitionLocalization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConsentDefinitionLocalization.__pulumiType;
    }

    /**
     * Name of the parent Consent Definition
     */
    public readonly consentDefinitionName!: pulumi.Output<string>;
    /**
     * Localized text describing the data to be shared.
     */
    public readonly dataText!: pulumi.Output<string>;
    /**
     * The locale of this Consent Definition Localization.
     */
    public readonly locale!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * Localized text describing how the data is to be used.
     */
    public readonly purposeText!: pulumi.Output<string>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.ConsentDefinitionLocalizationRequiredAction[]>;
    /**
     * Localized text that may be used to provide a title or summary for a consent request or a granted consent.
     */
    public readonly titleText!: pulumi.Output<string | undefined>;
    /**
     * The type of Consent Definition Localization resource. Options are ['consent-definition-localization']
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The version of this Consent Definition Localization, using the format MAJOR.MINOR.
     */
    public readonly version!: pulumi.Output<string>;

    /**
     * Create a ConsentDefinitionLocalization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConsentDefinitionLocalizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConsentDefinitionLocalizationArgs | ConsentDefinitionLocalizationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConsentDefinitionLocalizationState | undefined;
            resourceInputs["consentDefinitionName"] = state ? state.consentDefinitionName : undefined;
            resourceInputs["dataText"] = state ? state.dataText : undefined;
            resourceInputs["locale"] = state ? state.locale : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["purposeText"] = state ? state.purposeText : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["titleText"] = state ? state.titleText : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ConsentDefinitionLocalizationArgs | undefined;
            if ((!args || args.consentDefinitionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'consentDefinitionName'");
            }
            if ((!args || args.dataText === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataText'");
            }
            if ((!args || args.locale === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locale'");
            }
            if ((!args || args.purposeText === undefined) && !opts.urn) {
                throw new Error("Missing required property 'purposeText'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["consentDefinitionName"] = args ? args.consentDefinitionName : undefined;
            resourceInputs["dataText"] = args ? args.dataText : undefined;
            resourceInputs["locale"] = args ? args.locale : undefined;
            resourceInputs["purposeText"] = args ? args.purposeText : undefined;
            resourceInputs["titleText"] = args ? args.titleText : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConsentDefinitionLocalization.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ConsentDefinitionLocalization resources.
 */
export interface ConsentDefinitionLocalizationState {
    /**
     * Name of the parent Consent Definition
     */
    consentDefinitionName?: pulumi.Input<string>;
    /**
     * Localized text describing the data to be shared.
     */
    dataText?: pulumi.Input<string>;
    /**
     * The locale of this Consent Definition Localization.
     */
    locale?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Localized text describing how the data is to be used.
     */
    purposeText?: pulumi.Input<string>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.ConsentDefinitionLocalizationRequiredAction>[]>;
    /**
     * Localized text that may be used to provide a title or summary for a consent request or a granted consent.
     */
    titleText?: pulumi.Input<string>;
    /**
     * The type of Consent Definition Localization resource. Options are ['consent-definition-localization']
     */
    type?: pulumi.Input<string>;
    /**
     * The version of this Consent Definition Localization, using the format MAJOR.MINOR.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ConsentDefinitionLocalization resource.
 */
export interface ConsentDefinitionLocalizationArgs {
    /**
     * Name of the parent Consent Definition
     */
    consentDefinitionName: pulumi.Input<string>;
    /**
     * Localized text describing the data to be shared.
     */
    dataText: pulumi.Input<string>;
    /**
     * The locale of this Consent Definition Localization.
     */
    locale: pulumi.Input<string>;
    /**
     * Localized text describing how the data is to be used.
     */
    purposeText: pulumi.Input<string>;
    /**
     * Localized text that may be used to provide a title or summary for a consent request or a granted consent.
     */
    titleText?: pulumi.Input<string>;
    /**
     * The type of Consent Definition Localization resource. Options are ['consent-definition-localization']
     */
    type?: pulumi.Input<string>;
    /**
     * The version of this Consent Definition Localization, using the format MAJOR.MINOR.
     */
    version: pulumi.Input<string>;
}
