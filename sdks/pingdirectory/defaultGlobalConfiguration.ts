// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DefaultGlobalConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing DefaultGlobalConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultGlobalConfigurationState, opts?: pulumi.CustomResourceOptions): DefaultGlobalConfiguration {
        return new DefaultGlobalConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/defaultGlobalConfiguration:DefaultGlobalConfiguration';

    /**
     * Returns true if the given object is an instance of DefaultGlobalConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultGlobalConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultGlobalConfiguration.__pulumiType;
    }

    /**
     * Indicates whether the Directory Server should allow underscores in attribute names and allow attribute names to begin
     * with numeric digits (both of which are violations of the LDAP standards).
     */
    public readonly allowAttributeNameExceptions!: pulumi.Output<boolean>;
    /**
     * Allow replication to be inherited by subordinate/child backends.
     */
    public readonly allowInheritedReplicationOfSubordinateBackends!: pulumi.Output<boolean>;
    /**
     * Indicates that processes attaching to this server's local JVM are allowed to access internal data through JMX without
     * the authentication requirements that remote JMX connections are subject to. Please review and understand the data that
     * this option will expose (such as cn=monitor) to client applications to ensure there are no security concerns.
     */
    public readonly allowInsecureLocalJmxConnections!: pulumi.Output<boolean>;
    /**
     * A set of criteria that may be used to match LDAP requests that may be permitted over an insecure connection even if
     * reject-insecure-requests is true. Note that some types of requests will always be permitted, including StartTLS and
     * start administrative session requests.
     */
    public readonly allowedInsecureRequestCriteria!: pulumi.Output<string>;
    /**
     * Specifies a set of TLS protocols that will be permitted for use in the server even though there may be known
     * vulnerabilities that could cause their use to be unsafe in some conditions. Enabling support for insecure TLS protocols
     * is discouraged, and is generally recommended only as a short-term measure to permit legacy clients to interact with the
     * server until they can be updated to support more secure communication protocols.
     */
    public readonly allowedInsecureTlsProtocols!: pulumi.Output<string[]>;
    /**
     * Specifies the fully-qualified name of a Java class that may be invoked in the server.
     */
    public readonly allowedTasks!: pulumi.Output<string[]>;
    /**
     * A set of criteria that may be used to match LDAP requests that may be permitted over an unauthenticated connection even
     * if reject-unauthenticated-requests is true. Note that some types of requests will always be permitted, including bind,
     * StartTLS, and start administrative session requests.
     */
    public readonly allowedUnauthenticatedRequestCriteria!: pulumi.Output<string>;
    /**
     * Specifies the operational attribute types that are defined in the schema with the NO-USER-MODIFICATION constraint that
     * the server will allow to be altered if the associated request contains the ignore NO-USER-MODIFICATION request control.
     */
    public readonly attributesModifiableWithIgnoreNoUserModificationRequestControls!: pulumi.Output<string[]>;
    /**
     * Connection criteria that may be used to identify clients whose add requests should use entryUUID as the naming
     * attribute.
     */
    public readonly autoNameWithEntryUuidConnectionCriteria!: pulumi.Output<string>;
    /**
     * Request criteria that may be used to identify add requests that should use entryUUID as the naming attribute.
     */
    public readonly autoNameWithEntryUuidRequestCriteria!: pulumi.Output<string>;
    /**
     * Indicates whether to automatically compress LDIF exports that are also encrypted.
     */
    public readonly automaticallyCompressEncryptedLdifExports!: pulumi.Output<boolean>;
    /**
     * Indicates whether the server should use a separate background thread for each persistent search.
     */
    public readonly backgroundThreadForEachPersistentSearch!: pulumi.Output<boolean>;
    /**
     * The unique identifier for the encryption settings definition to use to generate the encryption key for encrypted backups
     * by default.
     */
    public readonly backupEncryptionSettingsDefinitionId!: pulumi.Output<string>;
    /**
     * Indicates whether the Directory Server should reject any simple bind request that contains a DN but no password.
     */
    public readonly bindWithDnRequiresPassword!: pulumi.Output<boolean>;
    /**
     * When this property is set, changes made to this server using the console or dsconfig can be automatically applied to all
     * servers in the specified server group.
     */
    public readonly configurationServerGroup!: pulumi.Output<string>;
    /**
     * This setting provides data integrity options when the Directory Server is installed with a database on a network storage
     * device. A storage device may be accessed directly by a physical server, or indirectly through a virtual machine running
     * on a hypervisor. Enabling this setting will apply changes to all Local DB Backends, the LDAP Changelog Backend, and the
     * replication changelog database.
     */
    public readonly databaseOnVirtualizedOrNetworkStorage!: pulumi.Output<boolean>;
    /**
     * Specifies the client connection policy that will be used by default for internal operations.
     */
    public readonly defaultInternalOperationClientConnectionPolicy!: pulumi.Output<string>;
    /**
     * Specifies the name of the password policy that is in effect for users whose entries do not specify an alternate password
     * policy (either via a real or virtual attribute).
     */
    public readonly defaultPasswordPolicy!: pulumi.Output<string>;
    /**
     * Specifies the name of a privilege that should not be evaluated by the server.
     */
    public readonly disabledPrivileges!: pulumi.Output<string[]>;
    /**
     * Specifies the maximum number of duplicate alert messages that should be sent via the administrative alert framework in
     * the time window specified by the duplicate-alert-time-limit property.
     */
    public readonly duplicateAlertLimit!: pulumi.Output<number>;
    /**
     * Specifies the length of time that must expire before duplicate messages are sent via the administrative alert framework.
     */
    public readonly duplicateAlertTimeLimit!: pulumi.Output<string>;
    /**
     * Specifies the maximum number of duplicate error log messages that should be logged in the time window specified by the
     * duplicate-error-log-time-limit property.
     */
    public readonly duplicateErrorLogLimit!: pulumi.Output<number>;
    /**
     * Specifies the length of time that must expire before duplicate log messages above the duplicate-error-log-limit
     * threshold are logged again to the error log.
     */
    public readonly duplicateErrorLogTimeLimit!: pulumi.Output<string>;
    /**
     * Indicates whether the Directory Server should attempt to record information about the length of time required to process
     * various phases of an operation. Enabling this feature may impact performance, but could make it easier to identify
     * potential bottlenecks in operation processing.
     */
    public readonly enableSubOperationTimer!: pulumi.Output<boolean>;
    /**
     * Indicates whether the server should encrypt backups by default.
     */
    public readonly encryptBackupsByDefault!: pulumi.Output<boolean>;
    /**
     * Indicates whether the Directory Server should encrypt the data that it stores in all components that support it. This
     * may include certain types of backends (including local DB and large attribute backends), the LDAP changelog, and the
     * replication server database.
     */
    public readonly encryptData!: pulumi.Output<boolean>;
    /**
     * Indicates whether the server should encrypt LDIF exports by default.
     */
    public readonly encryptLdifExportsByDefault!: pulumi.Output<boolean>;
    /**
     * Specifies the cipher stream provider that should be used to protect the contents of the encryption settings database.
     */
    public readonly encryptionSettingsCipherStreamProvider!: pulumi.Output<string>;
    /**
     * Indicates whether the Directory Server should be shut down if a severe error is raised (e.g., an out of memory error)
     * which may prevent the JVM from continuing to run properly.
     */
    public readonly exitOnJvmError!: pulumi.Output<boolean>;
    /**
     * Indicates whether this server should be forced to assume the master role if no other suitable server is found to act as
     * master or if multiple masters are detected. A master is only needed when changes are made to mirrored data, i.e. data
     * specific to the topology itself and cluster-wide configuration data.
     */
    public readonly forceAsMasterForMirroredData!: pulumi.Output<boolean>;
    /**
     * Specifies the minimum length of time required for backend or request processor initialization that will trigger the
     * server to force an explicit garbage collection. A value of "0 seconds" indicates that the server should never invoke an
     * explicit garbage collection regardless of the length of time required to initialize the server backends.
     */
    public readonly forcedGcPrimeDuration!: pulumi.Output<string>;
    /**
     * Specifies the maximum length of time that a client connection may remain established since its last completed operation.
     */
    public readonly idleTimeLimit!: pulumi.Output<string>;
    /**
     * Specifies a name that may be used to uniquely identify this Directory Server instance among other instances in the
     * environment.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * Specifies how the Directory Server should handle operations whenever an attribute value violates the associated
     * attribute syntax.
     */
    public readonly invalidAttributeSyntaxBehavior!: pulumi.Output<string>;
    /**
     * When set to true, the server will use its original, non-standard JMX MBean names for the monitoring MBeans. These
     * include RDN keys of "Rdn1" and "Rdn2" instead of the recommended "type" and "name" keys. This should option should only
     * be enabled for installations that have monitoring infrastructure that depends on the old keys.
     */
    public readonly jmxUseLegacyMbeanNames!: pulumi.Output<boolean>;
    /**
     * Specifies how a Java type is chosen for monitor attributes exposed as JMX attribute values.
     */
    public readonly jmxValueBehavior!: pulumi.Output<string>;
    /**
     * Specifies the maximum number of entries that may be directly joined with any individual search result entry.
     */
    public readonly ldapJoinSizeLimit!: pulumi.Output<number>;
    /**
     * The unique identifier for the encryption settings definition to use to generate the encryption key for encrypted LDIF
     * exports by default.
     */
    public readonly ldifExportEncryptionSettingsDefinitionId!: pulumi.Output<string>;
    /**
     * Specifies the location for this Directory Server. Operations performed which involve communication with other servers
     * may prefer servers in the same location to help ensure low-latency responses.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Specifies the maximum number of entries that the Directory Server should "look through" in the course of processing a
     * search request.
     */
    public readonly lookthroughLimit!: pulumi.Output<number>;
    /**
     * The maximum length of time that a connection to an SMTP server should be considered valid.
     */
    public readonly maxSmtpConnectionAge!: pulumi.Output<string>;
    /**
     * The maximum number of SMTP connections that will be maintained for delivering email messages.
     */
    public readonly maxSmtpConnectionCount!: pulumi.Output<number>;
    /**
     * Specifies the maximum number of attributes that may be included in an add request. This property does not impose any
     * limit on the number of values that an attribute may have.
     */
    public readonly maximumAttributesPerAddRequest!: pulumi.Output<number>;
    /**
     * Specifies the maximum number of LDAP client connections which may be established to this Directory Server at the same
     * time.
     */
    public readonly maximumConcurrentConnections!: pulumi.Output<number>;
    /**
     * Specifies the maximum number of LDAP client connections which may be established to this Directory Server at the same
     * time and authenticated as the same user.
     */
    public readonly maximumConcurrentConnectionsPerBindDn!: pulumi.Output<number>;
    /**
     * Specifies the maximum number of LDAP client connections originating from the same IP address which may be established to
     * this Directory Server at the same time.
     */
    public readonly maximumConcurrentConnectionsPerIpAddress!: pulumi.Output<number>;
    /**
     * Specifies the maximum number of unindexed searches that may be in progress in this backend at any given time. Any
     * unindexed searches requested while the maximum number of unindexed searches are already being processed will be
     * rejected. A value of zero indicates that no limit will be enforced.
     */
    public readonly maximumConcurrentUnindexedSearches!: pulumi.Output<number>;
    /**
     * Specifies the maximum number of modifications that may be included in a modify request. This property does not impose
     * any limit on the number of attribute values that a modification may have.
     */
    public readonly maximumModificationsPerModifyRequest!: pulumi.Output<number>;
    /**
     * The maximum number of server.out log files (including the current active log file) that should be retained. When
     * rotating the log file, if the total number of files exceeds this count, then the oldest file(s) will be removed so that
     * the total number of log files is within this limit.
     */
    public readonly maximumServerOutLogFileCount!: pulumi.Output<number>;
    /**
     * The maximum allowed size that the server.out log file will be allowed to have. If a write would cause the file to exceed
     * this size, then the current file will be rotated out of place and a new empty file will be created and the message
     * written to it.
     */
    public readonly maximumServerOutLogFileSize!: pulumi.Output<string>;
    /**
     * Specifies the maximum amount of time the shutdown of Directory Server may take.
     */
    public readonly maximumShutdownTime!: pulumi.Output<string>;
    /**
     * Specifies the maximum number of password policies that are defined in the user data (that is, outside of the
     * configuration) that the server should cache in memory for faster access. A value of zero indicates that the server
     * should not cache any user data password policies.
     */
    public readonly maximumUserDataPasswordPoliciesToCache!: pulumi.Output<number>;
    /**
     * Specifies the length of time that the Directory Server should cache the IP addresses associated with the names of
     * systems with which it interacts.
     */
    public readonly networkAddressCacheTtl!: pulumi.Output<string>;
    /**
     * Specifies whether the Directory Server should cache the last valid IP addresses associated with the names of systems
     * with which it interacts with when the domain name service returns an unknown host exception. Java may return an unknown
     * host exception when there is unexpected interruption in domain name service so this setting protects the Directory
     * Server from temporary DNS server outages if previous results have been cached.
     */
    public readonly networkAddressOutageCacheEnabled!: pulumi.Output<boolean>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * Indicates whether the Directory Server should send a response to any operation that is interrupted via an abandon
     * request.
     */
    public readonly notifyAbandonedOperations!: pulumi.Output<boolean>;
    /**
     * Specifies a set of attribute types for which the server will permit values that do not conform to the associated
     * attribute syntax.
     */
    public readonly permitSyntaxViolationsForAttributes!: pulumi.Output<string[]>;
    /**
     * Specifies the name of the identity mapper to map authorization ID values (using the "u:" form) provided in the proxied
     * authorization control to the corresponding user entry.
     */
    public readonly proxiedAuthorizationIdentityMapper!: pulumi.Output<string>;
    /**
     * Indicates whether the values of sensitive configuration properties should be redacted when logging configuration
     * changes, including in the configuration audit log, the error log, and the server.out log file.
     */
    public readonly redactSensitiveValuesInConfigLogs!: pulumi.Output<boolean>;
    /**
     * Indicates whether the Directory Server should reject any LDAP request (other than StartTLS) received from a client that
     * is not using an encrypted connection.
     */
    public readonly rejectInsecureRequests!: pulumi.Output<boolean>;
    /**
     * Indicates whether the Directory Server should reject any LDAP request (other than bind or StartTLS requests) received
     * from a client that has not yet been authenticated, whose last authentication attempt was unsuccessful, or whose last
     * authentication attempt used anonymous authentication.
     */
    public readonly rejectUnauthenticatedRequests!: pulumi.Output<boolean>;
    /**
     * The maximum number of replication backlog updates a replication assurance source (i.e. a peer Directory Server) can have
     * and be immediately recognized as an available assurance source by this Directory Server.
     */
    public readonly replicationAssuranceSourceBacklogFastStartThreshold!: pulumi.Output<number>;
    /**
     * The amount of time a replication assurance source (i.e. a peer Directory Server) will be suspended from assurance
     * requirements on this Directory Server if it experiences an assurance timeout.
     */
    public readonly replicationAssuranceSourceTimeoutSuspendDuration!: pulumi.Output<string>;
    /**
     * An alert is sent when the number of outstanding replication changes for the Directory Server has exceeded this threshold
     * for longer than the replication backlog duration alert threshold.
     */
    public readonly replicationBacklogCountAlertThreshold!: pulumi.Output<number>;
    /**
     * An alert is sent when the number of outstanding replication changes for the Directory Server has exceeded the
     * replication backlog count alert threshold for longer than this duration.
     */
    public readonly replicationBacklogDurationAlertThreshold!: pulumi.Output<string>;
    /**
     * Specifies the size limit for historical information.
     */
    public readonly replicationHistoryLimit!: pulumi.Output<number>;
    /**
     * Indicates whether state about obsolete replicas is automatically purged.
     */
    public readonly replicationPurgeObsoleteReplicas!: pulumi.Output<boolean>;
    /**
     * The name of the replication set assigned to this Directory Server. Restricted domains are only replicated within
     * instances using the same replication set name.
     */
    public readonly replicationSetName!: pulumi.Output<string>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.DefaultGlobalConfigurationRequiredAction[]>;
    /**
     * Specifies a result code map that should be used for clients that do not have a map associated with their client
     * connection policy. If the associated client connection policy has a result code map, then that map will be used instead.
     * If no map is associated either with the client connection policy or the global configuration, then an internal default
     * will be used.
     */
    public readonly resultCodeMap!: pulumi.Output<string>;
    /**
     * Indicates whether responses for failed bind operations should include a message string providing the reason for the
     * authentication failure.
     */
    public readonly returnBindErrorMessages!: pulumi.Output<boolean>;
    /**
     * Provides the ability to indicate that some attributes should be considered sensitive and additional protection should be
     * in place when interacting with those attributes.
     */
    public readonly sensitiveAttributes!: pulumi.Output<string[]>;
    /**
     * Specifies the numeric value of the result code when request processing fails due to an internal server error.
     */
    public readonly serverErrorResultCode!: pulumi.Output<number>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. Specifies the percentage of the JVM memory to allocate to the
     * database cache that is shared across all local DB backends.
     */
    public readonly sharedLocalDbBackendDatabaseCachePercent!: pulumi.Output<number>;
    /**
     * Specifies how the Directory Server should handle operations for an entry does not contain a structural object class, or
     * for an entry that contains multiple structural classes.
     */
    public readonly singleStructuralObjectclassBehavior!: pulumi.Output<string>;
    /**
     * Specifies the maximum number of entries that the Directory Server should return to clients by default when processing a
     * search operation.
     */
    public readonly sizeLimit!: pulumi.Output<number>;
    /**
     * The length of time between checks to ensure that available SMTP connections are still valid.
     */
    public readonly smtpConnectionHealthCheckInterval!: pulumi.Output<string>;
    /**
     * Specifies the set of servers that will be used to send email messages. The order in which the servers are listed
     * indicates the order in which the Directory Server will attempt to use them in the course of sending a message. The first
     * attempt will always go to the server at the top of the list, and servers further down the list will only be used if none
     * of the servers listed above it were able to successfully send the message.
     */
    public readonly smtpServers!: pulumi.Output<string[]>;
    /**
     * Specifies the soft delete policy that will be used by default for delete operations. Soft delete operations introduce
     * the ability to control the server behavior of the delete operation. Instead of performing a permanent delete of an
     * entry, deleted entries can be retained as soft deleted entries by their entryUUID values and are available for undelete
     * at a later time. In addition to a soft delete policy enabling soft deletes, delete operations sent to the server must
     * have the soft delete request control present with sufficient access privileges to access the soft delete request
     * control.
     */
    public readonly softDeletePolicy!: pulumi.Output<string>;
    /**
     * Specifies how the server should handle error log messages (which may include errors, warnings, and notices) generated
     * during startup. All of these messages will be written to all configured error loggers, but they may also be written to
     * other locations (like standard output, standard error, or the server.out log file) so that they are displayed on the
     * console when the server is starting.
     */
    public readonly startupErrorLoggerOutputLocation!: pulumi.Output<string>;
    /**
     * The number of outstanding changes any replica can have before the Directory Server will start accepting connections. The
     * Directory Server may never accept connections if this setting is too low. If you are unsure which value to use, you can
     * use the number of expected updates within a five second interval.
     */
    public readonly startupMinReplicationBacklogCount!: pulumi.Output<number>;
    /**
     * Specifies the length of time that a subtree may remain hidden or read-only before an administrative alert is sent.
     */
    public readonly subtreeAccessibilityAlertTimeLimit!: pulumi.Output<string>;
    /**
     * Specifies the maximum length of time that the Directory Server should be allowed to spend processing a search operation.
     */
    public readonly timeLimit!: pulumi.Output<string>;
    /**
     * Specifies criteria for identifying specific applications that access the server to enable tracking throughput and
     * latency of LDAP operations issued by an application.
     */
    public readonly trackedApplications!: pulumi.Output<string[]>;
    /**
     * The type of Global Configuration resource. Options are ['global-configuration']
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. The idle-time-limit limit value that will apply for connections
     * from unauthenticated clients. If this is not specified, then the value of the idle-time-limit property will be applied
     * for both authenticated and unauthenticated connections.
     */
    public readonly unauthenticatedIdleTimeLimit!: pulumi.Output<string>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. The lookthrough limit value that will apply for connections from
     * unauthenticated clients. If this is not specified, then the value of the lookthrough-limit property will be applied for
     * both authenticated and unauthenticated connections.
     */
    public readonly unauthenticatedLookthroughLimit!: pulumi.Output<number>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. The size limit value that will apply for connections from
     * unauthenticated clients. If this is not specified, then the value of the size-limit property will be applied for both
     * authenticated and unauthenticated connections.
     */
    public readonly unauthenticatedSizeLimit!: pulumi.Output<number>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. The time limit value that will apply for connections from
     * unauthenticated clients. If this is not specified, then the value of the time-limit property will be applied for both
     * authenticated and unauthenticated connections.
     */
    public readonly unauthenticatedTimeLimit!: pulumi.Output<string>;
    /**
     * Specifies the action which should be taken for any database that experiences an unrecoverable error. Action applies to
     * local database backends and the replication recent changes database.
     */
    public readonly unrecoverableDatabaseErrorMode!: pulumi.Output<string>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. Indicates whether the server should use a common database cache
     * that is shared across all local DB backends instead of maintaining a separate cache for each backend.
     */
    public readonly useSharedDatabaseCacheAcrossAllLocalDbBackends!: pulumi.Output<boolean>;
    /**
     * Indicates whether the digest should always be verified whenever an entry containing a digest is decoded. If this is
     * "true", then if a digest exists, it will always be verified. Otherwise, the digest will be written when encoding entries
     * but ignored when decoding entries but may still be available for other verification processing.
     */
    public readonly verifyEntryDigests!: pulumi.Output<boolean>;
    /**
     * Indicates whether the server should issue a warning when enabling a backend that contains multiple base DNs.
     */
    public readonly warnForBackendsWithMultipleBaseDns!: pulumi.Output<boolean>;
    /**
     * Specifies the kinds of write operations the Directory Server can process.
     */
    public readonly writabilityMode!: pulumi.Output<string>;

    /**
     * Create a DefaultGlobalConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DefaultGlobalConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultGlobalConfigurationArgs | DefaultGlobalConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultGlobalConfigurationState | undefined;
            resourceInputs["allowAttributeNameExceptions"] = state ? state.allowAttributeNameExceptions : undefined;
            resourceInputs["allowInheritedReplicationOfSubordinateBackends"] = state ? state.allowInheritedReplicationOfSubordinateBackends : undefined;
            resourceInputs["allowInsecureLocalJmxConnections"] = state ? state.allowInsecureLocalJmxConnections : undefined;
            resourceInputs["allowedInsecureRequestCriteria"] = state ? state.allowedInsecureRequestCriteria : undefined;
            resourceInputs["allowedInsecureTlsProtocols"] = state ? state.allowedInsecureTlsProtocols : undefined;
            resourceInputs["allowedTasks"] = state ? state.allowedTasks : undefined;
            resourceInputs["allowedUnauthenticatedRequestCriteria"] = state ? state.allowedUnauthenticatedRequestCriteria : undefined;
            resourceInputs["attributesModifiableWithIgnoreNoUserModificationRequestControls"] = state ? state.attributesModifiableWithIgnoreNoUserModificationRequestControls : undefined;
            resourceInputs["autoNameWithEntryUuidConnectionCriteria"] = state ? state.autoNameWithEntryUuidConnectionCriteria : undefined;
            resourceInputs["autoNameWithEntryUuidRequestCriteria"] = state ? state.autoNameWithEntryUuidRequestCriteria : undefined;
            resourceInputs["automaticallyCompressEncryptedLdifExports"] = state ? state.automaticallyCompressEncryptedLdifExports : undefined;
            resourceInputs["backgroundThreadForEachPersistentSearch"] = state ? state.backgroundThreadForEachPersistentSearch : undefined;
            resourceInputs["backupEncryptionSettingsDefinitionId"] = state ? state.backupEncryptionSettingsDefinitionId : undefined;
            resourceInputs["bindWithDnRequiresPassword"] = state ? state.bindWithDnRequiresPassword : undefined;
            resourceInputs["configurationServerGroup"] = state ? state.configurationServerGroup : undefined;
            resourceInputs["databaseOnVirtualizedOrNetworkStorage"] = state ? state.databaseOnVirtualizedOrNetworkStorage : undefined;
            resourceInputs["defaultInternalOperationClientConnectionPolicy"] = state ? state.defaultInternalOperationClientConnectionPolicy : undefined;
            resourceInputs["defaultPasswordPolicy"] = state ? state.defaultPasswordPolicy : undefined;
            resourceInputs["disabledPrivileges"] = state ? state.disabledPrivileges : undefined;
            resourceInputs["duplicateAlertLimit"] = state ? state.duplicateAlertLimit : undefined;
            resourceInputs["duplicateAlertTimeLimit"] = state ? state.duplicateAlertTimeLimit : undefined;
            resourceInputs["duplicateErrorLogLimit"] = state ? state.duplicateErrorLogLimit : undefined;
            resourceInputs["duplicateErrorLogTimeLimit"] = state ? state.duplicateErrorLogTimeLimit : undefined;
            resourceInputs["enableSubOperationTimer"] = state ? state.enableSubOperationTimer : undefined;
            resourceInputs["encryptBackupsByDefault"] = state ? state.encryptBackupsByDefault : undefined;
            resourceInputs["encryptData"] = state ? state.encryptData : undefined;
            resourceInputs["encryptLdifExportsByDefault"] = state ? state.encryptLdifExportsByDefault : undefined;
            resourceInputs["encryptionSettingsCipherStreamProvider"] = state ? state.encryptionSettingsCipherStreamProvider : undefined;
            resourceInputs["exitOnJvmError"] = state ? state.exitOnJvmError : undefined;
            resourceInputs["forceAsMasterForMirroredData"] = state ? state.forceAsMasterForMirroredData : undefined;
            resourceInputs["forcedGcPrimeDuration"] = state ? state.forcedGcPrimeDuration : undefined;
            resourceInputs["idleTimeLimit"] = state ? state.idleTimeLimit : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["invalidAttributeSyntaxBehavior"] = state ? state.invalidAttributeSyntaxBehavior : undefined;
            resourceInputs["jmxUseLegacyMbeanNames"] = state ? state.jmxUseLegacyMbeanNames : undefined;
            resourceInputs["jmxValueBehavior"] = state ? state.jmxValueBehavior : undefined;
            resourceInputs["ldapJoinSizeLimit"] = state ? state.ldapJoinSizeLimit : undefined;
            resourceInputs["ldifExportEncryptionSettingsDefinitionId"] = state ? state.ldifExportEncryptionSettingsDefinitionId : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["lookthroughLimit"] = state ? state.lookthroughLimit : undefined;
            resourceInputs["maxSmtpConnectionAge"] = state ? state.maxSmtpConnectionAge : undefined;
            resourceInputs["maxSmtpConnectionCount"] = state ? state.maxSmtpConnectionCount : undefined;
            resourceInputs["maximumAttributesPerAddRequest"] = state ? state.maximumAttributesPerAddRequest : undefined;
            resourceInputs["maximumConcurrentConnections"] = state ? state.maximumConcurrentConnections : undefined;
            resourceInputs["maximumConcurrentConnectionsPerBindDn"] = state ? state.maximumConcurrentConnectionsPerBindDn : undefined;
            resourceInputs["maximumConcurrentConnectionsPerIpAddress"] = state ? state.maximumConcurrentConnectionsPerIpAddress : undefined;
            resourceInputs["maximumConcurrentUnindexedSearches"] = state ? state.maximumConcurrentUnindexedSearches : undefined;
            resourceInputs["maximumModificationsPerModifyRequest"] = state ? state.maximumModificationsPerModifyRequest : undefined;
            resourceInputs["maximumServerOutLogFileCount"] = state ? state.maximumServerOutLogFileCount : undefined;
            resourceInputs["maximumServerOutLogFileSize"] = state ? state.maximumServerOutLogFileSize : undefined;
            resourceInputs["maximumShutdownTime"] = state ? state.maximumShutdownTime : undefined;
            resourceInputs["maximumUserDataPasswordPoliciesToCache"] = state ? state.maximumUserDataPasswordPoliciesToCache : undefined;
            resourceInputs["networkAddressCacheTtl"] = state ? state.networkAddressCacheTtl : undefined;
            resourceInputs["networkAddressOutageCacheEnabled"] = state ? state.networkAddressOutageCacheEnabled : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["notifyAbandonedOperations"] = state ? state.notifyAbandonedOperations : undefined;
            resourceInputs["permitSyntaxViolationsForAttributes"] = state ? state.permitSyntaxViolationsForAttributes : undefined;
            resourceInputs["proxiedAuthorizationIdentityMapper"] = state ? state.proxiedAuthorizationIdentityMapper : undefined;
            resourceInputs["redactSensitiveValuesInConfigLogs"] = state ? state.redactSensitiveValuesInConfigLogs : undefined;
            resourceInputs["rejectInsecureRequests"] = state ? state.rejectInsecureRequests : undefined;
            resourceInputs["rejectUnauthenticatedRequests"] = state ? state.rejectUnauthenticatedRequests : undefined;
            resourceInputs["replicationAssuranceSourceBacklogFastStartThreshold"] = state ? state.replicationAssuranceSourceBacklogFastStartThreshold : undefined;
            resourceInputs["replicationAssuranceSourceTimeoutSuspendDuration"] = state ? state.replicationAssuranceSourceTimeoutSuspendDuration : undefined;
            resourceInputs["replicationBacklogCountAlertThreshold"] = state ? state.replicationBacklogCountAlertThreshold : undefined;
            resourceInputs["replicationBacklogDurationAlertThreshold"] = state ? state.replicationBacklogDurationAlertThreshold : undefined;
            resourceInputs["replicationHistoryLimit"] = state ? state.replicationHistoryLimit : undefined;
            resourceInputs["replicationPurgeObsoleteReplicas"] = state ? state.replicationPurgeObsoleteReplicas : undefined;
            resourceInputs["replicationSetName"] = state ? state.replicationSetName : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["resultCodeMap"] = state ? state.resultCodeMap : undefined;
            resourceInputs["returnBindErrorMessages"] = state ? state.returnBindErrorMessages : undefined;
            resourceInputs["sensitiveAttributes"] = state ? state.sensitiveAttributes : undefined;
            resourceInputs["serverErrorResultCode"] = state ? state.serverErrorResultCode : undefined;
            resourceInputs["sharedLocalDbBackendDatabaseCachePercent"] = state ? state.sharedLocalDbBackendDatabaseCachePercent : undefined;
            resourceInputs["singleStructuralObjectclassBehavior"] = state ? state.singleStructuralObjectclassBehavior : undefined;
            resourceInputs["sizeLimit"] = state ? state.sizeLimit : undefined;
            resourceInputs["smtpConnectionHealthCheckInterval"] = state ? state.smtpConnectionHealthCheckInterval : undefined;
            resourceInputs["smtpServers"] = state ? state.smtpServers : undefined;
            resourceInputs["softDeletePolicy"] = state ? state.softDeletePolicy : undefined;
            resourceInputs["startupErrorLoggerOutputLocation"] = state ? state.startupErrorLoggerOutputLocation : undefined;
            resourceInputs["startupMinReplicationBacklogCount"] = state ? state.startupMinReplicationBacklogCount : undefined;
            resourceInputs["subtreeAccessibilityAlertTimeLimit"] = state ? state.subtreeAccessibilityAlertTimeLimit : undefined;
            resourceInputs["timeLimit"] = state ? state.timeLimit : undefined;
            resourceInputs["trackedApplications"] = state ? state.trackedApplications : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["unauthenticatedIdleTimeLimit"] = state ? state.unauthenticatedIdleTimeLimit : undefined;
            resourceInputs["unauthenticatedLookthroughLimit"] = state ? state.unauthenticatedLookthroughLimit : undefined;
            resourceInputs["unauthenticatedSizeLimit"] = state ? state.unauthenticatedSizeLimit : undefined;
            resourceInputs["unauthenticatedTimeLimit"] = state ? state.unauthenticatedTimeLimit : undefined;
            resourceInputs["unrecoverableDatabaseErrorMode"] = state ? state.unrecoverableDatabaseErrorMode : undefined;
            resourceInputs["useSharedDatabaseCacheAcrossAllLocalDbBackends"] = state ? state.useSharedDatabaseCacheAcrossAllLocalDbBackends : undefined;
            resourceInputs["verifyEntryDigests"] = state ? state.verifyEntryDigests : undefined;
            resourceInputs["warnForBackendsWithMultipleBaseDns"] = state ? state.warnForBackendsWithMultipleBaseDns : undefined;
            resourceInputs["writabilityMode"] = state ? state.writabilityMode : undefined;
        } else {
            const args = argsOrState as DefaultGlobalConfigurationArgs | undefined;
            resourceInputs["allowAttributeNameExceptions"] = args ? args.allowAttributeNameExceptions : undefined;
            resourceInputs["allowInheritedReplicationOfSubordinateBackends"] = args ? args.allowInheritedReplicationOfSubordinateBackends : undefined;
            resourceInputs["allowInsecureLocalJmxConnections"] = args ? args.allowInsecureLocalJmxConnections : undefined;
            resourceInputs["allowedInsecureRequestCriteria"] = args ? args.allowedInsecureRequestCriteria : undefined;
            resourceInputs["allowedInsecureTlsProtocols"] = args ? args.allowedInsecureTlsProtocols : undefined;
            resourceInputs["allowedTasks"] = args ? args.allowedTasks : undefined;
            resourceInputs["allowedUnauthenticatedRequestCriteria"] = args ? args.allowedUnauthenticatedRequestCriteria : undefined;
            resourceInputs["attributesModifiableWithIgnoreNoUserModificationRequestControls"] = args ? args.attributesModifiableWithIgnoreNoUserModificationRequestControls : undefined;
            resourceInputs["autoNameWithEntryUuidConnectionCriteria"] = args ? args.autoNameWithEntryUuidConnectionCriteria : undefined;
            resourceInputs["autoNameWithEntryUuidRequestCriteria"] = args ? args.autoNameWithEntryUuidRequestCriteria : undefined;
            resourceInputs["automaticallyCompressEncryptedLdifExports"] = args ? args.automaticallyCompressEncryptedLdifExports : undefined;
            resourceInputs["backgroundThreadForEachPersistentSearch"] = args ? args.backgroundThreadForEachPersistentSearch : undefined;
            resourceInputs["backupEncryptionSettingsDefinitionId"] = args ? args.backupEncryptionSettingsDefinitionId : undefined;
            resourceInputs["bindWithDnRequiresPassword"] = args ? args.bindWithDnRequiresPassword : undefined;
            resourceInputs["configurationServerGroup"] = args ? args.configurationServerGroup : undefined;
            resourceInputs["databaseOnVirtualizedOrNetworkStorage"] = args ? args.databaseOnVirtualizedOrNetworkStorage : undefined;
            resourceInputs["defaultInternalOperationClientConnectionPolicy"] = args ? args.defaultInternalOperationClientConnectionPolicy : undefined;
            resourceInputs["defaultPasswordPolicy"] = args ? args.defaultPasswordPolicy : undefined;
            resourceInputs["disabledPrivileges"] = args ? args.disabledPrivileges : undefined;
            resourceInputs["duplicateAlertLimit"] = args ? args.duplicateAlertLimit : undefined;
            resourceInputs["duplicateAlertTimeLimit"] = args ? args.duplicateAlertTimeLimit : undefined;
            resourceInputs["duplicateErrorLogLimit"] = args ? args.duplicateErrorLogLimit : undefined;
            resourceInputs["duplicateErrorLogTimeLimit"] = args ? args.duplicateErrorLogTimeLimit : undefined;
            resourceInputs["enableSubOperationTimer"] = args ? args.enableSubOperationTimer : undefined;
            resourceInputs["encryptBackupsByDefault"] = args ? args.encryptBackupsByDefault : undefined;
            resourceInputs["encryptData"] = args ? args.encryptData : undefined;
            resourceInputs["encryptLdifExportsByDefault"] = args ? args.encryptLdifExportsByDefault : undefined;
            resourceInputs["encryptionSettingsCipherStreamProvider"] = args ? args.encryptionSettingsCipherStreamProvider : undefined;
            resourceInputs["exitOnJvmError"] = args ? args.exitOnJvmError : undefined;
            resourceInputs["forceAsMasterForMirroredData"] = args ? args.forceAsMasterForMirroredData : undefined;
            resourceInputs["forcedGcPrimeDuration"] = args ? args.forcedGcPrimeDuration : undefined;
            resourceInputs["idleTimeLimit"] = args ? args.idleTimeLimit : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["invalidAttributeSyntaxBehavior"] = args ? args.invalidAttributeSyntaxBehavior : undefined;
            resourceInputs["jmxUseLegacyMbeanNames"] = args ? args.jmxUseLegacyMbeanNames : undefined;
            resourceInputs["jmxValueBehavior"] = args ? args.jmxValueBehavior : undefined;
            resourceInputs["ldapJoinSizeLimit"] = args ? args.ldapJoinSizeLimit : undefined;
            resourceInputs["ldifExportEncryptionSettingsDefinitionId"] = args ? args.ldifExportEncryptionSettingsDefinitionId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["lookthroughLimit"] = args ? args.lookthroughLimit : undefined;
            resourceInputs["maxSmtpConnectionAge"] = args ? args.maxSmtpConnectionAge : undefined;
            resourceInputs["maxSmtpConnectionCount"] = args ? args.maxSmtpConnectionCount : undefined;
            resourceInputs["maximumAttributesPerAddRequest"] = args ? args.maximumAttributesPerAddRequest : undefined;
            resourceInputs["maximumConcurrentConnections"] = args ? args.maximumConcurrentConnections : undefined;
            resourceInputs["maximumConcurrentConnectionsPerBindDn"] = args ? args.maximumConcurrentConnectionsPerBindDn : undefined;
            resourceInputs["maximumConcurrentConnectionsPerIpAddress"] = args ? args.maximumConcurrentConnectionsPerIpAddress : undefined;
            resourceInputs["maximumConcurrentUnindexedSearches"] = args ? args.maximumConcurrentUnindexedSearches : undefined;
            resourceInputs["maximumModificationsPerModifyRequest"] = args ? args.maximumModificationsPerModifyRequest : undefined;
            resourceInputs["maximumServerOutLogFileCount"] = args ? args.maximumServerOutLogFileCount : undefined;
            resourceInputs["maximumServerOutLogFileSize"] = args ? args.maximumServerOutLogFileSize : undefined;
            resourceInputs["maximumShutdownTime"] = args ? args.maximumShutdownTime : undefined;
            resourceInputs["maximumUserDataPasswordPoliciesToCache"] = args ? args.maximumUserDataPasswordPoliciesToCache : undefined;
            resourceInputs["networkAddressCacheTtl"] = args ? args.networkAddressCacheTtl : undefined;
            resourceInputs["networkAddressOutageCacheEnabled"] = args ? args.networkAddressOutageCacheEnabled : undefined;
            resourceInputs["notifyAbandonedOperations"] = args ? args.notifyAbandonedOperations : undefined;
            resourceInputs["permitSyntaxViolationsForAttributes"] = args ? args.permitSyntaxViolationsForAttributes : undefined;
            resourceInputs["proxiedAuthorizationIdentityMapper"] = args ? args.proxiedAuthorizationIdentityMapper : undefined;
            resourceInputs["redactSensitiveValuesInConfigLogs"] = args ? args.redactSensitiveValuesInConfigLogs : undefined;
            resourceInputs["rejectInsecureRequests"] = args ? args.rejectInsecureRequests : undefined;
            resourceInputs["rejectUnauthenticatedRequests"] = args ? args.rejectUnauthenticatedRequests : undefined;
            resourceInputs["replicationAssuranceSourceBacklogFastStartThreshold"] = args ? args.replicationAssuranceSourceBacklogFastStartThreshold : undefined;
            resourceInputs["replicationAssuranceSourceTimeoutSuspendDuration"] = args ? args.replicationAssuranceSourceTimeoutSuspendDuration : undefined;
            resourceInputs["replicationBacklogCountAlertThreshold"] = args ? args.replicationBacklogCountAlertThreshold : undefined;
            resourceInputs["replicationBacklogDurationAlertThreshold"] = args ? args.replicationBacklogDurationAlertThreshold : undefined;
            resourceInputs["replicationHistoryLimit"] = args ? args.replicationHistoryLimit : undefined;
            resourceInputs["replicationPurgeObsoleteReplicas"] = args ? args.replicationPurgeObsoleteReplicas : undefined;
            resourceInputs["replicationSetName"] = args ? args.replicationSetName : undefined;
            resourceInputs["resultCodeMap"] = args ? args.resultCodeMap : undefined;
            resourceInputs["returnBindErrorMessages"] = args ? args.returnBindErrorMessages : undefined;
            resourceInputs["sensitiveAttributes"] = args ? args.sensitiveAttributes : undefined;
            resourceInputs["serverErrorResultCode"] = args ? args.serverErrorResultCode : undefined;
            resourceInputs["sharedLocalDbBackendDatabaseCachePercent"] = args ? args.sharedLocalDbBackendDatabaseCachePercent : undefined;
            resourceInputs["singleStructuralObjectclassBehavior"] = args ? args.singleStructuralObjectclassBehavior : undefined;
            resourceInputs["sizeLimit"] = args ? args.sizeLimit : undefined;
            resourceInputs["smtpConnectionHealthCheckInterval"] = args ? args.smtpConnectionHealthCheckInterval : undefined;
            resourceInputs["smtpServers"] = args ? args.smtpServers : undefined;
            resourceInputs["softDeletePolicy"] = args ? args.softDeletePolicy : undefined;
            resourceInputs["startupErrorLoggerOutputLocation"] = args ? args.startupErrorLoggerOutputLocation : undefined;
            resourceInputs["startupMinReplicationBacklogCount"] = args ? args.startupMinReplicationBacklogCount : undefined;
            resourceInputs["subtreeAccessibilityAlertTimeLimit"] = args ? args.subtreeAccessibilityAlertTimeLimit : undefined;
            resourceInputs["timeLimit"] = args ? args.timeLimit : undefined;
            resourceInputs["trackedApplications"] = args ? args.trackedApplications : undefined;
            resourceInputs["unauthenticatedIdleTimeLimit"] = args ? args.unauthenticatedIdleTimeLimit : undefined;
            resourceInputs["unauthenticatedLookthroughLimit"] = args ? args.unauthenticatedLookthroughLimit : undefined;
            resourceInputs["unauthenticatedSizeLimit"] = args ? args.unauthenticatedSizeLimit : undefined;
            resourceInputs["unauthenticatedTimeLimit"] = args ? args.unauthenticatedTimeLimit : undefined;
            resourceInputs["unrecoverableDatabaseErrorMode"] = args ? args.unrecoverableDatabaseErrorMode : undefined;
            resourceInputs["useSharedDatabaseCacheAcrossAllLocalDbBackends"] = args ? args.useSharedDatabaseCacheAcrossAllLocalDbBackends : undefined;
            resourceInputs["verifyEntryDigests"] = args ? args.verifyEntryDigests : undefined;
            resourceInputs["warnForBackendsWithMultipleBaseDns"] = args ? args.warnForBackendsWithMultipleBaseDns : undefined;
            resourceInputs["writabilityMode"] = args ? args.writabilityMode : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultGlobalConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DefaultGlobalConfiguration resources.
 */
export interface DefaultGlobalConfigurationState {
    /**
     * Indicates whether the Directory Server should allow underscores in attribute names and allow attribute names to begin
     * with numeric digits (both of which are violations of the LDAP standards).
     */
    allowAttributeNameExceptions?: pulumi.Input<boolean>;
    /**
     * Allow replication to be inherited by subordinate/child backends.
     */
    allowInheritedReplicationOfSubordinateBackends?: pulumi.Input<boolean>;
    /**
     * Indicates that processes attaching to this server's local JVM are allowed to access internal data through JMX without
     * the authentication requirements that remote JMX connections are subject to. Please review and understand the data that
     * this option will expose (such as cn=monitor) to client applications to ensure there are no security concerns.
     */
    allowInsecureLocalJmxConnections?: pulumi.Input<boolean>;
    /**
     * A set of criteria that may be used to match LDAP requests that may be permitted over an insecure connection even if
     * reject-insecure-requests is true. Note that some types of requests will always be permitted, including StartTLS and
     * start administrative session requests.
     */
    allowedInsecureRequestCriteria?: pulumi.Input<string>;
    /**
     * Specifies a set of TLS protocols that will be permitted for use in the server even though there may be known
     * vulnerabilities that could cause their use to be unsafe in some conditions. Enabling support for insecure TLS protocols
     * is discouraged, and is generally recommended only as a short-term measure to permit legacy clients to interact with the
     * server until they can be updated to support more secure communication protocols.
     */
    allowedInsecureTlsProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the fully-qualified name of a Java class that may be invoked in the server.
     */
    allowedTasks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of criteria that may be used to match LDAP requests that may be permitted over an unauthenticated connection even
     * if reject-unauthenticated-requests is true. Note that some types of requests will always be permitted, including bind,
     * StartTLS, and start administrative session requests.
     */
    allowedUnauthenticatedRequestCriteria?: pulumi.Input<string>;
    /**
     * Specifies the operational attribute types that are defined in the schema with the NO-USER-MODIFICATION constraint that
     * the server will allow to be altered if the associated request contains the ignore NO-USER-MODIFICATION request control.
     */
    attributesModifiableWithIgnoreNoUserModificationRequestControls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Connection criteria that may be used to identify clients whose add requests should use entryUUID as the naming
     * attribute.
     */
    autoNameWithEntryUuidConnectionCriteria?: pulumi.Input<string>;
    /**
     * Request criteria that may be used to identify add requests that should use entryUUID as the naming attribute.
     */
    autoNameWithEntryUuidRequestCriteria?: pulumi.Input<string>;
    /**
     * Indicates whether to automatically compress LDIF exports that are also encrypted.
     */
    automaticallyCompressEncryptedLdifExports?: pulumi.Input<boolean>;
    /**
     * Indicates whether the server should use a separate background thread for each persistent search.
     */
    backgroundThreadForEachPersistentSearch?: pulumi.Input<boolean>;
    /**
     * The unique identifier for the encryption settings definition to use to generate the encryption key for encrypted backups
     * by default.
     */
    backupEncryptionSettingsDefinitionId?: pulumi.Input<string>;
    /**
     * Indicates whether the Directory Server should reject any simple bind request that contains a DN but no password.
     */
    bindWithDnRequiresPassword?: pulumi.Input<boolean>;
    /**
     * When this property is set, changes made to this server using the console or dsconfig can be automatically applied to all
     * servers in the specified server group.
     */
    configurationServerGroup?: pulumi.Input<string>;
    /**
     * This setting provides data integrity options when the Directory Server is installed with a database on a network storage
     * device. A storage device may be accessed directly by a physical server, or indirectly through a virtual machine running
     * on a hypervisor. Enabling this setting will apply changes to all Local DB Backends, the LDAP Changelog Backend, and the
     * replication changelog database.
     */
    databaseOnVirtualizedOrNetworkStorage?: pulumi.Input<boolean>;
    /**
     * Specifies the client connection policy that will be used by default for internal operations.
     */
    defaultInternalOperationClientConnectionPolicy?: pulumi.Input<string>;
    /**
     * Specifies the name of the password policy that is in effect for users whose entries do not specify an alternate password
     * policy (either via a real or virtual attribute).
     */
    defaultPasswordPolicy?: pulumi.Input<string>;
    /**
     * Specifies the name of a privilege that should not be evaluated by the server.
     */
    disabledPrivileges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the maximum number of duplicate alert messages that should be sent via the administrative alert framework in
     * the time window specified by the duplicate-alert-time-limit property.
     */
    duplicateAlertLimit?: pulumi.Input<number>;
    /**
     * Specifies the length of time that must expire before duplicate messages are sent via the administrative alert framework.
     */
    duplicateAlertTimeLimit?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of duplicate error log messages that should be logged in the time window specified by the
     * duplicate-error-log-time-limit property.
     */
    duplicateErrorLogLimit?: pulumi.Input<number>;
    /**
     * Specifies the length of time that must expire before duplicate log messages above the duplicate-error-log-limit
     * threshold are logged again to the error log.
     */
    duplicateErrorLogTimeLimit?: pulumi.Input<string>;
    /**
     * Indicates whether the Directory Server should attempt to record information about the length of time required to process
     * various phases of an operation. Enabling this feature may impact performance, but could make it easier to identify
     * potential bottlenecks in operation processing.
     */
    enableSubOperationTimer?: pulumi.Input<boolean>;
    /**
     * Indicates whether the server should encrypt backups by default.
     */
    encryptBackupsByDefault?: pulumi.Input<boolean>;
    /**
     * Indicates whether the Directory Server should encrypt the data that it stores in all components that support it. This
     * may include certain types of backends (including local DB and large attribute backends), the LDAP changelog, and the
     * replication server database.
     */
    encryptData?: pulumi.Input<boolean>;
    /**
     * Indicates whether the server should encrypt LDIF exports by default.
     */
    encryptLdifExportsByDefault?: pulumi.Input<boolean>;
    /**
     * Specifies the cipher stream provider that should be used to protect the contents of the encryption settings database.
     */
    encryptionSettingsCipherStreamProvider?: pulumi.Input<string>;
    /**
     * Indicates whether the Directory Server should be shut down if a severe error is raised (e.g., an out of memory error)
     * which may prevent the JVM from continuing to run properly.
     */
    exitOnJvmError?: pulumi.Input<boolean>;
    /**
     * Indicates whether this server should be forced to assume the master role if no other suitable server is found to act as
     * master or if multiple masters are detected. A master is only needed when changes are made to mirrored data, i.e. data
     * specific to the topology itself and cluster-wide configuration data.
     */
    forceAsMasterForMirroredData?: pulumi.Input<boolean>;
    /**
     * Specifies the minimum length of time required for backend or request processor initialization that will trigger the
     * server to force an explicit garbage collection. A value of "0 seconds" indicates that the server should never invoke an
     * explicit garbage collection regardless of the length of time required to initialize the server backends.
     */
    forcedGcPrimeDuration?: pulumi.Input<string>;
    /**
     * Specifies the maximum length of time that a client connection may remain established since its last completed operation.
     */
    idleTimeLimit?: pulumi.Input<string>;
    /**
     * Specifies a name that may be used to uniquely identify this Directory Server instance among other instances in the
     * environment.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Specifies how the Directory Server should handle operations whenever an attribute value violates the associated
     * attribute syntax.
     */
    invalidAttributeSyntaxBehavior?: pulumi.Input<string>;
    /**
     * When set to true, the server will use its original, non-standard JMX MBean names for the monitoring MBeans. These
     * include RDN keys of "Rdn1" and "Rdn2" instead of the recommended "type" and "name" keys. This should option should only
     * be enabled for installations that have monitoring infrastructure that depends on the old keys.
     */
    jmxUseLegacyMbeanNames?: pulumi.Input<boolean>;
    /**
     * Specifies how a Java type is chosen for monitor attributes exposed as JMX attribute values.
     */
    jmxValueBehavior?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of entries that may be directly joined with any individual search result entry.
     */
    ldapJoinSizeLimit?: pulumi.Input<number>;
    /**
     * The unique identifier for the encryption settings definition to use to generate the encryption key for encrypted LDIF
     * exports by default.
     */
    ldifExportEncryptionSettingsDefinitionId?: pulumi.Input<string>;
    /**
     * Specifies the location for this Directory Server. Operations performed which involve communication with other servers
     * may prefer servers in the same location to help ensure low-latency responses.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of entries that the Directory Server should "look through" in the course of processing a
     * search request.
     */
    lookthroughLimit?: pulumi.Input<number>;
    /**
     * The maximum length of time that a connection to an SMTP server should be considered valid.
     */
    maxSmtpConnectionAge?: pulumi.Input<string>;
    /**
     * The maximum number of SMTP connections that will be maintained for delivering email messages.
     */
    maxSmtpConnectionCount?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of attributes that may be included in an add request. This property does not impose any
     * limit on the number of values that an attribute may have.
     */
    maximumAttributesPerAddRequest?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of LDAP client connections which may be established to this Directory Server at the same
     * time.
     */
    maximumConcurrentConnections?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of LDAP client connections which may be established to this Directory Server at the same
     * time and authenticated as the same user.
     */
    maximumConcurrentConnectionsPerBindDn?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of LDAP client connections originating from the same IP address which may be established to
     * this Directory Server at the same time.
     */
    maximumConcurrentConnectionsPerIpAddress?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of unindexed searches that may be in progress in this backend at any given time. Any
     * unindexed searches requested while the maximum number of unindexed searches are already being processed will be
     * rejected. A value of zero indicates that no limit will be enforced.
     */
    maximumConcurrentUnindexedSearches?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of modifications that may be included in a modify request. This property does not impose
     * any limit on the number of attribute values that a modification may have.
     */
    maximumModificationsPerModifyRequest?: pulumi.Input<number>;
    /**
     * The maximum number of server.out log files (including the current active log file) that should be retained. When
     * rotating the log file, if the total number of files exceeds this count, then the oldest file(s) will be removed so that
     * the total number of log files is within this limit.
     */
    maximumServerOutLogFileCount?: pulumi.Input<number>;
    /**
     * The maximum allowed size that the server.out log file will be allowed to have. If a write would cause the file to exceed
     * this size, then the current file will be rotated out of place and a new empty file will be created and the message
     * written to it.
     */
    maximumServerOutLogFileSize?: pulumi.Input<string>;
    /**
     * Specifies the maximum amount of time the shutdown of Directory Server may take.
     */
    maximumShutdownTime?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of password policies that are defined in the user data (that is, outside of the
     * configuration) that the server should cache in memory for faster access. A value of zero indicates that the server
     * should not cache any user data password policies.
     */
    maximumUserDataPasswordPoliciesToCache?: pulumi.Input<number>;
    /**
     * Specifies the length of time that the Directory Server should cache the IP addresses associated with the names of
     * systems with which it interacts.
     */
    networkAddressCacheTtl?: pulumi.Input<string>;
    /**
     * Specifies whether the Directory Server should cache the last valid IP addresses associated with the names of systems
     * with which it interacts with when the domain name service returns an unknown host exception. Java may return an unknown
     * host exception when there is unexpected interruption in domain name service so this setting protects the Directory
     * Server from temporary DNS server outages if previous results have been cached.
     */
    networkAddressOutageCacheEnabled?: pulumi.Input<boolean>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether the Directory Server should send a response to any operation that is interrupted via an abandon
     * request.
     */
    notifyAbandonedOperations?: pulumi.Input<boolean>;
    /**
     * Specifies a set of attribute types for which the server will permit values that do not conform to the associated
     * attribute syntax.
     */
    permitSyntaxViolationsForAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of the identity mapper to map authorization ID values (using the "u:" form) provided in the proxied
     * authorization control to the corresponding user entry.
     */
    proxiedAuthorizationIdentityMapper?: pulumi.Input<string>;
    /**
     * Indicates whether the values of sensitive configuration properties should be redacted when logging configuration
     * changes, including in the configuration audit log, the error log, and the server.out log file.
     */
    redactSensitiveValuesInConfigLogs?: pulumi.Input<boolean>;
    /**
     * Indicates whether the Directory Server should reject any LDAP request (other than StartTLS) received from a client that
     * is not using an encrypted connection.
     */
    rejectInsecureRequests?: pulumi.Input<boolean>;
    /**
     * Indicates whether the Directory Server should reject any LDAP request (other than bind or StartTLS requests) received
     * from a client that has not yet been authenticated, whose last authentication attempt was unsuccessful, or whose last
     * authentication attempt used anonymous authentication.
     */
    rejectUnauthenticatedRequests?: pulumi.Input<boolean>;
    /**
     * The maximum number of replication backlog updates a replication assurance source (i.e. a peer Directory Server) can have
     * and be immediately recognized as an available assurance source by this Directory Server.
     */
    replicationAssuranceSourceBacklogFastStartThreshold?: pulumi.Input<number>;
    /**
     * The amount of time a replication assurance source (i.e. a peer Directory Server) will be suspended from assurance
     * requirements on this Directory Server if it experiences an assurance timeout.
     */
    replicationAssuranceSourceTimeoutSuspendDuration?: pulumi.Input<string>;
    /**
     * An alert is sent when the number of outstanding replication changes for the Directory Server has exceeded this threshold
     * for longer than the replication backlog duration alert threshold.
     */
    replicationBacklogCountAlertThreshold?: pulumi.Input<number>;
    /**
     * An alert is sent when the number of outstanding replication changes for the Directory Server has exceeded the
     * replication backlog count alert threshold for longer than this duration.
     */
    replicationBacklogDurationAlertThreshold?: pulumi.Input<string>;
    /**
     * Specifies the size limit for historical information.
     */
    replicationHistoryLimit?: pulumi.Input<number>;
    /**
     * Indicates whether state about obsolete replicas is automatically purged.
     */
    replicationPurgeObsoleteReplicas?: pulumi.Input<boolean>;
    /**
     * The name of the replication set assigned to this Directory Server. Restricted domains are only replicated within
     * instances using the same replication set name.
     */
    replicationSetName?: pulumi.Input<string>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.DefaultGlobalConfigurationRequiredAction>[]>;
    /**
     * Specifies a result code map that should be used for clients that do not have a map associated with their client
     * connection policy. If the associated client connection policy has a result code map, then that map will be used instead.
     * If no map is associated either with the client connection policy or the global configuration, then an internal default
     * will be used.
     */
    resultCodeMap?: pulumi.Input<string>;
    /**
     * Indicates whether responses for failed bind operations should include a message string providing the reason for the
     * authentication failure.
     */
    returnBindErrorMessages?: pulumi.Input<boolean>;
    /**
     * Provides the ability to indicate that some attributes should be considered sensitive and additional protection should be
     * in place when interacting with those attributes.
     */
    sensitiveAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the numeric value of the result code when request processing fails due to an internal server error.
     */
    serverErrorResultCode?: pulumi.Input<number>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. Specifies the percentage of the JVM memory to allocate to the
     * database cache that is shared across all local DB backends.
     */
    sharedLocalDbBackendDatabaseCachePercent?: pulumi.Input<number>;
    /**
     * Specifies how the Directory Server should handle operations for an entry does not contain a structural object class, or
     * for an entry that contains multiple structural classes.
     */
    singleStructuralObjectclassBehavior?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of entries that the Directory Server should return to clients by default when processing a
     * search operation.
     */
    sizeLimit?: pulumi.Input<number>;
    /**
     * The length of time between checks to ensure that available SMTP connections are still valid.
     */
    smtpConnectionHealthCheckInterval?: pulumi.Input<string>;
    /**
     * Specifies the set of servers that will be used to send email messages. The order in which the servers are listed
     * indicates the order in which the Directory Server will attempt to use them in the course of sending a message. The first
     * attempt will always go to the server at the top of the list, and servers further down the list will only be used if none
     * of the servers listed above it were able to successfully send the message.
     */
    smtpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the soft delete policy that will be used by default for delete operations. Soft delete operations introduce
     * the ability to control the server behavior of the delete operation. Instead of performing a permanent delete of an
     * entry, deleted entries can be retained as soft deleted entries by their entryUUID values and are available for undelete
     * at a later time. In addition to a soft delete policy enabling soft deletes, delete operations sent to the server must
     * have the soft delete request control present with sufficient access privileges to access the soft delete request
     * control.
     */
    softDeletePolicy?: pulumi.Input<string>;
    /**
     * Specifies how the server should handle error log messages (which may include errors, warnings, and notices) generated
     * during startup. All of these messages will be written to all configured error loggers, but they may also be written to
     * other locations (like standard output, standard error, or the server.out log file) so that they are displayed on the
     * console when the server is starting.
     */
    startupErrorLoggerOutputLocation?: pulumi.Input<string>;
    /**
     * The number of outstanding changes any replica can have before the Directory Server will start accepting connections. The
     * Directory Server may never accept connections if this setting is too low. If you are unsure which value to use, you can
     * use the number of expected updates within a five second interval.
     */
    startupMinReplicationBacklogCount?: pulumi.Input<number>;
    /**
     * Specifies the length of time that a subtree may remain hidden or read-only before an administrative alert is sent.
     */
    subtreeAccessibilityAlertTimeLimit?: pulumi.Input<string>;
    /**
     * Specifies the maximum length of time that the Directory Server should be allowed to spend processing a search operation.
     */
    timeLimit?: pulumi.Input<string>;
    /**
     * Specifies criteria for identifying specific applications that access the server to enable tracking throughput and
     * latency of LDAP operations issued by an application.
     */
    trackedApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of Global Configuration resource. Options are ['global-configuration']
     */
    type?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. The idle-time-limit limit value that will apply for connections
     * from unauthenticated clients. If this is not specified, then the value of the idle-time-limit property will be applied
     * for both authenticated and unauthenticated connections.
     */
    unauthenticatedIdleTimeLimit?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. The lookthrough limit value that will apply for connections from
     * unauthenticated clients. If this is not specified, then the value of the lookthrough-limit property will be applied for
     * both authenticated and unauthenticated connections.
     */
    unauthenticatedLookthroughLimit?: pulumi.Input<number>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. The size limit value that will apply for connections from
     * unauthenticated clients. If this is not specified, then the value of the size-limit property will be applied for both
     * authenticated and unauthenticated connections.
     */
    unauthenticatedSizeLimit?: pulumi.Input<number>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. The time limit value that will apply for connections from
     * unauthenticated clients. If this is not specified, then the value of the time-limit property will be applied for both
     * authenticated and unauthenticated connections.
     */
    unauthenticatedTimeLimit?: pulumi.Input<string>;
    /**
     * Specifies the action which should be taken for any database that experiences an unrecoverable error. Action applies to
     * local database backends and the replication recent changes database.
     */
    unrecoverableDatabaseErrorMode?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. Indicates whether the server should use a common database cache
     * that is shared across all local DB backends instead of maintaining a separate cache for each backend.
     */
    useSharedDatabaseCacheAcrossAllLocalDbBackends?: pulumi.Input<boolean>;
    /**
     * Indicates whether the digest should always be verified whenever an entry containing a digest is decoded. If this is
     * "true", then if a digest exists, it will always be verified. Otherwise, the digest will be written when encoding entries
     * but ignored when decoding entries but may still be available for other verification processing.
     */
    verifyEntryDigests?: pulumi.Input<boolean>;
    /**
     * Indicates whether the server should issue a warning when enabling a backend that contains multiple base DNs.
     */
    warnForBackendsWithMultipleBaseDns?: pulumi.Input<boolean>;
    /**
     * Specifies the kinds of write operations the Directory Server can process.
     */
    writabilityMode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DefaultGlobalConfiguration resource.
 */
export interface DefaultGlobalConfigurationArgs {
    /**
     * Indicates whether the Directory Server should allow underscores in attribute names and allow attribute names to begin
     * with numeric digits (both of which are violations of the LDAP standards).
     */
    allowAttributeNameExceptions?: pulumi.Input<boolean>;
    /**
     * Allow replication to be inherited by subordinate/child backends.
     */
    allowInheritedReplicationOfSubordinateBackends?: pulumi.Input<boolean>;
    /**
     * Indicates that processes attaching to this server's local JVM are allowed to access internal data through JMX without
     * the authentication requirements that remote JMX connections are subject to. Please review and understand the data that
     * this option will expose (such as cn=monitor) to client applications to ensure there are no security concerns.
     */
    allowInsecureLocalJmxConnections?: pulumi.Input<boolean>;
    /**
     * A set of criteria that may be used to match LDAP requests that may be permitted over an insecure connection even if
     * reject-insecure-requests is true. Note that some types of requests will always be permitted, including StartTLS and
     * start administrative session requests.
     */
    allowedInsecureRequestCriteria?: pulumi.Input<string>;
    /**
     * Specifies a set of TLS protocols that will be permitted for use in the server even though there may be known
     * vulnerabilities that could cause their use to be unsafe in some conditions. Enabling support for insecure TLS protocols
     * is discouraged, and is generally recommended only as a short-term measure to permit legacy clients to interact with the
     * server until they can be updated to support more secure communication protocols.
     */
    allowedInsecureTlsProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the fully-qualified name of a Java class that may be invoked in the server.
     */
    allowedTasks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of criteria that may be used to match LDAP requests that may be permitted over an unauthenticated connection even
     * if reject-unauthenticated-requests is true. Note that some types of requests will always be permitted, including bind,
     * StartTLS, and start administrative session requests.
     */
    allowedUnauthenticatedRequestCriteria?: pulumi.Input<string>;
    /**
     * Specifies the operational attribute types that are defined in the schema with the NO-USER-MODIFICATION constraint that
     * the server will allow to be altered if the associated request contains the ignore NO-USER-MODIFICATION request control.
     */
    attributesModifiableWithIgnoreNoUserModificationRequestControls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Connection criteria that may be used to identify clients whose add requests should use entryUUID as the naming
     * attribute.
     */
    autoNameWithEntryUuidConnectionCriteria?: pulumi.Input<string>;
    /**
     * Request criteria that may be used to identify add requests that should use entryUUID as the naming attribute.
     */
    autoNameWithEntryUuidRequestCriteria?: pulumi.Input<string>;
    /**
     * Indicates whether to automatically compress LDIF exports that are also encrypted.
     */
    automaticallyCompressEncryptedLdifExports?: pulumi.Input<boolean>;
    /**
     * Indicates whether the server should use a separate background thread for each persistent search.
     */
    backgroundThreadForEachPersistentSearch?: pulumi.Input<boolean>;
    /**
     * The unique identifier for the encryption settings definition to use to generate the encryption key for encrypted backups
     * by default.
     */
    backupEncryptionSettingsDefinitionId?: pulumi.Input<string>;
    /**
     * Indicates whether the Directory Server should reject any simple bind request that contains a DN but no password.
     */
    bindWithDnRequiresPassword?: pulumi.Input<boolean>;
    /**
     * When this property is set, changes made to this server using the console or dsconfig can be automatically applied to all
     * servers in the specified server group.
     */
    configurationServerGroup?: pulumi.Input<string>;
    /**
     * This setting provides data integrity options when the Directory Server is installed with a database on a network storage
     * device. A storage device may be accessed directly by a physical server, or indirectly through a virtual machine running
     * on a hypervisor. Enabling this setting will apply changes to all Local DB Backends, the LDAP Changelog Backend, and the
     * replication changelog database.
     */
    databaseOnVirtualizedOrNetworkStorage?: pulumi.Input<boolean>;
    /**
     * Specifies the client connection policy that will be used by default for internal operations.
     */
    defaultInternalOperationClientConnectionPolicy?: pulumi.Input<string>;
    /**
     * Specifies the name of the password policy that is in effect for users whose entries do not specify an alternate password
     * policy (either via a real or virtual attribute).
     */
    defaultPasswordPolicy?: pulumi.Input<string>;
    /**
     * Specifies the name of a privilege that should not be evaluated by the server.
     */
    disabledPrivileges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the maximum number of duplicate alert messages that should be sent via the administrative alert framework in
     * the time window specified by the duplicate-alert-time-limit property.
     */
    duplicateAlertLimit?: pulumi.Input<number>;
    /**
     * Specifies the length of time that must expire before duplicate messages are sent via the administrative alert framework.
     */
    duplicateAlertTimeLimit?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of duplicate error log messages that should be logged in the time window specified by the
     * duplicate-error-log-time-limit property.
     */
    duplicateErrorLogLimit?: pulumi.Input<number>;
    /**
     * Specifies the length of time that must expire before duplicate log messages above the duplicate-error-log-limit
     * threshold are logged again to the error log.
     */
    duplicateErrorLogTimeLimit?: pulumi.Input<string>;
    /**
     * Indicates whether the Directory Server should attempt to record information about the length of time required to process
     * various phases of an operation. Enabling this feature may impact performance, but could make it easier to identify
     * potential bottlenecks in operation processing.
     */
    enableSubOperationTimer?: pulumi.Input<boolean>;
    /**
     * Indicates whether the server should encrypt backups by default.
     */
    encryptBackupsByDefault?: pulumi.Input<boolean>;
    /**
     * Indicates whether the Directory Server should encrypt the data that it stores in all components that support it. This
     * may include certain types of backends (including local DB and large attribute backends), the LDAP changelog, and the
     * replication server database.
     */
    encryptData?: pulumi.Input<boolean>;
    /**
     * Indicates whether the server should encrypt LDIF exports by default.
     */
    encryptLdifExportsByDefault?: pulumi.Input<boolean>;
    /**
     * Specifies the cipher stream provider that should be used to protect the contents of the encryption settings database.
     */
    encryptionSettingsCipherStreamProvider?: pulumi.Input<string>;
    /**
     * Indicates whether the Directory Server should be shut down if a severe error is raised (e.g., an out of memory error)
     * which may prevent the JVM from continuing to run properly.
     */
    exitOnJvmError?: pulumi.Input<boolean>;
    /**
     * Indicates whether this server should be forced to assume the master role if no other suitable server is found to act as
     * master or if multiple masters are detected. A master is only needed when changes are made to mirrored data, i.e. data
     * specific to the topology itself and cluster-wide configuration data.
     */
    forceAsMasterForMirroredData?: pulumi.Input<boolean>;
    /**
     * Specifies the minimum length of time required for backend or request processor initialization that will trigger the
     * server to force an explicit garbage collection. A value of "0 seconds" indicates that the server should never invoke an
     * explicit garbage collection regardless of the length of time required to initialize the server backends.
     */
    forcedGcPrimeDuration?: pulumi.Input<string>;
    /**
     * Specifies the maximum length of time that a client connection may remain established since its last completed operation.
     */
    idleTimeLimit?: pulumi.Input<string>;
    /**
     * Specifies a name that may be used to uniquely identify this Directory Server instance among other instances in the
     * environment.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Specifies how the Directory Server should handle operations whenever an attribute value violates the associated
     * attribute syntax.
     */
    invalidAttributeSyntaxBehavior?: pulumi.Input<string>;
    /**
     * When set to true, the server will use its original, non-standard JMX MBean names for the monitoring MBeans. These
     * include RDN keys of "Rdn1" and "Rdn2" instead of the recommended "type" and "name" keys. This should option should only
     * be enabled for installations that have monitoring infrastructure that depends on the old keys.
     */
    jmxUseLegacyMbeanNames?: pulumi.Input<boolean>;
    /**
     * Specifies how a Java type is chosen for monitor attributes exposed as JMX attribute values.
     */
    jmxValueBehavior?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of entries that may be directly joined with any individual search result entry.
     */
    ldapJoinSizeLimit?: pulumi.Input<number>;
    /**
     * The unique identifier for the encryption settings definition to use to generate the encryption key for encrypted LDIF
     * exports by default.
     */
    ldifExportEncryptionSettingsDefinitionId?: pulumi.Input<string>;
    /**
     * Specifies the location for this Directory Server. Operations performed which involve communication with other servers
     * may prefer servers in the same location to help ensure low-latency responses.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of entries that the Directory Server should "look through" in the course of processing a
     * search request.
     */
    lookthroughLimit?: pulumi.Input<number>;
    /**
     * The maximum length of time that a connection to an SMTP server should be considered valid.
     */
    maxSmtpConnectionAge?: pulumi.Input<string>;
    /**
     * The maximum number of SMTP connections that will be maintained for delivering email messages.
     */
    maxSmtpConnectionCount?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of attributes that may be included in an add request. This property does not impose any
     * limit on the number of values that an attribute may have.
     */
    maximumAttributesPerAddRequest?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of LDAP client connections which may be established to this Directory Server at the same
     * time.
     */
    maximumConcurrentConnections?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of LDAP client connections which may be established to this Directory Server at the same
     * time and authenticated as the same user.
     */
    maximumConcurrentConnectionsPerBindDn?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of LDAP client connections originating from the same IP address which may be established to
     * this Directory Server at the same time.
     */
    maximumConcurrentConnectionsPerIpAddress?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of unindexed searches that may be in progress in this backend at any given time. Any
     * unindexed searches requested while the maximum number of unindexed searches are already being processed will be
     * rejected. A value of zero indicates that no limit will be enforced.
     */
    maximumConcurrentUnindexedSearches?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of modifications that may be included in a modify request. This property does not impose
     * any limit on the number of attribute values that a modification may have.
     */
    maximumModificationsPerModifyRequest?: pulumi.Input<number>;
    /**
     * The maximum number of server.out log files (including the current active log file) that should be retained. When
     * rotating the log file, if the total number of files exceeds this count, then the oldest file(s) will be removed so that
     * the total number of log files is within this limit.
     */
    maximumServerOutLogFileCount?: pulumi.Input<number>;
    /**
     * The maximum allowed size that the server.out log file will be allowed to have. If a write would cause the file to exceed
     * this size, then the current file will be rotated out of place and a new empty file will be created and the message
     * written to it.
     */
    maximumServerOutLogFileSize?: pulumi.Input<string>;
    /**
     * Specifies the maximum amount of time the shutdown of Directory Server may take.
     */
    maximumShutdownTime?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of password policies that are defined in the user data (that is, outside of the
     * configuration) that the server should cache in memory for faster access. A value of zero indicates that the server
     * should not cache any user data password policies.
     */
    maximumUserDataPasswordPoliciesToCache?: pulumi.Input<number>;
    /**
     * Specifies the length of time that the Directory Server should cache the IP addresses associated with the names of
     * systems with which it interacts.
     */
    networkAddressCacheTtl?: pulumi.Input<string>;
    /**
     * Specifies whether the Directory Server should cache the last valid IP addresses associated with the names of systems
     * with which it interacts with when the domain name service returns an unknown host exception. Java may return an unknown
     * host exception when there is unexpected interruption in domain name service so this setting protects the Directory
     * Server from temporary DNS server outages if previous results have been cached.
     */
    networkAddressOutageCacheEnabled?: pulumi.Input<boolean>;
    /**
     * Indicates whether the Directory Server should send a response to any operation that is interrupted via an abandon
     * request.
     */
    notifyAbandonedOperations?: pulumi.Input<boolean>;
    /**
     * Specifies a set of attribute types for which the server will permit values that do not conform to the associated
     * attribute syntax.
     */
    permitSyntaxViolationsForAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of the identity mapper to map authorization ID values (using the "u:" form) provided in the proxied
     * authorization control to the corresponding user entry.
     */
    proxiedAuthorizationIdentityMapper?: pulumi.Input<string>;
    /**
     * Indicates whether the values of sensitive configuration properties should be redacted when logging configuration
     * changes, including in the configuration audit log, the error log, and the server.out log file.
     */
    redactSensitiveValuesInConfigLogs?: pulumi.Input<boolean>;
    /**
     * Indicates whether the Directory Server should reject any LDAP request (other than StartTLS) received from a client that
     * is not using an encrypted connection.
     */
    rejectInsecureRequests?: pulumi.Input<boolean>;
    /**
     * Indicates whether the Directory Server should reject any LDAP request (other than bind or StartTLS requests) received
     * from a client that has not yet been authenticated, whose last authentication attempt was unsuccessful, or whose last
     * authentication attempt used anonymous authentication.
     */
    rejectUnauthenticatedRequests?: pulumi.Input<boolean>;
    /**
     * The maximum number of replication backlog updates a replication assurance source (i.e. a peer Directory Server) can have
     * and be immediately recognized as an available assurance source by this Directory Server.
     */
    replicationAssuranceSourceBacklogFastStartThreshold?: pulumi.Input<number>;
    /**
     * The amount of time a replication assurance source (i.e. a peer Directory Server) will be suspended from assurance
     * requirements on this Directory Server if it experiences an assurance timeout.
     */
    replicationAssuranceSourceTimeoutSuspendDuration?: pulumi.Input<string>;
    /**
     * An alert is sent when the number of outstanding replication changes for the Directory Server has exceeded this threshold
     * for longer than the replication backlog duration alert threshold.
     */
    replicationBacklogCountAlertThreshold?: pulumi.Input<number>;
    /**
     * An alert is sent when the number of outstanding replication changes for the Directory Server has exceeded the
     * replication backlog count alert threshold for longer than this duration.
     */
    replicationBacklogDurationAlertThreshold?: pulumi.Input<string>;
    /**
     * Specifies the size limit for historical information.
     */
    replicationHistoryLimit?: pulumi.Input<number>;
    /**
     * Indicates whether state about obsolete replicas is automatically purged.
     */
    replicationPurgeObsoleteReplicas?: pulumi.Input<boolean>;
    /**
     * The name of the replication set assigned to this Directory Server. Restricted domains are only replicated within
     * instances using the same replication set name.
     */
    replicationSetName?: pulumi.Input<string>;
    /**
     * Specifies a result code map that should be used for clients that do not have a map associated with their client
     * connection policy. If the associated client connection policy has a result code map, then that map will be used instead.
     * If no map is associated either with the client connection policy or the global configuration, then an internal default
     * will be used.
     */
    resultCodeMap?: pulumi.Input<string>;
    /**
     * Indicates whether responses for failed bind operations should include a message string providing the reason for the
     * authentication failure.
     */
    returnBindErrorMessages?: pulumi.Input<boolean>;
    /**
     * Provides the ability to indicate that some attributes should be considered sensitive and additional protection should be
     * in place when interacting with those attributes.
     */
    sensitiveAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the numeric value of the result code when request processing fails due to an internal server error.
     */
    serverErrorResultCode?: pulumi.Input<number>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. Specifies the percentage of the JVM memory to allocate to the
     * database cache that is shared across all local DB backends.
     */
    sharedLocalDbBackendDatabaseCachePercent?: pulumi.Input<number>;
    /**
     * Specifies how the Directory Server should handle operations for an entry does not contain a structural object class, or
     * for an entry that contains multiple structural classes.
     */
    singleStructuralObjectclassBehavior?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of entries that the Directory Server should return to clients by default when processing a
     * search operation.
     */
    sizeLimit?: pulumi.Input<number>;
    /**
     * The length of time between checks to ensure that available SMTP connections are still valid.
     */
    smtpConnectionHealthCheckInterval?: pulumi.Input<string>;
    /**
     * Specifies the set of servers that will be used to send email messages. The order in which the servers are listed
     * indicates the order in which the Directory Server will attempt to use them in the course of sending a message. The first
     * attempt will always go to the server at the top of the list, and servers further down the list will only be used if none
     * of the servers listed above it were able to successfully send the message.
     */
    smtpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the soft delete policy that will be used by default for delete operations. Soft delete operations introduce
     * the ability to control the server behavior of the delete operation. Instead of performing a permanent delete of an
     * entry, deleted entries can be retained as soft deleted entries by their entryUUID values and are available for undelete
     * at a later time. In addition to a soft delete policy enabling soft deletes, delete operations sent to the server must
     * have the soft delete request control present with sufficient access privileges to access the soft delete request
     * control.
     */
    softDeletePolicy?: pulumi.Input<string>;
    /**
     * Specifies how the server should handle error log messages (which may include errors, warnings, and notices) generated
     * during startup. All of these messages will be written to all configured error loggers, but they may also be written to
     * other locations (like standard output, standard error, or the server.out log file) so that they are displayed on the
     * console when the server is starting.
     */
    startupErrorLoggerOutputLocation?: pulumi.Input<string>;
    /**
     * The number of outstanding changes any replica can have before the Directory Server will start accepting connections. The
     * Directory Server may never accept connections if this setting is too low. If you are unsure which value to use, you can
     * use the number of expected updates within a five second interval.
     */
    startupMinReplicationBacklogCount?: pulumi.Input<number>;
    /**
     * Specifies the length of time that a subtree may remain hidden or read-only before an administrative alert is sent.
     */
    subtreeAccessibilityAlertTimeLimit?: pulumi.Input<string>;
    /**
     * Specifies the maximum length of time that the Directory Server should be allowed to spend processing a search operation.
     */
    timeLimit?: pulumi.Input<string>;
    /**
     * Specifies criteria for identifying specific applications that access the server to enable tracking throughput and
     * latency of LDAP operations issued by an application.
     */
    trackedApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. The idle-time-limit limit value that will apply for connections
     * from unauthenticated clients. If this is not specified, then the value of the idle-time-limit property will be applied
     * for both authenticated and unauthenticated connections.
     */
    unauthenticatedIdleTimeLimit?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. The lookthrough limit value that will apply for connections from
     * unauthenticated clients. If this is not specified, then the value of the lookthrough-limit property will be applied for
     * both authenticated and unauthenticated connections.
     */
    unauthenticatedLookthroughLimit?: pulumi.Input<number>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. The size limit value that will apply for connections from
     * unauthenticated clients. If this is not specified, then the value of the size-limit property will be applied for both
     * authenticated and unauthenticated connections.
     */
    unauthenticatedSizeLimit?: pulumi.Input<number>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. The time limit value that will apply for connections from
     * unauthenticated clients. If this is not specified, then the value of the time-limit property will be applied for both
     * authenticated and unauthenticated connections.
     */
    unauthenticatedTimeLimit?: pulumi.Input<string>;
    /**
     * Specifies the action which should be taken for any database that experiences an unrecoverable error. Action applies to
     * local database backends and the replication recent changes database.
     */
    unrecoverableDatabaseErrorMode?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. Indicates whether the server should use a common database cache
     * that is shared across all local DB backends instead of maintaining a separate cache for each backend.
     */
    useSharedDatabaseCacheAcrossAllLocalDbBackends?: pulumi.Input<boolean>;
    /**
     * Indicates whether the digest should always be verified whenever an entry containing a digest is decoded. If this is
     * "true", then if a digest exists, it will always be verified. Otherwise, the digest will be written when encoding entries
     * but ignored when decoding entries but may still be available for other verification processing.
     */
    verifyEntryDigests?: pulumi.Input<boolean>;
    /**
     * Indicates whether the server should issue a warning when enabling a backend that contains multiple base DNs.
     */
    warnForBackendsWithMultipleBaseDns?: pulumi.Input<boolean>;
    /**
     * Specifies the kinds of write operations the Directory Server can process.
     */
    writabilityMode?: pulumi.Input<string>;
}
