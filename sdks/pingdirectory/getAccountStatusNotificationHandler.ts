// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAccountStatusNotificationHandler(args: GetAccountStatusNotificationHandlerArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountStatusNotificationHandlerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getAccountStatusNotificationHandler:getAccountStatusNotificationHandler", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccountStatusNotificationHandler.
 */
export interface GetAccountStatusNotificationHandlerArgs {
    name: string;
}

/**
 * A collection of values returned by getAccountStatusNotificationHandler.
 */
export interface GetAccountStatusNotificationHandlerResult {
    readonly accountAuthenticatedMessageTemplate: string;
    readonly accountAuthenticationNotificationResultCriteria: string;
    readonly accountCreatedMessageTemplate: string;
    readonly accountCreationNotificationRequestCriteria: string;
    readonly accountDeletedMessageTemplate: string;
    readonly accountDeletionNotificationRequestCriteria: string;
    readonly accountDisabledMessageTemplate: string;
    readonly accountEnabledMessageTemplate: string;
    readonly accountExpiredMessageTemplate: string;
    readonly accountIdleLockedMessageTemplate: string;
    readonly accountNotYetActiveMessageTemplate: string;
    readonly accountPermanentlyFailureLockedMessageTemplate: string;
    readonly accountResetLockedMessageTemplate: string;
    readonly accountStatusNotificationTypes: string[];
    readonly accountTemporarilyFailureLockedMessageTemplate: string;
    readonly accountUnlockedMessageTemplate: string;
    readonly accountUpdateNotificationRequestCriteria: string;
    readonly accountUpdatedMessageTemplate: string;
    readonly asynchronous: boolean;
    readonly bindPasswordFailedValidationMessageTemplate: string;
    readonly description: string;
    readonly emailAddressAttributeTypes: string[];
    readonly emailAddressJsonField: string;
    readonly emailAddressJsonObjectFilter: string;
    readonly enabled: boolean;
    readonly extensionArguments: string[];
    readonly extensionClass: string;
    readonly id: string;
    readonly messageSubjects: string[];
    readonly messageTemplateFiles: string[];
    readonly mustChangePasswordMessageTemplate: string;
    readonly name: string;
    readonly passwordChangedMessageTemplate: string;
    readonly passwordExpiredMessageTemplate: string;
    readonly passwordExpiringMessageTemplate: string;
    readonly passwordResetMessageTemplate: string;
    readonly recipientAddresses: string[];
    readonly scriptArguments: string[];
    readonly scriptClass: string;
    readonly sendMessageWithoutEndUserAddress: boolean;
    readonly senderAddress: string;
    readonly type: string;
}
export function getAccountStatusNotificationHandlerOutput(args: GetAccountStatusNotificationHandlerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountStatusNotificationHandlerResult> {
    return pulumi.output(args).apply((a: any) => getAccountStatusNotificationHandler(a, opts))
}

/**
 * A collection of arguments for invoking getAccountStatusNotificationHandler.
 */
export interface GetAccountStatusNotificationHandlerOutputArgs {
    name: pulumi.Input<string>;
}
