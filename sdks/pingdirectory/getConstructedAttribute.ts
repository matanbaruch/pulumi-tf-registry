// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConstructedAttribute(args: GetConstructedAttributeArgs, opts?: pulumi.InvokeOptions): Promise<GetConstructedAttributeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getConstructedAttribute:getConstructedAttribute", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConstructedAttribute.
 */
export interface GetConstructedAttributeArgs {
    name: string;
}

/**
 * A collection of values returned by getConstructedAttribute.
 */
export interface GetConstructedAttributeResult {
    readonly attributeType: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly type: string;
    readonly valuePatterns: string[];
}
export function getConstructedAttributeOutput(args: GetConstructedAttributeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConstructedAttributeResult> {
    return pulumi.output(args).apply((a: any) => getConstructedAttribute(a, opts))
}

/**
 * A collection of arguments for invoking getConstructedAttribute.
 */
export interface GetConstructedAttributeOutputArgs {
    name: pulumi.Input<string>;
}
