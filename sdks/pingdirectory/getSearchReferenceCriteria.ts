// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSearchReferenceCriteria(args: GetSearchReferenceCriteriaArgs, opts?: pulumi.InvokeOptions): Promise<GetSearchReferenceCriteriaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getSearchReferenceCriteria:getSearchReferenceCriteria", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSearchReferenceCriteria.
 */
export interface GetSearchReferenceCriteriaArgs {
    name: string;
}

/**
 * A collection of values returned by getSearchReferenceCriteria.
 */
export interface GetSearchReferenceCriteriaResult {
    readonly allIncludedReferenceControls: string[];
    readonly allIncludedSearchReferenceCriterias: string[];
    readonly anyIncludedReferenceControls: string[];
    readonly anyIncludedSearchReferenceCriterias: string[];
    readonly description: string;
    readonly extensionArguments: string[];
    readonly extensionClass: string;
    readonly id: string;
    readonly name: string;
    readonly noneIncludedReferenceControls: string[];
    readonly noneIncludedSearchReferenceCriterias: string[];
    readonly notAllIncludedReferenceControls: string[];
    readonly notAllIncludedSearchReferenceCriterias: string[];
    readonly requestCriteria: string;
    readonly type: string;
}
export function getSearchReferenceCriteriaOutput(args: GetSearchReferenceCriteriaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSearchReferenceCriteriaResult> {
    return pulumi.output(args).apply((a: any) => getSearchReferenceCriteria(a, opts))
}

/**
 * A collection of arguments for invoking getSearchReferenceCriteria.
 */
export interface GetSearchReferenceCriteriaOutputArgs {
    name: pulumi.Input<string>;
}
