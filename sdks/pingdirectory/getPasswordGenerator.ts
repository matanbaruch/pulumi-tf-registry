// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPasswordGenerator(args: GetPasswordGeneratorArgs, opts?: pulumi.InvokeOptions): Promise<GetPasswordGeneratorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getPasswordGenerator:getPasswordGenerator", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPasswordGenerator.
 */
export interface GetPasswordGeneratorArgs {
    name: string;
}

/**
 * A collection of values returned by getPasswordGenerator.
 */
export interface GetPasswordGeneratorResult {
    readonly capitalizeWords: boolean;
    readonly description: string;
    readonly dictionaryFile: string;
    readonly enabled: boolean;
    readonly extensionArguments: string[];
    readonly extensionClass: string;
    readonly id: string;
    readonly minimumPasswordCharacters: number;
    readonly minimumPasswordWords: number;
    readonly name: string;
    readonly passwordCharacterSets: string[];
    readonly passwordFormat: string;
    readonly scriptArguments: string[];
    readonly scriptClass: string;
    readonly type: string;
}
export function getPasswordGeneratorOutput(args: GetPasswordGeneratorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPasswordGeneratorResult> {
    return pulumi.output(args).apply((a: any) => getPasswordGenerator(a, opts))
}

/**
 * A collection of arguments for invoking getPasswordGenerator.
 */
export interface GetPasswordGeneratorOutputArgs {
    name: pulumi.Input<string>;
}
