// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConsentService(opts?: pulumi.InvokeOptions): Promise<GetConsentServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getConsentService:getConsentService", {
    }, opts, utilities.getPackage());
}

/**
 * A collection of values returned by getConsentService.
 */
export interface GetConsentServiceResult {
    readonly audience: string;
    readonly baseDn: string;
    readonly bindDn: string;
    readonly consentRecordIdentityMappers: string[];
    readonly enabled: boolean;
    readonly id: string;
    readonly privilegedConsentScope: string;
    readonly searchSizeLimit: number;
    readonly serviceAccountDns: string[];
    readonly type: string;
    readonly unprivilegedConsentScope: string;
}
export function getConsentServiceOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetConsentServiceResult> {
    return pulumi.output(getConsentService(opts))
}
