// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIdentityMapper(args: GetIdentityMapperArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityMapperResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getIdentityMapper:getIdentityMapper", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityMapper.
 */
export interface GetIdentityMapperArgs {
    name: string;
}

/**
 * A collection of values returned by getIdentityMapper.
 */
export interface GetIdentityMapperResult {
    readonly allIncludedIdentityMappers: string[];
    readonly anyIncludedIdentityMappers: string[];
    readonly description: string;
    readonly enabled: boolean;
    readonly extensionArguments: string[];
    readonly extensionClass: string;
    readonly id: string;
    readonly matchAttributes: string[];
    readonly matchBaseDns: string[];
    readonly matchFilter: string;
    readonly matchPattern: string;
    readonly name: string;
    readonly replacePattern: string;
    readonly scriptArguments: string[];
    readonly scriptClass: string;
    readonly type: string;
}
export function getIdentityMapperOutput(args: GetIdentityMapperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityMapperResult> {
    return pulumi.output(args).apply((a: any) => getIdentityMapper(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityMapper.
 */
export interface GetIdentityMapperOutputArgs {
    name: pulumi.Input<string>;
}
