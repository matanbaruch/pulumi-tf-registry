// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DefaultSaslMechanismHandler extends pulumi.CustomResource {
    /**
     * Get an existing DefaultSaslMechanismHandler resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultSaslMechanismHandlerState, opts?: pulumi.CustomResourceOptions): DefaultSaslMechanismHandler {
        return new DefaultSaslMechanismHandler(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/defaultSaslMechanismHandler:DefaultSaslMechanismHandler';

    /**
     * Returns true if the given object is an instance of DefaultSaslMechanismHandler.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultSaslMechanismHandler {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultSaslMechanismHandler.__pulumiType;
    }

    /**
     * An access token validator that will ensure that each presented OAuth access token is authentic and trustworthy. It must
     * be configured with an identity mapper that will be used to map the access token to a local entry.
     */
    public readonly accessTokenValidators!: pulumi.Output<string[]>;
    /**
     * The number of adjacent time intervals (both before and after the current time) that should be checked when performing
     * authentication.
     */
    public readonly adjacentIntervalsToCheck!: pulumi.Output<number>;
    /**
     * The set of OAuth scopes that will all be required for any access tokens that will be allowed for authentication.
     */
    public readonly allRequiredScopes!: pulumi.Output<string[]>;
    /**
     * Specifies whether or not to allow a null value for the server-fqdn.
     */
    public readonly allowNullServerFqdn!: pulumi.Output<boolean>;
    /**
     * Specifies the supported quality of protection (QoP) levels that clients will be permitted to request when performing
     * GSSAPI authentication.
     */
    public readonly allowedQualityOfProtections!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - `oauth-bearer`: The identity mapper that will be used to map an alternate
     * authorization identity (provided in the GS2 header of the encoded OAUTHBEARER bind request credentials) to the
     * corresponding local entry. - `gssapi`: Specifies the name of the identity mapper that is to be used with this SASL
     * mechanism handler to map the alternate authorization identity (if provided, and if different from the Kerberos principal
     * used as the authentication identity) to the corresponding user in the directory. If no value is specified, then the
     * mapper specified in the identity-mapper configuration property will be used.
     */
    public readonly alternateAuthorizationIdentityMapper!: pulumi.Output<string>;
    /**
     * The set of OAuth scopes that a token may have to be allowed for authentication.
     */
    public readonly anyRequiredScopes!: pulumi.Output<string[]>;
    /**
     * Specifies the name of the attribute to hold user certificates.
     */
    public readonly certificateAttribute!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `external`: Specifies the name of the certificate mapper that should be used to
     * match client certificates to user entries. - `unboundid-certificate-plus-password`: The certificate mapper that will be
     * used to identify the target user based on the certificate that was presented to the server.
     */
    public readonly certificateMapper!: pulumi.Output<string>;
    /**
     * Indicates whether to attempt to validate the peer certificate against a certificate held in the user's entry.
     */
    public readonly certificateValidationPolicy!: pulumi.Output<string>;
    /**
     * A description for this SASL Mechanism Handler
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Indicates whether to enable debugging for the Java GSSAPI provider. Debug information will be written to standard
     * output, which should be captured in the server.out log file.
     */
    public readonly enableDebug!: pulumi.Output<boolean>;
    /**
     * Indicates whether the SASL mechanism handler is enabled for use.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party SASL Mechanism Handler. Each configuration
     * property should be given in the form 'name=value'.
     */
    public readonly extensionArguments!: pulumi.Output<string[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party SASL Mechanism Handler.
     */
    public readonly extensionClass!: pulumi.Output<string>;
    /**
     * Specifies the role that should be declared for the server in the generated JAAS configuration file.
     */
    public readonly gssapiRole!: pulumi.Output<string>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. The maximum length of time to wait to obtain an HTTP connection.
     */
    public readonly httpConnectTimeout!: pulumi.Output<string>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. A reference to an HTTP proxy server that should be used for
     * requests sent to the YubiKey validation service.
     */
    public readonly httpProxyExternalServer!: pulumi.Output<string>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. The maximum length of time to wait for a response to an HTTP
     * request.
     */
    public readonly httpResponseTimeout!: pulumi.Output<string>;
    /**
     * An ID token validator that will ensure that each presented OpenID Connect ID token is authentic and trustworthy, and
     * that will map the token to a local entry.
     */
    public readonly idTokenValidators!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - One of [`unboundid-totp`, `unboundid-yubikey-otp`, `unboundid-delivered-otp`]:
     * The identity mapper that should be used to identify the user(s) targeted in the authentication and/or authorization
     * identities contained in the bind request. This will only be used for "u:"-style identities. - One of [`digest-md5`,
     * `plain`]: Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to match the
     * authentication or authorization ID included in the SASL bind request to the corresponding user in the directory. -
     * `unboundid-ms-chap-v2`: The identity mapper that should be used to identify the entry associated with the username
     * provided in the bind request. - `unboundid-external-auth`: The identity mapper that should be used to identify the user
     * targeted by the authentication ID contained in the bind request. This will only be used for "u:"-style authentication ID
     * values. - `cram-md5`: Specifies the name of the identity mapper used with this SASL mechanism handler to match the
     * authentication ID included in the SASL bind request to the corresponding user in the directory. - `gssapi`: Specifies
     * the name of the identity mapper that is to be used with this SASL mechanism handler to match the Kerberos principal
     * included in the SASL bind request to the corresponding user in the directory. - `third-party`: The identity mapper that
     * may be used to map usernames to user entries. If the custom SASL mechanism involves a username or some other form of
     * authentication and/or authorization identity, then this may be used to map that ID to an entry for that user.
     */
    public readonly identityMapper!: pulumi.Output<string>;
    /**
     * Specifies the path to a JAAS (Java Authentication and Authorization Service) configuration file that provides the
     * information that the JVM should use for Kerberos processing.
     */
    public readonly jaasConfigFile!: pulumi.Output<string>;
    /**
     * Specifies the address of the KDC that is to be used for Kerberos processing.
     */
    public readonly kdcAddress!: pulumi.Output<string>;
    /**
     * Specifies the Kerberos service principal that the Directory Server will use to identify itself to the KDC.
     */
    public readonly kerberosServicePrincipal!: pulumi.Output<string>;
    /**
     * Specifies which key manager provider should be used to obtain a client certificate to present to the validation server
     * when performing HTTPS communication. This may be left undefined if communication will not be secured with HTTPS, or if
     * there is no need to present a client certificate to the validation service.
     */
    public readonly keyManagerProvider!: pulumi.Output<string>;
    /**
     * Specifies the keytab file that should be used for Kerberos processing.
     */
    public readonly keytab!: pulumi.Output<string>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * The maximum length of time that a one-time password value should be considered valid.
     */
    public readonly otpValidityDuration!: pulumi.Output<string>;
    /**
     * Indicates whether to prevent clients from re-using TOTP passwords.
     */
    public readonly preventTotpReuse!: pulumi.Output<boolean>;
    /**
     * When the `type` attribute is set to: - `digest-md5`: Specifies the realm that is to be used by the server for DIGEST-MD5
     * authentication. - `gssapi`: Specifies the realm to be used for GSSAPI authentication.
     */
    public readonly realm!: pulumi.Output<string>;
    /**
     * Indicates whether bind requests will be required to have both an OAuth access token (in the "auth" element of the bind
     * request) and an OpenID Connect ID token (in the "pingidentityidtoken" element of the bind request).
     */
    public readonly requireBothAccessTokenAndIdToken!: pulumi.Output<boolean>;
    /**
     * When the `type` attribute is set to: - `unboundid-totp`: Indicates whether to require a static password (as might be
     * held in the userPassword attribute, or whatever password attribute is defined in the password policy governing the user)
     * in addition to the one-time password. - `unboundid-yubikey-otp`: Indicates whether a user will be required to provide a
     * static password when authenticating via the UNBOUNDID-YUBIKEY-OTP SASL mechanism.
     */
    public readonly requireStaticPassword!: pulumi.Output<boolean>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.DefaultSaslMechanismHandlerRequiredAction[]>;
    /**
     * When the `type` attribute is set to: - `digest-md5`: Specifies the DNS-resolvable fully-qualified domain name for the
     * server that is used when validating the digest-uri parameter during the authentication process. - `oauth-bearer`: The
     * fully-qualified name that clients are expected to use when communicating with the server. - `gssapi`: Specifies the
     * DNS-resolvable fully-qualified domain name for the system.
     */
    public readonly serverFqdn!: pulumi.Output<string>;
    /**
     * The name or OID of the attribute that will be used to hold the shared secret key used during TOTP processing.
     */
    public readonly sharedSecretAttributeType!: pulumi.Output<string>;
    /**
     * The duration of the time interval used for TOTP processing.
     */
    public readonly timeIntervalDuration!: pulumi.Output<string>;
    /**
     * Specifies which trust manager provider should be used to determine whether to trust the certificate presented by the
     * server when performing HTTPS communication. This may be left undefined if HTTPS communication is not needed, or if the
     * validation service presents a certificate that is trusted by the default JVM configuration (which should be the case for
     * the validation servers that Yubico provides, but may not be the case if an alternate validation server is configured).
     */
    public readonly trustManagerProvider!: pulumi.Output<string>;
    /**
     * The type of SASL Mechanism Handler resource. Options are ['unboundid-ms-chap-v2', 'unboundid-totp',
     * 'unboundid-yubikey-otp', 'external', 'digest-md5', 'plain', 'unboundid-delivered-otp', 'unboundid-external-auth',
     * 'anonymous', 'cram-md5', 'oauth-bearer', 'unboundid-certificate-plus-password', 'gssapi', 'third-party']
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Indicates whether to validate the OAuth access token in addition to the OpenID Connect ID token in OAUTHBEARER bind
     * requests that contain both types of tokens.
     */
    public readonly validateAccessTokenWhenIdTokenIsAlsoProvided!: pulumi.Output<string>;
    /**
     * The API key needed to verify signatures generated by the YubiKey validation server. A client ID and API key may be
     * obtained for free from https://upgrade.yubico.com/getapikey/.
     */
    public readonly yubikeyApiKey!: pulumi.Output<string>;
    /**
     * The passphrase provider to use to obtain the API key needed to verify signatures generated by the YubiKey validation
     * server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.
     */
    public readonly yubikeyApiKeyPassphraseProvider!: pulumi.Output<string>;
    /**
     * The client ID to include in requests to the YubiKey validation server. A client ID and API key may be obtained for free
     * from https://upgrade.yubico.com/getapikey/.
     */
    public readonly yubikeyClientId!: pulumi.Output<string>;
    /**
     * The base URL of the validation server to use to verify one-time passwords. You should only need to change the value if
     * you wish to use your own validation server instead of using one of the Yubico servers. The server must use the YubiKey
     * Validation Protocol version 2.0.
     */
    public readonly yubikeyValidationServerBaseUrls!: pulumi.Output<string[]>;

    /**
     * Create a DefaultSaslMechanismHandler resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DefaultSaslMechanismHandlerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultSaslMechanismHandlerArgs | DefaultSaslMechanismHandlerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultSaslMechanismHandlerState | undefined;
            resourceInputs["accessTokenValidators"] = state ? state.accessTokenValidators : undefined;
            resourceInputs["adjacentIntervalsToCheck"] = state ? state.adjacentIntervalsToCheck : undefined;
            resourceInputs["allRequiredScopes"] = state ? state.allRequiredScopes : undefined;
            resourceInputs["allowNullServerFqdn"] = state ? state.allowNullServerFqdn : undefined;
            resourceInputs["allowedQualityOfProtections"] = state ? state.allowedQualityOfProtections : undefined;
            resourceInputs["alternateAuthorizationIdentityMapper"] = state ? state.alternateAuthorizationIdentityMapper : undefined;
            resourceInputs["anyRequiredScopes"] = state ? state.anyRequiredScopes : undefined;
            resourceInputs["certificateAttribute"] = state ? state.certificateAttribute : undefined;
            resourceInputs["certificateMapper"] = state ? state.certificateMapper : undefined;
            resourceInputs["certificateValidationPolicy"] = state ? state.certificateValidationPolicy : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableDebug"] = state ? state.enableDebug : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["extensionArguments"] = state ? state.extensionArguments : undefined;
            resourceInputs["extensionClass"] = state ? state.extensionClass : undefined;
            resourceInputs["gssapiRole"] = state ? state.gssapiRole : undefined;
            resourceInputs["httpConnectTimeout"] = state ? state.httpConnectTimeout : undefined;
            resourceInputs["httpProxyExternalServer"] = state ? state.httpProxyExternalServer : undefined;
            resourceInputs["httpResponseTimeout"] = state ? state.httpResponseTimeout : undefined;
            resourceInputs["idTokenValidators"] = state ? state.idTokenValidators : undefined;
            resourceInputs["identityMapper"] = state ? state.identityMapper : undefined;
            resourceInputs["jaasConfigFile"] = state ? state.jaasConfigFile : undefined;
            resourceInputs["kdcAddress"] = state ? state.kdcAddress : undefined;
            resourceInputs["kerberosServicePrincipal"] = state ? state.kerberosServicePrincipal : undefined;
            resourceInputs["keyManagerProvider"] = state ? state.keyManagerProvider : undefined;
            resourceInputs["keytab"] = state ? state.keytab : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["otpValidityDuration"] = state ? state.otpValidityDuration : undefined;
            resourceInputs["preventTotpReuse"] = state ? state.preventTotpReuse : undefined;
            resourceInputs["realm"] = state ? state.realm : undefined;
            resourceInputs["requireBothAccessTokenAndIdToken"] = state ? state.requireBothAccessTokenAndIdToken : undefined;
            resourceInputs["requireStaticPassword"] = state ? state.requireStaticPassword : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["serverFqdn"] = state ? state.serverFqdn : undefined;
            resourceInputs["sharedSecretAttributeType"] = state ? state.sharedSecretAttributeType : undefined;
            resourceInputs["timeIntervalDuration"] = state ? state.timeIntervalDuration : undefined;
            resourceInputs["trustManagerProvider"] = state ? state.trustManagerProvider : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["validateAccessTokenWhenIdTokenIsAlsoProvided"] = state ? state.validateAccessTokenWhenIdTokenIsAlsoProvided : undefined;
            resourceInputs["yubikeyApiKey"] = state ? state.yubikeyApiKey : undefined;
            resourceInputs["yubikeyApiKeyPassphraseProvider"] = state ? state.yubikeyApiKeyPassphraseProvider : undefined;
            resourceInputs["yubikeyClientId"] = state ? state.yubikeyClientId : undefined;
            resourceInputs["yubikeyValidationServerBaseUrls"] = state ? state.yubikeyValidationServerBaseUrls : undefined;
        } else {
            const args = argsOrState as DefaultSaslMechanismHandlerArgs | undefined;
            resourceInputs["accessTokenValidators"] = args ? args.accessTokenValidators : undefined;
            resourceInputs["adjacentIntervalsToCheck"] = args ? args.adjacentIntervalsToCheck : undefined;
            resourceInputs["allRequiredScopes"] = args ? args.allRequiredScopes : undefined;
            resourceInputs["allowNullServerFqdn"] = args ? args.allowNullServerFqdn : undefined;
            resourceInputs["allowedQualityOfProtections"] = args ? args.allowedQualityOfProtections : undefined;
            resourceInputs["alternateAuthorizationIdentityMapper"] = args ? args.alternateAuthorizationIdentityMapper : undefined;
            resourceInputs["anyRequiredScopes"] = args ? args.anyRequiredScopes : undefined;
            resourceInputs["certificateAttribute"] = args ? args.certificateAttribute : undefined;
            resourceInputs["certificateMapper"] = args ? args.certificateMapper : undefined;
            resourceInputs["certificateValidationPolicy"] = args ? args.certificateValidationPolicy : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableDebug"] = args ? args.enableDebug : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["extensionArguments"] = args ? args.extensionArguments : undefined;
            resourceInputs["extensionClass"] = args ? args.extensionClass : undefined;
            resourceInputs["gssapiRole"] = args ? args.gssapiRole : undefined;
            resourceInputs["httpConnectTimeout"] = args ? args.httpConnectTimeout : undefined;
            resourceInputs["httpProxyExternalServer"] = args ? args.httpProxyExternalServer : undefined;
            resourceInputs["httpResponseTimeout"] = args ? args.httpResponseTimeout : undefined;
            resourceInputs["idTokenValidators"] = args ? args.idTokenValidators : undefined;
            resourceInputs["identityMapper"] = args ? args.identityMapper : undefined;
            resourceInputs["jaasConfigFile"] = args ? args.jaasConfigFile : undefined;
            resourceInputs["kdcAddress"] = args ? args.kdcAddress : undefined;
            resourceInputs["kerberosServicePrincipal"] = args ? args.kerberosServicePrincipal : undefined;
            resourceInputs["keyManagerProvider"] = args ? args.keyManagerProvider : undefined;
            resourceInputs["keytab"] = args ? args.keytab : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["otpValidityDuration"] = args ? args.otpValidityDuration : undefined;
            resourceInputs["preventTotpReuse"] = args ? args.preventTotpReuse : undefined;
            resourceInputs["realm"] = args ? args.realm : undefined;
            resourceInputs["requireBothAccessTokenAndIdToken"] = args ? args.requireBothAccessTokenAndIdToken : undefined;
            resourceInputs["requireStaticPassword"] = args ? args.requireStaticPassword : undefined;
            resourceInputs["serverFqdn"] = args ? args.serverFqdn : undefined;
            resourceInputs["sharedSecretAttributeType"] = args ? args.sharedSecretAttributeType : undefined;
            resourceInputs["timeIntervalDuration"] = args ? args.timeIntervalDuration : undefined;
            resourceInputs["trustManagerProvider"] = args ? args.trustManagerProvider : undefined;
            resourceInputs["validateAccessTokenWhenIdTokenIsAlsoProvided"] = args ? args.validateAccessTokenWhenIdTokenIsAlsoProvided : undefined;
            resourceInputs["yubikeyApiKey"] = args?.yubikeyApiKey ? pulumi.secret(args.yubikeyApiKey) : undefined;
            resourceInputs["yubikeyApiKeyPassphraseProvider"] = args ? args.yubikeyApiKeyPassphraseProvider : undefined;
            resourceInputs["yubikeyClientId"] = args ? args.yubikeyClientId : undefined;
            resourceInputs["yubikeyValidationServerBaseUrls"] = args ? args.yubikeyValidationServerBaseUrls : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["yubikeyApiKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DefaultSaslMechanismHandler.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DefaultSaslMechanismHandler resources.
 */
export interface DefaultSaslMechanismHandlerState {
    /**
     * An access token validator that will ensure that each presented OAuth access token is authentic and trustworthy. It must
     * be configured with an identity mapper that will be used to map the access token to a local entry.
     */
    accessTokenValidators?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The number of adjacent time intervals (both before and after the current time) that should be checked when performing
     * authentication.
     */
    adjacentIntervalsToCheck?: pulumi.Input<number>;
    /**
     * The set of OAuth scopes that will all be required for any access tokens that will be allowed for authentication.
     */
    allRequiredScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether or not to allow a null value for the server-fqdn.
     */
    allowNullServerFqdn?: pulumi.Input<boolean>;
    /**
     * Specifies the supported quality of protection (QoP) levels that clients will be permitted to request when performing
     * GSSAPI authentication.
     */
    allowedQualityOfProtections?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `oauth-bearer`: The identity mapper that will be used to map an alternate
     * authorization identity (provided in the GS2 header of the encoded OAUTHBEARER bind request credentials) to the
     * corresponding local entry. - `gssapi`: Specifies the name of the identity mapper that is to be used with this SASL
     * mechanism handler to map the alternate authorization identity (if provided, and if different from the Kerberos principal
     * used as the authentication identity) to the corresponding user in the directory. If no value is specified, then the
     * mapper specified in the identity-mapper configuration property will be used.
     */
    alternateAuthorizationIdentityMapper?: pulumi.Input<string>;
    /**
     * The set of OAuth scopes that a token may have to be allowed for authentication.
     */
    anyRequiredScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of the attribute to hold user certificates.
     */
    certificateAttribute?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `external`: Specifies the name of the certificate mapper that should be used to
     * match client certificates to user entries. - `unboundid-certificate-plus-password`: The certificate mapper that will be
     * used to identify the target user based on the certificate that was presented to the server.
     */
    certificateMapper?: pulumi.Input<string>;
    /**
     * Indicates whether to attempt to validate the peer certificate against a certificate held in the user's entry.
     */
    certificateValidationPolicy?: pulumi.Input<string>;
    /**
     * A description for this SASL Mechanism Handler
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether to enable debugging for the Java GSSAPI provider. Debug information will be written to standard
     * output, which should be captured in the server.out log file.
     */
    enableDebug?: pulumi.Input<boolean>;
    /**
     * Indicates whether the SASL mechanism handler is enabled for use.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party SASL Mechanism Handler. Each configuration
     * property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party SASL Mechanism Handler.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * Specifies the role that should be declared for the server in the generated JAAS configuration file.
     */
    gssapiRole?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. The maximum length of time to wait to obtain an HTTP connection.
     */
    httpConnectTimeout?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. A reference to an HTTP proxy server that should be used for
     * requests sent to the YubiKey validation service.
     */
    httpProxyExternalServer?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. The maximum length of time to wait for a response to an HTTP
     * request.
     */
    httpResponseTimeout?: pulumi.Input<string>;
    /**
     * An ID token validator that will ensure that each presented OpenID Connect ID token is authentic and trustworthy, and
     * that will map the token to a local entry.
     */
    idTokenValidators?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - One of [`unboundid-totp`, `unboundid-yubikey-otp`, `unboundid-delivered-otp`]:
     * The identity mapper that should be used to identify the user(s) targeted in the authentication and/or authorization
     * identities contained in the bind request. This will only be used for "u:"-style identities. - One of [`digest-md5`,
     * `plain`]: Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to match the
     * authentication or authorization ID included in the SASL bind request to the corresponding user in the directory. -
     * `unboundid-ms-chap-v2`: The identity mapper that should be used to identify the entry associated with the username
     * provided in the bind request. - `unboundid-external-auth`: The identity mapper that should be used to identify the user
     * targeted by the authentication ID contained in the bind request. This will only be used for "u:"-style authentication ID
     * values. - `cram-md5`: Specifies the name of the identity mapper used with this SASL mechanism handler to match the
     * authentication ID included in the SASL bind request to the corresponding user in the directory. - `gssapi`: Specifies
     * the name of the identity mapper that is to be used with this SASL mechanism handler to match the Kerberos principal
     * included in the SASL bind request to the corresponding user in the directory. - `third-party`: The identity mapper that
     * may be used to map usernames to user entries. If the custom SASL mechanism involves a username or some other form of
     * authentication and/or authorization identity, then this may be used to map that ID to an entry for that user.
     */
    identityMapper?: pulumi.Input<string>;
    /**
     * Specifies the path to a JAAS (Java Authentication and Authorization Service) configuration file that provides the
     * information that the JVM should use for Kerberos processing.
     */
    jaasConfigFile?: pulumi.Input<string>;
    /**
     * Specifies the address of the KDC that is to be used for Kerberos processing.
     */
    kdcAddress?: pulumi.Input<string>;
    /**
     * Specifies the Kerberos service principal that the Directory Server will use to identify itself to the KDC.
     */
    kerberosServicePrincipal?: pulumi.Input<string>;
    /**
     * Specifies which key manager provider should be used to obtain a client certificate to present to the validation server
     * when performing HTTPS communication. This may be left undefined if communication will not be secured with HTTPS, or if
     * there is no need to present a client certificate to the validation service.
     */
    keyManagerProvider?: pulumi.Input<string>;
    /**
     * Specifies the keytab file that should be used for Kerberos processing.
     */
    keytab?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum length of time that a one-time password value should be considered valid.
     */
    otpValidityDuration?: pulumi.Input<string>;
    /**
     * Indicates whether to prevent clients from re-using TOTP passwords.
     */
    preventTotpReuse?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `digest-md5`: Specifies the realm that is to be used by the server for DIGEST-MD5
     * authentication. - `gssapi`: Specifies the realm to be used for GSSAPI authentication.
     */
    realm?: pulumi.Input<string>;
    /**
     * Indicates whether bind requests will be required to have both an OAuth access token (in the "auth" element of the bind
     * request) and an OpenID Connect ID token (in the "pingidentityidtoken" element of the bind request).
     */
    requireBothAccessTokenAndIdToken?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `unboundid-totp`: Indicates whether to require a static password (as might be
     * held in the userPassword attribute, or whatever password attribute is defined in the password policy governing the user)
     * in addition to the one-time password. - `unboundid-yubikey-otp`: Indicates whether a user will be required to provide a
     * static password when authenticating via the UNBOUNDID-YUBIKEY-OTP SASL mechanism.
     */
    requireStaticPassword?: pulumi.Input<boolean>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.DefaultSaslMechanismHandlerRequiredAction>[]>;
    /**
     * When the `type` attribute is set to: - `digest-md5`: Specifies the DNS-resolvable fully-qualified domain name for the
     * server that is used when validating the digest-uri parameter during the authentication process. - `oauth-bearer`: The
     * fully-qualified name that clients are expected to use when communicating with the server. - `gssapi`: Specifies the
     * DNS-resolvable fully-qualified domain name for the system.
     */
    serverFqdn?: pulumi.Input<string>;
    /**
     * The name or OID of the attribute that will be used to hold the shared secret key used during TOTP processing.
     */
    sharedSecretAttributeType?: pulumi.Input<string>;
    /**
     * The duration of the time interval used for TOTP processing.
     */
    timeIntervalDuration?: pulumi.Input<string>;
    /**
     * Specifies which trust manager provider should be used to determine whether to trust the certificate presented by the
     * server when performing HTTPS communication. This may be left undefined if HTTPS communication is not needed, or if the
     * validation service presents a certificate that is trusted by the default JVM configuration (which should be the case for
     * the validation servers that Yubico provides, but may not be the case if an alternate validation server is configured).
     */
    trustManagerProvider?: pulumi.Input<string>;
    /**
     * The type of SASL Mechanism Handler resource. Options are ['unboundid-ms-chap-v2', 'unboundid-totp',
     * 'unboundid-yubikey-otp', 'external', 'digest-md5', 'plain', 'unboundid-delivered-otp', 'unboundid-external-auth',
     * 'anonymous', 'cram-md5', 'oauth-bearer', 'unboundid-certificate-plus-password', 'gssapi', 'third-party']
     */
    type?: pulumi.Input<string>;
    /**
     * Indicates whether to validate the OAuth access token in addition to the OpenID Connect ID token in OAUTHBEARER bind
     * requests that contain both types of tokens.
     */
    validateAccessTokenWhenIdTokenIsAlsoProvided?: pulumi.Input<string>;
    /**
     * The API key needed to verify signatures generated by the YubiKey validation server. A client ID and API key may be
     * obtained for free from https://upgrade.yubico.com/getapikey/.
     */
    yubikeyApiKey?: pulumi.Input<string>;
    /**
     * The passphrase provider to use to obtain the API key needed to verify signatures generated by the YubiKey validation
     * server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.
     */
    yubikeyApiKeyPassphraseProvider?: pulumi.Input<string>;
    /**
     * The client ID to include in requests to the YubiKey validation server. A client ID and API key may be obtained for free
     * from https://upgrade.yubico.com/getapikey/.
     */
    yubikeyClientId?: pulumi.Input<string>;
    /**
     * The base URL of the validation server to use to verify one-time passwords. You should only need to change the value if
     * you wish to use your own validation server instead of using one of the Yubico servers. The server must use the YubiKey
     * Validation Protocol version 2.0.
     */
    yubikeyValidationServerBaseUrls?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a DefaultSaslMechanismHandler resource.
 */
export interface DefaultSaslMechanismHandlerArgs {
    /**
     * An access token validator that will ensure that each presented OAuth access token is authentic and trustworthy. It must
     * be configured with an identity mapper that will be used to map the access token to a local entry.
     */
    accessTokenValidators?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The number of adjacent time intervals (both before and after the current time) that should be checked when performing
     * authentication.
     */
    adjacentIntervalsToCheck?: pulumi.Input<number>;
    /**
     * The set of OAuth scopes that will all be required for any access tokens that will be allowed for authentication.
     */
    allRequiredScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether or not to allow a null value for the server-fqdn.
     */
    allowNullServerFqdn?: pulumi.Input<boolean>;
    /**
     * Specifies the supported quality of protection (QoP) levels that clients will be permitted to request when performing
     * GSSAPI authentication.
     */
    allowedQualityOfProtections?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `oauth-bearer`: The identity mapper that will be used to map an alternate
     * authorization identity (provided in the GS2 header of the encoded OAUTHBEARER bind request credentials) to the
     * corresponding local entry. - `gssapi`: Specifies the name of the identity mapper that is to be used with this SASL
     * mechanism handler to map the alternate authorization identity (if provided, and if different from the Kerberos principal
     * used as the authentication identity) to the corresponding user in the directory. If no value is specified, then the
     * mapper specified in the identity-mapper configuration property will be used.
     */
    alternateAuthorizationIdentityMapper?: pulumi.Input<string>;
    /**
     * The set of OAuth scopes that a token may have to be allowed for authentication.
     */
    anyRequiredScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of the attribute to hold user certificates.
     */
    certificateAttribute?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `external`: Specifies the name of the certificate mapper that should be used to
     * match client certificates to user entries. - `unboundid-certificate-plus-password`: The certificate mapper that will be
     * used to identify the target user based on the certificate that was presented to the server.
     */
    certificateMapper?: pulumi.Input<string>;
    /**
     * Indicates whether to attempt to validate the peer certificate against a certificate held in the user's entry.
     */
    certificateValidationPolicy?: pulumi.Input<string>;
    /**
     * A description for this SASL Mechanism Handler
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether to enable debugging for the Java GSSAPI provider. Debug information will be written to standard
     * output, which should be captured in the server.out log file.
     */
    enableDebug?: pulumi.Input<boolean>;
    /**
     * Indicates whether the SASL mechanism handler is enabled for use.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party SASL Mechanism Handler. Each configuration
     * property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party SASL Mechanism Handler.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * Specifies the role that should be declared for the server in the generated JAAS configuration file.
     */
    gssapiRole?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. The maximum length of time to wait to obtain an HTTP connection.
     */
    httpConnectTimeout?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 9.2.0.0+. A reference to an HTTP proxy server that should be used for
     * requests sent to the YubiKey validation service.
     */
    httpProxyExternalServer?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. The maximum length of time to wait for a response to an HTTP
     * request.
     */
    httpResponseTimeout?: pulumi.Input<string>;
    /**
     * An ID token validator that will ensure that each presented OpenID Connect ID token is authentic and trustworthy, and
     * that will map the token to a local entry.
     */
    idTokenValidators?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - One of [`unboundid-totp`, `unboundid-yubikey-otp`, `unboundid-delivered-otp`]:
     * The identity mapper that should be used to identify the user(s) targeted in the authentication and/or authorization
     * identities contained in the bind request. This will only be used for "u:"-style identities. - One of [`digest-md5`,
     * `plain`]: Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to match the
     * authentication or authorization ID included in the SASL bind request to the corresponding user in the directory. -
     * `unboundid-ms-chap-v2`: The identity mapper that should be used to identify the entry associated with the username
     * provided in the bind request. - `unboundid-external-auth`: The identity mapper that should be used to identify the user
     * targeted by the authentication ID contained in the bind request. This will only be used for "u:"-style authentication ID
     * values. - `cram-md5`: Specifies the name of the identity mapper used with this SASL mechanism handler to match the
     * authentication ID included in the SASL bind request to the corresponding user in the directory. - `gssapi`: Specifies
     * the name of the identity mapper that is to be used with this SASL mechanism handler to match the Kerberos principal
     * included in the SASL bind request to the corresponding user in the directory. - `third-party`: The identity mapper that
     * may be used to map usernames to user entries. If the custom SASL mechanism involves a username or some other form of
     * authentication and/or authorization identity, then this may be used to map that ID to an entry for that user.
     */
    identityMapper?: pulumi.Input<string>;
    /**
     * Specifies the path to a JAAS (Java Authentication and Authorization Service) configuration file that provides the
     * information that the JVM should use for Kerberos processing.
     */
    jaasConfigFile?: pulumi.Input<string>;
    /**
     * Specifies the address of the KDC that is to be used for Kerberos processing.
     */
    kdcAddress?: pulumi.Input<string>;
    /**
     * Specifies the Kerberos service principal that the Directory Server will use to identify itself to the KDC.
     */
    kerberosServicePrincipal?: pulumi.Input<string>;
    /**
     * Specifies which key manager provider should be used to obtain a client certificate to present to the validation server
     * when performing HTTPS communication. This may be left undefined if communication will not be secured with HTTPS, or if
     * there is no need to present a client certificate to the validation service.
     */
    keyManagerProvider?: pulumi.Input<string>;
    /**
     * Specifies the keytab file that should be used for Kerberos processing.
     */
    keytab?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * The maximum length of time that a one-time password value should be considered valid.
     */
    otpValidityDuration?: pulumi.Input<string>;
    /**
     * Indicates whether to prevent clients from re-using TOTP passwords.
     */
    preventTotpReuse?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `digest-md5`: Specifies the realm that is to be used by the server for DIGEST-MD5
     * authentication. - `gssapi`: Specifies the realm to be used for GSSAPI authentication.
     */
    realm?: pulumi.Input<string>;
    /**
     * Indicates whether bind requests will be required to have both an OAuth access token (in the "auth" element of the bind
     * request) and an OpenID Connect ID token (in the "pingidentityidtoken" element of the bind request).
     */
    requireBothAccessTokenAndIdToken?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `unboundid-totp`: Indicates whether to require a static password (as might be
     * held in the userPassword attribute, or whatever password attribute is defined in the password policy governing the user)
     * in addition to the one-time password. - `unboundid-yubikey-otp`: Indicates whether a user will be required to provide a
     * static password when authenticating via the UNBOUNDID-YUBIKEY-OTP SASL mechanism.
     */
    requireStaticPassword?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `digest-md5`: Specifies the DNS-resolvable fully-qualified domain name for the
     * server that is used when validating the digest-uri parameter during the authentication process. - `oauth-bearer`: The
     * fully-qualified name that clients are expected to use when communicating with the server. - `gssapi`: Specifies the
     * DNS-resolvable fully-qualified domain name for the system.
     */
    serverFqdn?: pulumi.Input<string>;
    /**
     * The name or OID of the attribute that will be used to hold the shared secret key used during TOTP processing.
     */
    sharedSecretAttributeType?: pulumi.Input<string>;
    /**
     * The duration of the time interval used for TOTP processing.
     */
    timeIntervalDuration?: pulumi.Input<string>;
    /**
     * Specifies which trust manager provider should be used to determine whether to trust the certificate presented by the
     * server when performing HTTPS communication. This may be left undefined if HTTPS communication is not needed, or if the
     * validation service presents a certificate that is trusted by the default JVM configuration (which should be the case for
     * the validation servers that Yubico provides, but may not be the case if an alternate validation server is configured).
     */
    trustManagerProvider?: pulumi.Input<string>;
    /**
     * Indicates whether to validate the OAuth access token in addition to the OpenID Connect ID token in OAUTHBEARER bind
     * requests that contain both types of tokens.
     */
    validateAccessTokenWhenIdTokenIsAlsoProvided?: pulumi.Input<string>;
    /**
     * The API key needed to verify signatures generated by the YubiKey validation server. A client ID and API key may be
     * obtained for free from https://upgrade.yubico.com/getapikey/.
     */
    yubikeyApiKey?: pulumi.Input<string>;
    /**
     * The passphrase provider to use to obtain the API key needed to verify signatures generated by the YubiKey validation
     * server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.
     */
    yubikeyApiKeyPassphraseProvider?: pulumi.Input<string>;
    /**
     * The client ID to include in requests to the YubiKey validation server. A client ID and API key may be obtained for free
     * from https://upgrade.yubico.com/getapikey/.
     */
    yubikeyClientId?: pulumi.Input<string>;
    /**
     * The base URL of the validation server to use to verify one-time passwords. You should only need to change the value if
     * you wish to use your own validation server instead of using one of the Yubico servers. The server must use the YubiKey
     * Validation Protocol version 2.0.
     */
    yubikeyValidationServerBaseUrls?: pulumi.Input<pulumi.Input<string>[]>;
}
