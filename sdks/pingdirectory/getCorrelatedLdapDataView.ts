// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCorrelatedLdapDataView(args: GetCorrelatedLdapDataViewArgs, opts?: pulumi.InvokeOptions): Promise<GetCorrelatedLdapDataViewResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getCorrelatedLdapDataView:getCorrelatedLdapDataView", {
        "name": args.name,
        "scimResourceTypeName": args.scimResourceTypeName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCorrelatedLdapDataView.
 */
export interface GetCorrelatedLdapDataViewArgs {
    name: string;
    scimResourceTypeName: string;
}

/**
 * A collection of values returned by getCorrelatedLdapDataView.
 */
export interface GetCorrelatedLdapDataViewResult {
    readonly auxiliaryLdapObjectclasses: string[];
    readonly createDnPattern: string;
    readonly id: string;
    readonly includeBaseDn: string;
    readonly includeFilters: string[];
    readonly includeOperationalAttributes: string[];
    readonly name: string;
    readonly primaryCorrelationAttribute: string;
    readonly scimResourceTypeName: string;
    readonly secondaryCorrelationAttribute: string;
    readonly structuralLdapObjectclass: string;
    readonly type: string;
}
export function getCorrelatedLdapDataViewOutput(args: GetCorrelatedLdapDataViewOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCorrelatedLdapDataViewResult> {
    return pulumi.output(args).apply((a: any) => getCorrelatedLdapDataView(a, opts))
}

/**
 * A collection of arguments for invoking getCorrelatedLdapDataView.
 */
export interface GetCorrelatedLdapDataViewOutputArgs {
    name: pulumi.Input<string>;
    scimResourceTypeName: pulumi.Input<string>;
}
