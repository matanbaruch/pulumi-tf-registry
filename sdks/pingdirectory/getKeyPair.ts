// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKeyPair(args: GetKeyPairArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyPairResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getKeyPair:getKeyPair", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKeyPair.
 */
export interface GetKeyPairArgs {
    name: string;
}

/**
 * A collection of values returned by getKeyPair.
 */
export interface GetKeyPairResult {
    readonly certificateChain: string;
    readonly id: string;
    readonly keyAlgorithm: string;
    readonly name: string;
    readonly privateKey: string;
    readonly selfSignedCertificateValidity: string;
    readonly subjectDn: string;
    readonly type: string;
}
export function getKeyPairOutput(args: GetKeyPairOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyPairResult> {
    return pulumi.output(args).apply((a: any) => getKeyPair(a, opts))
}

/**
 * A collection of arguments for invoking getKeyPair.
 */
export interface GetKeyPairOutputArgs {
    name: pulumi.Input<string>;
}
