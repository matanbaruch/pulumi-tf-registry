// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getJsonFieldConstraints(args: GetJsonFieldConstraintsArgs, opts?: pulumi.InvokeOptions): Promise<GetJsonFieldConstraintsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getJsonFieldConstraints:getJsonFieldConstraints", {
        "jsonAttributeConstraintsName": args.jsonAttributeConstraintsName,
        "jsonField": args.jsonField,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getJsonFieldConstraints.
 */
export interface GetJsonFieldConstraintsArgs {
    jsonAttributeConstraintsName: string;
    jsonField: string;
}

/**
 * A collection of values returned by getJsonFieldConstraints.
 */
export interface GetJsonFieldConstraintsResult {
    readonly allowEmptyObject: boolean;
    readonly allowNullValue: boolean;
    readonly allowedValueRegularExpressions: string[];
    readonly allowedValues: string[];
    readonly cacheMode: string;
    readonly description: string;
    readonly id: string;
    readonly indexEntryLimit: number;
    readonly indexValues: boolean;
    readonly isArray: string;
    readonly isRequired: boolean;
    readonly jsonAttributeConstraintsName: string;
    readonly jsonField: string;
    readonly maximumNumericValue: string;
    readonly maximumValueCount: number;
    readonly maximumValueLength: number;
    readonly minimumNumericValue: string;
    readonly minimumValueCount: number;
    readonly minimumValueLength: number;
    readonly primeIndex: boolean;
    readonly tokenizeValues: boolean;
    readonly type: string;
    readonly valueType: string;
}
export function getJsonFieldConstraintsOutput(args: GetJsonFieldConstraintsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJsonFieldConstraintsResult> {
    return pulumi.output(args).apply((a: any) => getJsonFieldConstraints(a, opts))
}

/**
 * A collection of arguments for invoking getJsonFieldConstraints.
 */
export interface GetJsonFieldConstraintsOutputArgs {
    jsonAttributeConstraintsName: pulumi.Input<string>;
    jsonField: pulumi.Input<string>;
}
