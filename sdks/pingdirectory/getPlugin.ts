// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPlugin(args: GetPluginArgs, opts?: pulumi.InvokeOptions): Promise<GetPluginResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getPlugin:getPlugin", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlugin.
 */
export interface GetPluginArgs {
    name: string;
}

/**
 * A collection of values returned by getPlugin.
 */
export interface GetPluginResult {
    readonly additionalUserMappingScimFilter: string;
    readonly agentxAddress: string;
    readonly agentxPort: number;
    readonly allowLaxPassThroughAuthenticationPasswords: boolean;
    readonly allowedRequestControls: string[];
    readonly alwaysMapResponses: boolean;
    readonly apiUrl: string;
    readonly append: boolean;
    readonly attributeTypes: string[];
    readonly authUrl: string;
    readonly baseDns: string[];
    readonly bindDnPattern: string;
    readonly changelogPasswordEncryptionKey: string;
    readonly changelogPasswordEncryptionKeyPassphraseProvider: string;
    readonly collectionInterval: string;
    readonly connectRetryMaxWait: string;
    readonly connectionCriteria: string;
    readonly contextName: string;
    readonly customDatetimeFormat: string;
    readonly customTimezone: string;
    readonly datetimeAttribute: string;
    readonly datetimeFormat: string;
    readonly datetimeJsonField: string;
    readonly defaultAuthPasswordStorageSchemes: string[];
    readonly defaultUserPasswordStorageSchemes: string[];
    readonly delay: string;
    readonly delayAfterAlert: string;
    readonly delayPostGc: string;
    readonly description: string;
    readonly dnMaps: string[];
    readonly emptyInsteadOfZero: boolean;
    readonly enableAttributeMapping: boolean;
    readonly enableControlMapping: boolean;
    readonly enableProfilingOnStartup: boolean;
    readonly enabled: boolean;
    readonly encryptionSettingsDefinitionId: string;
    readonly entryCacheInfo: string;
    readonly environmentId: string;
    readonly excludeAttributes: string[];
    readonly excludeBaseDns: string[];
    readonly excludeFilters: string[];
    readonly expirationOffset: string;
    readonly extensionArguments: string[];
    readonly extensionClass: string;
    readonly filterPrefix: string;
    readonly filterSuffix: string;
    readonly filters: string[];
    readonly gaugeInfo: string;
    readonly generateCollectorFiles: boolean;
    readonly headerPrefixPerColumn: boolean;
    readonly histogramCategoryBoundaries: string[];
    readonly histogramFormat: string;
    readonly histogramOpTypes: string[];
    readonly hostInfos: string[];
    readonly httpProxyExternalServer: string;
    readonly id: string;
    readonly ignoredPasswordPolicyStateErrorConditions: string[];
    readonly includeAttributes: string[];
    readonly includeBaseDns: string[];
    readonly includeFilters: string[];
    readonly includeQueueTime: boolean;
    readonly includedLdapApplications: string[];
    readonly includedLdapStats: string[];
    readonly includedLocalEntryBaseDns: string[];
    readonly includedResourceStats: string[];
    readonly initialConnections: number;
    readonly invokeForFailedBinds: boolean;
    readonly invokeForInternalOperations: boolean;
    readonly invokeGcDayOfWeeks: string[];
    readonly invokeGcTimeUtcs: string[];
    readonly ldapChangelogInfo: string;
    readonly ldapInfo: string;
    readonly linesBetweenHeader: number;
    readonly localDbBackendInfo: string;
    readonly logFile: string;
    readonly logFileFormat: string;
    readonly logFilePermissions: string;
    readonly logInterval: string;
    readonly loggingErrorBehavior: string;
    readonly lowerBound: number;
    readonly mapAttributes: string[];
    readonly maxConnections: number;
    readonly maxSearchResultEntriesToUpdate: number;
    readonly maxUpdateFrequency: string;
    readonly maxUpdatesPerSecond: number;
    readonly maximumMembershipUpdatesPerModify: number;
    readonly multiValuedAttributeBehavior: string;
    readonly multipleAttributeBehavior: string;
    readonly multipleValuePatternBehavior: string;
    readonly name: string;
    readonly numDeleteThreads: number;
    readonly numMostExpensivePhasesShown: number;
    readonly numThreads: number;
    readonly numWorkerThreads: number;
    readonly oauthClientId: string;
    readonly oauthClientSecret: string;
    readonly oauthClientSecretPassphraseProvider: string;
    readonly operationTypes: string[];
    readonly outputFile: string;
    readonly overrideLocalPassword: boolean;
    readonly passThroughAuthenticationHandler: string;
    readonly peerServerPriorityIndex: number;
    readonly perApplicationLdapStats: string;
    readonly pingInterval: string;
    readonly pluginTypes: string[];
    readonly pollingInterval: string;
    readonly preventAddingGroupsAsInvertedStaticGroupMembers: boolean;
    readonly preventAddingMembersToNonexistentGroups: boolean;
    readonly preventConflictsWithSoftDeletedEntries: boolean;
    readonly preventNestingNonexistentGroups: boolean;
    readonly previousFileExtension: string;
    readonly profileAction: string;
    readonly profileDirectory: string;
    readonly profileSampleInterval: string;
    readonly purgeBehavior: string;
    readonly readOperationSupport: string;
    readonly referralBaseUrls: string[];
    readonly replicationInfo: string;
    readonly requestCriteria: string;
    readonly resourceType: string;
    readonly retainFilesSparselyByAge: boolean;
    readonly retentionPolicies: string[];
    readonly rotationListeners: string[];
    readonly rotationPolicies: string[];
    readonly sampleInterval: string;
    readonly sanitize: boolean;
    readonly scope: string;
    readonly scriptArguments: string[];
    readonly scriptClass: string;
    readonly searchBaseDn: string;
    readonly searchFilterPattern: string;
    readonly separateMonitorEntryPerTrackedApplication: boolean;
    readonly serverAccessMode: string;
    readonly serverInfo: string;
    readonly servers: string[];
    readonly sessionTimeout: string;
    readonly sourceAttribute: string;
    readonly sourceAttributeRemovalBehavior: string;
    readonly sourceDn: string;
    readonly statusSummaryInfo: string;
    readonly suppressIfIdle: boolean;
    readonly targetAttribute: string;
    readonly targetAttributeExistsDuringInitialPopulationBehavior: string;
    readonly targetDn: string;
    readonly traditionalStaticGroupObjectClass: string;
    readonly tryLocalBind: boolean;
    readonly types: string[];
    readonly updateInterval: string;
    readonly updateLocalPassword: boolean;
    readonly updateLocalPasswordDn: string;
    readonly updateSourceAttributeBehavior: string;
    readonly updateTargetAttributeBehavior: string;
    readonly updatedEntryNewlyMatchesCriteriaBehavior: string;
    readonly updatedEntryNoLongerMatchesCriteriaBehavior: string;
    readonly upperBound: number;
    readonly userMappingLocalAttributes: string[];
    readonly userMappingRemoteJsonFields: string[];
    readonly valuePatterns: string[];
}
export function getPluginOutput(args: GetPluginOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPluginResult> {
    return pulumi.output(args).apply((a: any) => getPlugin(a, opts))
}

/**
 * A collection of arguments for invoking getPlugin.
 */
export interface GetPluginOutputArgs {
    name: pulumi.Input<string>;
}
