// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getScimSubattribute(args: GetScimSubattributeArgs, opts?: pulumi.InvokeOptions): Promise<GetScimSubattributeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getScimSubattribute:getScimSubattribute", {
        "name": args.name,
        "scimAttributeName": args.scimAttributeName,
        "scimSchemaName": args.scimSchemaName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getScimSubattribute.
 */
export interface GetScimSubattributeArgs {
    name: string;
    scimAttributeName: string;
    scimSchemaName: string;
}

/**
 * A collection of values returned by getScimSubattribute.
 */
export interface GetScimSubattributeResult {
    readonly canonicalValues: string[];
    readonly caseExact: boolean;
    readonly description: string;
    readonly id: string;
    readonly multiValued: boolean;
    readonly mutability: string;
    readonly name: string;
    readonly referenceTypes: string[];
    readonly required: boolean;
    readonly resourceType: string;
    readonly returned: string;
    readonly scimAttributeName: string;
    readonly scimSchemaName: string;
    readonly type: string;
}
export function getScimSubattributeOutput(args: GetScimSubattributeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScimSubattributeResult> {
    return pulumi.output(args).apply((a: any) => getScimSubattribute(a, opts))
}

/**
 * A collection of arguments for invoking getScimSubattribute.
 */
export interface GetScimSubattributeOutputArgs {
    name: pulumi.Input<string>;
    scimAttributeName: pulumi.Input<string>;
    scimSchemaName: pulumi.Input<string>;
}
