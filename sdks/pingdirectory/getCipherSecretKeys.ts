// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCipherSecretKeys(args: GetCipherSecretKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetCipherSecretKeysResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getCipherSecretKeys:getCipherSecretKeys", {
        "filter": args.filter,
        "serverInstanceName": args.serverInstanceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCipherSecretKeys.
 */
export interface GetCipherSecretKeysArgs {
    filter?: string;
    serverInstanceName: string;
}

/**
 * A collection of values returned by getCipherSecretKeys.
 */
export interface GetCipherSecretKeysResult {
    readonly filter?: string;
    readonly id: string;
    readonly ids: string[];
    readonly serverInstanceName: string;
}
export function getCipherSecretKeysOutput(args: GetCipherSecretKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCipherSecretKeysResult> {
    return pulumi.output(args).apply((a: any) => getCipherSecretKeys(a, opts))
}

/**
 * A collection of arguments for invoking getCipherSecretKeys.
 */
export interface GetCipherSecretKeysOutputArgs {
    filter?: pulumi.Input<string>;
    serverInstanceName: pulumi.Input<string>;
}
