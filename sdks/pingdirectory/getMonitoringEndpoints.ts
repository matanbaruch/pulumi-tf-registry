// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMonitoringEndpoints(args?: GetMonitoringEndpointsArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoringEndpointsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getMonitoringEndpoints:getMonitoringEndpoints", {
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonitoringEndpoints.
 */
export interface GetMonitoringEndpointsArgs {
    filter?: string;
}

/**
 * A collection of values returned by getMonitoringEndpoints.
 */
export interface GetMonitoringEndpointsResult {
    readonly filter?: string;
    readonly id: string;
    readonly ids: string[];
}
export function getMonitoringEndpointsOutput(args?: GetMonitoringEndpointsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitoringEndpointsResult> {
    return pulumi.output(args).apply((a: any) => getMonitoringEndpoints(a, opts))
}

/**
 * A collection of arguments for invoking getMonitoringEndpoints.
 */
export interface GetMonitoringEndpointsOutputArgs {
    filter?: pulumi.Input<string>;
}
