// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSaslMechanismHandler(args: GetSaslMechanismHandlerArgs, opts?: pulumi.InvokeOptions): Promise<GetSaslMechanismHandlerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getSaslMechanismHandler:getSaslMechanismHandler", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSaslMechanismHandler.
 */
export interface GetSaslMechanismHandlerArgs {
    name: string;
}

/**
 * A collection of values returned by getSaslMechanismHandler.
 */
export interface GetSaslMechanismHandlerResult {
    readonly accessTokenValidators: string[];
    readonly adjacentIntervalsToCheck: number;
    readonly allRequiredScopes: string[];
    readonly allowNullServerFqdn: boolean;
    readonly allowedQualityOfProtections: string[];
    readonly alternateAuthorizationIdentityMapper: string;
    readonly anyRequiredScopes: string[];
    readonly certificateAttribute: string;
    readonly certificateMapper: string;
    readonly certificateValidationPolicy: string;
    readonly description: string;
    readonly enableDebug: boolean;
    readonly enabled: boolean;
    readonly extensionArguments: string[];
    readonly extensionClass: string;
    readonly gssapiRole: string;
    readonly httpConnectTimeout: string;
    readonly httpProxyExternalServer: string;
    readonly httpResponseTimeout: string;
    readonly id: string;
    readonly idTokenValidators: string[];
    readonly identityMapper: string;
    readonly jaasConfigFile: string;
    readonly kdcAddress: string;
    readonly kerberosServicePrincipal: string;
    readonly keyManagerProvider: string;
    readonly keytab: string;
    readonly name: string;
    readonly otpValidityDuration: string;
    readonly preventTotpReuse: boolean;
    readonly realm: string;
    readonly requireBothAccessTokenAndIdToken: boolean;
    readonly requireStaticPassword: boolean;
    readonly serverFqdn: string;
    readonly sharedSecretAttributeType: string;
    readonly timeIntervalDuration: string;
    readonly trustManagerProvider: string;
    readonly type: string;
    readonly validateAccessTokenWhenIdTokenIsAlsoProvided: string;
    readonly yubikeyApiKey: string;
    readonly yubikeyApiKeyPassphraseProvider: string;
    readonly yubikeyClientId: string;
    readonly yubikeyValidationServerBaseUrls: string[];
}
export function getSaslMechanismHandlerOutput(args: GetSaslMechanismHandlerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSaslMechanismHandlerResult> {
    return pulumi.output(args).apply((a: any) => getSaslMechanismHandler(a, opts))
}

/**
 * A collection of arguments for invoking getSaslMechanismHandler.
 */
export interface GetSaslMechanismHandlerOutputArgs {
    name: pulumi.Input<string>;
}
