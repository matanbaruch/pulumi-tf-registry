// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFailureLockoutAction(args: GetFailureLockoutActionArgs, opts?: pulumi.InvokeOptions): Promise<GetFailureLockoutActionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getFailureLockoutAction:getFailureLockoutAction", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFailureLockoutAction.
 */
export interface GetFailureLockoutActionArgs {
    name: string;
}

/**
 * A collection of values returned by getFailureLockoutAction.
 */
export interface GetFailureLockoutActionResult {
    readonly allowBlockingDelay: boolean;
    readonly delay: string;
    readonly description: string;
    readonly generateAccountStatusNotification: boolean;
    readonly id: string;
    readonly name: string;
    readonly type: string;
}
export function getFailureLockoutActionOutput(args: GetFailureLockoutActionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFailureLockoutActionResult> {
    return pulumi.output(args).apply((a: any) => getFailureLockoutAction(a, opts))
}

/**
 * A collection of arguments for invoking getFailureLockoutAction.
 */
export interface GetFailureLockoutActionOutputArgs {
    name: pulumi.Input<string>;
}
