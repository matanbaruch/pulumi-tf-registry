// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLdapSdkDebugLogger(opts?: pulumi.InvokeOptions): Promise<GetLdapSdkDebugLoggerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getLdapSdkDebugLogger:getLdapSdkDebugLogger", {
    }, opts, utilities.getPackage());
}

/**
 * A collection of values returned by getLdapSdkDebugLogger.
 */
export interface GetLdapSdkDebugLoggerResult {
    readonly append: boolean;
    readonly asynchronous: boolean;
    readonly autoFlush: boolean;
    readonly bufferSize: string;
    readonly compressionMechanism: string;
    readonly debugLevel: string;
    readonly debugTypes: string[];
    readonly description: string;
    readonly enabled: boolean;
    readonly encryptLog: boolean;
    readonly encryptionSettingsDefinitionId: string;
    readonly id: string;
    readonly includeStackTrace: boolean;
    readonly logFile: string;
    readonly logFilePermissions: string;
    readonly loggingErrorBehavior: string;
    readonly queueSize: number;
    readonly retentionPolicies: string[];
    readonly rotationListeners: string[];
    readonly rotationPolicies: string[];
    readonly signLog: boolean;
    readonly timeInterval: string;
    readonly timestampPrecision: string;
    readonly type: string;
}
export function getLdapSdkDebugLoggerOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetLdapSdkDebugLoggerResult> {
    return pulumi.output(getLdapSdkDebugLogger(opts))
}
