// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSoftDeletePolicy(args: GetSoftDeletePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetSoftDeletePolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getSoftDeletePolicy:getSoftDeletePolicy", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSoftDeletePolicy.
 */
export interface GetSoftDeletePolicyArgs {
    name: string;
}

/**
 * A collection of values returned by getSoftDeletePolicy.
 */
export interface GetSoftDeletePolicyResult {
    readonly autoSoftDeleteConnectionCriteria: string;
    readonly autoSoftDeleteRequestCriteria: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly softDeleteRetainNumberOfEntries: number;
    readonly softDeleteRetentionTime: string;
    readonly type: string;
}
export function getSoftDeletePolicyOutput(args: GetSoftDeletePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSoftDeletePolicyResult> {
    return pulumi.output(args).apply((a: any) => getSoftDeletePolicy(a, opts))
}

/**
 * A collection of arguments for invoking getSoftDeletePolicy.
 */
export interface GetSoftDeletePolicyOutputArgs {
    name: pulumi.Input<string>;
}
