// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DefaultAccessControlHandler extends pulumi.CustomResource {
    /**
     * Get an existing DefaultAccessControlHandler resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultAccessControlHandlerState, opts?: pulumi.CustomResourceOptions): DefaultAccessControlHandler {
        return new DefaultAccessControlHandler(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/defaultAccessControlHandler:DefaultAccessControlHandler';

    /**
     * Returns true if the given object is an instance of DefaultAccessControlHandler.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultAccessControlHandler {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultAccessControlHandler.__pulumiType;
    }

    /**
     * Specifies the OIDs of any additional controls (not covered by the allowed-bind-control property) that should be
     * permitted in bind requests.
     */
    public readonly allowedBindControlOids!: pulumi.Output<string[]>;
    /**
     * Specifies a set of controls that clients should be allowed to include in bind requests. As bind requests are evaluated
     * as the unauthenticated user, any controls included in this set will be permitted for any bind attempt. If you wish to
     * grant permission for any bind controls not listed here, then the allowed-bind-control-oid property may be used to
     * accomplish that.
     */
    public readonly allowedBindControls!: pulumi.Output<string[]>;
    /**
     * Indicates whether this Access Control Handler is enabled. If set to FALSE, then no access control is enforced, and any
     * client (including unauthenticated or anonymous clients) could be allowed to perform any operation if not subject to
     * other restrictions, such as those enforced by the privilege subsystem.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * Supported in PingDirectory product version 10.1.0.0+. Indicates whether the server should ensure that the requester has
     * the "add" right for each attribute included in an add request, and is not denied "add" rights for any attributes in the
     * request. Historically, any user who has been granted the "add" right has been allowed to create an entry of any type,
     * even for add requests that include attributes for which they do not have the "add" right (that is, the "targetattr"
     * portion of an access control rule was not considered when evaluating access control rights for add operations). This is
     * still the default behavior in order to preserve backward compatibility, but setting the value of this property to true
     * will cause the server to only permit add operations in which the requester has the "add" right for each of the
     * attributes included in the add request, and deny add operations if the requester is denied "add" rights for any
     * attributes included in the add request. It is strongly recommended that you thoroughly test your existing access control
     * configuration before enabling this setting in a production environment to identify any cases in which you may need to
     * add or augment access control rules to ensure that authorized users are allowed to add the entries they need to be able
     * to create.
     */
    public readonly evaluateTargetAttributeRightsForAddOperations!: pulumi.Output<boolean>;
    /**
     * Defines global access control rules.
     */
    public readonly globalAcis!: pulumi.Output<string[]>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.DefaultAccessControlHandlerRequiredAction[]>;
    /**
     * The type of Access Control Handler resource. Options are ['dsee-compat']
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DefaultAccessControlHandler resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DefaultAccessControlHandlerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultAccessControlHandlerArgs | DefaultAccessControlHandlerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultAccessControlHandlerState | undefined;
            resourceInputs["allowedBindControlOids"] = state ? state.allowedBindControlOids : undefined;
            resourceInputs["allowedBindControls"] = state ? state.allowedBindControls : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["evaluateTargetAttributeRightsForAddOperations"] = state ? state.evaluateTargetAttributeRightsForAddOperations : undefined;
            resourceInputs["globalAcis"] = state ? state.globalAcis : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DefaultAccessControlHandlerArgs | undefined;
            resourceInputs["allowedBindControlOids"] = args ? args.allowedBindControlOids : undefined;
            resourceInputs["allowedBindControls"] = args ? args.allowedBindControls : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["evaluateTargetAttributeRightsForAddOperations"] = args ? args.evaluateTargetAttributeRightsForAddOperations : undefined;
            resourceInputs["globalAcis"] = args ? args.globalAcis : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultAccessControlHandler.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DefaultAccessControlHandler resources.
 */
export interface DefaultAccessControlHandlerState {
    /**
     * Specifies the OIDs of any additional controls (not covered by the allowed-bind-control property) that should be
     * permitted in bind requests.
     */
    allowedBindControlOids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a set of controls that clients should be allowed to include in bind requests. As bind requests are evaluated
     * as the unauthenticated user, any controls included in this set will be permitted for any bind attempt. If you wish to
     * grant permission for any bind controls not listed here, then the allowed-bind-control-oid property may be used to
     * accomplish that.
     */
    allowedBindControls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether this Access Control Handler is enabled. If set to FALSE, then no access control is enforced, and any
     * client (including unauthenticated or anonymous clients) could be allowed to perform any operation if not subject to
     * other restrictions, such as those enforced by the privilege subsystem.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Supported in PingDirectory product version 10.1.0.0+. Indicates whether the server should ensure that the requester has
     * the "add" right for each attribute included in an add request, and is not denied "add" rights for any attributes in the
     * request. Historically, any user who has been granted the "add" right has been allowed to create an entry of any type,
     * even for add requests that include attributes for which they do not have the "add" right (that is, the "targetattr"
     * portion of an access control rule was not considered when evaluating access control rights for add operations). This is
     * still the default behavior in order to preserve backward compatibility, but setting the value of this property to true
     * will cause the server to only permit add operations in which the requester has the "add" right for each of the
     * attributes included in the add request, and deny add operations if the requester is denied "add" rights for any
     * attributes included in the add request. It is strongly recommended that you thoroughly test your existing access control
     * configuration before enabling this setting in a production environment to identify any cases in which you may need to
     * add or augment access control rules to ensure that authorized users are allowed to add the entries they need to be able
     * to create.
     */
    evaluateTargetAttributeRightsForAddOperations?: pulumi.Input<boolean>;
    /**
     * Defines global access control rules.
     */
    globalAcis?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.DefaultAccessControlHandlerRequiredAction>[]>;
    /**
     * The type of Access Control Handler resource. Options are ['dsee-compat']
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DefaultAccessControlHandler resource.
 */
export interface DefaultAccessControlHandlerArgs {
    /**
     * Specifies the OIDs of any additional controls (not covered by the allowed-bind-control property) that should be
     * permitted in bind requests.
     */
    allowedBindControlOids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a set of controls that clients should be allowed to include in bind requests. As bind requests are evaluated
     * as the unauthenticated user, any controls included in this set will be permitted for any bind attempt. If you wish to
     * grant permission for any bind controls not listed here, then the allowed-bind-control-oid property may be used to
     * accomplish that.
     */
    allowedBindControls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether this Access Control Handler is enabled. If set to FALSE, then no access control is enforced, and any
     * client (including unauthenticated or anonymous clients) could be allowed to perform any operation if not subject to
     * other restrictions, such as those enforced by the privilege subsystem.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Supported in PingDirectory product version 10.1.0.0+. Indicates whether the server should ensure that the requester has
     * the "add" right for each attribute included in an add request, and is not denied "add" rights for any attributes in the
     * request. Historically, any user who has been granted the "add" right has been allowed to create an entry of any type,
     * even for add requests that include attributes for which they do not have the "add" right (that is, the "targetattr"
     * portion of an access control rule was not considered when evaluating access control rights for add operations). This is
     * still the default behavior in order to preserve backward compatibility, but setting the value of this property to true
     * will cause the server to only permit add operations in which the requester has the "add" right for each of the
     * attributes included in the add request, and deny add operations if the requester is denied "add" rights for any
     * attributes included in the add request. It is strongly recommended that you thoroughly test your existing access control
     * configuration before enabling this setting in a production environment to identify any cases in which you may need to
     * add or augment access control rules to ensure that authorized users are allowed to add the entries they need to be able
     * to create.
     */
    evaluateTargetAttributeRightsForAddOperations?: pulumi.Input<boolean>;
    /**
     * Defines global access control rules.
     */
    globalAcis?: pulumi.Input<pulumi.Input<string>[]>;
}
