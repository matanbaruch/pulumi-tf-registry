// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DelegatedAdminAttributeCategory extends pulumi.CustomResource {
    /**
     * Get an existing DelegatedAdminAttributeCategory resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DelegatedAdminAttributeCategoryState, opts?: pulumi.CustomResourceOptions): DelegatedAdminAttributeCategory {
        return new DelegatedAdminAttributeCategory(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/delegatedAdminAttributeCategory:DelegatedAdminAttributeCategory';

    /**
     * Returns true if the given object is an instance of DelegatedAdminAttributeCategory.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DelegatedAdminAttributeCategory {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DelegatedAdminAttributeCategory.__pulumiType;
    }

    /**
     * A description for this Delegated Admin Attribute Category
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A human readable display name for this Delegated Admin Attribute Category.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Delegated Admin Attribute Categories are ordered for display based on this index from least to greatest.
     */
    public readonly displayOrderIndex!: pulumi.Output<number>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.DelegatedAdminAttributeCategoryRequiredAction[]>;
    /**
     * The type of Delegated Admin Attribute Category resource. Options are ['delegated-admin-attribute-category']
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a DelegatedAdminAttributeCategory resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DelegatedAdminAttributeCategoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DelegatedAdminAttributeCategoryArgs | DelegatedAdminAttributeCategoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DelegatedAdminAttributeCategoryState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["displayOrderIndex"] = state ? state.displayOrderIndex : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DelegatedAdminAttributeCategoryArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.displayOrderIndex === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayOrderIndex'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["displayOrderIndex"] = args ? args.displayOrderIndex : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DelegatedAdminAttributeCategory.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DelegatedAdminAttributeCategory resources.
 */
export interface DelegatedAdminAttributeCategoryState {
    /**
     * A description for this Delegated Admin Attribute Category
     */
    description?: pulumi.Input<string>;
    /**
     * A human readable display name for this Delegated Admin Attribute Category.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Delegated Admin Attribute Categories are ordered for display based on this index from least to greatest.
     */
    displayOrderIndex?: pulumi.Input<number>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.DelegatedAdminAttributeCategoryRequiredAction>[]>;
    /**
     * The type of Delegated Admin Attribute Category resource. Options are ['delegated-admin-attribute-category']
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DelegatedAdminAttributeCategory resource.
 */
export interface DelegatedAdminAttributeCategoryArgs {
    /**
     * A description for this Delegated Admin Attribute Category
     */
    description?: pulumi.Input<string>;
    /**
     * A human readable display name for this Delegated Admin Attribute Category.
     */
    displayName: pulumi.Input<string>;
    /**
     * Delegated Admin Attribute Categories are ordered for display based on this index from least to greatest.
     */
    displayOrderIndex: pulumi.Input<number>;
    /**
     * The type of Delegated Admin Attribute Category resource. Options are ['delegated-admin-attribute-category']
     */
    type?: pulumi.Input<string>;
}
