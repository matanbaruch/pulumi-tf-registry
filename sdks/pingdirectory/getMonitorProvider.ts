// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMonitorProvider(args: GetMonitorProviderArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitorProviderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getMonitorProvider:getMonitorProvider", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonitorProvider.
 */
export interface GetMonitorProviderArgs {
    name: string;
}

/**
 * A collection of values returned by getMonitorProvider.
 */
export interface GetMonitorProviderResult {
    readonly alertFrequency: string;
    readonly checkFrequency: string;
    readonly description: string;
    readonly diskDevices: string[];
    readonly enabled: boolean;
    readonly extensionArguments: string[];
    readonly extensionClass: string;
    readonly id: string;
    readonly lowSpaceErrorPercentThreshold: number;
    readonly lowSpaceErrorSizeThreshold: string;
    readonly lowSpaceWarningPercentThreshold: number;
    readonly lowSpaceWarningSizeThreshold: string;
    readonly name: string;
    readonly networkDevices: string[];
    readonly outOfSpaceErrorPercentThreshold: number;
    readonly outOfSpaceErrorSizeThreshold: string;
    readonly prolongedOutageBehavior: string;
    readonly prolongedOutageDuration: string;
    readonly systemUtilizationMonitorLogDirectory: string;
    readonly type: string;
}
export function getMonitorProviderOutput(args: GetMonitorProviderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitorProviderResult> {
    return pulumi.output(args).apply((a: any) => getMonitorProvider(a, opts))
}

/**
 * A collection of arguments for invoking getMonitorProvider.
 */
export interface GetMonitorProviderOutputArgs {
    name: pulumi.Input<string>;
}
