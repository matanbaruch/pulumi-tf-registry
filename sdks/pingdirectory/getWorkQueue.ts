// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getWorkQueue(opts?: pulumi.InvokeOptions): Promise<GetWorkQueueResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getWorkQueue:getWorkQueue", {
    }, opts, utilities.getPackage());
}

/**
 * A collection of values returned by getWorkQueue.
 */
export interface GetWorkQueueResult {
    readonly expensiveOperationCheckInterval: string;
    readonly expensiveOperationMinimumConcurrentCount: number;
    readonly expensiveOperationMinimumDumpInterval: string;
    readonly id: string;
    readonly maxOfferTime: string;
    readonly maxQueueTime: string;
    readonly maxWorkQueueCapacity: number;
    readonly monitorQueueTime: boolean;
    readonly numAdministrativeSessionWorkerThreads: number;
    readonly numQueues: number;
    readonly numWorkerThreads: number;
    readonly numWriteQueues: number;
    readonly numWriteWorkerThreads: number;
    readonly type: string;
}
export function getWorkQueueOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkQueueResult> {
    return pulumi.output(getWorkQueue(opts))
}
