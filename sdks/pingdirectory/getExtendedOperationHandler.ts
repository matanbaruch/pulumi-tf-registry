// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getExtendedOperationHandler(args: GetExtendedOperationHandlerArgs, opts?: pulumi.InvokeOptions): Promise<GetExtendedOperationHandlerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getExtendedOperationHandler:getExtendedOperationHandler", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getExtendedOperationHandler.
 */
export interface GetExtendedOperationHandlerArgs {
    name: string;
}

/**
 * A collection of values returned by getExtendedOperationHandler.
 */
export interface GetExtendedOperationHandlerResult {
    readonly adjacentIntervalsToCheck: number;
    readonly allowRemotelyProvidedCertificates: boolean;
    readonly allowedOperations: string[];
    readonly connectionCriteria: string;
    readonly defaultOtpDeliveryMechanisms: string[];
    readonly defaultPasswordGenerator: string;
    readonly defaultPasswordPolicy: string;
    readonly defaultSingleUseTokenValidityDuration: string;
    readonly defaultTokenDeliveryMechanisms: string[];
    readonly description: string;
    readonly enabled: boolean;
    readonly extensionArguments: string[];
    readonly extensionClass: string;
    readonly id: string;
    readonly identityMapper: string;
    readonly maximumPasswordsPerRequest: number;
    readonly maximumValidationAttemptsPerPassword: number;
    readonly name: string;
    readonly passwordGenerator: string;
    readonly passwordResetTokenValidityDuration: string;
    readonly preventTotpReuse: boolean;
    readonly rejectInsecureRequests: boolean;
    readonly requestCriteria: string;
    readonly sharedSecretAttributeType: string;
    readonly timeIntervalDuration: string;
    readonly type: string;
}
export function getExtendedOperationHandlerOutput(args: GetExtendedOperationHandlerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetExtendedOperationHandlerResult> {
    return pulumi.output(args).apply((a: any) => getExtendedOperationHandler(a, opts))
}

/**
 * A collection of arguments for invoking getExtendedOperationHandler.
 */
export interface GetExtendedOperationHandlerOutputArgs {
    name: pulumi.Input<string>;
}
