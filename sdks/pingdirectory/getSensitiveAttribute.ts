// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSensitiveAttribute(args: GetSensitiveAttributeArgs, opts?: pulumi.InvokeOptions): Promise<GetSensitiveAttributeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getSensitiveAttribute:getSensitiveAttribute", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSensitiveAttribute.
 */
export interface GetSensitiveAttributeArgs {
    name: string;
}

/**
 * A collection of values returned by getSensitiveAttribute.
 */
export interface GetSensitiveAttributeResult {
    readonly allowInAdd: string;
    readonly allowInCompare: string;
    readonly allowInFilter: string;
    readonly allowInModify: string;
    readonly allowInReturnedEntries: string;
    readonly attributeTypes: string[];
    readonly description: string;
    readonly id: string;
    readonly includeDefaultSensitiveOperationalAttributes: boolean;
    readonly name: string;
    readonly type: string;
}
export function getSensitiveAttributeOutput(args: GetSensitiveAttributeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSensitiveAttributeResult> {
    return pulumi.output(args).apply((a: any) => getSensitiveAttribute(a, opts))
}

/**
 * A collection of arguments for invoking getSensitiveAttribute.
 */
export interface GetSensitiveAttributeOutputArgs {
    name: pulumi.Input<string>;
}
