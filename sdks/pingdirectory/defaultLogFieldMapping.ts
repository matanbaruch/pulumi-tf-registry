// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DefaultLogFieldMapping extends pulumi.CustomResource {
    /**
     * Get an existing DefaultLogFieldMapping resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultLogFieldMappingState, opts?: pulumi.CustomResourceOptions): DefaultLogFieldMapping {
        return new DefaultLogFieldMapping(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/defaultLogFieldMapping:DefaultLogFieldMapping';

    /**
     * Returns true if the given object is an instance of DefaultLogFieldMapping.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultLogFieldMapping {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultLogFieldMapping.__pulumiType;
    }

    /**
     * A description for this Log Field Mapping
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Additional information about the operation that was processed which was not returned to the client.
     */
    public readonly logFieldAdditionalInformation!: pulumi.Output<string>;
    /**
     * The DN of the alternate authorization identity used when processing the operation.
     */
    public readonly logFieldAlternateAuthorizationDn!: pulumi.Output<string>;
    /**
     * The DN of the user that authenticated to the server.
     */
    public readonly logFieldAuthenticatedUserDn!: pulumi.Output<string>;
    /**
     * The numeric identifier for the authentication failure reason.
     */
    public readonly logFieldAuthenticationFailureId!: pulumi.Output<string>;
    /**
     * A message explaining the reason that the authentication attempt failed.
     */
    public readonly logFieldAuthenticationFailureReason!: pulumi.Output<string>;
    /**
     * The type of authentication requested by the client.
     */
    public readonly logFieldAuthenticationType!: pulumi.Output<string>;
    /**
     * The base DN for a search operation.
     */
    public readonly logFieldBaseDn!: pulumi.Output<string>;
    /**
     * The bind DN for a bind operation.
     */
    public readonly logFieldBindDn!: pulumi.Output<string>;
    /**
     * The category for the log message.
     */
    public readonly logFieldCategory!: pulumi.Output<string>;
    /**
     * The connection ID assigned to the client connection.
     */
    public readonly logFieldConnectionId!: pulumi.Output<string>;
    /**
     * Indicates whether the old RDN values should be removed from an entry while processing a modify DN operation.
     */
    public readonly logFieldDeleteOldRdn!: pulumi.Output<string>;
    /**
     * The reason that the client connection was closed.
     */
    public readonly logFieldDisconnectReason!: pulumi.Output<string>;
    /**
     * The number of search result entries returned to the client.
     */
    public readonly logFieldEntriesReturned!: pulumi.Output<string>;
    /**
     * The DN of the entry targeted by the operation.
     */
    public readonly logFieldEntryDn!: pulumi.Output<string>;
    /**
     * The filter from a search operation.
     */
    public readonly logFieldFilter!: pulumi.Output<string>;
    /**
     * A name that uniquely identifies this Directory Server instance, which may be used to identify which instance was used to
     * log the message if multiple server instances log to the same database table.
     */
    public readonly logFieldInstanceName!: pulumi.Output<string>;
    /**
     * The contents of the intermediate client request control provided by the client.
     */
    public readonly logFieldIntermediateClientRequest!: pulumi.Output<string>;
    /**
     * The contents of the intermediate client response control returned to the client.
     */
    public readonly logFieldIntermediateClientResult!: pulumi.Output<string>;
    /**
     * The DN of the superior entry closest to the DN specified by the client.
     */
    public readonly logFieldMatchedDn!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `access`: The diagnostic message for the operation. - `error`: The text of the
     * log message.
     */
    public readonly logFieldMessage!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `access`: The message ID included in the client request. - `error`: The numeric
     * value which uniquely identifies the type of message.
     */
    public readonly logFieldMessageId!: pulumi.Output<string>;
    /**
     * The message ID of the operation to be abandoned.
     */
    public readonly logFieldMessageIdToAbandon!: pulumi.Output<string>;
    /**
     * The type of log message. Message types may include "CONNECT", "DISCONNECT", "FORWARD", "RESULT", "ENTRY", or
     * "REFERENCE".
     */
    public readonly logFieldMessageType!: pulumi.Output<string>;
    /**
     * The new RDN to use for a modify DN operation.
     */
    public readonly logFieldNewRdn!: pulumi.Output<string>;
    /**
     * The new superior DN from a modify DN operation.
     */
    public readonly logFieldNewSuperiorDn!: pulumi.Output<string>;
    /**
     * The operation ID for the operation processed by the server.
     */
    public readonly logFieldOperationId!: pulumi.Output<string>;
    /**
     * The type of operation that was processed.
     */
    public readonly logFieldOperationType!: pulumi.Output<string>;
    /**
     * The origin for the operation. Values may include "replication" (if the operation was received via replication),
     * "internal" (if it was an internal operation processed by a server component), or "external" (if it was a request from a
     * client).
     */
    public readonly logFieldOrigin!: pulumi.Output<string>;
    /**
     * The length of time (in milliseconds with microsecond accuracy) required to process the operation.
     */
    public readonly logFieldProcessingTime!: pulumi.Output<string>;
    /**
     * The name for this Directory Server product, which may be used to identify which product was used to log the message if
     * multiple products log to the same database table.
     */
    public readonly logFieldProductName!: pulumi.Output<string>;
    /**
     * The name of the protocol the client is using to communicate with the Directory Server.
     */
    public readonly logFieldProtocolName!: pulumi.Output<string>;
    /**
     * The protocol version used by the client when communicating with the Directory Server.
     */
    public readonly logFieldProtocolVersion!: pulumi.Output<string>;
    /**
     * The referral URLs returned to the client.
     */
    public readonly logFieldReferralUrls!: pulumi.Output<string>;
    /**
     * The replication change ID.
     */
    public readonly logFieldReplicationChangeId!: pulumi.Output<string>;
    /**
     * The OIDs of the request controls returned to the client.
     */
    public readonly logFieldRequestControls!: pulumi.Output<string>;
    /**
     * The OID of an extended request.
     */
    public readonly logFieldRequestOid!: pulumi.Output<string>;
    /**
     * The set of requested attributes for the search operation.
     */
    public readonly logFieldRequestedAttributes!: pulumi.Output<string>;
    /**
     * The DN of the user that requested the operation.
     */
    public readonly logFieldRequesterDn!: pulumi.Output<string>;
    /**
     * The IP address of the client that requested the operation.
     */
    public readonly logFieldRequesterIpAddress!: pulumi.Output<string>;
    /**
     * The OIDs of the response controls returned to the client.
     */
    public readonly logFieldResponseControls!: pulumi.Output<string>;
    /**
     * The OID of an extended response.
     */
    public readonly logFieldResponseOid!: pulumi.Output<string>;
    /**
     * The numeric result code for the operation.
     */
    public readonly logFieldResultCode!: pulumi.Output<string>;
    /**
     * The name of the SASL mechanism used to authenticate.
     */
    public readonly logFieldSaslMechanismName!: pulumi.Output<string>;
    /**
     * The scope for the search operation.
     */
    public readonly logFieldScope!: pulumi.Output<string>;
    /**
     * The severity for the log message.
     */
    public readonly logFieldSeverity!: pulumi.Output<string>;
    /**
     * The address of the client from which the connection was established.
     */
    public readonly logFieldSourceAddress!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `access`: The startup ID for the Directory Server. A different value will be
     * generated each time the server is started, and it may be used to distinguish between operations with the same connection
     * ID and operation ID across server restarts. - `error`: The startup ID for the Directory Server. A different value will
     * be generated each time the server is started.
     */
    public readonly logFieldStartupid!: pulumi.Output<string>;
    /**
     * The network address of the Directory Server to which the client connection has been established.
     */
    public readonly logFieldTargetAddress!: pulumi.Output<string>;
    /**
     * The name of the attribute targeted by a compare operation.
     */
    public readonly logFieldTargetAttribute!: pulumi.Output<string>;
    /**
     * The address of the server to which the request has been forwarded.
     */
    public readonly logFieldTargetHost!: pulumi.Output<string>;
    /**
     * The network port of the Directory Server to which the client connection has been established, or of the backend server
     * to which the request has been forwarded.
     */
    public readonly logFieldTargetPort!: pulumi.Output<string>;
    /**
     * The protocol used when forwarding the request to a backend server.
     */
    public readonly logFieldTargetProtocol!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `access`: The time that the operation was processed. - `error`: The time that the
     * log message was generated.
     */
    public readonly logFieldTimestamp!: pulumi.Output<string>;
    /**
     * Indicates whether the requested search operation was unindexed.
     */
    public readonly logFieldUnindexed!: pulumi.Output<string>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.DefaultLogFieldMappingRequiredAction[]>;
    /**
     * The type of Log Field Mapping resource. Options are ['access', 'error']
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DefaultLogFieldMapping resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DefaultLogFieldMappingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultLogFieldMappingArgs | DefaultLogFieldMappingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultLogFieldMappingState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["logFieldAdditionalInformation"] = state ? state.logFieldAdditionalInformation : undefined;
            resourceInputs["logFieldAlternateAuthorizationDn"] = state ? state.logFieldAlternateAuthorizationDn : undefined;
            resourceInputs["logFieldAuthenticatedUserDn"] = state ? state.logFieldAuthenticatedUserDn : undefined;
            resourceInputs["logFieldAuthenticationFailureId"] = state ? state.logFieldAuthenticationFailureId : undefined;
            resourceInputs["logFieldAuthenticationFailureReason"] = state ? state.logFieldAuthenticationFailureReason : undefined;
            resourceInputs["logFieldAuthenticationType"] = state ? state.logFieldAuthenticationType : undefined;
            resourceInputs["logFieldBaseDn"] = state ? state.logFieldBaseDn : undefined;
            resourceInputs["logFieldBindDn"] = state ? state.logFieldBindDn : undefined;
            resourceInputs["logFieldCategory"] = state ? state.logFieldCategory : undefined;
            resourceInputs["logFieldConnectionId"] = state ? state.logFieldConnectionId : undefined;
            resourceInputs["logFieldDeleteOldRdn"] = state ? state.logFieldDeleteOldRdn : undefined;
            resourceInputs["logFieldDisconnectReason"] = state ? state.logFieldDisconnectReason : undefined;
            resourceInputs["logFieldEntriesReturned"] = state ? state.logFieldEntriesReturned : undefined;
            resourceInputs["logFieldEntryDn"] = state ? state.logFieldEntryDn : undefined;
            resourceInputs["logFieldFilter"] = state ? state.logFieldFilter : undefined;
            resourceInputs["logFieldInstanceName"] = state ? state.logFieldInstanceName : undefined;
            resourceInputs["logFieldIntermediateClientRequest"] = state ? state.logFieldIntermediateClientRequest : undefined;
            resourceInputs["logFieldIntermediateClientResult"] = state ? state.logFieldIntermediateClientResult : undefined;
            resourceInputs["logFieldMatchedDn"] = state ? state.logFieldMatchedDn : undefined;
            resourceInputs["logFieldMessage"] = state ? state.logFieldMessage : undefined;
            resourceInputs["logFieldMessageId"] = state ? state.logFieldMessageId : undefined;
            resourceInputs["logFieldMessageIdToAbandon"] = state ? state.logFieldMessageIdToAbandon : undefined;
            resourceInputs["logFieldMessageType"] = state ? state.logFieldMessageType : undefined;
            resourceInputs["logFieldNewRdn"] = state ? state.logFieldNewRdn : undefined;
            resourceInputs["logFieldNewSuperiorDn"] = state ? state.logFieldNewSuperiorDn : undefined;
            resourceInputs["logFieldOperationId"] = state ? state.logFieldOperationId : undefined;
            resourceInputs["logFieldOperationType"] = state ? state.logFieldOperationType : undefined;
            resourceInputs["logFieldOrigin"] = state ? state.logFieldOrigin : undefined;
            resourceInputs["logFieldProcessingTime"] = state ? state.logFieldProcessingTime : undefined;
            resourceInputs["logFieldProductName"] = state ? state.logFieldProductName : undefined;
            resourceInputs["logFieldProtocolName"] = state ? state.logFieldProtocolName : undefined;
            resourceInputs["logFieldProtocolVersion"] = state ? state.logFieldProtocolVersion : undefined;
            resourceInputs["logFieldReferralUrls"] = state ? state.logFieldReferralUrls : undefined;
            resourceInputs["logFieldReplicationChangeId"] = state ? state.logFieldReplicationChangeId : undefined;
            resourceInputs["logFieldRequestControls"] = state ? state.logFieldRequestControls : undefined;
            resourceInputs["logFieldRequestOid"] = state ? state.logFieldRequestOid : undefined;
            resourceInputs["logFieldRequestedAttributes"] = state ? state.logFieldRequestedAttributes : undefined;
            resourceInputs["logFieldRequesterDn"] = state ? state.logFieldRequesterDn : undefined;
            resourceInputs["logFieldRequesterIpAddress"] = state ? state.logFieldRequesterIpAddress : undefined;
            resourceInputs["logFieldResponseControls"] = state ? state.logFieldResponseControls : undefined;
            resourceInputs["logFieldResponseOid"] = state ? state.logFieldResponseOid : undefined;
            resourceInputs["logFieldResultCode"] = state ? state.logFieldResultCode : undefined;
            resourceInputs["logFieldSaslMechanismName"] = state ? state.logFieldSaslMechanismName : undefined;
            resourceInputs["logFieldScope"] = state ? state.logFieldScope : undefined;
            resourceInputs["logFieldSeverity"] = state ? state.logFieldSeverity : undefined;
            resourceInputs["logFieldSourceAddress"] = state ? state.logFieldSourceAddress : undefined;
            resourceInputs["logFieldStartupid"] = state ? state.logFieldStartupid : undefined;
            resourceInputs["logFieldTargetAddress"] = state ? state.logFieldTargetAddress : undefined;
            resourceInputs["logFieldTargetAttribute"] = state ? state.logFieldTargetAttribute : undefined;
            resourceInputs["logFieldTargetHost"] = state ? state.logFieldTargetHost : undefined;
            resourceInputs["logFieldTargetPort"] = state ? state.logFieldTargetPort : undefined;
            resourceInputs["logFieldTargetProtocol"] = state ? state.logFieldTargetProtocol : undefined;
            resourceInputs["logFieldTimestamp"] = state ? state.logFieldTimestamp : undefined;
            resourceInputs["logFieldUnindexed"] = state ? state.logFieldUnindexed : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DefaultLogFieldMappingArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["logFieldAdditionalInformation"] = args ? args.logFieldAdditionalInformation : undefined;
            resourceInputs["logFieldAlternateAuthorizationDn"] = args ? args.logFieldAlternateAuthorizationDn : undefined;
            resourceInputs["logFieldAuthenticatedUserDn"] = args ? args.logFieldAuthenticatedUserDn : undefined;
            resourceInputs["logFieldAuthenticationFailureId"] = args ? args.logFieldAuthenticationFailureId : undefined;
            resourceInputs["logFieldAuthenticationFailureReason"] = args ? args.logFieldAuthenticationFailureReason : undefined;
            resourceInputs["logFieldAuthenticationType"] = args ? args.logFieldAuthenticationType : undefined;
            resourceInputs["logFieldBaseDn"] = args ? args.logFieldBaseDn : undefined;
            resourceInputs["logFieldBindDn"] = args ? args.logFieldBindDn : undefined;
            resourceInputs["logFieldCategory"] = args ? args.logFieldCategory : undefined;
            resourceInputs["logFieldConnectionId"] = args ? args.logFieldConnectionId : undefined;
            resourceInputs["logFieldDeleteOldRdn"] = args ? args.logFieldDeleteOldRdn : undefined;
            resourceInputs["logFieldDisconnectReason"] = args ? args.logFieldDisconnectReason : undefined;
            resourceInputs["logFieldEntriesReturned"] = args ? args.logFieldEntriesReturned : undefined;
            resourceInputs["logFieldEntryDn"] = args ? args.logFieldEntryDn : undefined;
            resourceInputs["logFieldFilter"] = args ? args.logFieldFilter : undefined;
            resourceInputs["logFieldInstanceName"] = args ? args.logFieldInstanceName : undefined;
            resourceInputs["logFieldIntermediateClientRequest"] = args ? args.logFieldIntermediateClientRequest : undefined;
            resourceInputs["logFieldIntermediateClientResult"] = args ? args.logFieldIntermediateClientResult : undefined;
            resourceInputs["logFieldMatchedDn"] = args ? args.logFieldMatchedDn : undefined;
            resourceInputs["logFieldMessage"] = args ? args.logFieldMessage : undefined;
            resourceInputs["logFieldMessageId"] = args ? args.logFieldMessageId : undefined;
            resourceInputs["logFieldMessageIdToAbandon"] = args ? args.logFieldMessageIdToAbandon : undefined;
            resourceInputs["logFieldMessageType"] = args ? args.logFieldMessageType : undefined;
            resourceInputs["logFieldNewRdn"] = args ? args.logFieldNewRdn : undefined;
            resourceInputs["logFieldNewSuperiorDn"] = args ? args.logFieldNewSuperiorDn : undefined;
            resourceInputs["logFieldOperationId"] = args ? args.logFieldOperationId : undefined;
            resourceInputs["logFieldOperationType"] = args ? args.logFieldOperationType : undefined;
            resourceInputs["logFieldOrigin"] = args ? args.logFieldOrigin : undefined;
            resourceInputs["logFieldProcessingTime"] = args ? args.logFieldProcessingTime : undefined;
            resourceInputs["logFieldProductName"] = args ? args.logFieldProductName : undefined;
            resourceInputs["logFieldProtocolName"] = args ? args.logFieldProtocolName : undefined;
            resourceInputs["logFieldProtocolVersion"] = args ? args.logFieldProtocolVersion : undefined;
            resourceInputs["logFieldReferralUrls"] = args ? args.logFieldReferralUrls : undefined;
            resourceInputs["logFieldReplicationChangeId"] = args ? args.logFieldReplicationChangeId : undefined;
            resourceInputs["logFieldRequestControls"] = args ? args.logFieldRequestControls : undefined;
            resourceInputs["logFieldRequestOid"] = args ? args.logFieldRequestOid : undefined;
            resourceInputs["logFieldRequestedAttributes"] = args ? args.logFieldRequestedAttributes : undefined;
            resourceInputs["logFieldRequesterDn"] = args ? args.logFieldRequesterDn : undefined;
            resourceInputs["logFieldRequesterIpAddress"] = args ? args.logFieldRequesterIpAddress : undefined;
            resourceInputs["logFieldResponseControls"] = args ? args.logFieldResponseControls : undefined;
            resourceInputs["logFieldResponseOid"] = args ? args.logFieldResponseOid : undefined;
            resourceInputs["logFieldResultCode"] = args ? args.logFieldResultCode : undefined;
            resourceInputs["logFieldSaslMechanismName"] = args ? args.logFieldSaslMechanismName : undefined;
            resourceInputs["logFieldScope"] = args ? args.logFieldScope : undefined;
            resourceInputs["logFieldSeverity"] = args ? args.logFieldSeverity : undefined;
            resourceInputs["logFieldSourceAddress"] = args ? args.logFieldSourceAddress : undefined;
            resourceInputs["logFieldStartupid"] = args ? args.logFieldStartupid : undefined;
            resourceInputs["logFieldTargetAddress"] = args ? args.logFieldTargetAddress : undefined;
            resourceInputs["logFieldTargetAttribute"] = args ? args.logFieldTargetAttribute : undefined;
            resourceInputs["logFieldTargetHost"] = args ? args.logFieldTargetHost : undefined;
            resourceInputs["logFieldTargetPort"] = args ? args.logFieldTargetPort : undefined;
            resourceInputs["logFieldTargetProtocol"] = args ? args.logFieldTargetProtocol : undefined;
            resourceInputs["logFieldTimestamp"] = args ? args.logFieldTimestamp : undefined;
            resourceInputs["logFieldUnindexed"] = args ? args.logFieldUnindexed : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultLogFieldMapping.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DefaultLogFieldMapping resources.
 */
export interface DefaultLogFieldMappingState {
    /**
     * A description for this Log Field Mapping
     */
    description?: pulumi.Input<string>;
    /**
     * Additional information about the operation that was processed which was not returned to the client.
     */
    logFieldAdditionalInformation?: pulumi.Input<string>;
    /**
     * The DN of the alternate authorization identity used when processing the operation.
     */
    logFieldAlternateAuthorizationDn?: pulumi.Input<string>;
    /**
     * The DN of the user that authenticated to the server.
     */
    logFieldAuthenticatedUserDn?: pulumi.Input<string>;
    /**
     * The numeric identifier for the authentication failure reason.
     */
    logFieldAuthenticationFailureId?: pulumi.Input<string>;
    /**
     * A message explaining the reason that the authentication attempt failed.
     */
    logFieldAuthenticationFailureReason?: pulumi.Input<string>;
    /**
     * The type of authentication requested by the client.
     */
    logFieldAuthenticationType?: pulumi.Input<string>;
    /**
     * The base DN for a search operation.
     */
    logFieldBaseDn?: pulumi.Input<string>;
    /**
     * The bind DN for a bind operation.
     */
    logFieldBindDn?: pulumi.Input<string>;
    /**
     * The category for the log message.
     */
    logFieldCategory?: pulumi.Input<string>;
    /**
     * The connection ID assigned to the client connection.
     */
    logFieldConnectionId?: pulumi.Input<string>;
    /**
     * Indicates whether the old RDN values should be removed from an entry while processing a modify DN operation.
     */
    logFieldDeleteOldRdn?: pulumi.Input<string>;
    /**
     * The reason that the client connection was closed.
     */
    logFieldDisconnectReason?: pulumi.Input<string>;
    /**
     * The number of search result entries returned to the client.
     */
    logFieldEntriesReturned?: pulumi.Input<string>;
    /**
     * The DN of the entry targeted by the operation.
     */
    logFieldEntryDn?: pulumi.Input<string>;
    /**
     * The filter from a search operation.
     */
    logFieldFilter?: pulumi.Input<string>;
    /**
     * A name that uniquely identifies this Directory Server instance, which may be used to identify which instance was used to
     * log the message if multiple server instances log to the same database table.
     */
    logFieldInstanceName?: pulumi.Input<string>;
    /**
     * The contents of the intermediate client request control provided by the client.
     */
    logFieldIntermediateClientRequest?: pulumi.Input<string>;
    /**
     * The contents of the intermediate client response control returned to the client.
     */
    logFieldIntermediateClientResult?: pulumi.Input<string>;
    /**
     * The DN of the superior entry closest to the DN specified by the client.
     */
    logFieldMatchedDn?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `access`: The diagnostic message for the operation. - `error`: The text of the
     * log message.
     */
    logFieldMessage?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `access`: The message ID included in the client request. - `error`: The numeric
     * value which uniquely identifies the type of message.
     */
    logFieldMessageId?: pulumi.Input<string>;
    /**
     * The message ID of the operation to be abandoned.
     */
    logFieldMessageIdToAbandon?: pulumi.Input<string>;
    /**
     * The type of log message. Message types may include "CONNECT", "DISCONNECT", "FORWARD", "RESULT", "ENTRY", or
     * "REFERENCE".
     */
    logFieldMessageType?: pulumi.Input<string>;
    /**
     * The new RDN to use for a modify DN operation.
     */
    logFieldNewRdn?: pulumi.Input<string>;
    /**
     * The new superior DN from a modify DN operation.
     */
    logFieldNewSuperiorDn?: pulumi.Input<string>;
    /**
     * The operation ID for the operation processed by the server.
     */
    logFieldOperationId?: pulumi.Input<string>;
    /**
     * The type of operation that was processed.
     */
    logFieldOperationType?: pulumi.Input<string>;
    /**
     * The origin for the operation. Values may include "replication" (if the operation was received via replication),
     * "internal" (if it was an internal operation processed by a server component), or "external" (if it was a request from a
     * client).
     */
    logFieldOrigin?: pulumi.Input<string>;
    /**
     * The length of time (in milliseconds with microsecond accuracy) required to process the operation.
     */
    logFieldProcessingTime?: pulumi.Input<string>;
    /**
     * The name for this Directory Server product, which may be used to identify which product was used to log the message if
     * multiple products log to the same database table.
     */
    logFieldProductName?: pulumi.Input<string>;
    /**
     * The name of the protocol the client is using to communicate with the Directory Server.
     */
    logFieldProtocolName?: pulumi.Input<string>;
    /**
     * The protocol version used by the client when communicating with the Directory Server.
     */
    logFieldProtocolVersion?: pulumi.Input<string>;
    /**
     * The referral URLs returned to the client.
     */
    logFieldReferralUrls?: pulumi.Input<string>;
    /**
     * The replication change ID.
     */
    logFieldReplicationChangeId?: pulumi.Input<string>;
    /**
     * The OIDs of the request controls returned to the client.
     */
    logFieldRequestControls?: pulumi.Input<string>;
    /**
     * The OID of an extended request.
     */
    logFieldRequestOid?: pulumi.Input<string>;
    /**
     * The set of requested attributes for the search operation.
     */
    logFieldRequestedAttributes?: pulumi.Input<string>;
    /**
     * The DN of the user that requested the operation.
     */
    logFieldRequesterDn?: pulumi.Input<string>;
    /**
     * The IP address of the client that requested the operation.
     */
    logFieldRequesterIpAddress?: pulumi.Input<string>;
    /**
     * The OIDs of the response controls returned to the client.
     */
    logFieldResponseControls?: pulumi.Input<string>;
    /**
     * The OID of an extended response.
     */
    logFieldResponseOid?: pulumi.Input<string>;
    /**
     * The numeric result code for the operation.
     */
    logFieldResultCode?: pulumi.Input<string>;
    /**
     * The name of the SASL mechanism used to authenticate.
     */
    logFieldSaslMechanismName?: pulumi.Input<string>;
    /**
     * The scope for the search operation.
     */
    logFieldScope?: pulumi.Input<string>;
    /**
     * The severity for the log message.
     */
    logFieldSeverity?: pulumi.Input<string>;
    /**
     * The address of the client from which the connection was established.
     */
    logFieldSourceAddress?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `access`: The startup ID for the Directory Server. A different value will be
     * generated each time the server is started, and it may be used to distinguish between operations with the same connection
     * ID and operation ID across server restarts. - `error`: The startup ID for the Directory Server. A different value will
     * be generated each time the server is started.
     */
    logFieldStartupid?: pulumi.Input<string>;
    /**
     * The network address of the Directory Server to which the client connection has been established.
     */
    logFieldTargetAddress?: pulumi.Input<string>;
    /**
     * The name of the attribute targeted by a compare operation.
     */
    logFieldTargetAttribute?: pulumi.Input<string>;
    /**
     * The address of the server to which the request has been forwarded.
     */
    logFieldTargetHost?: pulumi.Input<string>;
    /**
     * The network port of the Directory Server to which the client connection has been established, or of the backend server
     * to which the request has been forwarded.
     */
    logFieldTargetPort?: pulumi.Input<string>;
    /**
     * The protocol used when forwarding the request to a backend server.
     */
    logFieldTargetProtocol?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `access`: The time that the operation was processed. - `error`: The time that the
     * log message was generated.
     */
    logFieldTimestamp?: pulumi.Input<string>;
    /**
     * Indicates whether the requested search operation was unindexed.
     */
    logFieldUnindexed?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.DefaultLogFieldMappingRequiredAction>[]>;
    /**
     * The type of Log Field Mapping resource. Options are ['access', 'error']
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DefaultLogFieldMapping resource.
 */
export interface DefaultLogFieldMappingArgs {
    /**
     * A description for this Log Field Mapping
     */
    description?: pulumi.Input<string>;
    /**
     * Additional information about the operation that was processed which was not returned to the client.
     */
    logFieldAdditionalInformation?: pulumi.Input<string>;
    /**
     * The DN of the alternate authorization identity used when processing the operation.
     */
    logFieldAlternateAuthorizationDn?: pulumi.Input<string>;
    /**
     * The DN of the user that authenticated to the server.
     */
    logFieldAuthenticatedUserDn?: pulumi.Input<string>;
    /**
     * The numeric identifier for the authentication failure reason.
     */
    logFieldAuthenticationFailureId?: pulumi.Input<string>;
    /**
     * A message explaining the reason that the authentication attempt failed.
     */
    logFieldAuthenticationFailureReason?: pulumi.Input<string>;
    /**
     * The type of authentication requested by the client.
     */
    logFieldAuthenticationType?: pulumi.Input<string>;
    /**
     * The base DN for a search operation.
     */
    logFieldBaseDn?: pulumi.Input<string>;
    /**
     * The bind DN for a bind operation.
     */
    logFieldBindDn?: pulumi.Input<string>;
    /**
     * The category for the log message.
     */
    logFieldCategory?: pulumi.Input<string>;
    /**
     * The connection ID assigned to the client connection.
     */
    logFieldConnectionId?: pulumi.Input<string>;
    /**
     * Indicates whether the old RDN values should be removed from an entry while processing a modify DN operation.
     */
    logFieldDeleteOldRdn?: pulumi.Input<string>;
    /**
     * The reason that the client connection was closed.
     */
    logFieldDisconnectReason?: pulumi.Input<string>;
    /**
     * The number of search result entries returned to the client.
     */
    logFieldEntriesReturned?: pulumi.Input<string>;
    /**
     * The DN of the entry targeted by the operation.
     */
    logFieldEntryDn?: pulumi.Input<string>;
    /**
     * The filter from a search operation.
     */
    logFieldFilter?: pulumi.Input<string>;
    /**
     * A name that uniquely identifies this Directory Server instance, which may be used to identify which instance was used to
     * log the message if multiple server instances log to the same database table.
     */
    logFieldInstanceName?: pulumi.Input<string>;
    /**
     * The contents of the intermediate client request control provided by the client.
     */
    logFieldIntermediateClientRequest?: pulumi.Input<string>;
    /**
     * The contents of the intermediate client response control returned to the client.
     */
    logFieldIntermediateClientResult?: pulumi.Input<string>;
    /**
     * The DN of the superior entry closest to the DN specified by the client.
     */
    logFieldMatchedDn?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `access`: The diagnostic message for the operation. - `error`: The text of the
     * log message.
     */
    logFieldMessage?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `access`: The message ID included in the client request. - `error`: The numeric
     * value which uniquely identifies the type of message.
     */
    logFieldMessageId?: pulumi.Input<string>;
    /**
     * The message ID of the operation to be abandoned.
     */
    logFieldMessageIdToAbandon?: pulumi.Input<string>;
    /**
     * The type of log message. Message types may include "CONNECT", "DISCONNECT", "FORWARD", "RESULT", "ENTRY", or
     * "REFERENCE".
     */
    logFieldMessageType?: pulumi.Input<string>;
    /**
     * The new RDN to use for a modify DN operation.
     */
    logFieldNewRdn?: pulumi.Input<string>;
    /**
     * The new superior DN from a modify DN operation.
     */
    logFieldNewSuperiorDn?: pulumi.Input<string>;
    /**
     * The operation ID for the operation processed by the server.
     */
    logFieldOperationId?: pulumi.Input<string>;
    /**
     * The type of operation that was processed.
     */
    logFieldOperationType?: pulumi.Input<string>;
    /**
     * The origin for the operation. Values may include "replication" (if the operation was received via replication),
     * "internal" (if it was an internal operation processed by a server component), or "external" (if it was a request from a
     * client).
     */
    logFieldOrigin?: pulumi.Input<string>;
    /**
     * The length of time (in milliseconds with microsecond accuracy) required to process the operation.
     */
    logFieldProcessingTime?: pulumi.Input<string>;
    /**
     * The name for this Directory Server product, which may be used to identify which product was used to log the message if
     * multiple products log to the same database table.
     */
    logFieldProductName?: pulumi.Input<string>;
    /**
     * The name of the protocol the client is using to communicate with the Directory Server.
     */
    logFieldProtocolName?: pulumi.Input<string>;
    /**
     * The protocol version used by the client when communicating with the Directory Server.
     */
    logFieldProtocolVersion?: pulumi.Input<string>;
    /**
     * The referral URLs returned to the client.
     */
    logFieldReferralUrls?: pulumi.Input<string>;
    /**
     * The replication change ID.
     */
    logFieldReplicationChangeId?: pulumi.Input<string>;
    /**
     * The OIDs of the request controls returned to the client.
     */
    logFieldRequestControls?: pulumi.Input<string>;
    /**
     * The OID of an extended request.
     */
    logFieldRequestOid?: pulumi.Input<string>;
    /**
     * The set of requested attributes for the search operation.
     */
    logFieldRequestedAttributes?: pulumi.Input<string>;
    /**
     * The DN of the user that requested the operation.
     */
    logFieldRequesterDn?: pulumi.Input<string>;
    /**
     * The IP address of the client that requested the operation.
     */
    logFieldRequesterIpAddress?: pulumi.Input<string>;
    /**
     * The OIDs of the response controls returned to the client.
     */
    logFieldResponseControls?: pulumi.Input<string>;
    /**
     * The OID of an extended response.
     */
    logFieldResponseOid?: pulumi.Input<string>;
    /**
     * The numeric result code for the operation.
     */
    logFieldResultCode?: pulumi.Input<string>;
    /**
     * The name of the SASL mechanism used to authenticate.
     */
    logFieldSaslMechanismName?: pulumi.Input<string>;
    /**
     * The scope for the search operation.
     */
    logFieldScope?: pulumi.Input<string>;
    /**
     * The severity for the log message.
     */
    logFieldSeverity?: pulumi.Input<string>;
    /**
     * The address of the client from which the connection was established.
     */
    logFieldSourceAddress?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `access`: The startup ID for the Directory Server. A different value will be
     * generated each time the server is started, and it may be used to distinguish between operations with the same connection
     * ID and operation ID across server restarts. - `error`: The startup ID for the Directory Server. A different value will
     * be generated each time the server is started.
     */
    logFieldStartupid?: pulumi.Input<string>;
    /**
     * The network address of the Directory Server to which the client connection has been established.
     */
    logFieldTargetAddress?: pulumi.Input<string>;
    /**
     * The name of the attribute targeted by a compare operation.
     */
    logFieldTargetAttribute?: pulumi.Input<string>;
    /**
     * The address of the server to which the request has been forwarded.
     */
    logFieldTargetHost?: pulumi.Input<string>;
    /**
     * The network port of the Directory Server to which the client connection has been established, or of the backend server
     * to which the request has been forwarded.
     */
    logFieldTargetPort?: pulumi.Input<string>;
    /**
     * The protocol used when forwarding the request to a backend server.
     */
    logFieldTargetProtocol?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `access`: The time that the operation was processed. - `error`: The time that the
     * log message was generated.
     */
    logFieldTimestamp?: pulumi.Input<string>;
    /**
     * Indicates whether the requested search operation was unindexed.
     */
    logFieldUnindexed?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
}
