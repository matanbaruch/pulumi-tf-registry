// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMonitoringEndpoint(args: GetMonitoringEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoringEndpointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getMonitoringEndpoint:getMonitoringEndpoint", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonitoringEndpoint.
 */
export interface GetMonitoringEndpointArgs {
    name: string;
}

/**
 * A collection of values returned by getMonitoringEndpoint.
 */
export interface GetMonitoringEndpointResult {
    readonly additionalTags: string[];
    readonly connectionType: string;
    readonly enabled: boolean;
    readonly hostname: string;
    readonly id: string;
    readonly name: string;
    readonly serverPort: number;
    readonly trustManagerProvider: string;
    readonly type: string;
}
export function getMonitoringEndpointOutput(args: GetMonitoringEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitoringEndpointResult> {
    return pulumi.output(args).apply((a: any) => getMonitoringEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getMonitoringEndpoint.
 */
export interface GetMonitoringEndpointOutputArgs {
    name: pulumi.Input<string>;
}
