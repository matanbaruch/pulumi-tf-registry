// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTokenClaimValidations(args: GetTokenClaimValidationsArgs, opts?: pulumi.InvokeOptions): Promise<GetTokenClaimValidationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getTokenClaimValidations:getTokenClaimValidations", {
        "filter": args.filter,
        "idTokenValidatorName": args.idTokenValidatorName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTokenClaimValidations.
 */
export interface GetTokenClaimValidationsArgs {
    filter?: string;
    idTokenValidatorName: string;
}

/**
 * A collection of values returned by getTokenClaimValidations.
 */
export interface GetTokenClaimValidationsResult {
    readonly filter?: string;
    readonly id: string;
    readonly idTokenValidatorName: string;
    readonly objects: outputs.GetTokenClaimValidationsObject[];
}
export function getTokenClaimValidationsOutput(args: GetTokenClaimValidationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTokenClaimValidationsResult> {
    return pulumi.output(args).apply((a: any) => getTokenClaimValidations(a, opts))
}

/**
 * A collection of arguments for invoking getTokenClaimValidations.
 */
export interface GetTokenClaimValidationsOutputArgs {
    filter?: pulumi.Input<string>;
    idTokenValidatorName: pulumi.Input<string>;
}
