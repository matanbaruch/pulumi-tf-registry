// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getObscuredValue(args: GetObscuredValueArgs, opts?: pulumi.InvokeOptions): Promise<GetObscuredValueResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getObscuredValue:getObscuredValue", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getObscuredValue.
 */
export interface GetObscuredValueArgs {
    name: string;
}

/**
 * A collection of values returned by getObscuredValue.
 */
export interface GetObscuredValueResult {
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly obscuredValue: string;
    readonly type: string;
}
export function getObscuredValueOutput(args: GetObscuredValueOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetObscuredValueResult> {
    return pulumi.output(args).apply((a: any) => getObscuredValue(a, opts))
}

/**
 * A collection of arguments for invoking getObscuredValue.
 */
export interface GetObscuredValueOutputArgs {
    name: pulumi.Input<string>;
}
