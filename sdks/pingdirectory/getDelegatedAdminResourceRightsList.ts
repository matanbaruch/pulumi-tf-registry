// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDelegatedAdminResourceRightsList(args: GetDelegatedAdminResourceRightsListArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegatedAdminResourceRightsListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getDelegatedAdminResourceRightsList:getDelegatedAdminResourceRightsList", {
        "delegatedAdminRightsName": args.delegatedAdminRightsName,
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDelegatedAdminResourceRightsList.
 */
export interface GetDelegatedAdminResourceRightsListArgs {
    delegatedAdminRightsName: string;
    filter?: string;
}

/**
 * A collection of values returned by getDelegatedAdminResourceRightsList.
 */
export interface GetDelegatedAdminResourceRightsListResult {
    readonly delegatedAdminRightsName: string;
    readonly filter?: string;
    readonly id: string;
    readonly ids: string[];
}
export function getDelegatedAdminResourceRightsListOutput(args: GetDelegatedAdminResourceRightsListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDelegatedAdminResourceRightsListResult> {
    return pulumi.output(args).apply((a: any) => getDelegatedAdminResourceRightsList(a, opts))
}

/**
 * A collection of arguments for invoking getDelegatedAdminResourceRightsList.
 */
export interface GetDelegatedAdminResourceRightsListOutputArgs {
    delegatedAdminRightsName: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
}
