// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogRetentionPolicy(args: GetLogRetentionPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetLogRetentionPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getLogRetentionPolicy:getLogRetentionPolicy", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogRetentionPolicy.
 */
export interface GetLogRetentionPolicyArgs {
    name: string;
}

/**
 * A collection of values returned by getLogRetentionPolicy.
 */
export interface GetLogRetentionPolicyResult {
    readonly description: string;
    readonly diskSpaceUsed: string;
    readonly freeDiskSpace: string;
    readonly id: string;
    readonly name: string;
    readonly numberOfFiles: number;
    readonly retainDuration: string;
    readonly type: string;
}
export function getLogRetentionPolicyOutput(args: GetLogRetentionPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogRetentionPolicyResult> {
    return pulumi.output(args).apply((a: any) => getLogRetentionPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getLogRetentionPolicy.
 */
export interface GetLogRetentionPolicyOutputArgs {
    name: pulumi.Input<string>;
}
