// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogFieldSyntax(args: GetLogFieldSyntaxArgs, opts?: pulumi.InvokeOptions): Promise<GetLogFieldSyntaxResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getLogFieldSyntax:getLogFieldSyntax", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogFieldSyntax.
 */
export interface GetLogFieldSyntaxArgs {
    name: string;
}

/**
 * A collection of values returned by getLogFieldSyntax.
 */
export interface GetLogFieldSyntaxResult {
    readonly defaultBehavior: string;
    readonly description: string;
    readonly excludedSensitiveAttributes: string[];
    readonly excludedSensitiveFields: string[];
    readonly id: string;
    readonly includedSensitiveAttributes: string[];
    readonly includedSensitiveFields: string[];
    readonly name: string;
    readonly type: string;
}
export function getLogFieldSyntaxOutput(args: GetLogFieldSyntaxOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogFieldSyntaxResult> {
    return pulumi.output(args).apply((a: any) => getLogFieldSyntax(a, opts))
}

/**
 * A collection of arguments for invoking getLogFieldSyntax.
 */
export interface GetLogFieldSyntaxOutputArgs {
    name: pulumi.Input<string>;
}
