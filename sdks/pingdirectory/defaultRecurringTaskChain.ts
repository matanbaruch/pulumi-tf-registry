// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DefaultRecurringTaskChain extends pulumi.CustomResource {
    /**
     * Get an existing DefaultRecurringTaskChain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultRecurringTaskChainState, opts?: pulumi.CustomResourceOptions): DefaultRecurringTaskChain {
        return new DefaultRecurringTaskChain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/defaultRecurringTaskChain:DefaultRecurringTaskChain';

    /**
     * Returns true if the given object is an instance of DefaultRecurringTaskChain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultRecurringTaskChain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultRecurringTaskChain.__pulumiType;
    }

    /**
     * A description for this Recurring Task Chain
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Indicates whether this Recurring Task Chain is enabled for use. Recurring Task Chains that are disabled will not have
     * any new instances scheduled, but instances that are already scheduled will be preserved. Those instances may be manually
     * canceled if desired.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * Specifies the behavior that the server should exhibit if it is shut down or abnormally terminated while an instance of
     * this Recurring Task Chain is running.
     */
    public readonly interruptedByShutdownBehavior!: pulumi.Output<string>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * The set of recurring tasks that make up this chain. At least one value must be provided. If multiple values are given,
     * then the task instances will be invoked in the order in which they are listed.
     */
    public readonly recurringTasks!: pulumi.Output<string[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.DefaultRecurringTaskChainRequiredAction[]>;
    /**
     * The mechanism used to determine the dates on which instances of this Recurring Task Chain may be scheduled to start.
     */
    public readonly scheduledDateSelectionType!: pulumi.Output<string>;
    /**
     * The specific days of the month on which instances of this Recurring Task Chain may be scheduled to start. If the
     * scheduled-day-selection-type property has a value of selected-days-of-the-month, then this property must have one or
     * more values; otherwise, it must be left undefined.
     */
    public readonly scheduledDayOfTheMonths!: pulumi.Output<string[]>;
    /**
     * The specific days of the week on which instances of this Recurring Task Chain may be scheduled to start. If the
     * scheduled-day-selection-type property has a value of selected-days-of-the-week, then this property must have one or more
     * values; otherwise, it must be left undefined.
     */
    public readonly scheduledDayOfTheWeeks!: pulumi.Output<string[]>;
    /**
     * The months of the year in which instances of this Recurring Task Chain may be scheduled to start.
     */
    public readonly scheduledMonths!: pulumi.Output<string[]>;
    /**
     * The time of day at which instances of the Recurring Task Chain should be eligible to start running. Values should be in
     * the format HH:MM (where HH is a two-digit representation of the hour of the day, between 00 and 23, inclusive), and MM
     * is a two-digit representation of the minute of the hour (between 00 and 59, inclusive). Alternately, the value can be in
     * the form *:MM, which indicates that the task should be eligible to start at the specified minute of every hour. At least
     * one value must be provided, but multiple values may be given to indicate multiple start times within the same day.
     */
    public readonly scheduledTimeOfDays!: pulumi.Output<string[]>;
    /**
     * Specifies the behavior that the server should exhibit if it is offline when the start time arrives for the tasks in this
     * Recurring Task Chain.
     */
    public readonly serverOfflineAtStartTimeBehavior!: pulumi.Output<string>;
    /**
     * The time zone that will be used to interpret the scheduled-time-of-day values. If no value is provided, then the JVM's
     * default time zone will be used.
     */
    public readonly timeZone!: pulumi.Output<string>;
    /**
     * The type of Recurring Task Chain resource. Options are ['recurring-task-chain']
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DefaultRecurringTaskChain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DefaultRecurringTaskChainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultRecurringTaskChainArgs | DefaultRecurringTaskChainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultRecurringTaskChainState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["interruptedByShutdownBehavior"] = state ? state.interruptedByShutdownBehavior : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["recurringTasks"] = state ? state.recurringTasks : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["scheduledDateSelectionType"] = state ? state.scheduledDateSelectionType : undefined;
            resourceInputs["scheduledDayOfTheMonths"] = state ? state.scheduledDayOfTheMonths : undefined;
            resourceInputs["scheduledDayOfTheWeeks"] = state ? state.scheduledDayOfTheWeeks : undefined;
            resourceInputs["scheduledMonths"] = state ? state.scheduledMonths : undefined;
            resourceInputs["scheduledTimeOfDays"] = state ? state.scheduledTimeOfDays : undefined;
            resourceInputs["serverOfflineAtStartTimeBehavior"] = state ? state.serverOfflineAtStartTimeBehavior : undefined;
            resourceInputs["timeZone"] = state ? state.timeZone : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DefaultRecurringTaskChainArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["interruptedByShutdownBehavior"] = args ? args.interruptedByShutdownBehavior : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["recurringTasks"] = args ? args.recurringTasks : undefined;
            resourceInputs["scheduledDateSelectionType"] = args ? args.scheduledDateSelectionType : undefined;
            resourceInputs["scheduledDayOfTheMonths"] = args ? args.scheduledDayOfTheMonths : undefined;
            resourceInputs["scheduledDayOfTheWeeks"] = args ? args.scheduledDayOfTheWeeks : undefined;
            resourceInputs["scheduledMonths"] = args ? args.scheduledMonths : undefined;
            resourceInputs["scheduledTimeOfDays"] = args ? args.scheduledTimeOfDays : undefined;
            resourceInputs["serverOfflineAtStartTimeBehavior"] = args ? args.serverOfflineAtStartTimeBehavior : undefined;
            resourceInputs["timeZone"] = args ? args.timeZone : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultRecurringTaskChain.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DefaultRecurringTaskChain resources.
 */
export interface DefaultRecurringTaskChainState {
    /**
     * A description for this Recurring Task Chain
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether this Recurring Task Chain is enabled for use. Recurring Task Chains that are disabled will not have
     * any new instances scheduled, but instances that are already scheduled will be preserved. Those instances may be manually
     * canceled if desired.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the behavior that the server should exhibit if it is shut down or abnormally terminated while an instance of
     * this Recurring Task Chain is running.
     */
    interruptedByShutdownBehavior?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of recurring tasks that make up this chain. At least one value must be provided. If multiple values are given,
     * then the task instances will be invoked in the order in which they are listed.
     */
    recurringTasks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.DefaultRecurringTaskChainRequiredAction>[]>;
    /**
     * The mechanism used to determine the dates on which instances of this Recurring Task Chain may be scheduled to start.
     */
    scheduledDateSelectionType?: pulumi.Input<string>;
    /**
     * The specific days of the month on which instances of this Recurring Task Chain may be scheduled to start. If the
     * scheduled-day-selection-type property has a value of selected-days-of-the-month, then this property must have one or
     * more values; otherwise, it must be left undefined.
     */
    scheduledDayOfTheMonths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The specific days of the week on which instances of this Recurring Task Chain may be scheduled to start. If the
     * scheduled-day-selection-type property has a value of selected-days-of-the-week, then this property must have one or more
     * values; otherwise, it must be left undefined.
     */
    scheduledDayOfTheWeeks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The months of the year in which instances of this Recurring Task Chain may be scheduled to start.
     */
    scheduledMonths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The time of day at which instances of the Recurring Task Chain should be eligible to start running. Values should be in
     * the format HH:MM (where HH is a two-digit representation of the hour of the day, between 00 and 23, inclusive), and MM
     * is a two-digit representation of the minute of the hour (between 00 and 59, inclusive). Alternately, the value can be in
     * the form *:MM, which indicates that the task should be eligible to start at the specified minute of every hour. At least
     * one value must be provided, but multiple values may be given to indicate multiple start times within the same day.
     */
    scheduledTimeOfDays?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the behavior that the server should exhibit if it is offline when the start time arrives for the tasks in this
     * Recurring Task Chain.
     */
    serverOfflineAtStartTimeBehavior?: pulumi.Input<string>;
    /**
     * The time zone that will be used to interpret the scheduled-time-of-day values. If no value is provided, then the JVM's
     * default time zone will be used.
     */
    timeZone?: pulumi.Input<string>;
    /**
     * The type of Recurring Task Chain resource. Options are ['recurring-task-chain']
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DefaultRecurringTaskChain resource.
 */
export interface DefaultRecurringTaskChainArgs {
    /**
     * A description for this Recurring Task Chain
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether this Recurring Task Chain is enabled for use. Recurring Task Chains that are disabled will not have
     * any new instances scheduled, but instances that are already scheduled will be preserved. Those instances may be manually
     * canceled if desired.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the behavior that the server should exhibit if it is shut down or abnormally terminated while an instance of
     * this Recurring Task Chain is running.
     */
    interruptedByShutdownBehavior?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * The set of recurring tasks that make up this chain. At least one value must be provided. If multiple values are given,
     * then the task instances will be invoked in the order in which they are listed.
     */
    recurringTasks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The mechanism used to determine the dates on which instances of this Recurring Task Chain may be scheduled to start.
     */
    scheduledDateSelectionType?: pulumi.Input<string>;
    /**
     * The specific days of the month on which instances of this Recurring Task Chain may be scheduled to start. If the
     * scheduled-day-selection-type property has a value of selected-days-of-the-month, then this property must have one or
     * more values; otherwise, it must be left undefined.
     */
    scheduledDayOfTheMonths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The specific days of the week on which instances of this Recurring Task Chain may be scheduled to start. If the
     * scheduled-day-selection-type property has a value of selected-days-of-the-week, then this property must have one or more
     * values; otherwise, it must be left undefined.
     */
    scheduledDayOfTheWeeks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The months of the year in which instances of this Recurring Task Chain may be scheduled to start.
     */
    scheduledMonths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The time of day at which instances of the Recurring Task Chain should be eligible to start running. Values should be in
     * the format HH:MM (where HH is a two-digit representation of the hour of the day, between 00 and 23, inclusive), and MM
     * is a two-digit representation of the minute of the hour (between 00 and 59, inclusive). Alternately, the value can be in
     * the form *:MM, which indicates that the task should be eligible to start at the specified minute of every hour. At least
     * one value must be provided, but multiple values may be given to indicate multiple start times within the same day.
     */
    scheduledTimeOfDays?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the behavior that the server should exhibit if it is offline when the start time arrives for the tasks in this
     * Recurring Task Chain.
     */
    serverOfflineAtStartTimeBehavior?: pulumi.Input<string>;
    /**
     * The time zone that will be used to interpret the scheduled-time-of-day values. If no value is provided, then the JVM's
     * default time zone will be used.
     */
    timeZone?: pulumi.Input<string>;
}
