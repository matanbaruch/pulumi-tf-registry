// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAlertHandler(args: GetAlertHandlerArgs, opts?: pulumi.InvokeOptions): Promise<GetAlertHandlerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getAlertHandler:getAlertHandler", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAlertHandler.
 */
export interface GetAlertHandlerArgs {
    name: string;
}

/**
 * A collection of values returned by getAlertHandler.
 */
export interface GetAlertHandlerResult {
    readonly asynchronous: boolean;
    readonly command: string;
    readonly commandTimeout: string;
    readonly communityName: string;
    readonly description: string;
    readonly disabledAlertTypes: string[];
    readonly enabled: boolean;
    readonly enabledAlertSeverities: string[];
    readonly enabledAlertTypes: string[];
    readonly extensionArguments: string[];
    readonly extensionClass: string;
    readonly httpProxyExternalServer: string;
    readonly id: string;
    readonly includeMonitorDataFilter: string;
    readonly longMessageBehavior: string;
    readonly messageBody: string;
    readonly messageSubject: string;
    readonly name: string;
    readonly outputFormat: string;
    readonly outputLocation: string;
    readonly recipientAddresses: string[];
    readonly recipientPhoneNumbers: string[];
    readonly scriptArguments: string[];
    readonly scriptClass: string;
    readonly senderAddress: string;
    readonly senderPhoneNumbers: string[];
    readonly serverHostName: string;
    readonly serverPort: number;
    readonly twilioAccountSid: string;
    readonly twilioAuthToken: string;
    readonly twilioAuthTokenPassphraseProvider: string;
    readonly type: string;
}
export function getAlertHandlerOutput(args: GetAlertHandlerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlertHandlerResult> {
    return pulumi.output(args).apply((a: any) => getAlertHandler(a, opts))
}

/**
 * A collection of arguments for invoking getAlertHandler.
 */
export interface GetAlertHandlerOutputArgs {
    name: pulumi.Input<string>;
}
