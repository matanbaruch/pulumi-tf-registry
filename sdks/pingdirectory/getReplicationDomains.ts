// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getReplicationDomains(args: GetReplicationDomainsArgs, opts?: pulumi.InvokeOptions): Promise<GetReplicationDomainsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getReplicationDomains:getReplicationDomains", {
        "filter": args.filter,
        "synchronizationProviderName": args.synchronizationProviderName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getReplicationDomains.
 */
export interface GetReplicationDomainsArgs {
    filter?: string;
    synchronizationProviderName: string;
}

/**
 * A collection of values returned by getReplicationDomains.
 */
export interface GetReplicationDomainsResult {
    readonly filter?: string;
    readonly id: string;
    readonly ids: string[];
    readonly synchronizationProviderName: string;
}
export function getReplicationDomainsOutput(args: GetReplicationDomainsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReplicationDomainsResult> {
    return pulumi.output(args).apply((a: any) => getReplicationDomains(a, opts))
}

/**
 * A collection of arguments for invoking getReplicationDomains.
 */
export interface GetReplicationDomainsOutputArgs {
    filter?: pulumi.Input<string>;
    synchronizationProviderName: pulumi.Input<string>;
}
