// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOauthTokenHandler(args: GetOauthTokenHandlerArgs, opts?: pulumi.InvokeOptions): Promise<GetOauthTokenHandlerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getOauthTokenHandler:getOauthTokenHandler", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOauthTokenHandler.
 */
export interface GetOauthTokenHandlerArgs {
    name: string;
}

/**
 * A collection of values returned by getOauthTokenHandler.
 */
export interface GetOauthTokenHandlerResult {
    readonly description: string;
    readonly extensionArguments: string[];
    readonly extensionClass: string;
    readonly id: string;
    readonly name: string;
    readonly scriptArguments: string[];
    readonly scriptClass: string;
    readonly type: string;
}
export function getOauthTokenHandlerOutput(args: GetOauthTokenHandlerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOauthTokenHandlerResult> {
    return pulumi.output(args).apply((a: any) => getOauthTokenHandler(a, opts))
}

/**
 * A collection of arguments for invoking getOauthTokenHandler.
 */
export interface GetOauthTokenHandlerOutputArgs {
    name: pulumi.Input<string>;
}
