// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDebugTargets(args: GetDebugTargetsArgs, opts?: pulumi.InvokeOptions): Promise<GetDebugTargetsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getDebugTargets:getDebugTargets", {
        "filter": args.filter,
        "logPublisherName": args.logPublisherName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDebugTargets.
 */
export interface GetDebugTargetsArgs {
    filter?: string;
    logPublisherName: string;
}

/**
 * A collection of values returned by getDebugTargets.
 */
export interface GetDebugTargetsResult {
    readonly filter?: string;
    readonly id: string;
    readonly ids: string[];
    readonly logPublisherName: string;
}
export function getDebugTargetsOutput(args: GetDebugTargetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDebugTargetsResult> {
    return pulumi.output(args).apply((a: any) => getDebugTargets(a, opts))
}

/**
 * A collection of arguments for invoking getDebugTargets.
 */
export interface GetDebugTargetsOutputArgs {
    filter?: pulumi.Input<string>;
    logPublisherName: pulumi.Input<string>;
}
