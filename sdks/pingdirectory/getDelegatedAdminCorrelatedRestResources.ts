// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDelegatedAdminCorrelatedRestResources(args: GetDelegatedAdminCorrelatedRestResourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegatedAdminCorrelatedRestResourcesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getDelegatedAdminCorrelatedRestResources:getDelegatedAdminCorrelatedRestResources", {
        "filter": args.filter,
        "restResourceTypeName": args.restResourceTypeName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDelegatedAdminCorrelatedRestResources.
 */
export interface GetDelegatedAdminCorrelatedRestResourcesArgs {
    filter?: string;
    restResourceTypeName: string;
}

/**
 * A collection of values returned by getDelegatedAdminCorrelatedRestResources.
 */
export interface GetDelegatedAdminCorrelatedRestResourcesResult {
    readonly filter?: string;
    readonly id: string;
    readonly ids: string[];
    readonly restResourceTypeName: string;
}
export function getDelegatedAdminCorrelatedRestResourcesOutput(args: GetDelegatedAdminCorrelatedRestResourcesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDelegatedAdminCorrelatedRestResourcesResult> {
    return pulumi.output(args).apply((a: any) => getDelegatedAdminCorrelatedRestResources(a, opts))
}

/**
 * A collection of arguments for invoking getDelegatedAdminCorrelatedRestResources.
 */
export interface GetDelegatedAdminCorrelatedRestResourcesOutputArgs {
    filter?: pulumi.Input<string>;
    restResourceTypeName: pulumi.Input<string>;
}
