// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPassphraseProvider(args: GetPassphraseProviderArgs, opts?: pulumi.InvokeOptions): Promise<GetPassphraseProviderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getPassphraseProvider:getPassphraseProvider", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPassphraseProvider.
 */
export interface GetPassphraseProviderArgs {
    name: string;
}

/**
 * A collection of values returned by getPassphraseProvider.
 */
export interface GetPassphraseProviderResult {
    readonly awsExternalServer: string;
    readonly azureAuthenticationMethod: string;
    readonly conjurExternalServer: string;
    readonly conjurSecretRelativePath: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly environmentVariable: string;
    readonly extensionArguments: string[];
    readonly extensionClass: string;
    readonly httpProxyExternalServer: string;
    readonly id: string;
    readonly keyVaultUri: string;
    readonly maxCacheDuration: string;
    readonly name: string;
    readonly obscuredValue: string;
    readonly passwordFile: string;
    readonly secretFieldName: string;
    readonly secretId: string;
    readonly secretName: string;
    readonly secretVersionId: string;
    readonly secretVersionStage: string;
    readonly type: string;
    readonly vaultExternalServer: string;
    readonly vaultSecretFieldName: string;
    readonly vaultSecretPath: string;
}
export function getPassphraseProviderOutput(args: GetPassphraseProviderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPassphraseProviderResult> {
    return pulumi.output(args).apply((a: any) => getPassphraseProvider(a, opts))
}

/**
 * A collection of arguments for invoking getPassphraseProvider.
 */
export interface GetPassphraseProviderOutputArgs {
    name: pulumi.Input<string>;
}
