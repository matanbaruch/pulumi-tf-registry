// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCustomLoggedStats(args: GetCustomLoggedStatsArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomLoggedStatsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getCustomLoggedStats:getCustomLoggedStats", {
        "name": args.name,
        "pluginName": args.pluginName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCustomLoggedStats.
 */
export interface GetCustomLoggedStatsArgs {
    name: string;
    pluginName: string;
}

/**
 * A collection of values returned by getCustomLoggedStats.
 */
export interface GetCustomLoggedStatsResult {
    readonly attributeToLogs: string[];
    readonly columnNames: string[];
    readonly decimalFormat: string;
    readonly description: string;
    readonly divideValueBy: string;
    readonly divideValueByAttribute: string;
    readonly enabled: boolean;
    readonly headerPrefix: string;
    readonly headerPrefixAttribute: string;
    readonly id: string;
    readonly includeFilter: string;
    readonly monitorObjectclass: string;
    readonly name: string;
    readonly nonZeroImpliesNotIdle: boolean;
    readonly pluginName: string;
    readonly regexPattern: string;
    readonly regexReplacement: string;
    readonly statisticTypes: string[];
    readonly type: string;
}
export function getCustomLoggedStatsOutput(args: GetCustomLoggedStatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomLoggedStatsResult> {
    return pulumi.output(args).apply((a: any) => getCustomLoggedStats(a, opts))
}

/**
 * A collection of arguments for invoking getCustomLoggedStats.
 */
export interface GetCustomLoggedStatsOutputArgs {
    name: pulumi.Input<string>;
    pluginName: pulumi.Input<string>;
}
