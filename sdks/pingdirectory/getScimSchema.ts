// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getScimSchema(args: GetScimSchemaArgs, opts?: pulumi.InvokeOptions): Promise<GetScimSchemaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getScimSchema:getScimSchema", {
        "schemaUrn": args.schemaUrn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getScimSchema.
 */
export interface GetScimSchemaArgs {
    schemaUrn: string;
}

/**
 * A collection of values returned by getScimSchema.
 */
export interface GetScimSchemaResult {
    readonly description: string;
    readonly displayName: string;
    readonly id: string;
    readonly schemaUrn: string;
    readonly type: string;
}
export function getScimSchemaOutput(args: GetScimSchemaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScimSchemaResult> {
    return pulumi.output(args).apply((a: any) => getScimSchema(a, opts))
}

/**
 * A collection of arguments for invoking getScimSchema.
 */
export interface GetScimSchemaOutputArgs {
    schemaUrn: pulumi.Input<string>;
}
