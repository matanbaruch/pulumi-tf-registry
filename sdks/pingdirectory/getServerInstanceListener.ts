// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getServerInstanceListener(args: GetServerInstanceListenerArgs, opts?: pulumi.InvokeOptions): Promise<GetServerInstanceListenerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getServerInstanceListener:getServerInstanceListener", {
        "name": args.name,
        "serverInstanceName": args.serverInstanceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServerInstanceListener.
 */
export interface GetServerInstanceListenerArgs {
    name: string;
    serverInstanceName: string;
}

/**
 * A collection of values returned by getServerInstanceListener.
 */
export interface GetServerInstanceListenerResult {
    readonly connectionSecurity: string;
    readonly id: string;
    readonly listenAddress: string;
    readonly listenerCertificate: string;
    readonly name: string;
    readonly purposes: string[];
    readonly serverHttpPort: number;
    readonly serverInstanceName: string;
    readonly serverLdapPort: number;
    readonly type: string;
}
export function getServerInstanceListenerOutput(args: GetServerInstanceListenerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerInstanceListenerResult> {
    return pulumi.output(args).apply((a: any) => getServerInstanceListener(a, opts))
}

/**
 * A collection of arguments for invoking getServerInstanceListener.
 */
export interface GetServerInstanceListenerOutputArgs {
    name: pulumi.Input<string>;
    serverInstanceName: pulumi.Input<string>;
}
