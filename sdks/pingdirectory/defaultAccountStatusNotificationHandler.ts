// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DefaultAccountStatusNotificationHandler extends pulumi.CustomResource {
    /**
     * Get an existing DefaultAccountStatusNotificationHandler resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultAccountStatusNotificationHandlerState, opts?: pulumi.CustomResourceOptions): DefaultAccountStatusNotificationHandler {
        return new DefaultAccountStatusNotificationHandler(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/defaultAccountStatusNotificationHandler:DefaultAccountStatusNotificationHandler';

    /**
     * Returns true if the given object is an instance of DefaultAccountStatusNotificationHandler.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultAccountStatusNotificationHandler {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultAccountStatusNotificationHandler.__pulumiType;
    }

    /**
     * Supported in PingDirectory product version 9.3.0.0+. The path to a file containing the template to use to generate the
     * email message to send in the event that an account has successfully authenticated in a bind operation that matches the
     * criteria provided in the account-authentication-notification-request-criteria property.
     */
    public readonly accountAuthenticatedMessageTemplate!: pulumi.Output<string>;
    /**
     * Supported in PingDirectory product version 9.3.0.0+. A result criteria object that identifies which successful bind
     * operations should result in account authentication notifications for this handler.
     */
    public readonly accountAuthenticationNotificationResultCriteria!: pulumi.Output<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a new account
     * is created in an add request that matches the criteria provided in the account-creation-notification-request-criteria
     * property.
     */
    public readonly accountCreatedMessageTemplate!: pulumi.Output<string>;
    /**
     * A request criteria object that identifies which add requests should result in account creation notifications for this
     * handler.
     */
    public readonly accountCreationNotificationRequestCriteria!: pulumi.Output<string>;
    /**
     * Supported in PingDirectory product version 9.3.0.0+. The path to a file containing the template to use to generate the
     * email message to send in the event that an existing accout has been removed in a delete request that matches the
     * criteria provided in the account-deletion-notification-request-criteria property.
     */
    public readonly accountDeletedMessageTemplate!: pulumi.Output<string>;
    /**
     * Supported in PingDirectory product version 9.3.0.0+. A request criteria object that identifies which delete requests
     * should result in account deletion notifications for this handler.
     */
    public readonly accountDeletionNotificationRequestCriteria!: pulumi.Output<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user's
     * account is disabled by an administrator.
     */
    public readonly accountDisabledMessageTemplate!: pulumi.Output<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user's
     * account is enabled by an administrator.
     */
    public readonly accountEnabledMessageTemplate!: pulumi.Output<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an
     * authentication attempt fails because the account has an expiration time that is in the past.
     */
    public readonly accountExpiredMessageTemplate!: pulumi.Output<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that authentication
     * attempt fails because it has been too long since the user last successfully authenticated.
     */
    public readonly accountIdleLockedMessageTemplate!: pulumi.Output<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an
     * authentication attempt fails because the account has an activation time that is in the future.
     */
    public readonly accountNotYetActiveMessageTemplate!: pulumi.Output<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an account
     * becomes permanently locked as a result of too many authentication failures.
     */
    public readonly accountPermanentlyFailureLockedMessageTemplate!: pulumi.Output<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that authentication
     * attempt fails because the user failed to choose a new password in a timely manner after an administrative reset.
     */
    public readonly accountResetLockedMessageTemplate!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `admin-alert`: The types of account status notifications that should result in
     * administrative alerts. - `error-log`: Indicates which types of event can trigger an account status notification.
     */
    public readonly accountStatusNotificationTypes!: pulumi.Output<string[]>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an account
     * becomes temporarily locked as a result of too many authentication failures.
     */
    public readonly accountTemporarilyFailureLockedMessageTemplate!: pulumi.Output<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user's
     * account has been unlocked (e.g., by an administrative password reset).
     */
    public readonly accountUnlockedMessageTemplate!: pulumi.Output<string>;
    /**
     * A request criteria object that identifies which modify and modify DN requests should result in account update
     * notifications for this handler.
     */
    public readonly accountUpdateNotificationRequestCriteria!: pulumi.Output<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an existing
     * account is updated with a modify or modify DN operation that matches the criteria provided in the
     * account-update-notification-request-criteria property.
     */
    public readonly accountUpdatedMessageTemplate!: pulumi.Output<string>;
    /**
     * Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so
     * that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay
     * processing for the operation that triggered the notification.
     */
    public readonly asynchronous!: pulumi.Output<boolean>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user
     * authenticated with a password that failed to satisfy the criteria for one or more of the configured password validators.
     */
    public readonly bindPasswordFailedValidationMessageTemplate!: pulumi.Output<string>;
    /**
     * A description for this Account Status Notification Handler
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Specifies which attribute in the user's entries may be used to obtain the email address when notifying the end user.
     */
    public readonly emailAddressAttributeTypes!: pulumi.Output<string[]>;
    /**
     * The name of the JSON field whose value is the email address to which the message should be sent. The email address must
     * be contained in a top-level field whose value is a single string.
     */
    public readonly emailAddressJsonField!: pulumi.Output<string>;
    /**
     * A JSON object filter that may be used to identify which email address value to use when sending the message.
     */
    public readonly emailAddressJsonObjectFilter!: pulumi.Output<string>;
    /**
     * Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a
     * related event occurs in the server.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Account Status Notification Handler. Each
     * configuration property should be given in the form 'name=value'.
     */
    public readonly extensionArguments!: pulumi.Output<string[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Account Status Notification Handler.
     */
    public readonly extensionClass!: pulumi.Output<string>;
    /**
     * Specifies the subject that should be used for email messages generated by this account status notification handler.
     */
    public readonly messageSubjects!: pulumi.Output<string[]>;
    /**
     * Specifies the path to the file containing the message template to generate the email notification messages.
     */
    public readonly messageTemplateFiles!: pulumi.Output<string[]>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user
     * successfully authenticates to the server but will be required to choose a new password before they will be allowed to
     * perform any other operations.
     */
    public readonly mustChangePasswordMessageTemplate!: pulumi.Output<string>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user changes
     * their own password.
     */
    public readonly passwordChangedMessageTemplate!: pulumi.Output<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an
     * authentication attempt fails because the account has an expired password.
     */
    public readonly passwordExpiredMessageTemplate!: pulumi.Output<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an
     * authentication attempt succeeds, but the user's password is about to expire. This notification will only be generated
     * the first time the user authenticates within the window of time that the server should warn about an upcoming password
     * expiration.
     */
    public readonly passwordExpiringMessageTemplate!: pulumi.Output<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user's
     * password has been reset by an administrator.
     */
    public readonly passwordResetMessageTemplate!: pulumi.Output<string>;
    /**
     * Specifies an email address to which notification messages are sent, either instead of or in addition to the end user for
     * whom the notification has been generated.
     */
    public readonly recipientAddresses!: pulumi.Output<string[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.DefaultAccountStatusNotificationHandlerRequiredAction[]>;
    /**
     * The set of arguments used to customize the behavior for the Scripted Account Status Notification Handler. Each
     * configuration property should be given in the form 'name=value'.
     */
    public readonly scriptArguments!: pulumi.Output<string[]>;
    /**
     * The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Account Status Notification
     * Handler.
     */
    public readonly scriptClass!: pulumi.Output<string>;
    /**
     * Indicates whether an email notification message should be generated and sent to the set of notification recipients even
     * if the user entry does not contain any values for any of the email address attributes (that is, in cases when it is not
     * possible to notify the end user).
     */
    public readonly sendMessageWithoutEndUserAddress!: pulumi.Output<boolean>;
    /**
     * Specifies the email address from which the message is sent. Note that this does not necessarily have to be a legitimate
     * email address.
     */
    public readonly senderAddress!: pulumi.Output<string>;
    /**
     * The type of Account Status Notification Handler resource. Options are ['smtp', 'groovy-scripted', 'admin-alert',
     * 'error-log', 'multi-part-email', 'third-party']
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DefaultAccountStatusNotificationHandler resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DefaultAccountStatusNotificationHandlerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultAccountStatusNotificationHandlerArgs | DefaultAccountStatusNotificationHandlerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultAccountStatusNotificationHandlerState | undefined;
            resourceInputs["accountAuthenticatedMessageTemplate"] = state ? state.accountAuthenticatedMessageTemplate : undefined;
            resourceInputs["accountAuthenticationNotificationResultCriteria"] = state ? state.accountAuthenticationNotificationResultCriteria : undefined;
            resourceInputs["accountCreatedMessageTemplate"] = state ? state.accountCreatedMessageTemplate : undefined;
            resourceInputs["accountCreationNotificationRequestCriteria"] = state ? state.accountCreationNotificationRequestCriteria : undefined;
            resourceInputs["accountDeletedMessageTemplate"] = state ? state.accountDeletedMessageTemplate : undefined;
            resourceInputs["accountDeletionNotificationRequestCriteria"] = state ? state.accountDeletionNotificationRequestCriteria : undefined;
            resourceInputs["accountDisabledMessageTemplate"] = state ? state.accountDisabledMessageTemplate : undefined;
            resourceInputs["accountEnabledMessageTemplate"] = state ? state.accountEnabledMessageTemplate : undefined;
            resourceInputs["accountExpiredMessageTemplate"] = state ? state.accountExpiredMessageTemplate : undefined;
            resourceInputs["accountIdleLockedMessageTemplate"] = state ? state.accountIdleLockedMessageTemplate : undefined;
            resourceInputs["accountNotYetActiveMessageTemplate"] = state ? state.accountNotYetActiveMessageTemplate : undefined;
            resourceInputs["accountPermanentlyFailureLockedMessageTemplate"] = state ? state.accountPermanentlyFailureLockedMessageTemplate : undefined;
            resourceInputs["accountResetLockedMessageTemplate"] = state ? state.accountResetLockedMessageTemplate : undefined;
            resourceInputs["accountStatusNotificationTypes"] = state ? state.accountStatusNotificationTypes : undefined;
            resourceInputs["accountTemporarilyFailureLockedMessageTemplate"] = state ? state.accountTemporarilyFailureLockedMessageTemplate : undefined;
            resourceInputs["accountUnlockedMessageTemplate"] = state ? state.accountUnlockedMessageTemplate : undefined;
            resourceInputs["accountUpdateNotificationRequestCriteria"] = state ? state.accountUpdateNotificationRequestCriteria : undefined;
            resourceInputs["accountUpdatedMessageTemplate"] = state ? state.accountUpdatedMessageTemplate : undefined;
            resourceInputs["asynchronous"] = state ? state.asynchronous : undefined;
            resourceInputs["bindPasswordFailedValidationMessageTemplate"] = state ? state.bindPasswordFailedValidationMessageTemplate : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["emailAddressAttributeTypes"] = state ? state.emailAddressAttributeTypes : undefined;
            resourceInputs["emailAddressJsonField"] = state ? state.emailAddressJsonField : undefined;
            resourceInputs["emailAddressJsonObjectFilter"] = state ? state.emailAddressJsonObjectFilter : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["extensionArguments"] = state ? state.extensionArguments : undefined;
            resourceInputs["extensionClass"] = state ? state.extensionClass : undefined;
            resourceInputs["messageSubjects"] = state ? state.messageSubjects : undefined;
            resourceInputs["messageTemplateFiles"] = state ? state.messageTemplateFiles : undefined;
            resourceInputs["mustChangePasswordMessageTemplate"] = state ? state.mustChangePasswordMessageTemplate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["passwordChangedMessageTemplate"] = state ? state.passwordChangedMessageTemplate : undefined;
            resourceInputs["passwordExpiredMessageTemplate"] = state ? state.passwordExpiredMessageTemplate : undefined;
            resourceInputs["passwordExpiringMessageTemplate"] = state ? state.passwordExpiringMessageTemplate : undefined;
            resourceInputs["passwordResetMessageTemplate"] = state ? state.passwordResetMessageTemplate : undefined;
            resourceInputs["recipientAddresses"] = state ? state.recipientAddresses : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["scriptArguments"] = state ? state.scriptArguments : undefined;
            resourceInputs["scriptClass"] = state ? state.scriptClass : undefined;
            resourceInputs["sendMessageWithoutEndUserAddress"] = state ? state.sendMessageWithoutEndUserAddress : undefined;
            resourceInputs["senderAddress"] = state ? state.senderAddress : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DefaultAccountStatusNotificationHandlerArgs | undefined;
            resourceInputs["accountAuthenticatedMessageTemplate"] = args ? args.accountAuthenticatedMessageTemplate : undefined;
            resourceInputs["accountAuthenticationNotificationResultCriteria"] = args ? args.accountAuthenticationNotificationResultCriteria : undefined;
            resourceInputs["accountCreatedMessageTemplate"] = args ? args.accountCreatedMessageTemplate : undefined;
            resourceInputs["accountCreationNotificationRequestCriteria"] = args ? args.accountCreationNotificationRequestCriteria : undefined;
            resourceInputs["accountDeletedMessageTemplate"] = args ? args.accountDeletedMessageTemplate : undefined;
            resourceInputs["accountDeletionNotificationRequestCriteria"] = args ? args.accountDeletionNotificationRequestCriteria : undefined;
            resourceInputs["accountDisabledMessageTemplate"] = args ? args.accountDisabledMessageTemplate : undefined;
            resourceInputs["accountEnabledMessageTemplate"] = args ? args.accountEnabledMessageTemplate : undefined;
            resourceInputs["accountExpiredMessageTemplate"] = args ? args.accountExpiredMessageTemplate : undefined;
            resourceInputs["accountIdleLockedMessageTemplate"] = args ? args.accountIdleLockedMessageTemplate : undefined;
            resourceInputs["accountNotYetActiveMessageTemplate"] = args ? args.accountNotYetActiveMessageTemplate : undefined;
            resourceInputs["accountPermanentlyFailureLockedMessageTemplate"] = args ? args.accountPermanentlyFailureLockedMessageTemplate : undefined;
            resourceInputs["accountResetLockedMessageTemplate"] = args ? args.accountResetLockedMessageTemplate : undefined;
            resourceInputs["accountStatusNotificationTypes"] = args ? args.accountStatusNotificationTypes : undefined;
            resourceInputs["accountTemporarilyFailureLockedMessageTemplate"] = args ? args.accountTemporarilyFailureLockedMessageTemplate : undefined;
            resourceInputs["accountUnlockedMessageTemplate"] = args ? args.accountUnlockedMessageTemplate : undefined;
            resourceInputs["accountUpdateNotificationRequestCriteria"] = args ? args.accountUpdateNotificationRequestCriteria : undefined;
            resourceInputs["accountUpdatedMessageTemplate"] = args ? args.accountUpdatedMessageTemplate : undefined;
            resourceInputs["asynchronous"] = args ? args.asynchronous : undefined;
            resourceInputs["bindPasswordFailedValidationMessageTemplate"] = args ? args.bindPasswordFailedValidationMessageTemplate : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["emailAddressAttributeTypes"] = args ? args.emailAddressAttributeTypes : undefined;
            resourceInputs["emailAddressJsonField"] = args ? args.emailAddressJsonField : undefined;
            resourceInputs["emailAddressJsonObjectFilter"] = args ? args.emailAddressJsonObjectFilter : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["extensionArguments"] = args ? args.extensionArguments : undefined;
            resourceInputs["extensionClass"] = args ? args.extensionClass : undefined;
            resourceInputs["messageSubjects"] = args ? args.messageSubjects : undefined;
            resourceInputs["messageTemplateFiles"] = args ? args.messageTemplateFiles : undefined;
            resourceInputs["mustChangePasswordMessageTemplate"] = args ? args.mustChangePasswordMessageTemplate : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passwordChangedMessageTemplate"] = args ? args.passwordChangedMessageTemplate : undefined;
            resourceInputs["passwordExpiredMessageTemplate"] = args ? args.passwordExpiredMessageTemplate : undefined;
            resourceInputs["passwordExpiringMessageTemplate"] = args ? args.passwordExpiringMessageTemplate : undefined;
            resourceInputs["passwordResetMessageTemplate"] = args ? args.passwordResetMessageTemplate : undefined;
            resourceInputs["recipientAddresses"] = args ? args.recipientAddresses : undefined;
            resourceInputs["scriptArguments"] = args ? args.scriptArguments : undefined;
            resourceInputs["scriptClass"] = args ? args.scriptClass : undefined;
            resourceInputs["sendMessageWithoutEndUserAddress"] = args ? args.sendMessageWithoutEndUserAddress : undefined;
            resourceInputs["senderAddress"] = args ? args.senderAddress : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultAccountStatusNotificationHandler.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DefaultAccountStatusNotificationHandler resources.
 */
export interface DefaultAccountStatusNotificationHandlerState {
    /**
     * Supported in PingDirectory product version 9.3.0.0+. The path to a file containing the template to use to generate the
     * email message to send in the event that an account has successfully authenticated in a bind operation that matches the
     * criteria provided in the account-authentication-notification-request-criteria property.
     */
    accountAuthenticatedMessageTemplate?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 9.3.0.0+. A result criteria object that identifies which successful bind
     * operations should result in account authentication notifications for this handler.
     */
    accountAuthenticationNotificationResultCriteria?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a new account
     * is created in an add request that matches the criteria provided in the account-creation-notification-request-criteria
     * property.
     */
    accountCreatedMessageTemplate?: pulumi.Input<string>;
    /**
     * A request criteria object that identifies which add requests should result in account creation notifications for this
     * handler.
     */
    accountCreationNotificationRequestCriteria?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 9.3.0.0+. The path to a file containing the template to use to generate the
     * email message to send in the event that an existing accout has been removed in a delete request that matches the
     * criteria provided in the account-deletion-notification-request-criteria property.
     */
    accountDeletedMessageTemplate?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 9.3.0.0+. A request criteria object that identifies which delete requests
     * should result in account deletion notifications for this handler.
     */
    accountDeletionNotificationRequestCriteria?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user's
     * account is disabled by an administrator.
     */
    accountDisabledMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user's
     * account is enabled by an administrator.
     */
    accountEnabledMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an
     * authentication attempt fails because the account has an expiration time that is in the past.
     */
    accountExpiredMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that authentication
     * attempt fails because it has been too long since the user last successfully authenticated.
     */
    accountIdleLockedMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an
     * authentication attempt fails because the account has an activation time that is in the future.
     */
    accountNotYetActiveMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an account
     * becomes permanently locked as a result of too many authentication failures.
     */
    accountPermanentlyFailureLockedMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that authentication
     * attempt fails because the user failed to choose a new password in a timely manner after an administrative reset.
     */
    accountResetLockedMessageTemplate?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `admin-alert`: The types of account status notifications that should result in
     * administrative alerts. - `error-log`: Indicates which types of event can trigger an account status notification.
     */
    accountStatusNotificationTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an account
     * becomes temporarily locked as a result of too many authentication failures.
     */
    accountTemporarilyFailureLockedMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user's
     * account has been unlocked (e.g., by an administrative password reset).
     */
    accountUnlockedMessageTemplate?: pulumi.Input<string>;
    /**
     * A request criteria object that identifies which modify and modify DN requests should result in account update
     * notifications for this handler.
     */
    accountUpdateNotificationRequestCriteria?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an existing
     * account is updated with a modify or modify DN operation that matches the criteria provided in the
     * account-update-notification-request-criteria property.
     */
    accountUpdatedMessageTemplate?: pulumi.Input<string>;
    /**
     * Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so
     * that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay
     * processing for the operation that triggered the notification.
     */
    asynchronous?: pulumi.Input<boolean>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user
     * authenticated with a password that failed to satisfy the criteria for one or more of the configured password validators.
     */
    bindPasswordFailedValidationMessageTemplate?: pulumi.Input<string>;
    /**
     * A description for this Account Status Notification Handler
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies which attribute in the user's entries may be used to obtain the email address when notifying the end user.
     */
    emailAddressAttributeTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the JSON field whose value is the email address to which the message should be sent. The email address must
     * be contained in a top-level field whose value is a single string.
     */
    emailAddressJsonField?: pulumi.Input<string>;
    /**
     * A JSON object filter that may be used to identify which email address value to use when sending the message.
     */
    emailAddressJsonObjectFilter?: pulumi.Input<string>;
    /**
     * Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a
     * related event occurs in the server.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Account Status Notification Handler. Each
     * configuration property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Account Status Notification Handler.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * Specifies the subject that should be used for email messages generated by this account status notification handler.
     */
    messageSubjects?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the path to the file containing the message template to generate the email notification messages.
     */
    messageTemplateFiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user
     * successfully authenticates to the server but will be required to choose a new password before they will be allowed to
     * perform any other operations.
     */
    mustChangePasswordMessageTemplate?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user changes
     * their own password.
     */
    passwordChangedMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an
     * authentication attempt fails because the account has an expired password.
     */
    passwordExpiredMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an
     * authentication attempt succeeds, but the user's password is about to expire. This notification will only be generated
     * the first time the user authenticates within the window of time that the server should warn about an upcoming password
     * expiration.
     */
    passwordExpiringMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user's
     * password has been reset by an administrator.
     */
    passwordResetMessageTemplate?: pulumi.Input<string>;
    /**
     * Specifies an email address to which notification messages are sent, either instead of or in addition to the end user for
     * whom the notification has been generated.
     */
    recipientAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.DefaultAccountStatusNotificationHandlerRequiredAction>[]>;
    /**
     * The set of arguments used to customize the behavior for the Scripted Account Status Notification Handler. Each
     * configuration property should be given in the form 'name=value'.
     */
    scriptArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Account Status Notification
     * Handler.
     */
    scriptClass?: pulumi.Input<string>;
    /**
     * Indicates whether an email notification message should be generated and sent to the set of notification recipients even
     * if the user entry does not contain any values for any of the email address attributes (that is, in cases when it is not
     * possible to notify the end user).
     */
    sendMessageWithoutEndUserAddress?: pulumi.Input<boolean>;
    /**
     * Specifies the email address from which the message is sent. Note that this does not necessarily have to be a legitimate
     * email address.
     */
    senderAddress?: pulumi.Input<string>;
    /**
     * The type of Account Status Notification Handler resource. Options are ['smtp', 'groovy-scripted', 'admin-alert',
     * 'error-log', 'multi-part-email', 'third-party']
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DefaultAccountStatusNotificationHandler resource.
 */
export interface DefaultAccountStatusNotificationHandlerArgs {
    /**
     * Supported in PingDirectory product version 9.3.0.0+. The path to a file containing the template to use to generate the
     * email message to send in the event that an account has successfully authenticated in a bind operation that matches the
     * criteria provided in the account-authentication-notification-request-criteria property.
     */
    accountAuthenticatedMessageTemplate?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 9.3.0.0+. A result criteria object that identifies which successful bind
     * operations should result in account authentication notifications for this handler.
     */
    accountAuthenticationNotificationResultCriteria?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a new account
     * is created in an add request that matches the criteria provided in the account-creation-notification-request-criteria
     * property.
     */
    accountCreatedMessageTemplate?: pulumi.Input<string>;
    /**
     * A request criteria object that identifies which add requests should result in account creation notifications for this
     * handler.
     */
    accountCreationNotificationRequestCriteria?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 9.3.0.0+. The path to a file containing the template to use to generate the
     * email message to send in the event that an existing accout has been removed in a delete request that matches the
     * criteria provided in the account-deletion-notification-request-criteria property.
     */
    accountDeletedMessageTemplate?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 9.3.0.0+. A request criteria object that identifies which delete requests
     * should result in account deletion notifications for this handler.
     */
    accountDeletionNotificationRequestCriteria?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user's
     * account is disabled by an administrator.
     */
    accountDisabledMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user's
     * account is enabled by an administrator.
     */
    accountEnabledMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an
     * authentication attempt fails because the account has an expiration time that is in the past.
     */
    accountExpiredMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that authentication
     * attempt fails because it has been too long since the user last successfully authenticated.
     */
    accountIdleLockedMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an
     * authentication attempt fails because the account has an activation time that is in the future.
     */
    accountNotYetActiveMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an account
     * becomes permanently locked as a result of too many authentication failures.
     */
    accountPermanentlyFailureLockedMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that authentication
     * attempt fails because the user failed to choose a new password in a timely manner after an administrative reset.
     */
    accountResetLockedMessageTemplate?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `admin-alert`: The types of account status notifications that should result in
     * administrative alerts. - `error-log`: Indicates which types of event can trigger an account status notification.
     */
    accountStatusNotificationTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an account
     * becomes temporarily locked as a result of too many authentication failures.
     */
    accountTemporarilyFailureLockedMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user's
     * account has been unlocked (e.g., by an administrative password reset).
     */
    accountUnlockedMessageTemplate?: pulumi.Input<string>;
    /**
     * A request criteria object that identifies which modify and modify DN requests should result in account update
     * notifications for this handler.
     */
    accountUpdateNotificationRequestCriteria?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an existing
     * account is updated with a modify or modify DN operation that matches the criteria provided in the
     * account-update-notification-request-criteria property.
     */
    accountUpdatedMessageTemplate?: pulumi.Input<string>;
    /**
     * Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so
     * that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay
     * processing for the operation that triggered the notification.
     */
    asynchronous?: pulumi.Input<boolean>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user
     * authenticated with a password that failed to satisfy the criteria for one or more of the configured password validators.
     */
    bindPasswordFailedValidationMessageTemplate?: pulumi.Input<string>;
    /**
     * A description for this Account Status Notification Handler
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies which attribute in the user's entries may be used to obtain the email address when notifying the end user.
     */
    emailAddressAttributeTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the JSON field whose value is the email address to which the message should be sent. The email address must
     * be contained in a top-level field whose value is a single string.
     */
    emailAddressJsonField?: pulumi.Input<string>;
    /**
     * A JSON object filter that may be used to identify which email address value to use when sending the message.
     */
    emailAddressJsonObjectFilter?: pulumi.Input<string>;
    /**
     * Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a
     * related event occurs in the server.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The set of arguments used to customize the behavior for the Third Party Account Status Notification Handler. Each
     * configuration property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party Account Status Notification Handler.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * Specifies the subject that should be used for email messages generated by this account status notification handler.
     */
    messageSubjects?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the path to the file containing the message template to generate the email notification messages.
     */
    messageTemplateFiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user
     * successfully authenticates to the server but will be required to choose a new password before they will be allowed to
     * perform any other operations.
     */
    mustChangePasswordMessageTemplate?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user changes
     * their own password.
     */
    passwordChangedMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an
     * authentication attempt fails because the account has an expired password.
     */
    passwordExpiredMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an
     * authentication attempt succeeds, but the user's password is about to expire. This notification will only be generated
     * the first time the user authenticates within the window of time that the server should warn about an upcoming password
     * expiration.
     */
    passwordExpiringMessageTemplate?: pulumi.Input<string>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user's
     * password has been reset by an administrator.
     */
    passwordResetMessageTemplate?: pulumi.Input<string>;
    /**
     * Specifies an email address to which notification messages are sent, either instead of or in addition to the end user for
     * whom the notification has been generated.
     */
    recipientAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of arguments used to customize the behavior for the Scripted Account Status Notification Handler. Each
     * configuration property should be given in the form 'name=value'.
     */
    scriptArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Account Status Notification
     * Handler.
     */
    scriptClass?: pulumi.Input<string>;
    /**
     * Indicates whether an email notification message should be generated and sent to the set of notification recipients even
     * if the user entry does not contain any values for any of the email address attributes (that is, in cases when it is not
     * possible to notify the end user).
     */
    sendMessageWithoutEndUserAddress?: pulumi.Input<boolean>;
    /**
     * Specifies the email address from which the message is sent. Note that this does not necessarily have to be a legitimate
     * email address.
     */
    senderAddress?: pulumi.Input<string>;
}
