// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPostLdifExportTaskProcessor(args: GetPostLdifExportTaskProcessorArgs, opts?: pulumi.InvokeOptions): Promise<GetPostLdifExportTaskProcessorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getPostLdifExportTaskProcessor:getPostLdifExportTaskProcessor", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPostLdifExportTaskProcessor.
 */
export interface GetPostLdifExportTaskProcessorArgs {
    name: string;
}

/**
 * A collection of values returned by getPostLdifExportTaskProcessor.
 */
export interface GetPostLdifExportTaskProcessorResult {
    readonly awsExternalServer: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly extensionArguments: string[];
    readonly extensionClass: string;
    readonly fileRetentionPattern: string;
    readonly id: string;
    readonly maximumConcurrentTransferConnections: number;
    readonly maximumFileAgeToRetain: string;
    readonly maximumFileCountToRetain: number;
    readonly name: string;
    readonly s3BucketName: string;
    readonly targetThroughputInMegabitsPerSecond: number;
    readonly type: string;
}
export function getPostLdifExportTaskProcessorOutput(args: GetPostLdifExportTaskProcessorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPostLdifExportTaskProcessorResult> {
    return pulumi.output(args).apply((a: any) => getPostLdifExportTaskProcessor(a, opts))
}

/**
 * A collection of arguments for invoking getPostLdifExportTaskProcessor.
 */
export interface GetPostLdifExportTaskProcessorOutputArgs {
    name: pulumi.Input<string>;
}
