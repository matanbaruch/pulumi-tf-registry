// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConjurAuthenticationMethod(args: GetConjurAuthenticationMethodArgs, opts?: pulumi.InvokeOptions): Promise<GetConjurAuthenticationMethodResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getConjurAuthenticationMethod:getConjurAuthenticationMethod", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConjurAuthenticationMethod.
 */
export interface GetConjurAuthenticationMethodArgs {
    name: string;
}

/**
 * A collection of values returned by getConjurAuthenticationMethod.
 */
export interface GetConjurAuthenticationMethodResult {
    readonly apiKey: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly password: string;
    readonly type: string;
    readonly username: string;
}
export function getConjurAuthenticationMethodOutput(args: GetConjurAuthenticationMethodOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConjurAuthenticationMethodResult> {
    return pulumi.output(args).apply((a: any) => getConjurAuthenticationMethod(a, opts))
}

/**
 * A collection of arguments for invoking getConjurAuthenticationMethod.
 */
export interface GetConjurAuthenticationMethodOutputArgs {
    name: pulumi.Input<string>;
}
