// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LdapCorrelationAttributePair extends pulumi.CustomResource {
    /**
     * Get an existing LdapCorrelationAttributePair resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LdapCorrelationAttributePairState, opts?: pulumi.CustomResourceOptions): LdapCorrelationAttributePair {
        return new LdapCorrelationAttributePair(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/ldapCorrelationAttributePair:LdapCorrelationAttributePair';

    /**
     * Returns true if the given object is an instance of LdapCorrelationAttributePair.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LdapCorrelationAttributePair {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LdapCorrelationAttributePair.__pulumiType;
    }

    /**
     * Name of the parent Correlated LDAP Data View
     */
    public readonly correlatedLdapDataViewName!: pulumi.Output<string>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * The LDAP attribute from the base SCIM Resource Type whose value will be used to match objects in the Correlated LDAP
     * Data View.
     */
    public readonly primaryCorrelationAttribute!: pulumi.Output<string>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.LdapCorrelationAttributePairRequiredAction[]>;
    /**
     * Name of the parent SCIM Resource Type
     */
    public readonly scimResourceTypeName!: pulumi.Output<string>;
    /**
     * The LDAP attribute from the Correlated LDAP Data View whose value will be matched.
     */
    public readonly secondaryCorrelationAttribute!: pulumi.Output<string>;
    /**
     * The type of LDAP Correlation Attribute Pair resource. Options are ['ldap-correlation-attribute-pair']
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a LdapCorrelationAttributePair resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LdapCorrelationAttributePairArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LdapCorrelationAttributePairArgs | LdapCorrelationAttributePairState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LdapCorrelationAttributePairState | undefined;
            resourceInputs["correlatedLdapDataViewName"] = state ? state.correlatedLdapDataViewName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["primaryCorrelationAttribute"] = state ? state.primaryCorrelationAttribute : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["scimResourceTypeName"] = state ? state.scimResourceTypeName : undefined;
            resourceInputs["secondaryCorrelationAttribute"] = state ? state.secondaryCorrelationAttribute : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as LdapCorrelationAttributePairArgs | undefined;
            if ((!args || args.correlatedLdapDataViewName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'correlatedLdapDataViewName'");
            }
            if ((!args || args.primaryCorrelationAttribute === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryCorrelationAttribute'");
            }
            if ((!args || args.scimResourceTypeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scimResourceTypeName'");
            }
            if ((!args || args.secondaryCorrelationAttribute === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secondaryCorrelationAttribute'");
            }
            resourceInputs["correlatedLdapDataViewName"] = args ? args.correlatedLdapDataViewName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["primaryCorrelationAttribute"] = args ? args.primaryCorrelationAttribute : undefined;
            resourceInputs["scimResourceTypeName"] = args ? args.scimResourceTypeName : undefined;
            resourceInputs["secondaryCorrelationAttribute"] = args ? args.secondaryCorrelationAttribute : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LdapCorrelationAttributePair.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LdapCorrelationAttributePair resources.
 */
export interface LdapCorrelationAttributePairState {
    /**
     * Name of the parent Correlated LDAP Data View
     */
    correlatedLdapDataViewName?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP attribute from the base SCIM Resource Type whose value will be used to match objects in the Correlated LDAP
     * Data View.
     */
    primaryCorrelationAttribute?: pulumi.Input<string>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.LdapCorrelationAttributePairRequiredAction>[]>;
    /**
     * Name of the parent SCIM Resource Type
     */
    scimResourceTypeName?: pulumi.Input<string>;
    /**
     * The LDAP attribute from the Correlated LDAP Data View whose value will be matched.
     */
    secondaryCorrelationAttribute?: pulumi.Input<string>;
    /**
     * The type of LDAP Correlation Attribute Pair resource. Options are ['ldap-correlation-attribute-pair']
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LdapCorrelationAttributePair resource.
 */
export interface LdapCorrelationAttributePairArgs {
    /**
     * Name of the parent Correlated LDAP Data View
     */
    correlatedLdapDataViewName: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * The LDAP attribute from the base SCIM Resource Type whose value will be used to match objects in the Correlated LDAP
     * Data View.
     */
    primaryCorrelationAttribute: pulumi.Input<string>;
    /**
     * Name of the parent SCIM Resource Type
     */
    scimResourceTypeName: pulumi.Input<string>;
    /**
     * The LDAP attribute from the Correlated LDAP Data View whose value will be matched.
     */
    secondaryCorrelationAttribute: pulumi.Input<string>;
    /**
     * The type of LDAP Correlation Attribute Pair resource. Options are ['ldap-correlation-attribute-pair']
     */
    type?: pulumi.Input<string>;
}
