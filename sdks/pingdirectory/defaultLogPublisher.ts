// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DefaultLogPublisher extends pulumi.CustomResource {
    /**
     * Get an existing DefaultLogPublisher resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultLogPublisherState, opts?: pulumi.CustomResourceOptions): DefaultLogPublisher {
        return new DefaultLogPublisher(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/defaultLogPublisher:DefaultLogPublisher';

    /**
     * Returns true if the given object is an instance of DefaultLogPublisher.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultLogPublisher {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultLogPublisher.__pulumiType;
    }

    /**
     * Specifies the access token validator message types that can be logged.
     */
    public readonly accessTokenValidatorMessageTypes!: pulumi.Output<string[]>;
    /**
     * Specifies whether to append to existing log files.
     */
    public readonly append!: pulumi.Output<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-based-access`, `syslog-text-access`, `file-based-access`]:
     * Indicates whether the Writer Based Access Log Publisher will publish records asynchronously. - `syslog-based-error`:
     * Indicates whether the Syslog Based Error Log Publisher will publish records asynchronously. -
     * `third-party-file-based-access`: Indicates whether the Third Party File Based Access Log Publisher will publish records
     * asynchronously. - `operation-timing-access`: Indicates whether the Operation Timing Access Log Publisher will publish
     * records asynchronously. - `admin-alert-access`: Indicates whether the Admin Alert Access Log Publisher will publish
     * records asynchronously. - `file-based-trace`: Indicates whether the Writer Based Trace Log Publisher will publish
     * records asynchronously. - `common-log-file-http-operation`: Indicates whether the Common Log File HTTP Operation Log
     * Publisher will publish records asynchronously. - `file-based-json-audit`: Indicates whether the File Based JSON Audit
     * Log Publisher will publish records asynchronously. - `file-based-debug`: Indicates whether the File Based Debug Log
     * Publisher will publish records asynchronously. - `file-based-error`: Indicates whether the File Based Error Log
     * Publisher will publish records asynchronously. - `detailed-http-operation`: Indicates whether the Detailed HTTP
     * Operation Log Publisher will publish records asynchronously. - `json-access`: Indicates whether the JSON Access Log
     * Publisher will publish records asynchronously. - `debug-access`: Indicates whether the Debug Access Log Publisher will
     * publish records asynchronously. - `file-based-audit`: Indicates whether the File Based Audit Log Publisher will publish
     * records asynchronously. - `json-error`: Indicates whether the JSON Error Log Publisher will publish records
     * asynchronously. - `groovy-scripted-file-based-access`: Indicates whether the Scripted File Based Access Log Publisher
     * will publish records asynchronously. - `groovy-scripted-file-based-error`: Indicates whether the Scripted File Based
     * Error Log Publisher will publish records asynchronously. - `third-party-file-based-error`: Indicates whether the Third
     * Party File Based Error Log Publisher will publish records asynchronously. - `file-based-json-http-operation`: Indicates
     * whether the File Based JSON HTTP Operation Log Publisher will publish records asynchronously.
     */
    public readonly asynchronous!: pulumi.Output<boolean>;
    /**
     * Specifies whether to flush the writer after every log record.
     */
    public readonly autoFlush!: pulumi.Output<boolean>;
    /**
     * Specifies the log file buffer size.
     */
    public readonly bufferSize!: pulumi.Output<string>;
    /**
     * Specifies the type of compression (if any) to use for log files that are written.
     */
    public readonly compressionMechanism!: pulumi.Output<string>;
    /**
     * Specifies a set of connection criteria that must match the associated client connection in order for a connect,
     * disconnect, request, or result message to be logged.
     */
    public readonly connectionCriteria!: pulumi.Output<string>;
    /**
     * Specifies the consent message types that can be logged.
     */
    public readonly consentMessageTypes!: pulumi.Output<string[]>;
    /**
     * Indicates whether to automatically log result messages for any operation in which the corresponding request was logged.
     * In such cases, the result, entry, and reference criteria will be ignored, although the log-responses,
     * log-search-entries, and log-search-references properties will be honored.
     */
    public readonly correlateRequestsAndResults!: pulumi.Output<boolean>;
    /**
     * Indicates whether to include debugging information about ACIs being used by the operations being logged.
     */
    public readonly debugAciEnabled!: pulumi.Output<boolean>;
    /**
     * Specifies the debug message types which can be logged. Note that enabling these may result in sensitive information
     * being logged.
     */
    public readonly debugMessageTypes!: pulumi.Output<string[]>;
    /**
     * The debug message categories to be logged when none of the defined targets match the message.
     */
    public readonly defaultDebugCategories!: pulumi.Output<string[]>;
    /**
     * The lowest severity level of debug messages to log when none of the defined targets match the message.
     */
    public readonly defaultDebugLevel!: pulumi.Output<string>;
    /**
     * Indicates whether to include the cause of exceptions in exception thrown and caught messages logged by default.
     */
    public readonly defaultIncludeThrowableCause!: pulumi.Output<boolean>;
    /**
     * Indicates whether to include method arguments in debug messages logged by default.
     */
    public readonly defaultOmitMethodEntryArguments!: pulumi.Output<boolean>;
    /**
     * Indicates whether to include the return value in debug messages logged by default.
     */
    public readonly defaultOmitMethodReturnValue!: pulumi.Output<boolean>;
    /**
     * Specifies the default severity levels for the logger.
     */
    public readonly defaultSeverities!: pulumi.Output<string[]>;
    /**
     * Indicates the number of stack frames to include in the stack trace for method entry and exception thrown messages.
     */
    public readonly defaultThrowableStackFrames!: pulumi.Output<number>;
    /**
     * A description for this Log Publisher
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Specifies the Directory REST API message types which can be logged.
     */
    public readonly directoryRestApiMessageTypes!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-json-audit`, `third-party-file-based-access`,
     * `operation-timing-access`, `third-party-http-operation`, `admin-alert-access`, `file-based-trace`, `jdbc-based-error`,
     * `jdbc-based-access`, `common-log-file-http-operation`, `syslog-text-error`, `file-based-json-audit`, `file-based-debug`,
     * `file-based-error`, `third-party-error`, `syslog-text-access`, `detailed-http-operation`, `json-access`, `debug-access`,
     * `syslog-json-http-operation`, `third-party-access`, `file-based-audit`, `json-error`,
     * `groovy-scripted-file-based-access`, `groovy-scripted-file-based-error`, `syslog-json-access`, `groovy-scripted-access`,
     * `third-party-file-based-error`, `file-based-access`, `groovy-scripted-error`, `file-based-json-http-operation`,
     * `syslog-json-error`, `groovy-scripted-http-operation`]: Indicates whether the Log Publisher is enabled for use. -
     * `syslog-based-error`: Indicates whether the Syslog Based Error Log Publisher is enabled for use. - `console-json-error`:
     * Indicates whether the Console JSON Error Log Publisher is enabled for use. - `syslog-based-access`: Indicates whether
     * the Syslog Based Access Log Publisher is enabled for use. - `console-json-audit`: Indicates whether the Console JSON
     * Audit Log Publisher is enabled for use. - `console-json-http-operation`: Indicates whether the Console JSON HTTP
     * Operation Log Publisher is enabled for use. - `console-json-access`: Indicates whether the Console JSON Access Log
     * Publisher is enabled for use.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
     */
    public readonly encryptLog!: pulumi.Output<boolean>;
    /**
     * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided,
     * the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used
     * to obtain a list of the encryption settings definitions available in the server.
     */
    public readonly encryptionSettingsDefinitionId!: pulumi.Output<string>;
    /**
     * Specifies the names of any attribute types that should be excluded from the audit log.
     */
    public readonly excludeAttributes!: pulumi.Output<string[]>;
    /**
     * Specifies a set of HTTP request URL paths to determine whether log messages are excluded for a HTTP request. Log
     * messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request
     * path does match an include-path-pattern (or no include-path-pattern is specified).
     */
    public readonly excludePathPatterns!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The set of arguments used to customize the
     * behavior for the Third Party File Based Access Log Publisher. Each configuration property should be given in the form
     * 'name=value'. - `third-party-http-operation`: The set of arguments used to customize the behavior for the Third Party
     * HTTP Operation Log Publisher. Each configuration property should be given in the form 'name=value'. -
     * `third-party-error`: The set of arguments used to customize the behavior for the Third Party Error Log Publisher. Each
     * configuration property should be given in the form 'name=value'. - `third-party-access`: The set of arguments used to
     * customize the behavior for the Third Party Access Log Publisher. Each configuration property should be given in the form
     * 'name=value'. - `third-party-file-based-error`: The set of arguments used to customize the behavior for the Third Party
     * File Based Error Log Publisher. Each configuration property should be given in the form 'name=value'.
     */
    public readonly extensionArguments!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The fully-qualified name of the Java class
     * providing the logic for the Third Party File Based Access Log Publisher. - `third-party-http-operation`: The
     * fully-qualified name of the Java class providing the logic for the Third Party HTTP Operation Log Publisher. -
     * `third-party-error`: The fully-qualified name of the Java class providing the logic for the Third Party Error Log
     * Publisher. - `third-party-access`: The fully-qualified name of the Java class providing the logic for the Third Party
     * Access Log Publisher. - `third-party-file-based-error`: The fully-qualified name of the Java class providing the logic
     * for the Third Party File Based Error Log Publisher.
     */
    public readonly extensionClass!: pulumi.Output<string>;
    /**
     * Specifies the Server SDK extension message types that can be logged.
     */
    public readonly extensionMessageTypes!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - One of [`admin-alert-access`, `syslog-based-access`, `syslog-text-access`,
     * `json-access`, `syslog-json-access`, `console-json-access`, `file-based-access`]: Indicates whether to use generified
     * version of certain message strings, including diagnostic messages, additional information messages, authentication
     * failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a
     * string or %d for an integer) rather than the version of the string with those placeholders replaced with specific
     * values. - One of [`console-json-error`, `syslog-text-error`, `file-based-error`, `json-error`, `syslog-json-error`]:
     * Indicates whether to use the generified version of the log message string (which may use placeholders like %s for a
     * string or %d for an integer), rather than the version of the message with those placeholders replaced with specific
     * values that would normally be written to the log.
     */
    public readonly generifyMessageStringsWhenPossible!: pulumi.Output<boolean>;
    /**
     * Specifies the HTTP message types which can be logged.
     */
    public readonly httpMessageTypes!: pulumi.Output<string[]>;
    /**
     * Specifies the ID token validator message types that can be logged.
     */
    public readonly idTokenValidatorMessageTypes!: pulumi.Output<string[]>;
    /**
     * Indicates whether log messages for add requests should include a list of the names of the attributes included in the
     * entry to add.
     */
    public readonly includeAddAttributeNames!: pulumi.Output<boolean>;
    /**
     * Supported in PingDirectory product version 10.1.0.0+. Indicates whether to log connection details in request messages,
     * including, where applicable, the client IP address and port, the server IP address and port, and the communication
     * protocol.
     */
    public readonly includeConnectionDetailsInRequestMessages!: pulumi.Output<boolean>;
    /**
     * Indicates whether log messages for search requests should include extended information from the request, including the
     * requested size limit, time limit, alias dereferencing behavior, and types only behavior.
     */
    public readonly includeExtendedSearchRequestDetails!: pulumi.Output<boolean>;
    /**
     * Indicates whether log messages should include the instance name for the Directory Server.
     */
    public readonly includeInstanceName!: pulumi.Output<boolean>;
    /**
     * Indicates whether to include information about any intermediate client request control that may have been included in
     * the request.
     */
    public readonly includeIntermediateClientRequestControl!: pulumi.Output<boolean>;
    /**
     * Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.
     */
    public readonly includeModifyAttributeNames!: pulumi.Output<boolean>;
    /**
     * Indicates whether to include information about any operation purpose request control that may have been included in the
     * request.
     */
    public readonly includeOperationPurposeRequestControl!: pulumi.Output<boolean>;
    /**
     * Specifies a set of HTTP request URL paths to determine whether log messages are included for a HTTP request. Log
     * messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request
     * path does match an include-path-pattern (or no include-path-pattern is specified).
     */
    public readonly includePathPatterns!: pulumi.Output<string[]>;
    /**
     * Indicates whether log messages should include the product name for the Directory Server.
     */
    public readonly includeProductName!: pulumi.Output<boolean>;
    /**
     * Indicates whether to log information about the replication change ID.
     */
    public readonly includeReplicationChangeId!: pulumi.Output<boolean>;
    /**
     * Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the
     * request.
     */
    public readonly includeRequestControls!: pulumi.Output<boolean>;
    /**
     * Indicates whether log messages for intermediate responses should include information about the associated operation
     * request.
     */
    public readonly includeRequestDetailsInIntermediateResponseMessages!: pulumi.Output<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`admin-alert-access`, `syslog-based-access`, `syslog-text-access`,
     * `json-access`, `syslog-json-access`, `console-json-access`, `file-based-access`]: Indicates whether log messages for
     * operation results should include information about both the request and the result. - One of [`detailed-http-operation`,
     * `syslog-json-http-operation`, `console-json-http-operation`, `file-based-json-http-operation`]: Indicates whether result
     * log messages should include all of the elements of request log messages. This may be used to record a single message per
     * operation with details about both the request and response.
     */
    public readonly includeRequestDetailsInResultMessages!: pulumi.Output<boolean>;
    /**
     * Indicates whether log messages for search result entries should include information about the associated search request.
     */
    public readonly includeRequestDetailsInSearchEntryMessages!: pulumi.Output<boolean>;
    /**
     * Indicates whether log messages for search result references should include information about the associated search
     * request.
     */
    public readonly includeRequestDetailsInSearchReferenceMessages!: pulumi.Output<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-json-audit`, `admin-alert-access`, `syslog-based-access`,
     * `file-based-json-audit`, `syslog-text-access`, `json-access`, `file-based-audit`, `syslog-json-access`,
     * `console-json-audit`, `console-json-access`, `file-based-access`]: Indicates whether log messages for operation requests
     * should include the DN of the authenticated user for the client connection on which the operation was requested. -
     * `operation-timing-access`: Indicates whether log messages should include the DN of the authenticated user for the client
     * connection on which the operation was requested.
     */
    public readonly includeRequesterDn!: pulumi.Output<boolean>;
    /**
     * Indicates whether log messages for operation requests should include the IP address of the client that requested the
     * operation.
     */
    public readonly includeRequesterIpAddress!: pulumi.Output<boolean>;
    /**
     * Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the
     * result.
     */
    public readonly includeResponseControls!: pulumi.Output<boolean>;
    /**
     * Indicates whether result log messages should include human-readable names for result codes in addition to their numeric
     * values.
     */
    public readonly includeResultCodeNames!: pulumi.Output<boolean>;
    /**
     * Indicates whether log messages for search result entries should include a list of the names of the attributes included
     * in the entry that was returned.
     */
    public readonly includeSearchEntryAttributeNames!: pulumi.Output<boolean>;
    /**
     * Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the
     * server instance at startup and may be used to identify when the server has been restarted.
     */
    public readonly includeStartupId!: pulumi.Output<boolean>;
    /**
     * Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be
     * used to correlate log messages from the same thread within a single log as well as generated by the same thread across
     * different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM
     * Stack Trace,cn=monitor entry.
     */
    public readonly includeThreadId!: pulumi.Output<boolean>;
    /**
     * Indicates whether to log information about the result of replication assurance processing.
     */
    public readonly logAssuranceCompleted!: pulumi.Output<boolean>;
    /**
     * Indicates whether to log information about any client certificates presented to the server.
     */
    public readonly logClientCertificates!: pulumi.Output<boolean>;
    /**
     * Indicates whether to log information about connections established to the server.
     */
    public readonly logConnects!: pulumi.Output<boolean>;
    /**
     * Indicates whether to log information about connections that have been closed by the client or terminated by the server.
     */
    public readonly logDisconnects!: pulumi.Output<boolean>;
    /**
     * The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.
     */
    public readonly logFieldBehavior!: pulumi.Output<string>;
    /**
     * The log field mapping associates loggable fields to database column names. The table name is not part of this mapping.
     */
    public readonly logFieldMapping!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The file name to use for the log files generated
     * by the Third Party File Based Access Log Publisher. The path to the file can be specified either as relative to the
     * server root or as an absolute path. - `operation-timing-access`: The file name to use for the log files generated by the
     * Operation Timing Access Log Publisher. The path to the file can be specified either as relative to the server root or as
     * an absolute path. - `file-based-trace`: The file name to use for the log files generated by the File Based Trace Log
     * Publisher. The path to the file can be specified either as relative to the server root or as an absolute path. -
     * `common-log-file-http-operation`: The file name to use for the log files generated by the Common Log File HTTP Operation
     * Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path. -
     * `file-based-json-audit`: The file name to use for the log files generated by the File Based JSON Audit Log Publisher.
     * The path to the file can be specified either as relative to the server root or as an absolute path. -
     * `file-based-debug`: The file name to use for the log files generated by the File Based Debug Log Publisher. The path to
     * the file can be specified either as relative to the server root or as an absolute path. - `file-based-error`: The file
     * name to use for the log files generated by the File Based Error Log Publisher. The path to the file can be specified
     * either as relative to the server root or as an absolute path. - `detailed-http-operation`: The file name to use for the
     * log files generated by the Detailed HTTP Operation Log Publisher. The path to the file can be specified either as
     * relative to the server root or as an absolute path. - `json-access`: The file name to use for the log files generated by
     * the JSON Access Log Publisher. The path to the file can be specified either as relative to the server root or as an
     * absolute path. - `debug-access`: The file name to use for the log files generated by the Debug Access Log Publisher. The
     * path to the file can be specified either as relative to the server root or as an absolute path. - `file-based-audit`:
     * The file name to use for the log files generated by the File Based Audit Log Publisher. The path to the file can be
     * specified either as relative to the server root or as an absolute path. - `json-error`: The file name to use for the log
     * files generated by the JSON Error Log Publisher. The path to the file can be specified either as relative to the server
     * root or as an absolute path. - `groovy-scripted-file-based-access`: The file name to use for the log files generated by
     * the Scripted File Based Access Log Publisher. The path to the file can be specified either as relative to the server
     * root or as an absolute path. - `groovy-scripted-file-based-error`: The file name to use for the log files generated by
     * the Scripted File Based Error Log Publisher. The path to the file can be specified either as relative to the server root
     * or as an absolute path. - `third-party-file-based-error`: The file name to use for the log files generated by the Third
     * Party File Based Error Log Publisher. The path to the file can be specified either as relative to the server root or as
     * an absolute path. - `file-based-access`: The file name to use for the log files generated by the File Based Access Log
     * Publisher. The path to the file can be specified either as relative to the server root or as an absolute path. -
     * `file-based-json-http-operation`: The file name to use for the log files generated by the File Based JSON HTTP Operation
     * Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
     */
    public readonly logFile!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The UNIX permissions of the log files created by
     * this Third Party File Based Access Log Publisher. - `operation-timing-access`: The UNIX permissions of the log files
     * created by this Operation Timing Access Log Publisher. - `file-based-trace`: The UNIX permissions of the log files
     * created by this File Based Trace Log Publisher. - `common-log-file-http-operation`: The UNIX permissions of the log
     * files created by this Common Log File HTTP Operation Log Publisher. - `file-based-json-audit`: The UNIX permissions of
     * the log files created by this File Based JSON Audit Log Publisher. - `file-based-debug`: The UNIX permissions of the log
     * files created by this File Based Debug Log Publisher. - `file-based-error`: The UNIX permissions of the log files
     * created by this File Based Error Log Publisher. - `detailed-http-operation`: The UNIX permissions of the log files
     * created by this Detailed HTTP Operation Log Publisher. - `json-access`: The UNIX permissions of the log files created by
     * this JSON Access Log Publisher. - `debug-access`: The UNIX permissions of the log files created by this Debug Access Log
     * Publisher. - `file-based-audit`: The UNIX permissions of the log files created by this File Based Audit Log Publisher. -
     * `json-error`: The UNIX permissions of the log files created by this JSON Error Log Publisher. -
     * `groovy-scripted-file-based-access`: The UNIX permissions of the log files created by this Scripted File Based Access
     * Log Publisher. - `groovy-scripted-file-based-error`: The UNIX permissions of the log files created by this Scripted File
     * Based Error Log Publisher. - `third-party-file-based-error`: The UNIX permissions of the log files created by this Third
     * Party File Based Error Log Publisher. - `file-based-access`: The UNIX permissions of the log files created by this File
     * Based Access Log Publisher. - `file-based-json-http-operation`: The UNIX permissions of the log files created by this
     * File Based JSON HTTP Operation Log Publisher.
     */
    public readonly logFilePermissions!: pulumi.Output<string>;
    /**
     * Indicates whether to log information about intermediate responses sent to the client.
     */
    public readonly logIntermediateResponses!: pulumi.Output<boolean>;
    /**
     * Supported in PingDirectory product version 10.1.0.0+. Policy to determine whether the Error Log Publisher should print a
     * message to the log.
     */
    public readonly logMessageExclusionPolicies!: pulumi.Output<string[]>;
    /**
     * Indicates whether the redirect URI (i.e., the value of the "Location" header from responses) should be included in
     * response log messages.
     */
    public readonly logRedirectUri!: pulumi.Output<boolean>;
    /**
     * Indicates whether to log the type of credentials given if an "Authorization" header was included in the request. Logging
     * the authorization type may be useful, and is much more secure than logging the entire value of the "Authorization"
     * header.
     */
    public readonly logRequestAuthorizationType!: pulumi.Output<boolean>;
    /**
     * Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is
     * much more secure than logging the entire content of the cookies (which may include sensitive information).
     */
    public readonly logRequestCookieNames!: pulumi.Output<boolean>;
    /**
     * Indicates whether request log messages should include information about HTTP headers included in the request.
     */
    public readonly logRequestHeaders!: pulumi.Output<string>;
    /**
     * Indicates what (if any) information about request parameters should be included in request log messages. Note that this
     * will only be used for requests with a method other than GET, since GET request parameters will be included in the
     * request URL.
     */
    public readonly logRequestParameters!: pulumi.Output<string>;
    /**
     * Indicates whether request log messages should include information about the HTTP version specified in the request.
     */
    public readonly logRequestProtocol!: pulumi.Output<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`third-party-file-based-access`, `admin-alert-access`,
     * `jdbc-based-access`, `syslog-based-access`, `syslog-text-access`, `json-access`, `debug-access`, `third-party-access`,
     * `groovy-scripted-file-based-access`, `syslog-json-access`, `groovy-scripted-access`, `console-json-access`,
     * `file-based-access`]: Indicates whether to log information about requests received from clients. - One of
     * [`detailed-http-operation`, `syslog-json-http-operation`, `console-json-http-operation`,
     * `file-based-json-http-operation`]: Indicates whether to record a log message with information about requests received
     * from the client.
     */
    public readonly logRequests!: pulumi.Output<boolean>;
    /**
     * Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is
     * much more secure than logging the entire content of the cookies (which may include sensitive information).
     */
    public readonly logResponseCookieNames!: pulumi.Output<boolean>;
    /**
     * Indicates whether response log messages should include information about HTTP headers included in the response.
     */
    public readonly logResponseHeaders!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - One of [`third-party-file-based-access`, `admin-alert-access`,
     * `jdbc-based-access`, `syslog-based-access`, `syslog-text-access`, `json-access`, `debug-access`, `third-party-access`,
     * `groovy-scripted-file-based-access`, `syslog-json-access`, `groovy-scripted-access`, `console-json-access`,
     * `file-based-access`]: Indicates whether to log information about the results of client requests. - One of
     * [`detailed-http-operation`, `syslog-json-http-operation`, `console-json-http-operation`,
     * `file-based-json-http-operation`]: Indicates whether to record a log message with information about the result of
     * processing a requested HTTP operation.
     */
    public readonly logResults!: pulumi.Output<boolean>;
    /**
     * Indicates whether to log information about search result entries sent to the client.
     */
    public readonly logSearchEntries!: pulumi.Output<boolean>;
    /**
     * Indicates whether to log information about search result references sent to the client.
     */
    public readonly logSearchReferences!: pulumi.Output<boolean>;
    /**
     * Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that
     * has been performed.
     */
    public readonly logSecurityNegotiation!: pulumi.Output<boolean>;
    /**
     * The table name to log entries to the database server.
     */
    public readonly logTableName!: pulumi.Output<string>;
    /**
     * Specifies the behavior that the server should exhibit if an error occurs during logging processing.
     */
    public readonly loggingErrorBehavior!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - One of [`operation-timing-access`, `admin-alert-access`, `file-based-trace`,
     * `syslog-based-access`, `syslog-text-access`, `json-access`, `syslog-json-access`, `console-json-access`,
     * `file-based-access`]: Specifies the maximum number of characters that may be included in any string in a log message
     * before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted.
     * This can help prevent extremely long log messages from being written. - `detailed-http-operation`: Specifies the maximum
     * length of any individual string that should be logged. If a log message includes a string longer than this number of
     * characters, it will be truncated. A value of zero indicates that no truncation will be used.
     */
    public readonly maxStringLength!: pulumi.Output<number>;
    /**
     * The minimum processing time (i.e., "etime") for operations that should be logged by this Operation Timing Access Log
     * Publisher
     */
    public readonly minIncludedOperationProcessingTime!: pulumi.Output<string>;
    /**
     * The minimum length of time in nanoseconds that an operation phase should take before it is included in a log message.
     */
    public readonly minIncludedPhaseTimeNanos!: pulumi.Output<number>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-json-audit`, `file-based-json-audit`, `file-based-audit`,
     * `console-json-audit`]: Specifies the names of any attribute types that should have their values obscured in the audit
     * log because they may be considered sensitive. - `debug-access`: Specifies the names of any attribute types that should
     * have their values obscured if the obscure-sensitive-content property has a value of true.
     */
    public readonly obscureAttributes!: pulumi.Output<string[]>;
    /**
     * Indicates whether the resulting log file should attempt to obscure content that may be considered sensitive. This
     * primarily includes the credentials for bind requests, the values of password modify extended requests and responses, and
     * the values of any attributes specified in the obscure-attribute property. Note that the use of this option does not
     * guarantee no sensitive information will be exposed, so the log output should still be carefully guarded.
     */
    public readonly obscureSensitiveContent!: pulumi.Output<boolean>;
    /**
     * When the `type` attribute is set to: - `console-json-error`: Specifies the output stream to which JSON-formatted error
     * log messages should be written. - `console-json-audit`: Specifies the output stream to which JSON-formatted audit log
     * messages should be written. - `console-json-http-operation`: Specifies the output stream to which JSON-formatted HTTP
     * operation log messages should be written. - `console-json-access`: Specifies the output stream to which JSON-formatted
     * access log messages should be written.
     */
    public readonly outputLocation!: pulumi.Output<string>;
    /**
     * Specifies the override severity levels for the logger based on the category of the messages.
     */
    public readonly overrideSeverities!: pulumi.Output<string[]>;
    /**
     * The maximum number of log records that can be stored in the asynchronous queue.
     */
    public readonly queueSize!: pulumi.Output<number>;
    /**
     * Specifies a set of request criteria that must match the associated operation request in order for a request or result to
     * be logged by this Access Log Publisher.
     */
    public readonly requestCriteria!: pulumi.Output<string>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.DefaultLogPublisherRequiredAction[]>;
    /**
     * Specifies a set of result criteria that must match the associated operation result in order for that result to be logged
     * by this Access Log Publisher.
     */
    public readonly resultCriteria!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The retention policy to use for the Third Party
     * File Based Access Log Publisher . - `operation-timing-access`: The retention policy to use for the Operation Timing
     * Access Log Publisher . - `file-based-trace`: The retention policy to use for the File Based Trace Log Publisher . -
     * `common-log-file-http-operation`: The retention policy to use for the Common Log File HTTP Operation Log Publisher . -
     * `file-based-json-audit`: The retention policy to use for the File Based JSON Audit Log Publisher . - `file-based-debug`:
     * The retention policy to use for the File Based Debug Log Publisher . - `file-based-error`: The retention policy to use
     * for the File Based Error Log Publisher . - `detailed-http-operation`: The retention policy to use for the Detailed HTTP
     * Operation Log Publisher . - `json-access`: The retention policy to use for the JSON Access Log Publisher . -
     * `debug-access`: The retention policy to use for the Debug Access Log Publisher . - `file-based-audit`: The retention
     * policy to use for the File Based Audit Log Publisher . - `json-error`: The retention policy to use for the JSON Error
     * Log Publisher . - `groovy-scripted-file-based-access`: The retention policy to use for the Scripted File Based Access
     * Log Publisher . - `groovy-scripted-file-based-error`: The retention policy to use for the Scripted File Based Error Log
     * Publisher . - `third-party-file-based-error`: The retention policy to use for the Third Party File Based Error Log
     * Publisher . - `file-based-access`: The retention policy to use for the File Based Access Log Publisher . -
     * `file-based-json-http-operation`: The retention policy to use for the File Based JSON HTTP Operation Log Publisher .
     */
    public readonly retentionPolicies!: pulumi.Output<string[]>;
    /**
     * A listener that should be notified whenever a log file is rotated out of service.
     */
    public readonly rotationListeners!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The rotation policy to use for the Third Party
     * File Based Access Log Publisher . - `operation-timing-access`: The rotation policy to use for the Operation Timing
     * Access Log Publisher . - `file-based-trace`: The rotation policy to use for the File Based Trace Log Publisher . -
     * `common-log-file-http-operation`: The rotation policy to use for the Common Log File HTTP Operation Log Publisher . -
     * `file-based-json-audit`: The rotation policy to use for the File Based JSON Audit Log Publisher . - `file-based-debug`:
     * The rotation policy to use for the File Based Debug Log Publisher . - `file-based-error`: The rotation policy to use for
     * the File Based Error Log Publisher . - `detailed-http-operation`: The rotation policy to use for the Detailed HTTP
     * Operation Log Publisher . - `json-access`: The rotation policy to use for the JSON Access Log Publisher . -
     * `debug-access`: The rotation policy to use for the Debug Access Log Publisher . - `file-based-audit`: The rotation
     * policy to use for the File Based Audit Log Publisher . - `json-error`: The rotation policy to use for the JSON Error Log
     * Publisher . - `groovy-scripted-file-based-access`: The rotation policy to use for the Scripted File Based Access Log
     * Publisher . - `groovy-scripted-file-based-error`: The rotation policy to use for the Scripted File Based Error Log
     * Publisher . - `third-party-file-based-error`: The rotation policy to use for the Third Party File Based Error Log
     * Publisher . - `file-based-access`: The rotation policy to use for the File Based Access Log Publisher . -
     * `file-based-json-http-operation`: The rotation policy to use for the File Based JSON HTTP Operation Log Publisher .
     */
    public readonly rotationPolicies!: pulumi.Output<string[]>;
    /**
     * Specifies the SCIM message types which can be logged.
     */
    public readonly scimMessageTypes!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - `groovy-scripted-file-based-access`: The set of arguments used to customize the
     * behavior for the Scripted File Based Access Log Publisher. Each configuration property should be given in the form
     * 'name=value'. - `groovy-scripted-file-based-error`: The set of arguments used to customize the behavior for the Scripted
     * File Based Error Log Publisher. Each configuration property should be given in the form 'name=value'. -
     * `groovy-scripted-access`: The set of arguments used to customize the behavior for the Scripted Access Log Publisher.
     * Each configuration property should be given in the form 'name=value'. - `groovy-scripted-error`: The set of arguments
     * used to customize the behavior for the Scripted Error Log Publisher. Each configuration property should be given in the
     * form 'name=value'. - `groovy-scripted-http-operation`: The set of arguments used to customize the behavior for the
     * Scripted HTTP Operation Log Publisher. Each configuration property should be given in the form 'name=value'.
     */
    public readonly scriptArguments!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - `groovy-scripted-file-based-access`: The fully-qualified name of the Groovy class
     * providing the logic for the Groovy Scripted File Based Access Log Publisher. - `groovy-scripted-file-based-error`: The
     * fully-qualified name of the Groovy class providing the logic for the Groovy Scripted File Based Error Log Publisher. -
     * `groovy-scripted-access`: The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted
     * Access Log Publisher. - `groovy-scripted-error`: The fully-qualified name of the Groovy class providing the logic for
     * the Groovy Scripted Error Log Publisher. - `groovy-scripted-http-operation`: The fully-qualified name of the Groovy
     * class providing the logic for the Groovy Scripted HTTP Operation Log Publisher.
     */
    public readonly scriptClass!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - One of [`third-party-file-based-access`, `jdbc-based-access`,
     * `syslog-based-access`, `syslog-text-access`, `json-access`, `debug-access`, `third-party-access`,
     * `groovy-scripted-file-based-access`, `syslog-json-access`, `groovy-scripted-access`, `console-json-access`,
     * `file-based-access`]: Specifies a set of search entry criteria that must match the associated search result entry in
     * order for that it to be logged by this Access Log Publisher. - `admin-alert-access`: Specifies a set of search entry
     * criteria that must match the associated search result entry in order for that it to be logged by this Admin Alert Access
     * Log Publisher.
     */
    public readonly searchEntryCriteria!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - One of [`third-party-file-based-access`, `jdbc-based-access`,
     * `syslog-based-access`, `syslog-text-access`, `json-access`, `debug-access`, `third-party-access`,
     * `groovy-scripted-file-based-access`, `syslog-json-access`, `groovy-scripted-access`, `console-json-access`,
     * `file-based-access`]: Specifies a set of search reference criteria that must match the associated search result
     * reference in order for that it to be logged by this Access Log Publisher. - `admin-alert-access`: Specifies a set of
     * search reference criteria that must match the associated search result reference in order for that it to be logged by
     * this Admin Alert Access Log Publisher.
     */
    public readonly searchReferenceCriteria!: pulumi.Output<string>;
    /**
     * The JDBC-based Database Server to use for a connection.
     */
    public readonly server!: pulumi.Output<string>;
    /**
     * Specifies the hostname or IP address of the syslogd host to log to. It is highly recommend to use localhost.
     */
    public readonly serverHostName!: pulumi.Output<string>;
    /**
     * Specifies the port number of the syslogd host to log to.
     */
    public readonly serverPort!: pulumi.Output<number>;
    /**
     * Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an
     * undetectable manner.
     */
    public readonly signLog!: pulumi.Output<boolean>;
    /**
     * Specifies the audit behavior for delete and modify operations on soft-deleted entries.
     */
    public readonly softDeleteEntryAuditBehavior!: pulumi.Output<string>;
    /**
     * Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along
     * with the operations that are requested by users.
     */
    public readonly suppressInternalOperations!: pulumi.Output<boolean>;
    /**
     * Indicates whether access messages that are generated by replication operations should be suppressed.
     */
    public readonly suppressReplicationOperations!: pulumi.Output<boolean>;
    /**
     * Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose
     * of brevity or security). This will only be used if the log-request-headers property has a value of true.
     */
    public readonly suppressedRequestHeaderNames!: pulumi.Output<string[]>;
    /**
     * Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the
     * purpose of brevity or security). This will only be used if the log-request-parameters property has a value of
     * parameter-names or parameter-names-and-values.
     */
    public readonly suppressedRequestParameterNames!: pulumi.Output<string[]>;
    /**
     * Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose
     * of brevity or security). This will only be used if the log-response-headers property has a value of true.
     */
    public readonly suppressedResponseHeaderNames!: pulumi.Output<string[]>;
    /**
     * The syslog server to which messages should be sent.
     */
    public readonly syslogExternalServers!: pulumi.Output<string[]>;
    /**
     * When the `type` attribute is set to: - `syslog-json-audit`: The syslog facility to use for the messages that are logged
     * by this Syslog JSON Audit Log Publisher. - `syslog-based-error`: Specifies the syslog facility to use for this Syslog
     * Based Error Log Publisher - `syslog-text-error`: The syslog facility to use for the messages that are logged by this
     * Syslog Text Error Log Publisher. - `syslog-based-access`: Specifies the syslog facility to use for this Syslog Based
     * Access Log Publisher - `syslog-text-access`: The syslog facility to use for the messages that are logged by this Syslog
     * Text Access Log Publisher. - `syslog-json-http-operation`: The syslog facility to use for the messages that are logged
     * by this Syslog JSON HTTP Operation Log Publisher. - `syslog-json-access`: The syslog facility to use for the messages
     * that are logged by this Syslog JSON Access Log Publisher. - `syslog-json-error`: The syslog facility to use for the
     * messages that are logged by this Syslog JSON Error Log Publisher.
     */
    public readonly syslogFacility!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `syslog-json-audit`: The application name that will be included in syslog
     * messages that are logged by this Syslog JSON Audit Log Publisher. - `syslog-text-error`: The application name that will
     * be included in syslog messages that are logged by this Syslog Text Error Log Publisher. - `syslog-text-access`: The
     * application name that will be included in syslog messages that are logged by this Syslog Text Access Log Publisher. -
     * `syslog-json-http-operation`: The application name that will be included in syslog messages that are logged by this
     * Syslog JSON HTTP Operation Log Publisher. - `syslog-json-access`: The application name that will be included in syslog
     * messages that are logged by this Syslog JSON Access Log Publisher. - `syslog-json-error`: The application name that will
     * be included in syslog messages that are logged by this Syslog JSON Error Log Publisher.
     */
    public readonly syslogMessageApplicationName!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `syslog-json-audit`: The local host name that will be included in syslog messages
     * that are logged by this Syslog JSON Audit Log Publisher. - `syslog-text-error`: The local host name that will be
     * included in syslog messages that are logged by this Syslog Text Error Log Publisher. - `syslog-text-access`: The local
     * host name that will be included in syslog messages that are logged by this Syslog Text Access Log Publisher. -
     * `syslog-json-http-operation`: The local host name that will be included in syslog messages that are logged by this
     * Syslog JSON HTTP Operation Log Publisher. - `syslog-json-access`: The local host name that will be included in syslog
     * messages that are logged by this Syslog JSON Access Log Publisher. - `syslog-json-error`: The local host name that will
     * be included in syslog messages that are logged by this Syslog JSON Error Log Publisher.
     */
    public readonly syslogMessageHostName!: pulumi.Output<string>;
    /**
     * When the `type` attribute is set to: - `syslog-json-audit`: The syslog severity to use for the messages that are logged
     * by this Syslog JSON Audit Log Publisher. - `syslog-text-error`: The syslog severity to use for the messages that are
     * logged by this Syslog Text Error Log Publisher. If this is not specified, then the severity for each syslog message will
     * be automatically based on the severity for the associated log message. - `syslog-text-access`: The syslog severity to
     * use for the messages that are logged by this Syslog Text Access Log Publisher. - `syslog-json-http-operation`: The
     * syslog severity to use for the messages that are logged by this Syslog JSON HTTP Operation Log Publisher. -
     * `syslog-json-access`: The syslog severity to use for the messages that are logged by this Syslog JSON Access Log
     * Publisher. - `syslog-json-error`: The syslog severity to use for the messages that are logged by this Syslog JSON Error
     * Log Publisher. If this is not specified, then the severity for each syslog message will be automatically based on the
     * severity for the associated log message.
     */
    public readonly syslogSeverity!: pulumi.Output<string>;
    /**
     * Specifies the interval at which to check whether the log files need to be rotated.
     */
    public readonly timeInterval!: pulumi.Output<string>;
    /**
     * Specifies the smallest time unit to be included in timestamps.
     */
    public readonly timestampPrecision!: pulumi.Output<string>;
    /**
     * The type of Log Publisher resource. Options are ['syslog-json-audit', 'syslog-based-error',
     * 'third-party-file-based-access', 'operation-timing-access', 'third-party-http-operation', 'admin-alert-access',
     * 'file-based-trace', 'jdbc-based-error', 'jdbc-based-access', 'common-log-file-http-operation', 'console-json-error',
     * 'syslog-text-error', 'syslog-based-access', 'file-based-json-audit', 'file-based-debug', 'file-based-error',
     * 'third-party-error', 'syslog-text-access', 'detailed-http-operation', 'json-access', 'debug-access',
     * 'syslog-json-http-operation', 'third-party-access', 'file-based-audit', 'json-error',
     * 'groovy-scripted-file-based-access', 'groovy-scripted-file-based-error', 'syslog-json-access', 'groovy-scripted-access',
     * 'third-party-file-based-error', 'console-json-audit', 'console-json-http-operation', 'console-json-access',
     * 'file-based-access', 'groovy-scripted-error', 'file-based-json-http-operation', 'syslog-json-error',
     * 'groovy-scripted-http-operation']
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if
     * desired.
     */
    public readonly useReversibleForm!: pulumi.Output<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-json-audit`, `file-based-json-audit`,
     * `syslog-json-http-operation`, `console-json-audit`, `console-json-http-operation`, `file-based-json-http-operation`]:
     * Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its
     * own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces
     * and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools. - One of
     * [`console-json-error`, `json-access`, `json-error`, `console-json-access`]: Indicates whether the JSON objects should be
     * formatted to span multiple lines with a single element on each line. The multi-line format is potentially more user
     * friendly (if administrators may need to look at the log files), but each message will be larger because of the
     * additional spaces and end-of-line markers.
     */
    public readonly writeMultiLineMessages!: pulumi.Output<boolean>;

    /**
     * Create a DefaultLogPublisher resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DefaultLogPublisherArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultLogPublisherArgs | DefaultLogPublisherState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultLogPublisherState | undefined;
            resourceInputs["accessTokenValidatorMessageTypes"] = state ? state.accessTokenValidatorMessageTypes : undefined;
            resourceInputs["append"] = state ? state.append : undefined;
            resourceInputs["asynchronous"] = state ? state.asynchronous : undefined;
            resourceInputs["autoFlush"] = state ? state.autoFlush : undefined;
            resourceInputs["bufferSize"] = state ? state.bufferSize : undefined;
            resourceInputs["compressionMechanism"] = state ? state.compressionMechanism : undefined;
            resourceInputs["connectionCriteria"] = state ? state.connectionCriteria : undefined;
            resourceInputs["consentMessageTypes"] = state ? state.consentMessageTypes : undefined;
            resourceInputs["correlateRequestsAndResults"] = state ? state.correlateRequestsAndResults : undefined;
            resourceInputs["debugAciEnabled"] = state ? state.debugAciEnabled : undefined;
            resourceInputs["debugMessageTypes"] = state ? state.debugMessageTypes : undefined;
            resourceInputs["defaultDebugCategories"] = state ? state.defaultDebugCategories : undefined;
            resourceInputs["defaultDebugLevel"] = state ? state.defaultDebugLevel : undefined;
            resourceInputs["defaultIncludeThrowableCause"] = state ? state.defaultIncludeThrowableCause : undefined;
            resourceInputs["defaultOmitMethodEntryArguments"] = state ? state.defaultOmitMethodEntryArguments : undefined;
            resourceInputs["defaultOmitMethodReturnValue"] = state ? state.defaultOmitMethodReturnValue : undefined;
            resourceInputs["defaultSeverities"] = state ? state.defaultSeverities : undefined;
            resourceInputs["defaultThrowableStackFrames"] = state ? state.defaultThrowableStackFrames : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["directoryRestApiMessageTypes"] = state ? state.directoryRestApiMessageTypes : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["encryptLog"] = state ? state.encryptLog : undefined;
            resourceInputs["encryptionSettingsDefinitionId"] = state ? state.encryptionSettingsDefinitionId : undefined;
            resourceInputs["excludeAttributes"] = state ? state.excludeAttributes : undefined;
            resourceInputs["excludePathPatterns"] = state ? state.excludePathPatterns : undefined;
            resourceInputs["extensionArguments"] = state ? state.extensionArguments : undefined;
            resourceInputs["extensionClass"] = state ? state.extensionClass : undefined;
            resourceInputs["extensionMessageTypes"] = state ? state.extensionMessageTypes : undefined;
            resourceInputs["generifyMessageStringsWhenPossible"] = state ? state.generifyMessageStringsWhenPossible : undefined;
            resourceInputs["httpMessageTypes"] = state ? state.httpMessageTypes : undefined;
            resourceInputs["idTokenValidatorMessageTypes"] = state ? state.idTokenValidatorMessageTypes : undefined;
            resourceInputs["includeAddAttributeNames"] = state ? state.includeAddAttributeNames : undefined;
            resourceInputs["includeConnectionDetailsInRequestMessages"] = state ? state.includeConnectionDetailsInRequestMessages : undefined;
            resourceInputs["includeExtendedSearchRequestDetails"] = state ? state.includeExtendedSearchRequestDetails : undefined;
            resourceInputs["includeInstanceName"] = state ? state.includeInstanceName : undefined;
            resourceInputs["includeIntermediateClientRequestControl"] = state ? state.includeIntermediateClientRequestControl : undefined;
            resourceInputs["includeModifyAttributeNames"] = state ? state.includeModifyAttributeNames : undefined;
            resourceInputs["includeOperationPurposeRequestControl"] = state ? state.includeOperationPurposeRequestControl : undefined;
            resourceInputs["includePathPatterns"] = state ? state.includePathPatterns : undefined;
            resourceInputs["includeProductName"] = state ? state.includeProductName : undefined;
            resourceInputs["includeReplicationChangeId"] = state ? state.includeReplicationChangeId : undefined;
            resourceInputs["includeRequestControls"] = state ? state.includeRequestControls : undefined;
            resourceInputs["includeRequestDetailsInIntermediateResponseMessages"] = state ? state.includeRequestDetailsInIntermediateResponseMessages : undefined;
            resourceInputs["includeRequestDetailsInResultMessages"] = state ? state.includeRequestDetailsInResultMessages : undefined;
            resourceInputs["includeRequestDetailsInSearchEntryMessages"] = state ? state.includeRequestDetailsInSearchEntryMessages : undefined;
            resourceInputs["includeRequestDetailsInSearchReferenceMessages"] = state ? state.includeRequestDetailsInSearchReferenceMessages : undefined;
            resourceInputs["includeRequesterDn"] = state ? state.includeRequesterDn : undefined;
            resourceInputs["includeRequesterIpAddress"] = state ? state.includeRequesterIpAddress : undefined;
            resourceInputs["includeResponseControls"] = state ? state.includeResponseControls : undefined;
            resourceInputs["includeResultCodeNames"] = state ? state.includeResultCodeNames : undefined;
            resourceInputs["includeSearchEntryAttributeNames"] = state ? state.includeSearchEntryAttributeNames : undefined;
            resourceInputs["includeStartupId"] = state ? state.includeStartupId : undefined;
            resourceInputs["includeThreadId"] = state ? state.includeThreadId : undefined;
            resourceInputs["logAssuranceCompleted"] = state ? state.logAssuranceCompleted : undefined;
            resourceInputs["logClientCertificates"] = state ? state.logClientCertificates : undefined;
            resourceInputs["logConnects"] = state ? state.logConnects : undefined;
            resourceInputs["logDisconnects"] = state ? state.logDisconnects : undefined;
            resourceInputs["logFieldBehavior"] = state ? state.logFieldBehavior : undefined;
            resourceInputs["logFieldMapping"] = state ? state.logFieldMapping : undefined;
            resourceInputs["logFile"] = state ? state.logFile : undefined;
            resourceInputs["logFilePermissions"] = state ? state.logFilePermissions : undefined;
            resourceInputs["logIntermediateResponses"] = state ? state.logIntermediateResponses : undefined;
            resourceInputs["logMessageExclusionPolicies"] = state ? state.logMessageExclusionPolicies : undefined;
            resourceInputs["logRedirectUri"] = state ? state.logRedirectUri : undefined;
            resourceInputs["logRequestAuthorizationType"] = state ? state.logRequestAuthorizationType : undefined;
            resourceInputs["logRequestCookieNames"] = state ? state.logRequestCookieNames : undefined;
            resourceInputs["logRequestHeaders"] = state ? state.logRequestHeaders : undefined;
            resourceInputs["logRequestParameters"] = state ? state.logRequestParameters : undefined;
            resourceInputs["logRequestProtocol"] = state ? state.logRequestProtocol : undefined;
            resourceInputs["logRequests"] = state ? state.logRequests : undefined;
            resourceInputs["logResponseCookieNames"] = state ? state.logResponseCookieNames : undefined;
            resourceInputs["logResponseHeaders"] = state ? state.logResponseHeaders : undefined;
            resourceInputs["logResults"] = state ? state.logResults : undefined;
            resourceInputs["logSearchEntries"] = state ? state.logSearchEntries : undefined;
            resourceInputs["logSearchReferences"] = state ? state.logSearchReferences : undefined;
            resourceInputs["logSecurityNegotiation"] = state ? state.logSecurityNegotiation : undefined;
            resourceInputs["logTableName"] = state ? state.logTableName : undefined;
            resourceInputs["loggingErrorBehavior"] = state ? state.loggingErrorBehavior : undefined;
            resourceInputs["maxStringLength"] = state ? state.maxStringLength : undefined;
            resourceInputs["minIncludedOperationProcessingTime"] = state ? state.minIncludedOperationProcessingTime : undefined;
            resourceInputs["minIncludedPhaseTimeNanos"] = state ? state.minIncludedPhaseTimeNanos : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["obscureAttributes"] = state ? state.obscureAttributes : undefined;
            resourceInputs["obscureSensitiveContent"] = state ? state.obscureSensitiveContent : undefined;
            resourceInputs["outputLocation"] = state ? state.outputLocation : undefined;
            resourceInputs["overrideSeverities"] = state ? state.overrideSeverities : undefined;
            resourceInputs["queueSize"] = state ? state.queueSize : undefined;
            resourceInputs["requestCriteria"] = state ? state.requestCriteria : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["resultCriteria"] = state ? state.resultCriteria : undefined;
            resourceInputs["retentionPolicies"] = state ? state.retentionPolicies : undefined;
            resourceInputs["rotationListeners"] = state ? state.rotationListeners : undefined;
            resourceInputs["rotationPolicies"] = state ? state.rotationPolicies : undefined;
            resourceInputs["scimMessageTypes"] = state ? state.scimMessageTypes : undefined;
            resourceInputs["scriptArguments"] = state ? state.scriptArguments : undefined;
            resourceInputs["scriptClass"] = state ? state.scriptClass : undefined;
            resourceInputs["searchEntryCriteria"] = state ? state.searchEntryCriteria : undefined;
            resourceInputs["searchReferenceCriteria"] = state ? state.searchReferenceCriteria : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["serverHostName"] = state ? state.serverHostName : undefined;
            resourceInputs["serverPort"] = state ? state.serverPort : undefined;
            resourceInputs["signLog"] = state ? state.signLog : undefined;
            resourceInputs["softDeleteEntryAuditBehavior"] = state ? state.softDeleteEntryAuditBehavior : undefined;
            resourceInputs["suppressInternalOperations"] = state ? state.suppressInternalOperations : undefined;
            resourceInputs["suppressReplicationOperations"] = state ? state.suppressReplicationOperations : undefined;
            resourceInputs["suppressedRequestHeaderNames"] = state ? state.suppressedRequestHeaderNames : undefined;
            resourceInputs["suppressedRequestParameterNames"] = state ? state.suppressedRequestParameterNames : undefined;
            resourceInputs["suppressedResponseHeaderNames"] = state ? state.suppressedResponseHeaderNames : undefined;
            resourceInputs["syslogExternalServers"] = state ? state.syslogExternalServers : undefined;
            resourceInputs["syslogFacility"] = state ? state.syslogFacility : undefined;
            resourceInputs["syslogMessageApplicationName"] = state ? state.syslogMessageApplicationName : undefined;
            resourceInputs["syslogMessageHostName"] = state ? state.syslogMessageHostName : undefined;
            resourceInputs["syslogSeverity"] = state ? state.syslogSeverity : undefined;
            resourceInputs["timeInterval"] = state ? state.timeInterval : undefined;
            resourceInputs["timestampPrecision"] = state ? state.timestampPrecision : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["useReversibleForm"] = state ? state.useReversibleForm : undefined;
            resourceInputs["writeMultiLineMessages"] = state ? state.writeMultiLineMessages : undefined;
        } else {
            const args = argsOrState as DefaultLogPublisherArgs | undefined;
            resourceInputs["accessTokenValidatorMessageTypes"] = args ? args.accessTokenValidatorMessageTypes : undefined;
            resourceInputs["append"] = args ? args.append : undefined;
            resourceInputs["asynchronous"] = args ? args.asynchronous : undefined;
            resourceInputs["autoFlush"] = args ? args.autoFlush : undefined;
            resourceInputs["bufferSize"] = args ? args.bufferSize : undefined;
            resourceInputs["compressionMechanism"] = args ? args.compressionMechanism : undefined;
            resourceInputs["connectionCriteria"] = args ? args.connectionCriteria : undefined;
            resourceInputs["consentMessageTypes"] = args ? args.consentMessageTypes : undefined;
            resourceInputs["correlateRequestsAndResults"] = args ? args.correlateRequestsAndResults : undefined;
            resourceInputs["debugAciEnabled"] = args ? args.debugAciEnabled : undefined;
            resourceInputs["debugMessageTypes"] = args ? args.debugMessageTypes : undefined;
            resourceInputs["defaultDebugCategories"] = args ? args.defaultDebugCategories : undefined;
            resourceInputs["defaultDebugLevel"] = args ? args.defaultDebugLevel : undefined;
            resourceInputs["defaultIncludeThrowableCause"] = args ? args.defaultIncludeThrowableCause : undefined;
            resourceInputs["defaultOmitMethodEntryArguments"] = args ? args.defaultOmitMethodEntryArguments : undefined;
            resourceInputs["defaultOmitMethodReturnValue"] = args ? args.defaultOmitMethodReturnValue : undefined;
            resourceInputs["defaultSeverities"] = args ? args.defaultSeverities : undefined;
            resourceInputs["defaultThrowableStackFrames"] = args ? args.defaultThrowableStackFrames : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["directoryRestApiMessageTypes"] = args ? args.directoryRestApiMessageTypes : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["encryptLog"] = args ? args.encryptLog : undefined;
            resourceInputs["encryptionSettingsDefinitionId"] = args ? args.encryptionSettingsDefinitionId : undefined;
            resourceInputs["excludeAttributes"] = args ? args.excludeAttributes : undefined;
            resourceInputs["excludePathPatterns"] = args ? args.excludePathPatterns : undefined;
            resourceInputs["extensionArguments"] = args ? args.extensionArguments : undefined;
            resourceInputs["extensionClass"] = args ? args.extensionClass : undefined;
            resourceInputs["extensionMessageTypes"] = args ? args.extensionMessageTypes : undefined;
            resourceInputs["generifyMessageStringsWhenPossible"] = args ? args.generifyMessageStringsWhenPossible : undefined;
            resourceInputs["httpMessageTypes"] = args ? args.httpMessageTypes : undefined;
            resourceInputs["idTokenValidatorMessageTypes"] = args ? args.idTokenValidatorMessageTypes : undefined;
            resourceInputs["includeAddAttributeNames"] = args ? args.includeAddAttributeNames : undefined;
            resourceInputs["includeConnectionDetailsInRequestMessages"] = args ? args.includeConnectionDetailsInRequestMessages : undefined;
            resourceInputs["includeExtendedSearchRequestDetails"] = args ? args.includeExtendedSearchRequestDetails : undefined;
            resourceInputs["includeInstanceName"] = args ? args.includeInstanceName : undefined;
            resourceInputs["includeIntermediateClientRequestControl"] = args ? args.includeIntermediateClientRequestControl : undefined;
            resourceInputs["includeModifyAttributeNames"] = args ? args.includeModifyAttributeNames : undefined;
            resourceInputs["includeOperationPurposeRequestControl"] = args ? args.includeOperationPurposeRequestControl : undefined;
            resourceInputs["includePathPatterns"] = args ? args.includePathPatterns : undefined;
            resourceInputs["includeProductName"] = args ? args.includeProductName : undefined;
            resourceInputs["includeReplicationChangeId"] = args ? args.includeReplicationChangeId : undefined;
            resourceInputs["includeRequestControls"] = args ? args.includeRequestControls : undefined;
            resourceInputs["includeRequestDetailsInIntermediateResponseMessages"] = args ? args.includeRequestDetailsInIntermediateResponseMessages : undefined;
            resourceInputs["includeRequestDetailsInResultMessages"] = args ? args.includeRequestDetailsInResultMessages : undefined;
            resourceInputs["includeRequestDetailsInSearchEntryMessages"] = args ? args.includeRequestDetailsInSearchEntryMessages : undefined;
            resourceInputs["includeRequestDetailsInSearchReferenceMessages"] = args ? args.includeRequestDetailsInSearchReferenceMessages : undefined;
            resourceInputs["includeRequesterDn"] = args ? args.includeRequesterDn : undefined;
            resourceInputs["includeRequesterIpAddress"] = args ? args.includeRequesterIpAddress : undefined;
            resourceInputs["includeResponseControls"] = args ? args.includeResponseControls : undefined;
            resourceInputs["includeResultCodeNames"] = args ? args.includeResultCodeNames : undefined;
            resourceInputs["includeSearchEntryAttributeNames"] = args ? args.includeSearchEntryAttributeNames : undefined;
            resourceInputs["includeStartupId"] = args ? args.includeStartupId : undefined;
            resourceInputs["includeThreadId"] = args ? args.includeThreadId : undefined;
            resourceInputs["logAssuranceCompleted"] = args ? args.logAssuranceCompleted : undefined;
            resourceInputs["logClientCertificates"] = args ? args.logClientCertificates : undefined;
            resourceInputs["logConnects"] = args ? args.logConnects : undefined;
            resourceInputs["logDisconnects"] = args ? args.logDisconnects : undefined;
            resourceInputs["logFieldBehavior"] = args ? args.logFieldBehavior : undefined;
            resourceInputs["logFieldMapping"] = args ? args.logFieldMapping : undefined;
            resourceInputs["logFile"] = args ? args.logFile : undefined;
            resourceInputs["logFilePermissions"] = args ? args.logFilePermissions : undefined;
            resourceInputs["logIntermediateResponses"] = args ? args.logIntermediateResponses : undefined;
            resourceInputs["logMessageExclusionPolicies"] = args ? args.logMessageExclusionPolicies : undefined;
            resourceInputs["logRedirectUri"] = args ? args.logRedirectUri : undefined;
            resourceInputs["logRequestAuthorizationType"] = args ? args.logRequestAuthorizationType : undefined;
            resourceInputs["logRequestCookieNames"] = args ? args.logRequestCookieNames : undefined;
            resourceInputs["logRequestHeaders"] = args ? args.logRequestHeaders : undefined;
            resourceInputs["logRequestParameters"] = args ? args.logRequestParameters : undefined;
            resourceInputs["logRequestProtocol"] = args ? args.logRequestProtocol : undefined;
            resourceInputs["logRequests"] = args ? args.logRequests : undefined;
            resourceInputs["logResponseCookieNames"] = args ? args.logResponseCookieNames : undefined;
            resourceInputs["logResponseHeaders"] = args ? args.logResponseHeaders : undefined;
            resourceInputs["logResults"] = args ? args.logResults : undefined;
            resourceInputs["logSearchEntries"] = args ? args.logSearchEntries : undefined;
            resourceInputs["logSearchReferences"] = args ? args.logSearchReferences : undefined;
            resourceInputs["logSecurityNegotiation"] = args ? args.logSecurityNegotiation : undefined;
            resourceInputs["logTableName"] = args ? args.logTableName : undefined;
            resourceInputs["loggingErrorBehavior"] = args ? args.loggingErrorBehavior : undefined;
            resourceInputs["maxStringLength"] = args ? args.maxStringLength : undefined;
            resourceInputs["minIncludedOperationProcessingTime"] = args ? args.minIncludedOperationProcessingTime : undefined;
            resourceInputs["minIncludedPhaseTimeNanos"] = args ? args.minIncludedPhaseTimeNanos : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["obscureAttributes"] = args ? args.obscureAttributes : undefined;
            resourceInputs["obscureSensitiveContent"] = args ? args.obscureSensitiveContent : undefined;
            resourceInputs["outputLocation"] = args ? args.outputLocation : undefined;
            resourceInputs["overrideSeverities"] = args ? args.overrideSeverities : undefined;
            resourceInputs["queueSize"] = args ? args.queueSize : undefined;
            resourceInputs["requestCriteria"] = args ? args.requestCriteria : undefined;
            resourceInputs["resultCriteria"] = args ? args.resultCriteria : undefined;
            resourceInputs["retentionPolicies"] = args ? args.retentionPolicies : undefined;
            resourceInputs["rotationListeners"] = args ? args.rotationListeners : undefined;
            resourceInputs["rotationPolicies"] = args ? args.rotationPolicies : undefined;
            resourceInputs["scimMessageTypes"] = args ? args.scimMessageTypes : undefined;
            resourceInputs["scriptArguments"] = args ? args.scriptArguments : undefined;
            resourceInputs["scriptClass"] = args ? args.scriptClass : undefined;
            resourceInputs["searchEntryCriteria"] = args ? args.searchEntryCriteria : undefined;
            resourceInputs["searchReferenceCriteria"] = args ? args.searchReferenceCriteria : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["serverHostName"] = args ? args.serverHostName : undefined;
            resourceInputs["serverPort"] = args ? args.serverPort : undefined;
            resourceInputs["signLog"] = args ? args.signLog : undefined;
            resourceInputs["softDeleteEntryAuditBehavior"] = args ? args.softDeleteEntryAuditBehavior : undefined;
            resourceInputs["suppressInternalOperations"] = args ? args.suppressInternalOperations : undefined;
            resourceInputs["suppressReplicationOperations"] = args ? args.suppressReplicationOperations : undefined;
            resourceInputs["suppressedRequestHeaderNames"] = args ? args.suppressedRequestHeaderNames : undefined;
            resourceInputs["suppressedRequestParameterNames"] = args ? args.suppressedRequestParameterNames : undefined;
            resourceInputs["suppressedResponseHeaderNames"] = args ? args.suppressedResponseHeaderNames : undefined;
            resourceInputs["syslogExternalServers"] = args ? args.syslogExternalServers : undefined;
            resourceInputs["syslogFacility"] = args ? args.syslogFacility : undefined;
            resourceInputs["syslogMessageApplicationName"] = args ? args.syslogMessageApplicationName : undefined;
            resourceInputs["syslogMessageHostName"] = args ? args.syslogMessageHostName : undefined;
            resourceInputs["syslogSeverity"] = args ? args.syslogSeverity : undefined;
            resourceInputs["timeInterval"] = args ? args.timeInterval : undefined;
            resourceInputs["timestampPrecision"] = args ? args.timestampPrecision : undefined;
            resourceInputs["useReversibleForm"] = args ? args.useReversibleForm : undefined;
            resourceInputs["writeMultiLineMessages"] = args ? args.writeMultiLineMessages : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultLogPublisher.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DefaultLogPublisher resources.
 */
export interface DefaultLogPublisherState {
    /**
     * Specifies the access token validator message types that can be logged.
     */
    accessTokenValidatorMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether to append to existing log files.
     */
    append?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-based-access`, `syslog-text-access`, `file-based-access`]:
     * Indicates whether the Writer Based Access Log Publisher will publish records asynchronously. - `syslog-based-error`:
     * Indicates whether the Syslog Based Error Log Publisher will publish records asynchronously. -
     * `third-party-file-based-access`: Indicates whether the Third Party File Based Access Log Publisher will publish records
     * asynchronously. - `operation-timing-access`: Indicates whether the Operation Timing Access Log Publisher will publish
     * records asynchronously. - `admin-alert-access`: Indicates whether the Admin Alert Access Log Publisher will publish
     * records asynchronously. - `file-based-trace`: Indicates whether the Writer Based Trace Log Publisher will publish
     * records asynchronously. - `common-log-file-http-operation`: Indicates whether the Common Log File HTTP Operation Log
     * Publisher will publish records asynchronously. - `file-based-json-audit`: Indicates whether the File Based JSON Audit
     * Log Publisher will publish records asynchronously. - `file-based-debug`: Indicates whether the File Based Debug Log
     * Publisher will publish records asynchronously. - `file-based-error`: Indicates whether the File Based Error Log
     * Publisher will publish records asynchronously. - `detailed-http-operation`: Indicates whether the Detailed HTTP
     * Operation Log Publisher will publish records asynchronously. - `json-access`: Indicates whether the JSON Access Log
     * Publisher will publish records asynchronously. - `debug-access`: Indicates whether the Debug Access Log Publisher will
     * publish records asynchronously. - `file-based-audit`: Indicates whether the File Based Audit Log Publisher will publish
     * records asynchronously. - `json-error`: Indicates whether the JSON Error Log Publisher will publish records
     * asynchronously. - `groovy-scripted-file-based-access`: Indicates whether the Scripted File Based Access Log Publisher
     * will publish records asynchronously. - `groovy-scripted-file-based-error`: Indicates whether the Scripted File Based
     * Error Log Publisher will publish records asynchronously. - `third-party-file-based-error`: Indicates whether the Third
     * Party File Based Error Log Publisher will publish records asynchronously. - `file-based-json-http-operation`: Indicates
     * whether the File Based JSON HTTP Operation Log Publisher will publish records asynchronously.
     */
    asynchronous?: pulumi.Input<boolean>;
    /**
     * Specifies whether to flush the writer after every log record.
     */
    autoFlush?: pulumi.Input<boolean>;
    /**
     * Specifies the log file buffer size.
     */
    bufferSize?: pulumi.Input<string>;
    /**
     * Specifies the type of compression (if any) to use for log files that are written.
     */
    compressionMechanism?: pulumi.Input<string>;
    /**
     * Specifies a set of connection criteria that must match the associated client connection in order for a connect,
     * disconnect, request, or result message to be logged.
     */
    connectionCriteria?: pulumi.Input<string>;
    /**
     * Specifies the consent message types that can be logged.
     */
    consentMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether to automatically log result messages for any operation in which the corresponding request was logged.
     * In such cases, the result, entry, and reference criteria will be ignored, although the log-responses,
     * log-search-entries, and log-search-references properties will be honored.
     */
    correlateRequestsAndResults?: pulumi.Input<boolean>;
    /**
     * Indicates whether to include debugging information about ACIs being used by the operations being logged.
     */
    debugAciEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the debug message types which can be logged. Note that enabling these may result in sensitive information
     * being logged.
     */
    debugMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The debug message categories to be logged when none of the defined targets match the message.
     */
    defaultDebugCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The lowest severity level of debug messages to log when none of the defined targets match the message.
     */
    defaultDebugLevel?: pulumi.Input<string>;
    /**
     * Indicates whether to include the cause of exceptions in exception thrown and caught messages logged by default.
     */
    defaultIncludeThrowableCause?: pulumi.Input<boolean>;
    /**
     * Indicates whether to include method arguments in debug messages logged by default.
     */
    defaultOmitMethodEntryArguments?: pulumi.Input<boolean>;
    /**
     * Indicates whether to include the return value in debug messages logged by default.
     */
    defaultOmitMethodReturnValue?: pulumi.Input<boolean>;
    /**
     * Specifies the default severity levels for the logger.
     */
    defaultSeverities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates the number of stack frames to include in the stack trace for method entry and exception thrown messages.
     */
    defaultThrowableStackFrames?: pulumi.Input<number>;
    /**
     * A description for this Log Publisher
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the Directory REST API message types which can be logged.
     */
    directoryRestApiMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-json-audit`, `third-party-file-based-access`,
     * `operation-timing-access`, `third-party-http-operation`, `admin-alert-access`, `file-based-trace`, `jdbc-based-error`,
     * `jdbc-based-access`, `common-log-file-http-operation`, `syslog-text-error`, `file-based-json-audit`, `file-based-debug`,
     * `file-based-error`, `third-party-error`, `syslog-text-access`, `detailed-http-operation`, `json-access`, `debug-access`,
     * `syslog-json-http-operation`, `third-party-access`, `file-based-audit`, `json-error`,
     * `groovy-scripted-file-based-access`, `groovy-scripted-file-based-error`, `syslog-json-access`, `groovy-scripted-access`,
     * `third-party-file-based-error`, `file-based-access`, `groovy-scripted-error`, `file-based-json-http-operation`,
     * `syslog-json-error`, `groovy-scripted-http-operation`]: Indicates whether the Log Publisher is enabled for use. -
     * `syslog-based-error`: Indicates whether the Syslog Based Error Log Publisher is enabled for use. - `console-json-error`:
     * Indicates whether the Console JSON Error Log Publisher is enabled for use. - `syslog-based-access`: Indicates whether
     * the Syslog Based Access Log Publisher is enabled for use. - `console-json-audit`: Indicates whether the Console JSON
     * Audit Log Publisher is enabled for use. - `console-json-http-operation`: Indicates whether the Console JSON HTTP
     * Operation Log Publisher is enabled for use. - `console-json-access`: Indicates whether the Console JSON Access Log
     * Publisher is enabled for use.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
     */
    encryptLog?: pulumi.Input<boolean>;
    /**
     * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided,
     * the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used
     * to obtain a list of the encryption settings definitions available in the server.
     */
    encryptionSettingsDefinitionId?: pulumi.Input<string>;
    /**
     * Specifies the names of any attribute types that should be excluded from the audit log.
     */
    excludeAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a set of HTTP request URL paths to determine whether log messages are excluded for a HTTP request. Log
     * messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request
     * path does match an include-path-pattern (or no include-path-pattern is specified).
     */
    excludePathPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The set of arguments used to customize the
     * behavior for the Third Party File Based Access Log Publisher. Each configuration property should be given in the form
     * 'name=value'. - `third-party-http-operation`: The set of arguments used to customize the behavior for the Third Party
     * HTTP Operation Log Publisher. Each configuration property should be given in the form 'name=value'. -
     * `third-party-error`: The set of arguments used to customize the behavior for the Third Party Error Log Publisher. Each
     * configuration property should be given in the form 'name=value'. - `third-party-access`: The set of arguments used to
     * customize the behavior for the Third Party Access Log Publisher. Each configuration property should be given in the form
     * 'name=value'. - `third-party-file-based-error`: The set of arguments used to customize the behavior for the Third Party
     * File Based Error Log Publisher. Each configuration property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The fully-qualified name of the Java class
     * providing the logic for the Third Party File Based Access Log Publisher. - `third-party-http-operation`: The
     * fully-qualified name of the Java class providing the logic for the Third Party HTTP Operation Log Publisher. -
     * `third-party-error`: The fully-qualified name of the Java class providing the logic for the Third Party Error Log
     * Publisher. - `third-party-access`: The fully-qualified name of the Java class providing the logic for the Third Party
     * Access Log Publisher. - `third-party-file-based-error`: The fully-qualified name of the Java class providing the logic
     * for the Third Party File Based Error Log Publisher.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * Specifies the Server SDK extension message types that can be logged.
     */
    extensionMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - One of [`admin-alert-access`, `syslog-based-access`, `syslog-text-access`,
     * `json-access`, `syslog-json-access`, `console-json-access`, `file-based-access`]: Indicates whether to use generified
     * version of certain message strings, including diagnostic messages, additional information messages, authentication
     * failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a
     * string or %d for an integer) rather than the version of the string with those placeholders replaced with specific
     * values. - One of [`console-json-error`, `syslog-text-error`, `file-based-error`, `json-error`, `syslog-json-error`]:
     * Indicates whether to use the generified version of the log message string (which may use placeholders like %s for a
     * string or %d for an integer), rather than the version of the message with those placeholders replaced with specific
     * values that would normally be written to the log.
     */
    generifyMessageStringsWhenPossible?: pulumi.Input<boolean>;
    /**
     * Specifies the HTTP message types which can be logged.
     */
    httpMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the ID token validator message types that can be logged.
     */
    idTokenValidatorMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether log messages for add requests should include a list of the names of the attributes included in the
     * entry to add.
     */
    includeAddAttributeNames?: pulumi.Input<boolean>;
    /**
     * Supported in PingDirectory product version 10.1.0.0+. Indicates whether to log connection details in request messages,
     * including, where applicable, the client IP address and port, the server IP address and port, and the communication
     * protocol.
     */
    includeConnectionDetailsInRequestMessages?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for search requests should include extended information from the request, including the
     * requested size limit, time limit, alias dereferencing behavior, and types only behavior.
     */
    includeExtendedSearchRequestDetails?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages should include the instance name for the Directory Server.
     */
    includeInstanceName?: pulumi.Input<boolean>;
    /**
     * Indicates whether to include information about any intermediate client request control that may have been included in
     * the request.
     */
    includeIntermediateClientRequestControl?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.
     */
    includeModifyAttributeNames?: pulumi.Input<boolean>;
    /**
     * Indicates whether to include information about any operation purpose request control that may have been included in the
     * request.
     */
    includeOperationPurposeRequestControl?: pulumi.Input<boolean>;
    /**
     * Specifies a set of HTTP request URL paths to determine whether log messages are included for a HTTP request. Log
     * messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request
     * path does match an include-path-pattern (or no include-path-pattern is specified).
     */
    includePathPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether log messages should include the product name for the Directory Server.
     */
    includeProductName?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about the replication change ID.
     */
    includeReplicationChangeId?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the
     * request.
     */
    includeRequestControls?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for intermediate responses should include information about the associated operation
     * request.
     */
    includeRequestDetailsInIntermediateResponseMessages?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`admin-alert-access`, `syslog-based-access`, `syslog-text-access`,
     * `json-access`, `syslog-json-access`, `console-json-access`, `file-based-access`]: Indicates whether log messages for
     * operation results should include information about both the request and the result. - One of [`detailed-http-operation`,
     * `syslog-json-http-operation`, `console-json-http-operation`, `file-based-json-http-operation`]: Indicates whether result
     * log messages should include all of the elements of request log messages. This may be used to record a single message per
     * operation with details about both the request and response.
     */
    includeRequestDetailsInResultMessages?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for search result entries should include information about the associated search request.
     */
    includeRequestDetailsInSearchEntryMessages?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for search result references should include information about the associated search
     * request.
     */
    includeRequestDetailsInSearchReferenceMessages?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-json-audit`, `admin-alert-access`, `syslog-based-access`,
     * `file-based-json-audit`, `syslog-text-access`, `json-access`, `file-based-audit`, `syslog-json-access`,
     * `console-json-audit`, `console-json-access`, `file-based-access`]: Indicates whether log messages for operation requests
     * should include the DN of the authenticated user for the client connection on which the operation was requested. -
     * `operation-timing-access`: Indicates whether log messages should include the DN of the authenticated user for the client
     * connection on which the operation was requested.
     */
    includeRequesterDn?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for operation requests should include the IP address of the client that requested the
     * operation.
     */
    includeRequesterIpAddress?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the
     * result.
     */
    includeResponseControls?: pulumi.Input<boolean>;
    /**
     * Indicates whether result log messages should include human-readable names for result codes in addition to their numeric
     * values.
     */
    includeResultCodeNames?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for search result entries should include a list of the names of the attributes included
     * in the entry that was returned.
     */
    includeSearchEntryAttributeNames?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the
     * server instance at startup and may be used to identify when the server has been restarted.
     */
    includeStartupId?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be
     * used to correlate log messages from the same thread within a single log as well as generated by the same thread across
     * different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM
     * Stack Trace,cn=monitor entry.
     */
    includeThreadId?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about the result of replication assurance processing.
     */
    logAssuranceCompleted?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about any client certificates presented to the server.
     */
    logClientCertificates?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about connections established to the server.
     */
    logConnects?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about connections that have been closed by the client or terminated by the server.
     */
    logDisconnects?: pulumi.Input<boolean>;
    /**
     * The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.
     */
    logFieldBehavior?: pulumi.Input<string>;
    /**
     * The log field mapping associates loggable fields to database column names. The table name is not part of this mapping.
     */
    logFieldMapping?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The file name to use for the log files generated
     * by the Third Party File Based Access Log Publisher. The path to the file can be specified either as relative to the
     * server root or as an absolute path. - `operation-timing-access`: The file name to use for the log files generated by the
     * Operation Timing Access Log Publisher. The path to the file can be specified either as relative to the server root or as
     * an absolute path. - `file-based-trace`: The file name to use for the log files generated by the File Based Trace Log
     * Publisher. The path to the file can be specified either as relative to the server root or as an absolute path. -
     * `common-log-file-http-operation`: The file name to use for the log files generated by the Common Log File HTTP Operation
     * Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path. -
     * `file-based-json-audit`: The file name to use for the log files generated by the File Based JSON Audit Log Publisher.
     * The path to the file can be specified either as relative to the server root or as an absolute path. -
     * `file-based-debug`: The file name to use for the log files generated by the File Based Debug Log Publisher. The path to
     * the file can be specified either as relative to the server root or as an absolute path. - `file-based-error`: The file
     * name to use for the log files generated by the File Based Error Log Publisher. The path to the file can be specified
     * either as relative to the server root or as an absolute path. - `detailed-http-operation`: The file name to use for the
     * log files generated by the Detailed HTTP Operation Log Publisher. The path to the file can be specified either as
     * relative to the server root or as an absolute path. - `json-access`: The file name to use for the log files generated by
     * the JSON Access Log Publisher. The path to the file can be specified either as relative to the server root or as an
     * absolute path. - `debug-access`: The file name to use for the log files generated by the Debug Access Log Publisher. The
     * path to the file can be specified either as relative to the server root or as an absolute path. - `file-based-audit`:
     * The file name to use for the log files generated by the File Based Audit Log Publisher. The path to the file can be
     * specified either as relative to the server root or as an absolute path. - `json-error`: The file name to use for the log
     * files generated by the JSON Error Log Publisher. The path to the file can be specified either as relative to the server
     * root or as an absolute path. - `groovy-scripted-file-based-access`: The file name to use for the log files generated by
     * the Scripted File Based Access Log Publisher. The path to the file can be specified either as relative to the server
     * root or as an absolute path. - `groovy-scripted-file-based-error`: The file name to use for the log files generated by
     * the Scripted File Based Error Log Publisher. The path to the file can be specified either as relative to the server root
     * or as an absolute path. - `third-party-file-based-error`: The file name to use for the log files generated by the Third
     * Party File Based Error Log Publisher. The path to the file can be specified either as relative to the server root or as
     * an absolute path. - `file-based-access`: The file name to use for the log files generated by the File Based Access Log
     * Publisher. The path to the file can be specified either as relative to the server root or as an absolute path. -
     * `file-based-json-http-operation`: The file name to use for the log files generated by the File Based JSON HTTP Operation
     * Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
     */
    logFile?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The UNIX permissions of the log files created by
     * this Third Party File Based Access Log Publisher. - `operation-timing-access`: The UNIX permissions of the log files
     * created by this Operation Timing Access Log Publisher. - `file-based-trace`: The UNIX permissions of the log files
     * created by this File Based Trace Log Publisher. - `common-log-file-http-operation`: The UNIX permissions of the log
     * files created by this Common Log File HTTP Operation Log Publisher. - `file-based-json-audit`: The UNIX permissions of
     * the log files created by this File Based JSON Audit Log Publisher. - `file-based-debug`: The UNIX permissions of the log
     * files created by this File Based Debug Log Publisher. - `file-based-error`: The UNIX permissions of the log files
     * created by this File Based Error Log Publisher. - `detailed-http-operation`: The UNIX permissions of the log files
     * created by this Detailed HTTP Operation Log Publisher. - `json-access`: The UNIX permissions of the log files created by
     * this JSON Access Log Publisher. - `debug-access`: The UNIX permissions of the log files created by this Debug Access Log
     * Publisher. - `file-based-audit`: The UNIX permissions of the log files created by this File Based Audit Log Publisher. -
     * `json-error`: The UNIX permissions of the log files created by this JSON Error Log Publisher. -
     * `groovy-scripted-file-based-access`: The UNIX permissions of the log files created by this Scripted File Based Access
     * Log Publisher. - `groovy-scripted-file-based-error`: The UNIX permissions of the log files created by this Scripted File
     * Based Error Log Publisher. - `third-party-file-based-error`: The UNIX permissions of the log files created by this Third
     * Party File Based Error Log Publisher. - `file-based-access`: The UNIX permissions of the log files created by this File
     * Based Access Log Publisher. - `file-based-json-http-operation`: The UNIX permissions of the log files created by this
     * File Based JSON HTTP Operation Log Publisher.
     */
    logFilePermissions?: pulumi.Input<string>;
    /**
     * Indicates whether to log information about intermediate responses sent to the client.
     */
    logIntermediateResponses?: pulumi.Input<boolean>;
    /**
     * Supported in PingDirectory product version 10.1.0.0+. Policy to determine whether the Error Log Publisher should print a
     * message to the log.
     */
    logMessageExclusionPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether the redirect URI (i.e., the value of the "Location" header from responses) should be included in
     * response log messages.
     */
    logRedirectUri?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log the type of credentials given if an "Authorization" header was included in the request. Logging
     * the authorization type may be useful, and is much more secure than logging the entire value of the "Authorization"
     * header.
     */
    logRequestAuthorizationType?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is
     * much more secure than logging the entire content of the cookies (which may include sensitive information).
     */
    logRequestCookieNames?: pulumi.Input<boolean>;
    /**
     * Indicates whether request log messages should include information about HTTP headers included in the request.
     */
    logRequestHeaders?: pulumi.Input<string>;
    /**
     * Indicates what (if any) information about request parameters should be included in request log messages. Note that this
     * will only be used for requests with a method other than GET, since GET request parameters will be included in the
     * request URL.
     */
    logRequestParameters?: pulumi.Input<string>;
    /**
     * Indicates whether request log messages should include information about the HTTP version specified in the request.
     */
    logRequestProtocol?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`third-party-file-based-access`, `admin-alert-access`,
     * `jdbc-based-access`, `syslog-based-access`, `syslog-text-access`, `json-access`, `debug-access`, `third-party-access`,
     * `groovy-scripted-file-based-access`, `syslog-json-access`, `groovy-scripted-access`, `console-json-access`,
     * `file-based-access`]: Indicates whether to log information about requests received from clients. - One of
     * [`detailed-http-operation`, `syslog-json-http-operation`, `console-json-http-operation`,
     * `file-based-json-http-operation`]: Indicates whether to record a log message with information about requests received
     * from the client.
     */
    logRequests?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is
     * much more secure than logging the entire content of the cookies (which may include sensitive information).
     */
    logResponseCookieNames?: pulumi.Input<boolean>;
    /**
     * Indicates whether response log messages should include information about HTTP headers included in the response.
     */
    logResponseHeaders?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - One of [`third-party-file-based-access`, `admin-alert-access`,
     * `jdbc-based-access`, `syslog-based-access`, `syslog-text-access`, `json-access`, `debug-access`, `third-party-access`,
     * `groovy-scripted-file-based-access`, `syslog-json-access`, `groovy-scripted-access`, `console-json-access`,
     * `file-based-access`]: Indicates whether to log information about the results of client requests. - One of
     * [`detailed-http-operation`, `syslog-json-http-operation`, `console-json-http-operation`,
     * `file-based-json-http-operation`]: Indicates whether to record a log message with information about the result of
     * processing a requested HTTP operation.
     */
    logResults?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about search result entries sent to the client.
     */
    logSearchEntries?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about search result references sent to the client.
     */
    logSearchReferences?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that
     * has been performed.
     */
    logSecurityNegotiation?: pulumi.Input<boolean>;
    /**
     * The table name to log entries to the database server.
     */
    logTableName?: pulumi.Input<string>;
    /**
     * Specifies the behavior that the server should exhibit if an error occurs during logging processing.
     */
    loggingErrorBehavior?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - One of [`operation-timing-access`, `admin-alert-access`, `file-based-trace`,
     * `syslog-based-access`, `syslog-text-access`, `json-access`, `syslog-json-access`, `console-json-access`,
     * `file-based-access`]: Specifies the maximum number of characters that may be included in any string in a log message
     * before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted.
     * This can help prevent extremely long log messages from being written. - `detailed-http-operation`: Specifies the maximum
     * length of any individual string that should be logged. If a log message includes a string longer than this number of
     * characters, it will be truncated. A value of zero indicates that no truncation will be used.
     */
    maxStringLength?: pulumi.Input<number>;
    /**
     * The minimum processing time (i.e., "etime") for operations that should be logged by this Operation Timing Access Log
     * Publisher
     */
    minIncludedOperationProcessingTime?: pulumi.Input<string>;
    /**
     * The minimum length of time in nanoseconds that an operation phase should take before it is included in a log message.
     */
    minIncludedPhaseTimeNanos?: pulumi.Input<number>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-json-audit`, `file-based-json-audit`, `file-based-audit`,
     * `console-json-audit`]: Specifies the names of any attribute types that should have their values obscured in the audit
     * log because they may be considered sensitive. - `debug-access`: Specifies the names of any attribute types that should
     * have their values obscured if the obscure-sensitive-content property has a value of true.
     */
    obscureAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether the resulting log file should attempt to obscure content that may be considered sensitive. This
     * primarily includes the credentials for bind requests, the values of password modify extended requests and responses, and
     * the values of any attributes specified in the obscure-attribute property. Note that the use of this option does not
     * guarantee no sensitive information will be exposed, so the log output should still be carefully guarded.
     */
    obscureSensitiveContent?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `console-json-error`: Specifies the output stream to which JSON-formatted error
     * log messages should be written. - `console-json-audit`: Specifies the output stream to which JSON-formatted audit log
     * messages should be written. - `console-json-http-operation`: Specifies the output stream to which JSON-formatted HTTP
     * operation log messages should be written. - `console-json-access`: Specifies the output stream to which JSON-formatted
     * access log messages should be written.
     */
    outputLocation?: pulumi.Input<string>;
    /**
     * Specifies the override severity levels for the logger based on the category of the messages.
     */
    overrideSeverities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum number of log records that can be stored in the asynchronous queue.
     */
    queueSize?: pulumi.Input<number>;
    /**
     * Specifies a set of request criteria that must match the associated operation request in order for a request or result to
     * be logged by this Access Log Publisher.
     */
    requestCriteria?: pulumi.Input<string>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.DefaultLogPublisherRequiredAction>[]>;
    /**
     * Specifies a set of result criteria that must match the associated operation result in order for that result to be logged
     * by this Access Log Publisher.
     */
    resultCriteria?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The retention policy to use for the Third Party
     * File Based Access Log Publisher . - `operation-timing-access`: The retention policy to use for the Operation Timing
     * Access Log Publisher . - `file-based-trace`: The retention policy to use for the File Based Trace Log Publisher . -
     * `common-log-file-http-operation`: The retention policy to use for the Common Log File HTTP Operation Log Publisher . -
     * `file-based-json-audit`: The retention policy to use for the File Based JSON Audit Log Publisher . - `file-based-debug`:
     * The retention policy to use for the File Based Debug Log Publisher . - `file-based-error`: The retention policy to use
     * for the File Based Error Log Publisher . - `detailed-http-operation`: The retention policy to use for the Detailed HTTP
     * Operation Log Publisher . - `json-access`: The retention policy to use for the JSON Access Log Publisher . -
     * `debug-access`: The retention policy to use for the Debug Access Log Publisher . - `file-based-audit`: The retention
     * policy to use for the File Based Audit Log Publisher . - `json-error`: The retention policy to use for the JSON Error
     * Log Publisher . - `groovy-scripted-file-based-access`: The retention policy to use for the Scripted File Based Access
     * Log Publisher . - `groovy-scripted-file-based-error`: The retention policy to use for the Scripted File Based Error Log
     * Publisher . - `third-party-file-based-error`: The retention policy to use for the Third Party File Based Error Log
     * Publisher . - `file-based-access`: The retention policy to use for the File Based Access Log Publisher . -
     * `file-based-json-http-operation`: The retention policy to use for the File Based JSON HTTP Operation Log Publisher .
     */
    retentionPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A listener that should be notified whenever a log file is rotated out of service.
     */
    rotationListeners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The rotation policy to use for the Third Party
     * File Based Access Log Publisher . - `operation-timing-access`: The rotation policy to use for the Operation Timing
     * Access Log Publisher . - `file-based-trace`: The rotation policy to use for the File Based Trace Log Publisher . -
     * `common-log-file-http-operation`: The rotation policy to use for the Common Log File HTTP Operation Log Publisher . -
     * `file-based-json-audit`: The rotation policy to use for the File Based JSON Audit Log Publisher . - `file-based-debug`:
     * The rotation policy to use for the File Based Debug Log Publisher . - `file-based-error`: The rotation policy to use for
     * the File Based Error Log Publisher . - `detailed-http-operation`: The rotation policy to use for the Detailed HTTP
     * Operation Log Publisher . - `json-access`: The rotation policy to use for the JSON Access Log Publisher . -
     * `debug-access`: The rotation policy to use for the Debug Access Log Publisher . - `file-based-audit`: The rotation
     * policy to use for the File Based Audit Log Publisher . - `json-error`: The rotation policy to use for the JSON Error Log
     * Publisher . - `groovy-scripted-file-based-access`: The rotation policy to use for the Scripted File Based Access Log
     * Publisher . - `groovy-scripted-file-based-error`: The rotation policy to use for the Scripted File Based Error Log
     * Publisher . - `third-party-file-based-error`: The rotation policy to use for the Third Party File Based Error Log
     * Publisher . - `file-based-access`: The rotation policy to use for the File Based Access Log Publisher . -
     * `file-based-json-http-operation`: The rotation policy to use for the File Based JSON HTTP Operation Log Publisher .
     */
    rotationPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the SCIM message types which can be logged.
     */
    scimMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `groovy-scripted-file-based-access`: The set of arguments used to customize the
     * behavior for the Scripted File Based Access Log Publisher. Each configuration property should be given in the form
     * 'name=value'. - `groovy-scripted-file-based-error`: The set of arguments used to customize the behavior for the Scripted
     * File Based Error Log Publisher. Each configuration property should be given in the form 'name=value'. -
     * `groovy-scripted-access`: The set of arguments used to customize the behavior for the Scripted Access Log Publisher.
     * Each configuration property should be given in the form 'name=value'. - `groovy-scripted-error`: The set of arguments
     * used to customize the behavior for the Scripted Error Log Publisher. Each configuration property should be given in the
     * form 'name=value'. - `groovy-scripted-http-operation`: The set of arguments used to customize the behavior for the
     * Scripted HTTP Operation Log Publisher. Each configuration property should be given in the form 'name=value'.
     */
    scriptArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `groovy-scripted-file-based-access`: The fully-qualified name of the Groovy class
     * providing the logic for the Groovy Scripted File Based Access Log Publisher. - `groovy-scripted-file-based-error`: The
     * fully-qualified name of the Groovy class providing the logic for the Groovy Scripted File Based Error Log Publisher. -
     * `groovy-scripted-access`: The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted
     * Access Log Publisher. - `groovy-scripted-error`: The fully-qualified name of the Groovy class providing the logic for
     * the Groovy Scripted Error Log Publisher. - `groovy-scripted-http-operation`: The fully-qualified name of the Groovy
     * class providing the logic for the Groovy Scripted HTTP Operation Log Publisher.
     */
    scriptClass?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - One of [`third-party-file-based-access`, `jdbc-based-access`,
     * `syslog-based-access`, `syslog-text-access`, `json-access`, `debug-access`, `third-party-access`,
     * `groovy-scripted-file-based-access`, `syslog-json-access`, `groovy-scripted-access`, `console-json-access`,
     * `file-based-access`]: Specifies a set of search entry criteria that must match the associated search result entry in
     * order for that it to be logged by this Access Log Publisher. - `admin-alert-access`: Specifies a set of search entry
     * criteria that must match the associated search result entry in order for that it to be logged by this Admin Alert Access
     * Log Publisher.
     */
    searchEntryCriteria?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - One of [`third-party-file-based-access`, `jdbc-based-access`,
     * `syslog-based-access`, `syslog-text-access`, `json-access`, `debug-access`, `third-party-access`,
     * `groovy-scripted-file-based-access`, `syslog-json-access`, `groovy-scripted-access`, `console-json-access`,
     * `file-based-access`]: Specifies a set of search reference criteria that must match the associated search result
     * reference in order for that it to be logged by this Access Log Publisher. - `admin-alert-access`: Specifies a set of
     * search reference criteria that must match the associated search result reference in order for that it to be logged by
     * this Admin Alert Access Log Publisher.
     */
    searchReferenceCriteria?: pulumi.Input<string>;
    /**
     * The JDBC-based Database Server to use for a connection.
     */
    server?: pulumi.Input<string>;
    /**
     * Specifies the hostname or IP address of the syslogd host to log to. It is highly recommend to use localhost.
     */
    serverHostName?: pulumi.Input<string>;
    /**
     * Specifies the port number of the syslogd host to log to.
     */
    serverPort?: pulumi.Input<number>;
    /**
     * Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an
     * undetectable manner.
     */
    signLog?: pulumi.Input<boolean>;
    /**
     * Specifies the audit behavior for delete and modify operations on soft-deleted entries.
     */
    softDeleteEntryAuditBehavior?: pulumi.Input<string>;
    /**
     * Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along
     * with the operations that are requested by users.
     */
    suppressInternalOperations?: pulumi.Input<boolean>;
    /**
     * Indicates whether access messages that are generated by replication operations should be suppressed.
     */
    suppressReplicationOperations?: pulumi.Input<boolean>;
    /**
     * Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose
     * of brevity or security). This will only be used if the log-request-headers property has a value of true.
     */
    suppressedRequestHeaderNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the
     * purpose of brevity or security). This will only be used if the log-request-parameters property has a value of
     * parameter-names or parameter-names-and-values.
     */
    suppressedRequestParameterNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose
     * of brevity or security). This will only be used if the log-response-headers property has a value of true.
     */
    suppressedResponseHeaderNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The syslog server to which messages should be sent.
     */
    syslogExternalServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `syslog-json-audit`: The syslog facility to use for the messages that are logged
     * by this Syslog JSON Audit Log Publisher. - `syslog-based-error`: Specifies the syslog facility to use for this Syslog
     * Based Error Log Publisher - `syslog-text-error`: The syslog facility to use for the messages that are logged by this
     * Syslog Text Error Log Publisher. - `syslog-based-access`: Specifies the syslog facility to use for this Syslog Based
     * Access Log Publisher - `syslog-text-access`: The syslog facility to use for the messages that are logged by this Syslog
     * Text Access Log Publisher. - `syslog-json-http-operation`: The syslog facility to use for the messages that are logged
     * by this Syslog JSON HTTP Operation Log Publisher. - `syslog-json-access`: The syslog facility to use for the messages
     * that are logged by this Syslog JSON Access Log Publisher. - `syslog-json-error`: The syslog facility to use for the
     * messages that are logged by this Syslog JSON Error Log Publisher.
     */
    syslogFacility?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `syslog-json-audit`: The application name that will be included in syslog
     * messages that are logged by this Syslog JSON Audit Log Publisher. - `syslog-text-error`: The application name that will
     * be included in syslog messages that are logged by this Syslog Text Error Log Publisher. - `syslog-text-access`: The
     * application name that will be included in syslog messages that are logged by this Syslog Text Access Log Publisher. -
     * `syslog-json-http-operation`: The application name that will be included in syslog messages that are logged by this
     * Syslog JSON HTTP Operation Log Publisher. - `syslog-json-access`: The application name that will be included in syslog
     * messages that are logged by this Syslog JSON Access Log Publisher. - `syslog-json-error`: The application name that will
     * be included in syslog messages that are logged by this Syslog JSON Error Log Publisher.
     */
    syslogMessageApplicationName?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `syslog-json-audit`: The local host name that will be included in syslog messages
     * that are logged by this Syslog JSON Audit Log Publisher. - `syslog-text-error`: The local host name that will be
     * included in syslog messages that are logged by this Syslog Text Error Log Publisher. - `syslog-text-access`: The local
     * host name that will be included in syslog messages that are logged by this Syslog Text Access Log Publisher. -
     * `syslog-json-http-operation`: The local host name that will be included in syslog messages that are logged by this
     * Syslog JSON HTTP Operation Log Publisher. - `syslog-json-access`: The local host name that will be included in syslog
     * messages that are logged by this Syslog JSON Access Log Publisher. - `syslog-json-error`: The local host name that will
     * be included in syslog messages that are logged by this Syslog JSON Error Log Publisher.
     */
    syslogMessageHostName?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `syslog-json-audit`: The syslog severity to use for the messages that are logged
     * by this Syslog JSON Audit Log Publisher. - `syslog-text-error`: The syslog severity to use for the messages that are
     * logged by this Syslog Text Error Log Publisher. If this is not specified, then the severity for each syslog message will
     * be automatically based on the severity for the associated log message. - `syslog-text-access`: The syslog severity to
     * use for the messages that are logged by this Syslog Text Access Log Publisher. - `syslog-json-http-operation`: The
     * syslog severity to use for the messages that are logged by this Syslog JSON HTTP Operation Log Publisher. -
     * `syslog-json-access`: The syslog severity to use for the messages that are logged by this Syslog JSON Access Log
     * Publisher. - `syslog-json-error`: The syslog severity to use for the messages that are logged by this Syslog JSON Error
     * Log Publisher. If this is not specified, then the severity for each syslog message will be automatically based on the
     * severity for the associated log message.
     */
    syslogSeverity?: pulumi.Input<string>;
    /**
     * Specifies the interval at which to check whether the log files need to be rotated.
     */
    timeInterval?: pulumi.Input<string>;
    /**
     * Specifies the smallest time unit to be included in timestamps.
     */
    timestampPrecision?: pulumi.Input<string>;
    /**
     * The type of Log Publisher resource. Options are ['syslog-json-audit', 'syslog-based-error',
     * 'third-party-file-based-access', 'operation-timing-access', 'third-party-http-operation', 'admin-alert-access',
     * 'file-based-trace', 'jdbc-based-error', 'jdbc-based-access', 'common-log-file-http-operation', 'console-json-error',
     * 'syslog-text-error', 'syslog-based-access', 'file-based-json-audit', 'file-based-debug', 'file-based-error',
     * 'third-party-error', 'syslog-text-access', 'detailed-http-operation', 'json-access', 'debug-access',
     * 'syslog-json-http-operation', 'third-party-access', 'file-based-audit', 'json-error',
     * 'groovy-scripted-file-based-access', 'groovy-scripted-file-based-error', 'syslog-json-access', 'groovy-scripted-access',
     * 'third-party-file-based-error', 'console-json-audit', 'console-json-http-operation', 'console-json-access',
     * 'file-based-access', 'groovy-scripted-error', 'file-based-json-http-operation', 'syslog-json-error',
     * 'groovy-scripted-http-operation']
     */
    type?: pulumi.Input<string>;
    /**
     * Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if
     * desired.
     */
    useReversibleForm?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-json-audit`, `file-based-json-audit`,
     * `syslog-json-http-operation`, `console-json-audit`, `console-json-http-operation`, `file-based-json-http-operation`]:
     * Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its
     * own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces
     * and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools. - One of
     * [`console-json-error`, `json-access`, `json-error`, `console-json-access`]: Indicates whether the JSON objects should be
     * formatted to span multiple lines with a single element on each line. The multi-line format is potentially more user
     * friendly (if administrators may need to look at the log files), but each message will be larger because of the
     * additional spaces and end-of-line markers.
     */
    writeMultiLineMessages?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a DefaultLogPublisher resource.
 */
export interface DefaultLogPublisherArgs {
    /**
     * Specifies the access token validator message types that can be logged.
     */
    accessTokenValidatorMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether to append to existing log files.
     */
    append?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-based-access`, `syslog-text-access`, `file-based-access`]:
     * Indicates whether the Writer Based Access Log Publisher will publish records asynchronously. - `syslog-based-error`:
     * Indicates whether the Syslog Based Error Log Publisher will publish records asynchronously. -
     * `third-party-file-based-access`: Indicates whether the Third Party File Based Access Log Publisher will publish records
     * asynchronously. - `operation-timing-access`: Indicates whether the Operation Timing Access Log Publisher will publish
     * records asynchronously. - `admin-alert-access`: Indicates whether the Admin Alert Access Log Publisher will publish
     * records asynchronously. - `file-based-trace`: Indicates whether the Writer Based Trace Log Publisher will publish
     * records asynchronously. - `common-log-file-http-operation`: Indicates whether the Common Log File HTTP Operation Log
     * Publisher will publish records asynchronously. - `file-based-json-audit`: Indicates whether the File Based JSON Audit
     * Log Publisher will publish records asynchronously. - `file-based-debug`: Indicates whether the File Based Debug Log
     * Publisher will publish records asynchronously. - `file-based-error`: Indicates whether the File Based Error Log
     * Publisher will publish records asynchronously. - `detailed-http-operation`: Indicates whether the Detailed HTTP
     * Operation Log Publisher will publish records asynchronously. - `json-access`: Indicates whether the JSON Access Log
     * Publisher will publish records asynchronously. - `debug-access`: Indicates whether the Debug Access Log Publisher will
     * publish records asynchronously. - `file-based-audit`: Indicates whether the File Based Audit Log Publisher will publish
     * records asynchronously. - `json-error`: Indicates whether the JSON Error Log Publisher will publish records
     * asynchronously. - `groovy-scripted-file-based-access`: Indicates whether the Scripted File Based Access Log Publisher
     * will publish records asynchronously. - `groovy-scripted-file-based-error`: Indicates whether the Scripted File Based
     * Error Log Publisher will publish records asynchronously. - `third-party-file-based-error`: Indicates whether the Third
     * Party File Based Error Log Publisher will publish records asynchronously. - `file-based-json-http-operation`: Indicates
     * whether the File Based JSON HTTP Operation Log Publisher will publish records asynchronously.
     */
    asynchronous?: pulumi.Input<boolean>;
    /**
     * Specifies whether to flush the writer after every log record.
     */
    autoFlush?: pulumi.Input<boolean>;
    /**
     * Specifies the log file buffer size.
     */
    bufferSize?: pulumi.Input<string>;
    /**
     * Specifies the type of compression (if any) to use for log files that are written.
     */
    compressionMechanism?: pulumi.Input<string>;
    /**
     * Specifies a set of connection criteria that must match the associated client connection in order for a connect,
     * disconnect, request, or result message to be logged.
     */
    connectionCriteria?: pulumi.Input<string>;
    /**
     * Specifies the consent message types that can be logged.
     */
    consentMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether to automatically log result messages for any operation in which the corresponding request was logged.
     * In such cases, the result, entry, and reference criteria will be ignored, although the log-responses,
     * log-search-entries, and log-search-references properties will be honored.
     */
    correlateRequestsAndResults?: pulumi.Input<boolean>;
    /**
     * Indicates whether to include debugging information about ACIs being used by the operations being logged.
     */
    debugAciEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the debug message types which can be logged. Note that enabling these may result in sensitive information
     * being logged.
     */
    debugMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The debug message categories to be logged when none of the defined targets match the message.
     */
    defaultDebugCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The lowest severity level of debug messages to log when none of the defined targets match the message.
     */
    defaultDebugLevel?: pulumi.Input<string>;
    /**
     * Indicates whether to include the cause of exceptions in exception thrown and caught messages logged by default.
     */
    defaultIncludeThrowableCause?: pulumi.Input<boolean>;
    /**
     * Indicates whether to include method arguments in debug messages logged by default.
     */
    defaultOmitMethodEntryArguments?: pulumi.Input<boolean>;
    /**
     * Indicates whether to include the return value in debug messages logged by default.
     */
    defaultOmitMethodReturnValue?: pulumi.Input<boolean>;
    /**
     * Specifies the default severity levels for the logger.
     */
    defaultSeverities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates the number of stack frames to include in the stack trace for method entry and exception thrown messages.
     */
    defaultThrowableStackFrames?: pulumi.Input<number>;
    /**
     * A description for this Log Publisher
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the Directory REST API message types which can be logged.
     */
    directoryRestApiMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-json-audit`, `third-party-file-based-access`,
     * `operation-timing-access`, `third-party-http-operation`, `admin-alert-access`, `file-based-trace`, `jdbc-based-error`,
     * `jdbc-based-access`, `common-log-file-http-operation`, `syslog-text-error`, `file-based-json-audit`, `file-based-debug`,
     * `file-based-error`, `third-party-error`, `syslog-text-access`, `detailed-http-operation`, `json-access`, `debug-access`,
     * `syslog-json-http-operation`, `third-party-access`, `file-based-audit`, `json-error`,
     * `groovy-scripted-file-based-access`, `groovy-scripted-file-based-error`, `syslog-json-access`, `groovy-scripted-access`,
     * `third-party-file-based-error`, `file-based-access`, `groovy-scripted-error`, `file-based-json-http-operation`,
     * `syslog-json-error`, `groovy-scripted-http-operation`]: Indicates whether the Log Publisher is enabled for use. -
     * `syslog-based-error`: Indicates whether the Syslog Based Error Log Publisher is enabled for use. - `console-json-error`:
     * Indicates whether the Console JSON Error Log Publisher is enabled for use. - `syslog-based-access`: Indicates whether
     * the Syslog Based Access Log Publisher is enabled for use. - `console-json-audit`: Indicates whether the Console JSON
     * Audit Log Publisher is enabled for use. - `console-json-http-operation`: Indicates whether the Console JSON HTTP
     * Operation Log Publisher is enabled for use. - `console-json-access`: Indicates whether the Console JSON Access Log
     * Publisher is enabled for use.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
     */
    encryptLog?: pulumi.Input<boolean>;
    /**
     * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided,
     * the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used
     * to obtain a list of the encryption settings definitions available in the server.
     */
    encryptionSettingsDefinitionId?: pulumi.Input<string>;
    /**
     * Specifies the names of any attribute types that should be excluded from the audit log.
     */
    excludeAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a set of HTTP request URL paths to determine whether log messages are excluded for a HTTP request. Log
     * messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request
     * path does match an include-path-pattern (or no include-path-pattern is specified).
     */
    excludePathPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The set of arguments used to customize the
     * behavior for the Third Party File Based Access Log Publisher. Each configuration property should be given in the form
     * 'name=value'. - `third-party-http-operation`: The set of arguments used to customize the behavior for the Third Party
     * HTTP Operation Log Publisher. Each configuration property should be given in the form 'name=value'. -
     * `third-party-error`: The set of arguments used to customize the behavior for the Third Party Error Log Publisher. Each
     * configuration property should be given in the form 'name=value'. - `third-party-access`: The set of arguments used to
     * customize the behavior for the Third Party Access Log Publisher. Each configuration property should be given in the form
     * 'name=value'. - `third-party-file-based-error`: The set of arguments used to customize the behavior for the Third Party
     * File Based Error Log Publisher. Each configuration property should be given in the form 'name=value'.
     */
    extensionArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The fully-qualified name of the Java class
     * providing the logic for the Third Party File Based Access Log Publisher. - `third-party-http-operation`: The
     * fully-qualified name of the Java class providing the logic for the Third Party HTTP Operation Log Publisher. -
     * `third-party-error`: The fully-qualified name of the Java class providing the logic for the Third Party Error Log
     * Publisher. - `third-party-access`: The fully-qualified name of the Java class providing the logic for the Third Party
     * Access Log Publisher. - `third-party-file-based-error`: The fully-qualified name of the Java class providing the logic
     * for the Third Party File Based Error Log Publisher.
     */
    extensionClass?: pulumi.Input<string>;
    /**
     * Specifies the Server SDK extension message types that can be logged.
     */
    extensionMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - One of [`admin-alert-access`, `syslog-based-access`, `syslog-text-access`,
     * `json-access`, `syslog-json-access`, `console-json-access`, `file-based-access`]: Indicates whether to use generified
     * version of certain message strings, including diagnostic messages, additional information messages, authentication
     * failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a
     * string or %d for an integer) rather than the version of the string with those placeholders replaced with specific
     * values. - One of [`console-json-error`, `syslog-text-error`, `file-based-error`, `json-error`, `syslog-json-error`]:
     * Indicates whether to use the generified version of the log message string (which may use placeholders like %s for a
     * string or %d for an integer), rather than the version of the message with those placeholders replaced with specific
     * values that would normally be written to the log.
     */
    generifyMessageStringsWhenPossible?: pulumi.Input<boolean>;
    /**
     * Specifies the HTTP message types which can be logged.
     */
    httpMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the ID token validator message types that can be logged.
     */
    idTokenValidatorMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether log messages for add requests should include a list of the names of the attributes included in the
     * entry to add.
     */
    includeAddAttributeNames?: pulumi.Input<boolean>;
    /**
     * Supported in PingDirectory product version 10.1.0.0+. Indicates whether to log connection details in request messages,
     * including, where applicable, the client IP address and port, the server IP address and port, and the communication
     * protocol.
     */
    includeConnectionDetailsInRequestMessages?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for search requests should include extended information from the request, including the
     * requested size limit, time limit, alias dereferencing behavior, and types only behavior.
     */
    includeExtendedSearchRequestDetails?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages should include the instance name for the Directory Server.
     */
    includeInstanceName?: pulumi.Input<boolean>;
    /**
     * Indicates whether to include information about any intermediate client request control that may have been included in
     * the request.
     */
    includeIntermediateClientRequestControl?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.
     */
    includeModifyAttributeNames?: pulumi.Input<boolean>;
    /**
     * Indicates whether to include information about any operation purpose request control that may have been included in the
     * request.
     */
    includeOperationPurposeRequestControl?: pulumi.Input<boolean>;
    /**
     * Specifies a set of HTTP request URL paths to determine whether log messages are included for a HTTP request. Log
     * messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request
     * path does match an include-path-pattern (or no include-path-pattern is specified).
     */
    includePathPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether log messages should include the product name for the Directory Server.
     */
    includeProductName?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about the replication change ID.
     */
    includeReplicationChangeId?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the
     * request.
     */
    includeRequestControls?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for intermediate responses should include information about the associated operation
     * request.
     */
    includeRequestDetailsInIntermediateResponseMessages?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`admin-alert-access`, `syslog-based-access`, `syslog-text-access`,
     * `json-access`, `syslog-json-access`, `console-json-access`, `file-based-access`]: Indicates whether log messages for
     * operation results should include information about both the request and the result. - One of [`detailed-http-operation`,
     * `syslog-json-http-operation`, `console-json-http-operation`, `file-based-json-http-operation`]: Indicates whether result
     * log messages should include all of the elements of request log messages. This may be used to record a single message per
     * operation with details about both the request and response.
     */
    includeRequestDetailsInResultMessages?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for search result entries should include information about the associated search request.
     */
    includeRequestDetailsInSearchEntryMessages?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for search result references should include information about the associated search
     * request.
     */
    includeRequestDetailsInSearchReferenceMessages?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-json-audit`, `admin-alert-access`, `syslog-based-access`,
     * `file-based-json-audit`, `syslog-text-access`, `json-access`, `file-based-audit`, `syslog-json-access`,
     * `console-json-audit`, `console-json-access`, `file-based-access`]: Indicates whether log messages for operation requests
     * should include the DN of the authenticated user for the client connection on which the operation was requested. -
     * `operation-timing-access`: Indicates whether log messages should include the DN of the authenticated user for the client
     * connection on which the operation was requested.
     */
    includeRequesterDn?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for operation requests should include the IP address of the client that requested the
     * operation.
     */
    includeRequesterIpAddress?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the
     * result.
     */
    includeResponseControls?: pulumi.Input<boolean>;
    /**
     * Indicates whether result log messages should include human-readable names for result codes in addition to their numeric
     * values.
     */
    includeResultCodeNames?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages for search result entries should include a list of the names of the attributes included
     * in the entry that was returned.
     */
    includeSearchEntryAttributeNames?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the
     * server instance at startup and may be used to identify when the server has been restarted.
     */
    includeStartupId?: pulumi.Input<boolean>;
    /**
     * Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be
     * used to correlate log messages from the same thread within a single log as well as generated by the same thread across
     * different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM
     * Stack Trace,cn=monitor entry.
     */
    includeThreadId?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about the result of replication assurance processing.
     */
    logAssuranceCompleted?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about any client certificates presented to the server.
     */
    logClientCertificates?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about connections established to the server.
     */
    logConnects?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about connections that have been closed by the client or terminated by the server.
     */
    logDisconnects?: pulumi.Input<boolean>;
    /**
     * The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.
     */
    logFieldBehavior?: pulumi.Input<string>;
    /**
     * The log field mapping associates loggable fields to database column names. The table name is not part of this mapping.
     */
    logFieldMapping?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The file name to use for the log files generated
     * by the Third Party File Based Access Log Publisher. The path to the file can be specified either as relative to the
     * server root or as an absolute path. - `operation-timing-access`: The file name to use for the log files generated by the
     * Operation Timing Access Log Publisher. The path to the file can be specified either as relative to the server root or as
     * an absolute path. - `file-based-trace`: The file name to use for the log files generated by the File Based Trace Log
     * Publisher. The path to the file can be specified either as relative to the server root or as an absolute path. -
     * `common-log-file-http-operation`: The file name to use for the log files generated by the Common Log File HTTP Operation
     * Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path. -
     * `file-based-json-audit`: The file name to use for the log files generated by the File Based JSON Audit Log Publisher.
     * The path to the file can be specified either as relative to the server root or as an absolute path. -
     * `file-based-debug`: The file name to use for the log files generated by the File Based Debug Log Publisher. The path to
     * the file can be specified either as relative to the server root or as an absolute path. - `file-based-error`: The file
     * name to use for the log files generated by the File Based Error Log Publisher. The path to the file can be specified
     * either as relative to the server root or as an absolute path. - `detailed-http-operation`: The file name to use for the
     * log files generated by the Detailed HTTP Operation Log Publisher. The path to the file can be specified either as
     * relative to the server root or as an absolute path. - `json-access`: The file name to use for the log files generated by
     * the JSON Access Log Publisher. The path to the file can be specified either as relative to the server root or as an
     * absolute path. - `debug-access`: The file name to use for the log files generated by the Debug Access Log Publisher. The
     * path to the file can be specified either as relative to the server root or as an absolute path. - `file-based-audit`:
     * The file name to use for the log files generated by the File Based Audit Log Publisher. The path to the file can be
     * specified either as relative to the server root or as an absolute path. - `json-error`: The file name to use for the log
     * files generated by the JSON Error Log Publisher. The path to the file can be specified either as relative to the server
     * root or as an absolute path. - `groovy-scripted-file-based-access`: The file name to use for the log files generated by
     * the Scripted File Based Access Log Publisher. The path to the file can be specified either as relative to the server
     * root or as an absolute path. - `groovy-scripted-file-based-error`: The file name to use for the log files generated by
     * the Scripted File Based Error Log Publisher. The path to the file can be specified either as relative to the server root
     * or as an absolute path. - `third-party-file-based-error`: The file name to use for the log files generated by the Third
     * Party File Based Error Log Publisher. The path to the file can be specified either as relative to the server root or as
     * an absolute path. - `file-based-access`: The file name to use for the log files generated by the File Based Access Log
     * Publisher. The path to the file can be specified either as relative to the server root or as an absolute path. -
     * `file-based-json-http-operation`: The file name to use for the log files generated by the File Based JSON HTTP Operation
     * Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
     */
    logFile?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The UNIX permissions of the log files created by
     * this Third Party File Based Access Log Publisher. - `operation-timing-access`: The UNIX permissions of the log files
     * created by this Operation Timing Access Log Publisher. - `file-based-trace`: The UNIX permissions of the log files
     * created by this File Based Trace Log Publisher. - `common-log-file-http-operation`: The UNIX permissions of the log
     * files created by this Common Log File HTTP Operation Log Publisher. - `file-based-json-audit`: The UNIX permissions of
     * the log files created by this File Based JSON Audit Log Publisher. - `file-based-debug`: The UNIX permissions of the log
     * files created by this File Based Debug Log Publisher. - `file-based-error`: The UNIX permissions of the log files
     * created by this File Based Error Log Publisher. - `detailed-http-operation`: The UNIX permissions of the log files
     * created by this Detailed HTTP Operation Log Publisher. - `json-access`: The UNIX permissions of the log files created by
     * this JSON Access Log Publisher. - `debug-access`: The UNIX permissions of the log files created by this Debug Access Log
     * Publisher. - `file-based-audit`: The UNIX permissions of the log files created by this File Based Audit Log Publisher. -
     * `json-error`: The UNIX permissions of the log files created by this JSON Error Log Publisher. -
     * `groovy-scripted-file-based-access`: The UNIX permissions of the log files created by this Scripted File Based Access
     * Log Publisher. - `groovy-scripted-file-based-error`: The UNIX permissions of the log files created by this Scripted File
     * Based Error Log Publisher. - `third-party-file-based-error`: The UNIX permissions of the log files created by this Third
     * Party File Based Error Log Publisher. - `file-based-access`: The UNIX permissions of the log files created by this File
     * Based Access Log Publisher. - `file-based-json-http-operation`: The UNIX permissions of the log files created by this
     * File Based JSON HTTP Operation Log Publisher.
     */
    logFilePermissions?: pulumi.Input<string>;
    /**
     * Indicates whether to log information about intermediate responses sent to the client.
     */
    logIntermediateResponses?: pulumi.Input<boolean>;
    /**
     * Supported in PingDirectory product version 10.1.0.0+. Policy to determine whether the Error Log Publisher should print a
     * message to the log.
     */
    logMessageExclusionPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether the redirect URI (i.e., the value of the "Location" header from responses) should be included in
     * response log messages.
     */
    logRedirectUri?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log the type of credentials given if an "Authorization" header was included in the request. Logging
     * the authorization type may be useful, and is much more secure than logging the entire value of the "Authorization"
     * header.
     */
    logRequestAuthorizationType?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is
     * much more secure than logging the entire content of the cookies (which may include sensitive information).
     */
    logRequestCookieNames?: pulumi.Input<boolean>;
    /**
     * Indicates whether request log messages should include information about HTTP headers included in the request.
     */
    logRequestHeaders?: pulumi.Input<string>;
    /**
     * Indicates what (if any) information about request parameters should be included in request log messages. Note that this
     * will only be used for requests with a method other than GET, since GET request parameters will be included in the
     * request URL.
     */
    logRequestParameters?: pulumi.Input<string>;
    /**
     * Indicates whether request log messages should include information about the HTTP version specified in the request.
     */
    logRequestProtocol?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`third-party-file-based-access`, `admin-alert-access`,
     * `jdbc-based-access`, `syslog-based-access`, `syslog-text-access`, `json-access`, `debug-access`, `third-party-access`,
     * `groovy-scripted-file-based-access`, `syslog-json-access`, `groovy-scripted-access`, `console-json-access`,
     * `file-based-access`]: Indicates whether to log information about requests received from clients. - One of
     * [`detailed-http-operation`, `syslog-json-http-operation`, `console-json-http-operation`,
     * `file-based-json-http-operation`]: Indicates whether to record a log message with information about requests received
     * from the client.
     */
    logRequests?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is
     * much more secure than logging the entire content of the cookies (which may include sensitive information).
     */
    logResponseCookieNames?: pulumi.Input<boolean>;
    /**
     * Indicates whether response log messages should include information about HTTP headers included in the response.
     */
    logResponseHeaders?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - One of [`third-party-file-based-access`, `admin-alert-access`,
     * `jdbc-based-access`, `syslog-based-access`, `syslog-text-access`, `json-access`, `debug-access`, `third-party-access`,
     * `groovy-scripted-file-based-access`, `syslog-json-access`, `groovy-scripted-access`, `console-json-access`,
     * `file-based-access`]: Indicates whether to log information about the results of client requests. - One of
     * [`detailed-http-operation`, `syslog-json-http-operation`, `console-json-http-operation`,
     * `file-based-json-http-operation`]: Indicates whether to record a log message with information about the result of
     * processing a requested HTTP operation.
     */
    logResults?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about search result entries sent to the client.
     */
    logSearchEntries?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about search result references sent to the client.
     */
    logSearchReferences?: pulumi.Input<boolean>;
    /**
     * Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that
     * has been performed.
     */
    logSecurityNegotiation?: pulumi.Input<boolean>;
    /**
     * The table name to log entries to the database server.
     */
    logTableName?: pulumi.Input<string>;
    /**
     * Specifies the behavior that the server should exhibit if an error occurs during logging processing.
     */
    loggingErrorBehavior?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - One of [`operation-timing-access`, `admin-alert-access`, `file-based-trace`,
     * `syslog-based-access`, `syslog-text-access`, `json-access`, `syslog-json-access`, `console-json-access`,
     * `file-based-access`]: Specifies the maximum number of characters that may be included in any string in a log message
     * before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted.
     * This can help prevent extremely long log messages from being written. - `detailed-http-operation`: Specifies the maximum
     * length of any individual string that should be logged. If a log message includes a string longer than this number of
     * characters, it will be truncated. A value of zero indicates that no truncation will be used.
     */
    maxStringLength?: pulumi.Input<number>;
    /**
     * The minimum processing time (i.e., "etime") for operations that should be logged by this Operation Timing Access Log
     * Publisher
     */
    minIncludedOperationProcessingTime?: pulumi.Input<string>;
    /**
     * The minimum length of time in nanoseconds that an operation phase should take before it is included in a log message.
     */
    minIncludedPhaseTimeNanos?: pulumi.Input<number>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-json-audit`, `file-based-json-audit`, `file-based-audit`,
     * `console-json-audit`]: Specifies the names of any attribute types that should have their values obscured in the audit
     * log because they may be considered sensitive. - `debug-access`: Specifies the names of any attribute types that should
     * have their values obscured if the obscure-sensitive-content property has a value of true.
     */
    obscureAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether the resulting log file should attempt to obscure content that may be considered sensitive. This
     * primarily includes the credentials for bind requests, the values of password modify extended requests and responses, and
     * the values of any attributes specified in the obscure-attribute property. Note that the use of this option does not
     * guarantee no sensitive information will be exposed, so the log output should still be carefully guarded.
     */
    obscureSensitiveContent?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - `console-json-error`: Specifies the output stream to which JSON-formatted error
     * log messages should be written. - `console-json-audit`: Specifies the output stream to which JSON-formatted audit log
     * messages should be written. - `console-json-http-operation`: Specifies the output stream to which JSON-formatted HTTP
     * operation log messages should be written. - `console-json-access`: Specifies the output stream to which JSON-formatted
     * access log messages should be written.
     */
    outputLocation?: pulumi.Input<string>;
    /**
     * Specifies the override severity levels for the logger based on the category of the messages.
     */
    overrideSeverities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum number of log records that can be stored in the asynchronous queue.
     */
    queueSize?: pulumi.Input<number>;
    /**
     * Specifies a set of request criteria that must match the associated operation request in order for a request or result to
     * be logged by this Access Log Publisher.
     */
    requestCriteria?: pulumi.Input<string>;
    /**
     * Specifies a set of result criteria that must match the associated operation result in order for that result to be logged
     * by this Access Log Publisher.
     */
    resultCriteria?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The retention policy to use for the Third Party
     * File Based Access Log Publisher . - `operation-timing-access`: The retention policy to use for the Operation Timing
     * Access Log Publisher . - `file-based-trace`: The retention policy to use for the File Based Trace Log Publisher . -
     * `common-log-file-http-operation`: The retention policy to use for the Common Log File HTTP Operation Log Publisher . -
     * `file-based-json-audit`: The retention policy to use for the File Based JSON Audit Log Publisher . - `file-based-debug`:
     * The retention policy to use for the File Based Debug Log Publisher . - `file-based-error`: The retention policy to use
     * for the File Based Error Log Publisher . - `detailed-http-operation`: The retention policy to use for the Detailed HTTP
     * Operation Log Publisher . - `json-access`: The retention policy to use for the JSON Access Log Publisher . -
     * `debug-access`: The retention policy to use for the Debug Access Log Publisher . - `file-based-audit`: The retention
     * policy to use for the File Based Audit Log Publisher . - `json-error`: The retention policy to use for the JSON Error
     * Log Publisher . - `groovy-scripted-file-based-access`: The retention policy to use for the Scripted File Based Access
     * Log Publisher . - `groovy-scripted-file-based-error`: The retention policy to use for the Scripted File Based Error Log
     * Publisher . - `third-party-file-based-error`: The retention policy to use for the Third Party File Based Error Log
     * Publisher . - `file-based-access`: The retention policy to use for the File Based Access Log Publisher . -
     * `file-based-json-http-operation`: The retention policy to use for the File Based JSON HTTP Operation Log Publisher .
     */
    retentionPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A listener that should be notified whenever a log file is rotated out of service.
     */
    rotationListeners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `third-party-file-based-access`: The rotation policy to use for the Third Party
     * File Based Access Log Publisher . - `operation-timing-access`: The rotation policy to use for the Operation Timing
     * Access Log Publisher . - `file-based-trace`: The rotation policy to use for the File Based Trace Log Publisher . -
     * `common-log-file-http-operation`: The rotation policy to use for the Common Log File HTTP Operation Log Publisher . -
     * `file-based-json-audit`: The rotation policy to use for the File Based JSON Audit Log Publisher . - `file-based-debug`:
     * The rotation policy to use for the File Based Debug Log Publisher . - `file-based-error`: The rotation policy to use for
     * the File Based Error Log Publisher . - `detailed-http-operation`: The rotation policy to use for the Detailed HTTP
     * Operation Log Publisher . - `json-access`: The rotation policy to use for the JSON Access Log Publisher . -
     * `debug-access`: The rotation policy to use for the Debug Access Log Publisher . - `file-based-audit`: The rotation
     * policy to use for the File Based Audit Log Publisher . - `json-error`: The rotation policy to use for the JSON Error Log
     * Publisher . - `groovy-scripted-file-based-access`: The rotation policy to use for the Scripted File Based Access Log
     * Publisher . - `groovy-scripted-file-based-error`: The rotation policy to use for the Scripted File Based Error Log
     * Publisher . - `third-party-file-based-error`: The rotation policy to use for the Third Party File Based Error Log
     * Publisher . - `file-based-access`: The rotation policy to use for the File Based Access Log Publisher . -
     * `file-based-json-http-operation`: The rotation policy to use for the File Based JSON HTTP Operation Log Publisher .
     */
    rotationPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the SCIM message types which can be logged.
     */
    scimMessageTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `groovy-scripted-file-based-access`: The set of arguments used to customize the
     * behavior for the Scripted File Based Access Log Publisher. Each configuration property should be given in the form
     * 'name=value'. - `groovy-scripted-file-based-error`: The set of arguments used to customize the behavior for the Scripted
     * File Based Error Log Publisher. Each configuration property should be given in the form 'name=value'. -
     * `groovy-scripted-access`: The set of arguments used to customize the behavior for the Scripted Access Log Publisher.
     * Each configuration property should be given in the form 'name=value'. - `groovy-scripted-error`: The set of arguments
     * used to customize the behavior for the Scripted Error Log Publisher. Each configuration property should be given in the
     * form 'name=value'. - `groovy-scripted-http-operation`: The set of arguments used to customize the behavior for the
     * Scripted HTTP Operation Log Publisher. Each configuration property should be given in the form 'name=value'.
     */
    scriptArguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `groovy-scripted-file-based-access`: The fully-qualified name of the Groovy class
     * providing the logic for the Groovy Scripted File Based Access Log Publisher. - `groovy-scripted-file-based-error`: The
     * fully-qualified name of the Groovy class providing the logic for the Groovy Scripted File Based Error Log Publisher. -
     * `groovy-scripted-access`: The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted
     * Access Log Publisher. - `groovy-scripted-error`: The fully-qualified name of the Groovy class providing the logic for
     * the Groovy Scripted Error Log Publisher. - `groovy-scripted-http-operation`: The fully-qualified name of the Groovy
     * class providing the logic for the Groovy Scripted HTTP Operation Log Publisher.
     */
    scriptClass?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - One of [`third-party-file-based-access`, `jdbc-based-access`,
     * `syslog-based-access`, `syslog-text-access`, `json-access`, `debug-access`, `third-party-access`,
     * `groovy-scripted-file-based-access`, `syslog-json-access`, `groovy-scripted-access`, `console-json-access`,
     * `file-based-access`]: Specifies a set of search entry criteria that must match the associated search result entry in
     * order for that it to be logged by this Access Log Publisher. - `admin-alert-access`: Specifies a set of search entry
     * criteria that must match the associated search result entry in order for that it to be logged by this Admin Alert Access
     * Log Publisher.
     */
    searchEntryCriteria?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - One of [`third-party-file-based-access`, `jdbc-based-access`,
     * `syslog-based-access`, `syslog-text-access`, `json-access`, `debug-access`, `third-party-access`,
     * `groovy-scripted-file-based-access`, `syslog-json-access`, `groovy-scripted-access`, `console-json-access`,
     * `file-based-access`]: Specifies a set of search reference criteria that must match the associated search result
     * reference in order for that it to be logged by this Access Log Publisher. - `admin-alert-access`: Specifies a set of
     * search reference criteria that must match the associated search result reference in order for that it to be logged by
     * this Admin Alert Access Log Publisher.
     */
    searchReferenceCriteria?: pulumi.Input<string>;
    /**
     * The JDBC-based Database Server to use for a connection.
     */
    server?: pulumi.Input<string>;
    /**
     * Specifies the hostname or IP address of the syslogd host to log to. It is highly recommend to use localhost.
     */
    serverHostName?: pulumi.Input<string>;
    /**
     * Specifies the port number of the syslogd host to log to.
     */
    serverPort?: pulumi.Input<number>;
    /**
     * Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an
     * undetectable manner.
     */
    signLog?: pulumi.Input<boolean>;
    /**
     * Specifies the audit behavior for delete and modify operations on soft-deleted entries.
     */
    softDeleteEntryAuditBehavior?: pulumi.Input<string>;
    /**
     * Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along
     * with the operations that are requested by users.
     */
    suppressInternalOperations?: pulumi.Input<boolean>;
    /**
     * Indicates whether access messages that are generated by replication operations should be suppressed.
     */
    suppressReplicationOperations?: pulumi.Input<boolean>;
    /**
     * Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose
     * of brevity or security). This will only be used if the log-request-headers property has a value of true.
     */
    suppressedRequestHeaderNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the
     * purpose of brevity or security). This will only be used if the log-request-parameters property has a value of
     * parameter-names or parameter-names-and-values.
     */
    suppressedRequestParameterNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose
     * of brevity or security). This will only be used if the log-response-headers property has a value of true.
     */
    suppressedResponseHeaderNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The syslog server to which messages should be sent.
     */
    syslogExternalServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the `type` attribute is set to: - `syslog-json-audit`: The syslog facility to use for the messages that are logged
     * by this Syslog JSON Audit Log Publisher. - `syslog-based-error`: Specifies the syslog facility to use for this Syslog
     * Based Error Log Publisher - `syslog-text-error`: The syslog facility to use for the messages that are logged by this
     * Syslog Text Error Log Publisher. - `syslog-based-access`: Specifies the syslog facility to use for this Syslog Based
     * Access Log Publisher - `syslog-text-access`: The syslog facility to use for the messages that are logged by this Syslog
     * Text Access Log Publisher. - `syslog-json-http-operation`: The syslog facility to use for the messages that are logged
     * by this Syslog JSON HTTP Operation Log Publisher. - `syslog-json-access`: The syslog facility to use for the messages
     * that are logged by this Syslog JSON Access Log Publisher. - `syslog-json-error`: The syslog facility to use for the
     * messages that are logged by this Syslog JSON Error Log Publisher.
     */
    syslogFacility?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `syslog-json-audit`: The application name that will be included in syslog
     * messages that are logged by this Syslog JSON Audit Log Publisher. - `syslog-text-error`: The application name that will
     * be included in syslog messages that are logged by this Syslog Text Error Log Publisher. - `syslog-text-access`: The
     * application name that will be included in syslog messages that are logged by this Syslog Text Access Log Publisher. -
     * `syslog-json-http-operation`: The application name that will be included in syslog messages that are logged by this
     * Syslog JSON HTTP Operation Log Publisher. - `syslog-json-access`: The application name that will be included in syslog
     * messages that are logged by this Syslog JSON Access Log Publisher. - `syslog-json-error`: The application name that will
     * be included in syslog messages that are logged by this Syslog JSON Error Log Publisher.
     */
    syslogMessageApplicationName?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `syslog-json-audit`: The local host name that will be included in syslog messages
     * that are logged by this Syslog JSON Audit Log Publisher. - `syslog-text-error`: The local host name that will be
     * included in syslog messages that are logged by this Syslog Text Error Log Publisher. - `syslog-text-access`: The local
     * host name that will be included in syslog messages that are logged by this Syslog Text Access Log Publisher. -
     * `syslog-json-http-operation`: The local host name that will be included in syslog messages that are logged by this
     * Syslog JSON HTTP Operation Log Publisher. - `syslog-json-access`: The local host name that will be included in syslog
     * messages that are logged by this Syslog JSON Access Log Publisher. - `syslog-json-error`: The local host name that will
     * be included in syslog messages that are logged by this Syslog JSON Error Log Publisher.
     */
    syslogMessageHostName?: pulumi.Input<string>;
    /**
     * When the `type` attribute is set to: - `syslog-json-audit`: The syslog severity to use for the messages that are logged
     * by this Syslog JSON Audit Log Publisher. - `syslog-text-error`: The syslog severity to use for the messages that are
     * logged by this Syslog Text Error Log Publisher. If this is not specified, then the severity for each syslog message will
     * be automatically based on the severity for the associated log message. - `syslog-text-access`: The syslog severity to
     * use for the messages that are logged by this Syslog Text Access Log Publisher. - `syslog-json-http-operation`: The
     * syslog severity to use for the messages that are logged by this Syslog JSON HTTP Operation Log Publisher. -
     * `syslog-json-access`: The syslog severity to use for the messages that are logged by this Syslog JSON Access Log
     * Publisher. - `syslog-json-error`: The syslog severity to use for the messages that are logged by this Syslog JSON Error
     * Log Publisher. If this is not specified, then the severity for each syslog message will be automatically based on the
     * severity for the associated log message.
     */
    syslogSeverity?: pulumi.Input<string>;
    /**
     * Specifies the interval at which to check whether the log files need to be rotated.
     */
    timeInterval?: pulumi.Input<string>;
    /**
     * Specifies the smallest time unit to be included in timestamps.
     */
    timestampPrecision?: pulumi.Input<string>;
    /**
     * Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if
     * desired.
     */
    useReversibleForm?: pulumi.Input<boolean>;
    /**
     * When the `type` attribute is set to: - One of [`syslog-json-audit`, `file-based-json-audit`,
     * `syslog-json-http-operation`, `console-json-audit`, `console-json-http-operation`, `file-based-json-http-operation`]:
     * Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its
     * own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces
     * and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools. - One of
     * [`console-json-error`, `json-access`, `json-error`, `console-json-access`]: Indicates whether the JSON objects should be
     * formatted to span multiple lines with a single element on each line. The multi-line format is potentially more user
     * friendly (if administrators may need to look at the log files), but each message will be larger because of the
     * additional spaces and end-of-line markers.
     */
    writeMultiLineMessages?: pulumi.Input<boolean>;
}
