// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDelegatedAdminAttributeCategory(args: GetDelegatedAdminAttributeCategoryArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegatedAdminAttributeCategoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingdirectory:index/getDelegatedAdminAttributeCategory:getDelegatedAdminAttributeCategory", {
        "displayName": args.displayName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDelegatedAdminAttributeCategory.
 */
export interface GetDelegatedAdminAttributeCategoryArgs {
    displayName: string;
}

/**
 * A collection of values returned by getDelegatedAdminAttributeCategory.
 */
export interface GetDelegatedAdminAttributeCategoryResult {
    readonly description: string;
    readonly displayName: string;
    readonly displayOrderIndex: number;
    readonly id: string;
    readonly type: string;
}
export function getDelegatedAdminAttributeCategoryOutput(args: GetDelegatedAdminAttributeCategoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDelegatedAdminAttributeCategoryResult> {
    return pulumi.output(args).apply((a: any) => getDelegatedAdminAttributeCategory(a, opts))
}

/**
 * A collection of arguments for invoking getDelegatedAdminAttributeCategory.
 */
export interface GetDelegatedAdminAttributeCategoryOutputArgs {
    displayName: pulumi.Input<string>;
}
