// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DefaultCustomLoggedStats extends pulumi.CustomResource {
    /**
     * Get an existing DefaultCustomLoggedStats resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultCustomLoggedStatsState, opts?: pulumi.CustomResourceOptions): DefaultCustomLoggedStats {
        return new DefaultCustomLoggedStats(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/defaultCustomLoggedStats:DefaultCustomLoggedStats';

    /**
     * Returns true if the given object is an instance of DefaultCustomLoggedStats.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultCustomLoggedStats {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultCustomLoggedStats.__pulumiType;
    }

    /**
     * Specifies the attributes on the monitor entries that should be included in the output.
     */
    public readonly attributeToLogs!: pulumi.Output<string[]>;
    /**
     * Optionally, specifies an explicit name for each column header instead of having these names automatically generated from
     * the monitored attribute name.
     */
    public readonly columnNames!: pulumi.Output<string[]>;
    /**
     * This provides a way to format the monitored attribute value in the output to control the precision for instance.
     */
    public readonly decimalFormat!: pulumi.Output<string>;
    /**
     * A description for this Custom Logged Stats
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * An optional floating point value that can be used to scale the resulting value.
     */
    public readonly divideValueBy!: pulumi.Output<string>;
    /**
     * An optional property that can scale the resulting value by another attribute in the monitored entry.
     */
    public readonly divideValueByAttribute!: pulumi.Output<string>;
    /**
     * Indicates whether the Custom Logged Stats object is enabled.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * An optional prefix that is included in the header before the column name.
     */
    public readonly headerPrefix!: pulumi.Output<string>;
    /**
     * An optional attribute from the monitor entry that is included as a prefix before the column name in the column header.
     */
    public readonly headerPrefixAttribute!: pulumi.Output<string>;
    /**
     * An optional LDAP filter that can be used restrict which monitor entries are used to produce the output.
     */
    public readonly includeFilter!: pulumi.Output<string>;
    /**
     * The objectclass name of the monitor entries to examine for generating these statistics.
     */
    public readonly monitorObjectclass!: pulumi.Output<string>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * If this property is set to true, then the value of any of the monitored attributes here can contribute to whether an
     * interval is considered "idle" by the Periodic Stats Logger.
     */
    public readonly nonZeroImpliesNotIdle!: pulumi.Output<boolean>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * Name of the parent Plugin
     */
    public readonly pluginName!: pulumi.Output<string>;
    /**
     * An optional regular expression pattern, that when used in conjunction with regex-replacement, can alter the value of the
     * attribute being monitored.
     */
    public readonly regexPattern!: pulumi.Output<string>;
    /**
     * An optional regular expression replacement value, that when used in conjunction with regex-pattern, can alter the value
     * of the attribute being monitored.
     */
    public readonly regexReplacement!: pulumi.Output<string>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.DefaultCustomLoggedStatsRequiredAction[]>;
    /**
     * Specifies the type of statistic to include in the output for each monitored attribute.
     */
    public readonly statisticTypes!: pulumi.Output<string[]>;
    /**
     * The type of Custom Logged Stats resource. Options are ['custom-logged-stats']
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DefaultCustomLoggedStats resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DefaultCustomLoggedStatsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultCustomLoggedStatsArgs | DefaultCustomLoggedStatsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultCustomLoggedStatsState | undefined;
            resourceInputs["attributeToLogs"] = state ? state.attributeToLogs : undefined;
            resourceInputs["columnNames"] = state ? state.columnNames : undefined;
            resourceInputs["decimalFormat"] = state ? state.decimalFormat : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["divideValueBy"] = state ? state.divideValueBy : undefined;
            resourceInputs["divideValueByAttribute"] = state ? state.divideValueByAttribute : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["headerPrefix"] = state ? state.headerPrefix : undefined;
            resourceInputs["headerPrefixAttribute"] = state ? state.headerPrefixAttribute : undefined;
            resourceInputs["includeFilter"] = state ? state.includeFilter : undefined;
            resourceInputs["monitorObjectclass"] = state ? state.monitorObjectclass : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nonZeroImpliesNotIdle"] = state ? state.nonZeroImpliesNotIdle : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["pluginName"] = state ? state.pluginName : undefined;
            resourceInputs["regexPattern"] = state ? state.regexPattern : undefined;
            resourceInputs["regexReplacement"] = state ? state.regexReplacement : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["statisticTypes"] = state ? state.statisticTypes : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DefaultCustomLoggedStatsArgs | undefined;
            if ((!args || args.pluginName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pluginName'");
            }
            resourceInputs["attributeToLogs"] = args ? args.attributeToLogs : undefined;
            resourceInputs["columnNames"] = args ? args.columnNames : undefined;
            resourceInputs["decimalFormat"] = args ? args.decimalFormat : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["divideValueBy"] = args ? args.divideValueBy : undefined;
            resourceInputs["divideValueByAttribute"] = args ? args.divideValueByAttribute : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["headerPrefix"] = args ? args.headerPrefix : undefined;
            resourceInputs["headerPrefixAttribute"] = args ? args.headerPrefixAttribute : undefined;
            resourceInputs["includeFilter"] = args ? args.includeFilter : undefined;
            resourceInputs["monitorObjectclass"] = args ? args.monitorObjectclass : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nonZeroImpliesNotIdle"] = args ? args.nonZeroImpliesNotIdle : undefined;
            resourceInputs["pluginName"] = args ? args.pluginName : undefined;
            resourceInputs["regexPattern"] = args ? args.regexPattern : undefined;
            resourceInputs["regexReplacement"] = args ? args.regexReplacement : undefined;
            resourceInputs["statisticTypes"] = args ? args.statisticTypes : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultCustomLoggedStats.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DefaultCustomLoggedStats resources.
 */
export interface DefaultCustomLoggedStatsState {
    /**
     * Specifies the attributes on the monitor entries that should be included in the output.
     */
    attributeToLogs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Optionally, specifies an explicit name for each column header instead of having these names automatically generated from
     * the monitored attribute name.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This provides a way to format the monitored attribute value in the output to control the precision for instance.
     */
    decimalFormat?: pulumi.Input<string>;
    /**
     * A description for this Custom Logged Stats
     */
    description?: pulumi.Input<string>;
    /**
     * An optional floating point value that can be used to scale the resulting value.
     */
    divideValueBy?: pulumi.Input<string>;
    /**
     * An optional property that can scale the resulting value by another attribute in the monitored entry.
     */
    divideValueByAttribute?: pulumi.Input<string>;
    /**
     * Indicates whether the Custom Logged Stats object is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * An optional prefix that is included in the header before the column name.
     */
    headerPrefix?: pulumi.Input<string>;
    /**
     * An optional attribute from the monitor entry that is included as a prefix before the column name in the column header.
     */
    headerPrefixAttribute?: pulumi.Input<string>;
    /**
     * An optional LDAP filter that can be used restrict which monitor entries are used to produce the output.
     */
    includeFilter?: pulumi.Input<string>;
    /**
     * The objectclass name of the monitor entries to examine for generating these statistics.
     */
    monitorObjectclass?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * If this property is set to true, then the value of any of the monitored attributes here can contribute to whether an
     * interval is considered "idle" by the Periodic Stats Logger.
     */
    nonZeroImpliesNotIdle?: pulumi.Input<boolean>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the parent Plugin
     */
    pluginName?: pulumi.Input<string>;
    /**
     * An optional regular expression pattern, that when used in conjunction with regex-replacement, can alter the value of the
     * attribute being monitored.
     */
    regexPattern?: pulumi.Input<string>;
    /**
     * An optional regular expression replacement value, that when used in conjunction with regex-pattern, can alter the value
     * of the attribute being monitored.
     */
    regexReplacement?: pulumi.Input<string>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.DefaultCustomLoggedStatsRequiredAction>[]>;
    /**
     * Specifies the type of statistic to include in the output for each monitored attribute.
     */
    statisticTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of Custom Logged Stats resource. Options are ['custom-logged-stats']
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DefaultCustomLoggedStats resource.
 */
export interface DefaultCustomLoggedStatsArgs {
    /**
     * Specifies the attributes on the monitor entries that should be included in the output.
     */
    attributeToLogs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Optionally, specifies an explicit name for each column header instead of having these names automatically generated from
     * the monitored attribute name.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This provides a way to format the monitored attribute value in the output to control the precision for instance.
     */
    decimalFormat?: pulumi.Input<string>;
    /**
     * A description for this Custom Logged Stats
     */
    description?: pulumi.Input<string>;
    /**
     * An optional floating point value that can be used to scale the resulting value.
     */
    divideValueBy?: pulumi.Input<string>;
    /**
     * An optional property that can scale the resulting value by another attribute in the monitored entry.
     */
    divideValueByAttribute?: pulumi.Input<string>;
    /**
     * Indicates whether the Custom Logged Stats object is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * An optional prefix that is included in the header before the column name.
     */
    headerPrefix?: pulumi.Input<string>;
    /**
     * An optional attribute from the monitor entry that is included as a prefix before the column name in the column header.
     */
    headerPrefixAttribute?: pulumi.Input<string>;
    /**
     * An optional LDAP filter that can be used restrict which monitor entries are used to produce the output.
     */
    includeFilter?: pulumi.Input<string>;
    /**
     * The objectclass name of the monitor entries to examine for generating these statistics.
     */
    monitorObjectclass?: pulumi.Input<string>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * If this property is set to true, then the value of any of the monitored attributes here can contribute to whether an
     * interval is considered "idle" by the Periodic Stats Logger.
     */
    nonZeroImpliesNotIdle?: pulumi.Input<boolean>;
    /**
     * Name of the parent Plugin
     */
    pluginName: pulumi.Input<string>;
    /**
     * An optional regular expression pattern, that when used in conjunction with regex-replacement, can alter the value of the
     * attribute being monitored.
     */
    regexPattern?: pulumi.Input<string>;
    /**
     * An optional regular expression replacement value, that when used in conjunction with regex-pattern, can alter the value
     * of the attribute being monitored.
     */
    regexReplacement?: pulumi.Input<string>;
    /**
     * Specifies the type of statistic to include in the output for each monitored attribute.
     */
    statisticTypes?: pulumi.Input<pulumi.Input<string>[]>;
}
