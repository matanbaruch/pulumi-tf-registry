// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DefaultReplicationServer extends pulumi.CustomResource {
    /**
     * Get an existing DefaultReplicationServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultReplicationServerState, opts?: pulumi.CustomResourceOptions): DefaultReplicationServer {
        return new DefaultReplicationServer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/defaultReplicationServer:DefaultReplicationServer';

    /**
     * Returns true if the given object is an instance of DefaultReplicationServer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultReplicationServer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultReplicationServer.__pulumiType;
    }

    /**
     * Specifies when the replication traffic should be compressed.
     */
    public readonly compressionCriteria!: pulumi.Output<string>;
    /**
     * Specifies the gateway priority of the Replication Server in the current location.
     */
    public readonly gatewayPriority!: pulumi.Output<number>;
    /**
     * Specifies the heartbeat interval that the Directory Server will use when communicating with Replication Servers.
     */
    public readonly heartbeatInterval!: pulumi.Output<string>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. Indicates monitor messages should include information about remote
     * servers.
     */
    public readonly includeAllRemoteServersStateInMonitorMessage!: pulumi.Output<boolean>;
    /**
     * Specifies the database and environment properties for the Berkeley DB Java Edition database for the replication
     * changelog.
     */
    public readonly jeProperties!: pulumi.Output<string[]>;
    /**
     * Indicates whether the Replication Server should listen on all addresses for this host. If set to FALSE, then the
     * Replication Server will listen only to the address resolved from the hostname provided.
     */
    public readonly listenOnAllAddresses!: pulumi.Output<boolean>;
    /**
     * Supported in PingDirectory product version 9.3.0.0+. Specifies the missing changes alert threshold as a percentage of
     * the total pending changes. For instance, a value of 80 indicates that the replica is 80% of the way to losing changes.
     */
    public readonly missingChangesAlertThresholdPercent!: pulumi.Output<number>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. Determines how the server responds when replication detects that
     * some changes might have been missed. Each missing changes policy is a set of missing changes actions to take for a set
     * of missing changes types. The value configured here acts as a default for all replication domains on this replication
     * server.
     */
    public readonly missingChangesPolicy!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * Specifies the duration that topology monitor data will be cached before it is requested again from a remote server.
     */
    public readonly remoteMonitorUpdateInterval!: pulumi.Output<string>;
    /**
     * The path where the Replication Server stores all persistent information.
     */
    public readonly replicationDbDirectory!: pulumi.Output<string>;
    /**
     * The port on which this Replication Server waits for connections from other Replication Servers or Directory Server
     * instances.
     */
    public readonly replicationPort!: pulumi.Output<number>;
    /**
     * Changes are guaranteed to be maintained in the changelog database for at least this duration. Setting
     * target-database-size can allow additional changes to be maintained up to the configured size on disk.
     */
    public readonly replicationPurgeDelay!: pulumi.Output<string>;
    /**
     * Specifies a unique identifier for the Replication Server.
     */
    public readonly replicationServerId!: pulumi.Output<number>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.DefaultReplicationServerRequiredAction[]>;
    /**
     * Specifies the base DN of domains that are only replicated between server instances that belong to the same replication
     * set.
     */
    public readonly restrictedDomains!: pulumi.Output<string[]>;
    /**
     * Name of the parent Synchronization Provider
     */
    public readonly synchronizationProviderName!: pulumi.Output<string>;
    /**
     * The replication changelog database is allowed to grow up to this size even if changes are older than the configured
     * replication-purge-delay.
     */
    public readonly targetDatabaseSize!: pulumi.Output<string>;
    /**
     * The type of Replication Server resource. Options are ['replication-server']
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DefaultReplicationServer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DefaultReplicationServerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultReplicationServerArgs | DefaultReplicationServerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultReplicationServerState | undefined;
            resourceInputs["compressionCriteria"] = state ? state.compressionCriteria : undefined;
            resourceInputs["gatewayPriority"] = state ? state.gatewayPriority : undefined;
            resourceInputs["heartbeatInterval"] = state ? state.heartbeatInterval : undefined;
            resourceInputs["includeAllRemoteServersStateInMonitorMessage"] = state ? state.includeAllRemoteServersStateInMonitorMessage : undefined;
            resourceInputs["jeProperties"] = state ? state.jeProperties : undefined;
            resourceInputs["listenOnAllAddresses"] = state ? state.listenOnAllAddresses : undefined;
            resourceInputs["missingChangesAlertThresholdPercent"] = state ? state.missingChangesAlertThresholdPercent : undefined;
            resourceInputs["missingChangesPolicy"] = state ? state.missingChangesPolicy : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["remoteMonitorUpdateInterval"] = state ? state.remoteMonitorUpdateInterval : undefined;
            resourceInputs["replicationDbDirectory"] = state ? state.replicationDbDirectory : undefined;
            resourceInputs["replicationPort"] = state ? state.replicationPort : undefined;
            resourceInputs["replicationPurgeDelay"] = state ? state.replicationPurgeDelay : undefined;
            resourceInputs["replicationServerId"] = state ? state.replicationServerId : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["restrictedDomains"] = state ? state.restrictedDomains : undefined;
            resourceInputs["synchronizationProviderName"] = state ? state.synchronizationProviderName : undefined;
            resourceInputs["targetDatabaseSize"] = state ? state.targetDatabaseSize : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DefaultReplicationServerArgs | undefined;
            if ((!args || args.synchronizationProviderName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'synchronizationProviderName'");
            }
            resourceInputs["compressionCriteria"] = args ? args.compressionCriteria : undefined;
            resourceInputs["gatewayPriority"] = args ? args.gatewayPriority : undefined;
            resourceInputs["heartbeatInterval"] = args ? args.heartbeatInterval : undefined;
            resourceInputs["includeAllRemoteServersStateInMonitorMessage"] = args ? args.includeAllRemoteServersStateInMonitorMessage : undefined;
            resourceInputs["jeProperties"] = args ? args.jeProperties : undefined;
            resourceInputs["listenOnAllAddresses"] = args ? args.listenOnAllAddresses : undefined;
            resourceInputs["missingChangesAlertThresholdPercent"] = args ? args.missingChangesAlertThresholdPercent : undefined;
            resourceInputs["missingChangesPolicy"] = args ? args.missingChangesPolicy : undefined;
            resourceInputs["remoteMonitorUpdateInterval"] = args ? args.remoteMonitorUpdateInterval : undefined;
            resourceInputs["replicationDbDirectory"] = args ? args.replicationDbDirectory : undefined;
            resourceInputs["replicationPort"] = args ? args.replicationPort : undefined;
            resourceInputs["replicationPurgeDelay"] = args ? args.replicationPurgeDelay : undefined;
            resourceInputs["replicationServerId"] = args ? args.replicationServerId : undefined;
            resourceInputs["restrictedDomains"] = args ? args.restrictedDomains : undefined;
            resourceInputs["synchronizationProviderName"] = args ? args.synchronizationProviderName : undefined;
            resourceInputs["targetDatabaseSize"] = args ? args.targetDatabaseSize : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultReplicationServer.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DefaultReplicationServer resources.
 */
export interface DefaultReplicationServerState {
    /**
     * Specifies when the replication traffic should be compressed.
     */
    compressionCriteria?: pulumi.Input<string>;
    /**
     * Specifies the gateway priority of the Replication Server in the current location.
     */
    gatewayPriority?: pulumi.Input<number>;
    /**
     * Specifies the heartbeat interval that the Directory Server will use when communicating with Replication Servers.
     */
    heartbeatInterval?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. Indicates monitor messages should include information about remote
     * servers.
     */
    includeAllRemoteServersStateInMonitorMessage?: pulumi.Input<boolean>;
    /**
     * Specifies the database and environment properties for the Berkeley DB Java Edition database for the replication
     * changelog.
     */
    jeProperties?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether the Replication Server should listen on all addresses for this host. If set to FALSE, then the
     * Replication Server will listen only to the address resolved from the hostname provided.
     */
    listenOnAllAddresses?: pulumi.Input<boolean>;
    /**
     * Supported in PingDirectory product version 9.3.0.0+. Specifies the missing changes alert threshold as a percentage of
     * the total pending changes. For instance, a value of 80 indicates that the replica is 80% of the way to losing changes.
     */
    missingChangesAlertThresholdPercent?: pulumi.Input<number>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. Determines how the server responds when replication detects that
     * some changes might have been missed. Each missing changes policy is a set of missing changes actions to take for a set
     * of missing changes types. The value configured here acts as a default for all replication domains on this replication
     * server.
     */
    missingChangesPolicy?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the duration that topology monitor data will be cached before it is requested again from a remote server.
     */
    remoteMonitorUpdateInterval?: pulumi.Input<string>;
    /**
     * The path where the Replication Server stores all persistent information.
     */
    replicationDbDirectory?: pulumi.Input<string>;
    /**
     * The port on which this Replication Server waits for connections from other Replication Servers or Directory Server
     * instances.
     */
    replicationPort?: pulumi.Input<number>;
    /**
     * Changes are guaranteed to be maintained in the changelog database for at least this duration. Setting
     * target-database-size can allow additional changes to be maintained up to the configured size on disk.
     */
    replicationPurgeDelay?: pulumi.Input<string>;
    /**
     * Specifies a unique identifier for the Replication Server.
     */
    replicationServerId?: pulumi.Input<number>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.DefaultReplicationServerRequiredAction>[]>;
    /**
     * Specifies the base DN of domains that are only replicated between server instances that belong to the same replication
     * set.
     */
    restrictedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the parent Synchronization Provider
     */
    synchronizationProviderName?: pulumi.Input<string>;
    /**
     * The replication changelog database is allowed to grow up to this size even if changes are older than the configured
     * replication-purge-delay.
     */
    targetDatabaseSize?: pulumi.Input<string>;
    /**
     * The type of Replication Server resource. Options are ['replication-server']
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DefaultReplicationServer resource.
 */
export interface DefaultReplicationServerArgs {
    /**
     * Specifies when the replication traffic should be compressed.
     */
    compressionCriteria?: pulumi.Input<string>;
    /**
     * Specifies the gateway priority of the Replication Server in the current location.
     */
    gatewayPriority?: pulumi.Input<number>;
    /**
     * Specifies the heartbeat interval that the Directory Server will use when communicating with Replication Servers.
     */
    heartbeatInterval?: pulumi.Input<string>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. Indicates monitor messages should include information about remote
     * servers.
     */
    includeAllRemoteServersStateInMonitorMessage?: pulumi.Input<boolean>;
    /**
     * Specifies the database and environment properties for the Berkeley DB Java Edition database for the replication
     * changelog.
     */
    jeProperties?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether the Replication Server should listen on all addresses for this host. If set to FALSE, then the
     * Replication Server will listen only to the address resolved from the hostname provided.
     */
    listenOnAllAddresses?: pulumi.Input<boolean>;
    /**
     * Supported in PingDirectory product version 9.3.0.0+. Specifies the missing changes alert threshold as a percentage of
     * the total pending changes. For instance, a value of 80 indicates that the replica is 80% of the way to losing changes.
     */
    missingChangesAlertThresholdPercent?: pulumi.Input<number>;
    /**
     * Supported in PingDirectory product version 10.0.0.0+. Determines how the server responds when replication detects that
     * some changes might have been missed. Each missing changes policy is a set of missing changes actions to take for a set
     * of missing changes types. The value configured here acts as a default for all replication domains on this replication
     * server.
     */
    missingChangesPolicy?: pulumi.Input<string>;
    /**
     * Specifies the duration that topology monitor data will be cached before it is requested again from a remote server.
     */
    remoteMonitorUpdateInterval?: pulumi.Input<string>;
    /**
     * The path where the Replication Server stores all persistent information.
     */
    replicationDbDirectory?: pulumi.Input<string>;
    /**
     * The port on which this Replication Server waits for connections from other Replication Servers or Directory Server
     * instances.
     */
    replicationPort?: pulumi.Input<number>;
    /**
     * Changes are guaranteed to be maintained in the changelog database for at least this duration. Setting
     * target-database-size can allow additional changes to be maintained up to the configured size on disk.
     */
    replicationPurgeDelay?: pulumi.Input<string>;
    /**
     * Specifies a unique identifier for the Replication Server.
     */
    replicationServerId?: pulumi.Input<number>;
    /**
     * Specifies the base DN of domains that are only replicated between server instances that belong to the same replication
     * set.
     */
    restrictedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the parent Synchronization Provider
     */
    synchronizationProviderName: pulumi.Input<string>;
    /**
     * The replication changelog database is allowed to grow up to this size even if changes are older than the configured
     * replication-purge-delay.
     */
    targetDatabaseSize?: pulumi.Input<string>;
}
