// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WebApplicationExtension extends pulumi.CustomResource {
    /**
     * Get an existing WebApplicationExtension resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebApplicationExtensionState, opts?: pulumi.CustomResourceOptions): WebApplicationExtension {
        return new WebApplicationExtension(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingdirectory:index/webApplicationExtension:WebApplicationExtension';

    /**
     * Returns true if the given object is an instance of WebApplicationExtension.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebApplicationExtension {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebApplicationExtension.__pulumiType;
    }

    /**
     * Specifies the base context path that should be used by HTTP clients to reference content. The value must start with a
     * forward slash and at least one additional character and must represent a valid HTTP context path.
     */
    public readonly baseContextPath!: pulumi.Output<string>;
    /**
     * Specifies the path to the deployment descriptor file when used with document-root-directory.
     */
    public readonly deploymentDescriptorFile!: pulumi.Output<string | undefined>;
    /**
     * A description for this Web Application Extension
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the path to the directory on the local filesystem containing the files to be served by this Web Application
     * Extension. The path must exist, and it must be a directory.
     */
    public readonly documentRootDirectory!: pulumi.Output<string | undefined>;
    /**
     * Specifies an initialization parameter to pass into the web application during startup.
     */
    public readonly initParameters!: pulumi.Output<string[]>;
    /**
     * Name of this config object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    public /*out*/ readonly requiredActions!: pulumi.Output<outputs.WebApplicationExtensionRequiredAction[]>;
    /**
     * Specifies the path to the directory that may be used to store temporary files such as extracted WAR files and compiled
     * JSP files.
     */
    public readonly temporaryDirectory!: pulumi.Output<string | undefined>;
    /**
     * The type of Web Application Extension resource. Options are ['console', 'generic']
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Specifies the path to a standard web application archive (WAR) file.
     */
    public readonly warFile!: pulumi.Output<string | undefined>;

    /**
     * Create a WebApplicationExtension resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebApplicationExtensionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebApplicationExtensionArgs | WebApplicationExtensionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebApplicationExtensionState | undefined;
            resourceInputs["baseContextPath"] = state ? state.baseContextPath : undefined;
            resourceInputs["deploymentDescriptorFile"] = state ? state.deploymentDescriptorFile : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["documentRootDirectory"] = state ? state.documentRootDirectory : undefined;
            resourceInputs["initParameters"] = state ? state.initParameters : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["requiredActions"] = state ? state.requiredActions : undefined;
            resourceInputs["temporaryDirectory"] = state ? state.temporaryDirectory : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["warFile"] = state ? state.warFile : undefined;
        } else {
            const args = argsOrState as WebApplicationExtensionArgs | undefined;
            if ((!args || args.baseContextPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baseContextPath'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["baseContextPath"] = args ? args.baseContextPath : undefined;
            resourceInputs["deploymentDescriptorFile"] = args ? args.deploymentDescriptorFile : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["documentRootDirectory"] = args ? args.documentRootDirectory : undefined;
            resourceInputs["initParameters"] = args ? args.initParameters : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["temporaryDirectory"] = args ? args.temporaryDirectory : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["warFile"] = args ? args.warFile : undefined;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["requiredActions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebApplicationExtension.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WebApplicationExtension resources.
 */
export interface WebApplicationExtensionState {
    /**
     * Specifies the base context path that should be used by HTTP clients to reference content. The value must start with a
     * forward slash and at least one additional character and must represent a valid HTTP context path.
     */
    baseContextPath?: pulumi.Input<string>;
    /**
     * Specifies the path to the deployment descriptor file when used with document-root-directory.
     */
    deploymentDescriptorFile?: pulumi.Input<string>;
    /**
     * A description for this Web Application Extension
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the path to the directory on the local filesystem containing the files to be served by this Web Application
     * Extension. The path must exist, and it must be a directory.
     */
    documentRootDirectory?: pulumi.Input<string>;
    /**
     * Specifies an initialization parameter to pass into the web application during startup.
     */
    initParameters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Notifications returned by the PingDirectory Configuration API.
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required actions returned by the PingDirectory Configuration API.
     */
    requiredActions?: pulumi.Input<pulumi.Input<inputs.WebApplicationExtensionRequiredAction>[]>;
    /**
     * Specifies the path to the directory that may be used to store temporary files such as extracted WAR files and compiled
     * JSP files.
     */
    temporaryDirectory?: pulumi.Input<string>;
    /**
     * The type of Web Application Extension resource. Options are ['console', 'generic']
     */
    type?: pulumi.Input<string>;
    /**
     * Specifies the path to a standard web application archive (WAR) file.
     */
    warFile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WebApplicationExtension resource.
 */
export interface WebApplicationExtensionArgs {
    /**
     * Specifies the base context path that should be used by HTTP clients to reference content. The value must start with a
     * forward slash and at least one additional character and must represent a valid HTTP context path.
     */
    baseContextPath: pulumi.Input<string>;
    /**
     * Specifies the path to the deployment descriptor file when used with document-root-directory.
     */
    deploymentDescriptorFile?: pulumi.Input<string>;
    /**
     * A description for this Web Application Extension
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the path to the directory on the local filesystem containing the files to be served by this Web Application
     * Extension. The path must exist, and it must be a directory.
     */
    documentRootDirectory?: pulumi.Input<string>;
    /**
     * Specifies an initialization parameter to pass into the web application during startup.
     */
    initParameters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of this config object.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the path to the directory that may be used to store temporary files such as extracted WAR files and compiled
     * JSP files.
     */
    temporaryDirectory?: pulumi.Input<string>;
    /**
     * The type of Web Application Extension resource. Options are ['console', 'generic']
     */
    type: pulumi.Input<string>;
    /**
     * Specifies the path to a standard web application archive (WAR) file.
     */
    warFile?: pulumi.Input<string>;
}
