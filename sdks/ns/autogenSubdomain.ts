// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AutogenSubdomain extends pulumi.CustomResource {
    /**
     * Get an existing AutogenSubdomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutogenSubdomainState, opts?: pulumi.CustomResourceOptions): AutogenSubdomain {
        return new AutogenSubdomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ns:index/autogenSubdomain:AutogenSubdomain';

    /**
     * Returns true if the given object is an instance of AutogenSubdomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutogenSubdomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutogenSubdomain.__pulumiType;
    }

    /**
     * The name of the autogenerated subdomain.
     */
    public /*out*/ readonly dnsName!: pulumi.Output<string>;
    /**
     * The domain name that nullstone manages for this autogenerated subdomain. It is usually `nullstone.app`.
     */
    public /*out*/ readonly domainName!: pulumi.Output<string>;
    /**
     * The autogen subdomain belongs to this env.
     */
    public readonly envId!: pulumi.Output<number>;
    /**
     * The fully-qualified domain name (FQDN) that nullstone manages for this autogenerated subdomain. It is composed as
     * `{dns_name}.{domain_name}.`.
     */
    public /*out*/ readonly fqdn!: pulumi.Output<string>;
    /**
     * The autogen subdomain belongs to this subdomain.
     */
    public readonly subdomainId!: pulumi.Output<number>;

    /**
     * Create a AutogenSubdomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutogenSubdomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutogenSubdomainArgs | AutogenSubdomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutogenSubdomainState | undefined;
            resourceInputs["dnsName"] = state ? state.dnsName : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["envId"] = state ? state.envId : undefined;
            resourceInputs["fqdn"] = state ? state.fqdn : undefined;
            resourceInputs["subdomainId"] = state ? state.subdomainId : undefined;
        } else {
            const args = argsOrState as AutogenSubdomainArgs | undefined;
            if ((!args || args.envId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'envId'");
            }
            if ((!args || args.subdomainId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subdomainId'");
            }
            resourceInputs["envId"] = args ? args.envId : undefined;
            resourceInputs["subdomainId"] = args ? args.subdomainId : undefined;
            resourceInputs["dnsName"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["fqdn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutogenSubdomain.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AutogenSubdomain resources.
 */
export interface AutogenSubdomainState {
    /**
     * The name of the autogenerated subdomain.
     */
    dnsName?: pulumi.Input<string>;
    /**
     * The domain name that nullstone manages for this autogenerated subdomain. It is usually `nullstone.app`.
     */
    domainName?: pulumi.Input<string>;
    /**
     * The autogen subdomain belongs to this env.
     */
    envId?: pulumi.Input<number>;
    /**
     * The fully-qualified domain name (FQDN) that nullstone manages for this autogenerated subdomain. It is composed as
     * `{dns_name}.{domain_name}.`.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * The autogen subdomain belongs to this subdomain.
     */
    subdomainId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AutogenSubdomain resource.
 */
export interface AutogenSubdomainArgs {
    /**
     * The autogen subdomain belongs to this env.
     */
    envId: pulumi.Input<number>;
    /**
     * The autogen subdomain belongs to this subdomain.
     */
    subdomainId: pulumi.Input<number>;
}
