// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAppEnv(args: GetAppEnvArgs, opts?: pulumi.InvokeOptions): Promise<GetAppEnvResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ns:index/getAppEnv:getAppEnv", {
        "appId": args.appId,
        "envId": args.envId,
        "stackId": args.stackId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppEnv.
 */
export interface GetAppEnvArgs {
    appId: number;
    envId: number;
    stackId: number;
}

/**
 * A collection of values returned by getAppEnv.
 */
export interface GetAppEnvResult {
    readonly appId: number;
    readonly commitSha: string;
    readonly envId: number;
    /**
     * @deprecated Deprecated
     */
    readonly id: string;
    readonly stackId: number;
    readonly version: string;
}
export function getAppEnvOutput(args: GetAppEnvOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppEnvResult> {
    return pulumi.output(args).apply((a: any) => getAppEnv(a, opts))
}

/**
 * A collection of arguments for invoking getAppEnv.
 */
export interface GetAppEnvOutputArgs {
    appId: pulumi.Input<number>;
    envId: pulumi.Input<number>;
    stackId: pulumi.Input<number>;
}
