// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEnvVariables(args: GetEnvVariablesArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvVariablesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ns:index/getEnvVariables:getEnvVariables", {
        "inputEnvVariables": args.inputEnvVariables,
        "inputSecrets": args.inputSecrets,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEnvVariables.
 */
export interface GetEnvVariablesArgs {
    inputEnvVariables: {[key: string]: string};
    inputSecrets: {[key: string]: string};
}

/**
 * A collection of values returned by getEnvVariables.
 */
export interface GetEnvVariablesResult {
    readonly envVariables: {[key: string]: string};
    /**
     * @deprecated Deprecated
     */
    readonly id: string;
    readonly inputEnvVariables: {[key: string]: string};
    readonly inputSecrets: {[key: string]: string};
    readonly secretRefs: {[key: string]: string};
    readonly secrets: {[key: string]: string};
}
export function getEnvVariablesOutput(args: GetEnvVariablesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnvVariablesResult> {
    return pulumi.output(args).apply((a: any) => getEnvVariables(a, opts))
}

/**
 * A collection of arguments for invoking getEnvVariables.
 */
export interface GetEnvVariablesOutputArgs {
    inputEnvVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    inputSecrets: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
