// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSecretKeys(args: GetSecretKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretKeysResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ns:index/getSecretKeys:getSecretKeys", {
        "inputEnvVariables": args.inputEnvVariables,
        "inputSecretKeys": args.inputSecretKeys,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecretKeys.
 */
export interface GetSecretKeysArgs {
    inputEnvVariables: {[key: string]: string};
    inputSecretKeys: string[];
}

/**
 * A collection of values returned by getSecretKeys.
 */
export interface GetSecretKeysResult {
    /**
     * @deprecated Deprecated
     */
    readonly id: string;
    readonly inputEnvVariables: {[key: string]: string};
    readonly inputSecretKeys: string[];
    readonly secretKeys: string[];
}
export function getSecretKeysOutput(args: GetSecretKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretKeysResult> {
    return pulumi.output(args).apply((a: any) => getSecretKeys(a, opts))
}

/**
 * A collection of arguments for invoking getSecretKeys.
 */
export interface GetSecretKeysOutputArgs {
    inputEnvVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    inputSecretKeys: pulumi.Input<pulumi.Input<string>[]>;
}
