// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEnv(args: GetEnvArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ns:index/getEnv:getEnv", {
        "envId": args.envId,
        "stackId": args.stackId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEnv.
 */
export interface GetEnvArgs {
    envId: number;
    stackId: number;
}

/**
 * A collection of values returned by getEnv.
 */
export interface GetEnvResult {
    readonly envId: number;
    /**
     * @deprecated Deprecated
     */
    readonly id: string;
    readonly name: string;
    readonly pipelineOrder: number;
    readonly stackId: number;
    readonly type: string;
}
export function getEnvOutput(args: GetEnvOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnvResult> {
    return pulumi.output(args).apply((a: any) => getEnv(a, opts))
}

/**
 * A collection of arguments for invoking getEnv.
 */
export interface GetEnvOutputArgs {
    envId: pulumi.Input<number>;
    stackId: pulumi.Input<number>;
}
