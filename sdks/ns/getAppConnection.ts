// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAppConnection(args: GetAppConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetAppConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ns:index/getAppConnection:getAppConnection", {
        "contract": args.contract,
        "name": args.name,
        "optional": args.optional,
        "type": args.type,
        "via": args.via,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppConnection.
 */
export interface GetAppConnectionArgs {
    contract?: string;
    name: string;
    optional?: boolean;
    type?: string;
    via?: string;
}

/**
 * A collection of values returned by getAppConnection.
 */
export interface GetAppConnectionResult {
    readonly contract?: string;
    /**
     * @deprecated Deprecated
     */
    readonly id: string;
    readonly name: string;
    readonly optional?: boolean;
    readonly outputs: any;
    readonly type?: string;
    readonly via?: string;
    readonly workspaceId: string;
}
export function getAppConnectionOutput(args: GetAppConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppConnectionResult> {
    return pulumi.output(args).apply((a: any) => getAppConnection(a, opts))
}

/**
 * A collection of arguments for invoking getAppConnection.
 */
export interface GetAppConnectionOutputArgs {
    contract?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    optional?: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    via?: pulumi.Input<string>;
}
