// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStreamingTenantTokens(args: GetStreamingTenantTokensArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamingTenantTokensResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("astra:index/getStreamingTenantTokens:getStreamingTenantTokens", {
        "clusterName": args.clusterName,
        "id": args.id,
        "tenantName": args.tenantName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStreamingTenantTokens.
 */
export interface GetStreamingTenantTokensArgs {
    clusterName: string;
    id?: string;
    tenantName: string;
}

/**
 * A collection of values returned by getStreamingTenantTokens.
 */
export interface GetStreamingTenantTokensResult {
    readonly clusterName: string;
    readonly id: string;
    readonly tenantName: string;
    readonly tokens: outputs.GetStreamingTenantTokensToken[];
}
export function getStreamingTenantTokensOutput(args: GetStreamingTenantTokensOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStreamingTenantTokensResult> {
    return pulumi.output(args).apply((a: any) => getStreamingTenantTokens(a, opts))
}

/**
 * A collection of arguments for invoking getStreamingTenantTokens.
 */
export interface GetStreamingTenantTokensOutputArgs {
    clusterName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tenantName: pulumi.Input<string>;
}
