// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecureConnectBundleUrl(args: GetSecureConnectBundleUrlArgs, opts?: pulumi.InvokeOptions): Promise<GetSecureConnectBundleUrlResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("astra:index/getSecureConnectBundleUrl:getSecureConnectBundleUrl", {
        "databaseId": args.databaseId,
        "datacenterId": args.datacenterId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecureConnectBundleUrl.
 */
export interface GetSecureConnectBundleUrlArgs {
    databaseId: string;
    datacenterId?: string;
    id?: string;
}

/**
 * A collection of values returned by getSecureConnectBundleUrl.
 */
export interface GetSecureConnectBundleUrlResult {
    readonly databaseId: string;
    readonly datacenterId?: string;
    readonly id: string;
    readonly secureBundles: outputs.GetSecureConnectBundleUrlSecureBundle[];
}
export function getSecureConnectBundleUrlOutput(args: GetSecureConnectBundleUrlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecureConnectBundleUrlResult> {
    return pulumi.output(args).apply((a: any) => getSecureConnectBundleUrl(a, opts))
}

/**
 * A collection of arguments for invoking getSecureConnectBundleUrl.
 */
export interface GetSecureConnectBundleUrlOutputArgs {
    databaseId: pulumi.Input<string>;
    datacenterId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
