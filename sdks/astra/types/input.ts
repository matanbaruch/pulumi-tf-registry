// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AccessListAddress {
    /**
     * IP Address/CIDR group that should have access
     */
    address: pulumi.Input<string>;
    /**
     * Description for the IP Address/CIDR group
     */
    description?: pulumi.Input<string>;
    /**
     * Enable/disable this IP Address/CIDR group's access
     */
    enabled: pulumi.Input<boolean>;
}

export interface DatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamingNamespacePolicies {
    autoTopicCreationOverride?: pulumi.Input<inputs.StreamingNamespacePoliciesAutoTopicCreationOverride>;
    backlogQuotaMap?: pulumi.Input<{[key: string]: pulumi.Input<inputs.StreamingNamespacePoliciesBacklogQuotaMap>}>;
    inactiveTopicPolicies?: pulumi.Input<inputs.StreamingNamespacePoliciesInactiveTopicPolicies>;
    isAllowAutoUpdateSchema?: pulumi.Input<boolean>;
    messageTtlInSeconds?: pulumi.Input<number>;
    offloadThreshold?: pulumi.Input<number>;
    retentionPolicies?: pulumi.Input<inputs.StreamingNamespacePoliciesRetentionPolicies>;
    schemaAutoUpdateCompatibilityStrategy?: pulumi.Input<string>;
    schemaCompatibilityStrategy?: pulumi.Input<string>;
    schemaValidationEnforced?: pulumi.Input<boolean>;
    subscriptionExpirationTimeMinutes?: pulumi.Input<number>;
}

export interface StreamingNamespacePoliciesAutoTopicCreationOverride {
    allowAutoTopicCreation?: pulumi.Input<boolean>;
    defaultNumPartitions?: pulumi.Input<number>;
    topicType?: pulumi.Input<string>;
}

export interface StreamingNamespacePoliciesBacklogQuotaMap {
    limit?: pulumi.Input<number>;
    limitSize?: pulumi.Input<number>;
    limitTime?: pulumi.Input<number>;
    policy?: pulumi.Input<string>;
}

export interface StreamingNamespacePoliciesInactiveTopicPolicies {
    deleteMode?: pulumi.Input<string>;
    deleteWhileInactive?: pulumi.Input<boolean>;
    maxInactiveDurationSeconds?: pulumi.Input<number>;
}

export interface StreamingNamespacePoliciesRetentionPolicies {
    retentionSizeInMb?: pulumi.Input<number>;
    retentionTimeInMinutes?: pulumi.Input<number>;
}

export interface StreamingTopicSchema {
    /**
     * Additional properties
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Schema definition
     */
    schema: pulumi.Input<string>;
    /**
     * Type of the schema, e.g. JSON
     */
    type: pulumi.Input<string>;
}
