// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEnvironment(args: GetEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvironmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sym:index/getEnvironment:getEnvironment", {
        "errorLoggerId": args.errorLoggerId,
        "id": args.id,
        "integrations": args.integrations,
        "label": args.label,
        "logDestinationIds": args.logDestinationIds,
        "name": args.name,
        "runtimeId": args.runtimeId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEnvironment.
 */
export interface GetEnvironmentArgs {
    errorLoggerId?: string;
    id?: string;
    integrations?: {[key: string]: string};
    label?: string;
    logDestinationIds?: string[];
    name: string;
    runtimeId?: string;
}

/**
 * A collection of values returned by getEnvironment.
 */
export interface GetEnvironmentResult {
    readonly errorLoggerId?: string;
    readonly id: string;
    readonly integrations?: {[key: string]: string};
    readonly label?: string;
    readonly logDestinationIds?: string[];
    readonly name: string;
    readonly runtimeId?: string;
}
export function getEnvironmentOutput(args: GetEnvironmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnvironmentResult> {
    return pulumi.output(args).apply((a: any) => getEnvironment(a, opts))
}

/**
 * A collection of arguments for invoking getEnvironment.
 */
export interface GetEnvironmentOutputArgs {
    errorLoggerId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    integrations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    label?: pulumi.Input<string>;
    logDestinationIds?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    runtimeId?: pulumi.Input<string>;
}
