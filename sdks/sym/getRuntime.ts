// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRuntime(args: GetRuntimeArgs, opts?: pulumi.InvokeOptions): Promise<GetRuntimeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sym:index/getRuntime:getRuntime", {
        "contextId": args.contextId,
        "id": args.id,
        "label": args.label,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRuntime.
 */
export interface GetRuntimeArgs {
    contextId?: string;
    id?: string;
    label?: string;
    name: string;
}

/**
 * A collection of values returned by getRuntime.
 */
export interface GetRuntimeResult {
    readonly contextId?: string;
    readonly id: string;
    readonly label?: string;
    readonly name: string;
}
export function getRuntimeOutput(args: GetRuntimeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRuntimeResult> {
    return pulumi.output(args).apply((a: any) => getRuntime(a, opts))
}

/**
 * A collection of arguments for invoking getRuntime.
 */
export interface GetRuntimeOutputArgs {
    contextId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    label?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
