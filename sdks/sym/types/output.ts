// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface FlowParams {
    /**
     * Additional text to append to the header text displayed at the top of the Slack request modal, after the default header text. Supports Slack markdown.
     */
    additionalHeaderText?: string;
    /**
     * Whether to allow guest users to interact with this sym_flow. If true, guest users can click the "Approve", "Deny", and "Revoke" buttons in Slack. If false, guest users' interactions with this sym_flow's requests will be rejected.'
     */
    allowGuestInteraction?: boolean;
    /**
     * Whether access granted by a sym.Strategy may be revoked before the requested duration is over. If true, shows a "Revoke" button in Slack that allows both the requester and approver to instantly revoke access. At least one of "schedule_deescalation" or "allow_revoke" must be true.
     */
    allowRevoke?: boolean;
    /**
     * A list of sources from which this sym.Flow may be invoked. Valid sources are: "slack", "api". If unspecified, all sources will be enabled. If an empty list is specified, it will not be possible for this sym.Flow to be invoked.
     */
    allowedSources?: string[];
    /**
     * Whether users responding to requests may enter additional text as context for their decisions. If true, shows an input box on all open requests.
     */
    includeDecisionMessage?: boolean;
    /**
     * Custom input field used to collect information from a user who is requesting access to a resource.
     */
    promptFields?: outputs.FlowParamsPromptField[];
    /**
     * Whether automatic access de-escalation will occur after a requested duration. If false, de-escalation will only occur when manually revoked. At least one of "schedule_deescalation" or "allow_revoke" must be true.
     */
    scheduleDeescalation?: boolean;
    /**
     * The ID of a sym.Strategy with sym_targets that this sym.Flow will be managing access to. If not defined, this sym.Flow will be approval-only.
     */
    strategyId?: string;
}

export interface FlowParamsPromptField {
    /**
     * Defines the full list of valid choices for this field's value. If defined, this field will be displayed as a dropdown in Slack. Not applicable for the "slack_user" and "slack_user_list" types.
     */
    allowedValues?: string[];
    /**
     * A fallback value for optional fields if no value is provided. Not applicable for the "slack_user", "slack_user_list", "int_list", and "str_list" types.
     */
    default?: string;
    /**
     * A name for the field, to be displayed in Slack.
     */
    label?: string;
    /**
     * A unique identifier for this field.
     */
    name: string;
    /**
     * Python code defining logic to execute when this field's value changes.
     */
    onChange?: string;
    /**
     * Whether a prefetch reducer will be used to populate the options for this field. Not applicable for the "slack_user" and "slack_user_list" types.
     */
    prefetch?: boolean;
    /**
     * Whether this field is a required input.
     */
    required?: boolean;
    /**
     * The type of data stored in this field. One of: "string", "str_list", "int", "int_list", "bool", "duration", "slack_user", "slack_user_list".
     */
    type: string;
    /**
     * Whether this field is rendered in the prompt modal.
     */
    visible?: boolean;
}

