// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Action extends pulumi.CustomResource {
    /**
     * Get an existing Action resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ActionState, opts?: pulumi.CustomResourceOptions): Action {
        return new Action(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'coralogix:index/action:Action';

    /**
     * Returns true if the given object is an instance of Action.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Action {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Action.__pulumiType;
    }

    /**
     * Applies the action for specific applications.
     */
    public readonly applications!: pulumi.Output<string[] | undefined>;
    /**
     * The user who created the action.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * Determines weather the action will be shown at the action menu.
     */
    public readonly isHidden!: pulumi.Output<boolean>;
    /**
     * Determines weather the action will be shared with the entire team. Can be set to false only by admin.
     */
    public readonly isPrivate!: pulumi.Output<boolean>;
    /**
     * Action name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * By selecting the data type, you can make sure that the action will be displayed only in the relevant context. Can be one
     * of ["Log" "DataMap"]
     */
    public readonly sourceType!: pulumi.Output<string>;
    /**
     * Applies the action for specific subsystems.
     */
    public readonly subsystems!: pulumi.Output<string[] | undefined>;
    /**
     * URL for the external tool.
     */
    public readonly url!: pulumi.Output<string>;

    /**
     * Create a Action resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ActionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ActionArgs | ActionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ActionState | undefined;
            resourceInputs["applications"] = state ? state.applications : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["isHidden"] = state ? state.isHidden : undefined;
            resourceInputs["isPrivate"] = state ? state.isPrivate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sourceType"] = state ? state.sourceType : undefined;
            resourceInputs["subsystems"] = state ? state.subsystems : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as ActionArgs | undefined;
            if ((!args || args.sourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceType'");
            }
            if ((!args || args.url === undefined) && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            resourceInputs["applications"] = args ? args.applications : undefined;
            resourceInputs["isHidden"] = args ? args.isHidden : undefined;
            resourceInputs["isPrivate"] = args ? args.isPrivate : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sourceType"] = args ? args.sourceType : undefined;
            resourceInputs["subsystems"] = args ? args.subsystems : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["createdBy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Action.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Action resources.
 */
export interface ActionState {
    /**
     * Applies the action for specific applications.
     */
    applications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The user who created the action.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Determines weather the action will be shown at the action menu.
     */
    isHidden?: pulumi.Input<boolean>;
    /**
     * Determines weather the action will be shared with the entire team. Can be set to false only by admin.
     */
    isPrivate?: pulumi.Input<boolean>;
    /**
     * Action name.
     */
    name?: pulumi.Input<string>;
    /**
     * By selecting the data type, you can make sure that the action will be displayed only in the relevant context. Can be one
     * of ["Log" "DataMap"]
     */
    sourceType?: pulumi.Input<string>;
    /**
     * Applies the action for specific subsystems.
     */
    subsystems?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * URL for the external tool.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Action resource.
 */
export interface ActionArgs {
    /**
     * Applies the action for specific applications.
     */
    applications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determines weather the action will be shown at the action menu.
     */
    isHidden?: pulumi.Input<boolean>;
    /**
     * Determines weather the action will be shared with the entire team. Can be set to false only by admin.
     */
    isPrivate?: pulumi.Input<boolean>;
    /**
     * Action name.
     */
    name?: pulumi.Input<string>;
    /**
     * By selecting the data type, you can make sure that the action will be displayed only in the relevant context. Can be one
     * of ["Log" "DataMap"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Applies the action for specific subsystems.
     */
    subsystems?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * URL for the external tool.
     */
    url: pulumi.Input<string>;
}
