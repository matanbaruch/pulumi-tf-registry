// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRulesGroup(args: GetRulesGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetRulesGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("coralogix:index/getRulesGroup:getRulesGroup", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRulesGroup.
 */
export interface GetRulesGroupArgs {
    id: string;
}

/**
 * A collection of values returned by getRulesGroup.
 */
export interface GetRulesGroupResult {
    readonly active: boolean;
    readonly applications: string[];
    readonly creator: string;
    readonly description: string;
    readonly hidden: boolean;
    readonly id: string;
    readonly name: string;
    readonly order: number;
    readonly ruleSubgroups: outputs.GetRulesGroupRuleSubgroup[];
    readonly severities: string[];
    readonly subsystems: string[];
}
export function getRulesGroupOutput(args: GetRulesGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRulesGroupResult> {
    return pulumi.output(args).apply((a: any) => getRulesGroup(a, opts))
}

/**
 * A collection of arguments for invoking getRulesGroup.
 */
export interface GetRulesGroupOutputArgs {
    id: pulumi.Input<string>;
}
