// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHostedDashboard(args: GetHostedDashboardArgs, opts?: pulumi.InvokeOptions): Promise<GetHostedDashboardResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("coralogix:index/getHostedDashboard:getHostedDashboard", {
        "id": args.id,
        "uid": args.uid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHostedDashboard.
 */
export interface GetHostedDashboardArgs {
    id?: string;
    uid: string;
}

/**
 * A collection of values returned by getHostedDashboard.
 */
export interface GetHostedDashboardResult {
    readonly grafanas: outputs.GetHostedDashboardGrafana[];
    readonly id: string;
    readonly uid: string;
}
export function getHostedDashboardOutput(args: GetHostedDashboardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHostedDashboardResult> {
    return pulumi.output(args).apply((a: any) => getHostedDashboard(a, opts))
}

/**
 * A collection of arguments for invoking getHostedDashboard.
 */
export interface GetHostedDashboardOutputArgs {
    id?: pulumi.Input<string>;
    uid: pulumi.Input<string>;
}
