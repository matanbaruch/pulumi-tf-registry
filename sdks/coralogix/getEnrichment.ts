// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEnrichment(args: GetEnrichmentArgs, opts?: pulumi.InvokeOptions): Promise<GetEnrichmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("coralogix:index/getEnrichment:getEnrichment", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEnrichment.
 */
export interface GetEnrichmentArgs {
    id: string;
}

/**
 * A collection of values returned by getEnrichment.
 */
export interface GetEnrichmentResult {
    readonly aws: outputs.GetEnrichmentAw[];
    readonly customs: outputs.GetEnrichmentCustom[];
    readonly geoIps: outputs.GetEnrichmentGeoIp[];
    readonly id: string;
    readonly suspiciousIps: outputs.GetEnrichmentSuspiciousIp[];
}
export function getEnrichmentOutput(args: GetEnrichmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnrichmentResult> {
    return pulumi.output(args).apply((a: any) => getEnrichment(a, opts))
}

/**
 * A collection of arguments for invoking getEnrichment.
 */
export interface GetEnrichmentOutputArgs {
    id: pulumi.Input<string>;
}
