// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSet(args: GetDataSetArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("coralogix:index/getDataSet:getDataSet", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSet.
 */
export interface GetDataSetArgs {
    id: string;
}

/**
 * A collection of values returned by getDataSet.
 */
export interface GetDataSetResult {
    readonly description: string;
    readonly fileContent: string;
    readonly id: string;
    readonly name: string;
    readonly uploadedFiles: outputs.GetDataSetUploadedFile[];
    readonly version: number;
}
export function getDataSetOutput(args: GetDataSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSetResult> {
    return pulumi.output(args).apply((a: any) => getDataSet(a, opts))
}

/**
 * A collection of arguments for invoking getDataSet.
 */
export interface GetDataSetOutputArgs {
    id: pulumi.Input<string>;
}
