// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAlertsScheduler(args: GetAlertsSchedulerArgs, opts?: pulumi.InvokeOptions): Promise<GetAlertsSchedulerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("coralogix:index/getAlertsScheduler:getAlertsScheduler", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAlertsScheduler.
 */
export interface GetAlertsSchedulerArgs {
    id: string;
}

/**
 * A collection of values returned by getAlertsScheduler.
 */
export interface GetAlertsSchedulerResult {
    readonly description: string;
    readonly enabled: boolean;
    readonly filter: outputs.GetAlertsSchedulerFilter;
    readonly id: string;
    readonly metaLabels: outputs.GetAlertsSchedulerMetaLabel[];
    readonly name: string;
    readonly schedule: outputs.GetAlertsSchedulerSchedule;
}
export function getAlertsSchedulerOutput(args: GetAlertsSchedulerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlertsSchedulerResult> {
    return pulumi.output(args).apply((a: any) => getAlertsScheduler(a, opts))
}

/**
 * A collection of arguments for invoking getAlertsScheduler.
 */
export interface GetAlertsSchedulerOutputArgs {
    id: pulumi.Input<string>;
}
