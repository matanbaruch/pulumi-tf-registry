{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "action.ts",
        "alert.ts",
        "alertsScheduler.ts",
        "apiKey.ts",
        "archiveLogs.ts",
        "archiveMetrics.ts",
        "archiveRetentions.ts",
        "config/index.ts",
        "config/vars.ts",
        "customRole.ts",
        "dashboard.ts",
        "dashboardsFolder.ts",
        "dataSet.ts",
        "enrichment.ts",
        "events2metric.ts",
        "getAction.ts",
        "getAlert.ts",
        "getAlertsScheduler.ts",
        "getApiKey.ts",
        "getArchiveLogs.ts",
        "getArchiveMetrics.ts",
        "getArchiveRetentions.ts",
        "getCustomRole.ts",
        "getDashboard.ts",
        "getDashboardsFolder.ts",
        "getDataSet.ts",
        "getEnrichment.ts",
        "getEvents2metric.ts",
        "getGroup.ts",
        "getHostedDashboard.ts",
        "getIntegration.ts",
        "getRecordingRulesGroupsSet.ts",
        "getRulesGroup.ts",
        "getScope.ts",
        "getSlo.ts",
        "getTcoPoliciesLogs.ts",
        "getTcoPoliciesTraces.ts",
        "getTeam.ts",
        "getUser.ts",
        "getWebhook.ts",
        "grafanaFolder.ts",
        "group.ts",
        "hostedDashboard.ts",
        "index.ts",
        "integration.ts",
        "provider.ts",
        "recordingRulesGroupsSet.ts",
        "rulesGroup.ts",
        "scope.ts",
        "slo.ts",
        "tcoPoliciesLogs.ts",
        "tcoPoliciesTraces.ts",
        "team.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "user.ts",
        "utilities.ts",
        "webhook.ts"
    ]
}
