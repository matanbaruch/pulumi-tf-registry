// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Dataprofile extends pulumi.CustomResource {
    /**
     * Get an existing Dataprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataprofileState, opts?: pulumi.CustomResourceOptions): Dataprofile {
        return new Dataprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prismacloud:index/dataprofile:Dataprofile';

    /**
     * Returns true if the given object is an instance of Dataprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Dataprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Dataprofile.__pulumiType;
    }

    /**
     * Created at (unix time)
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Created by
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * Model for DataProfile Rules
     */
    public readonly dataPatternsRule1!: pulumi.Output<outputs.DataprofileDataPatternsRule1>;
    /**
     * Profile description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Profile Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Profile ID
     */
    public /*out*/ readonly profileId!: pulumi.Output<string>;
    /**
     * Profile status (active or disabled)
     */
    public readonly profileStatus!: pulumi.Output<string | undefined>;
    /**
     * Profile Type (custom or system)
     */
    public readonly profileType!: pulumi.Output<string | undefined>;
    /**
     * Status (hidden or non_hidden)
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * Tenant ID
     */
    public /*out*/ readonly tenantId!: pulumi.Output<string>;
    /**
     * Type (basic or advance)
     */
    public readonly types!: pulumi.Output<string | undefined>;
    /**
     * Updated at (unix time)
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * Updated by
     */
    public /*out*/ readonly updatedBy!: pulumi.Output<string>;

    /**
     * Create a Dataprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataprofileArgs | DataprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataprofileState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["dataPatternsRule1"] = state ? state.dataPatternsRule1 : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["profileId"] = state ? state.profileId : undefined;
            resourceInputs["profileStatus"] = state ? state.profileStatus : undefined;
            resourceInputs["profileType"] = state ? state.profileType : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["types"] = state ? state.types : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
        } else {
            const args = argsOrState as DataprofileArgs | undefined;
            if ((!args || args.dataPatternsRule1 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataPatternsRule1'");
            }
            resourceInputs["dataPatternsRule1"] = args ? args.dataPatternsRule1 : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["profileStatus"] = args ? args.profileStatus : undefined;
            resourceInputs["profileType"] = args ? args.profileType : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["types"] = args ? args.types : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["profileId"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["updatedBy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Dataprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Dataprofile resources.
 */
export interface DataprofileState {
    /**
     * Created at (unix time)
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Created by
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Model for DataProfile Rules
     */
    dataPatternsRule1?: pulumi.Input<inputs.DataprofileDataPatternsRule1>;
    /**
     * Profile description
     */
    description?: pulumi.Input<string>;
    /**
     * Profile Name
     */
    name?: pulumi.Input<string>;
    /**
     * Profile ID
     */
    profileId?: pulumi.Input<string>;
    /**
     * Profile status (active or disabled)
     */
    profileStatus?: pulumi.Input<string>;
    /**
     * Profile Type (custom or system)
     */
    profileType?: pulumi.Input<string>;
    /**
     * Status (hidden or non_hidden)
     */
    status?: pulumi.Input<string>;
    /**
     * Tenant ID
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Type (basic or advance)
     */
    types?: pulumi.Input<string>;
    /**
     * Updated at (unix time)
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * Updated by
     */
    updatedBy?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Dataprofile resource.
 */
export interface DataprofileArgs {
    /**
     * Model for DataProfile Rules
     */
    dataPatternsRule1: pulumi.Input<inputs.DataprofileDataPatternsRule1>;
    /**
     * Profile description
     */
    description?: pulumi.Input<string>;
    /**
     * Profile Name
     */
    name?: pulumi.Input<string>;
    /**
     * Profile status (active or disabled)
     */
    profileStatus?: pulumi.Input<string>;
    /**
     * Profile Type (custom or system)
     */
    profileType?: pulumi.Input<string>;
    /**
     * Status (hidden or non_hidden)
     */
    status?: pulumi.Input<string>;
    /**
     * Type (basic or advance)
     */
    types?: pulumi.Input<string>;
}
