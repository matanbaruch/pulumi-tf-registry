// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAnomalySetting(args: GetAnomalySettingArgs, opts?: pulumi.InvokeOptions): Promise<GetAnomalySettingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prismacloud:index/getAnomalySetting:getAnomalySetting", {
        "id": args.id,
        "policyId": args.policyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAnomalySetting.
 */
export interface GetAnomalySettingArgs {
    id?: string;
    policyId: string;
}

/**
 * A collection of values returned by getAnomalySetting.
 */
export interface GetAnomalySettingResult {
    readonly alertDisposition: string;
    readonly alertDispositionDescriptions: outputs.GetAnomalySettingAlertDispositionDescription[];
    readonly id: string;
    readonly policyDescription: string;
    readonly policyId: string;
    readonly policyName: string;
    readonly trainingModelDescriptions: outputs.GetAnomalySettingTrainingModelDescription[];
    readonly trainingModelThreshold: string;
}
export function getAnomalySettingOutput(args: GetAnomalySettingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAnomalySettingResult> {
    return pulumi.output(args).apply((a: any) => getAnomalySetting(a, opts))
}

/**
 * A collection of arguments for invoking getAnomalySetting.
 */
export interface GetAnomalySettingOutputArgs {
    id?: pulumi.Input<string>;
    policyId: pulumi.Input<string>;
}
