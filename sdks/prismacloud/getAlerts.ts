// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAlerts(args?: GetAlertsArgs, opts?: pulumi.InvokeOptions): Promise<GetAlertsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prismacloud:index/getAlerts:getAlerts", {
        "filters": args.filters,
        "id": args.id,
        "limit": args.limit,
        "sortBies": args.sortBies,
        "timeRange": args.timeRange,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAlerts.
 */
export interface GetAlertsArgs {
    filters?: inputs.GetAlertsFilter[];
    id?: string;
    limit?: number;
    sortBies?: string[];
    timeRange?: inputs.GetAlertsTimeRange;
}

/**
 * A collection of values returned by getAlerts.
 */
export interface GetAlertsResult {
    readonly filters?: outputs.GetAlertsFilter[];
    readonly id: string;
    readonly limit?: number;
    readonly listings: outputs.GetAlertsListing[];
    readonly pageToken: string;
    readonly sortBies?: string[];
    readonly timeRange?: outputs.GetAlertsTimeRange;
    readonly total: number;
}
export function getAlertsOutput(args?: GetAlertsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlertsResult> {
    return pulumi.output(args).apply((a: any) => getAlerts(a, opts))
}

/**
 * A collection of arguments for invoking getAlerts.
 */
export interface GetAlertsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetAlertsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    limit?: pulumi.Input<number>;
    sortBies?: pulumi.Input<pulumi.Input<string>[]>;
    timeRange?: pulumi.Input<inputs.GetAlertsTimeRangeArgs>;
}
