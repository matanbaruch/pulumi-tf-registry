// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNotificationTemplate(args: GetNotificationTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetNotificationTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prismacloud:index/getNotificationTemplate:getNotificationTemplate", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNotificationTemplate.
 */
export interface GetNotificationTemplateArgs {
    id: string;
}

/**
 * A collection of values returned by getNotificationTemplate.
 */
export interface GetNotificationTemplateResult {
    readonly createdBy: string;
    readonly createdTs: number;
    readonly customerId: number;
    readonly enabled: boolean;
    readonly id: string;
    readonly integrationId: string;
    readonly integrationName: string;
    readonly integrationType: string;
    readonly lastModifiedBy: string;
    readonly lastModifiedTs: number;
    readonly module: string;
    readonly name: string;
    readonly templateConfigs: outputs.GetNotificationTemplateTemplateConfig[];
    readonly templateType: string;
}
export function getNotificationTemplateOutput(args: GetNotificationTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNotificationTemplateResult> {
    return pulumi.output(args).apply((a: any) => getNotificationTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getNotificationTemplate.
 */
export interface GetNotificationTemplateOutputArgs {
    id: pulumi.Input<string>;
}
