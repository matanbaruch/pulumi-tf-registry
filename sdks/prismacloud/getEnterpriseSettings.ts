// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEnterpriseSettings(args?: GetEnterpriseSettingsArgs, opts?: pulumi.InvokeOptions): Promise<GetEnterpriseSettingsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prismacloud:index/getEnterpriseSettings:getEnterpriseSettings", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEnterpriseSettings.
 */
export interface GetEnterpriseSettingsArgs {
    id?: string;
}

/**
 * A collection of values returned by getEnterpriseSettings.
 */
export interface GetEnterpriseSettingsResult {
    readonly accessKeyMaxValidity: number;
    readonly alarmEnabled: boolean;
    readonly applyDefaultPoliciesEnabled: boolean;
    readonly auditLogSiemIntgrIds: string[];
    readonly auditLogsEnabled: boolean;
    readonly defaultPoliciesEnabled: {[key: string]: boolean};
    readonly id: string;
    readonly namedUsersAccessKeysExpiryNotificationsEnabled: boolean;
    readonly notificationThresholdAccessKeysExpiry: number;
    readonly requireAlertDismissalNote: boolean;
    readonly serviceUsersAccessKeysExpiryNotificationsEnabled: boolean;
    readonly sessionTimeout: number;
    readonly userAttributionInNotification: boolean;
}
export function getEnterpriseSettingsOutput(args?: GetEnterpriseSettingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnterpriseSettingsResult> {
    return pulumi.output(args).apply((a: any) => getEnterpriseSettings(a, opts))
}

/**
 * A collection of arguments for invoking getEnterpriseSettings.
 */
export interface GetEnterpriseSettingsOutputArgs {
    id?: pulumi.Input<string>;
}
