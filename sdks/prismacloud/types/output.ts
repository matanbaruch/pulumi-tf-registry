// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AlertRuleNotificationConfig {
    /**
     * Alert rule notification config ID
     */
    configId: string;
    /**
     * Config type
     */
    configType?: string;
    /**
     * Day of month
     */
    dayOfMonth: number;
    /**
     * Days of week
     */
    daysOfWeeks: outputs.AlertRuleNotificationConfigDaysOfWeek[];
    /**
     * Provide CSV detailed report
     */
    detailedReport?: boolean;
    /**
     * Scan enabled
     */
    enabled?: boolean;
    /**
     * Frequency
     */
    frequency?: string;
    /**
     * Frequency from R rule
     */
    frequencyFromRRule: string;
    /**
     * Hour of day
     */
    hourOfDay: number;
    /**
     * Include remediation in detailed report
     */
    includeRemediation?: boolean;
    /**
     * Time of last notification in milliseconds
     */
    lastSentTs: number;
    /**
     * Last updated
     */
    lastUpdated: number;
    /**
     * R rule schedule
     */
    rRuleSchedule?: string;
    /**
     * List of unique email addresses to notify
     */
    recipients?: string[];
    /**
     * Template ID
     */
    templateId?: string;
    /**
     * Timezone ID
     */
    timezoneId: string;
    /**
     * Compress detailed report
     */
    withCompression?: boolean;
}

export interface AlertRuleNotificationConfigDaysOfWeek {
    day: string;
    offset: number;
}

export interface AlertRuleTarget {
    /**
     * List of account groups
     */
    accountGroups?: string[];
    /**
     * Model for Alert Rule Policy Filter
     */
    alertRulePolicyFilters?: outputs.AlertRuleTargetAlertRulePolicyFilter[];
    /**
     * List of excluded accounts
     */
    excludedAccounts?: string[];
    /**
     * List of regions
     */
    regions?: string[];
    /**
     * Model for holding the lists resource list ids by resource list type
     */
    resourceLists?: outputs.AlertRuleTargetResourceList[];
    /**
     * List of TargetTag objects
     */
    tags?: outputs.AlertRuleTargetTag[];
}

export interface AlertRuleTargetAlertRulePolicyFilter {
    /**
     * Cloud Type Filter
     */
    cloudTypes?: string[];
    /**
     * Compliance Standard Filter
     */
    policyComplianceStandards?: string[];
    /**
     * Policy Label Filter
     */
    policyLabels?: string[];
    /**
     * Cloud Type Filter
     */
    policySeverities?: string[];
}

export interface AlertRuleTargetResourceList {
    /**
     * List of compute access group ids
     */
    computeAccessGroupIds?: string[];
}

export interface AlertRuleTargetTag {
    /**
     * Resource tag target
     */
    key: string;
    /**
     * List of values for resource tag key
     */
    values: string[];
}

export interface AnomalySettingsAlertDispositionDescription {
    aggressive: string;
    conservative: string;
    moderate: string;
}

export interface AnomalySettingsTrainingModelDescription {
    high: string;
    low: string;
    medium: string;
}

export interface AnomalyTrustedListTrustedListEntry {
    /**
     * Domain
     */
    domain: string;
    /**
     * Image ID
     */
    imageId: string;
    /**
     * Ip CIDR
     */
    ipCidr: string;
    /**
     * Port
     */
    port: string;
    /**
     * Protocol
     */
    protocol: string;
    /**
     * Resource ID
     */
    resourceId: string;
    /**
     * Service
     */
    service: string;
    /**
     * Subject
     */
    subject: string;
    /**
     * Tag key
     */
    tagKey: string;
    /**
     * Tag value
     */
    tagValue: string;
}

export interface CloudAccountAlibabaCloud {
    /**
     * Alibaba account ID
     */
    accountId: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: string[];
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * Unique identifier for an Alibaba RAM role resource
     */
    ramArn: string;
}

export interface CloudAccountAws {
    /**
     * AWS account ID
     */
    accountId: string;
    /**
     * Account type - organization or account
     */
    accountType?: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * AWS account external ID
     */
    externalId: string;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: string[];
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * Monitor or Monitor and Protect
     */
    protectionMode?: string;
    /**
     * Unique identifier for an AWS resource (ARN)
     */
    roleArn: string;
}

export interface CloudAccountAzure {
    /**
     * Azure account ID
     */
    accountId: string;
    /**
     * Account type - organization or account
     */
    accountType?: string;
    /**
     * Application ID registered with Active Directory
     */
    clientId: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: string[];
    /**
     * Application ID key
     */
    key: string;
    /**
     * Automatically ingest flow logs
     */
    monitorFlowLogs?: boolean;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * Monitor or Monitor and Protect
     */
    protectionMode?: string;
    /**
     * Unique ID of the service principal object associated with the Prisma Cloud application that you create
     */
    servicePrincipalId: string;
    /**
     * Active Directory ID associated with Azure
     */
    tenantId: string;
}

export interface CloudAccountGcp {
    /**
     * GCP project ID
     */
    accountId: string;
    /**
     * Account type - organization or account
     */
    accountType?: string;
    /**
     * Enable flow log compression
     */
    compressionEnabled?: boolean;
    /**
     * Content of the JSON credentials file
     */
    credentialsJson: string;
    /**
     * GCP project for flow log compression
     */
    dataflowEnabledProject?: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * GCP flow logs storage bucket
     */
    flowLogStorageBucket?: string;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: string[];
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * Monitor or Monitor and Protect
     */
    protectionMode?: string;
}

export interface CloudAccountTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface CloudAccountV2AlibabaCloud {
    /**
     * Alibaba account ID
     */
    accountId: string;
    /**
     * Account type -  account
     */
    accountType: string;
    /**
     * Added on time stamp
     */
    addedOn: number;
    /**
     * Cloud type
     */
    cloudType: string;
    /**
     * Deployment type
     */
    deploymentType?: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: string[];
    /**
     * Ingestion endtime
     */
    ingestionEndtime: number;
    /**
     * Last full snapshot
     */
    lastFullSnapshot: number;
    /**
     * Last modified by
     */
    lastModifiedBy: string;
    /**
     * Last modified time stamp
     */
    lastModifiedTs: number;
    /**
     * Last updated time stamp
     */
    lastUpdated: number;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * Protection mode
     */
    protectionMode: string;
    /**
     * Unique identifier for an Alibaba RAM role resource
     */
    ramArn: string;
    /**
     * Whether or not the storage scan is enabled
     */
    storageScanEnabled: boolean;
}

export interface CloudAccountV2Aws {
    /**
     * AWS account ID
     */
    accountId: string;
    /**
     * Account type - organization or account
     */
    accountType?: string;
    /**
     * Account type id
     */
    accountTypeId: number;
    /**
     * Cloud type
     */
    cloudType: string;
    /**
     * Created epoch millis
     */
    createdEpochMillis: number;
    /**
     * Customer name
     */
    customerName: string;
    /**
     * Deleted
     */
    deleted: boolean;
    /**
     * Deployment type
     */
    deploymentType: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * EventbridgeRuleNamePrefix
     */
    eventbridgeRuleNamePrefix: string;
    externalId: string;
    /**
     * Features applicable for aws account
     */
    features?: outputs.CloudAccountV2AwsFeature[];
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: string[];
    /**
     * Member role
     */
    hasMemberRole: boolean;
    /**
     * External id
     */
    lastModifiedBy: string;
    /**
     * Last modified epoch millis
     */
    lastModifiedEpochMillis: number;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * Parent id
     */
    parentId: string;
    /**
     * Protection mode
     */
    protectionMode: string;
    /**
     * Unique identifier for an AWS resource (ARN)
     */
    roleArn: string;
    /**
     * Storage scan config
     */
    storageScanConfigs?: outputs.CloudAccountV2AwsStorageScanConfig[];
    /**
     * Storage UUID
     */
    storageUuid?: string;
    /**
     * Template url
     */
    templateUrl: string;
}

export interface CloudAccountV2AwsFeature {
    /**
     * Feature name
     */
    name: string;
    /**
     * Feature state, one of enabled and disabled
     */
    state: string;
}

export interface CloudAccountV2AwsStorageScanConfig {
    /**
     * Buckets
     */
    buckets: outputs.CloudAccountV2AwsStorageScanConfigBucket[];
    /**
     * Scan option
     */
    scanOption: string;
    /**
     * Scan topic arn
     */
    snsTopicArn: string;
}

export interface CloudAccountV2AwsStorageScanConfigBucket {
    /**
     * Backward
     */
    backwards?: string[];
    /**
     * Forward
     */
    forwards?: string[];
}

export interface CloudAccountV2Azure {
    /**
     * Azure account ID
     */
    accountId: string;
    /**
     * Account type - tenant or account
     */
    accountType?: string;
    /**
     * Application ID registered with Active Directory
     */
    clientId: string;
    /**
     * Cloud type
     */
    cloudType: string;
    /**
     * Created epoch millis
     */
    createdEpochMillis: number;
    /**
     * Customer name
     */
    customerName: string;
    /**
     * Deleted
     */
    deleted: boolean;
    /**
     * Deployment type
     */
    deploymentType: string;
    /**
     * Deployment type description. Valid values : Commercial or Government
     */
    deploymentTypeDescription: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * Environment type
     */
    environmentType?: string;
    /**
     * Features applicable for azure account
     */
    features?: outputs.CloudAccountV2AzureFeature[];
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: string[];
    /**
     * Application ID key
     */
    key: string;
    /**
     * Last modified by
     */
    lastModifiedBy: string;
    /**
     * Last modified epoch millis
     */
    lastModifiedEpochMillis: number;
    /**
     * Automatically ingest flow logs
     */
    monitorFlowLogs?: boolean;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * Parent id
     */
    parentId: string;
    /**
     * Protection mode
     */
    protectionMode: string;
    /**
     * Unique ID of the service principle object associated with the Prisma Cloud application that you create
     */
    servicePrincipalId: string;
    /**
     * Template url
     */
    templateUrl: string;
    /**
     * Active Directory ID associated with Azure
     */
    tenantId: string;
}

export interface CloudAccountV2AzureFeature {
    /**
     * Feature name
     */
    name: string;
    /**
     * Feature state, one of enabled and disabled
     */
    state: string;
}

export interface CloudAccountV2Gcp {
    /**
     * Cloud account group creation mode. Valid values - MANUAL, AUTO or RECURSIVE
     */
    accountGroupCreationMode: string;
    /**
     * GCP project ID
     */
    accountId: string;
    /**
     * Account type - account, masterServiceAccount or organization
     */
    accountType: string;
    /**
     * Added on time stamp
     */
    addedOnTs: number;
    /**
     * Authentication type
     */
    authenticationType: string;
    /**
     * Cloud type
     */
    cloudType: string;
    /**
     * Enable or disable compressed network flow log generation. Default value: `false`
     */
    compressionEnabled?: boolean;
    /**
     * Account created epoch time
     */
    createdEpochMillis: number;
    /**
     * Content of the JSON credentials file
     */
    credentials: string;
    /**
     * Prisma customer name
     */
    customerName: string;
    /**
     * Project ID where the Dataflow API is enabled. Required if `compressionEnabled` is set to `true` and if the `accountType` is `organization`. Optional if the `accountType` is `account` or `masterServiceAccount`
     */
    dataflowEnabledProject?: string;
    /**
     * Account group id to which you are assigning this account
     */
    defaultAccountGroupId: string;
    /**
     * Whether the account is deleted or not
     */
    deleted: boolean;
    /**
     * Deployment type
     */
    deploymentType: string;
    /**
     * Deployment type description
     */
    deploymentTypeDescription: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * Features applicable for gcp account
     */
    features?: outputs.CloudAccountV2GcpFeature[];
    /**
     * Cloud Storage Bucket name that is used store the flow logs
     */
    flowLogStorageBucket?: string;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: string[];
    /**
     * Last modified by
     */
    lastModifiedBy: string;
    /**
     * Last modified at epoch millis
     */
    lastModifiedEpochMillis: number;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * Parent Id
     */
    parentId: string;
    /**
     * GCP project ID
     */
    projectId: string;
    /**
     * Protection mode
     */
    protectionMode: string;
    /**
     * Service account email
     */
    serviceAccountEmail: string;
    /**
     * Storage scan enabled
     */
    storageScanEnabled: boolean;
}

export interface CloudAccountV2GcpFeature {
    /**
     * Feature name
     */
    name: string;
    /**
     * Feature state, one of enabled and disabled
     */
    state: string;
}

export interface CloudAccountV2Ibm {
    /**
     * IBM account ID
     */
    accountId: string;
    /**
     * Account type -  account
     */
    accountType?: string;
    /**
     * Added on time stamp
     */
    addedOnTs: number;
    /**
     * IBM service API key
     */
    apiKey: string;
    /**
     * Cloud type
     */
    cloudType: string;
    /**
     * Created epoch millis
     */
    createdEpochMillis: number;
    /**
     * Customer name
     */
    customerName: string;
    /**
     * Deleted
     */
    deleted: boolean;
    /**
     * Deployment type
     */
    deploymentType: string;
    /**
     * Deployment type description. Valid values : Commercial or Government
     */
    deploymentTypeDescription: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * IBM account features
     */
    features: outputs.CloudAccountV2IbmFeature[];
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: string[];
    /**
     * Last modified by
     */
    lastModifiedBy: string;
    /**
     * Last modified epoch millis
     */
    lastModifiedEpochMillis: number;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * Parent Id
     */
    parentId: string;
    /**
     * Protection mode
     */
    protectionMode: string;
    /**
     * Whether or not the storage scan is enabled
     */
    storageScanEnabled: boolean;
    /**
     * IBM service ID
     */
    svcIdIamId: string;
}

export interface CloudAccountV2IbmFeature {
    name: string;
    state: string;
}

export interface CloudAccountV2Timeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface CollectionAssetGroup {
    /**
     * List of account group ids
     */
    accountGroupIds?: string[];
    /**
     * List of account group ids
     */
    accountIds?: string[];
    /**
     * List of account group ids
     */
    repositoryIds?: string[];
}

export interface DatapatternRegex {
    /**
     * Regex
     */
    regex: string;
    /**
     * Weight
     */
    weight?: number;
}

export interface DataprofileDataPatternsRule1 {
    /**
     * List of DataPattern Rules
     */
    dataPatternRules: outputs.DataprofileDataPatternsRule1DataPatternRule[];
    /**
     * Pattern operator type
     */
    operatorType?: string;
}

export interface DataprofileDataPatternsRule1DataPatternRule {
    /**
     * Confidence level
     */
    confidenceLevel: string;
    /**
     * Detection technique
     */
    detectionTechnique: string;
    /**
     * Match type
     */
    matchType: string;
    /**
     * Pattern name
     */
    name: string;
    /**
     * Occurrence count
     */
    occurrenceCount?: number;
    /**
     * High Occurrence value
     */
    occurrenceHigh?: number;
    /**
     * Low Occurrence value
     */
    occurrenceLow?: number;
    /**
     * Occurrence operator type
     */
    occurrenceOperatorType: string;
    /**
     * Pattern ID
     */
    patternId: string;
    /**
     * List of supported confidence levels
     */
    supportedConfidenceLevels: string[];
}

export interface GetAccountGroupsListing {
    accounts: outputs.GetAccountGroupsListingAccount[];
    alertRules: outputs.GetAccountGroupsListingAlertRule[];
    groupId: string;
    name: string;
    parentInfos: outputs.GetAccountGroupsListingParentInfo[];
}

export interface GetAccountGroupsListingAccount {
    accountId: string;
    accountType: string;
    name: string;
}

export interface GetAccountGroupsListingAlertRule {
    alertId: string;
    name: string;
}

export interface GetAccountGroupsListingParentInfo {
    autoCreated: boolean;
    groupId: string;
    name: string;
}

export interface GetAlertRuleNotificationConfig {
    configId: string;
    configType: string;
    dayOfMonth: number;
    daysOfWeeks: outputs.GetAlertRuleNotificationConfigDaysOfWeek[];
    detailedReport: boolean;
    enabled: boolean;
    frequency: string;
    frequencyFromRRule: string;
    hourOfDay: number;
    includeRemediation: boolean;
    lastSentTs: number;
    lastUpdated: number;
    rRuleSchedule: string;
    recipients: string[];
    templateId: string;
    timezoneId: string;
    withCompression: boolean;
}

export interface GetAlertRuleNotificationConfigDaysOfWeek {
    day: string;
    offset: number;
}

export interface GetAlertRuleTarget {
    accountGroups: string[];
    alertRulePolicyFilters: outputs.GetAlertRuleTargetAlertRulePolicyFilter[];
    excludedAccounts: string[];
    regions: string[];
    resourceLists: outputs.GetAlertRuleTargetResourceList[];
    tags: outputs.GetAlertRuleTargetTag[];
}

export interface GetAlertRuleTargetAlertRulePolicyFilter {
    cloudTypes: string[];
    policyComplianceStandards: string[];
    policyLabels: string[];
    policySeverities: string[];
}

export interface GetAlertRuleTargetResourceList {
    computeAccessGroupIds: string[];
}

export interface GetAlertRuleTargetTag {
    key: string;
    values: string[];
}

export interface GetAlertRulesListing {
    deleted: boolean;
    description: string;
    enabled: boolean;
    name: string;
    openAlertsCount: number;
    owner: string;
    policies: string[];
    policyScanConfigId: string;
    readOnly: boolean;
    scanAll: boolean;
}

export interface GetAlertsFilter {
    /**
     * Param name to filter on
     */
    name: string;
    /**
     * Operator between the name and value params
     */
    operator?: string;
    /**
     * Param value for the filter
     */
    value: string;
}

export interface GetAlertsListing {
    alertCount: number;
    alertId: string;
    alertTime: number;
    eventOccurred: number;
    firstSeen: number;
    lastSeen: number;
    status: string;
    triggeredBy: string;
}

export interface GetAlertsTimeRange {
    /**
     * An absolute time range
     */
    absolutes?: outputs.GetAlertsTimeRangeAbsolute[];
    /**
     * Relative time range
     */
    relatives?: outputs.GetAlertsTimeRangeRelative[];
    /**
     * From some time in the past to now
     */
    toNows?: outputs.GetAlertsTimeRangeToNow[];
}

export interface GetAlertsTimeRangeAbsolute {
    /**
     * End time
     */
    end: number;
    /**
     * Start time
     */
    start: number;
}

export interface GetAlertsTimeRangeRelative {
    /**
     * The time number
     */
    amount: number;
    /**
     * The time unit
     */
    unit: string;
}

export interface GetAlertsTimeRangeToNow {
    /**
     * The time unit
     */
    unit: string;
}

export interface GetAnomalySettingAlertDispositionDescription {
    aggressive: string;
    conservative: string;
    moderate: string;
}

export interface GetAnomalySettingTrainingModelDescription {
    high: string;
    low: string;
    medium: string;
}

export interface GetAnomalySettingsListing {
    alertDisposition: string;
    alertDispositionDescriptions: outputs.GetAnomalySettingsListingAlertDispositionDescription[];
    policyDescription: string;
    policyId: string;
    policyName: string;
    trainingModelDescriptions: outputs.GetAnomalySettingsListingTrainingModelDescription[];
    trainingModelThreshold: string;
}

export interface GetAnomalySettingsListingAlertDispositionDescription {
    aggressive: string;
    conservative: string;
    moderate: string;
}

export interface GetAnomalySettingsListingTrainingModelDescription {
    high: string;
    low: string;
    medium: string;
}

export interface GetAnomalyTrustedListTrustedListEntry {
    domain: string;
    imageId: string;
    ipCidr: string;
    port: string;
    protocol: string;
    resourceId: string;
    service: string;
    subject: string;
    tagKey: string;
    tagValue: string;
}

export interface GetAnomalyTrustedListsListing {
    accountId: string;
    applicablePolicies: string[];
    atlId: number;
    createdBy: string;
    createdOn: number;
    description: string;
    name: string;
    trustedListEntries: outputs.GetAnomalyTrustedListsListingTrustedListEntry[];
    trustedListType: string;
    vpc: string;
}

export interface GetAnomalyTrustedListsListingTrustedListEntry {
    domain: string;
    imageId: string;
    ipCidr: string;
    port: string;
    protocol: string;
    resourceId: string;
    service: string;
    subject: string;
    tagKey: string;
    tagValue: string;
}

export interface GetCloudAccountAlibabaCloud {
    accountId: string;
    enabled: boolean;
    groupIds: string[];
    name: string;
    ramArn: string;
}

export interface GetCloudAccountAw {
    accountId: string;
    accountType: string;
    enabled: boolean;
    externalId: string;
    groupIds: string[];
    name: string;
    protectionMode: string;
    roleArn: string;
}

export interface GetCloudAccountAzure {
    accountId: string;
    accountType: string;
    clientId: string;
    enabled: boolean;
    groupIds: string[];
    key: string;
    monitorFlowLogs: boolean;
    name: string;
    protectionMode: string;
    servicePrincipalId: string;
    tenantId: string;
}

export interface GetCloudAccountGcp {
    accountId: string;
    accountType: string;
    compressionEnabled: boolean;
    credentialsJson: string;
    dataflowEnabledProject: string;
    enabled: boolean;
    flowLogStorageBucket: string;
    groupIds: string[];
    name: string;
    protectionMode: string;
}

export interface GetCloudAccountV2AlibabaCloud {
    accountId: string;
    accountType: string;
    addedOn: number;
    cloudType: string;
    deploymentType: string;
    enabled: boolean;
    groupIds: string[];
    ingestionEndtime: number;
    lastFullSnapshot: number;
    lastModifiedBy: string;
    lastModifiedTs: number;
    lastUpdated: number;
    name: string;
    protectionMode: string;
    ramArn: string;
    storageScanEnabled: boolean;
}

export interface GetCloudAccountV2Aw {
    accountId: string;
    accountType: string;
    cloudType: string;
    createdEpochMillis: number;
    customerName: string;
    deleted: boolean;
    deploymentType: string;
    enabled: boolean;
    eventbridgeRuleNamePrefix: string;
    externalId: string;
    features: outputs.GetCloudAccountV2AwFeature[];
    groupIds: string[];
    hasMemberRole: boolean;
    lastModifiedBy: string;
    lastModifiedEpochMillis: number;
    name: string;
    parentId: string;
    protectionMode: string;
    roleArn: string;
    storageScanConfigs: outputs.GetCloudAccountV2AwStorageScanConfig[];
    storageUuid: string;
    templateUrl: string;
}

export interface GetCloudAccountV2AwFeature {
    name: string;
    state: string;
}

export interface GetCloudAccountV2AwStorageScanConfig {
    buckets: outputs.GetCloudAccountV2AwStorageScanConfigBucket[];
    scanOption: string;
    snsTopicArn: string;
}

export interface GetCloudAccountV2AwStorageScanConfigBucket {
    backwards: string[];
    forwards: string[];
}

export interface GetCloudAccountV2Azure {
    accountId: string;
    accountType: string;
    clientId: string;
    cloudType: string;
    createdEpochMillis: number;
    customerName: string;
    deleted: boolean;
    deploymentType: string;
    deploymentTypeDescription: string;
    enabled: boolean;
    environmentType: string;
    features: outputs.GetCloudAccountV2AzureFeature[];
    groupIds: string[];
    key: string;
    lastModifiedBy: string;
    lastModifiedEpochMillis: number;
    monitorFlowLogs: boolean;
    name: string;
    parentId: string;
    protectionMode: string;
    servicePrincipalId: string;
    templateUrl: string;
    tenantId: string;
}

export interface GetCloudAccountV2AzureFeature {
    name: string;
    state: string;
}

export interface GetCloudAccountV2Gcp {
    accountGroupCreationMode: string;
    accountId: string;
    accountType: string;
    addedOnTs: number;
    authenticationType: string;
    cloudType: string;
    compressionEnabled: boolean;
    createdEpochMillis: number;
    credentials: string;
    customerName: string;
    dataflowEnabledProject: string;
    defaultAccountGroupId: string;
    deleted: boolean;
    deploymentType: string;
    deploymentTypeDescription: string;
    enabled: boolean;
    features: outputs.GetCloudAccountV2GcpFeature[];
    flowLogStorageBucket: string;
    groupIds: string[];
    lastModifiedBy: string;
    lastModifiedEpochMillis: number;
    name: string;
    parentId: string;
    projectId: string;
    protectionMode: string;
    serviceAccountEmail: string;
    storageScanEnabled: boolean;
}

export interface GetCloudAccountV2GcpFeature {
    name: string;
    state: string;
}

export interface GetCloudAccountV2Ibm {
    accountId: string;
    accountType: string;
    addedOnTs: number;
    apiKey: string;
    cloudType: string;
    createdEpochMillis: number;
    customerName: string;
    deleted: boolean;
    deploymentType: string;
    deploymentTypeDescription: string;
    enabled: boolean;
    features: outputs.GetCloudAccountV2IbmFeature[];
    groupIds: string[];
    lastModifiedBy: string;
    lastModifiedEpochMillis: number;
    name: string;
    parentId: string;
    protectionMode: string;
    storageScanEnabled: boolean;
    svcIdIamId: string;
}

export interface GetCloudAccountV2IbmFeature {
    name: string;
    state: string;
}

export interface GetCloudAccountsListing {
    accountId: string;
    cloudType: string;
    name: string;
}

export interface GetCollectionAssetGroup {
    accountGroupIds: string[];
    accountIds: string[];
    repositoryIds: string[];
}

export interface GetCollectionsListing {
    createdBy: string;
    createdTs: number;
    description: string;
    id: string;
    lastModifiedBy: string;
    lastModifiedTs: number;
    name: string;
}

export interface GetComplianceStandardRequirementSectionsListing {
    associatedPolicyIds: string[];
    createdBy: string;
    createdOn: number;
    csrsId: string;
    description: string;
    label: string;
    lastModifiedBy: string;
    lastModifiedOn: number;
    policiesAssignedCount: number;
    requirementName: string;
    sectionId: string;
    standardName: string;
    systemDefault: boolean;
    viewOrder: number;
}

export interface GetComplianceStandardRequirementsListing {
    createdBy: string;
    createdOn: number;
    csrId: string;
    description: string;
    lastModifiedBy: string;
    lastModifiedOn: number;
    name: string;
    policiesAssignedCount: number;
    requirementId: string;
    standardName: string;
    systemDefault: boolean;
    viewOrder: number;
}

export interface GetComplianceStandardsListing {
    cloudTypes: string[];
    createdBy: string;
    createdOn: number;
    csId: string;
    description: string;
    lastModifiedBy: string;
    lastModifiedOn: number;
    name: string;
    policiesAssignedCount: number;
    systemDefault: boolean;
}

export interface GetDatapatternRegex {
    regex: string;
    weight: number;
}

export interface GetDatapatternsListing {
    createdBy: string;
    detectionTechnique: string;
    isEditable: boolean;
    mode: string;
    name: string;
    patternId: string;
    updatedAt: number;
    updatedBy: string;
}

export interface GetDataprofileDataPatternsRule1 {
    dataPatternRules: outputs.GetDataprofileDataPatternsRule1DataPatternRule[];
    operatorType: string;
}

export interface GetDataprofileDataPatternsRule1DataPatternRule {
    confidenceLevel: string;
    detectionTechnique: string;
    matchType: string;
    name: string;
    occurrenceCount: number;
    occurrenceHigh: number;
    occurrenceLow: number;
    occurrenceOperatorType: string;
    patternId: string;
    supportedConfidenceLevels: string[];
}

export interface GetDataprofilesListing {
    createdBy: string;
    name: string;
    profileId: string;
    profileStatus: string;
    type: string;
    updatedAt: number;
    updatedBy: string;
}

export interface GetIntegrationIntegrationConfig {
    accessKey: string;
    accountId: string;
    apiKey: string;
    apiToken: string;
    authToken: string;
    baseUrl: string;
    connectionString: string;
    domain: string;
    externalId: string;
    headers: outputs.GetIntegrationIntegrationConfigHeader[];
    hostUrl: string;
    integrationKey: string;
    login: string;
    moreInfo: boolean;
    orgId: string;
    passPhrase: string;
    password: string;
    pipeName: string;
    privateKey: string;
    queueUrl: string;
    region: string;
    regions: outputs.GetIntegrationIntegrationConfigRegion[];
    roleArn: string;
    rollUpInterval: number;
    s3Uri: string;
    secretKey: string;
    sourceId: string;
    sourceType: string;
    stagingIntegrationId: string;
    tables: {[key: string]: boolean};
    url: string;
    userName: string;
    version: string;
    webhookUrl: string;
}

export interface GetIntegrationIntegrationConfigHeader {
    key: string;
    readOnly: boolean;
    secure: boolean;
    value: string;
}

export interface GetIntegrationIntegrationConfigRegion {
    apiIdentifier: string;
    cloudType: string;
    name: string;
}

export interface GetIntegrationReason {
    details: outputs.GetIntegrationReasonDetail[];
    errorType: string;
    lastUpdated: number;
    message: string;
}

export interface GetIntegrationReasonDetail {
    message: string;
    statusCode: number;
    subject: string;
}

export interface GetIntegrationsListing {
    description: string;
    enabled: boolean;
    integrationId: string;
    integrationType: string;
    name: string;
    status: string;
    valid: boolean;
}

export interface GetNotificationTemplateTemplateConfig {
    basicConfigs: outputs.GetNotificationTemplateTemplateConfigBasicConfig[];
    dismisseds: outputs.GetNotificationTemplateTemplateConfigDismissed[];
    opens: outputs.GetNotificationTemplateTemplateConfigOpen[];
    resolveds: outputs.GetNotificationTemplateTemplateConfigResolved[];
    snoozeds: outputs.GetNotificationTemplateTemplateConfigSnoozed[];
}

export interface GetNotificationTemplateTemplateConfigBasicConfig {
    aliasField: string;
    displayName: string;
    fieldName: string;
    maxLength: number;
    options: outputs.GetNotificationTemplateTemplateConfigBasicConfigOption[];
    redlockMapping: boolean;
    required: boolean;
    type: string;
    typeAheadUri: string;
    value: string;
}

export interface GetNotificationTemplateTemplateConfigBasicConfigOption {
    id: string;
    key: string;
    name: string;
}

export interface GetNotificationTemplateTemplateConfigDismissed {
    aliasField: string;
    displayName: string;
    fieldName: string;
    maxLength: number;
    options: outputs.GetNotificationTemplateTemplateConfigDismissedOption[];
    redlockMapping: boolean;
    required: boolean;
    type: string;
    typeAheadUri: string;
    value: string;
}

export interface GetNotificationTemplateTemplateConfigDismissedOption {
    id: string;
    key: string;
    name: string;
}

export interface GetNotificationTemplateTemplateConfigOpen {
    aliasField: string;
    displayName: string;
    fieldName: string;
    maxLength: number;
    options: outputs.GetNotificationTemplateTemplateConfigOpenOption[];
    redlockMapping: boolean;
    required: boolean;
    type: string;
    typeAheadUri: string;
    value: string;
}

export interface GetNotificationTemplateTemplateConfigOpenOption {
    id: string;
    key: string;
    name: string;
}

export interface GetNotificationTemplateTemplateConfigResolved {
    aliasField: string;
    displayName: string;
    fieldName: string;
    maxLength: number;
    options: outputs.GetNotificationTemplateTemplateConfigResolvedOption[];
    redlockMapping: boolean;
    required: boolean;
    type: string;
    typeAheadUri: string;
    value: string;
}

export interface GetNotificationTemplateTemplateConfigResolvedOption {
    id: string;
    key: string;
    name: string;
}

export interface GetNotificationTemplateTemplateConfigSnoozed {
    aliasField: string;
    displayName: string;
    fieldName: string;
    maxLength: number;
    options: outputs.GetNotificationTemplateTemplateConfigSnoozedOption[];
    redlockMapping: boolean;
    required: boolean;
    type: string;
    typeAheadUri: string;
    value: string;
}

export interface GetNotificationTemplateTemplateConfigSnoozedOption {
    id: string;
    key: string;
    name: string;
}

export interface GetNotificationTemplatesListing {
    createdBy: string;
    createdTs: number;
    customerId: number;
    enabled: boolean;
    id: string;
    integrationId: string;
    integrationName: string;
    integrationType: string;
    lastModifiedBy: string;
    lastModifiedTs: number;
    module: string;
    name: string;
    templateType: string;
}

export interface GetOrgCloudAccountAw {
    accountId: string;
    accountType: string;
    enabled: boolean;
    externalId: string;
    groupIds: string[];
    hierarchySelections: outputs.GetOrgCloudAccountAwHierarchySelection[];
    memberExternalId: string;
    memberRoleName: string;
    memberRoleStatus: boolean;
    name: string;
    protectionMode: string;
    roleArn: string;
}

export interface GetOrgCloudAccountAwHierarchySelection {
    displayName: string;
    nodeType: string;
    resourceId: string;
    selectionType: string;
}

export interface GetOrgCloudAccountAzure {
    accountId: string;
    accountType: string;
    clientId: string;
    enabled: boolean;
    groupIds: string[];
    hierarchySelections: outputs.GetOrgCloudAccountAzureHierarchySelection[];
    key: string;
    monitorFlowLogs: boolean;
    name: string;
    protectionMode: string;
    rootSyncEnabled: boolean;
    servicePrincipalId: string;
    tenantId: string;
}

export interface GetOrgCloudAccountAzureHierarchySelection {
    displayName: string;
    nodeType: string;
    resourceId: string;
    selectionType: string;
}

export interface GetOrgCloudAccountGcp {
    accountGroupCreationMode: string;
    accountId: string;
    accountType: string;
    compressionEnabled: boolean;
    credentialsJson: string;
    dataflowEnabledProject: string;
    enabled: boolean;
    flowLogStorageBucket: string;
    groupIds: string[];
    hierarchySelections: outputs.GetOrgCloudAccountGcpHierarchySelection[];
    name: string;
    organizationName: string;
    protectionMode: string;
}

export interface GetOrgCloudAccountGcpHierarchySelection {
    displayName: string;
    nodeType: string;
    resourceId: string;
    selectionType: string;
}

export interface GetOrgCloudAccountOci {
    /**
     * Oci account ID
     */
    accountId: string;
    /**
     * Account type - account or tenant
     */
    accountType: string;
    /**
     * Account group id for this account
     */
    defaultAccountGroupId: string;
    /**
     * Whether or not the account is enabled
     */
    enabled: boolean;
    /**
     * OCI identity group name that you define. Can be an existing group
     */
    groupName: string;
    /**
     * OCI tenancy home region
     */
    homeRegion: string;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * OCI identity policy name that you define. Can be an existing policy that has the right policy statements
     */
    policyName: string;
    /**
     * OCI identity user name that you define. Can be an existing user that has the right privileges
     */
    userName: string;
    /**
     * OCI identity user ocid that you define. Can be an existing user that has the right privileges
     */
    userOcid: string;
}

export interface GetOrgCloudAccountV2Aw {
    accountId: string;
    accountType: string;
    cloudType: string;
    createdEpochMillis: number;
    customerName: string;
    defaultAccountGroupId: string;
    deleted: boolean;
    deploymentType: string;
    enabled: boolean;
    eventbridgeRuleNamePrefix: string;
    externalId: string;
    features: outputs.GetOrgCloudAccountV2AwFeature[];
    groupIds: string[];
    hasMemberRole: boolean;
    hierarchySelections: outputs.GetOrgCloudAccountV2AwHierarchySelection[];
    lastModifiedBy: string;
    lastModifiedEpochMillis: number;
    name: string;
    parentId: string;
    protectionMode: string;
    roleArn: string;
    templateUrl: string;
}

export interface GetOrgCloudAccountV2AwFeature {
    name: string;
    state: string;
}

export interface GetOrgCloudAccountV2AwHierarchySelection {
    displayName: string;
    nodeType: string;
    resourceId: string;
    selectionType: string;
}

export interface GetOrgCloudAccountV2Azure {
    accountId: string;
    accountType: string;
    clientId: string;
    cloudType: string;
    createdEpochMillis: number;
    customerName: string;
    defaultAccountGroupId: string;
    deleted: boolean;
    deploymentType: string;
    deploymentTypeDescription: string;
    enabled: boolean;
    environmentType: string;
    features: outputs.GetOrgCloudAccountV2AzureFeature[];
    groupIds: string[];
    hierarchySelections: outputs.GetOrgCloudAccountV2AzureHierarchySelection[];
    key: string;
    lastModifiedBy: string;
    lastModifiedEpochMillis: number;
    memberSyncEnabled: boolean;
    monitorFlowLogs: boolean;
    name: string;
    parentId: string;
    protectionMode: string;
    rootSyncEnabled: boolean;
    servicePrincipalId: string;
    templateUrl: string;
    tenantId: string;
}

export interface GetOrgCloudAccountV2AzureFeature {
    name: string;
    state: string;
}

export interface GetOrgCloudAccountV2AzureHierarchySelection {
    displayName: string;
    nodeType: string;
    resourceId: string;
    selectionType: string;
}

export interface GetOrgCloudAccountV2Gcp {
    accountGroupCreationMode: string;
    accountId: string;
    accountType: string;
    addedOnTs: number;
    authenticationType: string;
    cloudType: string;
    compressionEnabled: boolean;
    createdEpochMillis: number;
    credentials: string;
    customerName: string;
    dataflowEnabledProject: string;
    defaultAccountGroupId: string;
    deleted: boolean;
    deploymentType: string;
    deploymentTypeDescription: string;
    enabled: boolean;
    features: outputs.GetOrgCloudAccountV2GcpFeature[];
    flowLogStorageBucket: string;
    groupIds: string[];
    hierarchySelections: outputs.GetOrgCloudAccountV2GcpHierarchySelection[];
    lastModifiedBy: string;
    lastModifiedEpochMillis: number;
    name: string;
    organizationName: string;
    parentId: string;
    projectId: string;
    protectionMode: string;
    serviceAccountEmail: string;
    storageScanEnabled: boolean;
}

export interface GetOrgCloudAccountV2GcpFeature {
    name: string;
    state: string;
}

export interface GetOrgCloudAccountV2GcpHierarchySelection {
    displayName: string;
    nodeType: string;
    resourceId: string;
    selectionType: string;
}

export interface GetOrgCloudAccountsListing {
    accountId: string;
    cloudType: string;
    name: string;
}

export interface GetPermissionGroupFeature {
    featureName: string;
    operations: outputs.GetPermissionGroupFeatureOperation[];
}

export interface GetPermissionGroupFeatureOperation {
    create: boolean;
    delete: boolean;
    read: boolean;
    update: boolean;
}

export interface GetPermissionGroupsListing {
    acceptAccountGroups: boolean;
    acceptCodeRepositories: boolean;
    acceptResourceLists: boolean;
    custom: boolean;
    description: string;
    id: string;
    lastModifiedBy: string;
    lastModifiedTs: number;
    name: string;
    permissionGroupType: string;
}

export interface GetPoliciesListing {
    cloudType: string;
    deleted: boolean;
    description: string;
    enabled: boolean;
    labels: string[];
    name: string;
    openAlertsCount: number;
    overridden: boolean;
    policyId: string;
    policyMode: string;
    policySubtypes: string[];
    policyType: string;
    recommendation: string;
    remediable: boolean;
    severity: string;
    systemDefault: boolean;
}

export interface GetPolicyComplianceMetadata {
    complianceId: string;
    customAssigned: boolean;
    policyId: string;
    requirementDescription: string;
    requirementId: string;
    requirementName: string;
    sectionDescription: string;
    sectionId: string;
    sectionLabel: string;
    standardDescription: string;
    standardName: string;
}

export interface GetPolicyRemediation {
    actions: outputs.GetPolicyRemediationAction[];
    cliScriptJsonSchemaString: string;
    cliScriptTemplate: string;
    description: string;
    templateType: string;
}

export interface GetPolicyRemediationAction {
    operation: string;
    payload: string;
}

export interface GetPolicyRule {
    apiName: string;
    childrens: outputs.GetPolicyRuleChildren[];
    cloudAccount: string;
    cloudType: string;
    criteria: string;
    dataCriterias: outputs.GetPolicyRuleDataCriteria[];
    name: string;
    parameters: {[key: string]: string};
    resourceIdPath: string;
    resourceType: string;
    ruleType: string;
}

export interface GetPolicyRuleChildren {
    criteria: string;
    metadata: {[key: string]: string};
    recommendation: string;
    type: string;
}

export interface GetPolicyRuleDataCriteria {
    classificationResult: string;
    exposure: string;
    extensions: string[];
}

export interface GetReportCount {
    failed: number;
    highSeverityFailed: number;
    lowSeverityFailed: number;
    mediumSeverityFailed: number;
    passed: number;
    total: number;
}

export interface GetReportTarget {
    accountGroups: string[];
    accounts: string[];
    complianceStandardIds: string[];
    compressionEnabled: boolean;
    downloadNow: boolean;
    notificationTemplateId: string;
    notifyTos: string[];
    regions: string[];
    resourceGroups: string[];
    schedule: string;
    scheduleEnabled: boolean;
    timeRanges: outputs.GetReportTargetTimeRange[];
}

export interface GetReportTargetTimeRange {
    absolutes: outputs.GetReportTargetTimeRangeAbsolute[];
    relatives: outputs.GetReportTargetTimeRangeRelative[];
    toNows: outputs.GetReportTargetTimeRangeToNow[];
}

export interface GetReportTargetTimeRangeAbsolute {
    end: number;
    start: number;
}

export interface GetReportTargetTimeRangeRelative {
    amount: number;
    unit: string;
}

export interface GetReportTargetTimeRangeToNow {
    unit: string;
}

export interface GetReportsListing {
    cloudType: string;
    name: string;
    reportId: string;
    reportType: string;
    status: string;
}

export interface GetResourceListMember {
    azureResourceGroups: string[];
    computeAccessGroups: outputs.GetResourceListMemberComputeAccessGroup[];
    tags: outputs.GetResourceListMemberTag[];
}

export interface GetResourceListMemberComputeAccessGroup {
    appIds: string[];
    clusters: string[];
    codeRepos: string[];
    containers: string[];
    functions: string[];
    hosts: string[];
    images: string[];
    labels: string[];
    namespaces: string[];
}

export interface GetResourceListMemberTag {
    key: string;
    value: string;
}

export interface GetResourceListsListing {
    description: string;
    id: string;
    lastModifiedBy: string;
    lastModifiedTs: number;
    name: string;
    resourceListType: string;
}

export interface GetRqlHistoricSearchTimeRange {
    absolutes: outputs.GetRqlHistoricSearchTimeRangeAbsolute[];
    relatives: outputs.GetRqlHistoricSearchTimeRangeRelative[];
    toNows: outputs.GetRqlHistoricSearchTimeRangeToNow[];
}

export interface GetRqlHistoricSearchTimeRangeAbsolute {
    end: number;
    start: number;
}

export interface GetRqlHistoricSearchTimeRangeRelative {
    amount: number;
    relativeTimeType: string;
    unit: string;
}

export interface GetRqlHistoricSearchTimeRangeToNow {
    unit: string;
}

export interface GetRqlHistoricSearchesListing {
    createdBy: string;
    lastModifiedBy: string;
    name: string;
    saved: boolean;
    searchId: string;
    searchType: string;
}

export interface GetTrustedAlertIpCidr {
    cidr: string;
    createdOn: number;
    description: string;
    uuid: string;
}

export interface GetTrustedAlertIpsListing {
    cidrCount: number;
    cidrs: outputs.GetTrustedAlertIpsListingCidr[];
    name: string;
    uuid: string;
}

export interface GetTrustedAlertIpsListingCidr {
    cidr: string;
    createdOn: number;
    description: string;
    uuid: string;
}

export interface GetTrustedLoginIpsListing {
    cidrs: string[];
    description: string;
    lastModifiedTs: number;
    name: string;
    trustedLoginIpId: string;
}

export interface GetUserProfileRole {
    name: string;
    onlyAllowCiAccess: boolean;
    onlyAllowComputeAccess: boolean;
    onlyAllowReadAccess: boolean;
    roleId: string;
    roleType: string;
}

export interface GetUserProfilesListing {
    accountType: string;
    defaultRoleId: string;
    displayName: string;
    enabled: boolean;
    lastLoginTs: number;
    lastModifiedBy: string;
    lastModifiedTs: number;
    profileId: string;
    roleIds: string[];
    timeZone: string;
    username: string;
}

export interface GetUserRoleAdditionalAttribute {
    hasDefenderPermissions: boolean;
    onlyAllowCiAccess: boolean;
    onlyAllowComputeAccess: boolean;
    onlyAllowReadAccess: boolean;
}

export interface GetUserRolesListing {
    accountGroups: outputs.GetUserRolesListingAccountGroup[];
    additionalAttributes: outputs.GetUserRolesListingAdditionalAttribute[];
    associatedUsers: string[];
    lastModifiedBy: string;
    lastModifiedTs: number;
    name: string;
    restrictDismissalAccess: boolean;
    roleId: string;
    roleType: string;
}

export interface GetUserRolesListingAccountGroup {
    groupId: string;
    name: string;
}

export interface GetUserRolesListingAdditionalAttribute {
    hasDefenderPermissions: boolean;
    onlyAllowCiAccess: boolean;
    onlyAllowComputeAccess: boolean;
    onlyAllowReadAccess: boolean;
}

export interface IntegrationIntegrationConfig {
    /**
     * Tenable access key
     */
    accessKey?: string;
    /**
     * AWS/Azure account ID for AWS Security Hub/Azure Service Bus Queue integration
     */
    accountId?: string;
    /**
     * Demisto API key
     */
    apiKey?: string;
    /**
     * Okta API Token
     */
    apiToken?: string;
    /**
     * PagerDuty/Splunk authentication token for the event collector
     */
    authToken?: string;
    /**
     * Qualys Security Operations Center server API URL (without "http(s)")
     */
    baseUrl?: string;
    /**
     * Connection string for azure service bus queue integration
     */
    connectionString?: string;
    /**
     * Okta Domain
     */
    domain?: string;
    /**
     * AWS external ID for Amazon S3 integration
     */
    externalId?: string;
    /**
     * Webhook headers
     */
    headers?: outputs.IntegrationIntegrationConfigHeader[];
    /**
     * ServiceNow/Demisto URL
     */
    hostUrl?: string;
    /**
     * PagerDuty integration key
     */
    integrationKey?: string;
    /**
     * (Qualys/ServiceNow) Login
     */
    login?: string;
    /**
     * true = specific IAM credentials are specified for SQS queue access
     */
    moreInfo?: boolean;
    /**
     * GCP Organization ID for Google CSCC integration
     */
    orgId?: string;
    /**
     * Snow Flake Pass phrase
     */
    passPhrase?: string;
    /**
     * (Qualys/ServiceNow) Password
     */
    password?: string;
    /**
     * Snow Flake Pipename
     */
    pipeName?: string;
    /**
     * Snow Flake private key
     */
    privateKey?: string;
    /**
     * The Queue URL you used when you configured Prisma Cloud in Amazon SQS or Azure Service Bus Queue
     */
    queueUrl?: string;
    /**
     * AWS region for Amazon S3 integration
     */
    region?: string;
    /**
     * AWS regions for AWS Security Hub integration
     */
    regions?: outputs.IntegrationIntegrationConfigRegion[];
    /**
     * AWS role ARN for Amazon S3 integration
     */
    roleArn?: string;
    /**
     * File Roll Up Time in minutes for AWS S3 integration and snowflake Integration
     */
    rollUpInterval?: number;
    /**
     * AWS S3 URI for Amazon S3 integration
     */
    s3Uri?: string;
    /**
     * Tenable Secret Key
     */
    secretKey?: string;
    /**
     * GCP Source ID for Google CSCC integration
     */
    sourceId?: string;
    /**
     * Source type for splunk integration
     */
    sourceType?: string;
    /**
     * Amazon S3 Id for snowflake integration
     */
    stagingIntegrationId?: string;
    /**
     * Key/value pairs that identify the ServiceNow module tables with which to integrate (e.g. - incident, sn_si_incident, or em_event)
     */
    tables?: {[key: string]: boolean};
    /**
     * Webhook URL or Splunk HTTP event collector URL
     */
    url?: string;
    /**
     * Snow Flake Username
     */
    userName?: string;
    /**
     * ServiceNow release version
     */
    version: string;
    /**
     * Webhook url for slack integration
     */
    webhookUrl?: string;
}

export interface IntegrationIntegrationConfigHeader {
    /**
     * Header name
     */
    key: string;
    /**
     * Read only
     */
    readOnly?: boolean;
    /**
     * Secure
     */
    secure?: boolean;
    /**
     * Header value
     */
    value: string;
}

export interface IntegrationIntegrationConfigRegion {
    /**
     * AWS region code
     */
    apiIdentifier?: string;
    /**
     * Cloud Type
     */
    cloudType?: string;
    /**
     * AWS region name
     */
    name?: string;
}

export interface IntegrationReason {
    details: outputs.IntegrationReasonDetail[];
    errorType: string;
    lastUpdated: number;
    message: string;
}

export interface IntegrationReasonDetail {
    message: string;
    statusCode: number;
    subject: string;
}

export interface NotificationTemplateTemplateConfig {
    basicConfigs?: outputs.NotificationTemplateTemplateConfigBasicConfig[];
    dismisseds?: outputs.NotificationTemplateTemplateConfigDismissed[];
    opens?: outputs.NotificationTemplateTemplateConfigOpen[];
    resolveds?: outputs.NotificationTemplateTemplateConfigResolved[];
    snoozeds?: outputs.NotificationTemplateTemplateConfigSnoozed[];
}

export interface NotificationTemplateTemplateConfigBasicConfig {
    /**
     * AliasField
     */
    aliasField?: string;
    /**
     * displayName
     */
    displayName?: string;
    /**
     * fieldName
     */
    fieldName?: string;
    /**
     * MaxLength
     */
    maxLength?: number;
    /**
     * options
     */
    options?: outputs.NotificationTemplateTemplateConfigBasicConfigOption[];
    /**
     * redlockMapping
     */
    redlockMapping?: boolean;
    /**
     * required
     */
    required?: boolean;
    /**
     * type
     */
    type?: string;
    /**
     * type Ahead URI
     */
    typeAheadUri?: string;
    /**
     * value
     */
    value?: string;
}

export interface NotificationTemplateTemplateConfigBasicConfigOption {
    /**
     * id
     */
    id?: string;
    /**
     * key
     */
    key?: string;
    /**
     * name
     */
    name?: string;
}

export interface NotificationTemplateTemplateConfigDismissed {
    /**
     * AliasField
     */
    aliasField?: string;
    /**
     * displayName
     */
    displayName?: string;
    /**
     * fieldName
     */
    fieldName?: string;
    /**
     * MaxLength
     */
    maxLength?: number;
    /**
     * options
     */
    options?: outputs.NotificationTemplateTemplateConfigDismissedOption[];
    /**
     * redlockMapping
     */
    redlockMapping?: boolean;
    /**
     * required
     */
    required?: boolean;
    /**
     * type
     */
    type?: string;
    /**
     * type Ahead URI
     */
    typeAheadUri?: string;
    /**
     * value
     */
    value?: string;
}

export interface NotificationTemplateTemplateConfigDismissedOption {
    /**
     * id
     */
    id?: string;
    /**
     * key
     */
    key?: string;
    /**
     * name
     */
    name?: string;
}

export interface NotificationTemplateTemplateConfigOpen {
    /**
     * AliasField
     */
    aliasField?: string;
    /**
     * displayName
     */
    displayName?: string;
    /**
     * fieldName
     */
    fieldName?: string;
    /**
     * MaxLength
     */
    maxLength?: number;
    /**
     * options
     */
    options?: outputs.NotificationTemplateTemplateConfigOpenOption[];
    /**
     * redlockMapping
     */
    redlockMapping?: boolean;
    /**
     * required
     */
    required?: boolean;
    /**
     * type
     */
    type?: string;
    /**
     * type Ahead URI
     */
    typeAheadUri?: string;
    /**
     * value
     */
    value?: string;
}

export interface NotificationTemplateTemplateConfigOpenOption {
    /**
     * id
     */
    id?: string;
    /**
     * key
     */
    key?: string;
    /**
     * name
     */
    name?: string;
}

export interface NotificationTemplateTemplateConfigResolved {
    /**
     * AliasField
     */
    aliasField?: string;
    /**
     * displayName
     */
    displayName?: string;
    /**
     * fieldName
     */
    fieldName?: string;
    /**
     * MaxLength
     */
    maxLength?: number;
    /**
     * options
     */
    options?: outputs.NotificationTemplateTemplateConfigResolvedOption[];
    /**
     * redlockMapping
     */
    redlockMapping?: boolean;
    /**
     * required
     */
    required?: boolean;
    /**
     * type
     */
    type?: string;
    /**
     * type Ahead URI
     */
    typeAheadUri?: string;
    /**
     * value
     */
    value?: string;
}

export interface NotificationTemplateTemplateConfigResolvedOption {
    /**
     * id
     */
    id?: string;
    /**
     * key
     */
    key?: string;
    /**
     * name
     */
    name?: string;
}

export interface NotificationTemplateTemplateConfigSnoozed {
    /**
     * AliasField
     */
    aliasField?: string;
    /**
     * displayName
     */
    displayName?: string;
    /**
     * fieldName
     */
    fieldName?: string;
    /**
     * MaxLength
     */
    maxLength?: number;
    /**
     * options
     */
    options?: outputs.NotificationTemplateTemplateConfigSnoozedOption[];
    /**
     * redlockMapping
     */
    redlockMapping?: boolean;
    /**
     * required
     */
    required?: boolean;
    /**
     * type
     */
    type?: string;
    /**
     * type Ahead URI
     */
    typeAheadUri?: string;
    /**
     * value
     */
    value?: string;
}

export interface NotificationTemplateTemplateConfigSnoozedOption {
    /**
     * id
     */
    id?: string;
    /**
     * key
     */
    key?: string;
    /**
     * name
     */
    name?: string;
}

export interface OrgCloudAccountAws {
    /**
     * AWS account ID
     */
    accountId: string;
    /**
     * Account type - organization or account
     */
    accountType?: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * AWS account external ID
     */
    externalId: string;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: string[];
    /**
     * List of hierarchy selection. Each item has resource id, display name, node type and selection type
     */
    hierarchySelections?: outputs.OrgCloudAccountAwsHierarchySelection[];
    /**
     * AWS Member account role's external ID
     */
    memberExternalId: string;
    /**
     * AWS Member account role name
     */
    memberRoleName: string;
    /**
     * true = The member role created using stack set exists in all the member accounts. All the Org accounts will be added.
     * false = Only the master account will be added.
     */
    memberRoleStatus?: boolean;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * Monitor or Monitor and Protect
     */
    protectionMode?: string;
    /**
     * Unique identifier for an AWS resource (ARN)
     */
    roleArn: string;
}

export interface OrgCloudAccountAwsHierarchySelection {
    /**
     * Display name for AWS OU, AWS account, or AWS organization
     */
    displayName: string;
    /**
     * Valid values: OU, ACCOUNT, ORG
     */
    nodeType: string;
    /**
     * Resource ID. Valid values are AWS OU ID, AWS account ID, or AWS Organization ID. Note you must escape any double quotes in the resource ID with a backslash.
     */
    resourceId: string;
    /**
     * Selection type. Valid values: INCLUDE to include the specified resource to onboard, EXCLUDE to exclude the specified resource and onboard the rest, ALL to onboard all resources in the organization.
     */
    selectionType: string;
}

export interface OrgCloudAccountAzure {
    /**
     * Azure account ID
     */
    accountId: string;
    /**
     * Account type - account or tenant
     */
    accountType?: string;
    /**
     * Application ID registered with Active Directory
     */
    clientId: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: string[];
    /**
     * List of subscriptions and/or management groups to onboard
     */
    hierarchySelections?: outputs.OrgCloudAccountAzureHierarchySelection[];
    /**
     * Application ID key
     */
    key: string;
    /**
     * Automatically ingest flow logs
     */
    monitorFlowLogs: boolean;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * Monitor or Monitor and Protect
     */
    protectionMode?: string;
    /**
     * Azure tenant has children. Must be set to true when azure tenant is onboarded with children
     */
    rootSyncEnabled?: boolean;
    /**
     * Unique ID of the service principal object associated with the Prisma Cloud application that you create
     */
    servicePrincipalId: string;
    /**
     * Active Directory ID associated with Azure
     */
    tenantId: string;
}

export interface OrgCloudAccountAzureHierarchySelection {
    /**
     * Display name for management group or subscription
     */
    displayName: string;
    /**
     * Node type. Valid values: SUBSCRIPTION, TENANT, MANAGEMENT_GROUP
     */
    nodeType: string;
    /**
     * Resource ID. Management group ID or subscription ID.
     * Note you must escape any double quotes in the resource ID with a backslash.
     */
    resourceId: string;
    /**
     * Selection type. Valid values: INCLUDE to include the specified resource to onboard, EXCLUDE to exclude the specified resource and onboard the rest, ALL to onboard all resources in the tenant.
     */
    selectionType: string;
}

export interface OrgCloudAccountGcp {
    /**
     * Cloud account group creation mode. Valid values - MANUAL, AUTO or RECURSIVE
     */
    accountGroupCreationMode?: string;
    /**
     * GCP project ID
     */
    accountId: string;
    /**
     * Account type - organization or account
     */
    accountType?: string;
    /**
     * Enable flow log compression
     */
    compressionEnabled?: boolean;
    /**
     * Content of the JSON credentials file
     */
    credentialsJson: string;
    /**
     * GCP project for flow log compression
     */
    dataflowEnabledProject?: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * GCP flow logs storage bucket
     */
    flowLogStorageBucket?: string;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds?: string[];
    /**
     * List of hierarchy selection. Each item has resource id, display name, node type and selection type
     */
    hierarchySelections?: outputs.OrgCloudAccountGcpHierarchySelection[];
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * GCP organization name
     */
    organizationName: string;
    /**
     * Protection Mode - Monitor or Monitor and Protect
     */
    protectionMode?: string;
}

export interface OrgCloudAccountGcpHierarchySelection {
    /**
     * Display name for folder, project, or organization
     */
    displayName: string;
    /**
     * Node type. Valid values - FOLDER, PROJECT, ORG
     */
    nodeType: string;
    /**
     * Resource ID. For folders, format is folders/{folder ID}. For projects, format is {project number}. For orgs, format is organizations/{org ID}
     */
    resourceId: string;
    /**
     * Selection type. Valid values: INCLUDE, EXCLUDE, ALL. If hierarchySelection.nodeType is PROJECT or FOLDER, then a valid value is either INCLUDE or EXCLUDE
     */
    selectionType: string;
}

export interface OrgCloudAccountOci {
    /**
     * Org account ID
     */
    accountId: string;
    /**
     * Account type - account or tenant
     */
    accountType: string;
    /**
     * Account group id for this account
     */
    defaultAccountGroupId: string;
    /**
     * Whether or not the account is enabled
     */
    enabled: boolean;
    /**
     * OCI identity group name that you define. Can be an existing group
     */
    groupName: string;
    /**
     * OCI tenancy home region
     */
    homeRegion: string;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * OCI identity policy name that you define. Can be an existing policy that has the right policy statements
     */
    policyName: string;
    /**
     * OCI identity user name that you define. Can be an existing user that has the right privileges
     */
    userName: string;
    /**
     * OCI identity user Ocid that you define. Can be an existing user that has the right privileges
     */
    userOcid: string;
}

export interface OrgCloudAccountTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface OrgCloudAccountV2Aws {
    /**
     * AWS account ID
     */
    accountId: string;
    /**
     * Account type - organization or account
     */
    accountType?: string;
    /**
     * Cloud type
     */
    cloudType: string;
    /**
     * Created epoch millis
     */
    createdEpochMillis: number;
    /**
     * Customer name
     */
    customerName: string;
    /**
     * Account group id to which you are assigning this account
     */
    defaultAccountGroupId?: string;
    /**
     * Deleted
     */
    deleted: boolean;
    /**
     * Deployment type
     */
    deploymentType: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * EventbridgeRuleNamePrefix
     */
    eventbridgeRuleNamePrefix: string;
    externalId: string;
    /**
     * Features applicable for aws account
     */
    features?: outputs.OrgCloudAccountV2AwsFeature[];
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: string[];
    /**
     * Member role
     */
    hasMemberRole: boolean;
    /**
     * List of hierarchy selection. Each item has resource id, display name, node type and selection type
     */
    hierarchySelections?: outputs.OrgCloudAccountV2AwsHierarchySelection[];
    /**
     * External id
     */
    lastModifiedBy: string;
    /**
     * Last modified epoch millis
     */
    lastModifiedEpochMillis: number;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * Parent id
     */
    parentId: string;
    /**
     * Protection mode
     */
    protectionMode: string;
    /**
     * Unique identifier for an AWS resource (ARN)
     */
    roleArn: string;
    /**
     * Template url
     */
    templateUrl: string;
}

export interface OrgCloudAccountV2AwsFeature {
    /**
     * Feature name
     */
    name: string;
    /**
     * Feature state, one of enabled and disabled
     */
    state: string;
}

export interface OrgCloudAccountV2AwsHierarchySelection {
    /**
     * Display name for AWS OU, AWS account, or AWS organization
     */
    displayName: string;
    /**
     * Valid values: OU, ACCOUNT, ORG
     */
    nodeType: string;
    /**
     * Resource ID. Valid values are AWS OU ID, AWS account ID, or AWS Organization ID. Note you must escape any double quotes in the resource ID with a backslash.
     */
    resourceId: string;
    /**
     * Selection type. Valid values: INCLUDE to include the specified resource to onboard, EXCLUDE to exclude the specified resource and onboard the rest, ALL to onboard all resources in the organization.
     */
    selectionType: string;
}

export interface OrgCloudAccountV2Azure {
    /**
     * Azure account ID
     */
    accountId: string;
    /**
     * Account type - tenant or account
     */
    accountType?: string;
    /**
     * Application ID registered with Active Directory
     */
    clientId: string;
    /**
     * Cloud type
     */
    cloudType: string;
    /**
     * Created epoch millis
     */
    createdEpochMillis: number;
    /**
     * Customer name
     */
    customerName: string;
    /**
     * Account group id to which you are assigning this account
     */
    defaultAccountGroupId?: string;
    /**
     * Deleted
     */
    deleted: boolean;
    /**
     * Deployment type
     */
    deploymentType: string;
    /**
     * Deployment type description. Valid values : Commercial or Government
     */
    deploymentTypeDescription: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * Environment type
     */
    environmentType?: string;
    /**
     * Features applicable for azure account
     */
    features?: outputs.OrgCloudAccountV2AzureFeature[];
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: string[];
    /**
     * List of hierarchy selection. Each item has resource id, display name, node type and selection type
     */
    hierarchySelections?: outputs.OrgCloudAccountV2AzureHierarchySelection[];
    /**
     * Application ID key
     */
    key: string;
    /**
     * Last modified by
     */
    lastModifiedBy: string;
    /**
     * Last modified epoch millis
     */
    lastModifiedEpochMillis: number;
    /**
     * Member sync enabled
     */
    memberSyncEnabled: boolean;
    /**
     * Automatically ingest flow logs
     */
    monitorFlowLogs?: boolean;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * Parent id
     */
    parentId: string;
    /**
     * Protection mode
     */
    protectionMode: string;
    /**
     * Azure tenant has children. Must be set to true when azure tenant is onboarded with children
     */
    rootSyncEnabled?: boolean;
    /**
     * Unique ID of the service principle object associated with the Prisma Cloud application that you create
     */
    servicePrincipalId: string;
    /**
     * Template url
     */
    templateUrl: string;
    /**
     * Active Directory ID associated with Azure
     */
    tenantId: string;
}

export interface OrgCloudAccountV2AzureFeature {
    /**
     * Feature name
     */
    name: string;
    /**
     * Feature state, one of enabled and disabled
     */
    state: string;
}

export interface OrgCloudAccountV2AzureHierarchySelection {
    /**
     * Display name for management group or subscription
     */
    displayName: string;
    /**
     * Valid values: SUBSCRIPTION, TENANT, MANAGEMENT_GROUP
     */
    nodeType: string;
    /**
     * Management group ID or subscription ID.
     * Note you must escape any double quotes in the resource ID with a backslash.
     */
    resourceId: string;
    /**
     * Selection type.Valid values: INCLUDE to include the specified resource to onboard, EXCLUDE to exclude the specified resource and onboard the rest, ALL to onboard all resources in the tenant.
     */
    selectionType: string;
}

export interface OrgCloudAccountV2Gcp {
    /**
     * Cloud account group creation mode. Valid values - MANUAL, AUTO or RECURSIVE
     */
    accountGroupCreationMode?: string;
    /**
     * GCP project ID
     */
    accountId: string;
    /**
     * Account type - organization or account
     */
    accountType: string;
    /**
     * Added on time stamp
     */
    addedOnTs: number;
    /**
     * Authentication type
     */
    authenticationType: string;
    /**
     * Cloud type
     */
    cloudType: string;
    /**
     * Enable or disable compressed network flow log generation. Default value: `false`
     */
    compressionEnabled?: boolean;
    /**
     * Account created epoch time
     */
    createdEpochMillis: number;
    /**
     * Content of the JSON credentials file
     */
    credentials: string;
    /**
     * Customer name
     */
    customerName: string;
    /**
     * Project ID where the Dataflow API is enabled. Required if `compressionEnabled` is set to `true` and if the `accountType` is `organization`. Optional if the `accountType` is `account` or `masterServiceAccount`
     */
    dataflowEnabledProject?: string;
    /**
     * Account group id to which you are assigning this account
     */
    defaultAccountGroupId: string;
    /**
     * Whether the account is deleted or not
     */
    deleted: boolean;
    /**
     * Deployment type
     */
    deploymentType: string;
    /**
     * Deployment type description
     */
    deploymentTypeDescription: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * Features applicable for aws account
     */
    features?: outputs.OrgCloudAccountV2GcpFeature[];
    /**
     * Cloud Storage Bucket name that is used store the flow logs.
     */
    flowLogStorageBucket?: string;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: string[];
    /**
     * List of hierarchy selection. Each item has resource id, display name, node type and selection type
     */
    hierarchySelections?: outputs.OrgCloudAccountV2GcpHierarchySelection[];
    /**
     * Last modified by
     */
    lastModifiedBy: string;
    /**
     * Last modified at epoch millis
     */
    lastModifiedEpochMillis: number;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: string;
    /**
     * GCP organization name
     */
    organizationName: string;
    /**
     * Parent id
     */
    parentId: string;
    /**
     * GCP project ID
     */
    projectId: string;
    /**
     * Protection mode
     */
    protectionMode: string;
    /**
     * Service account email
     */
    serviceAccountEmail: string;
    /**
     * Whether the storage scan is enabled
     */
    storageScanEnabled: boolean;
}

export interface OrgCloudAccountV2GcpFeature {
    /**
     * Feature name
     */
    name: string;
    /**
     * Feature state, one of enabled and disabled
     */
    state: string;
}

export interface OrgCloudAccountV2GcpHierarchySelection {
    /**
     * Display name for folder, project, or organization
     */
    displayName: string;
    /**
     * Node type. Valid values - FOLDER, PROJECT, ORG
     */
    nodeType: string;
    /**
     * Resource ID. For folders, format is folders/{folder ID}. For projects, format is {project number}. For orgs, format is organizations/{org ID}
     */
    resourceId: string;
    /**
     * Selection type. Valid values: INCLUDE, EXCLUDE, ALL. If hierarchySelection.nodeType is PROJECT or FOLDER, then a valid value is either INCLUDE or EXCLUDE
     */
    selectionType: string;
}

export interface OrgCloudAccountV2Timeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface PermissionGroupFeature {
    /**
     * Feature name
     */
    featureName: string;
    /**
     * Operations
     */
    operations: outputs.PermissionGroupFeatureOperation[];
}

export interface PermissionGroupFeatureOperation {
    /**
     * Create operation
     */
    create?: boolean;
    /**
     * Delete operation
     */
    delete?: boolean;
    /**
     * Read operation
     */
    read?: boolean;
    /**
     * Update operation
     */
    update?: boolean;
}

export interface PolicyComplianceMetadata {
    /**
     * Compliance Section UUID
     */
    complianceId: string;
    /**
     * Custom assigned
     */
    customAssigned: boolean;
    /**
     * Policy ID
     */
    policyId: string;
    /**
     * Requirement description
     */
    requirementDescription: string;
    /**
     * Requirement ID
     */
    requirementId: string;
    /**
     * Requirement name
     */
    requirementName: string;
    /**
     * Section description
     */
    sectionDescription: string;
    /**
     * Section ID
     */
    sectionId: string;
    /**
     * Section label
     */
    sectionLabel: string;
    /**
     * Compliance standard description
     */
    standardDescription: string;
    /**
     * Compliance standard name
     */
    standardName: string;
}

export interface PolicyRemediation {
    actions?: outputs.PolicyRemediationAction[];
    /**
     * CLI script JSON schema
     */
    cliScriptJsonSchemaString?: string;
    /**
     * CLI script template
     */
    cliScriptTemplate?: string;
    /**
     * Description
     */
    description?: string;
    /**
     * Template type
     */
    templateType?: string;
}

export interface PolicyRemediationAction {
    operation?: string;
    payload?: string;
}

export interface PolicyRule {
    /**
     * API name
     */
    apiName?: string;
    /**
     * Children
     */
    childrens?: outputs.PolicyRuleChildren[];
    /**
     * Cloud account
     */
    cloudAccount?: string;
    /**
     * Cloud type
     */
    cloudType?: string;
    /**
     * Saved search ID that defines the rule criteria
     */
    criteria?: string;
    /**
     * Criteria for DLP Rule
     */
    dataCriteria?: outputs.PolicyRuleDataCriteria;
    /**
     * Name
     */
    name: string;
    /**
     * Parameters
     */
    parameters?: {[key: string]: string};
    /**
     * Resource ID path
     */
    resourceIdPath?: string;
    /**
     * Resource type
     */
    resourceType?: string;
    /**
     * Type of rule or RQL query
     */
    ruleType: string;
}

export interface PolicyRuleChildren {
    /**
     * Criteria for build policy
     */
    criteria?: string;
    /**
     * YAML string for code build policy
     */
    metadata: {[key: string]: string};
    /**
     * Recommendation
     */
    recommendation?: string;
    /**
     * Type of build policy
     */
    type?: string;
}

export interface PolicyRuleDataCriteria {
    /**
     * Data Profile name required for DLP rule criteria
     */
    classificationResult: string;
    /**
     * File exposure
     */
    exposure?: string;
    /**
     * File extensions
     */
    extensions?: string[];
}

export interface PolicyTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface ReportCount {
    failed: number;
    highSeverityFailed: number;
    lowSeverityFailed: number;
    mediumSeverityFailed: number;
    passed: number;
    total: number;
}

export interface ReportTarget {
    /**
     * List of cloud account groups
     */
    accountGroups?: string[];
    /**
     * List of cloud accounts
     */
    accounts?: string[];
    /**
     * List of compliance standard IDs
     */
    complianceStandardIds?: string[];
    /**
     * Business unit detailed report compression enabled
     */
    compressionEnabled?: boolean;
    /**
     * True = download now
     */
    downloadNow?: boolean;
    /**
     * Notification template id
     */
    notificationTemplateId?: string;
    /**
     * List of email addresses to receive notification
     */
    notifyTos?: string[];
    /**
     * List of regions
     */
    regions?: string[];
    /**
     * List of resource groups
     */
    resourceGroups?: string[];
    /**
     * Recurring report schedule in RRULE format
     */
    schedule?: string;
    /**
     * Report scheduling enabled
     */
    scheduleEnabled?: boolean;
    /**
     * The time range spec
     */
    timeRange?: outputs.ReportTargetTimeRange;
}

export interface ReportTargetTimeRange {
    /**
     * An absolute time range
     */
    absolutes?: outputs.ReportTargetTimeRangeAbsolute[];
    /**
     * Relative time range
     */
    relatives?: outputs.ReportTargetTimeRangeRelative[];
    /**
     * From some time in the past to now
     */
    toNows?: outputs.ReportTargetTimeRangeToNow[];
}

export interface ReportTargetTimeRangeAbsolute {
    /**
     * End time
     */
    end: number;
    /**
     * Start time
     */
    start: number;
}

export interface ReportTargetTimeRangeRelative {
    /**
     * The time number
     */
    amount: number;
    /**
     * The time unit
     */
    unit: string;
}

export interface ReportTargetTimeRangeToNow {
    /**
     * The time unit
     */
    unit: string;
}

export interface ResourceListMember {
    /**
     * List of Azure resource groups part of the resource list
     */
    azureResourceGroups?: string[];
    /**
     * Members when resource list type = compute access group
     */
    computeAccessGroups?: outputs.ResourceListMemberComputeAccessGroup[];
    /**
     * List of key:value pairs of tag members
     */
    tags?: outputs.ResourceListMemberTag[];
}

export interface ResourceListMemberComputeAccessGroup {
    /**
     * List of pattern strings to define app_id in resource list
     */
    appIds: string[];
    /**
     * List of pattern strings to define clusters in resource list
     */
    clusters: string[];
    /**
     * List of pattern strings to define code_repos in resource list
     */
    codeRepos: string[];
    /**
     * List of pattern strings to define containers in resource list
     */
    containers: string[];
    /**
     * List of pattern strings to define functions in resource list
     */
    functions: string[];
    /**
     * List of pattern strings to define hosts in resource list
     */
    hosts: string[];
    /**
     * List of pattern strings to define images in resource list
     */
    images: string[];
    /**
     * List of pattern strings to define labels in resource list
     */
    labels: string[];
    /**
     * List of pattern strings to define namespaces in resource list
     */
    namespaces: string[];
}

export interface ResourceListMemberTag {
    key?: string;
    value?: string;
}

export interface RqlSearchConfigData {
    name: string;
    stateId: string;
    url: string;
}

export interface RqlSearchEventData {
    account: string;
    regionApiIdentifier: string;
    regionId: number;
}

export interface RqlSearchIamData {
    accessedResourcesCount: number;
    destCloudAccount: string;
    destCloudRegion: string;
    destCloudResourceRrn: string;
    destCloudServiceName: string;
    destCloudType: string;
    destResourceId: string;
    destResourceName: string;
    destResourceType: string;
    effectiveActionName: string;
    exceptions: outputs.RqlSearchIamDataException[];
    grantedByCloudEntityId: string;
    grantedByCloudEntityName: string;
    grantedByCloudEntityRrn: string;
    grantedByCloudEntityType: string;
    grantedByCloudPolicyId: string;
    grantedByCloudPolicyName: string;
    grantedByCloudPolicyRrn: string;
    grantedByCloudPolicyType: string;
    grantedByCloudType: string;
    isWildCardDestCloudResourceName: boolean;
    lastAccessDate: string;
    messageId: string;
    sourceCloudAccount: string;
    sourceCloudRegion: string;
    sourceCloudResourceRrn: string;
    sourceCloudServiceName: string;
    sourceCloudType: string;
    sourceIdpDomain: string;
    sourceIdpEmail: string;
    sourceIdpGroup: string;
    sourceIdpRrn: string;
    sourceIdpService: string;
    sourceIdpUserName: string;
    sourcePublic: boolean;
    sourceResourceId: string;
    sourceResourceName: string;
    sourceResourceType: string;
}

export interface RqlSearchIamDataException {
    messageCode: string;
}

export interface RqlSearchNetworkData {
    account: string;
    accountName: string;
    regionId: number;
}

export interface RqlSearchTimeRange {
    /**
     * An absolute time range
     */
    absolutes?: outputs.RqlSearchTimeRangeAbsolute[];
    /**
     * Relative time range
     */
    relatives?: outputs.RqlSearchTimeRangeRelative[];
    /**
     * From some time in the past to now
     */
    toNows?: outputs.RqlSearchTimeRangeToNow[];
}

export interface RqlSearchTimeRangeAbsolute {
    /**
     * End time
     */
    end: number;
    /**
     * Start time
     */
    start: number;
}

export interface RqlSearchTimeRangeRelative {
    /**
     * The time number
     */
    amount: number;
    /**
     * The time unit
     */
    unit: string;
}

export interface RqlSearchTimeRangeToNow {
    /**
     * The time unit
     */
    unit: string;
}

export interface SavedSearchTimeRange {
    /**
     * An absolute time range
     */
    absolute?: outputs.SavedSearchTimeRangeAbsolute;
    /**
     * Relative time range
     */
    relative?: outputs.SavedSearchTimeRangeRelative;
    /**
     * From some time in the past to now
     */
    toNow?: outputs.SavedSearchTimeRangeToNow;
}

export interface SavedSearchTimeRangeAbsolute {
    /**
     * End time
     */
    end: number;
    /**
     * Start time
     */
    start: number;
}

export interface SavedSearchTimeRangeRelative {
    /**
     * The time number
     */
    amount: number;
    /**
     * The time unit
     */
    unit: string;
}

export interface SavedSearchTimeRangeToNow {
    /**
     * The time unit
     */
    unit: string;
}

export interface TrustedAlertIpCidr {
    /**
     * CIDR
     */
    cidr?: string;
    /**
     * Created on
     */
    createdOn: number;
    /**
     * Description
     */
    description?: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface UserProfileRole {
    name: string;
    onlyAllowCiAccess: boolean;
    onlyAllowComputeAccess: boolean;
    onlyAllowReadAccess: boolean;
    roleId: string;
    roleType: string;
}

export interface UserRoleAccountGroup {
    groupId: string;
    name: string;
}

export interface UserRoleAdditionalAttributes {
    /**
     * Has defender Permissions
     */
    hasDefenderPermissions: boolean;
    /**
     * Allows only CI Access
     */
    onlyAllowCiAccess: boolean;
    /**
     * Give access to only compute tab and access key tab
     */
    onlyAllowComputeAccess: boolean;
    /**
     * Allow only read access
     */
    onlyAllowReadAccess: boolean;
}

