// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AlertRuleNotificationConfig {
    /**
     * Alert rule notification config ID
     */
    configId?: pulumi.Input<string>;
    /**
     * Config type
     */
    configType?: pulumi.Input<string>;
    /**
     * Day of month
     */
    dayOfMonth?: pulumi.Input<number>;
    /**
     * Days of week
     */
    daysOfWeeks?: pulumi.Input<pulumi.Input<inputs.AlertRuleNotificationConfigDaysOfWeek>[]>;
    /**
     * Provide CSV detailed report
     */
    detailedReport?: pulumi.Input<boolean>;
    /**
     * Scan enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Frequency
     */
    frequency?: pulumi.Input<string>;
    /**
     * Frequency from R rule
     */
    frequencyFromRRule?: pulumi.Input<string>;
    /**
     * Hour of day
     */
    hourOfDay?: pulumi.Input<number>;
    /**
     * Include remediation in detailed report
     */
    includeRemediation?: pulumi.Input<boolean>;
    /**
     * Time of last notification in milliseconds
     */
    lastSentTs?: pulumi.Input<number>;
    /**
     * Last updated
     */
    lastUpdated?: pulumi.Input<number>;
    /**
     * R rule schedule
     */
    rRuleSchedule?: pulumi.Input<string>;
    /**
     * List of unique email addresses to notify
     */
    recipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Template ID
     */
    templateId?: pulumi.Input<string>;
    /**
     * Timezone ID
     */
    timezoneId?: pulumi.Input<string>;
    /**
     * Compress detailed report
     */
    withCompression?: pulumi.Input<boolean>;
}

export interface AlertRuleNotificationConfigDaysOfWeek {
    day: pulumi.Input<string>;
    offset: pulumi.Input<number>;
}

export interface AlertRuleTarget {
    /**
     * List of account groups
     */
    accountGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Model for Alert Rule Policy Filter
     */
    alertRulePolicyFilters?: pulumi.Input<pulumi.Input<inputs.AlertRuleTargetAlertRulePolicyFilter>[]>;
    /**
     * List of excluded accounts
     */
    excludedAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of regions
     */
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Model for holding the lists resource list ids by resource list type
     */
    resourceLists?: pulumi.Input<pulumi.Input<inputs.AlertRuleTargetResourceList>[]>;
    /**
     * List of TargetTag objects
     */
    tags?: pulumi.Input<pulumi.Input<inputs.AlertRuleTargetTag>[]>;
}

export interface AlertRuleTargetAlertRulePolicyFilter {
    /**
     * Cloud Type Filter
     */
    cloudTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Compliance Standard Filter
     */
    policyComplianceStandards?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Policy Label Filter
     */
    policyLabels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Cloud Type Filter
     */
    policySeverities?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AlertRuleTargetResourceList {
    /**
     * List of compute access group ids
     */
    computeAccessGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AlertRuleTargetTag {
    /**
     * Resource tag target
     */
    key: pulumi.Input<string>;
    /**
     * List of values for resource tag key
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AnomalySettingsAlertDispositionDescription {
    aggressive: pulumi.Input<string>;
    conservative: pulumi.Input<string>;
    moderate: pulumi.Input<string>;
}

export interface AnomalySettingsTrainingModelDescription {
    high: pulumi.Input<string>;
    low: pulumi.Input<string>;
    medium: pulumi.Input<string>;
}

export interface AnomalyTrustedListTrustedListEntry {
    /**
     * Domain
     */
    domain?: pulumi.Input<string>;
    /**
     * Image ID
     */
    imageId?: pulumi.Input<string>;
    /**
     * Ip CIDR
     */
    ipCidr?: pulumi.Input<string>;
    /**
     * Port
     */
    port?: pulumi.Input<string>;
    /**
     * Protocol
     */
    protocol?: pulumi.Input<string>;
    /**
     * Resource ID
     */
    resourceId?: pulumi.Input<string>;
    /**
     * Service
     */
    service?: pulumi.Input<string>;
    /**
     * Subject
     */
    subject?: pulumi.Input<string>;
    /**
     * Tag key
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Tag value
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAccountAlibabaCloud {
    /**
     * Alibaba account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * Unique identifier for an Alibaba RAM role resource
     */
    ramArn: pulumi.Input<string>;
}

export interface CloudAccountAws {
    /**
     * AWS account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Account type - organization or account
     */
    accountType?: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * AWS account external ID
     */
    externalId: pulumi.Input<string>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * Monitor or Monitor and Protect
     */
    protectionMode?: pulumi.Input<string>;
    /**
     * Unique identifier for an AWS resource (ARN)
     */
    roleArn: pulumi.Input<string>;
}

export interface CloudAccountAzure {
    /**
     * Azure account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Account type - organization or account
     */
    accountType?: pulumi.Input<string>;
    /**
     * Application ID registered with Active Directory
     */
    clientId: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Application ID key
     */
    key: pulumi.Input<string>;
    /**
     * Automatically ingest flow logs
     */
    monitorFlowLogs?: pulumi.Input<boolean>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * Monitor or Monitor and Protect
     */
    protectionMode?: pulumi.Input<string>;
    /**
     * Unique ID of the service principal object associated with the Prisma Cloud application that you create
     */
    servicePrincipalId: pulumi.Input<string>;
    /**
     * Active Directory ID associated with Azure
     */
    tenantId: pulumi.Input<string>;
}

export interface CloudAccountGcp {
    /**
     * GCP project ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Account type - organization or account
     */
    accountType?: pulumi.Input<string>;
    /**
     * Enable flow log compression
     */
    compressionEnabled?: pulumi.Input<boolean>;
    /**
     * Content of the JSON credentials file
     */
    credentialsJson: pulumi.Input<string>;
    /**
     * GCP project for flow log compression
     */
    dataflowEnabledProject?: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * GCP flow logs storage bucket
     */
    flowLogStorageBucket?: pulumi.Input<string>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * Monitor or Monitor and Protect
     */
    protectionMode?: pulumi.Input<string>;
}

export interface CloudAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudAccountV2AlibabaCloud {
    /**
     * Alibaba account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Account type -  account
     */
    accountType?: pulumi.Input<string>;
    /**
     * Added on time stamp
     */
    addedOn?: pulumi.Input<number>;
    /**
     * Cloud type
     */
    cloudType?: pulumi.Input<string>;
    /**
     * Deployment type
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Ingestion endtime
     */
    ingestionEndtime?: pulumi.Input<number>;
    /**
     * Last full snapshot
     */
    lastFullSnapshot?: pulumi.Input<number>;
    /**
     * Last modified by
     */
    lastModifiedBy?: pulumi.Input<string>;
    /**
     * Last modified time stamp
     */
    lastModifiedTs?: pulumi.Input<number>;
    /**
     * Last updated time stamp
     */
    lastUpdated?: pulumi.Input<number>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * Protection mode
     */
    protectionMode?: pulumi.Input<string>;
    /**
     * Unique identifier for an Alibaba RAM role resource
     */
    ramArn: pulumi.Input<string>;
    /**
     * Whether or not the storage scan is enabled
     */
    storageScanEnabled?: pulumi.Input<boolean>;
}

export interface CloudAccountV2Aws {
    /**
     * AWS account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Account type - organization or account
     */
    accountType?: pulumi.Input<string>;
    /**
     * Account type id
     */
    accountTypeId?: pulumi.Input<number>;
    /**
     * Cloud type
     */
    cloudType?: pulumi.Input<string>;
    /**
     * Created epoch millis
     */
    createdEpochMillis?: pulumi.Input<number>;
    /**
     * Customer name
     */
    customerName?: pulumi.Input<string>;
    /**
     * Deleted
     */
    deleted?: pulumi.Input<boolean>;
    /**
     * Deployment type
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * EventbridgeRuleNamePrefix
     */
    eventbridgeRuleNamePrefix?: pulumi.Input<string>;
    externalId?: pulumi.Input<string>;
    /**
     * Features applicable for aws account
     */
    features?: pulumi.Input<pulumi.Input<inputs.CloudAccountV2AwsFeature>[]>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Member role
     */
    hasMemberRole?: pulumi.Input<boolean>;
    /**
     * External id
     */
    lastModifiedBy?: pulumi.Input<string>;
    /**
     * Last modified epoch millis
     */
    lastModifiedEpochMillis?: pulumi.Input<number>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * Parent id
     */
    parentId?: pulumi.Input<string>;
    /**
     * Protection mode
     */
    protectionMode?: pulumi.Input<string>;
    /**
     * Unique identifier for an AWS resource (ARN)
     */
    roleArn: pulumi.Input<string>;
    /**
     * Storage scan config
     */
    storageScanConfigs?: pulumi.Input<pulumi.Input<inputs.CloudAccountV2AwsStorageScanConfig>[]>;
    /**
     * Storage UUID
     */
    storageUuid?: pulumi.Input<string>;
    /**
     * Template url
     */
    templateUrl?: pulumi.Input<string>;
}

export interface CloudAccountV2AwsFeature {
    /**
     * Feature name
     */
    name: pulumi.Input<string>;
    /**
     * Feature state, one of enabled and disabled
     */
    state: pulumi.Input<string>;
}

export interface CloudAccountV2AwsStorageScanConfig {
    /**
     * Buckets
     */
    buckets: pulumi.Input<pulumi.Input<inputs.CloudAccountV2AwsStorageScanConfigBucket>[]>;
    /**
     * Scan option
     */
    scanOption: pulumi.Input<string>;
    /**
     * Scan topic arn
     */
    snsTopicArn: pulumi.Input<string>;
}

export interface CloudAccountV2AwsStorageScanConfigBucket {
    /**
     * Backward
     */
    backwards?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Forward
     */
    forwards?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAccountV2Azure {
    /**
     * Azure account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Account type - tenant or account
     */
    accountType?: pulumi.Input<string>;
    /**
     * Application ID registered with Active Directory
     */
    clientId: pulumi.Input<string>;
    /**
     * Cloud type
     */
    cloudType?: pulumi.Input<string>;
    /**
     * Created epoch millis
     */
    createdEpochMillis?: pulumi.Input<number>;
    /**
     * Customer name
     */
    customerName?: pulumi.Input<string>;
    /**
     * Deleted
     */
    deleted?: pulumi.Input<boolean>;
    /**
     * Deployment type
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * Deployment type description. Valid values : Commercial or Government
     */
    deploymentTypeDescription?: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Environment type
     */
    environmentType?: pulumi.Input<string>;
    /**
     * Features applicable for azure account
     */
    features?: pulumi.Input<pulumi.Input<inputs.CloudAccountV2AzureFeature>[]>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Application ID key
     */
    key: pulumi.Input<string>;
    /**
     * Last modified by
     */
    lastModifiedBy?: pulumi.Input<string>;
    /**
     * Last modified epoch millis
     */
    lastModifiedEpochMillis?: pulumi.Input<number>;
    /**
     * Automatically ingest flow logs
     */
    monitorFlowLogs?: pulumi.Input<boolean>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * Parent id
     */
    parentId?: pulumi.Input<string>;
    /**
     * Protection mode
     */
    protectionMode?: pulumi.Input<string>;
    /**
     * Unique ID of the service principle object associated with the Prisma Cloud application that you create
     */
    servicePrincipalId: pulumi.Input<string>;
    /**
     * Template url
     */
    templateUrl?: pulumi.Input<string>;
    /**
     * Active Directory ID associated with Azure
     */
    tenantId: pulumi.Input<string>;
}

export interface CloudAccountV2AzureFeature {
    /**
     * Feature name
     */
    name: pulumi.Input<string>;
    /**
     * Feature state, one of enabled and disabled
     */
    state: pulumi.Input<string>;
}

export interface CloudAccountV2Gcp {
    /**
     * Cloud account group creation mode. Valid values - MANUAL, AUTO or RECURSIVE
     */
    accountGroupCreationMode?: pulumi.Input<string>;
    /**
     * GCP project ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Account type - account, masterServiceAccount or organization
     */
    accountType: pulumi.Input<string>;
    /**
     * Added on time stamp
     */
    addedOnTs?: pulumi.Input<number>;
    /**
     * Authentication type
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * Cloud type
     */
    cloudType?: pulumi.Input<string>;
    /**
     * Enable or disable compressed network flow log generation. Default value: `false`
     */
    compressionEnabled?: pulumi.Input<boolean>;
    /**
     * Account created epoch time
     */
    createdEpochMillis?: pulumi.Input<number>;
    /**
     * Content of the JSON credentials file
     */
    credentials: pulumi.Input<string>;
    /**
     * Prisma customer name
     */
    customerName?: pulumi.Input<string>;
    /**
     * Project ID where the Dataflow API is enabled. Required if `compressionEnabled` is set to `true` and if the `accountType` is `organization`. Optional if the `accountType` is `account` or `masterServiceAccount`
     */
    dataflowEnabledProject?: pulumi.Input<string>;
    /**
     * Account group id to which you are assigning this account
     */
    defaultAccountGroupId?: pulumi.Input<string>;
    /**
     * Whether the account is deleted or not
     */
    deleted?: pulumi.Input<boolean>;
    /**
     * Deployment type
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * Deployment type description
     */
    deploymentTypeDescription?: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Features applicable for gcp account
     */
    features?: pulumi.Input<pulumi.Input<inputs.CloudAccountV2GcpFeature>[]>;
    /**
     * Cloud Storage Bucket name that is used store the flow logs
     */
    flowLogStorageBucket?: pulumi.Input<string>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Last modified by
     */
    lastModifiedBy?: pulumi.Input<string>;
    /**
     * Last modified at epoch millis
     */
    lastModifiedEpochMillis?: pulumi.Input<number>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * Parent Id
     */
    parentId?: pulumi.Input<string>;
    /**
     * GCP project ID
     */
    projectId?: pulumi.Input<string>;
    /**
     * Protection mode
     */
    protectionMode?: pulumi.Input<string>;
    /**
     * Service account email
     */
    serviceAccountEmail?: pulumi.Input<string>;
    /**
     * Storage scan enabled
     */
    storageScanEnabled?: pulumi.Input<boolean>;
}

export interface CloudAccountV2GcpFeature {
    /**
     * Feature name
     */
    name: pulumi.Input<string>;
    /**
     * Feature state, one of enabled and disabled
     */
    state: pulumi.Input<string>;
}

export interface CloudAccountV2Ibm {
    /**
     * IBM account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Account type -  account
     */
    accountType?: pulumi.Input<string>;
    /**
     * Added on time stamp
     */
    addedOnTs?: pulumi.Input<number>;
    /**
     * IBM service API key
     */
    apiKey: pulumi.Input<string>;
    /**
     * Cloud type
     */
    cloudType?: pulumi.Input<string>;
    /**
     * Created epoch millis
     */
    createdEpochMillis?: pulumi.Input<number>;
    /**
     * Customer name
     */
    customerName?: pulumi.Input<string>;
    /**
     * Deleted
     */
    deleted?: pulumi.Input<boolean>;
    /**
     * Deployment type
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * Deployment type description. Valid values : Commercial or Government
     */
    deploymentTypeDescription?: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * IBM account features
     */
    features?: pulumi.Input<pulumi.Input<inputs.CloudAccountV2IbmFeature>[]>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Last modified by
     */
    lastModifiedBy?: pulumi.Input<string>;
    /**
     * Last modified epoch millis
     */
    lastModifiedEpochMillis?: pulumi.Input<number>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * Parent Id
     */
    parentId?: pulumi.Input<string>;
    /**
     * Protection mode
     */
    protectionMode?: pulumi.Input<string>;
    /**
     * Whether or not the storage scan is enabled
     */
    storageScanEnabled?: pulumi.Input<boolean>;
    /**
     * IBM service ID
     */
    svcIdIamId: pulumi.Input<string>;
}

export interface CloudAccountV2IbmFeature {
    name: pulumi.Input<string>;
    state: pulumi.Input<string>;
}

export interface CloudAccountV2Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CollectionAssetGroup {
    /**
     * List of account group ids
     */
    accountGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of account group ids
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of account group ids
     */
    repositoryIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatapatternRegex {
    /**
     * Regex
     */
    regex: pulumi.Input<string>;
    /**
     * Weight
     */
    weight?: pulumi.Input<number>;
}

export interface DataprofileDataPatternsRule1 {
    /**
     * List of DataPattern Rules
     */
    dataPatternRules: pulumi.Input<pulumi.Input<inputs.DataprofileDataPatternsRule1DataPatternRule>[]>;
    /**
     * Pattern operator type
     */
    operatorType?: pulumi.Input<string>;
}

export interface DataprofileDataPatternsRule1DataPatternRule {
    /**
     * Confidence level
     */
    confidenceLevel: pulumi.Input<string>;
    /**
     * Detection technique
     */
    detectionTechnique?: pulumi.Input<string>;
    /**
     * Match type
     */
    matchType: pulumi.Input<string>;
    /**
     * Pattern name
     */
    name: pulumi.Input<string>;
    /**
     * Occurrence count
     */
    occurrenceCount?: pulumi.Input<number>;
    /**
     * High Occurrence value
     */
    occurrenceHigh?: pulumi.Input<number>;
    /**
     * Low Occurrence value
     */
    occurrenceLow?: pulumi.Input<number>;
    /**
     * Occurrence operator type
     */
    occurrenceOperatorType: pulumi.Input<string>;
    /**
     * Pattern ID
     */
    patternId?: pulumi.Input<string>;
    /**
     * List of supported confidence levels
     */
    supportedConfidenceLevels?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAlertsFilter {
    /**
     * Param name to filter on
     */
    name: string;
    /**
     * Operator between the name and value params
     */
    operator?: string;
    /**
     * Param value for the filter
     */
    value: string;
}

export interface GetAlertsFilterArgs {
    /**
     * Param name to filter on
     */
    name: pulumi.Input<string>;
    /**
     * Operator between the name and value params
     */
    operator?: pulumi.Input<string>;
    /**
     * Param value for the filter
     */
    value: pulumi.Input<string>;
}

export interface GetAlertsTimeRange {
    /**
     * An absolute time range
     */
    absolutes?: inputs.GetAlertsTimeRangeAbsolute[];
    /**
     * Relative time range
     */
    relatives?: inputs.GetAlertsTimeRangeRelative[];
    /**
     * From some time in the past to now
     */
    toNows?: inputs.GetAlertsTimeRangeToNow[];
}

export interface GetAlertsTimeRangeArgs {
    /**
     * An absolute time range
     */
    absolutes?: pulumi.Input<pulumi.Input<inputs.GetAlertsTimeRangeAbsoluteArgs>[]>;
    /**
     * Relative time range
     */
    relatives?: pulumi.Input<pulumi.Input<inputs.GetAlertsTimeRangeRelativeArgs>[]>;
    /**
     * From some time in the past to now
     */
    toNows?: pulumi.Input<pulumi.Input<inputs.GetAlertsTimeRangeToNowArgs>[]>;
}

export interface GetAlertsTimeRangeAbsolute {
    /**
     * End time
     */
    end: number;
    /**
     * Start time
     */
    start: number;
}

export interface GetAlertsTimeRangeAbsoluteArgs {
    /**
     * End time
     */
    end: pulumi.Input<number>;
    /**
     * Start time
     */
    start: pulumi.Input<number>;
}

export interface GetAlertsTimeRangeRelative {
    /**
     * The time number
     */
    amount: number;
    /**
     * The time unit
     */
    unit: string;
}

export interface GetAlertsTimeRangeRelativeArgs {
    /**
     * The time number
     */
    amount: pulumi.Input<number>;
    /**
     * The time unit
     */
    unit: pulumi.Input<string>;
}

export interface GetAlertsTimeRangeToNow {
    /**
     * The time unit
     */
    unit: string;
}

export interface GetAlertsTimeRangeToNowArgs {
    /**
     * The time unit
     */
    unit: pulumi.Input<string>;
}

export interface GetOrgCloudAccountOci {
    /**
     * Oci account ID
     */
    accountId?: string;
    /**
     * Account type - account or tenant
     */
    accountType?: string;
    /**
     * Account group id for this account
     */
    defaultAccountGroupId?: string;
    /**
     * Whether or not the account is enabled
     */
    enabled?: boolean;
    /**
     * OCI identity group name that you define. Can be an existing group
     */
    groupName?: string;
    /**
     * OCI tenancy home region
     */
    homeRegion?: string;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name?: string;
    /**
     * OCI identity policy name that you define. Can be an existing policy that has the right policy statements
     */
    policyName?: string;
    /**
     * OCI identity user name that you define. Can be an existing user that has the right privileges
     */
    userName?: string;
    /**
     * OCI identity user ocid that you define. Can be an existing user that has the right privileges
     */
    userOcid?: string;
}

export interface GetOrgCloudAccountOciArgs {
    /**
     * Oci account ID
     */
    accountId?: pulumi.Input<string>;
    /**
     * Account type - account or tenant
     */
    accountType?: pulumi.Input<string>;
    /**
     * Account group id for this account
     */
    defaultAccountGroupId?: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * OCI identity group name that you define. Can be an existing group
     */
    groupName?: pulumi.Input<string>;
    /**
     * OCI tenancy home region
     */
    homeRegion?: pulumi.Input<string>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name?: pulumi.Input<string>;
    /**
     * OCI identity policy name that you define. Can be an existing policy that has the right policy statements
     */
    policyName?: pulumi.Input<string>;
    /**
     * OCI identity user name that you define. Can be an existing user that has the right privileges
     */
    userName?: pulumi.Input<string>;
    /**
     * OCI identity user ocid that you define. Can be an existing user that has the right privileges
     */
    userOcid?: pulumi.Input<string>;
}

export interface IntegrationIntegrationConfig {
    /**
     * Tenable access key
     */
    accessKey?: pulumi.Input<string>;
    /**
     * AWS/Azure account ID for AWS Security Hub/Azure Service Bus Queue integration
     */
    accountId?: pulumi.Input<string>;
    /**
     * Demisto API key
     */
    apiKey?: pulumi.Input<string>;
    /**
     * Okta API Token
     */
    apiToken?: pulumi.Input<string>;
    /**
     * PagerDuty/Splunk authentication token for the event collector
     */
    authToken?: pulumi.Input<string>;
    /**
     * Qualys Security Operations Center server API URL (without "http(s)")
     */
    baseUrl?: pulumi.Input<string>;
    /**
     * Connection string for azure service bus queue integration
     */
    connectionString?: pulumi.Input<string>;
    /**
     * Okta Domain
     */
    domain?: pulumi.Input<string>;
    /**
     * AWS external ID for Amazon S3 integration
     */
    externalId?: pulumi.Input<string>;
    /**
     * Webhook headers
     */
    headers?: pulumi.Input<pulumi.Input<inputs.IntegrationIntegrationConfigHeader>[]>;
    /**
     * ServiceNow/Demisto URL
     */
    hostUrl?: pulumi.Input<string>;
    /**
     * PagerDuty integration key
     */
    integrationKey?: pulumi.Input<string>;
    /**
     * (Qualys/ServiceNow) Login
     */
    login?: pulumi.Input<string>;
    /**
     * true = specific IAM credentials are specified for SQS queue access
     */
    moreInfo?: pulumi.Input<boolean>;
    /**
     * GCP Organization ID for Google CSCC integration
     */
    orgId?: pulumi.Input<string>;
    /**
     * Snow Flake Pass phrase
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * (Qualys/ServiceNow) Password
     */
    password?: pulumi.Input<string>;
    /**
     * Snow Flake Pipename
     */
    pipeName?: pulumi.Input<string>;
    /**
     * Snow Flake private key
     */
    privateKey?: pulumi.Input<string>;
    /**
     * The Queue URL you used when you configured Prisma Cloud in Amazon SQS or Azure Service Bus Queue
     */
    queueUrl?: pulumi.Input<string>;
    /**
     * AWS region for Amazon S3 integration
     */
    region?: pulumi.Input<string>;
    /**
     * AWS regions for AWS Security Hub integration
     */
    regions?: pulumi.Input<pulumi.Input<inputs.IntegrationIntegrationConfigRegion>[]>;
    /**
     * AWS role ARN for Amazon S3 integration
     */
    roleArn?: pulumi.Input<string>;
    /**
     * File Roll Up Time in minutes for AWS S3 integration and snowflake Integration
     */
    rollUpInterval?: pulumi.Input<number>;
    /**
     * AWS S3 URI for Amazon S3 integration
     */
    s3Uri?: pulumi.Input<string>;
    /**
     * Tenable Secret Key
     */
    secretKey?: pulumi.Input<string>;
    /**
     * GCP Source ID for Google CSCC integration
     */
    sourceId?: pulumi.Input<string>;
    /**
     * Source type for splunk integration
     */
    sourceType?: pulumi.Input<string>;
    /**
     * Amazon S3 Id for snowflake integration
     */
    stagingIntegrationId?: pulumi.Input<string>;
    /**
     * Key/value pairs that identify the ServiceNow module tables with which to integrate (e.g. - incident, sn_si_incident, or em_event)
     */
    tables?: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
    /**
     * Webhook URL or Splunk HTTP event collector URL
     */
    url?: pulumi.Input<string>;
    /**
     * Snow Flake Username
     */
    userName?: pulumi.Input<string>;
    /**
     * ServiceNow release version
     */
    version?: pulumi.Input<string>;
    /**
     * Webhook url for slack integration
     */
    webhookUrl?: pulumi.Input<string>;
}

export interface IntegrationIntegrationConfigHeader {
    /**
     * Header name
     */
    key: pulumi.Input<string>;
    /**
     * Read only
     */
    readOnly?: pulumi.Input<boolean>;
    /**
     * Secure
     */
    secure?: pulumi.Input<boolean>;
    /**
     * Header value
     */
    value: pulumi.Input<string>;
}

export interface IntegrationIntegrationConfigRegion {
    /**
     * AWS region code
     */
    apiIdentifier?: pulumi.Input<string>;
    /**
     * Cloud Type
     */
    cloudType?: pulumi.Input<string>;
    /**
     * AWS region name
     */
    name?: pulumi.Input<string>;
}

export interface IntegrationReason {
    details: pulumi.Input<pulumi.Input<inputs.IntegrationReasonDetail>[]>;
    errorType: pulumi.Input<string>;
    lastUpdated: pulumi.Input<number>;
    message: pulumi.Input<string>;
}

export interface IntegrationReasonDetail {
    message: pulumi.Input<string>;
    statusCode: pulumi.Input<number>;
    subject: pulumi.Input<string>;
}

export interface NotificationTemplateTemplateConfig {
    basicConfigs?: pulumi.Input<pulumi.Input<inputs.NotificationTemplateTemplateConfigBasicConfig>[]>;
    dismisseds?: pulumi.Input<pulumi.Input<inputs.NotificationTemplateTemplateConfigDismissed>[]>;
    opens?: pulumi.Input<pulumi.Input<inputs.NotificationTemplateTemplateConfigOpen>[]>;
    resolveds?: pulumi.Input<pulumi.Input<inputs.NotificationTemplateTemplateConfigResolved>[]>;
    snoozeds?: pulumi.Input<pulumi.Input<inputs.NotificationTemplateTemplateConfigSnoozed>[]>;
}

export interface NotificationTemplateTemplateConfigBasicConfig {
    /**
     * AliasField
     */
    aliasField?: pulumi.Input<string>;
    /**
     * displayName
     */
    displayName?: pulumi.Input<string>;
    /**
     * fieldName
     */
    fieldName?: pulumi.Input<string>;
    /**
     * MaxLength
     */
    maxLength?: pulumi.Input<number>;
    /**
     * options
     */
    options?: pulumi.Input<pulumi.Input<inputs.NotificationTemplateTemplateConfigBasicConfigOption>[]>;
    /**
     * redlockMapping
     */
    redlockMapping?: pulumi.Input<boolean>;
    /**
     * required
     */
    required?: pulumi.Input<boolean>;
    /**
     * type
     */
    type?: pulumi.Input<string>;
    /**
     * type Ahead URI
     */
    typeAheadUri?: pulumi.Input<string>;
    /**
     * value
     */
    value?: pulumi.Input<string>;
}

export interface NotificationTemplateTemplateConfigBasicConfigOption {
    /**
     * id
     */
    id?: pulumi.Input<string>;
    /**
     * key
     */
    key?: pulumi.Input<string>;
    /**
     * name
     */
    name?: pulumi.Input<string>;
}

export interface NotificationTemplateTemplateConfigDismissed {
    /**
     * AliasField
     */
    aliasField?: pulumi.Input<string>;
    /**
     * displayName
     */
    displayName?: pulumi.Input<string>;
    /**
     * fieldName
     */
    fieldName?: pulumi.Input<string>;
    /**
     * MaxLength
     */
    maxLength?: pulumi.Input<number>;
    /**
     * options
     */
    options?: pulumi.Input<pulumi.Input<inputs.NotificationTemplateTemplateConfigDismissedOption>[]>;
    /**
     * redlockMapping
     */
    redlockMapping?: pulumi.Input<boolean>;
    /**
     * required
     */
    required?: pulumi.Input<boolean>;
    /**
     * type
     */
    type?: pulumi.Input<string>;
    /**
     * type Ahead URI
     */
    typeAheadUri?: pulumi.Input<string>;
    /**
     * value
     */
    value?: pulumi.Input<string>;
}

export interface NotificationTemplateTemplateConfigDismissedOption {
    /**
     * id
     */
    id?: pulumi.Input<string>;
    /**
     * key
     */
    key?: pulumi.Input<string>;
    /**
     * name
     */
    name?: pulumi.Input<string>;
}

export interface NotificationTemplateTemplateConfigOpen {
    /**
     * AliasField
     */
    aliasField?: pulumi.Input<string>;
    /**
     * displayName
     */
    displayName?: pulumi.Input<string>;
    /**
     * fieldName
     */
    fieldName?: pulumi.Input<string>;
    /**
     * MaxLength
     */
    maxLength?: pulumi.Input<number>;
    /**
     * options
     */
    options?: pulumi.Input<pulumi.Input<inputs.NotificationTemplateTemplateConfigOpenOption>[]>;
    /**
     * redlockMapping
     */
    redlockMapping?: pulumi.Input<boolean>;
    /**
     * required
     */
    required?: pulumi.Input<boolean>;
    /**
     * type
     */
    type?: pulumi.Input<string>;
    /**
     * type Ahead URI
     */
    typeAheadUri?: pulumi.Input<string>;
    /**
     * value
     */
    value?: pulumi.Input<string>;
}

export interface NotificationTemplateTemplateConfigOpenOption {
    /**
     * id
     */
    id?: pulumi.Input<string>;
    /**
     * key
     */
    key?: pulumi.Input<string>;
    /**
     * name
     */
    name?: pulumi.Input<string>;
}

export interface NotificationTemplateTemplateConfigResolved {
    /**
     * AliasField
     */
    aliasField?: pulumi.Input<string>;
    /**
     * displayName
     */
    displayName?: pulumi.Input<string>;
    /**
     * fieldName
     */
    fieldName?: pulumi.Input<string>;
    /**
     * MaxLength
     */
    maxLength?: pulumi.Input<number>;
    /**
     * options
     */
    options?: pulumi.Input<pulumi.Input<inputs.NotificationTemplateTemplateConfigResolvedOption>[]>;
    /**
     * redlockMapping
     */
    redlockMapping?: pulumi.Input<boolean>;
    /**
     * required
     */
    required?: pulumi.Input<boolean>;
    /**
     * type
     */
    type?: pulumi.Input<string>;
    /**
     * type Ahead URI
     */
    typeAheadUri?: pulumi.Input<string>;
    /**
     * value
     */
    value?: pulumi.Input<string>;
}

export interface NotificationTemplateTemplateConfigResolvedOption {
    /**
     * id
     */
    id?: pulumi.Input<string>;
    /**
     * key
     */
    key?: pulumi.Input<string>;
    /**
     * name
     */
    name?: pulumi.Input<string>;
}

export interface NotificationTemplateTemplateConfigSnoozed {
    /**
     * AliasField
     */
    aliasField?: pulumi.Input<string>;
    /**
     * displayName
     */
    displayName?: pulumi.Input<string>;
    /**
     * fieldName
     */
    fieldName?: pulumi.Input<string>;
    /**
     * MaxLength
     */
    maxLength?: pulumi.Input<number>;
    /**
     * options
     */
    options?: pulumi.Input<pulumi.Input<inputs.NotificationTemplateTemplateConfigSnoozedOption>[]>;
    /**
     * redlockMapping
     */
    redlockMapping?: pulumi.Input<boolean>;
    /**
     * required
     */
    required?: pulumi.Input<boolean>;
    /**
     * type
     */
    type?: pulumi.Input<string>;
    /**
     * type Ahead URI
     */
    typeAheadUri?: pulumi.Input<string>;
    /**
     * value
     */
    value?: pulumi.Input<string>;
}

export interface NotificationTemplateTemplateConfigSnoozedOption {
    /**
     * id
     */
    id?: pulumi.Input<string>;
    /**
     * key
     */
    key?: pulumi.Input<string>;
    /**
     * name
     */
    name?: pulumi.Input<string>;
}

export interface OrgCloudAccountAws {
    /**
     * AWS account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Account type - organization or account
     */
    accountType?: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * AWS account external ID
     */
    externalId: pulumi.Input<string>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of hierarchy selection. Each item has resource id, display name, node type and selection type
     */
    hierarchySelections?: pulumi.Input<pulumi.Input<inputs.OrgCloudAccountAwsHierarchySelection>[]>;
    /**
     * AWS Member account role's external ID
     */
    memberExternalId: pulumi.Input<string>;
    /**
     * AWS Member account role name
     */
    memberRoleName: pulumi.Input<string>;
    /**
     * true = The member role created using stack set exists in all the member accounts. All the Org accounts will be added.
     * false = Only the master account will be added.
     */
    memberRoleStatus?: pulumi.Input<boolean>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * Monitor or Monitor and Protect
     */
    protectionMode?: pulumi.Input<string>;
    /**
     * Unique identifier for an AWS resource (ARN)
     */
    roleArn: pulumi.Input<string>;
}

export interface OrgCloudAccountAwsHierarchySelection {
    /**
     * Display name for AWS OU, AWS account, or AWS organization
     */
    displayName: pulumi.Input<string>;
    /**
     * Valid values: OU, ACCOUNT, ORG
     */
    nodeType: pulumi.Input<string>;
    /**
     * Resource ID. Valid values are AWS OU ID, AWS account ID, or AWS Organization ID. Note you must escape any double quotes in the resource ID with a backslash.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Selection type. Valid values: INCLUDE to include the specified resource to onboard, EXCLUDE to exclude the specified resource and onboard the rest, ALL to onboard all resources in the organization.
     */
    selectionType: pulumi.Input<string>;
}

export interface OrgCloudAccountAzure {
    /**
     * Azure account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Account type - account or tenant
     */
    accountType?: pulumi.Input<string>;
    /**
     * Application ID registered with Active Directory
     */
    clientId: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of subscriptions and/or management groups to onboard
     */
    hierarchySelections?: pulumi.Input<pulumi.Input<inputs.OrgCloudAccountAzureHierarchySelection>[]>;
    /**
     * Application ID key
     */
    key: pulumi.Input<string>;
    /**
     * Automatically ingest flow logs
     */
    monitorFlowLogs: pulumi.Input<boolean>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * Monitor or Monitor and Protect
     */
    protectionMode?: pulumi.Input<string>;
    /**
     * Azure tenant has children. Must be set to true when azure tenant is onboarded with children
     */
    rootSyncEnabled?: pulumi.Input<boolean>;
    /**
     * Unique ID of the service principal object associated with the Prisma Cloud application that you create
     */
    servicePrincipalId: pulumi.Input<string>;
    /**
     * Active Directory ID associated with Azure
     */
    tenantId: pulumi.Input<string>;
}

export interface OrgCloudAccountAzureHierarchySelection {
    /**
     * Display name for management group or subscription
     */
    displayName: pulumi.Input<string>;
    /**
     * Node type. Valid values: SUBSCRIPTION, TENANT, MANAGEMENT_GROUP
     */
    nodeType: pulumi.Input<string>;
    /**
     * Resource ID. Management group ID or subscription ID.
     * Note you must escape any double quotes in the resource ID with a backslash.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Selection type. Valid values: INCLUDE to include the specified resource to onboard, EXCLUDE to exclude the specified resource and onboard the rest, ALL to onboard all resources in the tenant.
     */
    selectionType: pulumi.Input<string>;
}

export interface OrgCloudAccountGcp {
    /**
     * Cloud account group creation mode. Valid values - MANUAL, AUTO or RECURSIVE
     */
    accountGroupCreationMode?: pulumi.Input<string>;
    /**
     * GCP project ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Account type - organization or account
     */
    accountType?: pulumi.Input<string>;
    /**
     * Enable flow log compression
     */
    compressionEnabled?: pulumi.Input<boolean>;
    /**
     * Content of the JSON credentials file
     */
    credentialsJson: pulumi.Input<string>;
    /**
     * GCP project for flow log compression
     */
    dataflowEnabledProject?: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * GCP flow logs storage bucket
     */
    flowLogStorageBucket?: pulumi.Input<string>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of hierarchy selection. Each item has resource id, display name, node type and selection type
     */
    hierarchySelections?: pulumi.Input<pulumi.Input<inputs.OrgCloudAccountGcpHierarchySelection>[]>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * GCP organization name
     */
    organizationName: pulumi.Input<string>;
    /**
     * Protection Mode - Monitor or Monitor and Protect
     */
    protectionMode?: pulumi.Input<string>;
}

export interface OrgCloudAccountGcpHierarchySelection {
    /**
     * Display name for folder, project, or organization
     */
    displayName: pulumi.Input<string>;
    /**
     * Node type. Valid values - FOLDER, PROJECT, ORG
     */
    nodeType: pulumi.Input<string>;
    /**
     * Resource ID. For folders, format is folders/{folder ID}. For projects, format is {project number}. For orgs, format is organizations/{org ID}
     */
    resourceId: pulumi.Input<string>;
    /**
     * Selection type. Valid values: INCLUDE, EXCLUDE, ALL. If hierarchySelection.nodeType is PROJECT or FOLDER, then a valid value is either INCLUDE or EXCLUDE
     */
    selectionType: pulumi.Input<string>;
}

export interface OrgCloudAccountOci {
    /**
     * Org account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Account type - account or tenant
     */
    accountType: pulumi.Input<string>;
    /**
     * Account group id for this account
     */
    defaultAccountGroupId: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * OCI identity group name that you define. Can be an existing group
     */
    groupName: pulumi.Input<string>;
    /**
     * OCI tenancy home region
     */
    homeRegion: pulumi.Input<string>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * OCI identity policy name that you define. Can be an existing policy that has the right policy statements
     */
    policyName: pulumi.Input<string>;
    /**
     * OCI identity user name that you define. Can be an existing user that has the right privileges
     */
    userName: pulumi.Input<string>;
    /**
     * OCI identity user Ocid that you define. Can be an existing user that has the right privileges
     */
    userOcid: pulumi.Input<string>;
}

export interface OrgCloudAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OrgCloudAccountV2Aws {
    /**
     * AWS account ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Account type - organization or account
     */
    accountType?: pulumi.Input<string>;
    /**
     * Cloud type
     */
    cloudType?: pulumi.Input<string>;
    /**
     * Created epoch millis
     */
    createdEpochMillis?: pulumi.Input<number>;
    /**
     * Customer name
     */
    customerName?: pulumi.Input<string>;
    /**
     * Account group id to which you are assigning this account
     */
    defaultAccountGroupId?: pulumi.Input<string>;
    /**
     * Deleted
     */
    deleted?: pulumi.Input<boolean>;
    /**
     * Deployment type
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * EventbridgeRuleNamePrefix
     */
    eventbridgeRuleNamePrefix?: pulumi.Input<string>;
    externalId?: pulumi.Input<string>;
    /**
     * Features applicable for aws account
     */
    features?: pulumi.Input<pulumi.Input<inputs.OrgCloudAccountV2AwsFeature>[]>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Member role
     */
    hasMemberRole?: pulumi.Input<boolean>;
    /**
     * List of hierarchy selection. Each item has resource id, display name, node type and selection type
     */
    hierarchySelections?: pulumi.Input<pulumi.Input<inputs.OrgCloudAccountV2AwsHierarchySelection>[]>;
    /**
     * External id
     */
    lastModifiedBy?: pulumi.Input<string>;
    /**
     * Last modified epoch millis
     */
    lastModifiedEpochMillis?: pulumi.Input<number>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * Parent id
     */
    parentId?: pulumi.Input<string>;
    /**
     * Protection mode
     */
    protectionMode?: pulumi.Input<string>;
    /**
     * Unique identifier for an AWS resource (ARN)
     */
    roleArn: pulumi.Input<string>;
    /**
     * Template url
     */
    templateUrl?: pulumi.Input<string>;
}

export interface OrgCloudAccountV2AwsFeature {
    /**
     * Feature name
     */
    name: pulumi.Input<string>;
    /**
     * Feature state, one of enabled and disabled
     */
    state: pulumi.Input<string>;
}

export interface OrgCloudAccountV2AwsHierarchySelection {
    /**
     * Display name for AWS OU, AWS account, or AWS organization
     */
    displayName: pulumi.Input<string>;
    /**
     * Valid values: OU, ACCOUNT, ORG
     */
    nodeType: pulumi.Input<string>;
    /**
     * Resource ID. Valid values are AWS OU ID, AWS account ID, or AWS Organization ID. Note you must escape any double quotes in the resource ID with a backslash.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Selection type. Valid values: INCLUDE to include the specified resource to onboard, EXCLUDE to exclude the specified resource and onboard the rest, ALL to onboard all resources in the organization.
     */
    selectionType: pulumi.Input<string>;
}

export interface OrgCloudAccountV2Azure {
    /**
     * Azure account ID
     */
    accountId?: pulumi.Input<string>;
    /**
     * Account type - tenant or account
     */
    accountType?: pulumi.Input<string>;
    /**
     * Application ID registered with Active Directory
     */
    clientId: pulumi.Input<string>;
    /**
     * Cloud type
     */
    cloudType?: pulumi.Input<string>;
    /**
     * Created epoch millis
     */
    createdEpochMillis?: pulumi.Input<number>;
    /**
     * Customer name
     */
    customerName?: pulumi.Input<string>;
    /**
     * Account group id to which you are assigning this account
     */
    defaultAccountGroupId?: pulumi.Input<string>;
    /**
     * Deleted
     */
    deleted?: pulumi.Input<boolean>;
    /**
     * Deployment type
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * Deployment type description. Valid values : Commercial or Government
     */
    deploymentTypeDescription?: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Environment type
     */
    environmentType?: pulumi.Input<string>;
    /**
     * Features applicable for azure account
     */
    features?: pulumi.Input<pulumi.Input<inputs.OrgCloudAccountV2AzureFeature>[]>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of hierarchy selection. Each item has resource id, display name, node type and selection type
     */
    hierarchySelections?: pulumi.Input<pulumi.Input<inputs.OrgCloudAccountV2AzureHierarchySelection>[]>;
    /**
     * Application ID key
     */
    key: pulumi.Input<string>;
    /**
     * Last modified by
     */
    lastModifiedBy?: pulumi.Input<string>;
    /**
     * Last modified epoch millis
     */
    lastModifiedEpochMillis?: pulumi.Input<number>;
    /**
     * Member sync enabled
     */
    memberSyncEnabled?: pulumi.Input<boolean>;
    /**
     * Automatically ingest flow logs
     */
    monitorFlowLogs?: pulumi.Input<boolean>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * Parent id
     */
    parentId?: pulumi.Input<string>;
    /**
     * Protection mode
     */
    protectionMode?: pulumi.Input<string>;
    /**
     * Azure tenant has children. Must be set to true when azure tenant is onboarded with children
     */
    rootSyncEnabled?: pulumi.Input<boolean>;
    /**
     * Unique ID of the service principle object associated with the Prisma Cloud application that you create
     */
    servicePrincipalId: pulumi.Input<string>;
    /**
     * Template url
     */
    templateUrl?: pulumi.Input<string>;
    /**
     * Active Directory ID associated with Azure
     */
    tenantId: pulumi.Input<string>;
}

export interface OrgCloudAccountV2AzureFeature {
    /**
     * Feature name
     */
    name: pulumi.Input<string>;
    /**
     * Feature state, one of enabled and disabled
     */
    state: pulumi.Input<string>;
}

export interface OrgCloudAccountV2AzureHierarchySelection {
    /**
     * Display name for management group or subscription
     */
    displayName: pulumi.Input<string>;
    /**
     * Valid values: SUBSCRIPTION, TENANT, MANAGEMENT_GROUP
     */
    nodeType: pulumi.Input<string>;
    /**
     * Management group ID or subscription ID.
     * Note you must escape any double quotes in the resource ID with a backslash.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Selection type.Valid values: INCLUDE to include the specified resource to onboard, EXCLUDE to exclude the specified resource and onboard the rest, ALL to onboard all resources in the tenant.
     */
    selectionType: pulumi.Input<string>;
}

export interface OrgCloudAccountV2Gcp {
    /**
     * Cloud account group creation mode. Valid values - MANUAL, AUTO or RECURSIVE
     */
    accountGroupCreationMode?: pulumi.Input<string>;
    /**
     * GCP project ID
     */
    accountId: pulumi.Input<string>;
    /**
     * Account type - organization or account
     */
    accountType: pulumi.Input<string>;
    /**
     * Added on time stamp
     */
    addedOnTs?: pulumi.Input<number>;
    /**
     * Authentication type
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * Cloud type
     */
    cloudType?: pulumi.Input<string>;
    /**
     * Enable or disable compressed network flow log generation. Default value: `false`
     */
    compressionEnabled?: pulumi.Input<boolean>;
    /**
     * Account created epoch time
     */
    createdEpochMillis?: pulumi.Input<number>;
    /**
     * Content of the JSON credentials file
     */
    credentials: pulumi.Input<string>;
    /**
     * Customer name
     */
    customerName?: pulumi.Input<string>;
    /**
     * Project ID where the Dataflow API is enabled. Required if `compressionEnabled` is set to `true` and if the `accountType` is `organization`. Optional if the `accountType` is `account` or `masterServiceAccount`
     */
    dataflowEnabledProject?: pulumi.Input<string>;
    /**
     * Account group id to which you are assigning this account
     */
    defaultAccountGroupId: pulumi.Input<string>;
    /**
     * Whether the account is deleted or not
     */
    deleted?: pulumi.Input<boolean>;
    /**
     * Deployment type
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * Deployment type description
     */
    deploymentTypeDescription?: pulumi.Input<string>;
    /**
     * Whether or not the account is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Features applicable for aws account
     */
    features?: pulumi.Input<pulumi.Input<inputs.OrgCloudAccountV2GcpFeature>[]>;
    /**
     * Cloud Storage Bucket name that is used store the flow logs.
     */
    flowLogStorageBucket?: pulumi.Input<string>;
    /**
     * List of account IDs to which you are assigning this account
     */
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of hierarchy selection. Each item has resource id, display name, node type and selection type
     */
    hierarchySelections?: pulumi.Input<pulumi.Input<inputs.OrgCloudAccountV2GcpHierarchySelection>[]>;
    /**
     * Last modified by
     */
    lastModifiedBy?: pulumi.Input<string>;
    /**
     * Last modified at epoch millis
     */
    lastModifiedEpochMillis?: pulumi.Input<number>;
    /**
     * Name to be used for the account on the Prisma Cloud platform (must be unique)
     */
    name: pulumi.Input<string>;
    /**
     * GCP organization name
     */
    organizationName?: pulumi.Input<string>;
    /**
     * Parent id
     */
    parentId?: pulumi.Input<string>;
    /**
     * GCP project ID
     */
    projectId?: pulumi.Input<string>;
    /**
     * Protection mode
     */
    protectionMode?: pulumi.Input<string>;
    /**
     * Service account email
     */
    serviceAccountEmail?: pulumi.Input<string>;
    /**
     * Whether the storage scan is enabled
     */
    storageScanEnabled?: pulumi.Input<boolean>;
}

export interface OrgCloudAccountV2GcpFeature {
    /**
     * Feature name
     */
    name: pulumi.Input<string>;
    /**
     * Feature state, one of enabled and disabled
     */
    state: pulumi.Input<string>;
}

export interface OrgCloudAccountV2GcpHierarchySelection {
    /**
     * Display name for folder, project, or organization
     */
    displayName: pulumi.Input<string>;
    /**
     * Node type. Valid values - FOLDER, PROJECT, ORG
     */
    nodeType: pulumi.Input<string>;
    /**
     * Resource ID. For folders, format is folders/{folder ID}. For projects, format is {project number}. For orgs, format is organizations/{org ID}
     */
    resourceId: pulumi.Input<string>;
    /**
     * Selection type. Valid values: INCLUDE, EXCLUDE, ALL. If hierarchySelection.nodeType is PROJECT or FOLDER, then a valid value is either INCLUDE or EXCLUDE
     */
    selectionType: pulumi.Input<string>;
}

export interface OrgCloudAccountV2Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PermissionGroupFeature {
    /**
     * Feature name
     */
    featureName: pulumi.Input<string>;
    /**
     * Operations
     */
    operations: pulumi.Input<pulumi.Input<inputs.PermissionGroupFeatureOperation>[]>;
}

export interface PermissionGroupFeatureOperation {
    /**
     * Create operation
     */
    create?: pulumi.Input<boolean>;
    /**
     * Delete operation
     */
    delete?: pulumi.Input<boolean>;
    /**
     * Read operation
     */
    read?: pulumi.Input<boolean>;
    /**
     * Update operation
     */
    update?: pulumi.Input<boolean>;
}

export interface PolicyComplianceMetadata {
    /**
     * Compliance Section UUID
     */
    complianceId: pulumi.Input<string>;
    /**
     * Custom assigned
     */
    customAssigned?: pulumi.Input<boolean>;
    /**
     * Policy ID
     */
    policyId?: pulumi.Input<string>;
    /**
     * Requirement description
     */
    requirementDescription?: pulumi.Input<string>;
    /**
     * Requirement ID
     */
    requirementId?: pulumi.Input<string>;
    /**
     * Requirement name
     */
    requirementName?: pulumi.Input<string>;
    /**
     * Section description
     */
    sectionDescription?: pulumi.Input<string>;
    /**
     * Section ID
     */
    sectionId?: pulumi.Input<string>;
    /**
     * Section label
     */
    sectionLabel?: pulumi.Input<string>;
    /**
     * Compliance standard description
     */
    standardDescription?: pulumi.Input<string>;
    /**
     * Compliance standard name
     */
    standardName?: pulumi.Input<string>;
}

export interface PolicyRemediation {
    actions?: pulumi.Input<pulumi.Input<inputs.PolicyRemediationAction>[]>;
    /**
     * CLI script JSON schema
     */
    cliScriptJsonSchemaString?: pulumi.Input<string>;
    /**
     * CLI script template
     */
    cliScriptTemplate?: pulumi.Input<string>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * Template type
     */
    templateType?: pulumi.Input<string>;
}

export interface PolicyRemediationAction {
    operation?: pulumi.Input<string>;
    payload?: pulumi.Input<string>;
}

export interface PolicyRule {
    /**
     * API name
     */
    apiName?: pulumi.Input<string>;
    /**
     * Children
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.PolicyRuleChildren>[]>;
    /**
     * Cloud account
     */
    cloudAccount?: pulumi.Input<string>;
    /**
     * Cloud type
     */
    cloudType?: pulumi.Input<string>;
    /**
     * Saved search ID that defines the rule criteria
     */
    criteria?: pulumi.Input<string>;
    /**
     * Criteria for DLP Rule
     */
    dataCriteria?: pulumi.Input<inputs.PolicyRuleDataCriteria>;
    /**
     * Name
     */
    name: pulumi.Input<string>;
    /**
     * Parameters
     */
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource ID path
     */
    resourceIdPath?: pulumi.Input<string>;
    /**
     * Resource type
     */
    resourceType?: pulumi.Input<string>;
    /**
     * Type of rule or RQL query
     */
    ruleType: pulumi.Input<string>;
}

export interface PolicyRuleChildren {
    /**
     * Criteria for build policy
     */
    criteria?: pulumi.Input<string>;
    /**
     * YAML string for code build policy
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Recommendation
     */
    recommendation?: pulumi.Input<string>;
    /**
     * Type of build policy
     */
    type?: pulumi.Input<string>;
}

export interface PolicyRuleDataCriteria {
    /**
     * Data Profile name required for DLP rule criteria
     */
    classificationResult: pulumi.Input<string>;
    /**
     * File exposure
     */
    exposure?: pulumi.Input<string>;
    /**
     * File extensions
     */
    extensions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ReportCount {
    failed: pulumi.Input<number>;
    highSeverityFailed: pulumi.Input<number>;
    lowSeverityFailed: pulumi.Input<number>;
    mediumSeverityFailed: pulumi.Input<number>;
    passed: pulumi.Input<number>;
    total: pulumi.Input<number>;
}

export interface ReportTarget {
    /**
     * List of cloud account groups
     */
    accountGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of cloud accounts
     */
    accounts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of compliance standard IDs
     */
    complianceStandardIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Business unit detailed report compression enabled
     */
    compressionEnabled?: pulumi.Input<boolean>;
    /**
     * True = download now
     */
    downloadNow?: pulumi.Input<boolean>;
    /**
     * Notification template id
     */
    notificationTemplateId?: pulumi.Input<string>;
    /**
     * List of email addresses to receive notification
     */
    notifyTos?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of regions
     */
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of resource groups
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Recurring report schedule in RRULE format
     */
    schedule?: pulumi.Input<string>;
    /**
     * Report scheduling enabled
     */
    scheduleEnabled?: pulumi.Input<boolean>;
    /**
     * The time range spec
     */
    timeRange?: pulumi.Input<inputs.ReportTargetTimeRange>;
}

export interface ReportTargetTimeRange {
    /**
     * An absolute time range
     */
    absolutes?: pulumi.Input<pulumi.Input<inputs.ReportTargetTimeRangeAbsolute>[]>;
    /**
     * Relative time range
     */
    relatives?: pulumi.Input<pulumi.Input<inputs.ReportTargetTimeRangeRelative>[]>;
    /**
     * From some time in the past to now
     */
    toNows?: pulumi.Input<pulumi.Input<inputs.ReportTargetTimeRangeToNow>[]>;
}

export interface ReportTargetTimeRangeAbsolute {
    /**
     * End time
     */
    end: pulumi.Input<number>;
    /**
     * Start time
     */
    start: pulumi.Input<number>;
}

export interface ReportTargetTimeRangeRelative {
    /**
     * The time number
     */
    amount: pulumi.Input<number>;
    /**
     * The time unit
     */
    unit: pulumi.Input<string>;
}

export interface ReportTargetTimeRangeToNow {
    /**
     * The time unit
     */
    unit: pulumi.Input<string>;
}

export interface ResourceListMember {
    /**
     * List of Azure resource groups part of the resource list
     */
    azureResourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Members when resource list type = compute access group
     */
    computeAccessGroups?: pulumi.Input<pulumi.Input<inputs.ResourceListMemberComputeAccessGroup>[]>;
    /**
     * List of key:value pairs of tag members
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ResourceListMemberTag>[]>;
}

export interface ResourceListMemberComputeAccessGroup {
    /**
     * List of pattern strings to define app_id in resource list
     */
    appIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of pattern strings to define clusters in resource list
     */
    clusters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of pattern strings to define code_repos in resource list
     */
    codeRepos?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of pattern strings to define containers in resource list
     */
    containers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of pattern strings to define functions in resource list
     */
    functions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of pattern strings to define hosts in resource list
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of pattern strings to define images in resource list
     */
    images?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of pattern strings to define labels in resource list
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of pattern strings to define namespaces in resource list
     */
    namespaces?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ResourceListMemberTag {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface RqlSearchConfigData {
    name: pulumi.Input<string>;
    stateId: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface RqlSearchEventData {
    account: pulumi.Input<string>;
    regionApiIdentifier: pulumi.Input<string>;
    regionId: pulumi.Input<number>;
}

export interface RqlSearchIamData {
    accessedResourcesCount: pulumi.Input<number>;
    destCloudAccount: pulumi.Input<string>;
    destCloudRegion: pulumi.Input<string>;
    destCloudResourceRrn: pulumi.Input<string>;
    destCloudServiceName: pulumi.Input<string>;
    destCloudType: pulumi.Input<string>;
    destResourceId: pulumi.Input<string>;
    destResourceName: pulumi.Input<string>;
    destResourceType: pulumi.Input<string>;
    effectiveActionName: pulumi.Input<string>;
    exceptions: pulumi.Input<pulumi.Input<inputs.RqlSearchIamDataException>[]>;
    grantedByCloudEntityId: pulumi.Input<string>;
    grantedByCloudEntityName: pulumi.Input<string>;
    grantedByCloudEntityRrn: pulumi.Input<string>;
    grantedByCloudEntityType: pulumi.Input<string>;
    grantedByCloudPolicyId: pulumi.Input<string>;
    grantedByCloudPolicyName: pulumi.Input<string>;
    grantedByCloudPolicyRrn: pulumi.Input<string>;
    grantedByCloudPolicyType: pulumi.Input<string>;
    grantedByCloudType: pulumi.Input<string>;
    isWildCardDestCloudResourceName: pulumi.Input<boolean>;
    lastAccessDate: pulumi.Input<string>;
    messageId: pulumi.Input<string>;
    sourceCloudAccount: pulumi.Input<string>;
    sourceCloudRegion: pulumi.Input<string>;
    sourceCloudResourceRrn: pulumi.Input<string>;
    sourceCloudServiceName: pulumi.Input<string>;
    sourceCloudType: pulumi.Input<string>;
    sourceIdpDomain: pulumi.Input<string>;
    sourceIdpEmail: pulumi.Input<string>;
    sourceIdpGroup: pulumi.Input<string>;
    sourceIdpRrn: pulumi.Input<string>;
    sourceIdpService: pulumi.Input<string>;
    sourceIdpUserName: pulumi.Input<string>;
    sourcePublic: pulumi.Input<boolean>;
    sourceResourceId: pulumi.Input<string>;
    sourceResourceName: pulumi.Input<string>;
    sourceResourceType: pulumi.Input<string>;
}

export interface RqlSearchIamDataException {
    messageCode: pulumi.Input<string>;
}

export interface RqlSearchNetworkData {
    account: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    regionId: pulumi.Input<number>;
}

export interface RqlSearchTimeRange {
    /**
     * An absolute time range
     */
    absolutes?: pulumi.Input<pulumi.Input<inputs.RqlSearchTimeRangeAbsolute>[]>;
    /**
     * Relative time range
     */
    relatives?: pulumi.Input<pulumi.Input<inputs.RqlSearchTimeRangeRelative>[]>;
    /**
     * From some time in the past to now
     */
    toNows?: pulumi.Input<pulumi.Input<inputs.RqlSearchTimeRangeToNow>[]>;
}

export interface RqlSearchTimeRangeAbsolute {
    /**
     * End time
     */
    end: pulumi.Input<number>;
    /**
     * Start time
     */
    start: pulumi.Input<number>;
}

export interface RqlSearchTimeRangeRelative {
    /**
     * The time number
     */
    amount: pulumi.Input<number>;
    /**
     * The time unit
     */
    unit: pulumi.Input<string>;
}

export interface RqlSearchTimeRangeToNow {
    /**
     * The time unit
     */
    unit: pulumi.Input<string>;
}

export interface SavedSearchTimeRange {
    /**
     * An absolute time range
     */
    absolute?: pulumi.Input<inputs.SavedSearchTimeRangeAbsolute>;
    /**
     * Relative time range
     */
    relative?: pulumi.Input<inputs.SavedSearchTimeRangeRelative>;
    /**
     * From some time in the past to now
     */
    toNow?: pulumi.Input<inputs.SavedSearchTimeRangeToNow>;
}

export interface SavedSearchTimeRangeAbsolute {
    /**
     * End time
     */
    end: pulumi.Input<number>;
    /**
     * Start time
     */
    start: pulumi.Input<number>;
}

export interface SavedSearchTimeRangeRelative {
    /**
     * The time number
     */
    amount: pulumi.Input<number>;
    /**
     * The time unit
     */
    unit: pulumi.Input<string>;
}

export interface SavedSearchTimeRangeToNow {
    /**
     * The time unit
     */
    unit: pulumi.Input<string>;
}

export interface TrustedAlertIpCidr {
    /**
     * CIDR
     */
    cidr?: pulumi.Input<string>;
    /**
     * Created on
     */
    createdOn?: pulumi.Input<number>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid?: pulumi.Input<string>;
}

export interface UserProfileRole {
    name: pulumi.Input<string>;
    onlyAllowCiAccess: pulumi.Input<boolean>;
    onlyAllowComputeAccess: pulumi.Input<boolean>;
    onlyAllowReadAccess: pulumi.Input<boolean>;
    roleId: pulumi.Input<string>;
    roleType: pulumi.Input<string>;
}

export interface UserRoleAccountGroup {
    groupId: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface UserRoleAdditionalAttributes {
    /**
     * Has defender Permissions
     */
    hasDefenderPermissions?: pulumi.Input<boolean>;
    /**
     * Allows only CI Access
     */
    onlyAllowCiAccess?: pulumi.Input<boolean>;
    /**
     * Give access to only compute tab and access key tab
     */
    onlyAllowComputeAccess?: pulumi.Input<boolean>;
    /**
     * Allow only read access
     */
    onlyAllowReadAccess?: pulumi.Input<boolean>;
}
