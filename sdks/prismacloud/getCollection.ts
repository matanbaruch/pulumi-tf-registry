// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCollection(args: GetCollectionArgs, opts?: pulumi.InvokeOptions): Promise<GetCollectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prismacloud:index/getCollection:getCollection", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCollection.
 */
export interface GetCollectionArgs {
    id: string;
}

/**
 * A collection of values returned by getCollection.
 */
export interface GetCollectionResult {
    readonly assetGroups: outputs.GetCollectionAssetGroup[];
    readonly createdBy: string;
    readonly createdTs: number;
    readonly description: string;
    readonly id: string;
    readonly lastModifiedBy: string;
    readonly lastModifiedTs: number;
    readonly name: string;
}
export function getCollectionOutput(args: GetCollectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCollectionResult> {
    return pulumi.output(args).apply((a: any) => getCollection(a, opts))
}

/**
 * A collection of arguments for invoking getCollection.
 */
export interface GetCollectionOutputArgs {
    id: pulumi.Input<string>;
}
