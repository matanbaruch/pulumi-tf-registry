// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComplianceStandardRequirement(args: GetComplianceStandardRequirementArgs, opts?: pulumi.InvokeOptions): Promise<GetComplianceStandardRequirementResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prismacloud:index/getComplianceStandardRequirement:getComplianceStandardRequirement", {
        "csId": args.csId,
        "csrId": args.csrId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComplianceStandardRequirement.
 */
export interface GetComplianceStandardRequirementArgs {
    csId: string;
    csrId?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getComplianceStandardRequirement.
 */
export interface GetComplianceStandardRequirementResult {
    readonly createdBy: string;
    readonly createdOn: number;
    readonly csId: string;
    readonly csrId: string;
    readonly description: string;
    readonly id: string;
    readonly lastModifiedBy: string;
    readonly lastModifiedOn: number;
    readonly name: string;
    readonly policiesAssignedCount: number;
    readonly requirementId: string;
    readonly standardName: string;
    readonly systemDefault: boolean;
    readonly viewOrder: number;
}
export function getComplianceStandardRequirementOutput(args: GetComplianceStandardRequirementOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComplianceStandardRequirementResult> {
    return pulumi.output(args).apply((a: any) => getComplianceStandardRequirement(a, opts))
}

/**
 * A collection of arguments for invoking getComplianceStandardRequirement.
 */
export interface GetComplianceStandardRequirementOutputArgs {
    csId: pulumi.Input<string>;
    csrId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
