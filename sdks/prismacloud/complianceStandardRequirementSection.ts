// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ComplianceStandardRequirementSection extends pulumi.CustomResource {
    /**
     * Get an existing ComplianceStandardRequirementSection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComplianceStandardRequirementSectionState, opts?: pulumi.CustomResourceOptions): ComplianceStandardRequirementSection {
        return new ComplianceStandardRequirementSection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prismacloud:index/complianceStandardRequirementSection:ComplianceStandardRequirementSection';

    /**
     * Returns true if the given object is an instance of ComplianceStandardRequirementSection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComplianceStandardRequirementSection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComplianceStandardRequirementSection.__pulumiType;
    }

    /**
     * List of associated policy IDs
     */
    public /*out*/ readonly associatedPolicyIds!: pulumi.Output<string[]>;
    /**
     * Created by
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * Created on
     */
    public /*out*/ readonly createdOn!: pulumi.Output<number>;
    /**
     * Compliance standard requirement ID
     */
    public readonly csrId!: pulumi.Output<string>;
    /**
     * Compliance standard requirement section ID
     */
    public /*out*/ readonly csrsId!: pulumi.Output<string>;
    /**
     * Description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Section label
     */
    public readonly label!: pulumi.Output<string>;
    /**
     * Last modified by
     */
    public /*out*/ readonly lastModifiedBy!: pulumi.Output<string>;
    /**
     * Last modified on
     */
    public /*out*/ readonly lastModifiedOn!: pulumi.Output<number>;
    /**
     * Number of assigned policies
     */
    public /*out*/ readonly policiesAssignedCount!: pulumi.Output<number>;
    /**
     * Compliance requirement name
     */
    public /*out*/ readonly requirementName!: pulumi.Output<string>;
    /**
     * Compliance section ID
     */
    public readonly sectionId!: pulumi.Output<string>;
    /**
     * Compliance standard name
     */
    public /*out*/ readonly standardName!: pulumi.Output<string>;
    /**
     * System default
     */
    public /*out*/ readonly systemDefault!: pulumi.Output<boolean>;
    /**
     * View order
     */
    public readonly viewOrder!: pulumi.Output<number>;

    /**
     * Create a ComplianceStandardRequirementSection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComplianceStandardRequirementSectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComplianceStandardRequirementSectionArgs | ComplianceStandardRequirementSectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComplianceStandardRequirementSectionState | undefined;
            resourceInputs["associatedPolicyIds"] = state ? state.associatedPolicyIds : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["csrId"] = state ? state.csrId : undefined;
            resourceInputs["csrsId"] = state ? state.csrsId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["lastModifiedBy"] = state ? state.lastModifiedBy : undefined;
            resourceInputs["lastModifiedOn"] = state ? state.lastModifiedOn : undefined;
            resourceInputs["policiesAssignedCount"] = state ? state.policiesAssignedCount : undefined;
            resourceInputs["requirementName"] = state ? state.requirementName : undefined;
            resourceInputs["sectionId"] = state ? state.sectionId : undefined;
            resourceInputs["standardName"] = state ? state.standardName : undefined;
            resourceInputs["systemDefault"] = state ? state.systemDefault : undefined;
            resourceInputs["viewOrder"] = state ? state.viewOrder : undefined;
        } else {
            const args = argsOrState as ComplianceStandardRequirementSectionArgs | undefined;
            if ((!args || args.csrId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'csrId'");
            }
            if ((!args || args.sectionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sectionId'");
            }
            resourceInputs["csrId"] = args ? args.csrId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["sectionId"] = args ? args.sectionId : undefined;
            resourceInputs["viewOrder"] = args ? args.viewOrder : undefined;
            resourceInputs["associatedPolicyIds"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["csrsId"] = undefined /*out*/;
            resourceInputs["lastModifiedBy"] = undefined /*out*/;
            resourceInputs["lastModifiedOn"] = undefined /*out*/;
            resourceInputs["policiesAssignedCount"] = undefined /*out*/;
            resourceInputs["requirementName"] = undefined /*out*/;
            resourceInputs["standardName"] = undefined /*out*/;
            resourceInputs["systemDefault"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComplianceStandardRequirementSection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComplianceStandardRequirementSection resources.
 */
export interface ComplianceStandardRequirementSectionState {
    /**
     * List of associated policy IDs
     */
    associatedPolicyIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Created by
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Created on
     */
    createdOn?: pulumi.Input<number>;
    /**
     * Compliance standard requirement ID
     */
    csrId?: pulumi.Input<string>;
    /**
     * Compliance standard requirement section ID
     */
    csrsId?: pulumi.Input<string>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * Section label
     */
    label?: pulumi.Input<string>;
    /**
     * Last modified by
     */
    lastModifiedBy?: pulumi.Input<string>;
    /**
     * Last modified on
     */
    lastModifiedOn?: pulumi.Input<number>;
    /**
     * Number of assigned policies
     */
    policiesAssignedCount?: pulumi.Input<number>;
    /**
     * Compliance requirement name
     */
    requirementName?: pulumi.Input<string>;
    /**
     * Compliance section ID
     */
    sectionId?: pulumi.Input<string>;
    /**
     * Compliance standard name
     */
    standardName?: pulumi.Input<string>;
    /**
     * System default
     */
    systemDefault?: pulumi.Input<boolean>;
    /**
     * View order
     */
    viewOrder?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ComplianceStandardRequirementSection resource.
 */
export interface ComplianceStandardRequirementSectionArgs {
    /**
     * Compliance standard requirement ID
     */
    csrId: pulumi.Input<string>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * Section label
     */
    label?: pulumi.Input<string>;
    /**
     * Compliance section ID
     */
    sectionId: pulumi.Input<string>;
    /**
     * View order
     */
    viewOrder?: pulumi.Input<number>;
}
