// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUserRole(args?: GetUserRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetUserRoleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prismacloud:index/getUserRole:getUserRole", {
        "id": args.id,
        "name": args.name,
        "roleId": args.roleId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUserRole.
 */
export interface GetUserRoleArgs {
    id?: string;
    name?: string;
    roleId?: string;
}

/**
 * A collection of values returned by getUserRole.
 */
export interface GetUserRoleResult {
    readonly accountGroupIds: string[];
    readonly additionalAttributes: outputs.GetUserRoleAdditionalAttribute[];
    readonly associatedUsers: string[];
    readonly codeRepositoryIds: string[];
    readonly description: string;
    readonly id: string;
    readonly lastModifiedBy: string;
    readonly lastModifiedTs: number;
    readonly name: string;
    readonly resourceListIds: string[];
    readonly restrictDismissalAccess: boolean;
    readonly roleId: string;
    readonly roleType: string;
}
export function getUserRoleOutput(args?: GetUserRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserRoleResult> {
    return pulumi.output(args).apply((a: any) => getUserRole(a, opts))
}

/**
 * A collection of arguments for invoking getUserRole.
 */
export interface GetUserRoleOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    roleId?: pulumi.Input<string>;
}
