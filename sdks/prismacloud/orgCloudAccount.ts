// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OrgCloudAccount extends pulumi.CustomResource {
    /**
     * Get an existing OrgCloudAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrgCloudAccountState, opts?: pulumi.CustomResourceOptions): OrgCloudAccount {
        return new OrgCloudAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prismacloud:index/orgCloudAccount:OrgCloudAccount';

    /**
     * Returns true if the given object is an instance of OrgCloudAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrgCloudAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrgCloudAccount.__pulumiType;
    }

    /**
     * AWS account type
     */
    public readonly aws!: pulumi.Output<outputs.OrgCloudAccountAws | undefined>;
    /**
     * Azure account type
     */
    public readonly azure!: pulumi.Output<outputs.OrgCloudAccountAzure | undefined>;
    /**
     * to disable cloud account instead of deleting on calling destroy
     */
    public readonly disableOnDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * Gcp account type
     */
    public readonly gcp!: pulumi.Output<outputs.OrgCloudAccountGcp | undefined>;
    /**
     * Oci account type
     */
    public readonly oci!: pulumi.Output<outputs.OrgCloudAccountOci | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.OrgCloudAccountTimeouts | undefined>;

    /**
     * Create a OrgCloudAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OrgCloudAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrgCloudAccountArgs | OrgCloudAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrgCloudAccountState | undefined;
            resourceInputs["aws"] = state ? state.aws : undefined;
            resourceInputs["azure"] = state ? state.azure : undefined;
            resourceInputs["disableOnDestroy"] = state ? state.disableOnDestroy : undefined;
            resourceInputs["gcp"] = state ? state.gcp : undefined;
            resourceInputs["oci"] = state ? state.oci : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as OrgCloudAccountArgs | undefined;
            resourceInputs["aws"] = args ? args.aws : undefined;
            resourceInputs["azure"] = args ? args.azure : undefined;
            resourceInputs["disableOnDestroy"] = args ? args.disableOnDestroy : undefined;
            resourceInputs["gcp"] = args ? args.gcp : undefined;
            resourceInputs["oci"] = args ? args.oci : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrgCloudAccount.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OrgCloudAccount resources.
 */
export interface OrgCloudAccountState {
    /**
     * AWS account type
     */
    aws?: pulumi.Input<inputs.OrgCloudAccountAws>;
    /**
     * Azure account type
     */
    azure?: pulumi.Input<inputs.OrgCloudAccountAzure>;
    /**
     * to disable cloud account instead of deleting on calling destroy
     */
    disableOnDestroy?: pulumi.Input<boolean>;
    /**
     * Gcp account type
     */
    gcp?: pulumi.Input<inputs.OrgCloudAccountGcp>;
    /**
     * Oci account type
     */
    oci?: pulumi.Input<inputs.OrgCloudAccountOci>;
    timeouts?: pulumi.Input<inputs.OrgCloudAccountTimeouts>;
}

/**
 * The set of arguments for constructing a OrgCloudAccount resource.
 */
export interface OrgCloudAccountArgs {
    /**
     * AWS account type
     */
    aws?: pulumi.Input<inputs.OrgCloudAccountAws>;
    /**
     * Azure account type
     */
    azure?: pulumi.Input<inputs.OrgCloudAccountAzure>;
    /**
     * to disable cloud account instead of deleting on calling destroy
     */
    disableOnDestroy?: pulumi.Input<boolean>;
    /**
     * Gcp account type
     */
    gcp?: pulumi.Input<inputs.OrgCloudAccountGcp>;
    /**
     * Oci account type
     */
    oci?: pulumi.Input<inputs.OrgCloudAccountOci>;
    timeouts?: pulumi.Input<inputs.OrgCloudAccountTimeouts>;
}
