// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComplianceStandard(args?: GetComplianceStandardArgs, opts?: pulumi.InvokeOptions): Promise<GetComplianceStandardResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prismacloud:index/getComplianceStandard:getComplianceStandard", {
        "csId": args.csId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComplianceStandard.
 */
export interface GetComplianceStandardArgs {
    csId?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getComplianceStandard.
 */
export interface GetComplianceStandardResult {
    readonly cloudTypes: string[];
    readonly createdBy: string;
    readonly createdOn: number;
    readonly csId: string;
    readonly description: string;
    readonly id: string;
    readonly lastModifiedBy: string;
    readonly lastModifiedOn: number;
    readonly name: string;
    readonly policiesAssignedCount: number;
    readonly systemDefault: boolean;
}
export function getComplianceStandardOutput(args?: GetComplianceStandardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComplianceStandardResult> {
    return pulumi.output(args).apply((a: any) => getComplianceStandard(a, opts))
}

/**
 * A collection of arguments for invoking getComplianceStandard.
 */
export interface GetComplianceStandardOutputArgs {
    csId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
