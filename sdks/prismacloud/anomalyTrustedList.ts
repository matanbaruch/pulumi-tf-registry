// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AnomalyTrustedList extends pulumi.CustomResource {
    /**
     * Get an existing AnomalyTrustedList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AnomalyTrustedListState, opts?: pulumi.CustomResourceOptions): AnomalyTrustedList {
        return new AnomalyTrustedList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prismacloud:index/anomalyTrustedList:AnomalyTrustedList';

    /**
     * Returns true if the given object is an instance of AnomalyTrustedList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AnomalyTrustedList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AnomalyTrustedList.__pulumiType;
    }

    /**
     * Anomaly Trusted List account id.
     */
    public readonly accountId!: pulumi.Output<string | undefined>;
    /**
     * Applicable Policies
     */
    public readonly applicablePolicies!: pulumi.Output<string[]>;
    /**
     * Anomaly Trusted List ID
     */
    public /*out*/ readonly atlId!: pulumi.Output<number>;
    /**
     * Created by
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * Created on
     */
    public /*out*/ readonly createdOn!: pulumi.Output<number>;
    /**
     * Reason for trusted listing
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Anomaly Trusted List name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * List of network anomalies in the trusted list
     */
    public readonly trustedListEntries!: pulumi.Output<outputs.AnomalyTrustedListTrustedListEntry[]>;
    /**
     * Anomaly Trusted List type
     */
    public readonly trustedListType!: pulumi.Output<string>;
    /**
     * VPC
     */
    public readonly vpc!: pulumi.Output<string | undefined>;

    /**
     * Create a AnomalyTrustedList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AnomalyTrustedListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AnomalyTrustedListArgs | AnomalyTrustedListState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AnomalyTrustedListState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["applicablePolicies"] = state ? state.applicablePolicies : undefined;
            resourceInputs["atlId"] = state ? state.atlId : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["trustedListEntries"] = state ? state.trustedListEntries : undefined;
            resourceInputs["trustedListType"] = state ? state.trustedListType : undefined;
            resourceInputs["vpc"] = state ? state.vpc : undefined;
        } else {
            const args = argsOrState as AnomalyTrustedListArgs | undefined;
            if ((!args || args.applicablePolicies === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicablePolicies'");
            }
            if ((!args || args.trustedListEntries === undefined) && !opts.urn) {
                throw new Error("Missing required property 'trustedListEntries'");
            }
            if ((!args || args.trustedListType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'trustedListType'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["applicablePolicies"] = args ? args.applicablePolicies : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["trustedListEntries"] = args ? args.trustedListEntries : undefined;
            resourceInputs["trustedListType"] = args ? args.trustedListType : undefined;
            resourceInputs["vpc"] = args ? args.vpc : undefined;
            resourceInputs["atlId"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["createdOn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AnomalyTrustedList.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AnomalyTrustedList resources.
 */
export interface AnomalyTrustedListState {
    /**
     * Anomaly Trusted List account id.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Applicable Policies
     */
    applicablePolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Anomaly Trusted List ID
     */
    atlId?: pulumi.Input<number>;
    /**
     * Created by
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Created on
     */
    createdOn?: pulumi.Input<number>;
    /**
     * Reason for trusted listing
     */
    description?: pulumi.Input<string>;
    /**
     * Anomaly Trusted List name
     */
    name?: pulumi.Input<string>;
    /**
     * List of network anomalies in the trusted list
     */
    trustedListEntries?: pulumi.Input<pulumi.Input<inputs.AnomalyTrustedListTrustedListEntry>[]>;
    /**
     * Anomaly Trusted List type
     */
    trustedListType?: pulumi.Input<string>;
    /**
     * VPC
     */
    vpc?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AnomalyTrustedList resource.
 */
export interface AnomalyTrustedListArgs {
    /**
     * Anomaly Trusted List account id.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Applicable Policies
     */
    applicablePolicies: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reason for trusted listing
     */
    description?: pulumi.Input<string>;
    /**
     * Anomaly Trusted List name
     */
    name?: pulumi.Input<string>;
    /**
     * List of network anomalies in the trusted list
     */
    trustedListEntries: pulumi.Input<pulumi.Input<inputs.AnomalyTrustedListTrustedListEntry>[]>;
    /**
     * Anomaly Trusted List type
     */
    trustedListType: pulumi.Input<string>;
    /**
     * VPC
     */
    vpc?: pulumi.Input<string>;
}
