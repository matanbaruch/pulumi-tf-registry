// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SavedSearch extends pulumi.CustomResource {
    /**
     * Get an existing SavedSearch resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SavedSearchState, opts?: pulumi.CustomResourceOptions): SavedSearch {
        return new SavedSearch(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prismacloud:index/savedSearch:SavedSearch';

    /**
     * Returns true if the given object is an instance of SavedSearch.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SavedSearch {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SavedSearch.__pulumiType;
    }

    /**
     * Cloud Type
     */
    public readonly cloudType!: pulumi.Output<string | undefined>;
    /**
     * Description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Saved search name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The RQL search to perform
     */
    public readonly query!: pulumi.Output<string>;
    /**
     * Set to true when the saved search is created
     */
    public /*out*/ readonly saved!: pulumi.Output<boolean>;
    /**
     * The RQL UUID
     */
    public readonly searchId!: pulumi.Output<string>;
    /**
     * The time range spec
     */
    public readonly timeRange!: pulumi.Output<outputs.SavedSearchTimeRange | undefined>;

    /**
     * Create a SavedSearch resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SavedSearchArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SavedSearchArgs | SavedSearchState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SavedSearchState | undefined;
            resourceInputs["cloudType"] = state ? state.cloudType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["query"] = state ? state.query : undefined;
            resourceInputs["saved"] = state ? state.saved : undefined;
            resourceInputs["searchId"] = state ? state.searchId : undefined;
            resourceInputs["timeRange"] = state ? state.timeRange : undefined;
        } else {
            const args = argsOrState as SavedSearchArgs | undefined;
            if ((!args || args.query === undefined) && !opts.urn) {
                throw new Error("Missing required property 'query'");
            }
            if ((!args || args.searchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'searchId'");
            }
            resourceInputs["cloudType"] = args ? args.cloudType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["query"] = args ? args.query : undefined;
            resourceInputs["searchId"] = args ? args.searchId : undefined;
            resourceInputs["timeRange"] = args ? args.timeRange : undefined;
            resourceInputs["saved"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SavedSearch.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SavedSearch resources.
 */
export interface SavedSearchState {
    /**
     * Cloud Type
     */
    cloudType?: pulumi.Input<string>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * Saved search name
     */
    name?: pulumi.Input<string>;
    /**
     * The RQL search to perform
     */
    query?: pulumi.Input<string>;
    /**
     * Set to true when the saved search is created
     */
    saved?: pulumi.Input<boolean>;
    /**
     * The RQL UUID
     */
    searchId?: pulumi.Input<string>;
    /**
     * The time range spec
     */
    timeRange?: pulumi.Input<inputs.SavedSearchTimeRange>;
}

/**
 * The set of arguments for constructing a SavedSearch resource.
 */
export interface SavedSearchArgs {
    /**
     * Cloud Type
     */
    cloudType?: pulumi.Input<string>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * Saved search name
     */
    name?: pulumi.Input<string>;
    /**
     * The RQL search to perform
     */
    query: pulumi.Input<string>;
    /**
     * The RQL UUID
     */
    searchId: pulumi.Input<string>;
    /**
     * The time range spec
     */
    timeRange?: pulumi.Input<inputs.SavedSearchTimeRange>;
}
