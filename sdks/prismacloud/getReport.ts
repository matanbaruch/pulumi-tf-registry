// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getReport(args?: GetReportArgs, opts?: pulumi.InvokeOptions): Promise<GetReportResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prismacloud:index/getReport:getReport", {
        "id": args.id,
        "name": args.name,
        "reportId": args.reportId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getReport.
 */
export interface GetReportArgs {
    id?: string;
    name?: string;
    reportId?: string;
}

/**
 * A collection of values returned by getReport.
 */
export interface GetReportResult {
    readonly cloudType: string;
    readonly complianceStandardId: string;
    readonly counts: outputs.GetReportCount[];
    readonly createdBy: string;
    readonly createdOn: number;
    readonly id: string;
    readonly lastModifiedBy: string;
    readonly lastModifiedOn: number;
    readonly lastScheduled: number;
    readonly name: string;
    readonly nextSchedule: number;
    readonly reportId: string;
    readonly reportType: string;
    readonly status: string;
    readonly targets: outputs.GetReportTarget[];
    readonly totalInstanceCount: number;
}
export function getReportOutput(args?: GetReportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReportResult> {
    return pulumi.output(args).apply((a: any) => getReport(a, opts))
}

/**
 * A collection of arguments for invoking getReport.
 */
export interface GetReportOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    reportId?: pulumi.Input<string>;
}
