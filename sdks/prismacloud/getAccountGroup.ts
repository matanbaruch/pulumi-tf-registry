// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAccountGroup(args?: GetAccountGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prismacloud:index/getAccountGroup:getAccountGroup", {
        "groupId": args.groupId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccountGroup.
 */
export interface GetAccountGroupArgs {
    groupId?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getAccountGroup.
 */
export interface GetAccountGroupResult {
    readonly accountIds: string[];
    readonly childGroupIds: string[];
    readonly description: string;
    readonly groupId: string;
    readonly id: string;
    readonly lastModifiedBy: string;
    readonly lastModifiedTs: number;
    readonly name: string;
}
export function getAccountGroupOutput(args?: GetAccountGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountGroupResult> {
    return pulumi.output(args).apply((a: any) => getAccountGroup(a, opts))
}

/**
 * A collection of arguments for invoking getAccountGroup.
 */
export interface GetAccountGroupOutputArgs {
    groupId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
