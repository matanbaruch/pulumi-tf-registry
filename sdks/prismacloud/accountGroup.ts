// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AccountGroup extends pulumi.CustomResource {
    /**
     * Get an existing AccountGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountGroupState, opts?: pulumi.CustomResourceOptions): AccountGroup {
        return new AccountGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prismacloud:index/accountGroup:AccountGroup';

    /**
     * Returns true if the given object is an instance of AccountGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountGroup.__pulumiType;
    }

    /**
     * Cloud account IDs
     */
    public readonly accountIds!: pulumi.Output<string[]>;
    /**
     * Child account group IDs
     */
    public readonly childGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * Description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Account group ID
     */
    public /*out*/ readonly groupId!: pulumi.Output<string>;
    /**
     * Last modified by
     */
    public /*out*/ readonly lastModifiedBy!: pulumi.Output<string>;
    /**
     * Last modified timestamp
     */
    public /*out*/ readonly lastModifiedTs!: pulumi.Output<number>;
    /**
     * Name of the group
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a AccountGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AccountGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountGroupArgs | AccountGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountGroupState | undefined;
            resourceInputs["accountIds"] = state ? state.accountIds : undefined;
            resourceInputs["childGroupIds"] = state ? state.childGroupIds : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["lastModifiedBy"] = state ? state.lastModifiedBy : undefined;
            resourceInputs["lastModifiedTs"] = state ? state.lastModifiedTs : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as AccountGroupArgs | undefined;
            resourceInputs["accountIds"] = args ? args.accountIds : undefined;
            resourceInputs["childGroupIds"] = args ? args.childGroupIds : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["groupId"] = undefined /*out*/;
            resourceInputs["lastModifiedBy"] = undefined /*out*/;
            resourceInputs["lastModifiedTs"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AccountGroup resources.
 */
export interface AccountGroupState {
    /**
     * Cloud account IDs
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Child account group IDs
     */
    childGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * Account group ID
     */
    groupId?: pulumi.Input<string>;
    /**
     * Last modified by
     */
    lastModifiedBy?: pulumi.Input<string>;
    /**
     * Last modified timestamp
     */
    lastModifiedTs?: pulumi.Input<number>;
    /**
     * Name of the group
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccountGroup resource.
 */
export interface AccountGroupArgs {
    /**
     * Cloud account IDs
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Child account group IDs
     */
    childGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the group
     */
    name?: pulumi.Input<string>;
}
