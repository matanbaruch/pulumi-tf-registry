// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LoadBalancePool extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadBalancePoolState, opts?: pulumi.CustomResourceOptions): LoadBalancePool {
        return new LoadBalancePool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiadc:index/loadBalancePool:LoadBalancePool';

    /**
     * Returns true if the given object is an instance of LoadBalancePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoadBalancePool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadBalancePool.__pulumiType;
    }

    public readonly directRouteIp!: pulumi.Output<string>;
    public readonly directRouteIp6!: pulumi.Output<string>;
    public readonly directRouteMode!: pulumi.Output<string>;
    public readonly healthCheck!: pulumi.Output<string>;
    public readonly healthCheckList!: pulumi.Output<string>;
    public readonly healthCheckRelationship!: pulumi.Output<string>;
    public readonly mkey!: pulumi.Output<string>;
    public readonly poolType!: pulumi.Output<string>;
    public readonly rsProfile!: pulumi.Output<string>;
    public readonly sdnAddrPrivate!: pulumi.Output<string>;
    public readonly sdnConnector!: pulumi.Output<string>;
    public readonly service!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly vdom!: pulumi.Output<string | undefined>;

    /**
     * Create a LoadBalancePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadBalancePoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoadBalancePoolArgs | LoadBalancePoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoadBalancePoolState | undefined;
            resourceInputs["directRouteIp"] = state ? state.directRouteIp : undefined;
            resourceInputs["directRouteIp6"] = state ? state.directRouteIp6 : undefined;
            resourceInputs["directRouteMode"] = state ? state.directRouteMode : undefined;
            resourceInputs["healthCheck"] = state ? state.healthCheck : undefined;
            resourceInputs["healthCheckList"] = state ? state.healthCheckList : undefined;
            resourceInputs["healthCheckRelationship"] = state ? state.healthCheckRelationship : undefined;
            resourceInputs["mkey"] = state ? state.mkey : undefined;
            resourceInputs["poolType"] = state ? state.poolType : undefined;
            resourceInputs["rsProfile"] = state ? state.rsProfile : undefined;
            resourceInputs["sdnAddrPrivate"] = state ? state.sdnAddrPrivate : undefined;
            resourceInputs["sdnConnector"] = state ? state.sdnConnector : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
        } else {
            const args = argsOrState as LoadBalancePoolArgs | undefined;
            if ((!args || args.mkey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mkey'");
            }
            resourceInputs["directRouteIp"] = args ? args.directRouteIp : undefined;
            resourceInputs["directRouteIp6"] = args ? args.directRouteIp6 : undefined;
            resourceInputs["directRouteMode"] = args ? args.directRouteMode : undefined;
            resourceInputs["healthCheck"] = args ? args.healthCheck : undefined;
            resourceInputs["healthCheckList"] = args ? args.healthCheckList : undefined;
            resourceInputs["healthCheckRelationship"] = args ? args.healthCheckRelationship : undefined;
            resourceInputs["mkey"] = args ? args.mkey : undefined;
            resourceInputs["poolType"] = args ? args.poolType : undefined;
            resourceInputs["rsProfile"] = args ? args.rsProfile : undefined;
            resourceInputs["sdnAddrPrivate"] = args ? args.sdnAddrPrivate : undefined;
            resourceInputs["sdnConnector"] = args ? args.sdnConnector : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LoadBalancePool.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LoadBalancePool resources.
 */
export interface LoadBalancePoolState {
    directRouteIp?: pulumi.Input<string>;
    directRouteIp6?: pulumi.Input<string>;
    directRouteMode?: pulumi.Input<string>;
    healthCheck?: pulumi.Input<string>;
    healthCheckList?: pulumi.Input<string>;
    healthCheckRelationship?: pulumi.Input<string>;
    mkey?: pulumi.Input<string>;
    poolType?: pulumi.Input<string>;
    rsProfile?: pulumi.Input<string>;
    sdnAddrPrivate?: pulumi.Input<string>;
    sdnConnector?: pulumi.Input<string>;
    service?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LoadBalancePool resource.
 */
export interface LoadBalancePoolArgs {
    directRouteIp?: pulumi.Input<string>;
    directRouteIp6?: pulumi.Input<string>;
    directRouteMode?: pulumi.Input<string>;
    healthCheck?: pulumi.Input<string>;
    healthCheckList?: pulumi.Input<string>;
    healthCheckRelationship?: pulumi.Input<string>;
    mkey: pulumi.Input<string>;
    poolType?: pulumi.Input<string>;
    rsProfile?: pulumi.Input<string>;
    sdnAddrPrivate?: pulumi.Input<string>;
    sdnConnector?: pulumi.Input<string>;
    service?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
}
