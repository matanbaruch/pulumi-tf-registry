// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SecurityWafProfile extends pulumi.CustomResource {
    /**
     * Get an existing SecurityWafProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityWafProfileState, opts?: pulumi.CustomResourceOptions): SecurityWafProfile {
        return new SecurityWafProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiadc:index/securityWafProfile:SecurityWafProfile';

    /**
     * Returns true if the given object is an instance of SecurityWafProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityWafProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityWafProfile.__pulumiType;
    }

    public readonly advancedProtectionName!: pulumi.Output<string>;
    public readonly apiGatewayPolicyName!: pulumi.Output<string>;
    public readonly biometricsBasedDetection!: pulumi.Output<string>;
    public readonly botDetectionName!: pulumi.Output<string>;
    public readonly bruteForceLoginName!: pulumi.Output<string>;
    public readonly cookieSecurity!: pulumi.Output<string>;
    public readonly corsProtection!: pulumi.Output<string>;
    public readonly credentialStuffingDefense!: pulumi.Output<string>;
    public readonly csrfProtection!: pulumi.Output<string>;
    public readonly dataLeakPreventionName!: pulumi.Output<string>;
    public readonly desc!: pulumi.Output<string>;
    public readonly exceptionName!: pulumi.Output<string>;
    public readonly heuristicSqlXssInjectionDetection!: pulumi.Output<string>;
    public readonly httpHeaderSecurityName!: pulumi.Output<string>;
    public readonly httpProtocolConstraint!: pulumi.Output<string>;
    public readonly inputValidationPolicyName!: pulumi.Output<string>;
    public readonly jsonValidationName!: pulumi.Output<string>;
    public readonly mkey!: pulumi.Output<string>;
    public readonly openapiValidationName!: pulumi.Output<string>;
    public readonly ruleMatchRecord!: pulumi.Output<string>;
    public readonly thresholdBasedDetection!: pulumi.Output<string>;
    public readonly urlProtection!: pulumi.Output<string>;
    public readonly vdom!: pulumi.Output<string | undefined>;
    public readonly webAttackSignature!: pulumi.Output<string>;
    public readonly xmlValidationName!: pulumi.Output<string>;

    /**
     * Create a SecurityWafProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityWafProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurityWafProfileArgs | SecurityWafProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurityWafProfileState | undefined;
            resourceInputs["advancedProtectionName"] = state ? state.advancedProtectionName : undefined;
            resourceInputs["apiGatewayPolicyName"] = state ? state.apiGatewayPolicyName : undefined;
            resourceInputs["biometricsBasedDetection"] = state ? state.biometricsBasedDetection : undefined;
            resourceInputs["botDetectionName"] = state ? state.botDetectionName : undefined;
            resourceInputs["bruteForceLoginName"] = state ? state.bruteForceLoginName : undefined;
            resourceInputs["cookieSecurity"] = state ? state.cookieSecurity : undefined;
            resourceInputs["corsProtection"] = state ? state.corsProtection : undefined;
            resourceInputs["credentialStuffingDefense"] = state ? state.credentialStuffingDefense : undefined;
            resourceInputs["csrfProtection"] = state ? state.csrfProtection : undefined;
            resourceInputs["dataLeakPreventionName"] = state ? state.dataLeakPreventionName : undefined;
            resourceInputs["desc"] = state ? state.desc : undefined;
            resourceInputs["exceptionName"] = state ? state.exceptionName : undefined;
            resourceInputs["heuristicSqlXssInjectionDetection"] = state ? state.heuristicSqlXssInjectionDetection : undefined;
            resourceInputs["httpHeaderSecurityName"] = state ? state.httpHeaderSecurityName : undefined;
            resourceInputs["httpProtocolConstraint"] = state ? state.httpProtocolConstraint : undefined;
            resourceInputs["inputValidationPolicyName"] = state ? state.inputValidationPolicyName : undefined;
            resourceInputs["jsonValidationName"] = state ? state.jsonValidationName : undefined;
            resourceInputs["mkey"] = state ? state.mkey : undefined;
            resourceInputs["openapiValidationName"] = state ? state.openapiValidationName : undefined;
            resourceInputs["ruleMatchRecord"] = state ? state.ruleMatchRecord : undefined;
            resourceInputs["thresholdBasedDetection"] = state ? state.thresholdBasedDetection : undefined;
            resourceInputs["urlProtection"] = state ? state.urlProtection : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
            resourceInputs["webAttackSignature"] = state ? state.webAttackSignature : undefined;
            resourceInputs["xmlValidationName"] = state ? state.xmlValidationName : undefined;
        } else {
            const args = argsOrState as SecurityWafProfileArgs | undefined;
            if ((!args || args.mkey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mkey'");
            }
            resourceInputs["advancedProtectionName"] = args ? args.advancedProtectionName : undefined;
            resourceInputs["apiGatewayPolicyName"] = args ? args.apiGatewayPolicyName : undefined;
            resourceInputs["biometricsBasedDetection"] = args ? args.biometricsBasedDetection : undefined;
            resourceInputs["botDetectionName"] = args ? args.botDetectionName : undefined;
            resourceInputs["bruteForceLoginName"] = args ? args.bruteForceLoginName : undefined;
            resourceInputs["cookieSecurity"] = args ? args.cookieSecurity : undefined;
            resourceInputs["corsProtection"] = args ? args.corsProtection : undefined;
            resourceInputs["credentialStuffingDefense"] = args ? args.credentialStuffingDefense : undefined;
            resourceInputs["csrfProtection"] = args ? args.csrfProtection : undefined;
            resourceInputs["dataLeakPreventionName"] = args ? args.dataLeakPreventionName : undefined;
            resourceInputs["desc"] = args ? args.desc : undefined;
            resourceInputs["exceptionName"] = args ? args.exceptionName : undefined;
            resourceInputs["heuristicSqlXssInjectionDetection"] = args ? args.heuristicSqlXssInjectionDetection : undefined;
            resourceInputs["httpHeaderSecurityName"] = args ? args.httpHeaderSecurityName : undefined;
            resourceInputs["httpProtocolConstraint"] = args ? args.httpProtocolConstraint : undefined;
            resourceInputs["inputValidationPolicyName"] = args ? args.inputValidationPolicyName : undefined;
            resourceInputs["jsonValidationName"] = args ? args.jsonValidationName : undefined;
            resourceInputs["mkey"] = args ? args.mkey : undefined;
            resourceInputs["openapiValidationName"] = args ? args.openapiValidationName : undefined;
            resourceInputs["ruleMatchRecord"] = args ? args.ruleMatchRecord : undefined;
            resourceInputs["thresholdBasedDetection"] = args ? args.thresholdBasedDetection : undefined;
            resourceInputs["urlProtection"] = args ? args.urlProtection : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
            resourceInputs["webAttackSignature"] = args ? args.webAttackSignature : undefined;
            resourceInputs["xmlValidationName"] = args ? args.xmlValidationName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityWafProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SecurityWafProfile resources.
 */
export interface SecurityWafProfileState {
    advancedProtectionName?: pulumi.Input<string>;
    apiGatewayPolicyName?: pulumi.Input<string>;
    biometricsBasedDetection?: pulumi.Input<string>;
    botDetectionName?: pulumi.Input<string>;
    bruteForceLoginName?: pulumi.Input<string>;
    cookieSecurity?: pulumi.Input<string>;
    corsProtection?: pulumi.Input<string>;
    credentialStuffingDefense?: pulumi.Input<string>;
    csrfProtection?: pulumi.Input<string>;
    dataLeakPreventionName?: pulumi.Input<string>;
    desc?: pulumi.Input<string>;
    exceptionName?: pulumi.Input<string>;
    heuristicSqlXssInjectionDetection?: pulumi.Input<string>;
    httpHeaderSecurityName?: pulumi.Input<string>;
    httpProtocolConstraint?: pulumi.Input<string>;
    inputValidationPolicyName?: pulumi.Input<string>;
    jsonValidationName?: pulumi.Input<string>;
    mkey?: pulumi.Input<string>;
    openapiValidationName?: pulumi.Input<string>;
    ruleMatchRecord?: pulumi.Input<string>;
    thresholdBasedDetection?: pulumi.Input<string>;
    urlProtection?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    webAttackSignature?: pulumi.Input<string>;
    xmlValidationName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecurityWafProfile resource.
 */
export interface SecurityWafProfileArgs {
    advancedProtectionName?: pulumi.Input<string>;
    apiGatewayPolicyName?: pulumi.Input<string>;
    biometricsBasedDetection?: pulumi.Input<string>;
    botDetectionName?: pulumi.Input<string>;
    bruteForceLoginName?: pulumi.Input<string>;
    cookieSecurity?: pulumi.Input<string>;
    corsProtection?: pulumi.Input<string>;
    credentialStuffingDefense?: pulumi.Input<string>;
    csrfProtection?: pulumi.Input<string>;
    dataLeakPreventionName?: pulumi.Input<string>;
    desc?: pulumi.Input<string>;
    exceptionName?: pulumi.Input<string>;
    heuristicSqlXssInjectionDetection?: pulumi.Input<string>;
    httpHeaderSecurityName?: pulumi.Input<string>;
    httpProtocolConstraint?: pulumi.Input<string>;
    inputValidationPolicyName?: pulumi.Input<string>;
    jsonValidationName?: pulumi.Input<string>;
    mkey: pulumi.Input<string>;
    openapiValidationName?: pulumi.Input<string>;
    ruleMatchRecord?: pulumi.Input<string>;
    thresholdBasedDetection?: pulumi.Input<string>;
    urlProtection?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    webAttackSignature?: pulumi.Input<string>;
    xmlValidationName?: pulumi.Input<string>;
}
