// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRouterOspfChildOspfInterface(args: GetRouterOspfChildOspfInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterOspfChildOspfInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiadc:index/getRouterOspfChildOspfInterface:getRouterOspfChildOspfInterface", {
        "id": args.id,
        "mkey": args.mkey,
        "vdom": args.vdom,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterOspfChildOspfInterface.
 */
export interface GetRouterOspfChildOspfInterfaceArgs {
    id?: string;
    mkey: string;
    vdom?: string;
}

/**
 * A collection of values returned by getRouterOspfChildOspfInterface.
 */
export interface GetRouterOspfChildOspfInterfaceResult {
    readonly authentication: string;
    readonly cost: string;
    readonly deadInterval: string;
    readonly helloInterval: string;
    readonly id: string;
    readonly interface: string;
    readonly md5: string;
    readonly mkey: string;
    readonly mtuIgnore: string;
    readonly networkType: string;
    readonly priority: string;
    readonly retransmitInterval: string;
    readonly text: string;
    readonly transmitDelay: string;
    readonly vdom?: string;
}
export function getRouterOspfChildOspfInterfaceOutput(args: GetRouterOspfChildOspfInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterOspfChildOspfInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getRouterOspfChildOspfInterface(a, opts))
}

/**
 * A collection of arguments for invoking getRouterOspfChildOspfInterface.
 */
export interface GetRouterOspfChildOspfInterfaceOutputArgs {
    id?: pulumi.Input<string>;
    mkey: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
}
