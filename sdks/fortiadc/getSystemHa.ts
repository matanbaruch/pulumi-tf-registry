// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSystemHa(args?: GetSystemHaArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemHaResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiadc:index/getSystemHa:getSystemHa", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemHa.
 */
export interface GetSystemHaArgs {
    id?: string;
}

/**
 * A collection of values returned by getSystemHa.
 */
export interface GetSystemHaResult {
    readonly arpInterval: string;
    readonly arpNum: string;
    readonly configPriority: string;
    readonly datadev: string;
    readonly failoverHoldTime: string;
    readonly failoverThreshold: string;
    readonly groupName: string;
    readonly groupid: string;
    readonly hbLostThreshold: string;
    readonly hbdev: string;
    readonly hbtype: string;
    readonly id: string;
    readonly interfaceList: string;
    readonly interval: string;
    readonly localAddress: string;
    readonly localNodeId: string;
    readonly mgmtInterface: string;
    readonly mgmtIp: string;
    readonly mgmtIpAllowaccess: string;
    readonly mgmtStatus: string;
    readonly mode: string;
    readonly monitorEnable: string;
    readonly nodeList: string;
    readonly override: string;
    readonly peerAddress: string;
    readonly priority: string;
    readonly syncL4Connection: string;
    readonly syncL4Persistent: string;
    readonly syncL7Persistent: string;
}
export function getSystemHaOutput(args?: GetSystemHaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemHaResult> {
    return pulumi.output(args).apply((a: any) => getSystemHa(a, opts))
}

/**
 * A collection of arguments for invoking getSystemHa.
 */
export interface GetSystemHaOutputArgs {
    id?: pulumi.Input<string>;
}
