// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemCertificateOcsp extends pulumi.CustomResource {
    /**
     * Get an existing SystemCertificateOcsp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemCertificateOcspState, opts?: pulumi.CustomResourceOptions): SystemCertificateOcsp {
        return new SystemCertificateOcsp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiadc:index/systemCertificateOcsp:SystemCertificateOcsp';

    /**
     * Returns true if the given object is an instance of SystemCertificateOcsp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemCertificateOcsp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemCertificateOcsp.__pulumiType;
    }

    public readonly acceptTrustedRootCa!: pulumi.Output<string>;
    public readonly caChain!: pulumi.Output<string>;
    public readonly caching!: pulumi.Output<string>;
    public readonly cachingExpireAheadTime!: pulumi.Output<string>;
    public readonly cachingExtraMaxAgeCheck!: pulumi.Output<string>;
    public readonly criteriaCheck!: pulumi.Output<string>;
    public readonly maxAge!: pulumi.Output<string>;
    public readonly mkey!: pulumi.Output<string>;
    public readonly nonceCheck!: pulumi.Output<string>;
    public readonly rejectOcspResponseWithMissingNextupdate!: pulumi.Output<string>;
    public readonly remoteCertificates!: pulumi.Output<string>;
    public readonly timeout!: pulumi.Output<string>;
    public readonly tunnelIp!: pulumi.Output<string>;
    public readonly tunnelPassword!: pulumi.Output<string>;
    public readonly tunnelPort!: pulumi.Output<string>;
    public readonly tunnelStatus!: pulumi.Output<string>;
    public readonly tunnelUsername!: pulumi.Output<string>;
    public readonly url!: pulumi.Output<string>;
    public readonly vdom!: pulumi.Output<string | undefined>;
    public readonly verifyOthers!: pulumi.Output<string>;

    /**
     * Create a SystemCertificateOcsp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemCertificateOcspArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemCertificateOcspArgs | SystemCertificateOcspState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemCertificateOcspState | undefined;
            resourceInputs["acceptTrustedRootCa"] = state ? state.acceptTrustedRootCa : undefined;
            resourceInputs["caChain"] = state ? state.caChain : undefined;
            resourceInputs["caching"] = state ? state.caching : undefined;
            resourceInputs["cachingExpireAheadTime"] = state ? state.cachingExpireAheadTime : undefined;
            resourceInputs["cachingExtraMaxAgeCheck"] = state ? state.cachingExtraMaxAgeCheck : undefined;
            resourceInputs["criteriaCheck"] = state ? state.criteriaCheck : undefined;
            resourceInputs["maxAge"] = state ? state.maxAge : undefined;
            resourceInputs["mkey"] = state ? state.mkey : undefined;
            resourceInputs["nonceCheck"] = state ? state.nonceCheck : undefined;
            resourceInputs["rejectOcspResponseWithMissingNextupdate"] = state ? state.rejectOcspResponseWithMissingNextupdate : undefined;
            resourceInputs["remoteCertificates"] = state ? state.remoteCertificates : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["tunnelIp"] = state ? state.tunnelIp : undefined;
            resourceInputs["tunnelPassword"] = state ? state.tunnelPassword : undefined;
            resourceInputs["tunnelPort"] = state ? state.tunnelPort : undefined;
            resourceInputs["tunnelStatus"] = state ? state.tunnelStatus : undefined;
            resourceInputs["tunnelUsername"] = state ? state.tunnelUsername : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
            resourceInputs["verifyOthers"] = state ? state.verifyOthers : undefined;
        } else {
            const args = argsOrState as SystemCertificateOcspArgs | undefined;
            if ((!args || args.mkey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mkey'");
            }
            resourceInputs["acceptTrustedRootCa"] = args ? args.acceptTrustedRootCa : undefined;
            resourceInputs["caChain"] = args ? args.caChain : undefined;
            resourceInputs["caching"] = args ? args.caching : undefined;
            resourceInputs["cachingExpireAheadTime"] = args ? args.cachingExpireAheadTime : undefined;
            resourceInputs["cachingExtraMaxAgeCheck"] = args ? args.cachingExtraMaxAgeCheck : undefined;
            resourceInputs["criteriaCheck"] = args ? args.criteriaCheck : undefined;
            resourceInputs["maxAge"] = args ? args.maxAge : undefined;
            resourceInputs["mkey"] = args ? args.mkey : undefined;
            resourceInputs["nonceCheck"] = args ? args.nonceCheck : undefined;
            resourceInputs["rejectOcspResponseWithMissingNextupdate"] = args ? args.rejectOcspResponseWithMissingNextupdate : undefined;
            resourceInputs["remoteCertificates"] = args ? args.remoteCertificates : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["tunnelIp"] = args ? args.tunnelIp : undefined;
            resourceInputs["tunnelPassword"] = args ? args.tunnelPassword : undefined;
            resourceInputs["tunnelPort"] = args ? args.tunnelPort : undefined;
            resourceInputs["tunnelStatus"] = args ? args.tunnelStatus : undefined;
            resourceInputs["tunnelUsername"] = args ? args.tunnelUsername : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
            resourceInputs["verifyOthers"] = args ? args.verifyOthers : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemCertificateOcsp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemCertificateOcsp resources.
 */
export interface SystemCertificateOcspState {
    acceptTrustedRootCa?: pulumi.Input<string>;
    caChain?: pulumi.Input<string>;
    caching?: pulumi.Input<string>;
    cachingExpireAheadTime?: pulumi.Input<string>;
    cachingExtraMaxAgeCheck?: pulumi.Input<string>;
    criteriaCheck?: pulumi.Input<string>;
    maxAge?: pulumi.Input<string>;
    mkey?: pulumi.Input<string>;
    nonceCheck?: pulumi.Input<string>;
    rejectOcspResponseWithMissingNextupdate?: pulumi.Input<string>;
    remoteCertificates?: pulumi.Input<string>;
    timeout?: pulumi.Input<string>;
    tunnelIp?: pulumi.Input<string>;
    tunnelPassword?: pulumi.Input<string>;
    tunnelPort?: pulumi.Input<string>;
    tunnelStatus?: pulumi.Input<string>;
    tunnelUsername?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    verifyOthers?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemCertificateOcsp resource.
 */
export interface SystemCertificateOcspArgs {
    acceptTrustedRootCa?: pulumi.Input<string>;
    caChain?: pulumi.Input<string>;
    caching?: pulumi.Input<string>;
    cachingExpireAheadTime?: pulumi.Input<string>;
    cachingExtraMaxAgeCheck?: pulumi.Input<string>;
    criteriaCheck?: pulumi.Input<string>;
    maxAge?: pulumi.Input<string>;
    mkey: pulumi.Input<string>;
    nonceCheck?: pulumi.Input<string>;
    rejectOcspResponseWithMissingNextupdate?: pulumi.Input<string>;
    remoteCertificates?: pulumi.Input<string>;
    timeout?: pulumi.Input<string>;
    tunnelIp?: pulumi.Input<string>;
    tunnelPassword?: pulumi.Input<string>;
    tunnelPort?: pulumi.Input<string>;
    tunnelStatus?: pulumi.Input<string>;
    tunnelUsername?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    verifyOthers?: pulumi.Input<string>;
}
