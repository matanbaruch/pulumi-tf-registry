// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemSdnConnector extends pulumi.CustomResource {
    /**
     * Get an existing SystemSdnConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemSdnConnectorState, opts?: pulumi.CustomResourceOptions): SystemSdnConnector {
        return new SystemSdnConnector(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiadc:index/systemSdnConnector:SystemSdnConnector';

    /**
     * Returns true if the given object is an instance of SystemSdnConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemSdnConnector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemSdnConnector.__pulumiType;
    }

    public readonly awsAccesskey!: pulumi.Output<string>;
    public readonly awsRegion!: pulumi.Output<string>;
    public readonly awsSecretkey!: pulumi.Output<string>;
    public readonly mkey!: pulumi.Output<string>;
    public readonly ociCert!: pulumi.Output<string>;
    public readonly ociCompartmentId!: pulumi.Output<string>;
    public readonly ociHaStatus!: pulumi.Output<string>;
    public readonly ociRegion!: pulumi.Output<string>;
    public readonly ociRegionType!: pulumi.Output<string>;
    public readonly ociTenantId!: pulumi.Output<string>;
    public readonly ociUserId!: pulumi.Output<string>;
    public readonly port!: pulumi.Output<string>;
    public readonly sapDnsSuffix!: pulumi.Output<string>;
    public readonly sapIcmHttpPort!: pulumi.Output<string>;
    public readonly sapMsHttpPort!: pulumi.Output<string>;
    public readonly sapPassword!: pulumi.Output<string>;
    public readonly sapSidadm!: pulumi.Output<string>;
    public readonly secretToken!: pulumi.Output<string>;
    public readonly server!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly updateInterval!: pulumi.Output<string>;
    public readonly useMetadataIam!: pulumi.Output<string>;
    public readonly vdom!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemSdnConnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemSdnConnectorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemSdnConnectorArgs | SystemSdnConnectorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemSdnConnectorState | undefined;
            resourceInputs["awsAccesskey"] = state ? state.awsAccesskey : undefined;
            resourceInputs["awsRegion"] = state ? state.awsRegion : undefined;
            resourceInputs["awsSecretkey"] = state ? state.awsSecretkey : undefined;
            resourceInputs["mkey"] = state ? state.mkey : undefined;
            resourceInputs["ociCert"] = state ? state.ociCert : undefined;
            resourceInputs["ociCompartmentId"] = state ? state.ociCompartmentId : undefined;
            resourceInputs["ociHaStatus"] = state ? state.ociHaStatus : undefined;
            resourceInputs["ociRegion"] = state ? state.ociRegion : undefined;
            resourceInputs["ociRegionType"] = state ? state.ociRegionType : undefined;
            resourceInputs["ociTenantId"] = state ? state.ociTenantId : undefined;
            resourceInputs["ociUserId"] = state ? state.ociUserId : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["sapDnsSuffix"] = state ? state.sapDnsSuffix : undefined;
            resourceInputs["sapIcmHttpPort"] = state ? state.sapIcmHttpPort : undefined;
            resourceInputs["sapMsHttpPort"] = state ? state.sapMsHttpPort : undefined;
            resourceInputs["sapPassword"] = state ? state.sapPassword : undefined;
            resourceInputs["sapSidadm"] = state ? state.sapSidadm : undefined;
            resourceInputs["secretToken"] = state ? state.secretToken : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateInterval"] = state ? state.updateInterval : undefined;
            resourceInputs["useMetadataIam"] = state ? state.useMetadataIam : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
        } else {
            const args = argsOrState as SystemSdnConnectorArgs | undefined;
            if ((!args || args.mkey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mkey'");
            }
            resourceInputs["awsAccesskey"] = args ? args.awsAccesskey : undefined;
            resourceInputs["awsRegion"] = args ? args.awsRegion : undefined;
            resourceInputs["awsSecretkey"] = args ? args.awsSecretkey : undefined;
            resourceInputs["mkey"] = args ? args.mkey : undefined;
            resourceInputs["ociCert"] = args ? args.ociCert : undefined;
            resourceInputs["ociCompartmentId"] = args ? args.ociCompartmentId : undefined;
            resourceInputs["ociHaStatus"] = args ? args.ociHaStatus : undefined;
            resourceInputs["ociRegion"] = args ? args.ociRegion : undefined;
            resourceInputs["ociRegionType"] = args ? args.ociRegionType : undefined;
            resourceInputs["ociTenantId"] = args ? args.ociTenantId : undefined;
            resourceInputs["ociUserId"] = args ? args.ociUserId : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["sapDnsSuffix"] = args ? args.sapDnsSuffix : undefined;
            resourceInputs["sapIcmHttpPort"] = args ? args.sapIcmHttpPort : undefined;
            resourceInputs["sapMsHttpPort"] = args ? args.sapMsHttpPort : undefined;
            resourceInputs["sapPassword"] = args ? args.sapPassword : undefined;
            resourceInputs["sapSidadm"] = args ? args.sapSidadm : undefined;
            resourceInputs["secretToken"] = args ? args.secretToken : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["updateInterval"] = args ? args.updateInterval : undefined;
            resourceInputs["useMetadataIam"] = args ? args.useMetadataIam : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemSdnConnector.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemSdnConnector resources.
 */
export interface SystemSdnConnectorState {
    awsAccesskey?: pulumi.Input<string>;
    awsRegion?: pulumi.Input<string>;
    awsSecretkey?: pulumi.Input<string>;
    mkey?: pulumi.Input<string>;
    ociCert?: pulumi.Input<string>;
    ociCompartmentId?: pulumi.Input<string>;
    ociHaStatus?: pulumi.Input<string>;
    ociRegion?: pulumi.Input<string>;
    ociRegionType?: pulumi.Input<string>;
    ociTenantId?: pulumi.Input<string>;
    ociUserId?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    sapDnsSuffix?: pulumi.Input<string>;
    sapIcmHttpPort?: pulumi.Input<string>;
    sapMsHttpPort?: pulumi.Input<string>;
    sapPassword?: pulumi.Input<string>;
    sapSidadm?: pulumi.Input<string>;
    secretToken?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updateInterval?: pulumi.Input<string>;
    useMetadataIam?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemSdnConnector resource.
 */
export interface SystemSdnConnectorArgs {
    awsAccesskey?: pulumi.Input<string>;
    awsRegion?: pulumi.Input<string>;
    awsSecretkey?: pulumi.Input<string>;
    mkey: pulumi.Input<string>;
    ociCert?: pulumi.Input<string>;
    ociCompartmentId?: pulumi.Input<string>;
    ociHaStatus?: pulumi.Input<string>;
    ociRegion?: pulumi.Input<string>;
    ociRegionType?: pulumi.Input<string>;
    ociTenantId?: pulumi.Input<string>;
    ociUserId?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    sapDnsSuffix?: pulumi.Input<string>;
    sapIcmHttpPort?: pulumi.Input<string>;
    sapMsHttpPort?: pulumi.Input<string>;
    sapPassword?: pulumi.Input<string>;
    sapSidadm?: pulumi.Input<string>;
    secretToken?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updateInterval?: pulumi.Input<string>;
    useMetadataIam?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
}
