// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSystemVdom(args: GetSystemVdomArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemVdomResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiadc:index/getSystemVdom:getSystemVdom", {
        "id": args.id,
        "mkey": args.mkey,
        "vdom": args.vdom,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemVdom.
 */
export interface GetSystemVdomArgs {
    id?: string;
    mkey: string;
    vdom?: string;
}

/**
 * A collection of values returned by getSystemVdom.
 */
export interface GetSystemVdomResult {
    readonly concurrentsession: string;
    readonly ep: string;
    readonly hc: string;
    readonly id: string;
    readonly inbound: string;
    readonly l4cps: string;
    readonly l7cps: string;
    readonly l7rps: string;
    readonly lu: string;
    readonly mkey: string;
    readonly outbound: string;
    readonly rs: string;
    readonly sp: string;
    readonly sslcps: string;
    readonly sslthroughput: string;
    readonly status: string;
    readonly ug: string;
    readonly vdom?: string;
    readonly vs: string;
}
export function getSystemVdomOutput(args: GetSystemVdomOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemVdomResult> {
    return pulumi.output(args).apply((a: any) => getSystemVdom(a, opts))
}

/**
 * A collection of arguments for invoking getSystemVdom.
 */
export interface GetSystemVdomOutputArgs {
    id?: pulumi.Input<string>;
    mkey: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
}
