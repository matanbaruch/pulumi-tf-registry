// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLoadBalanceClientSslProfile(args: GetLoadBalanceClientSslProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetLoadBalanceClientSslProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiadc:index/getLoadBalanceClientSslProfile:getLoadBalanceClientSslProfile", {
        "id": args.id,
        "mkey": args.mkey,
        "vdom": args.vdom,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLoadBalanceClientSslProfile.
 */
export interface GetLoadBalanceClientSslProfileArgs {
    id?: string;
    mkey: string;
    vdom?: string;
}

/**
 * A collection of values returned by getLoadBalanceClientSslProfile.
 */
export interface GetLoadBalanceClientSslProfileResult {
    readonly backendCertificateVerify: string;
    readonly backendCiphersTlsv13: string;
    readonly backendCustomizedSslCiphers: string;
    readonly backendCustomizedSslCiphersFlag: string;
    readonly backendSslAllowedVersions: string;
    readonly backendSslCiphers: string;
    readonly backendSslOcspStaplingSupport: string;
    readonly backendSslSniForward: string;
    readonly clientCertificateVerify: string;
    readonly clientCertificateVerifyMode: string;
    readonly clientSniRequired: string;
    readonly customizedSslCiphers: string;
    readonly customizedSslCiphersFlag: string;
    readonly forwardProxy: string;
    readonly forwardProxyCertificateCaching: string;
    readonly forwardProxyIntermediateCaGroup: string;
    readonly forwardProxyLocalSigningCa: string;
    readonly httpForwardClientCertificate: string;
    readonly httpForwardClientCertificateHeader: string;
    readonly id: string;
    readonly localCertificateGroup: string;
    readonly mkey: string;
    readonly rejectOcspStaplingWithMissingNextupdate: string;
    readonly rfc7919Comply: string;
    readonly sslAllowedVersions: string;
    readonly sslCiphers: string;
    readonly sslCiphersTlsv13: string;
    readonly sslDhParamSize: string;
    readonly sslDynamicRecordSizing: string;
    readonly sslRenegotiatePeriod: string;
    readonly sslRenegotiateSize: string;
    readonly sslRenegotiation: string;
    readonly sslRenegotiationInterval: string;
    readonly sslSecureRenegotiation: string;
    readonly sslSessionCacheFlag: string;
    readonly supportedGroups: string;
    readonly useTlsTickets: string;
    readonly vdom?: string;
}
export function getLoadBalanceClientSslProfileOutput(args: GetLoadBalanceClientSslProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoadBalanceClientSslProfileResult> {
    return pulumi.output(args).apply((a: any) => getLoadBalanceClientSslProfile(a, opts))
}

/**
 * A collection of arguments for invoking getLoadBalanceClientSslProfile.
 */
export interface GetLoadBalanceClientSslProfileOutputArgs {
    id?: pulumi.Input<string>;
    mkey: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
}
