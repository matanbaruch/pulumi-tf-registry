// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RouterBgpChildNeighbor extends pulumi.CustomResource {
    /**
     * Get an existing RouterBgpChildNeighbor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterBgpChildNeighborState, opts?: pulumi.CustomResourceOptions): RouterBgpChildNeighbor {
        return new RouterBgpChildNeighbor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiadc:index/routerBgpChildNeighbor:RouterBgpChildNeighbor';

    /**
     * Returns true if the given object is an instance of RouterBgpChildNeighbor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterBgpChildNeighbor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterBgpChildNeighbor.__pulumiType;
    }

    public readonly distributeListIn!: pulumi.Output<string>;
    public readonly distributeListIn6!: pulumi.Output<string>;
    public readonly distributeListOut!: pulumi.Output<string>;
    public readonly distributeListOut6!: pulumi.Output<string>;
    public readonly holdtime!: pulumi.Output<string>;
    public readonly interface!: pulumi.Output<string>;
    public readonly ip!: pulumi.Output<string>;
    public readonly ip6!: pulumi.Output<string>;
    public readonly keepalive!: pulumi.Output<string>;
    public readonly mkey!: pulumi.Output<string>;
    public readonly port!: pulumi.Output<string>;
    public readonly prefixListIn!: pulumi.Output<string>;
    public readonly prefixListIn6!: pulumi.Output<string>;
    public readonly prefixListOut!: pulumi.Output<string>;
    public readonly prefixListOut6!: pulumi.Output<string>;
    public readonly remoteAs!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly vdom!: pulumi.Output<string | undefined>;
    public readonly weight!: pulumi.Output<string>;

    /**
     * Create a RouterBgpChildNeighbor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterBgpChildNeighborArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterBgpChildNeighborArgs | RouterBgpChildNeighborState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterBgpChildNeighborState | undefined;
            resourceInputs["distributeListIn"] = state ? state.distributeListIn : undefined;
            resourceInputs["distributeListIn6"] = state ? state.distributeListIn6 : undefined;
            resourceInputs["distributeListOut"] = state ? state.distributeListOut : undefined;
            resourceInputs["distributeListOut6"] = state ? state.distributeListOut6 : undefined;
            resourceInputs["holdtime"] = state ? state.holdtime : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["ip6"] = state ? state.ip6 : undefined;
            resourceInputs["keepalive"] = state ? state.keepalive : undefined;
            resourceInputs["mkey"] = state ? state.mkey : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["prefixListIn"] = state ? state.prefixListIn : undefined;
            resourceInputs["prefixListIn6"] = state ? state.prefixListIn6 : undefined;
            resourceInputs["prefixListOut"] = state ? state.prefixListOut : undefined;
            resourceInputs["prefixListOut6"] = state ? state.prefixListOut6 : undefined;
            resourceInputs["remoteAs"] = state ? state.remoteAs : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as RouterBgpChildNeighborArgs | undefined;
            if ((!args || args.mkey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mkey'");
            }
            resourceInputs["distributeListIn"] = args ? args.distributeListIn : undefined;
            resourceInputs["distributeListIn6"] = args ? args.distributeListIn6 : undefined;
            resourceInputs["distributeListOut"] = args ? args.distributeListOut : undefined;
            resourceInputs["distributeListOut6"] = args ? args.distributeListOut6 : undefined;
            resourceInputs["holdtime"] = args ? args.holdtime : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["ip"] = args ? args.ip : undefined;
            resourceInputs["ip6"] = args ? args.ip6 : undefined;
            resourceInputs["keepalive"] = args ? args.keepalive : undefined;
            resourceInputs["mkey"] = args ? args.mkey : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["prefixListIn"] = args ? args.prefixListIn : undefined;
            resourceInputs["prefixListIn6"] = args ? args.prefixListIn6 : undefined;
            resourceInputs["prefixListOut"] = args ? args.prefixListOut : undefined;
            resourceInputs["prefixListOut6"] = args ? args.prefixListOut6 : undefined;
            resourceInputs["remoteAs"] = args ? args.remoteAs : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterBgpChildNeighbor.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterBgpChildNeighbor resources.
 */
export interface RouterBgpChildNeighborState {
    distributeListIn?: pulumi.Input<string>;
    distributeListIn6?: pulumi.Input<string>;
    distributeListOut?: pulumi.Input<string>;
    distributeListOut6?: pulumi.Input<string>;
    holdtime?: pulumi.Input<string>;
    interface?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    ip6?: pulumi.Input<string>;
    keepalive?: pulumi.Input<string>;
    mkey?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    prefixListIn?: pulumi.Input<string>;
    prefixListIn6?: pulumi.Input<string>;
    prefixListOut?: pulumi.Input<string>;
    prefixListOut6?: pulumi.Input<string>;
    remoteAs?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    weight?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouterBgpChildNeighbor resource.
 */
export interface RouterBgpChildNeighborArgs {
    distributeListIn?: pulumi.Input<string>;
    distributeListIn6?: pulumi.Input<string>;
    distributeListOut?: pulumi.Input<string>;
    distributeListOut6?: pulumi.Input<string>;
    holdtime?: pulumi.Input<string>;
    interface?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    ip6?: pulumi.Input<string>;
    keepalive?: pulumi.Input<string>;
    mkey: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    prefixListIn?: pulumi.Input<string>;
    prefixListIn6?: pulumi.Input<string>;
    prefixListOut?: pulumi.Input<string>;
    prefixListOut6?: pulumi.Input<string>;
    remoteAs?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    weight?: pulumi.Input<string>;
}
