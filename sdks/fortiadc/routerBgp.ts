// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RouterBgp extends pulumi.CustomResource {
    /**
     * Get an existing RouterBgp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterBgpState, opts?: pulumi.CustomResourceOptions): RouterBgp {
        return new RouterBgp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiadc:index/routerBgp:RouterBgp';

    /**
     * Returns true if the given object is an instance of RouterBgp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterBgp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterBgp.__pulumiType;
    }

    public readonly alwaysCompareMed!: pulumi.Output<string>;
    public readonly as!: pulumi.Output<string>;
    public readonly bestpathCmpRouterid!: pulumi.Output<string>;
    public readonly deterministicMed!: pulumi.Output<string>;
    public readonly redistributeConnected!: pulumi.Output<string>;
    public readonly redistributeConnected6!: pulumi.Output<string>;
    public readonly redistributeOspf!: pulumi.Output<string>;
    public readonly redistributeStatic!: pulumi.Output<string>;
    public readonly redistributeStatic6!: pulumi.Output<string>;
    public readonly routerId!: pulumi.Output<string>;

    /**
     * Create a RouterBgp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RouterBgpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterBgpArgs | RouterBgpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterBgpState | undefined;
            resourceInputs["alwaysCompareMed"] = state ? state.alwaysCompareMed : undefined;
            resourceInputs["as"] = state ? state.as : undefined;
            resourceInputs["bestpathCmpRouterid"] = state ? state.bestpathCmpRouterid : undefined;
            resourceInputs["deterministicMed"] = state ? state.deterministicMed : undefined;
            resourceInputs["redistributeConnected"] = state ? state.redistributeConnected : undefined;
            resourceInputs["redistributeConnected6"] = state ? state.redistributeConnected6 : undefined;
            resourceInputs["redistributeOspf"] = state ? state.redistributeOspf : undefined;
            resourceInputs["redistributeStatic"] = state ? state.redistributeStatic : undefined;
            resourceInputs["redistributeStatic6"] = state ? state.redistributeStatic6 : undefined;
            resourceInputs["routerId"] = state ? state.routerId : undefined;
        } else {
            const args = argsOrState as RouterBgpArgs | undefined;
            resourceInputs["alwaysCompareMed"] = args ? args.alwaysCompareMed : undefined;
            resourceInputs["as"] = args ? args.as : undefined;
            resourceInputs["bestpathCmpRouterid"] = args ? args.bestpathCmpRouterid : undefined;
            resourceInputs["deterministicMed"] = args ? args.deterministicMed : undefined;
            resourceInputs["redistributeConnected"] = args ? args.redistributeConnected : undefined;
            resourceInputs["redistributeConnected6"] = args ? args.redistributeConnected6 : undefined;
            resourceInputs["redistributeOspf"] = args ? args.redistributeOspf : undefined;
            resourceInputs["redistributeStatic"] = args ? args.redistributeStatic : undefined;
            resourceInputs["redistributeStatic6"] = args ? args.redistributeStatic6 : undefined;
            resourceInputs["routerId"] = args ? args.routerId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterBgp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterBgp resources.
 */
export interface RouterBgpState {
    alwaysCompareMed?: pulumi.Input<string>;
    as?: pulumi.Input<string>;
    bestpathCmpRouterid?: pulumi.Input<string>;
    deterministicMed?: pulumi.Input<string>;
    redistributeConnected?: pulumi.Input<string>;
    redistributeConnected6?: pulumi.Input<string>;
    redistributeOspf?: pulumi.Input<string>;
    redistributeStatic?: pulumi.Input<string>;
    redistributeStatic6?: pulumi.Input<string>;
    routerId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouterBgp resource.
 */
export interface RouterBgpArgs {
    alwaysCompareMed?: pulumi.Input<string>;
    as?: pulumi.Input<string>;
    bestpathCmpRouterid?: pulumi.Input<string>;
    deterministicMed?: pulumi.Input<string>;
    redistributeConnected?: pulumi.Input<string>;
    redistributeConnected6?: pulumi.Input<string>;
    redistributeOspf?: pulumi.Input<string>;
    redistributeStatic?: pulumi.Input<string>;
    redistributeStatic6?: pulumi.Input<string>;
    routerId?: pulumi.Input<string>;
}
