// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FirewallVip extends pulumi.CustomResource {
    /**
     * Get an existing FirewallVip resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallVipState, opts?: pulumi.CustomResourceOptions): FirewallVip {
        return new FirewallVip(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiadc:index/firewallVip:FirewallVip';

    /**
     * Returns true if the given object is an instance of FirewallVip.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallVip {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallVip.__pulumiType;
    }

    public readonly extif!: pulumi.Output<string>;
    public readonly extip!: pulumi.Output<string>;
    public readonly extport!: pulumi.Output<string>;
    public readonly mappedipMax!: pulumi.Output<string>;
    public readonly mappedipMin!: pulumi.Output<string>;
    public readonly mappedportMax!: pulumi.Output<string>;
    public readonly mappedportMin!: pulumi.Output<string>;
    public readonly mkey!: pulumi.Output<string>;
    public readonly noNat!: pulumi.Output<string>;
    public readonly portforward!: pulumi.Output<string>;
    public readonly proto!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly trafficGroup!: pulumi.Output<string>;
    public readonly vdom!: pulumi.Output<string | undefined>;

    /**
     * Create a FirewallVip resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallVipArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallVipArgs | FirewallVipState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallVipState | undefined;
            resourceInputs["extif"] = state ? state.extif : undefined;
            resourceInputs["extip"] = state ? state.extip : undefined;
            resourceInputs["extport"] = state ? state.extport : undefined;
            resourceInputs["mappedipMax"] = state ? state.mappedipMax : undefined;
            resourceInputs["mappedipMin"] = state ? state.mappedipMin : undefined;
            resourceInputs["mappedportMax"] = state ? state.mappedportMax : undefined;
            resourceInputs["mappedportMin"] = state ? state.mappedportMin : undefined;
            resourceInputs["mkey"] = state ? state.mkey : undefined;
            resourceInputs["noNat"] = state ? state.noNat : undefined;
            resourceInputs["portforward"] = state ? state.portforward : undefined;
            resourceInputs["proto"] = state ? state.proto : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["trafficGroup"] = state ? state.trafficGroup : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
        } else {
            const args = argsOrState as FirewallVipArgs | undefined;
            if ((!args || args.mkey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mkey'");
            }
            resourceInputs["extif"] = args ? args.extif : undefined;
            resourceInputs["extip"] = args ? args.extip : undefined;
            resourceInputs["extport"] = args ? args.extport : undefined;
            resourceInputs["mappedipMax"] = args ? args.mappedipMax : undefined;
            resourceInputs["mappedipMin"] = args ? args.mappedipMin : undefined;
            resourceInputs["mappedportMax"] = args ? args.mappedportMax : undefined;
            resourceInputs["mappedportMin"] = args ? args.mappedportMin : undefined;
            resourceInputs["mkey"] = args ? args.mkey : undefined;
            resourceInputs["noNat"] = args ? args.noNat : undefined;
            resourceInputs["portforward"] = args ? args.portforward : undefined;
            resourceInputs["proto"] = args ? args.proto : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["trafficGroup"] = args ? args.trafficGroup : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallVip.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirewallVip resources.
 */
export interface FirewallVipState {
    extif?: pulumi.Input<string>;
    extip?: pulumi.Input<string>;
    extport?: pulumi.Input<string>;
    mappedipMax?: pulumi.Input<string>;
    mappedipMin?: pulumi.Input<string>;
    mappedportMax?: pulumi.Input<string>;
    mappedportMin?: pulumi.Input<string>;
    mkey?: pulumi.Input<string>;
    noNat?: pulumi.Input<string>;
    portforward?: pulumi.Input<string>;
    proto?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    trafficGroup?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallVip resource.
 */
export interface FirewallVipArgs {
    extif?: pulumi.Input<string>;
    extip?: pulumi.Input<string>;
    extport?: pulumi.Input<string>;
    mappedipMax?: pulumi.Input<string>;
    mappedipMin?: pulumi.Input<string>;
    mappedportMax?: pulumi.Input<string>;
    mappedportMin?: pulumi.Input<string>;
    mkey: pulumi.Input<string>;
    noNat?: pulumi.Input<string>;
    portforward?: pulumi.Input<string>;
    proto?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    trafficGroup?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
}
