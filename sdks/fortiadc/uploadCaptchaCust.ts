// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class UploadCaptchaCust extends pulumi.CustomResource {
    /**
     * Get an existing UploadCaptchaCust resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UploadCaptchaCustState, opts?: pulumi.CustomResourceOptions): UploadCaptchaCust {
        return new UploadCaptchaCust(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiadc:index/uploadCaptchaCust:UploadCaptchaCust';

    /**
     * Returns true if the given object is an instance of UploadCaptchaCust.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UploadCaptchaCust {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UploadCaptchaCust.__pulumiType;
    }

    public readonly customPage!: pulumi.Output<string | undefined>;
    public readonly errorpagefile!: pulumi.Output<string>;
    public readonly maxBlockPeriod!: pulumi.Output<string | undefined>;
    public readonly maxPictureChanges!: pulumi.Output<string | undefined>;
    public readonly maxRetryTimes!: pulumi.Output<string | undefined>;
    public readonly maxValidPeriod!: pulumi.Output<string | undefined>;
    public readonly maxVerifyPeriod!: pulumi.Output<string | undefined>;
    public readonly mkey!: pulumi.Output<string>;
    public readonly picDifficulty!: pulumi.Output<string | undefined>;
    public readonly update!: pulumi.Output<string | undefined>;
    public readonly vdom!: pulumi.Output<string | undefined>;
    public readonly vpath!: pulumi.Output<string>;

    /**
     * Create a UploadCaptchaCust resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UploadCaptchaCustArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UploadCaptchaCustArgs | UploadCaptchaCustState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UploadCaptchaCustState | undefined;
            resourceInputs["customPage"] = state ? state.customPage : undefined;
            resourceInputs["errorpagefile"] = state ? state.errorpagefile : undefined;
            resourceInputs["maxBlockPeriod"] = state ? state.maxBlockPeriod : undefined;
            resourceInputs["maxPictureChanges"] = state ? state.maxPictureChanges : undefined;
            resourceInputs["maxRetryTimes"] = state ? state.maxRetryTimes : undefined;
            resourceInputs["maxValidPeriod"] = state ? state.maxValidPeriod : undefined;
            resourceInputs["maxVerifyPeriod"] = state ? state.maxVerifyPeriod : undefined;
            resourceInputs["mkey"] = state ? state.mkey : undefined;
            resourceInputs["picDifficulty"] = state ? state.picDifficulty : undefined;
            resourceInputs["update"] = state ? state.update : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
            resourceInputs["vpath"] = state ? state.vpath : undefined;
        } else {
            const args = argsOrState as UploadCaptchaCustArgs | undefined;
            if ((!args || args.errorpagefile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'errorpagefile'");
            }
            if ((!args || args.mkey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mkey'");
            }
            resourceInputs["customPage"] = args ? args.customPage : undefined;
            resourceInputs["errorpagefile"] = args ? args.errorpagefile : undefined;
            resourceInputs["maxBlockPeriod"] = args ? args.maxBlockPeriod : undefined;
            resourceInputs["maxPictureChanges"] = args ? args.maxPictureChanges : undefined;
            resourceInputs["maxRetryTimes"] = args ? args.maxRetryTimes : undefined;
            resourceInputs["maxValidPeriod"] = args ? args.maxValidPeriod : undefined;
            resourceInputs["maxVerifyPeriod"] = args ? args.maxVerifyPeriod : undefined;
            resourceInputs["mkey"] = args ? args.mkey : undefined;
            resourceInputs["picDifficulty"] = args ? args.picDifficulty : undefined;
            resourceInputs["update"] = args ? args.update : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
            resourceInputs["vpath"] = args ? args.vpath : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UploadCaptchaCust.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering UploadCaptchaCust resources.
 */
export interface UploadCaptchaCustState {
    customPage?: pulumi.Input<string>;
    errorpagefile?: pulumi.Input<string>;
    maxBlockPeriod?: pulumi.Input<string>;
    maxPictureChanges?: pulumi.Input<string>;
    maxRetryTimes?: pulumi.Input<string>;
    maxValidPeriod?: pulumi.Input<string>;
    maxVerifyPeriod?: pulumi.Input<string>;
    mkey?: pulumi.Input<string>;
    picDifficulty?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    vpath?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UploadCaptchaCust resource.
 */
export interface UploadCaptchaCustArgs {
    customPage?: pulumi.Input<string>;
    errorpagefile: pulumi.Input<string>;
    maxBlockPeriod?: pulumi.Input<string>;
    maxPictureChanges?: pulumi.Input<string>;
    maxRetryTimes?: pulumi.Input<string>;
    maxValidPeriod?: pulumi.Input<string>;
    maxVerifyPeriod?: pulumi.Input<string>;
    mkey: pulumi.Input<string>;
    picDifficulty?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    vpath?: pulumi.Input<string>;
}
