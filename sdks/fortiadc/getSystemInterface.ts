// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSystemInterface(args: GetSystemInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiadc:index/getSystemInterface:getSystemInterface", {
        "id": args.id,
        "mkey": args.mkey,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemInterface.
 */
export interface GetSystemInterfaceArgs {
    id?: string;
    mkey: string;
}

/**
 * A collection of values returned by getSystemInterface.
 */
export interface GetSystemInterfaceResult {
    readonly aggregateAlgorithm: string;
    readonly aggregateMode: string;
    readonly allowaccess: string;
    readonly dedicateToManagement: string;
    readonly defaultGw: string;
    readonly dhcpGateway: string;
    readonly dhcpGwDistance: string;
    readonly dhcpGwOverride: string;
    readonly dhcpIpOverlap: string;
    readonly discRetryTimeout: string;
    readonly dnsServerOverride: string;
    readonly floating: string;
    readonly floatingIp: string;
    readonly floatingIp6: string;
    readonly id: string;
    readonly interface: string;
    readonly ip: string;
    readonly ip6: string;
    readonly mkey: string;
    readonly mode: string;
    readonly mtu: string;
    readonly password: string;
    readonly redundantMember: string;
    readonly secondaryIp: string;
    readonly speed: string;
    readonly status: string;
    readonly trafficGroup: string;
    readonly trustIp: string;
    readonly type: string;
    readonly username: string;
    readonly vdom: string;
    readonly vlanid: string;
    readonly wccp: string;
}
export function getSystemInterfaceOutput(args: GetSystemInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getSystemInterface(a, opts))
}

/**
 * A collection of arguments for invoking getSystemInterface.
 */
export interface GetSystemInterfaceOutputArgs {
    id?: pulumi.Input<string>;
    mkey: pulumi.Input<string>;
}
