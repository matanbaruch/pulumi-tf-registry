// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RouterOspf extends pulumi.CustomResource {
    /**
     * Get an existing RouterOspf resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterOspfState, opts?: pulumi.CustomResourceOptions): RouterOspf {
        return new RouterOspf(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiadc:index/routerOspf:RouterOspf';

    /**
     * Returns true if the given object is an instance of RouterOspf.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterOspf {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterOspf.__pulumiType;
    }

    public readonly defaultInformationMetric!: pulumi.Output<string>;
    public readonly defaultInformationMetricType!: pulumi.Output<string>;
    public readonly defaultInformationOriginate!: pulumi.Output<string>;
    public readonly defaultMetric!: pulumi.Output<string>;
    public readonly distance!: pulumi.Output<string>;
    public readonly redistributeConnected!: pulumi.Output<string>;
    public readonly redistributeConnectedMetric!: pulumi.Output<string>;
    public readonly redistributeConnectedMetricType!: pulumi.Output<string>;
    public readonly redistributeStatic!: pulumi.Output<string>;
    public readonly redistributeStaticMetric!: pulumi.Output<string>;
    public readonly redistributeStaticMetricType!: pulumi.Output<string>;
    public readonly routerId!: pulumi.Output<string>;

    /**
     * Create a RouterOspf resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RouterOspfArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterOspfArgs | RouterOspfState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterOspfState | undefined;
            resourceInputs["defaultInformationMetric"] = state ? state.defaultInformationMetric : undefined;
            resourceInputs["defaultInformationMetricType"] = state ? state.defaultInformationMetricType : undefined;
            resourceInputs["defaultInformationOriginate"] = state ? state.defaultInformationOriginate : undefined;
            resourceInputs["defaultMetric"] = state ? state.defaultMetric : undefined;
            resourceInputs["distance"] = state ? state.distance : undefined;
            resourceInputs["redistributeConnected"] = state ? state.redistributeConnected : undefined;
            resourceInputs["redistributeConnectedMetric"] = state ? state.redistributeConnectedMetric : undefined;
            resourceInputs["redistributeConnectedMetricType"] = state ? state.redistributeConnectedMetricType : undefined;
            resourceInputs["redistributeStatic"] = state ? state.redistributeStatic : undefined;
            resourceInputs["redistributeStaticMetric"] = state ? state.redistributeStaticMetric : undefined;
            resourceInputs["redistributeStaticMetricType"] = state ? state.redistributeStaticMetricType : undefined;
            resourceInputs["routerId"] = state ? state.routerId : undefined;
        } else {
            const args = argsOrState as RouterOspfArgs | undefined;
            resourceInputs["defaultInformationMetric"] = args ? args.defaultInformationMetric : undefined;
            resourceInputs["defaultInformationMetricType"] = args ? args.defaultInformationMetricType : undefined;
            resourceInputs["defaultInformationOriginate"] = args ? args.defaultInformationOriginate : undefined;
            resourceInputs["defaultMetric"] = args ? args.defaultMetric : undefined;
            resourceInputs["distance"] = args ? args.distance : undefined;
            resourceInputs["redistributeConnected"] = args ? args.redistributeConnected : undefined;
            resourceInputs["redistributeConnectedMetric"] = args ? args.redistributeConnectedMetric : undefined;
            resourceInputs["redistributeConnectedMetricType"] = args ? args.redistributeConnectedMetricType : undefined;
            resourceInputs["redistributeStatic"] = args ? args.redistributeStatic : undefined;
            resourceInputs["redistributeStaticMetric"] = args ? args.redistributeStaticMetric : undefined;
            resourceInputs["redistributeStaticMetricType"] = args ? args.redistributeStaticMetricType : undefined;
            resourceInputs["routerId"] = args ? args.routerId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterOspf.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterOspf resources.
 */
export interface RouterOspfState {
    defaultInformationMetric?: pulumi.Input<string>;
    defaultInformationMetricType?: pulumi.Input<string>;
    defaultInformationOriginate?: pulumi.Input<string>;
    defaultMetric?: pulumi.Input<string>;
    distance?: pulumi.Input<string>;
    redistributeConnected?: pulumi.Input<string>;
    redistributeConnectedMetric?: pulumi.Input<string>;
    redistributeConnectedMetricType?: pulumi.Input<string>;
    redistributeStatic?: pulumi.Input<string>;
    redistributeStaticMetric?: pulumi.Input<string>;
    redistributeStaticMetricType?: pulumi.Input<string>;
    routerId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouterOspf resource.
 */
export interface RouterOspfArgs {
    defaultInformationMetric?: pulumi.Input<string>;
    defaultInformationMetricType?: pulumi.Input<string>;
    defaultInformationOriginate?: pulumi.Input<string>;
    defaultMetric?: pulumi.Input<string>;
    distance?: pulumi.Input<string>;
    redistributeConnected?: pulumi.Input<string>;
    redistributeConnectedMetric?: pulumi.Input<string>;
    redistributeConnectedMetricType?: pulumi.Input<string>;
    redistributeStatic?: pulumi.Input<string>;
    redistributeStaticMetric?: pulumi.Input<string>;
    redistributeStaticMetricType?: pulumi.Input<string>;
    routerId?: pulumi.Input<string>;
}
