// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LoadBalanceContentRewriting extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalanceContentRewriting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadBalanceContentRewritingState, opts?: pulumi.CustomResourceOptions): LoadBalanceContentRewriting {
        return new LoadBalanceContentRewriting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiadc:index/loadBalanceContentRewriting:LoadBalanceContentRewriting';

    /**
     * Returns true if the given object is an instance of LoadBalanceContentRewriting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoadBalanceContentRewriting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadBalanceContentRewriting.__pulumiType;
    }

    public readonly action!: pulumi.Output<string>;
    public readonly actionType!: pulumi.Output<string>;
    public readonly comments!: pulumi.Output<string>;
    public readonly headerName!: pulumi.Output<string>;
    public readonly headerValue!: pulumi.Output<string>;
    public readonly hostContent!: pulumi.Output<string>;
    public readonly hostStatus!: pulumi.Output<string>;
    public readonly location!: pulumi.Output<string>;
    public readonly mkey!: pulumi.Output<string>;
    public readonly redirect!: pulumi.Output<string>;
    public readonly refererContent!: pulumi.Output<string>;
    public readonly refererStatus!: pulumi.Output<string>;
    public readonly urlContent!: pulumi.Output<string>;
    public readonly urlStatus!: pulumi.Output<string>;
    public readonly vdom!: pulumi.Output<string | undefined>;

    /**
     * Create a LoadBalanceContentRewriting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadBalanceContentRewritingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoadBalanceContentRewritingArgs | LoadBalanceContentRewritingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoadBalanceContentRewritingState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["actionType"] = state ? state.actionType : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["headerName"] = state ? state.headerName : undefined;
            resourceInputs["headerValue"] = state ? state.headerValue : undefined;
            resourceInputs["hostContent"] = state ? state.hostContent : undefined;
            resourceInputs["hostStatus"] = state ? state.hostStatus : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["mkey"] = state ? state.mkey : undefined;
            resourceInputs["redirect"] = state ? state.redirect : undefined;
            resourceInputs["refererContent"] = state ? state.refererContent : undefined;
            resourceInputs["refererStatus"] = state ? state.refererStatus : undefined;
            resourceInputs["urlContent"] = state ? state.urlContent : undefined;
            resourceInputs["urlStatus"] = state ? state.urlStatus : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
        } else {
            const args = argsOrState as LoadBalanceContentRewritingArgs | undefined;
            if ((!args || args.mkey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mkey'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["actionType"] = args ? args.actionType : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["headerName"] = args ? args.headerName : undefined;
            resourceInputs["headerValue"] = args ? args.headerValue : undefined;
            resourceInputs["hostContent"] = args ? args.hostContent : undefined;
            resourceInputs["hostStatus"] = args ? args.hostStatus : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["mkey"] = args ? args.mkey : undefined;
            resourceInputs["redirect"] = args ? args.redirect : undefined;
            resourceInputs["refererContent"] = args ? args.refererContent : undefined;
            resourceInputs["refererStatus"] = args ? args.refererStatus : undefined;
            resourceInputs["urlContent"] = args ? args.urlContent : undefined;
            resourceInputs["urlStatus"] = args ? args.urlStatus : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LoadBalanceContentRewriting.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LoadBalanceContentRewriting resources.
 */
export interface LoadBalanceContentRewritingState {
    action?: pulumi.Input<string>;
    actionType?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    headerName?: pulumi.Input<string>;
    headerValue?: pulumi.Input<string>;
    hostContent?: pulumi.Input<string>;
    hostStatus?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    mkey?: pulumi.Input<string>;
    redirect?: pulumi.Input<string>;
    refererContent?: pulumi.Input<string>;
    refererStatus?: pulumi.Input<string>;
    urlContent?: pulumi.Input<string>;
    urlStatus?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LoadBalanceContentRewriting resource.
 */
export interface LoadBalanceContentRewritingArgs {
    action?: pulumi.Input<string>;
    actionType?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    headerName?: pulumi.Input<string>;
    headerValue?: pulumi.Input<string>;
    hostContent?: pulumi.Input<string>;
    hostStatus?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    mkey: pulumi.Input<string>;
    redirect?: pulumi.Input<string>;
    refererContent?: pulumi.Input<string>;
    refererStatus?: pulumi.Input<string>;
    urlContent?: pulumi.Input<string>;
    urlStatus?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
}
