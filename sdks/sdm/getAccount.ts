// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAccount(args?: GetAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdm:index/getAccount:getAccount", {
        "accountType": args.accountType,
        "email": args.email,
        "externalId": args.externalId,
        "firstName": args.firstName,
        "id": args.id,
        "lastName": args.lastName,
        "name": args.name,
        "permissionLevel": args.permissionLevel,
        "permissions": args.permissions,
        "suspended": args.suspended,
        "tags": args.tags,
        "timeouts": args.timeouts,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountArgs {
    accountType?: string;
    email?: string;
    externalId?: string;
    firstName?: string;
    id?: string;
    lastName?: string;
    name?: string;
    permissionLevel?: string;
    permissions?: string;
    suspended?: boolean;
    tags?: {[key: string]: string};
    timeouts?: inputs.GetAccountTimeouts;
    type?: string;
}

/**
 * A collection of values returned by getAccount.
 */
export interface GetAccountResult {
    readonly accountType?: string;
    readonly accounts: outputs.GetAccountAccount[];
    readonly email?: string;
    readonly externalId?: string;
    readonly firstName?: string;
    readonly id?: string;
    readonly ids: string[];
    readonly lastName?: string;
    readonly name?: string;
    readonly permissionLevel?: string;
    readonly permissions?: string;
    readonly suspended?: boolean;
    readonly tags?: {[key: string]: string};
    readonly timeouts?: outputs.GetAccountTimeouts;
    readonly type?: string;
}
export function getAccountOutput(args?: GetAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountResult> {
    return pulumi.output(args).apply((a: any) => getAccount(a, opts))
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountOutputArgs {
    accountType?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    externalId?: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    permissionLevel?: pulumi.Input<string>;
    permissions?: pulumi.Input<string>;
    suspended?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.GetAccountTimeoutsArgs>;
    type?: pulumi.Input<string>;
}
