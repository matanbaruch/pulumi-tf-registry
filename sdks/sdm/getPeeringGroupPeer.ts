// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPeeringGroupPeer(args?: GetPeeringGroupPeerArgs, opts?: pulumi.InvokeOptions): Promise<GetPeeringGroupPeerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdm:index/getPeeringGroupPeer:getPeeringGroupPeer", {
        "groupId": args.groupId,
        "id": args.id,
        "peersWithGroupId": args.peersWithGroupId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPeeringGroupPeer.
 */
export interface GetPeeringGroupPeerArgs {
    groupId?: string;
    id?: string;
    peersWithGroupId?: string;
    timeouts?: inputs.GetPeeringGroupPeerTimeouts;
}

/**
 * A collection of values returned by getPeeringGroupPeer.
 */
export interface GetPeeringGroupPeerResult {
    readonly groupId?: string;
    readonly id?: string;
    readonly ids: string[];
    readonly peeringGroupPeers: outputs.GetPeeringGroupPeerPeeringGroupPeer[];
    readonly peersWithGroupId?: string;
    readonly timeouts?: outputs.GetPeeringGroupPeerTimeouts;
}
export function getPeeringGroupPeerOutput(args?: GetPeeringGroupPeerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPeeringGroupPeerResult> {
    return pulumi.output(args).apply((a: any) => getPeeringGroupPeer(a, opts))
}

/**
 * A collection of arguments for invoking getPeeringGroupPeer.
 */
export interface GetPeeringGroupPeerOutputArgs {
    groupId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    peersWithGroupId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetPeeringGroupPeerTimeoutsArgs>;
}
