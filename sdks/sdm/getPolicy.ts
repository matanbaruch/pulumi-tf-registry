// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPolicy(args?: GetPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdm:index/getPolicy:getPolicy", {
        "description": args.description,
        "id": args.id,
        "name": args.name,
        "policy": args.policy,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPolicy.
 */
export interface GetPolicyArgs {
    description?: string;
    id?: string;
    name?: string;
    policy?: string;
    timeouts?: inputs.GetPolicyTimeouts;
}

/**
 * A collection of values returned by getPolicy.
 */
export interface GetPolicyResult {
    readonly description?: string;
    readonly id?: string;
    readonly ids: string[];
    readonly name?: string;
    readonly policies: outputs.GetPolicyPolicy[];
    readonly policy?: string;
    readonly timeouts?: outputs.GetPolicyTimeouts;
}
export function getPolicyOutput(args?: GetPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyResult> {
    return pulumi.output(args).apply((a: any) => getPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getPolicy.
 */
export interface GetPolicyOutputArgs {
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    policy?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetPolicyTimeoutsArgs>;
}
