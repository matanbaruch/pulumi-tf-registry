// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getResource(args?: GetResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdm:index/getResource:getResource", {
        "hostname": args.hostname,
        "id": args.id,
        "name": args.name,
        "port": args.port,
        "tags": args.tags,
        "timeouts": args.timeouts,
        "type": args.type,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getResource.
 */
export interface GetResourceArgs {
    hostname?: string;
    id?: string;
    name?: string;
    port?: number;
    tags?: {[key: string]: string};
    timeouts?: inputs.GetResourceTimeouts;
    type?: string;
    username?: string;
}

/**
 * A collection of values returned by getResource.
 */
export interface GetResourceResult {
    readonly hostname?: string;
    readonly id?: string;
    readonly ids: string[];
    readonly name?: string;
    readonly port?: number;
    readonly resources: outputs.GetResourceResource[];
    readonly tags?: {[key: string]: string};
    readonly timeouts?: outputs.GetResourceTimeouts;
    readonly type?: string;
    readonly username?: string;
}
export function getResourceOutput(args?: GetResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourceResult> {
    return pulumi.output(args).apply((a: any) => getResource(a, opts))
}

/**
 * A collection of arguments for invoking getResource.
 */
export interface GetResourceOutputArgs {
    hostname?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.GetResourceTimeoutsArgs>;
    type?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}
