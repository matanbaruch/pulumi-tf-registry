// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWorkflow(args?: GetWorkflowArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkflowResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdm:index/getWorkflow:getWorkflow", {
        "approvalFlowId": args.approvalFlowId,
        "autoGrant": args.autoGrant,
        "description": args.description,
        "enabled": args.enabled,
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
        "weight": args.weight,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkflow.
 */
export interface GetWorkflowArgs {
    approvalFlowId?: string;
    autoGrant?: boolean;
    description?: string;
    enabled?: boolean;
    id?: string;
    name?: string;
    timeouts?: inputs.GetWorkflowTimeouts;
    weight?: number;
}

/**
 * A collection of values returned by getWorkflow.
 */
export interface GetWorkflowResult {
    readonly approvalFlowId?: string;
    readonly autoGrant?: boolean;
    readonly description?: string;
    readonly enabled?: boolean;
    readonly id?: string;
    readonly ids: string[];
    readonly name?: string;
    readonly timeouts?: outputs.GetWorkflowTimeouts;
    readonly weight?: number;
    readonly workflows: outputs.GetWorkflowWorkflow[];
}
export function getWorkflowOutput(args?: GetWorkflowOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkflowResult> {
    return pulumi.output(args).apply((a: any) => getWorkflow(a, opts))
}

/**
 * A collection of arguments for invoking getWorkflow.
 */
export interface GetWorkflowOutputArgs {
    approvalFlowId?: pulumi.Input<string>;
    autoGrant?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetWorkflowTimeoutsArgs>;
    weight?: pulumi.Input<number>;
}
