// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecretStore(args?: GetSecretStoreArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretStoreResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdm:index/getSecretStore:getSecretStore", {
        "id": args.id,
        "name": args.name,
        "tags": args.tags,
        "timeouts": args.timeouts,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecretStore.
 */
export interface GetSecretStoreArgs {
    id?: string;
    name?: string;
    tags?: {[key: string]: string};
    timeouts?: inputs.GetSecretStoreTimeouts;
    type?: string;
}

/**
 * A collection of values returned by getSecretStore.
 */
export interface GetSecretStoreResult {
    readonly id?: string;
    readonly ids: string[];
    readonly name?: string;
    readonly secretStores: outputs.GetSecretStoreSecretStore[];
    readonly tags?: {[key: string]: string};
    readonly timeouts?: outputs.GetSecretStoreTimeouts;
    readonly type?: string;
}
export function getSecretStoreOutput(args?: GetSecretStoreOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretStoreResult> {
    return pulumi.output(args).apply((a: any) => getSecretStore(a, opts))
}

/**
 * A collection of arguments for invoking getSecretStore.
 */
export interface GetSecretStoreOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.GetSecretStoreTimeoutsArgs>;
    type?: pulumi.Input<string>;
}
