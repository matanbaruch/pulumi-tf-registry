// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNode(args?: GetNodeArgs, opts?: pulumi.InvokeOptions): Promise<GetNodeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdm:index/getNode:getNode", {
        "bindAddress": args.bindAddress,
        "id": args.id,
        "listenAddress": args.listenAddress,
        "name": args.name,
        "tags": args.tags,
        "timeouts": args.timeouts,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNode.
 */
export interface GetNodeArgs {
    bindAddress?: string;
    id?: string;
    listenAddress?: string;
    name?: string;
    tags?: {[key: string]: string};
    timeouts?: inputs.GetNodeTimeouts;
    type?: string;
}

/**
 * A collection of values returned by getNode.
 */
export interface GetNodeResult {
    readonly bindAddress?: string;
    readonly id?: string;
    readonly ids: string[];
    readonly listenAddress?: string;
    readonly name?: string;
    readonly nodes: outputs.GetNodeNode[];
    readonly tags?: {[key: string]: string};
    readonly timeouts?: outputs.GetNodeTimeouts;
    readonly type?: string;
}
export function getNodeOutput(args?: GetNodeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNodeResult> {
    return pulumi.output(args).apply((a: any) => getNode(a, opts))
}

/**
 * A collection of arguments for invoking getNode.
 */
export interface GetNodeOutputArgs {
    bindAddress?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    listenAddress?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.GetNodeTimeoutsArgs>;
    type?: pulumi.Input<string>;
}
