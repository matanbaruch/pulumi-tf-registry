// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudProjectDatabaseKafkaUserAccess(args: GetCloudProjectDatabaseKafkaUserAccessArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudProjectDatabaseKafkaUserAccessResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getCloudProjectDatabaseKafkaUserAccess:getCloudProjectDatabaseKafkaUserAccess", {
        "clusterId": args.clusterId,
        "id": args.id,
        "serviceName": args.serviceName,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudProjectDatabaseKafkaUserAccess.
 */
export interface GetCloudProjectDatabaseKafkaUserAccessArgs {
    clusterId: string;
    id?: string;
    serviceName: string;
    userId: string;
}

/**
 * A collection of values returned by getCloudProjectDatabaseKafkaUserAccess.
 */
export interface GetCloudProjectDatabaseKafkaUserAccessResult {
    readonly cert: string;
    readonly clusterId: string;
    readonly id: string;
    readonly key: string;
    readonly serviceName: string;
    readonly userId: string;
}
export function getCloudProjectDatabaseKafkaUserAccessOutput(args: GetCloudProjectDatabaseKafkaUserAccessOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudProjectDatabaseKafkaUserAccessResult> {
    return pulumi.output(args).apply((a: any) => getCloudProjectDatabaseKafkaUserAccess(a, opts))
}

/**
 * A collection of arguments for invoking getCloudProjectDatabaseKafkaUserAccess.
 */
export interface GetCloudProjectDatabaseKafkaUserAccessOutputArgs {
    clusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    userId: pulumi.Input<string>;
}
