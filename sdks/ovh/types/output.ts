// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface CloudProjectAlertingFormattedMonthlyThreshold {
    currencyCode: string;
    text: string;
    value: number;
}

export interface CloudProjectContainerregistryOidcTimeouts {
    create?: string;
    default?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface CloudProjectContainerregistryPlan {
    code: string;
    createdAt: string;
    features: outputs.CloudProjectContainerregistryPlanFeature[];
    id: string;
    name: string;
    registryLimits: outputs.CloudProjectContainerregistryPlanRegistryLimit[];
    updatedAt: string;
}

export interface CloudProjectContainerregistryPlanFeature {
    vulnerability: boolean;
}

export interface CloudProjectContainerregistryPlanRegistryLimit {
    imageStorage: number;
    parallelRequest: number;
}

export interface CloudProjectDatabaseDatabaseTimeouts {
    create?: string;
    delete?: string;
}

export interface CloudProjectDatabaseEndpoint {
    component: string;
    domain: string;
    path: string;
    port: number;
    scheme: string;
    ssl: boolean;
    sslMode: string;
    uri: string;
}

export interface CloudProjectDatabaseIntegrationTimeouts {
    create?: string;
    delete?: string;
}

export interface CloudProjectDatabaseIpRestriction {
    /**
     * Description of the IP restriction
     */
    description?: string;
    /**
     * Authorized IP
     */
    ip?: string;
    /**
     * Current status of the IP restriction
     */
    status: string;
}

export interface CloudProjectDatabaseIpRestrictionTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface CloudProjectDatabaseKafkaAclTimeouts {
    create?: string;
    delete?: string;
}

export interface CloudProjectDatabaseKafkaSchemaregistryaclTimeouts {
    create?: string;
    delete?: string;
}

export interface CloudProjectDatabaseKafkaTopicTimeouts {
    create?: string;
    delete?: string;
}

export interface CloudProjectDatabaseLogSubscriptionTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface CloudProjectDatabaseM3dbNamespaceTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface CloudProjectDatabaseM3dbUserTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface CloudProjectDatabaseMongodbUserTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface CloudProjectDatabaseNode {
    /**
     * Private network ID in which the node is. It's the regional openstackId of the private network.
     */
    networkId?: string;
    /**
     * Region of the node
     */
    region: string;
    /**
     * Private subnet ID in which the node is
     */
    subnetId?: string;
}

export interface CloudProjectDatabaseOpensearchPatternTimeouts {
    create?: string;
    delete?: string;
}

export interface CloudProjectDatabaseOpensearchUserAcl {
    /**
     * Pattern of the ACL
     */
    pattern: string;
    /**
     * Permission of the ACL
     */
    permission: string;
}

export interface CloudProjectDatabaseOpensearchUserTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface CloudProjectDatabasePostgresqlConnectionPoolTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface CloudProjectDatabasePostgresqlUserTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface CloudProjectDatabaseRedisUserTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface CloudProjectDatabaseTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface CloudProjectDatabaseUserTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface CloudProjectGatewayExternalInformation {
    ips: outputs.CloudProjectGatewayExternalInformationIp[];
    networkId: string;
}

export interface CloudProjectGatewayExternalInformationIp {
    ip: string;
    subnetId: string;
}

export interface CloudProjectGatewayInterface {
    id: string;
    ip: string;
    networkId: string;
    subnetId: string;
}

export interface CloudProjectKubeCustomization {
    /**
     * @deprecated Deprecated
     */
    apiservers?: outputs.CloudProjectKubeCustomizationApiserver[];
}

export interface CloudProjectKubeCustomizationApiserver {
    admissionplugins?: outputs.CloudProjectKubeCustomizationApiserverAdmissionplugin[];
}

export interface CloudProjectKubeCustomizationApiserverAdmissionplugin {
    disableds: string[];
    enableds: string[];
}

export interface CloudProjectKubeCustomizationKubeProxy {
    iptables?: outputs.CloudProjectKubeCustomizationKubeProxyIptables;
    ipvs?: outputs.CloudProjectKubeCustomizationKubeProxyIpvs;
}

export interface CloudProjectKubeCustomizationKubeProxyIptables {
    minSyncPeriod?: string;
    syncPeriod?: string;
}

export interface CloudProjectKubeCustomizationKubeProxyIpvs {
    minSyncPeriod?: string;
    scheduler?: string;
    syncPeriod?: string;
    tcpFinTimeout?: string;
    tcpTimeout?: string;
    udpTimeout?: string;
}

export interface CloudProjectKubeIprestrictionsTimeouts {
    create?: string;
    default?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface CloudProjectKubeKubeconfigAttribute {
    clientCertificate: string;
    clientKey: string;
    clusterCaCertificate: string;
    host: string;
}

export interface CloudProjectKubeNodepoolTemplate {
    /**
     * metadata
     */
    metadata: outputs.CloudProjectKubeNodepoolTemplateMetadata;
    /**
     * spec
     */
    spec: outputs.CloudProjectKubeNodepoolTemplateSpec;
}

export interface CloudProjectKubeNodepoolTemplateMetadata {
    /**
     * annotations
     */
    annotations: {[key: string]: string};
    /**
     * finalizers
     */
    finalizers: string[];
    /**
     * labels
     */
    labels: {[key: string]: string};
}

export interface CloudProjectKubeNodepoolTemplateSpec {
    /**
     * taints
     */
    taints: {[key: string]: string}[];
    /**
     * unschedulable
     */
    unschedulable: boolean;
}

export interface CloudProjectKubeNodepoolTimeouts {
    create?: string;
    default?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface CloudProjectKubeOidcTimeouts {
    create?: string;
    default?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface CloudProjectKubePrivateNetworkConfiguration {
    /**
     * If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.
     */
    defaultVrackGateway: string;
    /**
     * Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.
     */
    privateNetworkRoutingAsDefault: boolean;
}

export interface CloudProjectKubeTimeouts {
    create?: string;
    default?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface CloudProjectNetworkPrivateRegionsAttribute {
    openstackid: string;
    region: string;
    status: string;
}

export interface CloudProjectNetworkPrivateRegionsStatus {
    region: string;
    status: string;
}

export interface CloudProjectNetworkPrivateSubnetIpPool {
    dhcp: boolean;
    end: string;
    network: string;
    region: string;
    start: string;
}

export interface CloudProjectOrder {
    /**
     * date
     */
    date: string;
    /**
     * Information about a Bill entry
     */
    details: outputs.CloudProjectOrderDetail[];
    /**
     * expiration date
     */
    expirationDate: string;
    /**
     * order id
     */
    orderId: number;
}

export interface CloudProjectOrderDetail {
    description: string;
    domain: string;
    orderDetailId: number;
    quantity: string;
}

export interface CloudProjectPlan {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.CloudProjectPlanConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface CloudProjectPlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface CloudProjectPlanOption {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.CloudProjectPlanOptionConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface CloudProjectPlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface CloudProjectUserRole {
    description: string;
    id: string;
    name: string;
    permissions: string[];
}

export interface DbaasLogsInputConfiguration {
    /**
     * Flowgger configuration
     */
    flowgger?: outputs.DbaasLogsInputConfigurationFlowgger;
    /**
     * Logstash configuration
     */
    logstash?: outputs.DbaasLogsInputConfigurationLogstash;
}

export interface DbaasLogsInputConfigurationFlowgger {
    /**
     * Type of format to decode
     */
    logFormat: string;
    /**
     * Indicates how messages are delimited
     */
    logFraming: string;
}

export interface DbaasLogsInputConfigurationLogstash {
    /**
     * The filter section of logstash.conf
     */
    filterSection?: string;
    /**
     * The filter section of logstash.conf
     */
    inputSection: string;
    /**
     * The list of customs Grok patterns
     */
    patternSection?: string;
}

export interface DedicatedServerInstallTaskDetails {
    /**
     * Set up the server using the provided hostname instead of the default hostname
     */
    customHostname?: string;
    diskGroupId?: number;
    noRaid?: boolean;
    /**
     * Indicate the URL where your postinstall customisation script is located
     */
    postInstallationScriptLink?: string;
    /**
     * indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'
     */
    postInstallationScriptReturn?: string;
    softRaidDevices?: number;
}

export interface DedicatedServerInstallTaskTimeouts {
    create?: string;
}

export interface DedicatedServerInstallTaskUserMetadata {
    /**
     * The key for the user_metadata
     */
    key: string;
    /**
     * The value for the user_metadata
     */
    value: string;
}

export interface DedicatedServerNetworkingInterface {
    /**
     * Interface Mac address
     */
    macs: string[];
    /**
     * Interface type
     */
    type: string;
}

export interface DedicatedServerNetworkingTimeouts {
    create?: string;
    delete?: string;
}

export interface DomainZoneOrder {
    /**
     * date
     */
    date: string;
    /**
     * Information about a Bill entry
     */
    details: outputs.DomainZoneOrderDetail[];
    /**
     * expiration date
     */
    expirationDate: string;
    /**
     * order id
     */
    orderId: number;
}

export interface DomainZoneOrderDetail {
    description: string;
    domain: string;
    orderDetailId: number;
    quantity: string;
}

export interface DomainZonePlan {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.DomainZonePlanConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface DomainZonePlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface DomainZonePlanOption {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.DomainZonePlanOptionConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface DomainZonePlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface GetCloudProjectCapabilitiesContainerregistryFilterFeature {
    vulnerability: boolean;
}

export interface GetCloudProjectCapabilitiesContainerregistryFilterRegistryLimit {
    imageStorage: number;
    parallelRequest: number;
}

export interface GetCloudProjectCapabilitiesContainerregistryResult {
    plans: outputs.GetCloudProjectCapabilitiesContainerregistryResultPlan[];
    regionName: string;
}

export interface GetCloudProjectCapabilitiesContainerregistryResultPlan {
    code: string;
    createdAt: string;
    features: outputs.GetCloudProjectCapabilitiesContainerregistryResultPlanFeature[];
    id: string;
    name: string;
    registryLimits: outputs.GetCloudProjectCapabilitiesContainerregistryResultPlanRegistryLimit[];
    updatedAt: string;
}

export interface GetCloudProjectCapabilitiesContainerregistryResultPlanFeature {
    vulnerability: boolean;
}

export interface GetCloudProjectCapabilitiesContainerregistryResultPlanRegistryLimit {
    imageStorage: number;
    parallelRequest: number;
}

export interface GetCloudProjectContainerregistriesResult {
    createdAt: string;
    id: string;
    name: string;
    projectId: string;
    region: string;
    size: number;
    status: string;
    updatedAt: string;
    url: string;
    version: string;
}

export interface GetCloudProjectContainerregistryUsersResult {
    email: string;
    id: string;
    user: string;
}

export interface GetCloudProjectDatabaseCapabilitiesEngine {
    defaultVersion: string;
    description: string;
    name: string;
    sslModes: string[];
    versions: string[];
}

export interface GetCloudProjectDatabaseCapabilitiesFlavor {
    core: number;
    memory: number;
    name: string;
    storage: number;
}

export interface GetCloudProjectDatabaseCapabilitiesOption {
    name: string;
    type: string;
}

export interface GetCloudProjectDatabaseCapabilitiesPlan {
    backupRetention: string;
    description: string;
    name: string;
}

export interface GetCloudProjectDatabaseEndpoint {
    component: string;
    domain: string;
    path: string;
    port: number;
    scheme: string;
    ssl: boolean;
    sslMode: string;
    uri: string;
}

export interface GetCloudProjectDatabaseIpRestriction {
    description: string;
    ip: string;
    status: string;
}

export interface GetCloudProjectDatabaseNode {
    networkId: string;
    region: string;
    subnetId: string;
}

export interface GetCloudProjectDatabaseOpensearchUserAcl {
    pattern: string;
    permission: string;
}

export interface GetCloudProjectIam {
    /**
     * Resource display name
     */
    displayName: string;
    /**
     * Unique identifier of the resource
     */
    id: string;
    /**
     * Resource tags. Tags that were internally computed are prefixed with ovh:
     */
    tags: {[key: string]: string};
    /**
     * Unique resource name used in policies
     */
    urn: string;
}

export interface GetCloudProjectKubeCustomization {
    /**
     * @deprecated Deprecated
     */
    apiservers?: outputs.GetCloudProjectKubeCustomizationApiserver[];
}

export interface GetCloudProjectKubeCustomizationApiserver {
    admissionplugins?: outputs.GetCloudProjectKubeCustomizationApiserverAdmissionplugin[];
}

export interface GetCloudProjectKubeCustomizationApiserverAdmissionplugin {
    disableds: string[];
    enableds: string[];
}

export interface GetCloudProjectKubeCustomizationKubeProxy {
    iptables?: outputs.GetCloudProjectKubeCustomizationKubeProxyIptables;
    ipvs?: outputs.GetCloudProjectKubeCustomizationKubeProxyIpvs;
}

export interface GetCloudProjectKubeCustomizationKubeProxyIptables {
    minSyncPeriod?: string;
    syncPeriod?: string;
}

export interface GetCloudProjectKubeCustomizationKubeProxyIpvs {
    minSyncPeriod?: string;
    scheduler?: string;
    syncPeriod?: string;
    tcpFinTimeout?: string;
    tcpTimeout?: string;
    udpTimeout?: string;
}

export interface GetCloudProjectKubeNodepoolNodesNode {
    createdAt: string;
    deployedAt: string;
    flavor: string;
    id: string;
    instanceId: string;
    isUpToDate: boolean;
    name: string;
    nodePoolId: string;
    projectId: string;
    status: string;
    updatedAt: string;
    version: string;
}

export interface GetCloudProjectKubeNodepoolTemplate {
    /**
     * metadata
     */
    metadata?: outputs.GetCloudProjectKubeNodepoolTemplateMetadata;
    /**
     * spec
     */
    spec?: outputs.GetCloudProjectKubeNodepoolTemplateSpec;
}

export interface GetCloudProjectKubeNodepoolTemplateMetadata {
    /**
     * annotations
     */
    annotations?: {[key: string]: string};
    /**
     * finalizers
     */
    finalizers?: string[];
    /**
     * labels
     */
    labels?: {[key: string]: string};
}

export interface GetCloudProjectKubeNodepoolTemplateSpec {
    /**
     * taints
     */
    taints?: {[key: string]: string}[];
    /**
     * unschedulable
     */
    unschedulable?: boolean;
}

export interface GetCloudProjectKubeNodesNode {
    createdAt: string;
    deployedAt: string;
    flavor: string;
    id: string;
    instanceId: string;
    isUpToDate: boolean;
    name: string;
    nodePoolId: string;
    projectId: string;
    status: string;
    updatedAt: string;
    version: string;
}

export interface GetCloudProjectLoadbalancerFloatingIp {
    /**
     * ID of the floating IP
     */
    id: string;
    /**
     * IP Address of the floating IP
     */
    ip: string;
}

export interface GetCloudProjectLoadbalancersLoadbalancer {
    /**
     * The UTC date and timestamp when the loadbalancer was created
     */
    createdAt: string;
    /**
     * ID of the flavor
     */
    flavorId: string;
    /**
     * Information about floating IP
     */
    floatingIp: outputs.GetCloudProjectLoadbalancersLoadbalancerFloatingIp;
    /**
     * ID of the loadbalancer
     */
    id: string;
    /**
     * Name of the loadbalancer
     */
    name: string;
    /**
     * Operating status of the loadbalancer
     */
    operatingStatus: string;
    /**
     * Provisioning status of the loadbalancer
     */
    provisioningStatus: string;
    /**
     * Region of the loadbalancer
     */
    region: string;
    /**
     * UTC date and timestamp when the loadbalancer was updated
     */
    updatedAt: string;
    /**
     * IP address of the Virtual IP
     */
    vipAddress: string;
    /**
     * Openstack ID of the network for the Virtual IP
     */
    vipNetworkId: string;
    /**
     * ID of the subnet for the Virtual IP
     */
    vipSubnetId: string;
}

export interface GetCloudProjectLoadbalancersLoadbalancerFloatingIp {
    /**
     * ID of the floating IP
     */
    id: string;
    /**
     * IP Address of the floating IP
     */
    ip: string;
}

export interface GetCloudProjectRegionService {
    name: string;
    status: string;
}

export interface GetCloudProjectUserRole {
    description: string;
    id: string;
    name: string;
    permissions: string[];
}

export interface GetCloudProjectUsersUser {
    creationDate: string;
    description: string;
    roles: outputs.GetCloudProjectUsersUserRole[];
    status: string;
    userId: string;
    username: string;
}

export interface GetCloudProjectUsersUserRole {
    description: string;
    id: string;
    name: string;
    permissions: string[];
}

export interface GetCloudProjectsProject {
    /**
     * Project access
     */
    access: string;
    /**
     * Project creation date
     */
    creationDate: string;
    /**
     * Description of your project
     */
    description: string;
    /**
     * Expiration date of your project. After this date, your project will be deleted
     */
    expiration: string;
    /**
     * IAM resource metadata
     */
    iam: outputs.GetCloudProjectsProjectIam;
    /**
     * Manual quota prevent automatic quota upgrade
     */
    manualQuota: boolean;
    /**
     * Project order id
     */
    orderId: number;
    /**
     * Order plan code
     */
    planCode: string;
    /**
     * Project id
     */
    projectId: string;
    /**
     * Project name
     */
    projectName: string;
    /**
     * Service name
     */
    serviceName: string;
    /**
     * Current status
     */
    status: string;
    /**
     * Project unleashed
     */
    unleash: boolean;
}

export interface GetCloudProjectsProjectIam {
    /**
     * Resource display name
     */
    displayName: string;
    /**
     * Unique identifier of the resource
     */
    id: string;
    /**
     * Resource tags. Tags that were internally computed are prefixed with ovh:
     */
    tags: {[key: string]: string};
    /**
     * Unique resource name used in policies
     */
    urn: string;
}

export interface GetDedicatedInstallationTemplateInput {
    default: string;
    description: string;
    enums: string[];
    mandatory: boolean;
    name: string;
    type: string;
}

export interface GetDedicatedInstallationTemplateLicense {
    os: outputs.GetDedicatedInstallationTemplateLicenseO[];
    usages: outputs.GetDedicatedInstallationTemplateLicenseUsage[];
}

export interface GetDedicatedInstallationTemplateLicenseO {
    names: string[];
    url: string;
}

export interface GetDedicatedInstallationTemplateLicenseUsage {
    names: string[];
    url: string;
}

export interface GetDedicatedInstallationTemplateProject {
    os: outputs.GetDedicatedInstallationTemplateProjectO[];
    usages: outputs.GetDedicatedInstallationTemplateProjectUsage[];
}

export interface GetDedicatedInstallationTemplateProjectO {
    governances: string[];
    name: string;
    releaseNotes: string;
    url: string;
    version: string;
}

export interface GetDedicatedInstallationTemplateProjectUsage {
    governances: string[];
    name: string;
    releaseNotes: string;
    url: string;
    version: string;
}

export interface GetDedicatedServerSpecificationsHardwareDefaultHardwareRaidSize {
    unit: string;
    value: number;
}

export interface GetDedicatedServerSpecificationsHardwareDiskGroup {
    /**
     * default hardware raid size for this disk group
     */
    defaultHardwareRaidSize: outputs.GetDedicatedServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize;
    /**
     * default hardware raid type for this disk group
     */
    defaultHardwareRaidType: string;
    /**
     * human readable description of this disk group
     */
    description: string;
    /**
     * identifier of this disk group
     */
    diskGroupId: number;
    /**
     * disk capacity
     */
    diskSize: outputs.GetDedicatedServerSpecificationsHardwareDiskGroupDiskSize;
    /**
     * type of the disk (SSD, SATA, SAS, ...)
     */
    diskType: string;
    /**
     * number of disks in this group
     */
    numberOfDisks: number;
    /**
     * raid controller, if any, managing this group of disks
     */
    raidController: string;
}

export interface GetDedicatedServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize {
    unit: string;
    value: number;
}

export interface GetDedicatedServerSpecificationsHardwareDiskGroupDiskSize {
    unit: string;
    value: number;
}

export interface GetDedicatedServerSpecificationsHardwareExpansionCard {
    /**
     * expansion card description
     */
    description: string;
    /**
     * Expansion card type enum
     */
    type: string;
}

export interface GetDedicatedServerSpecificationsHardwareMemorySize {
    unit: string;
    value: number;
}

export interface GetDedicatedServerSpecificationsHardwareUsbKey {
    unit: string;
    value: number;
}

export interface GetDedicatedServerSpecificationsNetworkBandwidth {
    /**
     * bandwidth limitation Internet to OVH
     */
    internetToOvh: outputs.GetDedicatedServerSpecificationsNetworkBandwidthInternetToOvh;
    /**
     * bandwidth limitation OVH to Internet
     */
    ovhToInternet: outputs.GetDedicatedServerSpecificationsNetworkBandwidthOvhToInternet;
    /**
     * bandwidth limitation OVH to OVH
     */
    ovhToOvh: outputs.GetDedicatedServerSpecificationsNetworkBandwidthOvhToOvh;
    /**
     * bandwidth offer type
     */
    type: string;
}

export interface GetDedicatedServerSpecificationsNetworkBandwidthInternetToOvh {
    unit: string;
    value: number;
}

export interface GetDedicatedServerSpecificationsNetworkBandwidthOvhToInternet {
    unit: string;
    value: number;
}

export interface GetDedicatedServerSpecificationsNetworkBandwidthOvhToOvh {
    unit: string;
    value: number;
}

export interface GetDedicatedServerSpecificationsNetworkConnectionVal {
    unit: string;
    value: number;
}

export interface GetDedicatedServerSpecificationsNetworkOla {
    /**
     * Is the OLA feature available
     */
    available: boolean;
    /**
     * What modes are supported
     */
    availableModes: outputs.GetDedicatedServerSpecificationsNetworkOlaAvailableMode[];
    /**
     * (DEPRECATED) What modes are supported
     */
    supportedModes: string[];
}

export interface GetDedicatedServerSpecificationsNetworkOlaAvailableMode {
    /**
     * Is it the default configuration of the server
     */
    default: boolean;
    /**
     * Interface layout
     */
    interfaces: outputs.GetDedicatedServerSpecificationsNetworkOlaAvailableModeInterface[];
    /**
     * Mode name
     */
    name: string;
}

export interface GetDedicatedServerSpecificationsNetworkOlaAvailableModeInterface {
    /**
     * Interface aggregation status
     */
    aggregation: boolean;
    /**
     * Interface count
     */
    count: number;
    /**
     * An enum describing OVH Link Aggregation interface types
     */
    type: string;
}

export interface GetDedicatedServerSpecificationsNetworkRouting {
    /**
     * Ipv4 routing details
     */
    ipv4: outputs.GetDedicatedServerSpecificationsNetworkRoutingIpv4;
    /**
     * Ipv6 routing details
     */
    ipv6: outputs.GetDedicatedServerSpecificationsNetworkRoutingIpv6;
}

export interface GetDedicatedServerSpecificationsNetworkRoutingIpv4 {
    /**
     * Server gateway
     */
    gateway: string;
    /**
     * Server main IP
     */
    ip: string;
    /**
     * Server network
     */
    network: string;
}

export interface GetDedicatedServerSpecificationsNetworkRoutingIpv6 {
    /**
     * Server gateway
     */
    gateway: string;
    /**
     * Server main IP
     */
    ip: string;
    /**
     * Server network
     */
    network: string;
}

export interface GetDedicatedServerSpecificationsNetworkSwitching {
    /**
     * Switch name
     */
    name: string;
}

export interface GetDedicatedServerSpecificationsNetworkTraffic {
    /**
     * Monthly input traffic quota allowed
     */
    inputQuotaSize: outputs.GetDedicatedServerSpecificationsNetworkTrafficInputQuotaSize;
    /**
     * Monthly input traffic consumed this month
     */
    inputQuotaUsed: outputs.GetDedicatedServerSpecificationsNetworkTrafficInputQuotaUsed;
    /**
     * Is bandwidth throttleted for being over quota
     */
    isThrottled: boolean;
    /**
     * Monthly output traffic quota allowed
     */
    outputQuotaSize: outputs.GetDedicatedServerSpecificationsNetworkTrafficOutputQuotaSize;
    /**
     * Monthly output traffic consumed this month
     */
    outputQuotaUsed: outputs.GetDedicatedServerSpecificationsNetworkTrafficOutputQuotaUsed;
    /**
     * Next reset quota date for traffic counter
     */
    resetQuotaDate: string;
}

export interface GetDedicatedServerSpecificationsNetworkTrafficInputQuotaSize {
    unit: string;
    value: number;
}

export interface GetDedicatedServerSpecificationsNetworkTrafficInputQuotaUsed {
    unit: string;
    value: number;
}

export interface GetDedicatedServerSpecificationsNetworkTrafficOutputQuotaSize {
    unit: string;
    value: number;
}

export interface GetDedicatedServerSpecificationsNetworkTrafficOutputQuotaUsed {
    unit: string;
    value: number;
}

export interface GetDedicatedServerSpecificationsNetworkVmac {
    /**
     * Server is compatible vmac or not
     */
    supported: boolean;
}

export interface GetDedicatedServerSpecificationsNetworkVrack {
    /**
     * vrack bandwidth limitation
     */
    bandwidth: outputs.GetDedicatedServerSpecificationsNetworkVrackBandwidth;
    /**
     * bandwidth offer type
     */
    type: string;
}

export interface GetDedicatedServerSpecificationsNetworkVrackBandwidth {
    unit: string;
    value: number;
}

export interface GetDedicatedServerVni {
    enabled: boolean;
    mode: string;
    name: string;
    nics: string[];
    serverName: string;
    uuid: string;
    vrack: string;
}

export interface GetHostingPrivatedatabaseDatabaseUser {
    grantType: string;
    userName: string;
}

export interface GetHostingPrivatedatabaseUserDatabase {
    databaseName: string;
    grantType: string;
}

export interface GetIamReferenceActionsAction {
    action: string;
    categories: string[];
    description: string;
    resourceType: string;
}

export interface GetIpServiceRoutedTo {
    serviceName: string;
}

export interface GetIploadbalancingOrderableZone {
    name: string;
    planCode: string;
}

export interface GetMeCurrency {
    code: string;
    symbol: string;
}

export interface GetMeInstallationTemplateCustomization {
    customHostname: string;
    postInstallationScriptLink: string;
    postInstallationScriptReturn: string;
}

export interface GetMeInstallationTemplateInput {
    default: string;
    description: string;
    enums: string[];
    mandatory: boolean;
    name: string;
    type: string;
}

export interface GetMeInstallationTemplatePartitionScheme {
    hardwareRaids: outputs.GetMeInstallationTemplatePartitionSchemeHardwareRaid[];
    name: string;
    partitions: outputs.GetMeInstallationTemplatePartitionSchemePartition[];
    priority: number;
}

export interface GetMeInstallationTemplatePartitionSchemeHardwareRaid {
    disks: string[];
    mode: string;
    name: string;
    step: number;
}

export interface GetMeInstallationTemplatePartitionSchemePartition {
    filesystem: string;
    mountpoint: string;
    order: number;
    raid: string;
    size: number;
    type: string;
    volumeName: string;
}

export interface GetOrderCartProductOptionsPlanPrice {
    capacities: string[];
    description: string;
    duration: string;
    interval: number;
    maximumQuantity: number;
    maximumRepeat: number;
    minimumQuantity: number;
    minimumRepeat: number;
    priceInUcents: number;
    prices: outputs.GetOrderCartProductOptionsPlanPricePrice[];
    pricingMode: string;
    pricingType: string;
}

export interface GetOrderCartProductOptionsPlanPricePrice {
    currencyCode: string;
    text: string;
    value: number;
}

export interface GetOrderCartProductOptionsPlanSelectedPrice {
    capacities: string[];
    description: string;
    duration: string;
    interval: number;
    maximumQuantity: number;
    maximumRepeat: number;
    minimumQuantity: number;
    minimumRepeat: number;
    priceInUcents: number;
    prices: outputs.GetOrderCartProductOptionsPlanSelectedPricePrice[];
    pricingMode: string;
    pricingType: string;
}

export interface GetOrderCartProductOptionsPlanSelectedPricePrice {
    currencyCode: string;
    text: string;
    value: number;
}

export interface GetOrderCartProductOptionsResult {
    exclusive: boolean;
    family: string;
    mandatory: boolean;
    planCode: string;
    prices: outputs.GetOrderCartProductOptionsResultPrice[];
    productName: string;
    productType: string;
}

export interface GetOrderCartProductOptionsResultPrice {
    capacities: string[];
    description: string;
    duration: string;
    interval: number;
    maximumQuantity: number;
    maximumRepeat: number;
    minimumQuantity: number;
    minimumRepeat: number;
    priceInUcents: number;
    prices: outputs.GetOrderCartProductOptionsResultPricePrice[];
    pricingMode: string;
    pricingType: string;
}

export interface GetOrderCartProductOptionsResultPricePrice {
    currencyCode: string;
    text: string;
    value: number;
}

export interface GetOrderCartProductPlanPrice {
    capacities: string[];
    description: string;
    duration: string;
    interval: number;
    maximumQuantity: number;
    maximumRepeat: number;
    minimumQuantity: number;
    minimumRepeat: number;
    priceInUcents: number;
    prices: outputs.GetOrderCartProductPlanPricePrice[];
    pricingMode: string;
    pricingType: string;
}

export interface GetOrderCartProductPlanPricePrice {
    currencyCode: string;
    text: string;
    value: number;
}

export interface GetOrderCartProductPlanSelectedPrice {
    capacities: string[];
    description: string;
    duration: string;
    interval: number;
    maximumQuantity: number;
    maximumRepeat: number;
    minimumQuantity: number;
    minimumRepeat: number;
    priceInUcents: number;
    prices: outputs.GetOrderCartProductPlanSelectedPricePrice[];
    pricingMode: string;
    pricingType: string;
}

export interface GetOrderCartProductPlanSelectedPricePrice {
    currencyCode: string;
    text: string;
    value: number;
}

export interface GetOrderCartProductResult {
    planCode: string;
    prices: outputs.GetOrderCartProductResultPrice[];
    productName: string;
    productType: string;
}

export interface GetOrderCartProductResultPrice {
    capacities: string[];
    description: string;
    duration: string;
    interval: number;
    maximumQuantity: number;
    maximumRepeat: number;
    minimumQuantity: number;
    minimumRepeat: number;
    priceInUcents: number;
    prices: outputs.GetOrderCartProductResultPricePrice[];
    pricingMode: string;
    pricingType: string;
}

export interface GetOrderCartProductResultPricePrice {
    currencyCode: string;
    text: string;
    value: number;
}

export interface HostingPrivatedatabaseOrder {
    /**
     * date
     */
    date: string;
    /**
     * Information about a Bill entry
     */
    details: outputs.HostingPrivatedatabaseOrderDetail[];
    /**
     * expiration date
     */
    expirationDate: string;
    /**
     * order id
     */
    orderId: number;
}

export interface HostingPrivatedatabaseOrderDetail {
    description: string;
    domain: string;
    orderDetailId: number;
    quantity: string;
}

export interface HostingPrivatedatabasePlan {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.HostingPrivatedatabasePlanConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface HostingPrivatedatabasePlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface HostingPrivatedatabasePlanOption {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.HostingPrivatedatabasePlanOptionConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface HostingPrivatedatabasePlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface IpMoveRoutedTo {
    /**
     * Service where ip is routed to
     */
    serviceName: string;
}

export interface IpServiceOrder {
    /**
     * date
     */
    date: string;
    /**
     * Information about a Bill entry
     */
    details: outputs.IpServiceOrderDetail[];
    /**
     * expiration date
     */
    expirationDate: string;
    /**
     * order id
     */
    orderId: number;
}

export interface IpServiceOrderDetail {
    description: string;
    domain: string;
    orderDetailId: number;
    quantity: string;
}

export interface IpServicePlan {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.IpServicePlanConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface IpServicePlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface IpServicePlanOption {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.IpServicePlanOptionConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface IpServicePlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface IpServiceRoutedTo {
    serviceName: string;
}

export interface IploadbalancingHttpFarmProbe {
    forceSsl?: boolean;
    interval?: number;
    match: string;
    method: string;
    negate?: boolean;
    pattern: string;
    port: number;
    type: string;
    url: string;
}

export interface IploadbalancingHttpRouteAction {
    /**
     * HTTP status code for "redirect" and "reject" actions
     */
    status?: number;
    /**
     * Farm ID for "farm" action type or URL template for "redirect" action. You may use ${uri}, ${protocol}, ${host}, ${port} and ${path} variables in redirect target
     */
    target?: string;
    /**
     * Action to trigger if all the rules of this route matches
     */
    type: string;
}

export interface IploadbalancingHttpRouteRule {
    field: string;
    match: string;
    negate: boolean;
    pattern: string;
    ruleId: number;
    subField: string;
}

export interface IploadbalancingOrder {
    /**
     * date
     */
    date: string;
    /**
     * Information about a Bill entry
     */
    details: outputs.IploadbalancingOrderDetail[];
    /**
     * expiration date
     */
    expirationDate: string;
    /**
     * order id
     */
    orderId: number;
}

export interface IploadbalancingOrderDetail {
    description: string;
    domain: string;
    orderDetailId: number;
    quantity: string;
}

export interface IploadbalancingOrderableZone {
    name: string;
    planCode: string;
}

export interface IploadbalancingPlan {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.IploadbalancingPlanConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface IploadbalancingPlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface IploadbalancingPlanOption {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.IploadbalancingPlanOptionConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface IploadbalancingPlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface IploadbalancingTcpFarmProbe {
    forceSsl?: boolean;
    interval?: number;
    match: string;
    method?: string;
    negate?: boolean;
    pattern?: string;
    port?: number;
    type: string;
    url?: string;
}

export interface IploadbalancingTcpRouteAction {
    /**
     * Farm ID for "farm" action type, empty for others
     */
    target?: string;
    /**
     * Action to trigger if all the rules of this route matches
     */
    type: string;
}

export interface IploadbalancingTcpRouteRule {
    field: string;
    match: string;
    negate: boolean;
    pattern: string;
    ruleId: number;
    subField: string;
}

export interface MeInstallationTemplateCustomization {
    /**
     * Set up the server using the provided hostname instead of the default hostname
     */
    customHostname?: string;
    /**
     * Indicate the URL where your postinstall customisation script is located
     */
    postInstallationScriptLink?: string;
    /**
     * indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'
     */
    postInstallationScriptReturn?: string;
}

export interface MeInstallationTemplateInput {
    default: string;
    description: string;
    enums: string[];
    mandatory: boolean;
    name: string;
    type: string;
}

export interface VpsIam {
    /**
     * Resource display name
     */
    displayName: string;
    /**
     * Unique identifier of the resource
     */
    id: string;
    /**
     * Resource tags. Tags that were internally computed are prefixed with ovh:
     */
    tags: {[key: string]: string};
    /**
     * Unique resource name used in policies
     */
    urn: string;
}

export interface VpsModel {
    availableOptions: string[];
    datacenters: string[];
    disk: number;
    maximumAdditionnalIp: number;
    memory: number;
    name: string;
    offer: string;
    vcore: number;
    /**
     * All versions that VPS can have
     */
    version: string;
}

export interface VpsOrder {
    date: string;
    details: outputs.VpsOrderDetail[];
    expirationDate: string;
    orderId: number;
}

export interface VpsOrderDetail {
    description: string;
    /**
     * Product type of item in order
     */
    detailType: string;
    domain: string;
    orderDetailId: number;
    quantity: string;
}

export interface VpsPlan {
    configurations: outputs.VpsPlanConfiguration[];
    /**
     * Duration selected for the purchase of the product
     */
    duration: string;
    /**
     * Cart item to be linked
     */
    itemId?: number;
    /**
     * Identifier of the option offer
     */
    planCode: string;
    /**
     * Pricing mode selected for the purchase of the product
     */
    pricingMode: string;
    /**
     * Quantity of product desired
     */
    quantity?: number;
}

export interface VpsPlanConfiguration {
    /**
     * Label for your configuration item
     */
    label: string;
    /**
     * Value or resource URL on API.OVH.COM of your configuration item
     */
    value: string;
}

export interface VpsPlanOption {
    configurations: outputs.VpsPlanOptionConfiguration[];
    /**
     * Duration selected for the purchase of the product
     */
    duration: string;
    /**
     * Cart item to be linked
     */
    itemId: number;
    /**
     * Identifier of the option offer
     */
    planCode: string;
    /**
     * Pricing mode selected for the purchase of the product
     */
    pricingMode: string;
    /**
     * Quantity of product desired
     */
    quantity: number;
}

export interface VpsPlanOptionConfiguration {
    /**
     * Label for your configuration item
     */
    label: string;
    /**
     * Value or resource URL on API.OVH.COM of your configuration item
     */
    value: string;
}

export interface VrackOrder {
    /**
     * date
     */
    date: string;
    /**
     * Information about a Bill entry
     */
    details: outputs.VrackOrderDetail[];
    /**
     * expiration date
     */
    expirationDate: string;
    /**
     * order id
     */
    orderId: number;
}

export interface VrackOrderDetail {
    description: string;
    domain: string;
    orderDetailId: number;
    quantity: string;
}

export interface VrackPlan {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.VrackPlanConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface VrackPlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface VrackPlanOption {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.VrackPlanOptionConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface VrackPlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

