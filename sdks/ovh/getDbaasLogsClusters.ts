// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDbaasLogsClusters(args: GetDbaasLogsClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetDbaasLogsClustersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getDbaasLogsClusters:getDbaasLogsClusters", {
        "id": args.id,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDbaasLogsClusters.
 */
export interface GetDbaasLogsClustersArgs {
    id?: string;
    serviceName: string;
}

/**
 * A collection of values returned by getDbaasLogsClusters.
 */
export interface GetDbaasLogsClustersResult {
    readonly id: string;
    readonly serviceName: string;
    readonly urn: string;
    readonly uuids: string[];
}
export function getDbaasLogsClustersOutput(args: GetDbaasLogsClustersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDbaasLogsClustersResult> {
    return pulumi.output(args).apply((a: any) => getDbaasLogsClusters(a, opts))
}

/**
 * A collection of arguments for invoking getDbaasLogsClusters.
 */
export interface GetDbaasLogsClustersOutputArgs {
    id?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
