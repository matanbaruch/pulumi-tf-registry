// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpMitigation(args: GetIpMitigationArgs, opts?: pulumi.InvokeOptions): Promise<GetIpMitigationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getIpMitigation:getIpMitigation", {
        "ip": args.ip,
        "ipOnMitigation": args.ipOnMitigation,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpMitigation.
 */
export interface GetIpMitigationArgs {
    ip: string;
    ipOnMitigation: string;
}

/**
 * A collection of values returned by getIpMitigation.
 */
export interface GetIpMitigationResult {
    readonly auto: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ip: string;
    readonly ipOnMitigation: string;
    readonly permanent: boolean;
    readonly state: string;
}
export function getIpMitigationOutput(args: GetIpMitigationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpMitigationResult> {
    return pulumi.output(args).apply((a: any) => getIpMitigation(a, opts))
}

/**
 * A collection of arguments for invoking getIpMitigation.
 */
export interface GetIpMitigationOutputArgs {
    ip: pulumi.Input<string>;
    ipOnMitigation: pulumi.Input<string>;
}
