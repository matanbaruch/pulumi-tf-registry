// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudProjectRegionLoadbalancerLogSubscription(args: GetCloudProjectRegionLoadbalancerLogSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudProjectRegionLoadbalancerLogSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getCloudProjectRegionLoadbalancerLogSubscription:getCloudProjectRegionLoadbalancerLogSubscription", {
        "id": args.id,
        "loadbalancerId": args.loadbalancerId,
        "regionName": args.regionName,
        "serviceName": args.serviceName,
        "subscriptionId": args.subscriptionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudProjectRegionLoadbalancerLogSubscription.
 */
export interface GetCloudProjectRegionLoadbalancerLogSubscriptionArgs {
    id?: string;
    loadbalancerId: string;
    regionName: string;
    serviceName: string;
    subscriptionId: string;
}

/**
 * A collection of values returned by getCloudProjectRegionLoadbalancerLogSubscription.
 */
export interface GetCloudProjectRegionLoadbalancerLogSubscriptionResult {
    readonly createdAt: string;
    readonly id: string;
    readonly kind: string;
    readonly ldpServiceName: string;
    readonly loadbalancerId: string;
    readonly regionName: string;
    readonly resourceName: string;
    readonly resourceType: string;
    readonly serviceName: string;
    readonly streamId: string;
    readonly subscriptionId: string;
    readonly updatedAt: string;
}
export function getCloudProjectRegionLoadbalancerLogSubscriptionOutput(args: GetCloudProjectRegionLoadbalancerLogSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudProjectRegionLoadbalancerLogSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getCloudProjectRegionLoadbalancerLogSubscription(a, opts))
}

/**
 * A collection of arguments for invoking getCloudProjectRegionLoadbalancerLogSubscription.
 */
export interface GetCloudProjectRegionLoadbalancerLogSubscriptionOutputArgs {
    id?: pulumi.Input<string>;
    loadbalancerId: pulumi.Input<string>;
    regionName: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    subscriptionId: pulumi.Input<string>;
}
