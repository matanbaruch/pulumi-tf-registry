// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class HostingPrivatedatabase extends pulumi.CustomResource {
    /**
     * Get an existing HostingPrivatedatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HostingPrivatedatabaseState, opts?: pulumi.CustomResourceOptions): HostingPrivatedatabase {
        return new HostingPrivatedatabase(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:index/hostingPrivatedatabase:HostingPrivatedatabase';

    /**
     * Returns true if the given object is an instance of HostingPrivatedatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HostingPrivatedatabase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HostingPrivatedatabase.__pulumiType;
    }

    /**
     * Number of CPU on your private database
     */
    public /*out*/ readonly cpu!: pulumi.Output<number>;
    /**
     * Datacenter where this private database is located
     */
    public /*out*/ readonly datacenter!: pulumi.Output<string>;
    /**
     * Name displayed in customer panel for your private database
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Private database hostname
     */
    public /*out*/ readonly hostname!: pulumi.Output<string>;
    /**
     * Private database FTP hostname
     */
    public /*out*/ readonly hostnameFtp!: pulumi.Output<string>;
    /**
     * Infrastructure where service was stored
     */
    public /*out*/ readonly infrastructure!: pulumi.Output<string>;
    /**
     * Type of the private database offer
     */
    public /*out*/ readonly offer!: pulumi.Output<string>;
    /**
     * Details about an Order
     */
    public readonly orders!: pulumi.Output<outputs.HostingPrivatedatabaseOrder[] | undefined>;
    /**
     * Ovh Subsidiary
     */
    public readonly ovhSubsidiary!: pulumi.Output<string>;
    public /*out*/ readonly ovhUrn!: pulumi.Output<string>;
    /**
     * Ovh payment mode
     *
     * @deprecated Deprecated
     */
    public readonly paymentMean!: pulumi.Output<string | undefined>;
    /**
     * Product Plan to order
     */
    public readonly plan!: pulumi.Output<outputs.HostingPrivatedatabasePlan>;
    /**
     * Product Plan to order
     */
    public readonly planOptions!: pulumi.Output<outputs.HostingPrivatedatabasePlanOption[] | undefined>;
    /**
     * Private database service port
     */
    public /*out*/ readonly port!: pulumi.Output<number>;
    /**
     * Private database FTP port
     */
    public /*out*/ readonly portFtp!: pulumi.Output<number>;
    /**
     * Space allowed (in MB) on your private database
     */
    public /*out*/ readonly quotaSize!: pulumi.Output<number>;
    /**
     * Sapce used (in MB) on your private database
     */
    public /*out*/ readonly quotaUsed!: pulumi.Output<number>;
    /**
     * Amount of ram (in MB) on your private database
     */
    public /*out*/ readonly ram!: pulumi.Output<number>;
    /**
     * Private database server name
     */
    public /*out*/ readonly server!: pulumi.Output<string>;
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * Private database state
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Private database type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Private database available versions
     */
    public /*out*/ readonly version!: pulumi.Output<string>;
    /**
     * Private database version label
     */
    public /*out*/ readonly versionLabel!: pulumi.Output<string>;
    /**
     * Private database version number
     */
    public /*out*/ readonly versionNumber!: pulumi.Output<number>;

    /**
     * Create a HostingPrivatedatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostingPrivatedatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HostingPrivatedatabaseArgs | HostingPrivatedatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HostingPrivatedatabaseState | undefined;
            resourceInputs["cpu"] = state ? state.cpu : undefined;
            resourceInputs["datacenter"] = state ? state.datacenter : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["hostnameFtp"] = state ? state.hostnameFtp : undefined;
            resourceInputs["infrastructure"] = state ? state.infrastructure : undefined;
            resourceInputs["offer"] = state ? state.offer : undefined;
            resourceInputs["orders"] = state ? state.orders : undefined;
            resourceInputs["ovhSubsidiary"] = state ? state.ovhSubsidiary : undefined;
            resourceInputs["ovhUrn"] = state ? state.ovhUrn : undefined;
            resourceInputs["paymentMean"] = state ? state.paymentMean : undefined;
            resourceInputs["plan"] = state ? state.plan : undefined;
            resourceInputs["planOptions"] = state ? state.planOptions : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["portFtp"] = state ? state.portFtp : undefined;
            resourceInputs["quotaSize"] = state ? state.quotaSize : undefined;
            resourceInputs["quotaUsed"] = state ? state.quotaUsed : undefined;
            resourceInputs["ram"] = state ? state.ram : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["versionLabel"] = state ? state.versionLabel : undefined;
            resourceInputs["versionNumber"] = state ? state.versionNumber : undefined;
        } else {
            const args = argsOrState as HostingPrivatedatabaseArgs | undefined;
            if ((!args || args.ovhSubsidiary === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ovhSubsidiary'");
            }
            if ((!args || args.plan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'plan'");
            }
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["orders"] = args ? args.orders : undefined;
            resourceInputs["ovhSubsidiary"] = args ? args.ovhSubsidiary : undefined;
            resourceInputs["paymentMean"] = args ? args.paymentMean : undefined;
            resourceInputs["plan"] = args ? args.plan : undefined;
            resourceInputs["planOptions"] = args ? args.planOptions : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["cpu"] = undefined /*out*/;
            resourceInputs["datacenter"] = undefined /*out*/;
            resourceInputs["hostname"] = undefined /*out*/;
            resourceInputs["hostnameFtp"] = undefined /*out*/;
            resourceInputs["infrastructure"] = undefined /*out*/;
            resourceInputs["offer"] = undefined /*out*/;
            resourceInputs["ovhUrn"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["portFtp"] = undefined /*out*/;
            resourceInputs["quotaSize"] = undefined /*out*/;
            resourceInputs["quotaUsed"] = undefined /*out*/;
            resourceInputs["ram"] = undefined /*out*/;
            resourceInputs["server"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
            resourceInputs["versionLabel"] = undefined /*out*/;
            resourceInputs["versionNumber"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HostingPrivatedatabase.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering HostingPrivatedatabase resources.
 */
export interface HostingPrivatedatabaseState {
    /**
     * Number of CPU on your private database
     */
    cpu?: pulumi.Input<number>;
    /**
     * Datacenter where this private database is located
     */
    datacenter?: pulumi.Input<string>;
    /**
     * Name displayed in customer panel for your private database
     */
    displayName?: pulumi.Input<string>;
    /**
     * Private database hostname
     */
    hostname?: pulumi.Input<string>;
    /**
     * Private database FTP hostname
     */
    hostnameFtp?: pulumi.Input<string>;
    /**
     * Infrastructure where service was stored
     */
    infrastructure?: pulumi.Input<string>;
    /**
     * Type of the private database offer
     */
    offer?: pulumi.Input<string>;
    /**
     * Details about an Order
     */
    orders?: pulumi.Input<pulumi.Input<inputs.HostingPrivatedatabaseOrder>[]>;
    /**
     * Ovh Subsidiary
     */
    ovhSubsidiary?: pulumi.Input<string>;
    ovhUrn?: pulumi.Input<string>;
    /**
     * Ovh payment mode
     *
     * @deprecated Deprecated
     */
    paymentMean?: pulumi.Input<string>;
    /**
     * Product Plan to order
     */
    plan?: pulumi.Input<inputs.HostingPrivatedatabasePlan>;
    /**
     * Product Plan to order
     */
    planOptions?: pulumi.Input<pulumi.Input<inputs.HostingPrivatedatabasePlanOption>[]>;
    /**
     * Private database service port
     */
    port?: pulumi.Input<number>;
    /**
     * Private database FTP port
     */
    portFtp?: pulumi.Input<number>;
    /**
     * Space allowed (in MB) on your private database
     */
    quotaSize?: pulumi.Input<number>;
    /**
     * Sapce used (in MB) on your private database
     */
    quotaUsed?: pulumi.Input<number>;
    /**
     * Amount of ram (in MB) on your private database
     */
    ram?: pulumi.Input<number>;
    /**
     * Private database server name
     */
    server?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
    /**
     * Private database state
     */
    state?: pulumi.Input<string>;
    /**
     * Private database type
     */
    type?: pulumi.Input<string>;
    /**
     * Private database available versions
     */
    version?: pulumi.Input<string>;
    /**
     * Private database version label
     */
    versionLabel?: pulumi.Input<string>;
    /**
     * Private database version number
     */
    versionNumber?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a HostingPrivatedatabase resource.
 */
export interface HostingPrivatedatabaseArgs {
    /**
     * Name displayed in customer panel for your private database
     */
    displayName?: pulumi.Input<string>;
    /**
     * Details about an Order
     */
    orders?: pulumi.Input<pulumi.Input<inputs.HostingPrivatedatabaseOrder>[]>;
    /**
     * Ovh Subsidiary
     */
    ovhSubsidiary: pulumi.Input<string>;
    /**
     * Ovh payment mode
     *
     * @deprecated Deprecated
     */
    paymentMean?: pulumi.Input<string>;
    /**
     * Product Plan to order
     */
    plan: pulumi.Input<inputs.HostingPrivatedatabasePlan>;
    /**
     * Product Plan to order
     */
    planOptions?: pulumi.Input<pulumi.Input<inputs.HostingPrivatedatabasePlanOption>[]>;
    serviceName?: pulumi.Input<string>;
}
