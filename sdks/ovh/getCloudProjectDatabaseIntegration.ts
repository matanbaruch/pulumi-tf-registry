// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudProjectDatabaseIntegration(args: GetCloudProjectDatabaseIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudProjectDatabaseIntegrationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getCloudProjectDatabaseIntegration:getCloudProjectDatabaseIntegration", {
        "clusterId": args.clusterId,
        "engine": args.engine,
        "id": args.id,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudProjectDatabaseIntegration.
 */
export interface GetCloudProjectDatabaseIntegrationArgs {
    clusterId: string;
    engine: string;
    id: string;
    serviceName: string;
}

/**
 * A collection of values returned by getCloudProjectDatabaseIntegration.
 */
export interface GetCloudProjectDatabaseIntegrationResult {
    readonly clusterId: string;
    readonly destinationServiceId: string;
    readonly engine: string;
    readonly id: string;
    readonly parameters: {[key: string]: string};
    readonly serviceName: string;
    readonly sourceServiceId: string;
    readonly status: string;
    readonly type: string;
}
export function getCloudProjectDatabaseIntegrationOutput(args: GetCloudProjectDatabaseIntegrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudProjectDatabaseIntegrationResult> {
    return pulumi.output(args).apply((a: any) => getCloudProjectDatabaseIntegration(a, opts))
}

/**
 * A collection of arguments for invoking getCloudProjectDatabaseIntegration.
 */
export interface GetCloudProjectDatabaseIntegrationOutputArgs {
    clusterId: pulumi.Input<string>;
    engine: pulumi.Input<string>;
    id: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
