// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIploadbalancingVrackNetwork(args: GetIploadbalancingVrackNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetIploadbalancingVrackNetworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getIploadbalancingVrackNetwork:getIploadbalancingVrackNetwork", {
        "id": args.id,
        "serviceName": args.serviceName,
        "vrackNetworkId": args.vrackNetworkId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIploadbalancingVrackNetwork.
 */
export interface GetIploadbalancingVrackNetworkArgs {
    id?: string;
    serviceName: string;
    vrackNetworkId: number;
}

/**
 * A collection of values returned by getIploadbalancingVrackNetwork.
 */
export interface GetIploadbalancingVrackNetworkResult {
    readonly displayName: string;
    readonly id: string;
    readonly natIp: string;
    readonly serviceName: string;
    readonly subnet: string;
    readonly vlan: number;
    readonly vrackNetworkId: number;
}
export function getIploadbalancingVrackNetworkOutput(args: GetIploadbalancingVrackNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIploadbalancingVrackNetworkResult> {
    return pulumi.output(args).apply((a: any) => getIploadbalancingVrackNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getIploadbalancingVrackNetwork.
 */
export interface GetIploadbalancingVrackNetworkOutputArgs {
    id?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    vrackNetworkId: pulumi.Input<number>;
}
