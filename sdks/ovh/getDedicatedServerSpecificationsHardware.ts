// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDedicatedServerSpecificationsHardware(args: GetDedicatedServerSpecificationsHardwareArgs, opts?: pulumi.InvokeOptions): Promise<GetDedicatedServerSpecificationsHardwareResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getDedicatedServerSpecificationsHardware:getDedicatedServerSpecificationsHardware", {
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDedicatedServerSpecificationsHardware.
 */
export interface GetDedicatedServerSpecificationsHardwareArgs {
    serviceName: string;
}

/**
 * A collection of values returned by getDedicatedServerSpecificationsHardware.
 */
export interface GetDedicatedServerSpecificationsHardwareResult {
    readonly bootMode: string;
    readonly coresPerProcessor: number;
    readonly defaultHardwareRaidSize: outputs.GetDedicatedServerSpecificationsHardwareDefaultHardwareRaidSize;
    readonly defaultHardwareRaidType: string;
    readonly description: string;
    readonly diskGroups: outputs.GetDedicatedServerSpecificationsHardwareDiskGroup[];
    readonly expansionCards: outputs.GetDedicatedServerSpecificationsHardwareExpansionCard[];
    readonly formFactor: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly memorySize: outputs.GetDedicatedServerSpecificationsHardwareMemorySize;
    readonly motherboard: string;
    readonly numberOfProcessors: number;
    readonly processorArchitecture: string;
    readonly processorName: string;
    readonly serviceName: string;
    readonly threadsPerProcessor: number;
    readonly usbKeys: outputs.GetDedicatedServerSpecificationsHardwareUsbKey[];
}
export function getDedicatedServerSpecificationsHardwareOutput(args: GetDedicatedServerSpecificationsHardwareOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDedicatedServerSpecificationsHardwareResult> {
    return pulumi.output(args).apply((a: any) => getDedicatedServerSpecificationsHardware(a, opts))
}

/**
 * A collection of arguments for invoking getDedicatedServerSpecificationsHardware.
 */
export interface GetDedicatedServerSpecificationsHardwareOutputArgs {
    serviceName: pulumi.Input<string>;
}
