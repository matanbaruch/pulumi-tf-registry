// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIamPermissionsGroup(args: GetIamPermissionsGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetIamPermissionsGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getIamPermissionsGroup:getIamPermissionsGroup", {
        "allows": args.allows,
        "denies": args.denies,
        "description": args.description,
        "excepts": args.excepts,
        "updatedAt": args.updatedAt,
        "urn": args.urn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamPermissionsGroup.
 */
export interface GetIamPermissionsGroupArgs {
    allows?: string[];
    denies?: string[];
    description?: string;
    excepts?: string[];
    updatedAt?: string;
    urn: string;
}

/**
 * A collection of values returned by getIamPermissionsGroup.
 */
export interface GetIamPermissionsGroupResult {
    readonly allows?: string[];
    readonly createdAt: string;
    readonly denies?: string[];
    readonly description?: string;
    readonly excepts?: string[];
    readonly id: string;
    readonly name: string;
    readonly owner: string;
    readonly updatedAt: string;
    readonly urn: string;
}
export function getIamPermissionsGroupOutput(args: GetIamPermissionsGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamPermissionsGroupResult> {
    return pulumi.output(args).apply((a: any) => getIamPermissionsGroup(a, opts))
}

/**
 * A collection of arguments for invoking getIamPermissionsGroup.
 */
export interface GetIamPermissionsGroupOutputArgs {
    allows?: pulumi.Input<pulumi.Input<string>[]>;
    denies?: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    excepts?: pulumi.Input<pulumi.Input<string>[]>;
    updatedAt?: pulumi.Input<string>;
    urn: pulumi.Input<string>;
}
