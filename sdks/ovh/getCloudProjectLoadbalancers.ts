// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudProjectLoadbalancers(args: GetCloudProjectLoadbalancersArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudProjectLoadbalancersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getCloudProjectLoadbalancers:getCloudProjectLoadbalancers", {
        "regionName": args.regionName,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudProjectLoadbalancers.
 */
export interface GetCloudProjectLoadbalancersArgs {
    regionName: string;
    serviceName: string;
}

/**
 * A collection of values returned by getCloudProjectLoadbalancers.
 */
export interface GetCloudProjectLoadbalancersResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly loadbalancers: outputs.GetCloudProjectLoadbalancersLoadbalancer[];
    readonly regionName: string;
    readonly serviceName: string;
}
export function getCloudProjectLoadbalancersOutput(args: GetCloudProjectLoadbalancersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudProjectLoadbalancersResult> {
    return pulumi.output(args).apply((a: any) => getCloudProjectLoadbalancers(a, opts))
}

/**
 * A collection of arguments for invoking getCloudProjectLoadbalancers.
 */
export interface GetCloudProjectLoadbalancersOutputArgs {
    regionName: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
