// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudProjectUser(args: GetCloudProjectUserArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudProjectUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getCloudProjectUser:getCloudProjectUser", {
        "id": args.id,
        "serviceName": args.serviceName,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudProjectUser.
 */
export interface GetCloudProjectUserArgs {
    id?: string;
    serviceName: string;
    userId: string;
}

/**
 * A collection of values returned by getCloudProjectUser.
 */
export interface GetCloudProjectUserResult {
    readonly creationDate: string;
    readonly description: string;
    readonly id: string;
    readonly roles: outputs.GetCloudProjectUserRole[];
    readonly serviceName: string;
    readonly status: string;
    readonly userId: string;
    readonly username: string;
}
export function getCloudProjectUserOutput(args: GetCloudProjectUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudProjectUserResult> {
    return pulumi.output(args).apply((a: any) => getCloudProjectUser(a, opts))
}

/**
 * A collection of arguments for invoking getCloudProjectUser.
 */
export interface GetCloudProjectUserOutputArgs {
    id?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    userId: pulumi.Input<string>;
}
