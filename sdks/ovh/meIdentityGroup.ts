// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MeIdentityGroup extends pulumi.CustomResource {
    /**
     * Get an existing MeIdentityGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MeIdentityGroupState, opts?: pulumi.CustomResourceOptions): MeIdentityGroup {
        return new MeIdentityGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:index/meIdentityGroup:MeIdentityGroup';

    /**
     * Returns true if the given object is an instance of MeIdentityGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MeIdentityGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MeIdentityGroup.__pulumiType;
    }

    public /*out*/ readonly creation!: pulumi.Output<string>;
    public /*out*/ readonly defaultGroup!: pulumi.Output<boolean>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly lastUpdate!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly ovhUrn!: pulumi.Output<string>;
    public readonly role!: pulumi.Output<string | undefined>;

    /**
     * Create a MeIdentityGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: MeIdentityGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MeIdentityGroupArgs | MeIdentityGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MeIdentityGroupState | undefined;
            resourceInputs["creation"] = state ? state.creation : undefined;
            resourceInputs["defaultGroup"] = state ? state.defaultGroup : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lastUpdate"] = state ? state.lastUpdate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ovhUrn"] = state ? state.ovhUrn : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
        } else {
            const args = argsOrState as MeIdentityGroupArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["creation"] = undefined /*out*/;
            resourceInputs["defaultGroup"] = undefined /*out*/;
            resourceInputs["lastUpdate"] = undefined /*out*/;
            resourceInputs["ovhUrn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MeIdentityGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MeIdentityGroup resources.
 */
export interface MeIdentityGroupState {
    creation?: pulumi.Input<string>;
    defaultGroup?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    lastUpdate?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ovhUrn?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MeIdentityGroup resource.
 */
export interface MeIdentityGroupArgs {
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
}
