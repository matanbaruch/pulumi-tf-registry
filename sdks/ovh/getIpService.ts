// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIpService(args: GetIpServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetIpServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getIpService:getIpService", {
        "id": args.id,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpService.
 */
export interface GetIpServiceArgs {
    id?: string;
    serviceName: string;
}

/**
 * A collection of values returned by getIpService.
 */
export interface GetIpServiceResult {
    readonly canBeTerminated: boolean;
    readonly country: string;
    readonly description: string;
    readonly id: string;
    readonly ip: string;
    readonly organisationId: string;
    readonly routedTos: outputs.GetIpServiceRoutedTo[];
    readonly serviceName: string;
    readonly type: string;
}
export function getIpServiceOutput(args: GetIpServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpServiceResult> {
    return pulumi.output(args).apply((a: any) => getIpService(a, opts))
}

/**
 * A collection of arguments for invoking getIpService.
 */
export interface GetIpServiceOutputArgs {
    id?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
