// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudProject(args: GetCloudProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudProjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getCloudProject:getCloudProject", {
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudProject.
 */
export interface GetCloudProjectArgs {
    serviceName: string;
}

/**
 * A collection of values returned by getCloudProject.
 */
export interface GetCloudProjectResult {
    readonly access: string;
    readonly creationDate: string;
    readonly description: string;
    readonly expiration: string;
    readonly iam: outputs.GetCloudProjectIam;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly manualQuota: boolean;
    readonly orderId: number;
    readonly planCode: string;
    readonly projectId: string;
    readonly projectName: string;
    readonly serviceName: string;
    readonly status: string;
    readonly unleash: boolean;
}
export function getCloudProjectOutput(args: GetCloudProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudProjectResult> {
    return pulumi.output(args).apply((a: any) => getCloudProject(a, opts))
}

/**
 * A collection of arguments for invoking getCloudProject.
 */
export interface GetCloudProjectOutputArgs {
    serviceName: pulumi.Input<string>;
}
