// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudProjectKubeNodepool(args: GetCloudProjectKubeNodepoolArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudProjectKubeNodepoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getCloudProjectKubeNodepool:getCloudProjectKubeNodepool", {
        "id": args.id,
        "kubeId": args.kubeId,
        "name": args.name,
        "serviceName": args.serviceName,
        "template": args.template,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudProjectKubeNodepool.
 */
export interface GetCloudProjectKubeNodepoolArgs {
    id?: string;
    kubeId: string;
    name: string;
    serviceName: string;
    template?: inputs.GetCloudProjectKubeNodepoolTemplate;
}

/**
 * A collection of values returned by getCloudProjectKubeNodepool.
 */
export interface GetCloudProjectKubeNodepoolResult {
    readonly antiAffinity: boolean;
    readonly autoscale: boolean;
    readonly autoscalingScaleDownUnneededTimeSeconds: number;
    readonly autoscalingScaleDownUnreadyTimeSeconds: number;
    readonly autoscalingScaleDownUtilizationThreshold: number;
    readonly availableNodes: number;
    readonly createdAt: string;
    readonly currentNodes: number;
    readonly desiredNodes: number;
    readonly flavor: string;
    readonly flavorName: string;
    readonly id: string;
    readonly kubeId: string;
    readonly maxNodes: number;
    readonly minNodes: number;
    readonly monthlyBilled: boolean;
    readonly name: string;
    readonly projectId: string;
    readonly serviceName: string;
    readonly sizeStatus: string;
    readonly status: string;
    readonly template?: outputs.GetCloudProjectKubeNodepoolTemplate;
    readonly upToDateNodes: number;
    readonly updatedAt: string;
}
export function getCloudProjectKubeNodepoolOutput(args: GetCloudProjectKubeNodepoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudProjectKubeNodepoolResult> {
    return pulumi.output(args).apply((a: any) => getCloudProjectKubeNodepool(a, opts))
}

/**
 * A collection of arguments for invoking getCloudProjectKubeNodepool.
 */
export interface GetCloudProjectKubeNodepoolOutputArgs {
    id?: pulumi.Input<string>;
    kubeId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    template?: pulumi.Input<inputs.GetCloudProjectKubeNodepoolTemplateArgs>;
}
