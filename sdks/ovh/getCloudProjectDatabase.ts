// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudProjectDatabase(args: GetCloudProjectDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudProjectDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getCloudProjectDatabase:getCloudProjectDatabase", {
        "engine": args.engine,
        "id": args.id,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudProjectDatabase.
 */
export interface GetCloudProjectDatabaseArgs {
    engine: string;
    id: string;
    serviceName: string;
}

/**
 * A collection of values returned by getCloudProjectDatabase.
 */
export interface GetCloudProjectDatabaseResult {
    readonly advancedConfiguration: {[key: string]: string};
    readonly backupRegions: string[];
    readonly backupTime: string;
    readonly createdAt: string;
    readonly description: string;
    readonly diskSize: number;
    readonly diskType: string;
    readonly endpoints: outputs.GetCloudProjectDatabaseEndpoint[];
    readonly engine: string;
    readonly flavor: string;
    readonly id: string;
    readonly ipRestrictions: outputs.GetCloudProjectDatabaseIpRestriction[];
    readonly kafkaRestApi: boolean;
    readonly kafkaSchemaRegistry: boolean;
    readonly maintenanceTime: string;
    readonly networkType: string;
    readonly nodes: outputs.GetCloudProjectDatabaseNode[];
    readonly opensearchAclsEnabled: boolean;
    readonly plan: string;
    readonly serviceName: string;
    readonly status: string;
    readonly version: string;
}
export function getCloudProjectDatabaseOutput(args: GetCloudProjectDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudProjectDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getCloudProjectDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getCloudProjectDatabase.
 */
export interface GetCloudProjectDatabaseOutputArgs {
    engine: pulumi.Input<string>;
    id: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
