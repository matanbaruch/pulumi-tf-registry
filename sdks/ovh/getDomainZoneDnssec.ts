// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDomainZoneDnssec(args: GetDomainZoneDnssecArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainZoneDnssecResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getDomainZoneDnssec:getDomainZoneDnssec", {
        "zoneName": args.zoneName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDomainZoneDnssec.
 */
export interface GetDomainZoneDnssecArgs {
    zoneName: string;
}

/**
 * A collection of values returned by getDomainZoneDnssec.
 */
export interface GetDomainZoneDnssecResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly status: string;
    readonly zoneName: string;
}
export function getDomainZoneDnssecOutput(args: GetDomainZoneDnssecOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainZoneDnssecResult> {
    return pulumi.output(args).apply((a: any) => getDomainZoneDnssec(a, opts))
}

/**
 * A collection of arguments for invoking getDomainZoneDnssec.
 */
export interface GetDomainZoneDnssecOutputArgs {
    zoneName: pulumi.Input<string>;
}
