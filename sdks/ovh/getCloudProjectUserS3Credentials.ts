// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudProjectUserS3Credentials(args: GetCloudProjectUserS3CredentialsArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudProjectUserS3CredentialsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getCloudProjectUserS3Credentials:getCloudProjectUserS3Credentials", {
        "id": args.id,
        "serviceName": args.serviceName,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudProjectUserS3Credentials.
 */
export interface GetCloudProjectUserS3CredentialsArgs {
    id?: string;
    serviceName: string;
    userId: string;
}

/**
 * A collection of values returned by getCloudProjectUserS3Credentials.
 */
export interface GetCloudProjectUserS3CredentialsResult {
    readonly accessKeyIds: string[];
    readonly id: string;
    readonly serviceName: string;
    readonly userId: string;
}
export function getCloudProjectUserS3CredentialsOutput(args: GetCloudProjectUserS3CredentialsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudProjectUserS3CredentialsResult> {
    return pulumi.output(args).apply((a: any) => getCloudProjectUserS3Credentials(a, opts))
}

/**
 * A collection of arguments for invoking getCloudProjectUserS3Credentials.
 */
export interface GetCloudProjectUserS3CredentialsOutputArgs {
    id?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    userId: pulumi.Input<string>;
}
