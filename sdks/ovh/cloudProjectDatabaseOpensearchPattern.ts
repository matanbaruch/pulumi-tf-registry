// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudProjectDatabaseOpensearchPattern extends pulumi.CustomResource {
    /**
     * Get an existing CloudProjectDatabaseOpensearchPattern resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudProjectDatabaseOpensearchPatternState, opts?: pulumi.CustomResourceOptions): CloudProjectDatabaseOpensearchPattern {
        return new CloudProjectDatabaseOpensearchPattern(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:index/cloudProjectDatabaseOpensearchPattern:CloudProjectDatabaseOpensearchPattern';

    /**
     * Returns true if the given object is an instance of CloudProjectDatabaseOpensearchPattern.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudProjectDatabaseOpensearchPattern {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudProjectDatabaseOpensearchPattern.__pulumiType;
    }

    /**
     * Id of the database cluster
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * Maximum number of index for this pattern
     */
    public readonly maxIndexCount!: pulumi.Output<number | undefined>;
    /**
     * Pattern format
     */
    public readonly pattern!: pulumi.Output<string>;
    public readonly serviceName!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CloudProjectDatabaseOpensearchPatternTimeouts | undefined>;

    /**
     * Create a CloudProjectDatabaseOpensearchPattern resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudProjectDatabaseOpensearchPatternArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudProjectDatabaseOpensearchPatternArgs | CloudProjectDatabaseOpensearchPatternState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudProjectDatabaseOpensearchPatternState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["maxIndexCount"] = state ? state.maxIndexCount : undefined;
            resourceInputs["pattern"] = state ? state.pattern : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CloudProjectDatabaseOpensearchPatternArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.pattern === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pattern'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["maxIndexCount"] = args ? args.maxIndexCount : undefined;
            resourceInputs["pattern"] = args ? args.pattern : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudProjectDatabaseOpensearchPattern.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudProjectDatabaseOpensearchPattern resources.
 */
export interface CloudProjectDatabaseOpensearchPatternState {
    /**
     * Id of the database cluster
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Maximum number of index for this pattern
     */
    maxIndexCount?: pulumi.Input<number>;
    /**
     * Pattern format
     */
    pattern?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CloudProjectDatabaseOpensearchPatternTimeouts>;
}

/**
 * The set of arguments for constructing a CloudProjectDatabaseOpensearchPattern resource.
 */
export interface CloudProjectDatabaseOpensearchPatternArgs {
    /**
     * Id of the database cluster
     */
    clusterId: pulumi.Input<string>;
    /**
     * Maximum number of index for this pattern
     */
    maxIndexCount?: pulumi.Input<number>;
    /**
     * Pattern format
     */
    pattern: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CloudProjectDatabaseOpensearchPatternTimeouts>;
}
