// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMeInstallationTemplate(args: GetMeInstallationTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetMeInstallationTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getMeInstallationTemplate:getMeInstallationTemplate", {
        "id": args.id,
        "templateName": args.templateName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMeInstallationTemplate.
 */
export interface GetMeInstallationTemplateArgs {
    id?: string;
    templateName: string;
}

/**
 * A collection of values returned by getMeInstallationTemplate.
 */
export interface GetMeInstallationTemplateResult {
    readonly bitFormat: number;
    readonly category: string;
    readonly customizations: outputs.GetMeInstallationTemplateCustomization[];
    readonly description: string;
    readonly distribution: string;
    readonly endOfInstall: string;
    readonly family: string;
    readonly filesystems: string[];
    /**
     * @deprecated Deprecated
     */
    readonly hardRaidConfiguration: boolean;
    readonly id: string;
    readonly inputs: outputs.GetMeInstallationTemplateInput[];
    readonly lvmReady: boolean;
    readonly noPartitioning: boolean;
    readonly partitionSchemes: outputs.GetMeInstallationTemplatePartitionScheme[];
    readonly softRaidOnlyMirroring: boolean;
    readonly subfamily: string;
    readonly templateName: string;
}
export function getMeInstallationTemplateOutput(args: GetMeInstallationTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMeInstallationTemplateResult> {
    return pulumi.output(args).apply((a: any) => getMeInstallationTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getMeInstallationTemplate.
 */
export interface GetMeInstallationTemplateOutputArgs {
    id?: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
}
