// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDedicatedCeph(args: GetDedicatedCephArgs, opts?: pulumi.InvokeOptions): Promise<GetDedicatedCephResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getDedicatedCeph:getDedicatedCeph", {
        "cephVersion": args.cephVersion,
        "id": args.id,
        "serviceName": args.serviceName,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDedicatedCeph.
 */
export interface GetDedicatedCephArgs {
    cephVersion?: string;
    id?: string;
    serviceName: string;
    status?: string;
}

/**
 * A collection of values returned by getDedicatedCeph.
 */
export interface GetDedicatedCephResult {
    readonly cephMons: string[];
    readonly cephVersion: string;
    readonly crushTunables: string;
    readonly id: string;
    readonly label: string;
    readonly region: string;
    readonly serviceName: string;
    readonly size: number;
    readonly state: string;
    readonly status: string;
    readonly urn: string;
}
export function getDedicatedCephOutput(args: GetDedicatedCephOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDedicatedCephResult> {
    return pulumi.output(args).apply((a: any) => getDedicatedCeph(a, opts))
}

/**
 * A collection of arguments for invoking getDedicatedCeph.
 */
export interface GetDedicatedCephOutputArgs {
    cephVersion?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
