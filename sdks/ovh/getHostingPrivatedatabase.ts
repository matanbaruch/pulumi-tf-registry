// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getHostingPrivatedatabase(args: GetHostingPrivatedatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetHostingPrivatedatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getHostingPrivatedatabase:getHostingPrivatedatabase", {
        "id": args.id,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHostingPrivatedatabase.
 */
export interface GetHostingPrivatedatabaseArgs {
    id?: string;
    serviceName: string;
}

/**
 * A collection of values returned by getHostingPrivatedatabase.
 */
export interface GetHostingPrivatedatabaseResult {
    readonly cpu: number;
    readonly datacenter: string;
    readonly displayName: string;
    readonly hostname: string;
    readonly hostnameFtp: string;
    readonly id: string;
    readonly infrastructure: string;
    readonly offer: string;
    readonly port: number;
    readonly portFtp: number;
    readonly quotaSize: number;
    readonly quotaUsed: number;
    readonly ram: number;
    readonly server: string;
    readonly serviceName: string;
    readonly state: string;
    readonly type: string;
    readonly urn: string;
    readonly version: string;
    readonly versionLabel: string;
    readonly versionNumber: number;
}
export function getHostingPrivatedatabaseOutput(args: GetHostingPrivatedatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHostingPrivatedatabaseResult> {
    return pulumi.output(args).apply((a: any) => getHostingPrivatedatabase(a, opts))
}

/**
 * A collection of arguments for invoking getHostingPrivatedatabase.
 */
export interface GetHostingPrivatedatabaseOutputArgs {
    id?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
