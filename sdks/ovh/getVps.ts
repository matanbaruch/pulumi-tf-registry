// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVps(args: GetVpsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getVps:getVps", {
        "id": args.id,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVps.
 */
export interface GetVpsArgs {
    id?: string;
    serviceName: string;
}

/**
 * A collection of values returned by getVps.
 */
export interface GetVpsResult {
    readonly cluster: string;
    readonly datacenter: {[key: string]: string};
    readonly displayname: string;
    readonly id: string;
    readonly ips: string[];
    readonly keymap: string;
    readonly memory: number;
    readonly model: {[key: string]: string};
    readonly name: string;
    readonly netbootmode: string;
    readonly offertype: string;
    readonly serviceName: string;
    readonly slamonitoring: boolean;
    readonly state: string;
    readonly type: string;
    readonly urn: string;
    readonly vcore: number;
    readonly zone: string;
}
export function getVpsOutput(args: GetVpsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpsResult> {
    return pulumi.output(args).apply((a: any) => getVps(a, opts))
}

/**
 * A collection of arguments for invoking getVps.
 */
export interface GetVpsOutputArgs {
    id?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
