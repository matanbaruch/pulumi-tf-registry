// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpFirewallRule(args: GetIpFirewallRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetIpFirewallRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getIpFirewallRule:getIpFirewallRule", {
        "ip": args.ip,
        "ipOnFirewall": args.ipOnFirewall,
        "sequence": args.sequence,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpFirewallRule.
 */
export interface GetIpFirewallRuleArgs {
    ip: string;
    ipOnFirewall: string;
    sequence: number;
}

/**
 * A collection of values returned by getIpFirewallRule.
 */
export interface GetIpFirewallRuleResult {
    readonly action: string;
    readonly creationDate: string;
    readonly destination: string;
    readonly destinationPort: string;
    readonly fragments: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ip: string;
    readonly ipOnFirewall: string;
    readonly protocol: string;
    readonly rule: string;
    readonly sequence: number;
    readonly source: string;
    readonly sourcePort: string;
    readonly state: string;
    readonly tcpOption: string;
}
export function getIpFirewallRuleOutput(args: GetIpFirewallRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpFirewallRuleResult> {
    return pulumi.output(args).apply((a: any) => getIpFirewallRule(a, opts))
}

/**
 * A collection of arguments for invoking getIpFirewallRule.
 */
export interface GetIpFirewallRuleOutputArgs {
    ip: pulumi.Input<string>;
    ipOnFirewall: pulumi.Input<string>;
    sequence: pulumi.Input<number>;
}
