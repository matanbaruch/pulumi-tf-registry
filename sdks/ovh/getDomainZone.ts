// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDomainZone(args: GetDomainZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainZoneResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getDomainZone:getDomainZone", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDomainZone.
 */
export interface GetDomainZoneArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getDomainZone.
 */
export interface GetDomainZoneResult {
    readonly dnssecSupported: boolean;
    readonly hasDnsAnycast: boolean;
    readonly id: string;
    readonly lastUpdate: string;
    readonly name: string;
    readonly nameServers: string[];
    readonly urn: string;
}
export function getDomainZoneOutput(args: GetDomainZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainZoneResult> {
    return pulumi.output(args).apply((a: any) => getDomainZone(a, opts))
}

/**
 * A collection of arguments for invoking getDomainZone.
 */
export interface GetDomainZoneOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
