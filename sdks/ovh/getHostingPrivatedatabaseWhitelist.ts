// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getHostingPrivatedatabaseWhitelist(args: GetHostingPrivatedatabaseWhitelistArgs, opts?: pulumi.InvokeOptions): Promise<GetHostingPrivatedatabaseWhitelistResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getHostingPrivatedatabaseWhitelist:getHostingPrivatedatabaseWhitelist", {
        "id": args.id,
        "ip": args.ip,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHostingPrivatedatabaseWhitelist.
 */
export interface GetHostingPrivatedatabaseWhitelistArgs {
    id?: string;
    ip?: string;
    serviceName: string;
}

/**
 * A collection of values returned by getHostingPrivatedatabaseWhitelist.
 */
export interface GetHostingPrivatedatabaseWhitelistResult {
    readonly creationDate: string;
    readonly id: string;
    readonly ip?: string;
    readonly lastUpdate: string;
    readonly name: string;
    readonly service: boolean;
    readonly serviceName: string;
    readonly sftp: boolean;
    readonly status: string;
}
export function getHostingPrivatedatabaseWhitelistOutput(args: GetHostingPrivatedatabaseWhitelistOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHostingPrivatedatabaseWhitelistResult> {
    return pulumi.output(args).apply((a: any) => getHostingPrivatedatabaseWhitelist(a, opts))
}

/**
 * A collection of arguments for invoking getHostingPrivatedatabaseWhitelist.
 */
export interface GetHostingPrivatedatabaseWhitelistOutputArgs {
    id?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
