// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IploadbalancingUdpFrontend extends pulumi.CustomResource {
    /**
     * Get an existing IploadbalancingUdpFrontend resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IploadbalancingUdpFrontendState, opts?: pulumi.CustomResourceOptions): IploadbalancingUdpFrontend {
        return new IploadbalancingUdpFrontend(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:index/iploadbalancingUdpFrontend:IploadbalancingUdpFrontend';

    /**
     * Returns true if the given object is an instance of IploadbalancingUdpFrontend.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IploadbalancingUdpFrontend {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IploadbalancingUdpFrontend.__pulumiType;
    }

    /**
     * Only attach frontend on these ip. No restriction if null
     */
    public readonly dedicatedIpfos!: pulumi.Output<string[]>;
    /**
     * Default UDP Farm of your frontend
     */
    public readonly defaultFarmId!: pulumi.Output<number>;
    /**
     * Disable your frontend. Default: 'false'
     */
    public readonly disabled!: pulumi.Output<boolean>;
    /**
     * Human readable name for your frontend, this field is for you
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Id of your frontend
     */
    public /*out*/ readonly frontendId!: pulumi.Output<number>;
    /**
     * Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and
     * comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range.
     */
    public readonly port!: pulumi.Output<string>;
    /**
     * The internal name of your IP load balancing
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * Zone of your frontend. Use "all" for all owned zone.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a IploadbalancingUdpFrontend resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IploadbalancingUdpFrontendArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IploadbalancingUdpFrontendArgs | IploadbalancingUdpFrontendState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IploadbalancingUdpFrontendState | undefined;
            resourceInputs["dedicatedIpfos"] = state ? state.dedicatedIpfos : undefined;
            resourceInputs["defaultFarmId"] = state ? state.defaultFarmId : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["frontendId"] = state ? state.frontendId : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as IploadbalancingUdpFrontendArgs | undefined;
            if ((!args || args.port === undefined) && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if ((!args || args.zone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zone'");
            }
            resourceInputs["dedicatedIpfos"] = args ? args.dedicatedIpfos : undefined;
            resourceInputs["defaultFarmId"] = args ? args.defaultFarmId : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["frontendId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IploadbalancingUdpFrontend.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IploadbalancingUdpFrontend resources.
 */
export interface IploadbalancingUdpFrontendState {
    /**
     * Only attach frontend on these ip. No restriction if null
     */
    dedicatedIpfos?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Default UDP Farm of your frontend
     */
    defaultFarmId?: pulumi.Input<number>;
    /**
     * Disable your frontend. Default: 'false'
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Human readable name for your frontend, this field is for you
     */
    displayName?: pulumi.Input<string>;
    /**
     * Id of your frontend
     */
    frontendId?: pulumi.Input<number>;
    /**
     * Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and
     * comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range.
     */
    port?: pulumi.Input<string>;
    /**
     * The internal name of your IP load balancing
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Zone of your frontend. Use "all" for all owned zone.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IploadbalancingUdpFrontend resource.
 */
export interface IploadbalancingUdpFrontendArgs {
    /**
     * Only attach frontend on these ip. No restriction if null
     */
    dedicatedIpfos?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Default UDP Farm of your frontend
     */
    defaultFarmId?: pulumi.Input<number>;
    /**
     * Disable your frontend. Default: 'false'
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Human readable name for your frontend, this field is for you
     */
    displayName?: pulumi.Input<string>;
    /**
     * Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and
     * comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range.
     */
    port: pulumi.Input<string>;
    /**
     * The internal name of your IP load balancing
     */
    serviceName: pulumi.Input<string>;
    /**
     * Zone of your frontend. Use "all" for all owned zone.
     */
    zone: pulumi.Input<string>;
}
