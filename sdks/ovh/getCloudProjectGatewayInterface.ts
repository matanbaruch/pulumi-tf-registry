// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudProjectGatewayInterface(args: GetCloudProjectGatewayInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudProjectGatewayInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getCloudProjectGatewayInterface:getCloudProjectGatewayInterface", {
        "id": args.id,
        "interfaceId": args.interfaceId,
        "region": args.region,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudProjectGatewayInterface.
 */
export interface GetCloudProjectGatewayInterfaceArgs {
    id: string;
    interfaceId: string;
    region: string;
    serviceName: string;
}

/**
 * A collection of values returned by getCloudProjectGatewayInterface.
 */
export interface GetCloudProjectGatewayInterfaceResult {
    readonly id: string;
    readonly interfaceId: string;
    readonly ip: string;
    readonly networkId: string;
    readonly region: string;
    readonly serviceName: string;
    readonly subnetId: string;
}
export function getCloudProjectGatewayInterfaceOutput(args: GetCloudProjectGatewayInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudProjectGatewayInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getCloudProjectGatewayInterface(a, opts))
}

/**
 * A collection of arguments for invoking getCloudProjectGatewayInterface.
 */
export interface GetCloudProjectGatewayInterfaceOutputArgs {
    id: pulumi.Input<string>;
    interfaceId: pulumi.Input<string>;
    region: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
