// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMeIdentityUser(args: GetMeIdentityUserArgs, opts?: pulumi.InvokeOptions): Promise<GetMeIdentityUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getMeIdentityUser:getMeIdentityUser", {
        "id": args.id,
        "user": args.user,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMeIdentityUser.
 */
export interface GetMeIdentityUserArgs {
    id?: string;
    user: string;
}

/**
 * A collection of values returned by getMeIdentityUser.
 */
export interface GetMeIdentityUserResult {
    readonly creation: string;
    readonly description: string;
    readonly email: string;
    readonly group: string;
    readonly id: string;
    readonly lastUpdate: string;
    readonly login: string;
    readonly passwordLastUpdate: string;
    readonly status: string;
    readonly urn: string;
    readonly user: string;
}
export function getMeIdentityUserOutput(args: GetMeIdentityUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMeIdentityUserResult> {
    return pulumi.output(args).apply((a: any) => getMeIdentityUser(a, opts))
}

/**
 * A collection of arguments for invoking getMeIdentityUser.
 */
export interface GetMeIdentityUserOutputArgs {
    id?: pulumi.Input<string>;
    user: pulumi.Input<string>;
}
