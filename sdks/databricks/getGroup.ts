// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGroup(args: GetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getGroup:getGroup", {
        "aclPrincipalId": args.aclPrincipalId,
        "allowClusterCreate": args.allowClusterCreate,
        "allowInstancePoolCreate": args.allowInstancePoolCreate,
        "childGroups": args.childGroups,
        "databricksSqlAccess": args.databricksSqlAccess,
        "displayName": args.displayName,
        "externalId": args.externalId,
        "groups": args.groups,
        "id": args.id,
        "instanceProfiles": args.instanceProfiles,
        "members": args.members,
        "recursive": args.recursive,
        "servicePrincipals": args.servicePrincipals,
        "users": args.users,
        "workspaceAccess": args.workspaceAccess,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupArgs {
    aclPrincipalId?: string;
    allowClusterCreate?: boolean;
    allowInstancePoolCreate?: boolean;
    childGroups?: string[];
    databricksSqlAccess?: boolean;
    displayName: string;
    externalId?: string;
    groups?: string[];
    id?: string;
    instanceProfiles?: string[];
    /**
     * @deprecated Deprecated
     */
    members?: string[];
    recursive?: boolean;
    servicePrincipals?: string[];
    users?: string[];
    workspaceAccess?: boolean;
}

/**
 * A collection of values returned by getGroup.
 */
export interface GetGroupResult {
    readonly aclPrincipalId: string;
    readonly allowClusterCreate?: boolean;
    readonly allowInstancePoolCreate?: boolean;
    readonly childGroups: string[];
    readonly databricksSqlAccess?: boolean;
    readonly displayName: string;
    readonly externalId: string;
    readonly groups: string[];
    readonly id: string;
    readonly instanceProfiles: string[];
    /**
     * @deprecated Deprecated
     */
    readonly members: string[];
    readonly recursive?: boolean;
    readonly servicePrincipals: string[];
    readonly users: string[];
    readonly workspaceAccess?: boolean;
}
export function getGroupOutput(args: GetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupResult> {
    return pulumi.output(args).apply((a: any) => getGroup(a, opts))
}

/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupOutputArgs {
    aclPrincipalId?: pulumi.Input<string>;
    allowClusterCreate?: pulumi.Input<boolean>;
    allowInstancePoolCreate?: pulumi.Input<boolean>;
    childGroups?: pulumi.Input<pulumi.Input<string>[]>;
    databricksSqlAccess?: pulumi.Input<boolean>;
    displayName: pulumi.Input<string>;
    externalId?: pulumi.Input<string>;
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    instanceProfiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    recursive?: pulumi.Input<boolean>;
    servicePrincipals?: pulumi.Input<pulumi.Input<string>[]>;
    users?: pulumi.Input<pulumi.Input<string>[]>;
    workspaceAccess?: pulumi.Input<boolean>;
}
