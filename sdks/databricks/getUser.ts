// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getUser(args?: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getUser:getUser", {
        "id": args.id,
        "userId": args.userId,
        "userName": args.userName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    id?: string;
    userId?: string;
    userName?: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    readonly aclPrincipalId: string;
    readonly active: boolean;
    readonly alphanumeric: string;
    readonly applicationId: string;
    readonly displayName: string;
    readonly externalId: string;
    readonly home: string;
    readonly id: string;
    readonly repos: string;
    readonly userId?: string;
    readonly userName?: string;
}
export function getUserOutput(args?: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply((a: any) => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    id?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}
