// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSparkVersion(args?: GetSparkVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetSparkVersionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getSparkVersion:getSparkVersion", {
        "beta": args.beta,
        "genomics": args.genomics,
        "gpu": args.gpu,
        "graviton": args.graviton,
        "id": args.id,
        "latest": args.latest,
        "longTermSupport": args.longTermSupport,
        "ml": args.ml,
        "photon": args.photon,
        "scala": args.scala,
        "sparkVersion": args.sparkVersion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSparkVersion.
 */
export interface GetSparkVersionArgs {
    beta?: boolean;
    genomics?: boolean;
    gpu?: boolean;
    /**
     * @deprecated Deprecated
     */
    graviton?: boolean;
    id?: string;
    latest?: boolean;
    longTermSupport?: boolean;
    ml?: boolean;
    /**
     * @deprecated Deprecated
     */
    photon?: boolean;
    scala?: string;
    sparkVersion?: string;
}

/**
 * A collection of values returned by getSparkVersion.
 */
export interface GetSparkVersionResult {
    readonly beta?: boolean;
    readonly genomics?: boolean;
    readonly gpu?: boolean;
    /**
     * @deprecated Deprecated
     */
    readonly graviton?: boolean;
    readonly id: string;
    readonly latest?: boolean;
    readonly longTermSupport?: boolean;
    readonly ml?: boolean;
    /**
     * @deprecated Deprecated
     */
    readonly photon?: boolean;
    readonly scala?: string;
    readonly sparkVersion?: string;
}
export function getSparkVersionOutput(args?: GetSparkVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSparkVersionResult> {
    return pulumi.output(args).apply((a: any) => getSparkVersion(a, opts))
}

/**
 * A collection of arguments for invoking getSparkVersion.
 */
export interface GetSparkVersionOutputArgs {
    beta?: pulumi.Input<boolean>;
    genomics?: pulumi.Input<boolean>;
    gpu?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    graviton?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    latest?: pulumi.Input<boolean>;
    longTermSupport?: pulumi.Input<boolean>;
    ml?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    photon?: pulumi.Input<boolean>;
    scala?: pulumi.Input<string>;
    sparkVersion?: pulumi.Input<string>;
}
