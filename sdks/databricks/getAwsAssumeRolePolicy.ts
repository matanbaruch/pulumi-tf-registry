// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAwsAssumeRolePolicy(args: GetAwsAssumeRolePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetAwsAssumeRolePolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getAwsAssumeRolePolicy:getAwsAssumeRolePolicy", {
        "databricksAccountId": args.databricksAccountId,
        "externalId": args.externalId,
        "forLogDelivery": args.forLogDelivery,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAwsAssumeRolePolicy.
 */
export interface GetAwsAssumeRolePolicyArgs {
    databricksAccountId?: string;
    externalId: string;
    forLogDelivery?: boolean;
    id?: string;
}

/**
 * A collection of values returned by getAwsAssumeRolePolicy.
 */
export interface GetAwsAssumeRolePolicyResult {
    readonly databricksAccountId?: string;
    readonly externalId: string;
    readonly forLogDelivery?: boolean;
    readonly id: string;
    readonly json: string;
}
export function getAwsAssumeRolePolicyOutput(args: GetAwsAssumeRolePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAwsAssumeRolePolicyResult> {
    return pulumi.output(args).apply((a: any) => getAwsAssumeRolePolicy(a, opts))
}

/**
 * A collection of arguments for invoking getAwsAssumeRolePolicy.
 */
export interface GetAwsAssumeRolePolicyOutputArgs {
    databricksAccountId?: pulumi.Input<string>;
    externalId: pulumi.Input<string>;
    forLogDelivery?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
}
