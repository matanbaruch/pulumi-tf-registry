// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAwsCrossaccountPolicy(args?: GetAwsCrossaccountPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetAwsCrossaccountPolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("databricks:index/getAwsCrossaccountPolicy:getAwsCrossaccountPolicy", {
        "awsAccountId": args.awsAccountId,
        "id": args.id,
        "passRoles": args.passRoles,
        "policyType": args.policyType,
        "region": args.region,
        "securityGroupId": args.securityGroupId,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAwsCrossaccountPolicy.
 */
export interface GetAwsCrossaccountPolicyArgs {
    awsAccountId?: string;
    id?: string;
    passRoles?: string[];
    policyType?: string;
    region?: string;
    securityGroupId?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getAwsCrossaccountPolicy.
 */
export interface GetAwsCrossaccountPolicyResult {
    readonly awsAccountId?: string;
    readonly id: string;
    readonly json: string;
    readonly passRoles?: string[];
    readonly policyType?: string;
    readonly region?: string;
    readonly securityGroupId?: string;
    readonly vpcId?: string;
}
export function getAwsCrossaccountPolicyOutput(args?: GetAwsCrossaccountPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAwsCrossaccountPolicyResult> {
    return pulumi.output(args).apply((a: any) => getAwsCrossaccountPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getAwsCrossaccountPolicy.
 */
export interface GetAwsCrossaccountPolicyOutputArgs {
    awsAccountId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    passRoles?: pulumi.Input<pulumi.Input<string>[]>;
    policyType?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
