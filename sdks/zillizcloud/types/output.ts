// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ClusterTimeouts {
    /**
     * Timeout defaults to 5 mins. Accepts a string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: string;
    /**
     * Timeout defaults to 5 mins. Accepts a string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: string;
}

export interface GetCloudProvidersCloudProvider {
    /**
     * Cloud Provider Identifier
     */
    cloudId: string;
    /**
     * Cloud Provider Description
     */
    description: string;
}

export interface GetClustersCluster {
    /**
     * The name of the cluster.
     */
    clusterName: string;
    /**
     * The type of CU associated with the cluster. Possible values are Performance-optimized and Capacity-optimized.
     */
    clusterType: string;
    /**
     * The public endpoint of the cluster. You can connect to the cluster using this endpoint from the public network.
     */
    connectAddress: string;
    /**
     * The time at which the cluster has been created.
     */
    createTime: string;
    /**
     * The size of the CU associated with the cluster.
     */
    cuSize: number;
    /**
     * An optional description about the cluster.
     */
    description: string;
    /**
     * The ID of the cluster.
     */
    id: string;
    /**
     * The private endpoint of the cluster. You can set up a private link to allow your VPS in the same cloud region to access your cluster.
     */
    privateLinkAddress: string;
    /**
     * The ID of the region where the cluster exists.
     */
    regionId: string;
    /**
     * The current status of the cluster. Possible values are INITIALIZING, RUNNING, SUSPENDING, and RESUMING.
     */
    status: string;
}

export interface GetRegionsItem {
    /**
     * Cloud Region API Base URL
     */
    apiBaseUrl: string;
    /**
     * Cloud Region Identifier
     */
    cloudId: string;
    /**
     * Cloud Region Id
     */
    regionId: string;
}

