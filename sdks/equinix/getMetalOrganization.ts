// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMetalOrganization(args?: GetMetalOrganizationArgs, opts?: pulumi.InvokeOptions): Promise<GetMetalOrganizationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:index/getMetalOrganization:getMetalOrganization", {
        "description": args.description,
        "name": args.name,
        "organizationId": args.organizationId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMetalOrganization.
 */
export interface GetMetalOrganizationArgs {
    description?: string;
    name?: string;
    organizationId?: string;
}

/**
 * A collection of values returned by getMetalOrganization.
 */
export interface GetMetalOrganizationResult {
    readonly addresses: outputs.GetMetalOrganizationAddress[];
    readonly description?: string;
    readonly id: string;
    /**
     * @deprecated Deprecated
     */
    readonly logo: string;
    readonly name: string;
    readonly organizationId: string;
    readonly projectIds: string[];
    readonly twitter: string;
    readonly website: string;
}
export function getMetalOrganizationOutput(args?: GetMetalOrganizationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetalOrganizationResult> {
    return pulumi.output(args).apply((a: any) => getMetalOrganization(a, opts))
}

/**
 * A collection of arguments for invoking getMetalOrganization.
 */
export interface GetMetalOrganizationOutputArgs {
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    organizationId?: pulumi.Input<string>;
}
