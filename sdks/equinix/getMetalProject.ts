// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMetalProject(args?: GetMetalProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetMetalProjectResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:index/getMetalProject:getMetalProject", {
        "name": args.name,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMetalProject.
 */
export interface GetMetalProjectArgs {
    name?: string;
    projectId?: string;
}

/**
 * A collection of values returned by getMetalProject.
 */
export interface GetMetalProjectResult {
    readonly backendTransfer: boolean;
    readonly bgpConfigs: outputs.GetMetalProjectBgpConfig[];
    readonly created: string;
    readonly id: string;
    readonly name: string;
    readonly organizationId: string;
    readonly paymentMethodId: string;
    readonly projectId: string;
    readonly updated: string;
    readonly userIds: string[];
}
export function getMetalProjectOutput(args?: GetMetalProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetalProjectResult> {
    return pulumi.output(args).apply((a: any) => getMetalProject(a, opts))
}

/**
 * A collection of arguments for invoking getMetalProject.
 */
export interface GetMetalProjectOutputArgs {
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
}
