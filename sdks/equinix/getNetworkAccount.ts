// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetworkAccount(args: GetNetworkAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkAccountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:index/getNetworkAccount:getNetworkAccount", {
        "id": args.id,
        "metroCode": args.metroCode,
        "name": args.name,
        "projectId": args.projectId,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkAccount.
 */
export interface GetNetworkAccountArgs {
    id?: string;
    metroCode: string;
    name?: string;
    projectId?: string;
    status?: string;
}

/**
 * A collection of values returned by getNetworkAccount.
 */
export interface GetNetworkAccountResult {
    readonly id: string;
    readonly metroCode: string;
    readonly name: string;
    readonly number: string;
    readonly projectId: string;
    readonly status: string;
    readonly ucmId: string;
}
export function getNetworkAccountOutput(args: GetNetworkAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkAccountResult> {
    return pulumi.output(args).apply((a: any) => getNetworkAccount(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkAccount.
 */
export interface GetNetworkAccountOutputArgs {
    id?: pulumi.Input<string>;
    metroCode: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
