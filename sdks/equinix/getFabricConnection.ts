// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFabricConnection(args: GetFabricConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:index/getFabricConnection:getFabricConnection", {
        "id": args.id,
        "uuid": args.uuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricConnection.
 */
export interface GetFabricConnectionArgs {
    id?: string;
    uuid: string;
}

/**
 * A collection of values returned by getFabricConnection.
 */
export interface GetFabricConnectionResult {
    readonly aSides: outputs.GetFabricConnectionASide[];
    readonly accounts: outputs.GetFabricConnectionAccount[];
    readonly additionalInfos: {[key: string]: string}[];
    readonly bandwidth: number;
    readonly changeLogs: outputs.GetFabricConnectionChangeLog[];
    readonly description: string;
    readonly direction: string;
    readonly href: string;
    readonly id: string;
    readonly isRemote: boolean;
    readonly name: string;
    readonly notifications: outputs.GetFabricConnectionNotification[];
    readonly operations: outputs.GetFabricConnectionOperation[];
    readonly orders: outputs.GetFabricConnectionOrder[];
    readonly projects: outputs.GetFabricConnectionProject[];
    readonly redundancies: outputs.GetFabricConnectionRedundancy[];
    readonly state: string;
    readonly type: string;
    readonly uuid: string;
    readonly zSides: outputs.GetFabricConnectionZSide[];
}
export function getFabricConnectionOutput(args: GetFabricConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricConnectionResult> {
    return pulumi.output(args).apply((a: any) => getFabricConnection(a, opts))
}

/**
 * A collection of arguments for invoking getFabricConnection.
 */
export interface GetFabricConnectionOutputArgs {
    id?: pulumi.Input<string>;
    uuid: pulumi.Input<string>;
}
