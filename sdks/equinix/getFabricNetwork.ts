// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFabricNetwork(args: GetFabricNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricNetworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:index/getFabricNetwork:getFabricNetwork", {
        "id": args.id,
        "uuid": args.uuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricNetwork.
 */
export interface GetFabricNetworkArgs {
    id?: string;
    uuid: string;
}

/**
 * A collection of values returned by getFabricNetwork.
 */
export interface GetFabricNetworkResult {
    readonly changeLogs: outputs.GetFabricNetworkChangeLog[];
    readonly changes: outputs.GetFabricNetworkChange[];
    readonly connectionsCount: number;
    readonly href: string;
    readonly id: string;
    readonly locations: outputs.GetFabricNetworkLocation[];
    readonly name: string;
    readonly notifications: outputs.GetFabricNetworkNotification[];
    readonly operations: outputs.GetFabricNetworkOperation[];
    readonly projects: outputs.GetFabricNetworkProject[];
    readonly scope: string;
    readonly state: string;
    readonly type: string;
    readonly uuid: string;
}
export function getFabricNetworkOutput(args: GetFabricNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricNetworkResult> {
    return pulumi.output(args).apply((a: any) => getFabricNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getFabricNetwork.
 */
export interface GetFabricNetworkOutputArgs {
    id?: pulumi.Input<string>;
    uuid: pulumi.Input<string>;
}
