// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFabricCloudRouter(args: GetFabricCloudRouterArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricCloudRouterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:index/getFabricCloudRouter:getFabricCloudRouter", {
        "id": args.id,
        "uuid": args.uuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricCloudRouter.
 */
export interface GetFabricCloudRouterArgs {
    id?: string;
    uuid: string;
}

/**
 * A collection of values returned by getFabricCloudRouter.
 */
export interface GetFabricCloudRouterResult {
    readonly accounts: outputs.GetFabricCloudRouterAccount[];
    readonly bgpIpv4RoutesCount: number;
    readonly bgpIpv6RoutesCount: number;
    readonly changeLogs: outputs.GetFabricCloudRouterChangeLog[];
    readonly connectionsCount: number;
    readonly description: string;
    readonly distinctIpv4PrefixesCount: number;
    readonly distinctIpv6PrefixesCount: number;
    readonly equinixAsn: number;
    readonly href: string;
    readonly id: string;
    readonly locations: outputs.GetFabricCloudRouterLocation[];
    readonly name: string;
    readonly notifications: outputs.GetFabricCloudRouterNotification[];
    readonly orders: outputs.GetFabricCloudRouterOrder[];
    readonly packages: outputs.GetFabricCloudRouterPackage[];
    readonly projects: outputs.GetFabricCloudRouterProject[];
    readonly state: string;
    readonly type: string;
    readonly uuid: string;
}
export function getFabricCloudRouterOutput(args: GetFabricCloudRouterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricCloudRouterResult> {
    return pulumi.output(args).apply((a: any) => getFabricCloudRouter(a, opts))
}

/**
 * A collection of arguments for invoking getFabricCloudRouter.
 */
export interface GetFabricCloudRouterOutputArgs {
    id?: pulumi.Input<string>;
    uuid: pulumi.Input<string>;
}
