// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMetalReservedIpBlock(args?: GetMetalReservedIpBlockArgs, opts?: pulumi.InvokeOptions): Promise<GetMetalReservedIpBlockResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:index/getMetalReservedIpBlock:getMetalReservedIpBlock", {
        "id": args.id,
        "ipAddress": args.ipAddress,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMetalReservedIpBlock.
 */
export interface GetMetalReservedIpBlockArgs {
    id?: string;
    ipAddress?: string;
    projectId?: string;
}

/**
 * A collection of values returned by getMetalReservedIpBlock.
 */
export interface GetMetalReservedIpBlockResult {
    readonly address: string;
    readonly addressFamily: number;
    readonly cidr: number;
    readonly cidrNotation: string;
    /**
     * @deprecated Deprecated
     */
    readonly facility: string;
    readonly gateway: string;
    readonly global: boolean;
    readonly id: string;
    readonly ipAddress?: string;
    readonly manageable: boolean;
    readonly management: boolean;
    readonly metro: string;
    readonly netmask: string;
    readonly network: string;
    readonly projectId: string;
    readonly public: boolean;
    readonly quantity: number;
    readonly type: string;
    readonly vrfId: number;
}
export function getMetalReservedIpBlockOutput(args?: GetMetalReservedIpBlockOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetalReservedIpBlockResult> {
    return pulumi.output(args).apply((a: any) => getMetalReservedIpBlock(a, opts))
}

/**
 * A collection of arguments for invoking getMetalReservedIpBlock.
 */
export interface GetMetalReservedIpBlockOutputArgs {
    id?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
}
