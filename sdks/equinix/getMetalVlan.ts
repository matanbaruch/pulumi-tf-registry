// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMetalVlan(args?: GetMetalVlanArgs, opts?: pulumi.InvokeOptions): Promise<GetMetalVlanResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:index/getMetalVlan:getMetalVlan", {
        "facility": args.facility,
        "metro": args.metro,
        "projectId": args.projectId,
        "vlanId": args.vlanId,
        "vxlan": args.vxlan,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMetalVlan.
 */
export interface GetMetalVlanArgs {
    /**
     * @deprecated Deprecated
     */
    facility?: string;
    metro?: string;
    projectId?: string;
    vlanId?: string;
    vxlan?: number;
}

/**
 * A collection of values returned by getMetalVlan.
 */
export interface GetMetalVlanResult {
    readonly assignedDevicesIds: string[];
    readonly description: string;
    /**
     * @deprecated Deprecated
     */
    readonly facility: string;
    readonly id: string;
    readonly metro: string;
    readonly projectId: string;
    readonly vlanId: string;
    readonly vxlan: number;
}
export function getMetalVlanOutput(args?: GetMetalVlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetalVlanResult> {
    return pulumi.output(args).apply((a: any) => getMetalVlan(a, opts))
}

/**
 * A collection of arguments for invoking getMetalVlan.
 */
export interface GetMetalVlanOutputArgs {
    /**
     * @deprecated Deprecated
     */
    facility?: pulumi.Input<string>;
    metro?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    vlanId?: pulumi.Input<string>;
    vxlan?: pulumi.Input<number>;
}
