// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFabricPorts(args: GetFabricPortsArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricPortsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:index/getFabricPorts:getFabricPorts", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricPorts.
 */
export interface GetFabricPortsArgs {
    filters: inputs.GetFabricPortsFilters;
    id?: string;
}

/**
 * A collection of values returned by getFabricPorts.
 */
export interface GetFabricPortsResult {
    readonly datas: outputs.GetFabricPortsData[];
    readonly filters: outputs.GetFabricPortsFilters;
    readonly id: string;
}
export function getFabricPortsOutput(args: GetFabricPortsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricPortsResult> {
    return pulumi.output(args).apply((a: any) => getFabricPorts(a, opts))
}

/**
 * A collection of arguments for invoking getFabricPorts.
 */
export interface GetFabricPortsOutputArgs {
    filters: pulumi.Input<inputs.GetFabricPortsFiltersArgs>;
    id?: pulumi.Input<string>;
}
