// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMetalPort(args?: GetMetalPortArgs, opts?: pulumi.InvokeOptions): Promise<GetMetalPortResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:index/getMetalPort:getMetalPort", {
        "deviceId": args.deviceId,
        "id": args.id,
        "name": args.name,
        "portId": args.portId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMetalPort.
 */
export interface GetMetalPortArgs {
    deviceId?: string;
    id?: string;
    name?: string;
    portId?: string;
}

/**
 * A collection of values returned by getMetalPort.
 */
export interface GetMetalPortResult {
    readonly bondId: string;
    readonly bondName: string;
    readonly bonded: boolean;
    readonly deviceId?: string;
    readonly disbondSupported: boolean;
    readonly id: string;
    readonly layer2: boolean;
    readonly mac: string;
    readonly name: string;
    readonly nativeVlanId: string;
    readonly networkType: string;
    readonly portId?: string;
    readonly type: string;
    readonly vlanIds: string[];
    readonly vxlanIds: number[];
}
export function getMetalPortOutput(args?: GetMetalPortOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetalPortResult> {
    return pulumi.output(args).apply((a: any) => getMetalPort(a, opts))
}

/**
 * A collection of arguments for invoking getMetalPort.
 */
export interface GetMetalPortOutputArgs {
    deviceId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    portId?: pulumi.Input<string>;
}
