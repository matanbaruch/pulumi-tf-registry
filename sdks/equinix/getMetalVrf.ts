// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMetalVrf(args: GetMetalVrfArgs, opts?: pulumi.InvokeOptions): Promise<GetMetalVrfResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:index/getMetalVrf:getMetalVrf", {
        "id": args.id,
        "vrfId": args.vrfId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMetalVrf.
 */
export interface GetMetalVrfArgs {
    id?: string;
    vrfId: string;
}

/**
 * A collection of values returned by getMetalVrf.
 */
export interface GetMetalVrfResult {
    readonly description: string;
    readonly id: string;
    readonly ipRanges: string[];
    readonly localAsn: number;
    readonly metro: string;
    readonly name: string;
    readonly projectId: string;
    readonly vrfId: string;
}
export function getMetalVrfOutput(args: GetMetalVrfOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetalVrfResult> {
    return pulumi.output(args).apply((a: any) => getMetalVrf(a, opts))
}

/**
 * A collection of arguments for invoking getMetalVrf.
 */
export interface GetMetalVrfOutputArgs {
    id?: pulumi.Input<string>;
    vrfId: pulumi.Input<string>;
}
