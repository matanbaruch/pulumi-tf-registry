// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMetalHardwareReservation(args?: GetMetalHardwareReservationArgs, opts?: pulumi.InvokeOptions): Promise<GetMetalHardwareReservationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:index/getMetalHardwareReservation:getMetalHardwareReservation", {
        "deviceId": args.deviceId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMetalHardwareReservation.
 */
export interface GetMetalHardwareReservationArgs {
    deviceId?: string;
    id?: string;
}

/**
 * A collection of values returned by getMetalHardwareReservation.
 */
export interface GetMetalHardwareReservationResult {
    readonly deviceId: string;
    /**
     * @deprecated Deprecated
     */
    readonly facility: string;
    readonly id: string;
    readonly plan: string;
    readonly projectId: string;
    readonly provisionable: boolean;
    readonly shortId: string;
    readonly spare: boolean;
    readonly switchUuid: string;
}
export function getMetalHardwareReservationOutput(args?: GetMetalHardwareReservationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetalHardwareReservationResult> {
    return pulumi.output(args).apply((a: any) => getMetalHardwareReservation(a, opts))
}

/**
 * A collection of arguments for invoking getMetalHardwareReservation.
 */
export interface GetMetalHardwareReservationOutputArgs {
    deviceId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
