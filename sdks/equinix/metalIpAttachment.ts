// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MetalIpAttachment extends pulumi.CustomResource {
    /**
     * Get an existing MetalIpAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MetalIpAttachmentState, opts?: pulumi.CustomResourceOptions): MetalIpAttachment {
        return new MetalIpAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'equinix:index/metalIpAttachment:MetalIpAttachment';

    /**
     * Returns true if the given object is an instance of MetalIpAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MetalIpAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MetalIpAttachment.__pulumiType;
    }

    public /*out*/ readonly address!: pulumi.Output<string>;
    /**
     * Address family as integer (4 or 6)
     */
    public /*out*/ readonly addressFamily!: pulumi.Output<number>;
    /**
     * Length of CIDR prefix of the block as integer
     */
    public /*out*/ readonly cidr!: pulumi.Output<number>;
    public readonly cidrNotation!: pulumi.Output<string>;
    public readonly deviceId!: pulumi.Output<string>;
    public /*out*/ readonly gateway!: pulumi.Output<string>;
    /**
     * Flag indicating whether IP block is global, i.e. assignable in any location
     */
    public /*out*/ readonly global!: pulumi.Output<boolean>;
    public /*out*/ readonly manageable!: pulumi.Output<boolean>;
    public /*out*/ readonly management!: pulumi.Output<boolean>;
    /**
     * Mask in decimal notation, e.g. 255.255.255.0
     */
    public /*out*/ readonly netmask!: pulumi.Output<string>;
    /**
     * Network IP address portion of the block specification
     */
    public /*out*/ readonly network!: pulumi.Output<string>;
    /**
     * Flag indicating whether IP block is addressable from the Internet
     */
    public /*out*/ readonly public!: pulumi.Output<boolean>;
    public /*out*/ readonly vrfId!: pulumi.Output<string>;

    /**
     * Create a MetalIpAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MetalIpAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MetalIpAttachmentArgs | MetalIpAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MetalIpAttachmentState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["addressFamily"] = state ? state.addressFamily : undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["cidrNotation"] = state ? state.cidrNotation : undefined;
            resourceInputs["deviceId"] = state ? state.deviceId : undefined;
            resourceInputs["gateway"] = state ? state.gateway : undefined;
            resourceInputs["global"] = state ? state.global : undefined;
            resourceInputs["manageable"] = state ? state.manageable : undefined;
            resourceInputs["management"] = state ? state.management : undefined;
            resourceInputs["netmask"] = state ? state.netmask : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["public"] = state ? state.public : undefined;
            resourceInputs["vrfId"] = state ? state.vrfId : undefined;
        } else {
            const args = argsOrState as MetalIpAttachmentArgs | undefined;
            if ((!args || args.cidrNotation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidrNotation'");
            }
            if ((!args || args.deviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceId'");
            }
            resourceInputs["cidrNotation"] = args ? args.cidrNotation : undefined;
            resourceInputs["deviceId"] = args ? args.deviceId : undefined;
            resourceInputs["address"] = undefined /*out*/;
            resourceInputs["addressFamily"] = undefined /*out*/;
            resourceInputs["cidr"] = undefined /*out*/;
            resourceInputs["gateway"] = undefined /*out*/;
            resourceInputs["global"] = undefined /*out*/;
            resourceInputs["manageable"] = undefined /*out*/;
            resourceInputs["management"] = undefined /*out*/;
            resourceInputs["netmask"] = undefined /*out*/;
            resourceInputs["network"] = undefined /*out*/;
            resourceInputs["public"] = undefined /*out*/;
            resourceInputs["vrfId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MetalIpAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MetalIpAttachment resources.
 */
export interface MetalIpAttachmentState {
    address?: pulumi.Input<string>;
    /**
     * Address family as integer (4 or 6)
     */
    addressFamily?: pulumi.Input<number>;
    /**
     * Length of CIDR prefix of the block as integer
     */
    cidr?: pulumi.Input<number>;
    cidrNotation?: pulumi.Input<string>;
    deviceId?: pulumi.Input<string>;
    gateway?: pulumi.Input<string>;
    /**
     * Flag indicating whether IP block is global, i.e. assignable in any location
     */
    global?: pulumi.Input<boolean>;
    manageable?: pulumi.Input<boolean>;
    management?: pulumi.Input<boolean>;
    /**
     * Mask in decimal notation, e.g. 255.255.255.0
     */
    netmask?: pulumi.Input<string>;
    /**
     * Network IP address portion of the block specification
     */
    network?: pulumi.Input<string>;
    /**
     * Flag indicating whether IP block is addressable from the Internet
     */
    public?: pulumi.Input<boolean>;
    vrfId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MetalIpAttachment resource.
 */
export interface MetalIpAttachmentArgs {
    cidrNotation: pulumi.Input<string>;
    deviceId: pulumi.Input<string>;
}
