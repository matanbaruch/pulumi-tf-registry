// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetworkDeviceType(args?: GetNetworkDeviceTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkDeviceTypeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:index/getNetworkDeviceType:getNetworkDeviceType", {
        "category": args.category,
        "id": args.id,
        "metroCodes": args.metroCodes,
        "name": args.name,
        "vendor": args.vendor,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkDeviceType.
 */
export interface GetNetworkDeviceTypeArgs {
    category?: string;
    id?: string;
    metroCodes?: string[];
    name?: string;
    vendor?: string;
}

/**
 * A collection of values returned by getNetworkDeviceType.
 */
export interface GetNetworkDeviceTypeResult {
    readonly category: string;
    readonly code: string;
    readonly description: string;
    readonly id: string;
    readonly metroCodes: string[];
    readonly name: string;
    readonly vendor: string;
}
export function getNetworkDeviceTypeOutput(args?: GetNetworkDeviceTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkDeviceTypeResult> {
    return pulumi.output(args).apply((a: any) => getNetworkDeviceType(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkDeviceType.
 */
export interface GetNetworkDeviceTypeOutputArgs {
    category?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    metroCodes?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    vendor?: pulumi.Input<string>;
}
