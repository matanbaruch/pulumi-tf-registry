// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDbtProject(args: GetDbtProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetDbtProjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getDbtProject:getDbtProject", {
        "id": args.id,
        "projectConfig": args.projectConfig,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDbtProject.
 */
export interface GetDbtProjectArgs {
    id: string;
    projectConfig?: inputs.GetDbtProjectProjectConfig;
}

/**
 * A collection of values returned by getDbtProject.
 */
export interface GetDbtProjectResult {
    readonly createdAt: string;
    readonly createdById: string;
    readonly dbtVersion: string;
    readonly defaultSchema: string;
    readonly ensureReadiness: boolean;
    readonly environmentVars: string[];
    readonly groupId: string;
    readonly id: string;
    readonly models: outputs.GetDbtProjectModel[];
    readonly projectConfig?: outputs.GetDbtProjectProjectConfig;
    readonly publicKey: string;
    readonly status: string;
    readonly targetName: string;
    readonly threads: number;
    readonly type: string;
}
export function getDbtProjectOutput(args: GetDbtProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDbtProjectResult> {
    return pulumi.output(args).apply((a: any) => getDbtProject(a, opts))
}

/**
 * A collection of arguments for invoking getDbtProject.
 */
export interface GetDbtProjectOutputArgs {
    id: pulumi.Input<string>;
    projectConfig?: pulumi.Input<inputs.GetDbtProjectProjectConfigArgs>;
}
