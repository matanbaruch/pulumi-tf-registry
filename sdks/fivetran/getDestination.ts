// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDestination(args: GetDestinationArgs, opts?: pulumi.InvokeOptions): Promise<GetDestinationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getDestination:getDestination", {
        "config": args.config,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDestination.
 */
export interface GetDestinationArgs {
    config?: inputs.GetDestinationConfig;
    id: string;
}

/**
 * A collection of values returned by getDestination.
 */
export interface GetDestinationResult {
    readonly config?: outputs.GetDestinationConfig;
    readonly daylightSavingTimeEnabled: boolean;
    readonly groupId: string;
    readonly id: string;
    readonly localProcessingAgentId: string;
    readonly networkingMethod: string;
    readonly region: string;
    readonly service: string;
    readonly setupStatus: string;
    readonly timeZoneOffset: string;
}
export function getDestinationOutput(args: GetDestinationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDestinationResult> {
    return pulumi.output(args).apply((a: any) => getDestination(a, opts))
}

/**
 * A collection of arguments for invoking getDestination.
 */
export interface GetDestinationOutputArgs {
    config?: pulumi.Input<inputs.GetDestinationConfigArgs>;
    id: pulumi.Input<string>;
}
