// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGroupConnectors(args: GetGroupConnectorsArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupConnectorsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getGroupConnectors:getGroupConnectors", {
        "connectors": args.connectors,
        "id": args.id,
        "schema": args.schema,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGroupConnectors.
 */
export interface GetGroupConnectorsArgs {
    connectors?: inputs.GetGroupConnectorsConnector[];
    id: string;
    schema?: string;
}

/**
 * A collection of values returned by getGroupConnectors.
 */
export interface GetGroupConnectorsResult {
    readonly connectors?: outputs.GetGroupConnectorsConnector[];
    readonly id: string;
    readonly schema?: string;
}
export function getGroupConnectorsOutput(args: GetGroupConnectorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupConnectorsResult> {
    return pulumi.output(args).apply((a: any) => getGroupConnectors(a, opts))
}

/**
 * A collection of arguments for invoking getGroupConnectors.
 */
export interface GetGroupConnectorsOutputArgs {
    connectors?: pulumi.Input<pulumi.Input<inputs.GetGroupConnectorsConnectorArgs>[]>;
    id: pulumi.Input<string>;
    schema?: pulumi.Input<string>;
}
