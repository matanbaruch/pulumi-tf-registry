// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGroupSshKey(args: GetGroupSshKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupSshKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getGroupSshKey:getGroupSshKey", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGroupSshKey.
 */
export interface GetGroupSshKeyArgs {
    id: string;
}

/**
 * A collection of values returned by getGroupSshKey.
 */
export interface GetGroupSshKeyResult {
    readonly id: string;
    readonly publicKey: string;
}
export function getGroupSshKeyOutput(args: GetGroupSshKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupSshKeyResult> {
    return pulumi.output(args).apply((a: any) => getGroupSshKey(a, opts))
}

/**
 * A collection of arguments for invoking getGroupSshKey.
 */
export interface GetGroupSshKeyOutputArgs {
    id: pulumi.Input<string>;
}
