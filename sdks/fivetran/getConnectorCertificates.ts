// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConnectorCertificates(args: GetConnectorCertificatesArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectorCertificatesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getConnectorCertificates:getConnectorCertificates", {
        "certificates": args.certificates,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectorCertificates.
 */
export interface GetConnectorCertificatesArgs {
    certificates?: inputs.GetConnectorCertificatesCertificate[];
    id: string;
}

/**
 * A collection of values returned by getConnectorCertificates.
 */
export interface GetConnectorCertificatesResult {
    readonly certificates?: outputs.GetConnectorCertificatesCertificate[];
    readonly connectorId: string;
    readonly id: string;
}
export function getConnectorCertificatesOutput(args: GetConnectorCertificatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectorCertificatesResult> {
    return pulumi.output(args).apply((a: any) => getConnectorCertificates(a, opts))
}

/**
 * A collection of arguments for invoking getConnectorCertificates.
 */
export interface GetConnectorCertificatesOutputArgs {
    certificates?: pulumi.Input<pulumi.Input<inputs.GetConnectorCertificatesCertificateArgs>[]>;
    id: pulumi.Input<string>;
}
