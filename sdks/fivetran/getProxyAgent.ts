// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getProxyAgent(args: GetProxyAgentArgs, opts?: pulumi.InvokeOptions): Promise<GetProxyAgentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getProxyAgent:getProxyAgent", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProxyAgent.
 */
export interface GetProxyAgentArgs {
    id: string;
}

/**
 * A collection of values returned by getProxyAgent.
 */
export interface GetProxyAgentResult {
    readonly createdBy: string;
    readonly displayName: string;
    readonly groupRegion: string;
    readonly id: string;
    readonly registredAt: string;
    readonly salt: string;
    readonly token: string;
}
export function getProxyAgentOutput(args: GetProxyAgentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProxyAgentResult> {
    return pulumi.output(args).apply((a: any) => getProxyAgent(a, opts))
}

/**
 * A collection of arguments for invoking getProxyAgent.
 */
export interface GetProxyAgentOutputArgs {
    id: pulumi.Input<string>;
}
