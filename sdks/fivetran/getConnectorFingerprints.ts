// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConnectorFingerprints(args: GetConnectorFingerprintsArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectorFingerprintsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getConnectorFingerprints:getConnectorFingerprints", {
        "fingerprints": args.fingerprints,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectorFingerprints.
 */
export interface GetConnectorFingerprintsArgs {
    fingerprints?: inputs.GetConnectorFingerprintsFingerprint[];
    id: string;
}

/**
 * A collection of values returned by getConnectorFingerprints.
 */
export interface GetConnectorFingerprintsResult {
    readonly connectorId: string;
    readonly fingerprints?: outputs.GetConnectorFingerprintsFingerprint[];
    readonly id: string;
}
export function getConnectorFingerprintsOutput(args: GetConnectorFingerprintsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectorFingerprintsResult> {
    return pulumi.output(args).apply((a: any) => getConnectorFingerprints(a, opts))
}

/**
 * A collection of arguments for invoking getConnectorFingerprints.
 */
export interface GetConnectorFingerprintsOutputArgs {
    fingerprints?: pulumi.Input<pulumi.Input<inputs.GetConnectorFingerprintsFingerprintArgs>[]>;
    id: pulumi.Input<string>;
}
