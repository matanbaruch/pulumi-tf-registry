// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getExternalLogging(args: GetExternalLoggingArgs, opts?: pulumi.InvokeOptions): Promise<GetExternalLoggingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getExternalLogging:getExternalLogging", {
        "config": args.config,
        "id": args.id,
        "runSetupTests": args.runSetupTests,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getExternalLogging.
 */
export interface GetExternalLoggingArgs {
    config?: inputs.GetExternalLoggingConfig;
    id: string;
    runSetupTests?: boolean;
}

/**
 * A collection of values returned by getExternalLogging.
 */
export interface GetExternalLoggingResult {
    readonly config?: outputs.GetExternalLoggingConfig;
    readonly enabled: boolean;
    readonly groupId: string;
    readonly id: string;
    readonly runSetupTests?: boolean;
    readonly service: string;
}
export function getExternalLoggingOutput(args: GetExternalLoggingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetExternalLoggingResult> {
    return pulumi.output(args).apply((a: any) => getExternalLogging(a, opts))
}

/**
 * A collection of arguments for invoking getExternalLogging.
 */
export interface GetExternalLoggingOutputArgs {
    config?: pulumi.Input<inputs.GetExternalLoggingConfigArgs>;
    id: pulumi.Input<string>;
    runSetupTests?: pulumi.Input<boolean>;
}
