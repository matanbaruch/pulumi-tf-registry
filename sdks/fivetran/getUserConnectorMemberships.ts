// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUserConnectorMemberships(args: GetUserConnectorMembershipsArgs, opts?: pulumi.InvokeOptions): Promise<GetUserConnectorMembershipsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getUserConnectorMemberships:getUserConnectorMemberships", {
        "connectors": args.connectors,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUserConnectorMemberships.
 */
export interface GetUserConnectorMembershipsArgs {
    connectors?: inputs.GetUserConnectorMembershipsConnector[];
    userId: string;
}

/**
 * A collection of values returned by getUserConnectorMemberships.
 */
export interface GetUserConnectorMembershipsResult {
    readonly connectors?: outputs.GetUserConnectorMembershipsConnector[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly userId: string;
}
export function getUserConnectorMembershipsOutput(args: GetUserConnectorMembershipsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserConnectorMembershipsResult> {
    return pulumi.output(args).apply((a: any) => getUserConnectorMemberships(a, opts))
}

/**
 * A collection of arguments for invoking getUserConnectorMemberships.
 */
export interface GetUserConnectorMembershipsOutputArgs {
    connectors?: pulumi.Input<pulumi.Input<inputs.GetUserConnectorMembershipsConnectorArgs>[]>;
    userId: pulumi.Input<string>;
}
