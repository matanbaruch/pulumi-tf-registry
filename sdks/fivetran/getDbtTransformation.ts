// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDbtTransformation(args: GetDbtTransformationArgs, opts?: pulumi.InvokeOptions): Promise<GetDbtTransformationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fivetran:index/getDbtTransformation:getDbtTransformation", {
        "id": args.id,
        "schedule": args.schedule,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDbtTransformation.
 */
export interface GetDbtTransformationArgs {
    id: string;
    schedule?: inputs.GetDbtTransformationSchedule;
}

/**
 * A collection of values returned by getDbtTransformation.
 */
export interface GetDbtTransformationResult {
    readonly connectorIds: string[];
    readonly createdAt: string;
    readonly dbtModelId: string;
    readonly dbtModelName: string;
    readonly dbtProjectId: string;
    readonly id: string;
    readonly modelIds: string[];
    readonly outputModelName: string;
    readonly paused: boolean;
    readonly runTests: boolean;
    readonly schedule?: outputs.GetDbtTransformationSchedule;
}
export function getDbtTransformationOutput(args: GetDbtTransformationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDbtTransformationResult> {
    return pulumi.output(args).apply((a: any) => getDbtTransformation(a, opts))
}

/**
 * A collection of arguments for invoking getDbtTransformation.
 */
export interface GetDbtTransformationOutputArgs {
    id: pulumi.Input<string>;
    schedule?: pulumi.Input<inputs.GetDbtTransformationScheduleArgs>;
}
