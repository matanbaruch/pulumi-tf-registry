// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVolume(args: GetVolumeArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-gcp:index/getVolume:getVolume", {
        "id": args.id,
        "name": args.name,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeArgs {
    id?: string;
    name: string;
    region: string;
}

/**
 * A collection of values returned by getVolume.
 */
export interface GetVolumeResult {
    readonly billingLabels: outputs.GetVolumeBillingLabel[];
    readonly deleteOnCreationError: boolean;
    readonly exportPolicies: outputs.GetVolumeExportPolicy[];
    readonly id: string;
    readonly mountPoints: outputs.GetVolumeMountPoint[];
    readonly name: string;
    readonly network: string;
    readonly poolId: string;
    readonly protocolTypes: string[];
    readonly region: string;
    readonly regionalHa: boolean;
    readonly securityStyle: string;
    readonly serviceLevel: string;
    readonly sharedVpcProjectNumber: string;
    readonly size: number;
    readonly smbShareSettings: string[];
    readonly snapshotDirectory: boolean;
    readonly snapshotPolicies: outputs.GetVolumeSnapshotPolicy[];
    readonly storageClass: string;
    readonly typeDp: boolean;
    readonly unixPermissions: string;
    readonly volumePath: string;
    readonly zone: string;
}
export function getVolumeOutput(args: GetVolumeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVolumeResult> {
    return pulumi.output(args).apply((a: any) => getVolume(a, opts))
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    region: pulumi.Input<string>;
}
