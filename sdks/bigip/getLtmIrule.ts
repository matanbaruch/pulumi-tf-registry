// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLtmIrule(args: GetLtmIruleArgs, opts?: pulumi.InvokeOptions): Promise<GetLtmIruleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bigip:index/getLtmIrule:getLtmIrule", {
        "id": args.id,
        "irule": args.irule,
        "name": args.name,
        "partition": args.partition,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLtmIrule.
 */
export interface GetLtmIruleArgs {
    id?: string;
    irule?: string;
    name: string;
    partition: string;
}

/**
 * A collection of values returned by getLtmIrule.
 */
export interface GetLtmIruleResult {
    readonly id: string;
    readonly irule?: string;
    readonly name: string;
    readonly partition: string;
}
export function getLtmIruleOutput(args: GetLtmIruleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLtmIruleResult> {
    return pulumi.output(args).apply((a: any) => getLtmIrule(a, opts))
}

/**
 * A collection of arguments for invoking getLtmIrule.
 */
export interface GetLtmIruleOutputArgs {
    id?: pulumi.Input<string>;
    irule?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    partition: pulumi.Input<string>;
}
