// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getWafPolicy(args: GetWafPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetWafPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bigip:index/getWafPolicy:getWafPolicy", {
        "id": args.id,
        "policyId": args.policyId,
        "policyJson": args.policyJson,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWafPolicy.
 */
export interface GetWafPolicyArgs {
    id?: string;
    policyId: string;
    policyJson?: string;
}

/**
 * A collection of values returned by getWafPolicy.
 */
export interface GetWafPolicyResult {
    readonly id: string;
    readonly policyId: string;
    readonly policyJson: string;
}
export function getWafPolicyOutput(args: GetWafPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWafPolicyResult> {
    return pulumi.output(args).apply((a: any) => getWafPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getWafPolicy.
 */
export interface GetWafPolicyOutputArgs {
    id?: pulumi.Input<string>;
    policyId: pulumi.Input<string>;
    policyJson?: pulumi.Input<string>;
}
