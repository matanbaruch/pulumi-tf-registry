// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFastConsulServiceDiscovery(args: GetFastConsulServiceDiscoveryArgs, opts?: pulumi.InvokeOptions): Promise<GetFastConsulServiceDiscoveryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bigip:index/getFastConsulServiceDiscovery:getFastConsulServiceDiscovery", {
        "addressRealm": args.addressRealm,
        "credentialUpdate": args.credentialUpdate,
        "encodedToken": args.encodedToken,
        "id": args.id,
        "jmesPathQuery": args.jmesPathQuery,
        "minimumMonitors": args.minimumMonitors,
        "port": args.port,
        "rejectUnauthorized": args.rejectUnauthorized,
        "trustCa": args.trustCa,
        "type": args.type,
        "undetectableAction": args.undetectableAction,
        "updateInterval": args.updateInterval,
        "uri": args.uri,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFastConsulServiceDiscovery.
 */
export interface GetFastConsulServiceDiscoveryArgs {
    addressRealm?: string;
    credentialUpdate?: boolean;
    encodedToken?: string;
    id?: string;
    jmesPathQuery?: string;
    minimumMonitors?: string;
    port: number;
    rejectUnauthorized?: boolean;
    trustCa?: string;
    type?: string;
    undetectableAction?: string;
    updateInterval?: string;
    uri: string;
}

/**
 * A collection of values returned by getFastConsulServiceDiscovery.
 */
export interface GetFastConsulServiceDiscoveryResult {
    readonly addressRealm?: string;
    readonly consulSdJson: string;
    readonly credentialUpdate?: boolean;
    readonly encodedToken?: string;
    readonly id: string;
    readonly jmesPathQuery?: string;
    readonly minimumMonitors?: string;
    readonly port: number;
    readonly rejectUnauthorized?: boolean;
    readonly trustCa?: string;
    readonly type?: string;
    readonly undetectableAction?: string;
    readonly updateInterval?: string;
    readonly uri: string;
}
export function getFastConsulServiceDiscoveryOutput(args: GetFastConsulServiceDiscoveryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFastConsulServiceDiscoveryResult> {
    return pulumi.output(args).apply((a: any) => getFastConsulServiceDiscovery(a, opts))
}

/**
 * A collection of arguments for invoking getFastConsulServiceDiscovery.
 */
export interface GetFastConsulServiceDiscoveryOutputArgs {
    addressRealm?: pulumi.Input<string>;
    credentialUpdate?: pulumi.Input<boolean>;
    encodedToken?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    jmesPathQuery?: pulumi.Input<string>;
    minimumMonitors?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    rejectUnauthorized?: pulumi.Input<boolean>;
    trustCa?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    undetectableAction?: pulumi.Input<string>;
    updateInterval?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}
