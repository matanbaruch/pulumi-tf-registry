// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLtmNode(args: GetLtmNodeArgs, opts?: pulumi.InvokeOptions): Promise<GetLtmNodeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bigip:index/getLtmNode:getLtmNode", {
        "address": args.address,
        "description": args.description,
        "fqdn": args.fqdn,
        "fullPath": args.fullPath,
        "id": args.id,
        "name": args.name,
        "partition": args.partition,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLtmNode.
 */
export interface GetLtmNodeArgs {
    address?: string;
    description?: string;
    fqdn?: inputs.GetLtmNodeFqdn;
    fullPath?: string;
    id?: string;
    name: string;
    partition: string;
}

/**
 * A collection of values returned by getLtmNode.
 */
export interface GetLtmNodeResult {
    readonly address?: string;
    readonly connectionLimit: number;
    readonly description?: string;
    readonly dynamicRatio: number;
    readonly fqdn?: outputs.GetLtmNodeFqdn;
    readonly fullPath?: string;
    readonly id: string;
    readonly monitor: string;
    readonly name: string;
    readonly partition: string;
    readonly rateLimit: string;
    readonly ratio: number;
    readonly session: string;
    readonly state: string;
}
export function getLtmNodeOutput(args: GetLtmNodeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLtmNodeResult> {
    return pulumi.output(args).apply((a: any) => getLtmNode(a, opts))
}

/**
 * A collection of arguments for invoking getLtmNode.
 */
export interface GetLtmNodeOutputArgs {
    address?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    fqdn?: pulumi.Input<inputs.GetLtmNodeFqdnArgs>;
    fullPath?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    partition: pulumi.Input<string>;
}
