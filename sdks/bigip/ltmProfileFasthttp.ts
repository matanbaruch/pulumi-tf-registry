// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LtmProfileFasthttp extends pulumi.CustomResource {
    /**
     * Get an existing LtmProfileFasthttp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LtmProfileFasthttpState, opts?: pulumi.CustomResourceOptions): LtmProfileFasthttp {
        return new LtmProfileFasthttp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bigip:index/ltmProfileFasthttp:LtmProfileFasthttp';

    /**
     * Returns true if the given object is an instance of LtmProfileFasthttp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LtmProfileFasthttp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LtmProfileFasthttp.__pulumiType;
    }

    /**
     * connpool_maxreuse timer
     */
    public readonly connpoolMaxreuse!: pulumi.Output<number>;
    /**
     * timer integer
     */
    public readonly connpoolMaxsize!: pulumi.Output<number>;
    /**
     * Pool min size
     */
    public readonly connpoolMinsize!: pulumi.Output<number>;
    /**
     * enabled or disabled
     */
    public readonly connpoolReplenish!: pulumi.Output<string>;
    /**
     * integer value
     */
    public readonly connpoolStep!: pulumi.Output<number>;
    /**
     * idle_timeout can be given value
     */
    public readonly connpoolidleTimeoutoverride!: pulumi.Output<number>;
    /**
     * Use the parent Fasthttp profile
     */
    public readonly defaultsFrom!: pulumi.Output<string | undefined>;
    /**
     * disabled or enabled
     */
    public readonly forcehttp10response!: pulumi.Output<string>;
    /**
     * integer value
     */
    public readonly idleTimeout!: pulumi.Output<number>;
    /**
     * integer value
     */
    public readonly maxheaderSize!: pulumi.Output<number>;
    /**
     * Name of the Fasthttp Profile
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a LtmProfileFasthttp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LtmProfileFasthttpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LtmProfileFasthttpArgs | LtmProfileFasthttpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LtmProfileFasthttpState | undefined;
            resourceInputs["connpoolMaxreuse"] = state ? state.connpoolMaxreuse : undefined;
            resourceInputs["connpoolMaxsize"] = state ? state.connpoolMaxsize : undefined;
            resourceInputs["connpoolMinsize"] = state ? state.connpoolMinsize : undefined;
            resourceInputs["connpoolReplenish"] = state ? state.connpoolReplenish : undefined;
            resourceInputs["connpoolStep"] = state ? state.connpoolStep : undefined;
            resourceInputs["connpoolidleTimeoutoverride"] = state ? state.connpoolidleTimeoutoverride : undefined;
            resourceInputs["defaultsFrom"] = state ? state.defaultsFrom : undefined;
            resourceInputs["forcehttp10response"] = state ? state.forcehttp10response : undefined;
            resourceInputs["idleTimeout"] = state ? state.idleTimeout : undefined;
            resourceInputs["maxheaderSize"] = state ? state.maxheaderSize : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as LtmProfileFasthttpArgs | undefined;
            resourceInputs["connpoolMaxreuse"] = args ? args.connpoolMaxreuse : undefined;
            resourceInputs["connpoolMaxsize"] = args ? args.connpoolMaxsize : undefined;
            resourceInputs["connpoolMinsize"] = args ? args.connpoolMinsize : undefined;
            resourceInputs["connpoolReplenish"] = args ? args.connpoolReplenish : undefined;
            resourceInputs["connpoolStep"] = args ? args.connpoolStep : undefined;
            resourceInputs["connpoolidleTimeoutoverride"] = args ? args.connpoolidleTimeoutoverride : undefined;
            resourceInputs["defaultsFrom"] = args ? args.defaultsFrom : undefined;
            resourceInputs["forcehttp10response"] = args ? args.forcehttp10response : undefined;
            resourceInputs["idleTimeout"] = args ? args.idleTimeout : undefined;
            resourceInputs["maxheaderSize"] = args ? args.maxheaderSize : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LtmProfileFasthttp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LtmProfileFasthttp resources.
 */
export interface LtmProfileFasthttpState {
    /**
     * connpool_maxreuse timer
     */
    connpoolMaxreuse?: pulumi.Input<number>;
    /**
     * timer integer
     */
    connpoolMaxsize?: pulumi.Input<number>;
    /**
     * Pool min size
     */
    connpoolMinsize?: pulumi.Input<number>;
    /**
     * enabled or disabled
     */
    connpoolReplenish?: pulumi.Input<string>;
    /**
     * integer value
     */
    connpoolStep?: pulumi.Input<number>;
    /**
     * idle_timeout can be given value
     */
    connpoolidleTimeoutoverride?: pulumi.Input<number>;
    /**
     * Use the parent Fasthttp profile
     */
    defaultsFrom?: pulumi.Input<string>;
    /**
     * disabled or enabled
     */
    forcehttp10response?: pulumi.Input<string>;
    /**
     * integer value
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * integer value
     */
    maxheaderSize?: pulumi.Input<number>;
    /**
     * Name of the Fasthttp Profile
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LtmProfileFasthttp resource.
 */
export interface LtmProfileFasthttpArgs {
    /**
     * connpool_maxreuse timer
     */
    connpoolMaxreuse?: pulumi.Input<number>;
    /**
     * timer integer
     */
    connpoolMaxsize?: pulumi.Input<number>;
    /**
     * Pool min size
     */
    connpoolMinsize?: pulumi.Input<number>;
    /**
     * enabled or disabled
     */
    connpoolReplenish?: pulumi.Input<string>;
    /**
     * integer value
     */
    connpoolStep?: pulumi.Input<number>;
    /**
     * idle_timeout can be given value
     */
    connpoolidleTimeoutoverride?: pulumi.Input<number>;
    /**
     * Use the parent Fasthttp profile
     */
    defaultsFrom?: pulumi.Input<string>;
    /**
     * disabled or enabled
     */
    forcehttp10response?: pulumi.Input<string>;
    /**
     * integer value
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * integer value
     */
    maxheaderSize?: pulumi.Input<number>;
    /**
     * Name of the Fasthttp Profile
     */
    name?: pulumi.Input<string>;
}
