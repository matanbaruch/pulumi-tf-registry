// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLtmDatagroup(args: GetLtmDatagroupArgs, opts?: pulumi.InvokeOptions): Promise<GetLtmDatagroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bigip:index/getLtmDatagroup:getLtmDatagroup", {
        "id": args.id,
        "name": args.name,
        "partition": args.partition,
        "records": args.records,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLtmDatagroup.
 */
export interface GetLtmDatagroupArgs {
    id?: string;
    name: string;
    partition: string;
    records?: inputs.GetLtmDatagroupRecord[];
    type?: string;
}

/**
 * A collection of values returned by getLtmDatagroup.
 */
export interface GetLtmDatagroupResult {
    readonly id: string;
    readonly name: string;
    readonly partition: string;
    readonly records?: outputs.GetLtmDatagroupRecord[];
    readonly type: string;
}
export function getLtmDatagroupOutput(args: GetLtmDatagroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLtmDatagroupResult> {
    return pulumi.output(args).apply((a: any) => getLtmDatagroup(a, opts))
}

/**
 * A collection of arguments for invoking getLtmDatagroup.
 */
export interface GetLtmDatagroupOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    partition: pulumi.Input<string>;
    records?: pulumi.Input<pulumi.Input<inputs.GetLtmDatagroupRecordArgs>[]>;
    type?: pulumi.Input<string>;
}
