// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVwanConfig(args: GetVwanConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetVwanConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bigip:index/getVwanConfig:getVwanConfig", {
        "azureVwanName": args.azureVwanName,
        "azureVwanResourcegroup": args.azureVwanResourcegroup,
        "azureVwanVpnsite": args.azureVwanVpnsite,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVwanConfig.
 */
export interface GetVwanConfigArgs {
    azureVwanName: string;
    azureVwanResourcegroup: string;
    azureVwanVpnsite: string;
    id?: string;
}

/**
 * A collection of values returned by getVwanConfig.
 */
export interface GetVwanConfigResult {
    readonly azureVwanName: string;
    readonly azureVwanResourcegroup: string;
    readonly azureVwanVpnsite: string;
    readonly bigipGwIp: string;
    readonly hubAddressSpace: string;
    readonly hubConnectedSubnets: string[];
    readonly id: string;
    readonly presharedKey: string;
    readonly vwanGwAddresses: string[];
}
export function getVwanConfigOutput(args: GetVwanConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVwanConfigResult> {
    return pulumi.output(args).apply((a: any) => getVwanConfig(a, opts))
}

/**
 * A collection of arguments for invoking getVwanConfig.
 */
export interface GetVwanConfigOutputArgs {
    azureVwanName: pulumi.Input<string>;
    azureVwanResourcegroup: pulumi.Input<string>;
    azureVwanVpnsite: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
