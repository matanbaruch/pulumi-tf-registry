// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LtmProfileClientSsl extends pulumi.CustomResource {
    /**
     * Get an existing LtmProfileClientSsl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LtmProfileClientSslState, opts?: pulumi.CustomResourceOptions): LtmProfileClientSsl {
        return new LtmProfileClientSsl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bigip:index/ltmProfileClientSsl:LtmProfileClientSsl';

    /**
     * Returns true if the given object is an instance of LtmProfileClientSsl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LtmProfileClientSsl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LtmProfileClientSsl.__pulumiType;
    }

    /**
     * Alert time out
     */
    public readonly alertTimeout!: pulumi.Output<string>;
    /**
     * Allow non ssl
     */
    public readonly allowNonSsl!: pulumi.Output<string>;
    /**
     * Server authentication once / always (default is once).
     */
    public readonly authenticate!: pulumi.Output<string>;
    /**
     * Client certificate chain traversal depth. Default 9.
     */
    public readonly authenticateDepth!: pulumi.Output<number>;
    /**
     * Client Fallback Certificate. Default None.
     */
    public readonly c3dClientFallbackCert!: pulumi.Output<string>;
    /**
     * Unknown OCSP Response Control. Default Drop.
     */
    public readonly c3dDropUnknownOcspStatus!: pulumi.Output<string>;
    /**
     * OCSP. Default None.
     */
    public readonly c3dOcsp!: pulumi.Output<string>;
    /**
     * (Trusted Certificate Authorities)Specifies a client CA that the system trusts. The default is `None`
     */
    public readonly caFile!: pulumi.Output<string>;
    /**
     * Cache size (sessions).
     */
    public readonly cacheSize!: pulumi.Output<number>;
    /**
     * Cache time out
     */
    public readonly cacheTimeout!: pulumi.Output<number>;
    /**
     * Name of the server certificate.
     */
    public readonly cert!: pulumi.Output<string>;
    /**
     * Cert extension includes for ssl forward proxy
     */
    public readonly certExtensionIncludes!: pulumi.Output<string[]>;
    /**
     * @deprecated Deprecated
     */
    public readonly certKeyChain!: pulumi.Output<outputs.LtmProfileClientSslCertKeyChain | undefined>;
    /**
     * Life span of the certificate in days for ssl forward proxy
     */
    public readonly certLifeSpan!: pulumi.Output<number>;
    /**
     * Cert lookup by ip address and port enabled / disabled
     */
    public readonly certLookupByIpaddrPort!: pulumi.Output<string>;
    /**
     * Client certificate chain name.
     */
    public readonly chain!: pulumi.Output<string>;
    /**
     * Cipher group for the ssl client profile
     */
    public readonly cipherGroup!: pulumi.Output<string>;
    /**
     * BigIP Cipher string.
     */
    public readonly ciphers!: pulumi.Output<string>;
    /**
     * (Advertised Certificate Authorities)Specifies that the CAs that the system advertises to clients is being trusted by the
     * profile. The default is `None`
     */
    public readonly clientCertCa!: pulumi.Output<string>;
    /**
     * Certificate revocation file name
     */
    public readonly crlFile!: pulumi.Output<string>;
    /**
     * Profile name that this profile defaults from.
     */
    public readonly defaultsFrom!: pulumi.Output<string | undefined>;
    /**
     * Forward proxy bypass default action. (enabled / disabled)
     */
    public readonly forwardProxyBypassDefaultAction!: pulumi.Output<string>;
    /**
     * full path of the profile
     */
    public readonly fullPath!: pulumi.Output<string>;
    /**
     * generation
     */
    public readonly generation!: pulumi.Output<number>;
    /**
     * Generic alerts enabled / disabled.
     */
    public readonly genericAlert!: pulumi.Output<string>;
    /**
     * Handshake time out (seconds)
     */
    public readonly handshakeTimeout!: pulumi.Output<string>;
    /**
     * Inherit cert key chain
     */
    public readonly inheritCertKeychain!: pulumi.Output<string>;
    /**
     * Name of the Server SSL profile key
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * ModSSL Methods enabled / disabled. Default is disabled.
     */
    public readonly modSslMethods!: pulumi.Output<string>;
    /**
     * ModSSL Methods enabled / disabled. Default is disabled.
     */
    public readonly mode!: pulumi.Output<string>;
    /**
     * Name of the Ssl Profile
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies whether the system uses OCSP stapling.
     */
    public readonly ocspStapling!: pulumi.Output<string | undefined>;
    /**
     * name of partition
     */
    public readonly partition!: pulumi.Output<string>;
    /**
     * Client Certificate Constrained Delegation CA passphrase
     */
    public readonly passphrase!: pulumi.Output<string>;
    /**
     * Peer Cert Mode
     */
    public readonly peerCertMode!: pulumi.Output<string>;
    /**
     * Proxy CA Cert
     */
    public readonly proxyCaCert!: pulumi.Output<string>;
    /**
     * Proxy CA Key
     */
    public readonly proxyCaKey!: pulumi.Output<string>;
    /**
     * Proxy CA Passphrase
     */
    public readonly proxyCaPassphrase!: pulumi.Output<string>;
    /**
     * Proxy SSL enabled / disabled. Default is disabled.
     */
    public readonly proxySsl!: pulumi.Output<string>;
    /**
     * Proxy SSL passthrough enabled / disabled. Default is disabled.
     */
    public readonly proxySslPassthrough!: pulumi.Output<string>;
    /**
     * Renogotiate Period (seconds)
     */
    public readonly renegotiatePeriod!: pulumi.Output<string>;
    /**
     * Renogotiate Size
     */
    public readonly renegotiateSize!: pulumi.Output<string>;
    /**
     * Renegotiation (enabled / disabled)
     */
    public readonly renegotiation!: pulumi.Output<string>;
    /**
     * Retain certificate.
     */
    public readonly retainCertificate!: pulumi.Output<string>;
    /**
     * Secure reneogotiaton (request / require / require-strict).
     */
    public readonly secureRenegotiation!: pulumi.Output<string>;
    /**
     * Server name
     */
    public readonly serverName!: pulumi.Output<string>;
    /**
     * Session Mirroring (enabled / disabled)
     */
    public readonly sessionMirroring!: pulumi.Output<string>;
    /**
     * Session Ticket (enabled / disabled)
     */
    public readonly sessionTicket!: pulumi.Output<string>;
    /**
     * SNI Default (true / false)
     */
    public readonly sniDefault!: pulumi.Output<string>;
    /**
     * SNI Require (true / false)
     */
    public readonly sniRequire!: pulumi.Output<string>;
    /**
     * Client Certificate Constrained Delegation enabled / disabled. Default is disabled.
     */
    public readonly sslC3d!: pulumi.Output<string>;
    /**
     * SSL forward Proxy (enabled / disabled)
     */
    public readonly sslForwardProxy!: pulumi.Output<string>;
    /**
     * SSL forward Proxy Bypass (enabled / disabled)
     */
    public readonly sslForwardProxyBypass!: pulumi.Output<string>;
    /**
     * SSL sign hash (any, sha1, sha256, sha384)
     */
    public readonly sslSignHash!: pulumi.Output<string>;
    /**
     * Strict Resume (enabled / disabled)
     */
    public readonly strictResume!: pulumi.Output<string>;
    public readonly tmOptions!: pulumi.Output<string[]>;
    /**
     * Unclean Shutdown (enabled / disabled)
     */
    public readonly uncleanShutdown!: pulumi.Output<string>;

    /**
     * Create a LtmProfileClientSsl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LtmProfileClientSslArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LtmProfileClientSslArgs | LtmProfileClientSslState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LtmProfileClientSslState | undefined;
            resourceInputs["alertTimeout"] = state ? state.alertTimeout : undefined;
            resourceInputs["allowNonSsl"] = state ? state.allowNonSsl : undefined;
            resourceInputs["authenticate"] = state ? state.authenticate : undefined;
            resourceInputs["authenticateDepth"] = state ? state.authenticateDepth : undefined;
            resourceInputs["c3dClientFallbackCert"] = state ? state.c3dClientFallbackCert : undefined;
            resourceInputs["c3dDropUnknownOcspStatus"] = state ? state.c3dDropUnknownOcspStatus : undefined;
            resourceInputs["c3dOcsp"] = state ? state.c3dOcsp : undefined;
            resourceInputs["caFile"] = state ? state.caFile : undefined;
            resourceInputs["cacheSize"] = state ? state.cacheSize : undefined;
            resourceInputs["cacheTimeout"] = state ? state.cacheTimeout : undefined;
            resourceInputs["cert"] = state ? state.cert : undefined;
            resourceInputs["certExtensionIncludes"] = state ? state.certExtensionIncludes : undefined;
            resourceInputs["certKeyChain"] = state ? state.certKeyChain : undefined;
            resourceInputs["certLifeSpan"] = state ? state.certLifeSpan : undefined;
            resourceInputs["certLookupByIpaddrPort"] = state ? state.certLookupByIpaddrPort : undefined;
            resourceInputs["chain"] = state ? state.chain : undefined;
            resourceInputs["cipherGroup"] = state ? state.cipherGroup : undefined;
            resourceInputs["ciphers"] = state ? state.ciphers : undefined;
            resourceInputs["clientCertCa"] = state ? state.clientCertCa : undefined;
            resourceInputs["crlFile"] = state ? state.crlFile : undefined;
            resourceInputs["defaultsFrom"] = state ? state.defaultsFrom : undefined;
            resourceInputs["forwardProxyBypassDefaultAction"] = state ? state.forwardProxyBypassDefaultAction : undefined;
            resourceInputs["fullPath"] = state ? state.fullPath : undefined;
            resourceInputs["generation"] = state ? state.generation : undefined;
            resourceInputs["genericAlert"] = state ? state.genericAlert : undefined;
            resourceInputs["handshakeTimeout"] = state ? state.handshakeTimeout : undefined;
            resourceInputs["inheritCertKeychain"] = state ? state.inheritCertKeychain : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["modSslMethods"] = state ? state.modSslMethods : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ocspStapling"] = state ? state.ocspStapling : undefined;
            resourceInputs["partition"] = state ? state.partition : undefined;
            resourceInputs["passphrase"] = state ? state.passphrase : undefined;
            resourceInputs["peerCertMode"] = state ? state.peerCertMode : undefined;
            resourceInputs["proxyCaCert"] = state ? state.proxyCaCert : undefined;
            resourceInputs["proxyCaKey"] = state ? state.proxyCaKey : undefined;
            resourceInputs["proxyCaPassphrase"] = state ? state.proxyCaPassphrase : undefined;
            resourceInputs["proxySsl"] = state ? state.proxySsl : undefined;
            resourceInputs["proxySslPassthrough"] = state ? state.proxySslPassthrough : undefined;
            resourceInputs["renegotiatePeriod"] = state ? state.renegotiatePeriod : undefined;
            resourceInputs["renegotiateSize"] = state ? state.renegotiateSize : undefined;
            resourceInputs["renegotiation"] = state ? state.renegotiation : undefined;
            resourceInputs["retainCertificate"] = state ? state.retainCertificate : undefined;
            resourceInputs["secureRenegotiation"] = state ? state.secureRenegotiation : undefined;
            resourceInputs["serverName"] = state ? state.serverName : undefined;
            resourceInputs["sessionMirroring"] = state ? state.sessionMirroring : undefined;
            resourceInputs["sessionTicket"] = state ? state.sessionTicket : undefined;
            resourceInputs["sniDefault"] = state ? state.sniDefault : undefined;
            resourceInputs["sniRequire"] = state ? state.sniRequire : undefined;
            resourceInputs["sslC3d"] = state ? state.sslC3d : undefined;
            resourceInputs["sslForwardProxy"] = state ? state.sslForwardProxy : undefined;
            resourceInputs["sslForwardProxyBypass"] = state ? state.sslForwardProxyBypass : undefined;
            resourceInputs["sslSignHash"] = state ? state.sslSignHash : undefined;
            resourceInputs["strictResume"] = state ? state.strictResume : undefined;
            resourceInputs["tmOptions"] = state ? state.tmOptions : undefined;
            resourceInputs["uncleanShutdown"] = state ? state.uncleanShutdown : undefined;
        } else {
            const args = argsOrState as LtmProfileClientSslArgs | undefined;
            resourceInputs["alertTimeout"] = args ? args.alertTimeout : undefined;
            resourceInputs["allowNonSsl"] = args ? args.allowNonSsl : undefined;
            resourceInputs["authenticate"] = args ? args.authenticate : undefined;
            resourceInputs["authenticateDepth"] = args ? args.authenticateDepth : undefined;
            resourceInputs["c3dClientFallbackCert"] = args ? args.c3dClientFallbackCert : undefined;
            resourceInputs["c3dDropUnknownOcspStatus"] = args ? args.c3dDropUnknownOcspStatus : undefined;
            resourceInputs["c3dOcsp"] = args ? args.c3dOcsp : undefined;
            resourceInputs["caFile"] = args ? args.caFile : undefined;
            resourceInputs["cacheSize"] = args ? args.cacheSize : undefined;
            resourceInputs["cacheTimeout"] = args ? args.cacheTimeout : undefined;
            resourceInputs["cert"] = args ? args.cert : undefined;
            resourceInputs["certExtensionIncludes"] = args ? args.certExtensionIncludes : undefined;
            resourceInputs["certKeyChain"] = args ? args.certKeyChain : undefined;
            resourceInputs["certLifeSpan"] = args ? args.certLifeSpan : undefined;
            resourceInputs["certLookupByIpaddrPort"] = args ? args.certLookupByIpaddrPort : undefined;
            resourceInputs["chain"] = args ? args.chain : undefined;
            resourceInputs["cipherGroup"] = args ? args.cipherGroup : undefined;
            resourceInputs["ciphers"] = args ? args.ciphers : undefined;
            resourceInputs["clientCertCa"] = args ? args.clientCertCa : undefined;
            resourceInputs["crlFile"] = args ? args.crlFile : undefined;
            resourceInputs["defaultsFrom"] = args ? args.defaultsFrom : undefined;
            resourceInputs["forwardProxyBypassDefaultAction"] = args ? args.forwardProxyBypassDefaultAction : undefined;
            resourceInputs["fullPath"] = args ? args.fullPath : undefined;
            resourceInputs["generation"] = args ? args.generation : undefined;
            resourceInputs["genericAlert"] = args ? args.genericAlert : undefined;
            resourceInputs["handshakeTimeout"] = args ? args.handshakeTimeout : undefined;
            resourceInputs["inheritCertKeychain"] = args ? args.inheritCertKeychain : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["modSslMethods"] = args ? args.modSslMethods : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ocspStapling"] = args ? args.ocspStapling : undefined;
            resourceInputs["partition"] = args ? args.partition : undefined;
            resourceInputs["passphrase"] = args?.passphrase ? pulumi.secret(args.passphrase) : undefined;
            resourceInputs["peerCertMode"] = args ? args.peerCertMode : undefined;
            resourceInputs["proxyCaCert"] = args ? args.proxyCaCert : undefined;
            resourceInputs["proxyCaKey"] = args ? args.proxyCaKey : undefined;
            resourceInputs["proxyCaPassphrase"] = args ? args.proxyCaPassphrase : undefined;
            resourceInputs["proxySsl"] = args ? args.proxySsl : undefined;
            resourceInputs["proxySslPassthrough"] = args ? args.proxySslPassthrough : undefined;
            resourceInputs["renegotiatePeriod"] = args ? args.renegotiatePeriod : undefined;
            resourceInputs["renegotiateSize"] = args ? args.renegotiateSize : undefined;
            resourceInputs["renegotiation"] = args ? args.renegotiation : undefined;
            resourceInputs["retainCertificate"] = args ? args.retainCertificate : undefined;
            resourceInputs["secureRenegotiation"] = args ? args.secureRenegotiation : undefined;
            resourceInputs["serverName"] = args ? args.serverName : undefined;
            resourceInputs["sessionMirroring"] = args ? args.sessionMirroring : undefined;
            resourceInputs["sessionTicket"] = args ? args.sessionTicket : undefined;
            resourceInputs["sniDefault"] = args ? args.sniDefault : undefined;
            resourceInputs["sniRequire"] = args ? args.sniRequire : undefined;
            resourceInputs["sslC3d"] = args ? args.sslC3d : undefined;
            resourceInputs["sslForwardProxy"] = args ? args.sslForwardProxy : undefined;
            resourceInputs["sslForwardProxyBypass"] = args ? args.sslForwardProxyBypass : undefined;
            resourceInputs["sslSignHash"] = args ? args.sslSignHash : undefined;
            resourceInputs["strictResume"] = args ? args.strictResume : undefined;
            resourceInputs["tmOptions"] = args ? args.tmOptions : undefined;
            resourceInputs["uncleanShutdown"] = args ? args.uncleanShutdown : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passphrase"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(LtmProfileClientSsl.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LtmProfileClientSsl resources.
 */
export interface LtmProfileClientSslState {
    /**
     * Alert time out
     */
    alertTimeout?: pulumi.Input<string>;
    /**
     * Allow non ssl
     */
    allowNonSsl?: pulumi.Input<string>;
    /**
     * Server authentication once / always (default is once).
     */
    authenticate?: pulumi.Input<string>;
    /**
     * Client certificate chain traversal depth. Default 9.
     */
    authenticateDepth?: pulumi.Input<number>;
    /**
     * Client Fallback Certificate. Default None.
     */
    c3dClientFallbackCert?: pulumi.Input<string>;
    /**
     * Unknown OCSP Response Control. Default Drop.
     */
    c3dDropUnknownOcspStatus?: pulumi.Input<string>;
    /**
     * OCSP. Default None.
     */
    c3dOcsp?: pulumi.Input<string>;
    /**
     * (Trusted Certificate Authorities)Specifies a client CA that the system trusts. The default is `None`
     */
    caFile?: pulumi.Input<string>;
    /**
     * Cache size (sessions).
     */
    cacheSize?: pulumi.Input<number>;
    /**
     * Cache time out
     */
    cacheTimeout?: pulumi.Input<number>;
    /**
     * Name of the server certificate.
     */
    cert?: pulumi.Input<string>;
    /**
     * Cert extension includes for ssl forward proxy
     */
    certExtensionIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated
     */
    certKeyChain?: pulumi.Input<inputs.LtmProfileClientSslCertKeyChain>;
    /**
     * Life span of the certificate in days for ssl forward proxy
     */
    certLifeSpan?: pulumi.Input<number>;
    /**
     * Cert lookup by ip address and port enabled / disabled
     */
    certLookupByIpaddrPort?: pulumi.Input<string>;
    /**
     * Client certificate chain name.
     */
    chain?: pulumi.Input<string>;
    /**
     * Cipher group for the ssl client profile
     */
    cipherGroup?: pulumi.Input<string>;
    /**
     * BigIP Cipher string.
     */
    ciphers?: pulumi.Input<string>;
    /**
     * (Advertised Certificate Authorities)Specifies that the CAs that the system advertises to clients is being trusted by the
     * profile. The default is `None`
     */
    clientCertCa?: pulumi.Input<string>;
    /**
     * Certificate revocation file name
     */
    crlFile?: pulumi.Input<string>;
    /**
     * Profile name that this profile defaults from.
     */
    defaultsFrom?: pulumi.Input<string>;
    /**
     * Forward proxy bypass default action. (enabled / disabled)
     */
    forwardProxyBypassDefaultAction?: pulumi.Input<string>;
    /**
     * full path of the profile
     */
    fullPath?: pulumi.Input<string>;
    /**
     * generation
     */
    generation?: pulumi.Input<number>;
    /**
     * Generic alerts enabled / disabled.
     */
    genericAlert?: pulumi.Input<string>;
    /**
     * Handshake time out (seconds)
     */
    handshakeTimeout?: pulumi.Input<string>;
    /**
     * Inherit cert key chain
     */
    inheritCertKeychain?: pulumi.Input<string>;
    /**
     * Name of the Server SSL profile key
     */
    key?: pulumi.Input<string>;
    /**
     * ModSSL Methods enabled / disabled. Default is disabled.
     */
    modSslMethods?: pulumi.Input<string>;
    /**
     * ModSSL Methods enabled / disabled. Default is disabled.
     */
    mode?: pulumi.Input<string>;
    /**
     * Name of the Ssl Profile
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies whether the system uses OCSP stapling.
     */
    ocspStapling?: pulumi.Input<string>;
    /**
     * name of partition
     */
    partition?: pulumi.Input<string>;
    /**
     * Client Certificate Constrained Delegation CA passphrase
     */
    passphrase?: pulumi.Input<string>;
    /**
     * Peer Cert Mode
     */
    peerCertMode?: pulumi.Input<string>;
    /**
     * Proxy CA Cert
     */
    proxyCaCert?: pulumi.Input<string>;
    /**
     * Proxy CA Key
     */
    proxyCaKey?: pulumi.Input<string>;
    /**
     * Proxy CA Passphrase
     */
    proxyCaPassphrase?: pulumi.Input<string>;
    /**
     * Proxy SSL enabled / disabled. Default is disabled.
     */
    proxySsl?: pulumi.Input<string>;
    /**
     * Proxy SSL passthrough enabled / disabled. Default is disabled.
     */
    proxySslPassthrough?: pulumi.Input<string>;
    /**
     * Renogotiate Period (seconds)
     */
    renegotiatePeriod?: pulumi.Input<string>;
    /**
     * Renogotiate Size
     */
    renegotiateSize?: pulumi.Input<string>;
    /**
     * Renegotiation (enabled / disabled)
     */
    renegotiation?: pulumi.Input<string>;
    /**
     * Retain certificate.
     */
    retainCertificate?: pulumi.Input<string>;
    /**
     * Secure reneogotiaton (request / require / require-strict).
     */
    secureRenegotiation?: pulumi.Input<string>;
    /**
     * Server name
     */
    serverName?: pulumi.Input<string>;
    /**
     * Session Mirroring (enabled / disabled)
     */
    sessionMirroring?: pulumi.Input<string>;
    /**
     * Session Ticket (enabled / disabled)
     */
    sessionTicket?: pulumi.Input<string>;
    /**
     * SNI Default (true / false)
     */
    sniDefault?: pulumi.Input<string>;
    /**
     * SNI Require (true / false)
     */
    sniRequire?: pulumi.Input<string>;
    /**
     * Client Certificate Constrained Delegation enabled / disabled. Default is disabled.
     */
    sslC3d?: pulumi.Input<string>;
    /**
     * SSL forward Proxy (enabled / disabled)
     */
    sslForwardProxy?: pulumi.Input<string>;
    /**
     * SSL forward Proxy Bypass (enabled / disabled)
     */
    sslForwardProxyBypass?: pulumi.Input<string>;
    /**
     * SSL sign hash (any, sha1, sha256, sha384)
     */
    sslSignHash?: pulumi.Input<string>;
    /**
     * Strict Resume (enabled / disabled)
     */
    strictResume?: pulumi.Input<string>;
    tmOptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Unclean Shutdown (enabled / disabled)
     */
    uncleanShutdown?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LtmProfileClientSsl resource.
 */
export interface LtmProfileClientSslArgs {
    /**
     * Alert time out
     */
    alertTimeout?: pulumi.Input<string>;
    /**
     * Allow non ssl
     */
    allowNonSsl?: pulumi.Input<string>;
    /**
     * Server authentication once / always (default is once).
     */
    authenticate?: pulumi.Input<string>;
    /**
     * Client certificate chain traversal depth. Default 9.
     */
    authenticateDepth?: pulumi.Input<number>;
    /**
     * Client Fallback Certificate. Default None.
     */
    c3dClientFallbackCert?: pulumi.Input<string>;
    /**
     * Unknown OCSP Response Control. Default Drop.
     */
    c3dDropUnknownOcspStatus?: pulumi.Input<string>;
    /**
     * OCSP. Default None.
     */
    c3dOcsp?: pulumi.Input<string>;
    /**
     * (Trusted Certificate Authorities)Specifies a client CA that the system trusts. The default is `None`
     */
    caFile?: pulumi.Input<string>;
    /**
     * Cache size (sessions).
     */
    cacheSize?: pulumi.Input<number>;
    /**
     * Cache time out
     */
    cacheTimeout?: pulumi.Input<number>;
    /**
     * Name of the server certificate.
     */
    cert?: pulumi.Input<string>;
    /**
     * Cert extension includes for ssl forward proxy
     */
    certExtensionIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated
     */
    certKeyChain?: pulumi.Input<inputs.LtmProfileClientSslCertKeyChain>;
    /**
     * Life span of the certificate in days for ssl forward proxy
     */
    certLifeSpan?: pulumi.Input<number>;
    /**
     * Cert lookup by ip address and port enabled / disabled
     */
    certLookupByIpaddrPort?: pulumi.Input<string>;
    /**
     * Client certificate chain name.
     */
    chain?: pulumi.Input<string>;
    /**
     * Cipher group for the ssl client profile
     */
    cipherGroup?: pulumi.Input<string>;
    /**
     * BigIP Cipher string.
     */
    ciphers?: pulumi.Input<string>;
    /**
     * (Advertised Certificate Authorities)Specifies that the CAs that the system advertises to clients is being trusted by the
     * profile. The default is `None`
     */
    clientCertCa?: pulumi.Input<string>;
    /**
     * Certificate revocation file name
     */
    crlFile?: pulumi.Input<string>;
    /**
     * Profile name that this profile defaults from.
     */
    defaultsFrom?: pulumi.Input<string>;
    /**
     * Forward proxy bypass default action. (enabled / disabled)
     */
    forwardProxyBypassDefaultAction?: pulumi.Input<string>;
    /**
     * full path of the profile
     */
    fullPath?: pulumi.Input<string>;
    /**
     * generation
     */
    generation?: pulumi.Input<number>;
    /**
     * Generic alerts enabled / disabled.
     */
    genericAlert?: pulumi.Input<string>;
    /**
     * Handshake time out (seconds)
     */
    handshakeTimeout?: pulumi.Input<string>;
    /**
     * Inherit cert key chain
     */
    inheritCertKeychain?: pulumi.Input<string>;
    /**
     * Name of the Server SSL profile key
     */
    key?: pulumi.Input<string>;
    /**
     * ModSSL Methods enabled / disabled. Default is disabled.
     */
    modSslMethods?: pulumi.Input<string>;
    /**
     * ModSSL Methods enabled / disabled. Default is disabled.
     */
    mode?: pulumi.Input<string>;
    /**
     * Name of the Ssl Profile
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies whether the system uses OCSP stapling.
     */
    ocspStapling?: pulumi.Input<string>;
    /**
     * name of partition
     */
    partition?: pulumi.Input<string>;
    /**
     * Client Certificate Constrained Delegation CA passphrase
     */
    passphrase?: pulumi.Input<string>;
    /**
     * Peer Cert Mode
     */
    peerCertMode?: pulumi.Input<string>;
    /**
     * Proxy CA Cert
     */
    proxyCaCert?: pulumi.Input<string>;
    /**
     * Proxy CA Key
     */
    proxyCaKey?: pulumi.Input<string>;
    /**
     * Proxy CA Passphrase
     */
    proxyCaPassphrase?: pulumi.Input<string>;
    /**
     * Proxy SSL enabled / disabled. Default is disabled.
     */
    proxySsl?: pulumi.Input<string>;
    /**
     * Proxy SSL passthrough enabled / disabled. Default is disabled.
     */
    proxySslPassthrough?: pulumi.Input<string>;
    /**
     * Renogotiate Period (seconds)
     */
    renegotiatePeriod?: pulumi.Input<string>;
    /**
     * Renogotiate Size
     */
    renegotiateSize?: pulumi.Input<string>;
    /**
     * Renegotiation (enabled / disabled)
     */
    renegotiation?: pulumi.Input<string>;
    /**
     * Retain certificate.
     */
    retainCertificate?: pulumi.Input<string>;
    /**
     * Secure reneogotiaton (request / require / require-strict).
     */
    secureRenegotiation?: pulumi.Input<string>;
    /**
     * Server name
     */
    serverName?: pulumi.Input<string>;
    /**
     * Session Mirroring (enabled / disabled)
     */
    sessionMirroring?: pulumi.Input<string>;
    /**
     * Session Ticket (enabled / disabled)
     */
    sessionTicket?: pulumi.Input<string>;
    /**
     * SNI Default (true / false)
     */
    sniDefault?: pulumi.Input<string>;
    /**
     * SNI Require (true / false)
     */
    sniRequire?: pulumi.Input<string>;
    /**
     * Client Certificate Constrained Delegation enabled / disabled. Default is disabled.
     */
    sslC3d?: pulumi.Input<string>;
    /**
     * SSL forward Proxy (enabled / disabled)
     */
    sslForwardProxy?: pulumi.Input<string>;
    /**
     * SSL forward Proxy Bypass (enabled / disabled)
     */
    sslForwardProxyBypass?: pulumi.Input<string>;
    /**
     * SSL sign hash (any, sha1, sha256, sha384)
     */
    sslSignHash?: pulumi.Input<string>;
    /**
     * Strict Resume (enabled / disabled)
     */
    strictResume?: pulumi.Input<string>;
    tmOptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Unclean Shutdown (enabled / disabled)
     */
    uncleanShutdown?: pulumi.Input<string>;
}
