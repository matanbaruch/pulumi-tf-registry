// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPrivateEndpointConfig(args: GetPrivateEndpointConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivateEndpointConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("clickhouse:index/getPrivateEndpointConfig:getPrivateEndpointConfig", {
        "cloudProvider": args.cloudProvider,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPrivateEndpointConfig.
 */
export interface GetPrivateEndpointConfigArgs {
    cloudProvider: string;
    region: string;
}

/**
 * A collection of values returned by getPrivateEndpointConfig.
 */
export interface GetPrivateEndpointConfigResult {
    readonly cloudProvider: string;
    readonly endpointServiceId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
}
export function getPrivateEndpointConfigOutput(args: GetPrivateEndpointConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrivateEndpointConfigResult> {
    return pulumi.output(args).apply((a: any) => getPrivateEndpointConfig(a, opts))
}

/**
 * A collection of arguments for invoking getPrivateEndpointConfig.
 */
export interface GetPrivateEndpointConfigOutputArgs {
    cloudProvider: pulumi.Input<string>;
    region: pulumi.Input<string>;
}
