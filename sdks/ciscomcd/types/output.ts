// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AddressObjectTagList {
    resourceType?: string;
    tagKey: string;
    tagValue?: string;
}

export interface CloudAccountInventoryMonitoring {
    refreshInterval?: number;
    regions: string[];
}

export interface GatewayGatewayGwlbEndpoint {
    availabilityZone: string;
    endpointId: string;
    networkInterfaceId: string;
    subnetId: string;
}

export interface GatewayGatewayLbIntegration {
    awsgaEndpointGroupArn?: string;
    awsgaResourceArn?: string;
    awsgaResourceFqdn?: string;
    awsgaResourceName?: string;
    gatewayEndpoint: string;
    name: string;
    type: string;
}

export interface GatewayInstanceDetail {
    availabilityZone?: string;
    datapathPrivateIp: string;
    datapathPublicIp: string;
    datapathSubnet: string;
    instanceId: string;
    mgmtPrivateIp: string;
    mgmtPublicIp: string;
    mgmtSubnet: string;
    privateSubnet?: string;
}

export interface GatewaySetting {
    name: string;
    value: string;
}

export interface GetGatewayGatewayGwlbEndpoint {
    availabilityZone: string;
    endpointId: string;
    networkInterfaceId: string;
    subnetId: string;
}

export interface PolicyRulesRule {
    action: string;
    antiMalwareProfile?: number;
    antiVirusProfile?: number;
    description?: string;
    destination?: number;
    dlpProfile?: number;
    fqdnFilterProfile?: number;
    fqdnMatchProfile?: number;
    maliciousIpProfile?: number;
    maliciousSrcProfile?: number;
    name: string;
    networkIntrusionProfile?: number;
    packetCaptureEnabled?: boolean;
    priority: number;
    ruleId: number;
    sendDenyReset?: boolean;
    service: number;
    source?: number;
    state?: string;
    type: string;
    urlFilter?: number;
    webProtectionProfile?: number;
}

export interface ProfileApplicationThreatEventSuppressor {
    ruleIds: number[];
    sourceIps: string[];
}

export interface ProfileApplicationThreatProfileEventFilter {
    numberOfEvents: number;
    time?: number;
    type?: string;
}

export interface ProfileApplicationThreatRuleEventFilter {
    numberOfEvents: number;
    ruleIds: number[];
    time?: number;
    type?: string;
}

export interface ProfileDecryptionCipherSuiteAndGroup {
    cipherSuite: string;
    cipherSuiteGroup: string;
}

export interface ProfileDlpDlpFilterList {
    action: string;
    count: number;
    description?: string;
    orderId: number;
    patterns?: string[];
    staticPatterns?: string[];
}

export interface ProfileFqdnDefaultFqdnFilter {
    certValidation?: string;
    decryptionException?: boolean;
    fqdn: string;
    policy: string;
}

export interface ProfileFqdnFqdnFilterList {
    certValidation?: string;
    decryptionException?: boolean;
    fqdn?: string;
    fqdnLists?: string[];
    policy?: string;
    priority: number;
    vendorCategoryLists?: outputs.ProfileFqdnFqdnFilterListVendorCategoryList[];
}

export interface ProfileFqdnFqdnFilterListVendorCategoryList {
    categories: string[];
    vendor?: string;
}

export interface ProfileFqdnUncategorizedFqdnFilter {
    certValidation?: string;
    decryptionException?: boolean;
    policy?: string;
}

export interface ProfileL7dosRequestLimit {
    burstSize?: number;
    orderId: number;
    rateLimitedMethods: string[];
    requestsRateBlock: number;
    targetUri: string;
}

export interface ProfileNetworkIntrusionCategory {
    action?: string;
    name: string;
}

export interface ProfileNetworkIntrusionClass {
    action?: string;
    name: string;
}

export interface ProfileNetworkIntrusionEventSuppressor {
    action?: string;
    gid?: number;
    ruleIds: number[];
    sourceIps: string[];
}

export interface ProfileNetworkIntrusionProfileEventFilter {
    numberOfEvents: number;
    time?: number;
    type?: string;
}

export interface ProfileNetworkIntrusionRuleEventFilter {
    numberOfEvents: number;
    ruleIds: number[];
    time?: number;
    type?: string;
}

export interface ProfileUrlfilterDefaultUrlFilter {
    policy?: string;
    returnStatus?: number;
}

export interface ProfileUrlfilterUncategorizedUrlFilter {
    policy?: string;
    returnStatus?: number;
}

export interface ProfileUrlfilterUrlFilterList {
    filterMethods?: string[];
    policy: string;
    priority: number;
    returnStatus?: number;
    urlLists?: string[];
    vendorCategoryLists?: outputs.ProfileUrlfilterUrlFilterListVendorCategoryList[];
}

export interface ProfileUrlfilterUrlFilterListVendorCategoryList {
    categories: string[];
    vendor?: string;
}

export interface ServiceObjectPort {
    backendPorts?: string;
    destinationPorts: string;
}

