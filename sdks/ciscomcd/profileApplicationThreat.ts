// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ProfileApplicationThreat extends pulumi.CustomResource {
    /**
     * Get an existing ProfileApplicationThreat resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProfileApplicationThreatState, opts?: pulumi.CustomResourceOptions): ProfileApplicationThreat {
        return new ProfileApplicationThreat(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ciscomcd:index/profileApplicationThreat:ProfileApplicationThreat';

    /**
     * Returns true if the given object is an instance of ProfileApplicationThreat.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProfileApplicationThreat {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProfileApplicationThreat.__pulumiType;
    }

    public readonly action!: pulumi.Output<string | undefined>;
    public readonly advancedApplicationProfiles!: pulumi.Output<string[] | undefined>;
    public readonly apiLogging!: pulumi.Output<boolean | undefined>;
    public readonly autoUpdateCrs!: pulumi.Output<boolean | undefined>;
    public readonly autoUpdateCustom!: pulumi.Output<boolean | undefined>;
    public readonly autoUpdateTrustwave!: pulumi.Output<boolean | undefined>;
    public readonly crsRulesetVersion!: pulumi.Output<string | undefined>;
    public readonly customRulesetVersion!: pulumi.Output<string | undefined>;
    public readonly delayByDaysCrs!: pulumi.Output<number | undefined>;
    public readonly delayByDaysCustom!: pulumi.Output<number | undefined>;
    public readonly delayByDaysTrustwave!: pulumi.Output<number | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly disableCustomRuleset!: pulumi.Output<boolean | undefined>;
    public readonly disableTrustwaveRuleset!: pulumi.Output<boolean | undefined>;
    public readonly eventSuppressors!: pulumi.Output<outputs.ProfileApplicationThreatEventSuppressor[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly paranoiaLevel!: pulumi.Output<number>;
    public readonly pcap!: pulumi.Output<boolean | undefined>;
    public readonly profileEventFilter!: pulumi.Output<outputs.ProfileApplicationThreatProfileEventFilter | undefined>;
    public /*out*/ readonly profileId!: pulumi.Output<number>;
    public readonly requestAnomaly!: pulumi.Output<number | undefined>;
    public readonly requestInspectionProfiles!: pulumi.Output<string[] | undefined>;
    public readonly responseAnomaly!: pulumi.Output<number | undefined>;
    public readonly responseInspectionProfiles!: pulumi.Output<string[] | undefined>;
    public readonly ruleEventFilters!: pulumi.Output<outputs.ProfileApplicationThreatRuleEventFilter[] | undefined>;
    public readonly trustwaveRulesetVersion!: pulumi.Output<string | undefined>;

    /**
     * Create a ProfileApplicationThreat resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProfileApplicationThreatArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProfileApplicationThreatArgs | ProfileApplicationThreatState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProfileApplicationThreatState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["advancedApplicationProfiles"] = state ? state.advancedApplicationProfiles : undefined;
            resourceInputs["apiLogging"] = state ? state.apiLogging : undefined;
            resourceInputs["autoUpdateCrs"] = state ? state.autoUpdateCrs : undefined;
            resourceInputs["autoUpdateCustom"] = state ? state.autoUpdateCustom : undefined;
            resourceInputs["autoUpdateTrustwave"] = state ? state.autoUpdateTrustwave : undefined;
            resourceInputs["crsRulesetVersion"] = state ? state.crsRulesetVersion : undefined;
            resourceInputs["customRulesetVersion"] = state ? state.customRulesetVersion : undefined;
            resourceInputs["delayByDaysCrs"] = state ? state.delayByDaysCrs : undefined;
            resourceInputs["delayByDaysCustom"] = state ? state.delayByDaysCustom : undefined;
            resourceInputs["delayByDaysTrustwave"] = state ? state.delayByDaysTrustwave : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disableCustomRuleset"] = state ? state.disableCustomRuleset : undefined;
            resourceInputs["disableTrustwaveRuleset"] = state ? state.disableTrustwaveRuleset : undefined;
            resourceInputs["eventSuppressors"] = state ? state.eventSuppressors : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["paranoiaLevel"] = state ? state.paranoiaLevel : undefined;
            resourceInputs["pcap"] = state ? state.pcap : undefined;
            resourceInputs["profileEventFilter"] = state ? state.profileEventFilter : undefined;
            resourceInputs["profileId"] = state ? state.profileId : undefined;
            resourceInputs["requestAnomaly"] = state ? state.requestAnomaly : undefined;
            resourceInputs["requestInspectionProfiles"] = state ? state.requestInspectionProfiles : undefined;
            resourceInputs["responseAnomaly"] = state ? state.responseAnomaly : undefined;
            resourceInputs["responseInspectionProfiles"] = state ? state.responseInspectionProfiles : undefined;
            resourceInputs["ruleEventFilters"] = state ? state.ruleEventFilters : undefined;
            resourceInputs["trustwaveRulesetVersion"] = state ? state.trustwaveRulesetVersion : undefined;
        } else {
            const args = argsOrState as ProfileApplicationThreatArgs | undefined;
            if ((!args || args.paranoiaLevel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paranoiaLevel'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["advancedApplicationProfiles"] = args ? args.advancedApplicationProfiles : undefined;
            resourceInputs["apiLogging"] = args ? args.apiLogging : undefined;
            resourceInputs["autoUpdateCrs"] = args ? args.autoUpdateCrs : undefined;
            resourceInputs["autoUpdateCustom"] = args ? args.autoUpdateCustom : undefined;
            resourceInputs["autoUpdateTrustwave"] = args ? args.autoUpdateTrustwave : undefined;
            resourceInputs["crsRulesetVersion"] = args ? args.crsRulesetVersion : undefined;
            resourceInputs["customRulesetVersion"] = args ? args.customRulesetVersion : undefined;
            resourceInputs["delayByDaysCrs"] = args ? args.delayByDaysCrs : undefined;
            resourceInputs["delayByDaysCustom"] = args ? args.delayByDaysCustom : undefined;
            resourceInputs["delayByDaysTrustwave"] = args ? args.delayByDaysTrustwave : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disableCustomRuleset"] = args ? args.disableCustomRuleset : undefined;
            resourceInputs["disableTrustwaveRuleset"] = args ? args.disableTrustwaveRuleset : undefined;
            resourceInputs["eventSuppressors"] = args ? args.eventSuppressors : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["paranoiaLevel"] = args ? args.paranoiaLevel : undefined;
            resourceInputs["pcap"] = args ? args.pcap : undefined;
            resourceInputs["profileEventFilter"] = args ? args.profileEventFilter : undefined;
            resourceInputs["requestAnomaly"] = args ? args.requestAnomaly : undefined;
            resourceInputs["requestInspectionProfiles"] = args ? args.requestInspectionProfiles : undefined;
            resourceInputs["responseAnomaly"] = args ? args.responseAnomaly : undefined;
            resourceInputs["responseInspectionProfiles"] = args ? args.responseInspectionProfiles : undefined;
            resourceInputs["ruleEventFilters"] = args ? args.ruleEventFilters : undefined;
            resourceInputs["trustwaveRulesetVersion"] = args ? args.trustwaveRulesetVersion : undefined;
            resourceInputs["profileId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProfileApplicationThreat.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProfileApplicationThreat resources.
 */
export interface ProfileApplicationThreatState {
    action?: pulumi.Input<string>;
    advancedApplicationProfiles?: pulumi.Input<pulumi.Input<string>[]>;
    apiLogging?: pulumi.Input<boolean>;
    autoUpdateCrs?: pulumi.Input<boolean>;
    autoUpdateCustom?: pulumi.Input<boolean>;
    autoUpdateTrustwave?: pulumi.Input<boolean>;
    crsRulesetVersion?: pulumi.Input<string>;
    customRulesetVersion?: pulumi.Input<string>;
    delayByDaysCrs?: pulumi.Input<number>;
    delayByDaysCustom?: pulumi.Input<number>;
    delayByDaysTrustwave?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    disableCustomRuleset?: pulumi.Input<boolean>;
    disableTrustwaveRuleset?: pulumi.Input<boolean>;
    eventSuppressors?: pulumi.Input<pulumi.Input<inputs.ProfileApplicationThreatEventSuppressor>[]>;
    name?: pulumi.Input<string>;
    paranoiaLevel?: pulumi.Input<number>;
    pcap?: pulumi.Input<boolean>;
    profileEventFilter?: pulumi.Input<inputs.ProfileApplicationThreatProfileEventFilter>;
    profileId?: pulumi.Input<number>;
    requestAnomaly?: pulumi.Input<number>;
    requestInspectionProfiles?: pulumi.Input<pulumi.Input<string>[]>;
    responseAnomaly?: pulumi.Input<number>;
    responseInspectionProfiles?: pulumi.Input<pulumi.Input<string>[]>;
    ruleEventFilters?: pulumi.Input<pulumi.Input<inputs.ProfileApplicationThreatRuleEventFilter>[]>;
    trustwaveRulesetVersion?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProfileApplicationThreat resource.
 */
export interface ProfileApplicationThreatArgs {
    action?: pulumi.Input<string>;
    advancedApplicationProfiles?: pulumi.Input<pulumi.Input<string>[]>;
    apiLogging?: pulumi.Input<boolean>;
    autoUpdateCrs?: pulumi.Input<boolean>;
    autoUpdateCustom?: pulumi.Input<boolean>;
    autoUpdateTrustwave?: pulumi.Input<boolean>;
    crsRulesetVersion?: pulumi.Input<string>;
    customRulesetVersion?: pulumi.Input<string>;
    delayByDaysCrs?: pulumi.Input<number>;
    delayByDaysCustom?: pulumi.Input<number>;
    delayByDaysTrustwave?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    disableCustomRuleset?: pulumi.Input<boolean>;
    disableTrustwaveRuleset?: pulumi.Input<boolean>;
    eventSuppressors?: pulumi.Input<pulumi.Input<inputs.ProfileApplicationThreatEventSuppressor>[]>;
    name?: pulumi.Input<string>;
    paranoiaLevel: pulumi.Input<number>;
    pcap?: pulumi.Input<boolean>;
    profileEventFilter?: pulumi.Input<inputs.ProfileApplicationThreatProfileEventFilter>;
    requestAnomaly?: pulumi.Input<number>;
    requestInspectionProfiles?: pulumi.Input<pulumi.Input<string>[]>;
    responseAnomaly?: pulumi.Input<number>;
    responseInspectionProfiles?: pulumi.Input<pulumi.Input<string>[]>;
    ruleEventFilters?: pulumi.Input<pulumi.Input<inputs.ProfileApplicationThreatRuleEventFilter>[]>;
    trustwaveRulesetVersion?: pulumi.Input<string>;
}
