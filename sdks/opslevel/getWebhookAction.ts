// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getWebhookAction(args: GetWebhookActionArgs, opts?: pulumi.InvokeOptions): Promise<GetWebhookActionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opslevel:index/getWebhookAction:getWebhookAction", {
        "identifier": args.identifier,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWebhookAction.
 */
export interface GetWebhookActionArgs {
    identifier: string;
}

/**
 * A collection of values returned by getWebhookAction.
 */
export interface GetWebhookActionResult {
    readonly aliases: string[];
    readonly description: string;
    readonly headers: {[key: string]: string};
    readonly id: string;
    readonly identifier: string;
    readonly method: string;
    readonly name: string;
    readonly payload: string;
    readonly url: string;
}
export function getWebhookActionOutput(args: GetWebhookActionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWebhookActionResult> {
    return pulumi.output(args).apply((a: any) => getWebhookAction(a, opts))
}

/**
 * A collection of arguments for invoking getWebhookAction.
 */
export interface GetWebhookActionOutputArgs {
    identifier: pulumi.Input<string>;
}
