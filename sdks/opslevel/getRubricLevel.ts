// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRubricLevel(args?: GetRubricLevelArgs, opts?: pulumi.InvokeOptions): Promise<GetRubricLevelResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opslevel:index/getRubricLevel:getRubricLevel", {
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRubricLevel.
 */
export interface GetRubricLevelArgs {
    filter?: inputs.GetRubricLevelFilter;
}

/**
 * A collection of values returned by getRubricLevel.
 */
export interface GetRubricLevelResult {
    readonly alias: string;
    readonly filter?: outputs.GetRubricLevelFilter;
    readonly id: string;
    readonly index: number;
    readonly name: string;
}
export function getRubricLevelOutput(args?: GetRubricLevelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRubricLevelResult> {
    return pulumi.output(args).apply((a: any) => getRubricLevel(a, opts))
}

/**
 * A collection of arguments for invoking getRubricLevel.
 */
export interface GetRubricLevelOutputArgs {
    filter?: pulumi.Input<inputs.GetRubricLevelFilterArgs>;
}
