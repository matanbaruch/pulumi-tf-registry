// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IntegrationGoogleCloud extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationGoogleCloud resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationGoogleCloudState, opts?: pulumi.CustomResourceOptions): IntegrationGoogleCloud {
        return new IntegrationGoogleCloud(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'opslevel:index/integrationGoogleCloud:IntegrationGoogleCloud';

    /**
     * Returns true if the given object is an instance of IntegrationGoogleCloud.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationGoogleCloud {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationGoogleCloud.__pulumiType;
    }

    /**
     * All of the aliases attached to the integration.
     */
    public /*out*/ readonly aliases!: pulumi.Output<string[]>;
    /**
     * The service account email OpsLevel uses to access the Google Cloud account.
     */
    public readonly clientEmail!: pulumi.Output<string>;
    /**
     * The time this integration was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The time that this integration was successfully installed, if null, this indicates the integration was not completely
     * installed.
     */
    public /*out*/ readonly installedAt!: pulumi.Output<string>;
    /**
     * The name of the integration.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An Array of tag keys used to associate ownership from an integration. Max 5 (default = ["owner"])
     */
    public readonly ownershipTagKeys!: pulumi.Output<string[]>;
    /**
     * Allow tags imported from Google Cloud to override ownership set in OpsLevel directly. (default = true)
     */
    public readonly ownershipTagOverrides!: pulumi.Output<boolean>;
    /**
     * The private key for the service account that OpsLevel uses to access the Google Cloud account.
     */
    public readonly privateKey!: pulumi.Output<string>;
    /**
     * A list of the Google Cloud projects that were imported by the integration.
     */
    public /*out*/ readonly projects!: pulumi.Output<outputs.IntegrationGoogleCloudProject[]>;

    /**
     * Create a IntegrationGoogleCloud resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationGoogleCloudArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationGoogleCloudArgs | IntegrationGoogleCloudState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationGoogleCloudState | undefined;
            resourceInputs["aliases"] = state ? state.aliases : undefined;
            resourceInputs["clientEmail"] = state ? state.clientEmail : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["installedAt"] = state ? state.installedAt : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ownershipTagKeys"] = state ? state.ownershipTagKeys : undefined;
            resourceInputs["ownershipTagOverrides"] = state ? state.ownershipTagOverrides : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["projects"] = state ? state.projects : undefined;
        } else {
            const args = argsOrState as IntegrationGoogleCloudArgs | undefined;
            if ((!args || args.clientEmail === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientEmail'");
            }
            if ((!args || args.privateKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateKey'");
            }
            resourceInputs["clientEmail"] = args ? args.clientEmail : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ownershipTagKeys"] = args ? args.ownershipTagKeys : undefined;
            resourceInputs["ownershipTagOverrides"] = args ? args.ownershipTagOverrides : undefined;
            resourceInputs["privateKey"] = args?.privateKey ? pulumi.secret(args.privateKey) : undefined;
            resourceInputs["aliases"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["installedAt"] = undefined /*out*/;
            resourceInputs["projects"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["privateKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(IntegrationGoogleCloud.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IntegrationGoogleCloud resources.
 */
export interface IntegrationGoogleCloudState {
    /**
     * All of the aliases attached to the integration.
     */
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The service account email OpsLevel uses to access the Google Cloud account.
     */
    clientEmail?: pulumi.Input<string>;
    /**
     * The time this integration was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The time that this integration was successfully installed, if null, this indicates the integration was not completely
     * installed.
     */
    installedAt?: pulumi.Input<string>;
    /**
     * The name of the integration.
     */
    name?: pulumi.Input<string>;
    /**
     * An Array of tag keys used to associate ownership from an integration. Max 5 (default = ["owner"])
     */
    ownershipTagKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow tags imported from Google Cloud to override ownership set in OpsLevel directly. (default = true)
     */
    ownershipTagOverrides?: pulumi.Input<boolean>;
    /**
     * The private key for the service account that OpsLevel uses to access the Google Cloud account.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * A list of the Google Cloud projects that were imported by the integration.
     */
    projects?: pulumi.Input<pulumi.Input<inputs.IntegrationGoogleCloudProject>[]>;
}

/**
 * The set of arguments for constructing a IntegrationGoogleCloud resource.
 */
export interface IntegrationGoogleCloudArgs {
    /**
     * The service account email OpsLevel uses to access the Google Cloud account.
     */
    clientEmail: pulumi.Input<string>;
    /**
     * The name of the integration.
     */
    name?: pulumi.Input<string>;
    /**
     * An Array of tag keys used to associate ownership from an integration. Max 5 (default = ["owner"])
     */
    ownershipTagKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow tags imported from Google Cloud to override ownership set in OpsLevel directly. (default = true)
     */
    ownershipTagOverrides?: pulumi.Input<boolean>;
    /**
     * The private key for the service account that OpsLevel uses to access the Google Cloud account.
     */
    privateKey: pulumi.Input<string>;
}
