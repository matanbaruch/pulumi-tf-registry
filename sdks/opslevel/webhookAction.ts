// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WebhookAction extends pulumi.CustomResource {
    /**
     * Get an existing WebhookAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebhookActionState, opts?: pulumi.CustomResourceOptions): WebhookAction {
        return new WebhookAction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'opslevel:index/webhookAction:WebhookAction';

    /**
     * Returns true if the given object is an instance of WebhookAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebhookAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebhookAction.__pulumiType;
    }

    /**
     * The description of the Webhook Action.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * HTTP headers to be passed along with your webhook when triggered.
     */
    public readonly headers!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The http method used to call the Webhook Action. One of `GET`, `PATCH`, `POST`, `PUT`, `DELETE`
     */
    public readonly method!: pulumi.Output<string>;
    /**
     * The name of the Webhook Action.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Template that can be used to generate a webhook payload.
     */
    public readonly payload!: pulumi.Output<string>;
    /**
     * The URL of the Webhook Action.
     */
    public readonly url!: pulumi.Output<string>;

    /**
     * Create a WebhookAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhookActionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebhookActionArgs | WebhookActionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebhookActionState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["headers"] = state ? state.headers : undefined;
            resourceInputs["method"] = state ? state.method : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["payload"] = state ? state.payload : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as WebhookActionArgs | undefined;
            if ((!args || args.method === undefined) && !opts.urn) {
                throw new Error("Missing required property 'method'");
            }
            if ((!args || args.payload === undefined) && !opts.urn) {
                throw new Error("Missing required property 'payload'");
            }
            if ((!args || args.url === undefined) && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["headers"] = args ? args.headers : undefined;
            resourceInputs["method"] = args ? args.method : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["payload"] = args ? args.payload : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebhookAction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WebhookAction resources.
 */
export interface WebhookActionState {
    /**
     * The description of the Webhook Action.
     */
    description?: pulumi.Input<string>;
    /**
     * HTTP headers to be passed along with your webhook when triggered.
     */
    headers?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The http method used to call the Webhook Action. One of `GET`, `PATCH`, `POST`, `PUT`, `DELETE`
     */
    method?: pulumi.Input<string>;
    /**
     * The name of the Webhook Action.
     */
    name?: pulumi.Input<string>;
    /**
     * Template that can be used to generate a webhook payload.
     */
    payload?: pulumi.Input<string>;
    /**
     * The URL of the Webhook Action.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WebhookAction resource.
 */
export interface WebhookActionArgs {
    /**
     * The description of the Webhook Action.
     */
    description?: pulumi.Input<string>;
    /**
     * HTTP headers to be passed along with your webhook when triggered.
     */
    headers?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The http method used to call the Webhook Action. One of `GET`, `PATCH`, `POST`, `PUT`, `DELETE`
     */
    method: pulumi.Input<string>;
    /**
     * The name of the Webhook Action.
     */
    name?: pulumi.Input<string>;
    /**
     * Template that can be used to generate a webhook payload.
     */
    payload: pulumi.Input<string>;
    /**
     * The URL of the Webhook Action.
     */
    url: pulumi.Input<string>;
}
