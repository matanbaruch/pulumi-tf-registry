// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IntegrationAws extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationAws resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationAwsState, opts?: pulumi.CustomResourceOptions): IntegrationAws {
        return new IntegrationAws(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'opslevel:index/integrationAws:IntegrationAws';

    /**
     * Returns true if the given object is an instance of IntegrationAws.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationAws {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationAws.__pulumiType;
    }

    /**
     * The External ID defined in the trust relationship to ensure OpsLevel is the only third party assuming this role (See
     * https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html for more details).
     */
    public readonly externalId!: pulumi.Output<string>;
    /**
     * The IAM role OpsLevel uses in order to access the AWS account.
     */
    public readonly iamRole!: pulumi.Output<string>;
    /**
     * The name of the integration.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Allow tags imported from AWS to override ownership set in OpsLevel directly
     */
    public readonly ownershipTagKeys!: pulumi.Output<string[]>;
    /**
     * Allow tags imported from AWS to override ownership set in OpsLevel directly.
     */
    public readonly ownershipTagOverrides!: pulumi.Output<boolean>;

    /**
     * Create a IntegrationAws resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationAwsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationAwsArgs | IntegrationAwsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationAwsState | undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["iamRole"] = state ? state.iamRole : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ownershipTagKeys"] = state ? state.ownershipTagKeys : undefined;
            resourceInputs["ownershipTagOverrides"] = state ? state.ownershipTagOverrides : undefined;
        } else {
            const args = argsOrState as IntegrationAwsArgs | undefined;
            if ((!args || args.externalId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'externalId'");
            }
            if ((!args || args.iamRole === undefined) && !opts.urn) {
                throw new Error("Missing required property 'iamRole'");
            }
            if ((!args || args.ownershipTagOverrides === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ownershipTagOverrides'");
            }
            resourceInputs["externalId"] = args ? args.externalId : undefined;
            resourceInputs["iamRole"] = args ? args.iamRole : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ownershipTagKeys"] = args ? args.ownershipTagKeys : undefined;
            resourceInputs["ownershipTagOverrides"] = args ? args.ownershipTagOverrides : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IntegrationAws.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IntegrationAws resources.
 */
export interface IntegrationAwsState {
    /**
     * The External ID defined in the trust relationship to ensure OpsLevel is the only third party assuming this role (See
     * https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html for more details).
     */
    externalId?: pulumi.Input<string>;
    /**
     * The IAM role OpsLevel uses in order to access the AWS account.
     */
    iamRole?: pulumi.Input<string>;
    /**
     * The name of the integration.
     */
    name?: pulumi.Input<string>;
    /**
     * Allow tags imported from AWS to override ownership set in OpsLevel directly
     */
    ownershipTagKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow tags imported from AWS to override ownership set in OpsLevel directly.
     */
    ownershipTagOverrides?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a IntegrationAws resource.
 */
export interface IntegrationAwsArgs {
    /**
     * The External ID defined in the trust relationship to ensure OpsLevel is the only third party assuming this role (See
     * https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html for more details).
     */
    externalId: pulumi.Input<string>;
    /**
     * The IAM role OpsLevel uses in order to access the AWS account.
     */
    iamRole: pulumi.Input<string>;
    /**
     * The name of the integration.
     */
    name?: pulumi.Input<string>;
    /**
     * Allow tags imported from AWS to override ownership set in OpsLevel directly
     */
    ownershipTagKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow tags imported from AWS to override ownership set in OpsLevel directly.
     */
    ownershipTagOverrides: pulumi.Input<boolean>;
}
