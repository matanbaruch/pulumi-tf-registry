// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceDependencies(args: GetServiceDependenciesArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceDependenciesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opslevel:index/getServiceDependencies:getServiceDependencies", {
        "service": args.service,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceDependencies.
 */
export interface GetServiceDependenciesArgs {
    service: string;
}

/**
 * A collection of values returned by getServiceDependencies.
 */
export interface GetServiceDependenciesResult {
    readonly dependencies: outputs.GetServiceDependenciesDependency[];
    readonly dependents: outputs.GetServiceDependenciesDependent[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly service: string;
}
export function getServiceDependenciesOutput(args: GetServiceDependenciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceDependenciesResult> {
    return pulumi.output(args).apply((a: any) => getServiceDependencies(a, opts))
}

/**
 * A collection of arguments for invoking getServiceDependencies.
 */
export interface GetServiceDependenciesOutputArgs {
    service: pulumi.Input<string>;
}
