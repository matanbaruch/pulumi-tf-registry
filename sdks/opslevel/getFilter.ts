// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFilter(args?: GetFilterArgs, opts?: pulumi.InvokeOptions): Promise<GetFilterResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opslevel:index/getFilter:getFilter", {
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFilter.
 */
export interface GetFilterArgs {
    filter?: inputs.GetFilterFilter;
}

/**
 * A collection of values returned by getFilter.
 */
export interface GetFilterResult {
    readonly filter?: outputs.GetFilterFilter;
    readonly id: string;
    readonly name: string;
}
export function getFilterOutput(args?: GetFilterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFilterResult> {
    return pulumi.output(args).apply((a: any) => getFilter(a, opts))
}

/**
 * A collection of arguments for invoking getFilter.
 */
export interface GetFilterOutputArgs {
    filter?: pulumi.Input<inputs.GetFilterFilterArgs>;
}
