// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PropertyAssignment extends pulumi.CustomResource {
    /**
     * Get an existing PropertyAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PropertyAssignmentState, opts?: pulumi.CustomResourceOptions): PropertyAssignment {
        return new PropertyAssignment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'opslevel:index/propertyAssignment:PropertyAssignment';

    /**
     * Returns true if the given object is an instance of PropertyAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PropertyAssignment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PropertyAssignment.__pulumiType;
    }

    /**
     * The custom property definition's ID or alias.
     */
    public readonly definition!: pulumi.Output<string>;
    public /*out*/ readonly locked!: pulumi.Output<boolean>;
    /**
     * The ID or alias of the entity (currently only supports service) that the property has been assigned to.
     */
    public readonly owner!: pulumi.Output<string>;
    /**
     * The value of the custom property (must be a valid JSON value or null or object).
     */
    public readonly value!: pulumi.Output<string | undefined>;

    /**
     * Create a PropertyAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PropertyAssignmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PropertyAssignmentArgs | PropertyAssignmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PropertyAssignmentState | undefined;
            resourceInputs["definition"] = state ? state.definition : undefined;
            resourceInputs["locked"] = state ? state.locked : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as PropertyAssignmentArgs | undefined;
            if ((!args || args.definition === undefined) && !opts.urn) {
                throw new Error("Missing required property 'definition'");
            }
            if ((!args || args.owner === undefined) && !opts.urn) {
                throw new Error("Missing required property 'owner'");
            }
            resourceInputs["definition"] = args ? args.definition : undefined;
            resourceInputs["owner"] = args ? args.owner : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
            resourceInputs["locked"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PropertyAssignment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PropertyAssignment resources.
 */
export interface PropertyAssignmentState {
    /**
     * The custom property definition's ID or alias.
     */
    definition?: pulumi.Input<string>;
    locked?: pulumi.Input<boolean>;
    /**
     * The ID or alias of the entity (currently only supports service) that the property has been assigned to.
     */
    owner?: pulumi.Input<string>;
    /**
     * The value of the custom property (must be a valid JSON value or null or object).
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PropertyAssignment resource.
 */
export interface PropertyAssignmentArgs {
    /**
     * The custom property definition's ID or alias.
     */
    definition: pulumi.Input<string>;
    /**
     * The ID or alias of the entity (currently only supports service) that the property has been assigned to.
     */
    owner: pulumi.Input<string>;
    /**
     * The value of the custom property (must be a valid JSON value or null or object).
     */
    value?: pulumi.Input<string>;
}
