// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPropertyDefinition(args: GetPropertyDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetPropertyDefinitionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opslevel:index/getPropertyDefinition:getPropertyDefinition", {
        "identifier": args.identifier,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPropertyDefinition.
 */
export interface GetPropertyDefinitionArgs {
    identifier: string;
}

/**
 * A collection of values returned by getPropertyDefinition.
 */
export interface GetPropertyDefinitionResult {
    readonly allowedInConfigFiles: boolean;
    readonly description: string;
    readonly id: string;
    readonly identifier: string;
    readonly name: string;
    readonly propertyDisplayStatus: string;
    readonly schema: string;
}
export function getPropertyDefinitionOutput(args: GetPropertyDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPropertyDefinitionResult> {
    return pulumi.output(args).apply((a: any) => getPropertyDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getPropertyDefinition.
 */
export interface GetPropertyDefinitionOutputArgs {
    identifier: pulumi.Input<string>;
}
