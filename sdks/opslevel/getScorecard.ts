// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getScorecard(args: GetScorecardArgs, opts?: pulumi.InvokeOptions): Promise<GetScorecardResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opslevel:index/getScorecard:getScorecard", {
        "identifier": args.identifier,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getScorecard.
 */
export interface GetScorecardArgs {
    identifier: string;
}

/**
 * A collection of values returned by getScorecard.
 */
export interface GetScorecardResult {
    readonly affectsOverallServiceLevels: boolean;
    readonly aliases: string[];
    readonly categories: outputs.GetScorecardCategory[];
    readonly description: string;
    readonly filterId: string;
    readonly id: string;
    readonly identifier: string;
    readonly name: string;
    readonly ownerId: string;
    readonly passingChecks: number;
    readonly serviceCount: number;
    readonly totalChecks: number;
}
export function getScorecardOutput(args: GetScorecardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScorecardResult> {
    return pulumi.output(args).apply((a: any) => getScorecard(a, opts))
}

/**
 * A collection of arguments for invoking getScorecard.
 */
export interface GetScorecardOutputArgs {
    identifier: pulumi.Input<string>;
}
