// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInterfaceVlan(args: GetInterfaceVlanArgs, opts?: pulumi.InvokeOptions): Promise<GetInterfaceVlanResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ciscoasa:index/getInterfaceVlan:getInterfaceVlan", {
        "hardwareId": args.hardwareId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInterfaceVlan.
 */
export interface GetInterfaceVlanArgs {
    hardwareId: string;
    id?: string;
}

/**
 * A collection of values returned by getInterfaceVlan.
 */
export interface GetInterfaceVlanResult {
    readonly activeMacAddress: string;
    readonly forwardTrafficCx: boolean;
    readonly forwardTrafficSfr: boolean;
    readonly hardwareId: string;
    readonly id: string;
    readonly interfaceDesc: string;
    readonly ipAddresses: outputs.GetInterfaceVlanIpAddress[];
    readonly ipv6Infos: outputs.GetInterfaceVlanIpv6Info[];
    readonly managementOnly: boolean;
    readonly mtu: number;
    readonly name: string;
    readonly securityLevel: number;
    readonly shutdown: boolean;
    readonly standByMacAddress: string;
    readonly vlanId: number;
}
export function getInterfaceVlanOutput(args: GetInterfaceVlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInterfaceVlanResult> {
    return pulumi.output(args).apply((a: any) => getInterfaceVlan(a, opts))
}

/**
 * A collection of arguments for invoking getInterfaceVlan.
 */
export interface GetInterfaceVlanOutputArgs {
    hardwareId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
