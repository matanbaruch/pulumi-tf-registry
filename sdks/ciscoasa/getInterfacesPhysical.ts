// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInterfacesPhysical(args?: GetInterfacesPhysicalArgs, opts?: pulumi.InvokeOptions): Promise<GetInterfacesPhysicalResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ciscoasa:index/getInterfacesPhysical:getInterfacesPhysical", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInterfacesPhysical.
 */
export interface GetInterfacesPhysicalArgs {
    id?: string;
}

/**
 * A collection of values returned by getInterfacesPhysical.
 */
export interface GetInterfacesPhysicalResult {
    readonly id: string;
    readonly interfacesPhysicals: outputs.GetInterfacesPhysicalInterfacesPhysical[];
}
export function getInterfacesPhysicalOutput(args?: GetInterfacesPhysicalOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInterfacesPhysicalResult> {
    return pulumi.output(args).apply((a: any) => getInterfacesPhysical(a, opts))
}

/**
 * A collection of arguments for invoking getInterfacesPhysical.
 */
export interface GetInterfacesPhysicalOutputArgs {
    id?: pulumi.Input<string>;
}
