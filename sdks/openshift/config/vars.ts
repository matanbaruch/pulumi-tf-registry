// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("openshift");

/**
 * PEM-encoded client certificate for TLS authentication.
 */
export declare const clientCertificate: string | undefined;
Object.defineProperty(exports, "clientCertificate", {
    get() {
        return __config.get("clientCertificate");
    },
    enumerable: true,
});

/**
 * PEM-encoded client certificate key for TLS authentication.
 */
export declare const clientKey: string | undefined;
Object.defineProperty(exports, "clientKey", {
    get() {
        return __config.get("clientKey");
    },
    enumerable: true,
});

/**
 * PEM-encoded root certificates bundle for TLS authentication.
 */
export declare const clusterCaCertificate: string | undefined;
Object.defineProperty(exports, "clusterCaCertificate", {
    get() {
        return __config.get("clusterCaCertificate");
    },
    enumerable: true,
});

export declare const configContext: string | undefined;
Object.defineProperty(exports, "configContext", {
    get() {
        return __config.get("configContext");
    },
    enumerable: true,
});

export declare const configContextAuthInfo: string | undefined;
Object.defineProperty(exports, "configContextAuthInfo", {
    get() {
        return __config.get("configContextAuthInfo");
    },
    enumerable: true,
});

export declare const configContextCluster: string | undefined;
Object.defineProperty(exports, "configContextCluster", {
    get() {
        return __config.get("configContextCluster");
    },
    enumerable: true,
});

/**
 * Path to the kube config file, defaults to ~/.kube/config
 */
export declare const configPath: string | undefined;
Object.defineProperty(exports, "configPath", {
    get() {
        return __config.get("configPath");
    },
    enumerable: true,
});

export declare const exec: outputs.config.Exec | undefined;
Object.defineProperty(exports, "exec", {
    get() {
        return __config.getObject<outputs.config.Exec>("exec");
    },
    enumerable: true,
});

/**
 * The hostname (in form of URI) of Kubernetes master.
 */
export declare const host: string | undefined;
Object.defineProperty(exports, "host", {
    get() {
        return __config.get("host");
    },
    enumerable: true,
});

/**
 * Whether server should be accessed without verifying the TLS certificate.
 */
export declare const insecure: boolean | undefined;
Object.defineProperty(exports, "insecure", {
    get() {
        return __config.getObject<boolean>("insecure");
    },
    enumerable: true,
});

/**
 * Load local kubeconfig.
 */
export declare const loadConfigFile: boolean | undefined;
Object.defineProperty(exports, "loadConfigFile", {
    get() {
        return __config.getObject<boolean>("loadConfigFile");
    },
    enumerable: true,
});

/**
 * The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
 */
export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

/**
 * Token to authenticate an service account
 */
export declare const token: string | undefined;
Object.defineProperty(exports, "token", {
    get() {
        return __config.get("token");
    },
    enumerable: true,
});

/**
 * The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
 */
export declare const username: string | undefined;
Object.defineProperty(exports, "username", {
    get() {
        return __config.get("username");
    },
    enumerable: true,
});

