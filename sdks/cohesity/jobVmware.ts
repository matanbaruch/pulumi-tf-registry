// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class JobVmware extends pulumi.CustomResource {
    /**
     * Get an existing JobVmware resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: JobVmwareState, opts?: pulumi.CustomResourceOptions): JobVmware {
        return new JobVmware(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cohesity:index/jobVmware:JobVmware';

    /**
     * Returns true if the given object is an instance of JobVmware.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is JobVmware {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JobVmware.__pulumiType;
    }

    /**
     * Specifies if snapshots generated by the Protection Job should also be deleted when the Job is deleted.
     */
    public readonly deleteSnapshots!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the list of vm's from the protection source that should not be protected and are excluded from being backed up
     * by the protection job
     */
    public readonly excludes!: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the number of minutes that a Job Run of a Full (no CBT) backup schedule is expected to complete, which is
     * known as a Service-Level Agreement (SLA).A SLA violation is reported when the run time of a Job Run exceeds the SLA time
     * period specified for this backup schedule.
     */
    public readonly fullSla!: pulumi.Output<number | undefined>;
    /**
     * Specifies the list of vm's from the protection source to be protected by this protection job
     */
    public readonly includes!: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the number of minutes that a Job Run of a CBT-based backup schedule is expected to complete, which is known as
     * a Service-Level Agreement (SLA). A SLA violation is reported when the run time of a Job Run exceeds the SLA time period
     * specified for this backup schedule.
     */
    public readonly incrementalSla!: pulumi.Output<number | undefined>;
    /**
     * Specifies the name of the Protection Job
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the protection policy
     */
    public readonly policy!: pulumi.Output<string>;
    /**
     * Specifies the priority of execution for a Protection Job
     */
    public readonly priority!: pulumi.Output<string | undefined>;
    /**
     * Specifies the Protection source
     */
    public readonly protectionSource!: pulumi.Output<string>;
    /**
     * Specifies the QoS policy type to use for this Protection Job. 'BackupHDD' indicates the Cohesity Cluster writes data
     * directly to the HDD tier for this Protection Job. This is the recommended setting. 'BackupSSD' indicates the Cohesity
     * Cluster writes data directly to the SSD tier for this Protection Job. Only specify this policy if you need fast ingest
     * speed for a small number of Protection Jobs
     */
    public readonly qosType!: pulumi.Output<string | undefined>;
    /**
     * Specifies the storage domain where this job writes data
     */
    public readonly storageDomain!: pulumi.Output<string>;
    /**
     * Specifies the timezone in the format: Area/Location
     */
    public readonly timezone!: pulumi.Output<string | undefined>;

    /**
     * Create a JobVmware resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobVmwareArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: JobVmwareArgs | JobVmwareState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as JobVmwareState | undefined;
            resourceInputs["deleteSnapshots"] = state ? state.deleteSnapshots : undefined;
            resourceInputs["excludes"] = state ? state.excludes : undefined;
            resourceInputs["fullSla"] = state ? state.fullSla : undefined;
            resourceInputs["includes"] = state ? state.includes : undefined;
            resourceInputs["incrementalSla"] = state ? state.incrementalSla : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["protectionSource"] = state ? state.protectionSource : undefined;
            resourceInputs["qosType"] = state ? state.qosType : undefined;
            resourceInputs["storageDomain"] = state ? state.storageDomain : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
        } else {
            const args = argsOrState as JobVmwareArgs | undefined;
            if ((!args || args.policy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policy'");
            }
            if ((!args || args.protectionSource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protectionSource'");
            }
            if ((!args || args.storageDomain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageDomain'");
            }
            resourceInputs["deleteSnapshots"] = args ? args.deleteSnapshots : undefined;
            resourceInputs["excludes"] = args ? args.excludes : undefined;
            resourceInputs["fullSla"] = args ? args.fullSla : undefined;
            resourceInputs["includes"] = args ? args.includes : undefined;
            resourceInputs["incrementalSla"] = args ? args.incrementalSla : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["protectionSource"] = args ? args.protectionSource : undefined;
            resourceInputs["qosType"] = args ? args.qosType : undefined;
            resourceInputs["storageDomain"] = args ? args.storageDomain : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(JobVmware.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering JobVmware resources.
 */
export interface JobVmwareState {
    /**
     * Specifies if snapshots generated by the Protection Job should also be deleted when the Job is deleted.
     */
    deleteSnapshots?: pulumi.Input<boolean>;
    /**
     * Specifies the list of vm's from the protection source that should not be protected and are excluded from being backed up
     * by the protection job
     */
    excludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the number of minutes that a Job Run of a Full (no CBT) backup schedule is expected to complete, which is
     * known as a Service-Level Agreement (SLA).A SLA violation is reported when the run time of a Job Run exceeds the SLA time
     * period specified for this backup schedule.
     */
    fullSla?: pulumi.Input<number>;
    /**
     * Specifies the list of vm's from the protection source to be protected by this protection job
     */
    includes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the number of minutes that a Job Run of a CBT-based backup schedule is expected to complete, which is known as
     * a Service-Level Agreement (SLA). A SLA violation is reported when the run time of a Job Run exceeds the SLA time period
     * specified for this backup schedule.
     */
    incrementalSla?: pulumi.Input<number>;
    /**
     * Specifies the name of the Protection Job
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the protection policy
     */
    policy?: pulumi.Input<string>;
    /**
     * Specifies the priority of execution for a Protection Job
     */
    priority?: pulumi.Input<string>;
    /**
     * Specifies the Protection source
     */
    protectionSource?: pulumi.Input<string>;
    /**
     * Specifies the QoS policy type to use for this Protection Job. 'BackupHDD' indicates the Cohesity Cluster writes data
     * directly to the HDD tier for this Protection Job. This is the recommended setting. 'BackupSSD' indicates the Cohesity
     * Cluster writes data directly to the SSD tier for this Protection Job. Only specify this policy if you need fast ingest
     * speed for a small number of Protection Jobs
     */
    qosType?: pulumi.Input<string>;
    /**
     * Specifies the storage domain where this job writes data
     */
    storageDomain?: pulumi.Input<string>;
    /**
     * Specifies the timezone in the format: Area/Location
     */
    timezone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a JobVmware resource.
 */
export interface JobVmwareArgs {
    /**
     * Specifies if snapshots generated by the Protection Job should also be deleted when the Job is deleted.
     */
    deleteSnapshots?: pulumi.Input<boolean>;
    /**
     * Specifies the list of vm's from the protection source that should not be protected and are excluded from being backed up
     * by the protection job
     */
    excludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the number of minutes that a Job Run of a Full (no CBT) backup schedule is expected to complete, which is
     * known as a Service-Level Agreement (SLA).A SLA violation is reported when the run time of a Job Run exceeds the SLA time
     * period specified for this backup schedule.
     */
    fullSla?: pulumi.Input<number>;
    /**
     * Specifies the list of vm's from the protection source to be protected by this protection job
     */
    includes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the number of minutes that a Job Run of a CBT-based backup schedule is expected to complete, which is known as
     * a Service-Level Agreement (SLA). A SLA violation is reported when the run time of a Job Run exceeds the SLA time period
     * specified for this backup schedule.
     */
    incrementalSla?: pulumi.Input<number>;
    /**
     * Specifies the name of the Protection Job
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the protection policy
     */
    policy: pulumi.Input<string>;
    /**
     * Specifies the priority of execution for a Protection Job
     */
    priority?: pulumi.Input<string>;
    /**
     * Specifies the Protection source
     */
    protectionSource: pulumi.Input<string>;
    /**
     * Specifies the QoS policy type to use for this Protection Job. 'BackupHDD' indicates the Cohesity Cluster writes data
     * directly to the HDD tier for this Protection Job. This is the recommended setting. 'BackupSSD' indicates the Cohesity
     * Cluster writes data directly to the SSD tier for this Protection Job. Only specify this policy if you need fast ingest
     * speed for a small number of Protection Jobs
     */
    qosType?: pulumi.Input<string>;
    /**
     * Specifies the storage domain where this job writes data
     */
    storageDomain: pulumi.Input<string>;
    /**
     * Specifies the timezone in the format: Area/Location
     */
    timezone?: pulumi.Input<string>;
}
