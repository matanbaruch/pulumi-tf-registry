// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Source extends pulumi.CustomResource {
    /**
     * Get an existing Source resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SourceState, opts?: pulumi.CustomResourceOptions): Source {
        return new Source(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'logtail:index/source:Source';

    /**
     * Returns true if the given object is an instance of Source.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Source {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Source.__pulumiType;
    }

    /**
     * The time when this monitor group was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * This property allows you to temporarily pause data ingesting for this source (e.g., when you are reaching your plan's
     * usage quota and you want to prioritize some sources over others).
     */
    public readonly ingestingPaused!: pulumi.Output<boolean>;
    /**
     * Freeform text template for formatting Live tail output with columns wrapped in {column} brackets. Example: "PID:
     * {message_json.pid} {level} {message}"
     */
    public readonly liveTailPattern!: pulumi.Output<string>;
    /**
     * Data retention for logs in days. There might be additional charges for longer retention.
     */
    public readonly logsRetention!: pulumi.Output<number>;
    /**
     * Data retention for metrics in days. There might be additional charges for longer retention.
     */
    public readonly metricsRetention!: pulumi.Output<number>;
    /**
     * The name of this source.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The platform of this source. This value can be set only when you're creating a new source. You can't update this value
     * later. Valid values are: - `apache2` - `aws_cloudwatch` - `aws_ecs` - `aws_elb` - `aws_fargate` - `cloudflare_logpush` -
     * `cloudflare_worker` - `datadog_agent` - `docker` - `dokku` - `dotnet` - `elasticsearch` - `filebeat` - `flights` -
     * `fluentbit` - `fluentd` - `fly_io` - `haproxy` - `heroku` - `http` - `java` - `javascript` - `kubernetes` - `logstash` -
     * `minio` - `mongodb` - `mysql` - `nginx` - `open_telemetry` - `php` - `postgresql` - `prometheus` - `python` - `rabbitmq`
     * - `redis` - `render` - `rsyslog` - `ruby` - `syslog-ng` - `traefik` - `ubuntu` - `vector` - `vercel_integration`
     */
    public readonly platform!: pulumi.Output<string>;
    /**
     * The table name generated for this source.
     */
    public /*out*/ readonly tableName!: pulumi.Output<string>;
    /**
     * Used to specify the team the resource should be created in when using global tokens.
     */
    public readonly teamName!: pulumi.Output<string | undefined>;
    /**
     * The token of this source. This token is used to identify and route the data you will send to Logtail.
     */
    public /*out*/ readonly token!: pulumi.Output<string>;
    /**
     * The time when this monitor group was updated.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a Source resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SourceArgs | SourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SourceState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["ingestingPaused"] = state ? state.ingestingPaused : undefined;
            resourceInputs["liveTailPattern"] = state ? state.liveTailPattern : undefined;
            resourceInputs["logsRetention"] = state ? state.logsRetention : undefined;
            resourceInputs["metricsRetention"] = state ? state.metricsRetention : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["platform"] = state ? state.platform : undefined;
            resourceInputs["tableName"] = state ? state.tableName : undefined;
            resourceInputs["teamName"] = state ? state.teamName : undefined;
            resourceInputs["token"] = state ? state.token : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as SourceArgs | undefined;
            if ((!args || args.platform === undefined) && !opts.urn) {
                throw new Error("Missing required property 'platform'");
            }
            resourceInputs["ingestingPaused"] = args ? args.ingestingPaused : undefined;
            resourceInputs["liveTailPattern"] = args ? args.liveTailPattern : undefined;
            resourceInputs["logsRetention"] = args ? args.logsRetention : undefined;
            resourceInputs["metricsRetention"] = args ? args.metricsRetention : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["platform"] = args ? args.platform : undefined;
            resourceInputs["teamName"] = args ? args.teamName : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["tableName"] = undefined /*out*/;
            resourceInputs["token"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Source.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Source resources.
 */
export interface SourceState {
    /**
     * The time when this monitor group was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * This property allows you to temporarily pause data ingesting for this source (e.g., when you are reaching your plan's
     * usage quota and you want to prioritize some sources over others).
     */
    ingestingPaused?: pulumi.Input<boolean>;
    /**
     * Freeform text template for formatting Live tail output with columns wrapped in {column} brackets. Example: "PID:
     * {message_json.pid} {level} {message}"
     */
    liveTailPattern?: pulumi.Input<string>;
    /**
     * Data retention for logs in days. There might be additional charges for longer retention.
     */
    logsRetention?: pulumi.Input<number>;
    /**
     * Data retention for metrics in days. There might be additional charges for longer retention.
     */
    metricsRetention?: pulumi.Input<number>;
    /**
     * The name of this source.
     */
    name?: pulumi.Input<string>;
    /**
     * The platform of this source. This value can be set only when you're creating a new source. You can't update this value
     * later. Valid values are: - `apache2` - `aws_cloudwatch` - `aws_ecs` - `aws_elb` - `aws_fargate` - `cloudflare_logpush` -
     * `cloudflare_worker` - `datadog_agent` - `docker` - `dokku` - `dotnet` - `elasticsearch` - `filebeat` - `flights` -
     * `fluentbit` - `fluentd` - `fly_io` - `haproxy` - `heroku` - `http` - `java` - `javascript` - `kubernetes` - `logstash` -
     * `minio` - `mongodb` - `mysql` - `nginx` - `open_telemetry` - `php` - `postgresql` - `prometheus` - `python` - `rabbitmq`
     * - `redis` - `render` - `rsyslog` - `ruby` - `syslog-ng` - `traefik` - `ubuntu` - `vector` - `vercel_integration`
     */
    platform?: pulumi.Input<string>;
    /**
     * The table name generated for this source.
     */
    tableName?: pulumi.Input<string>;
    /**
     * Used to specify the team the resource should be created in when using global tokens.
     */
    teamName?: pulumi.Input<string>;
    /**
     * The token of this source. This token is used to identify and route the data you will send to Logtail.
     */
    token?: pulumi.Input<string>;
    /**
     * The time when this monitor group was updated.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Source resource.
 */
export interface SourceArgs {
    /**
     * This property allows you to temporarily pause data ingesting for this source (e.g., when you are reaching your plan's
     * usage quota and you want to prioritize some sources over others).
     */
    ingestingPaused?: pulumi.Input<boolean>;
    /**
     * Freeform text template for formatting Live tail output with columns wrapped in {column} brackets. Example: "PID:
     * {message_json.pid} {level} {message}"
     */
    liveTailPattern?: pulumi.Input<string>;
    /**
     * Data retention for logs in days. There might be additional charges for longer retention.
     */
    logsRetention?: pulumi.Input<number>;
    /**
     * Data retention for metrics in days. There might be additional charges for longer retention.
     */
    metricsRetention?: pulumi.Input<number>;
    /**
     * The name of this source.
     */
    name?: pulumi.Input<string>;
    /**
     * The platform of this source. This value can be set only when you're creating a new source. You can't update this value
     * later. Valid values are: - `apache2` - `aws_cloudwatch` - `aws_ecs` - `aws_elb` - `aws_fargate` - `cloudflare_logpush` -
     * `cloudflare_worker` - `datadog_agent` - `docker` - `dokku` - `dotnet` - `elasticsearch` - `filebeat` - `flights` -
     * `fluentbit` - `fluentd` - `fly_io` - `haproxy` - `heroku` - `http` - `java` - `javascript` - `kubernetes` - `logstash` -
     * `minio` - `mongodb` - `mysql` - `nginx` - `open_telemetry` - `php` - `postgresql` - `prometheus` - `python` - `rabbitmq`
     * - `redis` - `render` - `rsyslog` - `ruby` - `syslog-ng` - `traefik` - `ubuntu` - `vector` - `vercel_integration`
     */
    platform: pulumi.Input<string>;
    /**
     * Used to specify the team the resource should be created in when using global tokens.
     */
    teamName?: pulumi.Input<string>;
}
