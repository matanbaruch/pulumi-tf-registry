// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemApplication extends pulumi.CustomResource {
    /**
     * Get an existing SystemApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemApplicationState, opts?: pulumi.CustomResourceOptions): SystemApplication {
        return new SystemApplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingone:index/systemApplication:SystemApplication';

    /**
     * Returns true if the given object is an instance of SystemApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemApplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemApplication.__pulumiType;
    }

    /**
     * Group access control settings.
     */
    public readonly accessControlGroupOptions!: pulumi.Output<outputs.SystemApplicationAccessControlGroupOptions | undefined>;
    /**
     * A string that specifies the user role required to access the application. A user is an admin user if they have one or
     * more of the following roles assigned: `Organization Admin`, `Environment Admin`, `Identity Data Admin`, or `Client
     * Application Developer`. Options are `ADMIN_USERS_ONLY`.
     */
    public readonly accessControlRoleType!: pulumi.Output<string | undefined>;
    /**
     * A boolean that specifies whether to apply the default theme to the Self-Service or PingOne Portal application. Defaults
     * to `false`.
     */
    public readonly applyDefaultTheme!: pulumi.Output<boolean>;
    /**
     * A boolean that specifies whether to show the default theme footer on the self-service application. Configurable only
     * when the `type` is `PING_ONE_SELF_SERVICE` and `apply_default_theme` is also `true`.
     */
    public readonly enableDefaultThemeFooter!: pulumi.Output<boolean | undefined>;
    /**
     * A boolean that specifies the enabled/disabled status of the application. Defaults to `true`.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The ID of the environment to manage built-in system applications in. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * A string that specifies the name of the system application.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * A string that specifies the type of system application, used as the primary identifier. Options are `PING_ONE_PORTAL`,
     * `PING_ONE_SELF_SERVICE`.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a SystemApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemApplicationArgs | SystemApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemApplicationState | undefined;
            resourceInputs["accessControlGroupOptions"] = state ? state.accessControlGroupOptions : undefined;
            resourceInputs["accessControlRoleType"] = state ? state.accessControlRoleType : undefined;
            resourceInputs["applyDefaultTheme"] = state ? state.applyDefaultTheme : undefined;
            resourceInputs["enableDefaultThemeFooter"] = state ? state.enableDefaultThemeFooter : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as SystemApplicationArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["accessControlGroupOptions"] = args ? args.accessControlGroupOptions : undefined;
            resourceInputs["accessControlRoleType"] = args ? args.accessControlRoleType : undefined;
            resourceInputs["applyDefaultTheme"] = args ? args.applyDefaultTheme : undefined;
            resourceInputs["enableDefaultThemeFooter"] = args ? args.enableDefaultThemeFooter : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemApplication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemApplication resources.
 */
export interface SystemApplicationState {
    /**
     * Group access control settings.
     */
    accessControlGroupOptions?: pulumi.Input<inputs.SystemApplicationAccessControlGroupOptions>;
    /**
     * A string that specifies the user role required to access the application. A user is an admin user if they have one or
     * more of the following roles assigned: `Organization Admin`, `Environment Admin`, `Identity Data Admin`, or `Client
     * Application Developer`. Options are `ADMIN_USERS_ONLY`.
     */
    accessControlRoleType?: pulumi.Input<string>;
    /**
     * A boolean that specifies whether to apply the default theme to the Self-Service or PingOne Portal application. Defaults
     * to `false`.
     */
    applyDefaultTheme?: pulumi.Input<boolean>;
    /**
     * A boolean that specifies whether to show the default theme footer on the self-service application. Configurable only
     * when the `type` is `PING_ONE_SELF_SERVICE` and `apply_default_theme` is also `true`.
     */
    enableDefaultThemeFooter?: pulumi.Input<boolean>;
    /**
     * A boolean that specifies the enabled/disabled status of the application. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the environment to manage built-in system applications in. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * A string that specifies the name of the system application.
     */
    name?: pulumi.Input<string>;
    /**
     * A string that specifies the type of system application, used as the primary identifier. Options are `PING_ONE_PORTAL`,
     * `PING_ONE_SELF_SERVICE`.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemApplication resource.
 */
export interface SystemApplicationArgs {
    /**
     * Group access control settings.
     */
    accessControlGroupOptions?: pulumi.Input<inputs.SystemApplicationAccessControlGroupOptions>;
    /**
     * A string that specifies the user role required to access the application. A user is an admin user if they have one or
     * more of the following roles assigned: `Organization Admin`, `Environment Admin`, `Identity Data Admin`, or `Client
     * Application Developer`. Options are `ADMIN_USERS_ONLY`.
     */
    accessControlRoleType?: pulumi.Input<string>;
    /**
     * A boolean that specifies whether to apply the default theme to the Self-Service or PingOne Portal application. Defaults
     * to `false`.
     */
    applyDefaultTheme?: pulumi.Input<boolean>;
    /**
     * A boolean that specifies whether to show the default theme footer on the self-service application. Configurable only
     * when the `type` is `PING_ONE_SELF_SERVICE` and `apply_default_theme` is also `true`.
     */
    enableDefaultThemeFooter?: pulumi.Input<boolean>;
    /**
     * A boolean that specifies the enabled/disabled status of the application. Defaults to `true`.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The ID of the environment to manage built-in system applications in. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    environmentId: pulumi.Input<string>;
    /**
     * A string that specifies the type of system application, used as the primary identifier. Options are `PING_ONE_PORTAL`,
     * `PING_ONE_SELF_SERVICE`.
     */
    type: pulumi.Input<string>;
}
