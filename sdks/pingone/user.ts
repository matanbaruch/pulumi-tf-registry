// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserState, opts?: pulumi.CustomResourceOptions): User {
        return new User(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingone:index/user:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }

    /**
     * A single object that specifies the user's account information.
     */
    public readonly account!: pulumi.Output<outputs.UserAccount>;
    /**
     * A single object that specifies the user's address information.
     */
    public readonly address!: pulumi.Output<outputs.UserAddress | undefined>;
    /**
     * A string that specifies the user's email address, which must be provided and valid. For more information about email
     * address formatting, see section 3.4 of [RFC 2822, Internet Message Format](http://www.faqs.org/rfcs/rfc2822.html).
     */
    public readonly email!: pulumi.Output<string>;
    /**
     * A boolean that specifies whether the user is enabled. This attribute is set to `true` by default when the user is
     * created.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The ID of the environment to manage the user in. Must be a valid PingOne resource ID. This field is immutable and will
     * trigger a replace plan if changed.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * A string that specifies an identifier for the user resource as defined by the provisioning client. This may be
     * explicitly set to null when updating a user to unset it. The external id attribute simplifies the correlation of the
     * user in PingOne with the user's account in another system of record. The platform does not use this attribute directly
     * in any way, but it is used by Ping Identity's Data Sync product. It can have a length of no more than 1024 characters.
     */
    public readonly externalId!: pulumi.Output<string | undefined>;
    /**
     * A single object that specifies the user's identity provider information.
     */
    public readonly identityProvider!: pulumi.Output<outputs.UserIdentityProvider>;
    /**
     * A string that specifies the user's default location. This may be explicitly set to null when updating a user to unset
     * it. This is used for purposes of localizing such items as currency, date time format, or numerical representations. If
     * provided, it must be a valid language tag as defined in [RFC 5646](https://www.rfc-editor.org/rfc/rfc5646.html). The
     * following are example tags: `fr`, `en-US`, `es-419`, `az-Arab`, `man-Nkoo-GN`. The string can contain any letters,
     * numbers, combining characters, math and currency symbols, dingbats and drawing characters, and invisible whitespace. It
     * can have a length of no more than 256 characters.
     */
    public readonly locale!: pulumi.Output<string | undefined>;
    /**
     * A boolean that specifies whether multi-factor authentication is enabled. Defaults to `false`.
     */
    public readonly mfaEnabled!: pulumi.Output<boolean>;
    /**
     * A string that specifies the user's native phone number. This might also match the `primary_phone` attribute. This may be
     * explicitly set to null when updating a user to unset it. Valid phone numbers must have at least one number and a maximum
     * character length of 32.
     */
    public readonly mobilePhone!: pulumi.Output<string | undefined>;
    /**
     * A single object that specifies the user's name information.
     */
    public readonly name!: pulumi.Output<outputs.UserName | undefined>;
    /**
     * A string that specifies the user's nickname. This can be explicitly set to null when updating a user to unset it. The
     * string can contain any letters, numbers, combining characters, math and currency symbols, dingbats and drawing
     * characters, and invisible whitespace. It can have a length of no more than 256 characters.
     */
    public readonly nickname!: pulumi.Output<string | undefined>;
    /**
     * A single object that specifies the user's password information.
     */
    public readonly password!: pulumi.Output<outputs.UserPassword | undefined>;
    /**
     * A single object that describes the user's photo information.
     */
    public readonly photo!: pulumi.Output<outputs.UserPhoto | undefined>;
    /**
     * The identifier of the population resource associated with the user. Must be a valid PingOne resource ID.
     */
    public readonly populationId!: pulumi.Output<string>;
    /**
     * A string that specifies the user's preferred written or spoken languages. This may be explicitly set to null when
     * updating a user to unset it. If provided, the format of the value must be a valid language range and the same as the
     * HTTP `Accept-Language` header field (not including `Accept-Language:` prefix) and is specified in [Section 5.3.5 of RFC
     * 7231](https://datatracker.ietf.org/doc/html/rfc7231#section-5.3.5). For example: `en-US`, `en-gb;q=0.8`, `en;q=0.7`.
     */
    public readonly preferredLanguage!: pulumi.Output<string | undefined>;
    /**
     * A string that specifies the user's primary phone number. This might also match the `mobile_phone` attribute. This may be
     * explicitly set to null when updating a user to unset it. Valid phone numbers must have at least one number and a maximum
     * character length of 32.
     */
    public readonly primaryPhone!: pulumi.Output<string | undefined>;
    /**
     * A string that specifies the user's time zone. This can be explicitly set to null when updating a user to unset it. If
     * provided, it must conform with the IANA Time Zone database format [RFC
     * 6557](https://www.rfc-editor.org/rfc/rfc6557.html), also known as the "Olson" time zone database format
     * [Olson-TZ](https://www.iana.org/time-zones) for example, `America/Los_Angeles`.
     */
    public readonly timezone!: pulumi.Output<string | undefined>;
    /**
     * A string that specifies the user's title, such as `Vice President`. This can be explicitly set to null when updating a
     * user to unset it. The string can contain any letters, numbers, combining characters, math and currency symbols, dingbats
     * and drawing characters, and invisible whitespace. It can have a length of no more than 256 characters.
     */
    public readonly title!: pulumi.Output<string | undefined>;
    /**
     * A string that specifies the user's type, which is optional. This can be explicitly set to null when updating a user to
     * unset it. This attribute is organization-specific and has no special meaning within the PingOne platform. It is a
     * free-text field that could have values of (for example) `Contractor`, `Employee`, `Intern`, `Temp`, `External`, and
     * `Unknown`. The string can contain any letters, numbers, combining characters, math and currency symbols, dingbats and
     * drawing characters, and invisible whitespace. It can have a length of no more than 256 characters.
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * A single object that specifies the user's identity lifecycle information. This field is immutable and will trigger a
     * replace plan if changed.
     */
    public readonly userLifecycle!: pulumi.Output<outputs.UserUserLifecycle>;
    /**
     * A string that specifies the user name, which must be provided and must be unique within an environment. The `username`
     * must either be a well-formed email address or a string. The string can contain any letters, numbers, combining
     * characters, math and currency symbols, dingbats and drawing characters, and invisible whitespace
     */
    public readonly username!: pulumi.Output<string>;
    /**
     * A string that indicates whether ID verification can be done for the user. Options are `DISABLED`, `ENABLED`,
     * `NOT_INITIATED`. If the user verification status is `DISABLED`, a new verification status cannot be created for that
     * user until the status is changed to `ENABLED`. This field is immutable and will trigger a replace plan if changed.
     */
    public readonly verifyStatus!: pulumi.Output<string>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserArgs | UserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserState | undefined;
            resourceInputs["account"] = state ? state.account : undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["identityProvider"] = state ? state.identityProvider : undefined;
            resourceInputs["locale"] = state ? state.locale : undefined;
            resourceInputs["mfaEnabled"] = state ? state.mfaEnabled : undefined;
            resourceInputs["mobilePhone"] = state ? state.mobilePhone : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nickname"] = state ? state.nickname : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["photo"] = state ? state.photo : undefined;
            resourceInputs["populationId"] = state ? state.populationId : undefined;
            resourceInputs["preferredLanguage"] = state ? state.preferredLanguage : undefined;
            resourceInputs["primaryPhone"] = state ? state.primaryPhone : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["userLifecycle"] = state ? state.userLifecycle : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["verifyStatus"] = state ? state.verifyStatus : undefined;
        } else {
            const args = argsOrState as UserArgs | undefined;
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.populationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'populationId'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["account"] = args ? args.account : undefined;
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["externalId"] = args ? args.externalId : undefined;
            resourceInputs["identityProvider"] = args ? args.identityProvider : undefined;
            resourceInputs["locale"] = args ? args.locale : undefined;
            resourceInputs["mfaEnabled"] = args ? args.mfaEnabled : undefined;
            resourceInputs["mobilePhone"] = args ? args.mobilePhone : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nickname"] = args ? args.nickname : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["photo"] = args ? args.photo : undefined;
            resourceInputs["populationId"] = args ? args.populationId : undefined;
            resourceInputs["preferredLanguage"] = args ? args.preferredLanguage : undefined;
            resourceInputs["primaryPhone"] = args ? args.primaryPhone : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["userLifecycle"] = args ? args.userLifecycle : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["verifyStatus"] = args ? args.verifyStatus : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(User.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * A single object that specifies the user's account information.
     */
    account?: pulumi.Input<inputs.UserAccount>;
    /**
     * A single object that specifies the user's address information.
     */
    address?: pulumi.Input<inputs.UserAddress>;
    /**
     * A string that specifies the user's email address, which must be provided and valid. For more information about email
     * address formatting, see section 3.4 of [RFC 2822, Internet Message Format](http://www.faqs.org/rfcs/rfc2822.html).
     */
    email?: pulumi.Input<string>;
    /**
     * A boolean that specifies whether the user is enabled. This attribute is set to `true` by default when the user is
     * created.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the environment to manage the user in. Must be a valid PingOne resource ID. This field is immutable and will
     * trigger a replace plan if changed.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * A string that specifies an identifier for the user resource as defined by the provisioning client. This may be
     * explicitly set to null when updating a user to unset it. The external id attribute simplifies the correlation of the
     * user in PingOne with the user's account in another system of record. The platform does not use this attribute directly
     * in any way, but it is used by Ping Identity's Data Sync product. It can have a length of no more than 1024 characters.
     */
    externalId?: pulumi.Input<string>;
    /**
     * A single object that specifies the user's identity provider information.
     */
    identityProvider?: pulumi.Input<inputs.UserIdentityProvider>;
    /**
     * A string that specifies the user's default location. This may be explicitly set to null when updating a user to unset
     * it. This is used for purposes of localizing such items as currency, date time format, or numerical representations. If
     * provided, it must be a valid language tag as defined in [RFC 5646](https://www.rfc-editor.org/rfc/rfc5646.html). The
     * following are example tags: `fr`, `en-US`, `es-419`, `az-Arab`, `man-Nkoo-GN`. The string can contain any letters,
     * numbers, combining characters, math and currency symbols, dingbats and drawing characters, and invisible whitespace. It
     * can have a length of no more than 256 characters.
     */
    locale?: pulumi.Input<string>;
    /**
     * A boolean that specifies whether multi-factor authentication is enabled. Defaults to `false`.
     */
    mfaEnabled?: pulumi.Input<boolean>;
    /**
     * A string that specifies the user's native phone number. This might also match the `primary_phone` attribute. This may be
     * explicitly set to null when updating a user to unset it. Valid phone numbers must have at least one number and a maximum
     * character length of 32.
     */
    mobilePhone?: pulumi.Input<string>;
    /**
     * A single object that specifies the user's name information.
     */
    name?: pulumi.Input<inputs.UserName>;
    /**
     * A string that specifies the user's nickname. This can be explicitly set to null when updating a user to unset it. The
     * string can contain any letters, numbers, combining characters, math and currency symbols, dingbats and drawing
     * characters, and invisible whitespace. It can have a length of no more than 256 characters.
     */
    nickname?: pulumi.Input<string>;
    /**
     * A single object that specifies the user's password information.
     */
    password?: pulumi.Input<inputs.UserPassword>;
    /**
     * A single object that describes the user's photo information.
     */
    photo?: pulumi.Input<inputs.UserPhoto>;
    /**
     * The identifier of the population resource associated with the user. Must be a valid PingOne resource ID.
     */
    populationId?: pulumi.Input<string>;
    /**
     * A string that specifies the user's preferred written or spoken languages. This may be explicitly set to null when
     * updating a user to unset it. If provided, the format of the value must be a valid language range and the same as the
     * HTTP `Accept-Language` header field (not including `Accept-Language:` prefix) and is specified in [Section 5.3.5 of RFC
     * 7231](https://datatracker.ietf.org/doc/html/rfc7231#section-5.3.5). For example: `en-US`, `en-gb;q=0.8`, `en;q=0.7`.
     */
    preferredLanguage?: pulumi.Input<string>;
    /**
     * A string that specifies the user's primary phone number. This might also match the `mobile_phone` attribute. This may be
     * explicitly set to null when updating a user to unset it. Valid phone numbers must have at least one number and a maximum
     * character length of 32.
     */
    primaryPhone?: pulumi.Input<string>;
    /**
     * A string that specifies the user's time zone. This can be explicitly set to null when updating a user to unset it. If
     * provided, it must conform with the IANA Time Zone database format [RFC
     * 6557](https://www.rfc-editor.org/rfc/rfc6557.html), also known as the "Olson" time zone database format
     * [Olson-TZ](https://www.iana.org/time-zones) for example, `America/Los_Angeles`.
     */
    timezone?: pulumi.Input<string>;
    /**
     * A string that specifies the user's title, such as `Vice President`. This can be explicitly set to null when updating a
     * user to unset it. The string can contain any letters, numbers, combining characters, math and currency symbols, dingbats
     * and drawing characters, and invisible whitespace. It can have a length of no more than 256 characters.
     */
    title?: pulumi.Input<string>;
    /**
     * A string that specifies the user's type, which is optional. This can be explicitly set to null when updating a user to
     * unset it. This attribute is organization-specific and has no special meaning within the PingOne platform. It is a
     * free-text field that could have values of (for example) `Contractor`, `Employee`, `Intern`, `Temp`, `External`, and
     * `Unknown`. The string can contain any letters, numbers, combining characters, math and currency symbols, dingbats and
     * drawing characters, and invisible whitespace. It can have a length of no more than 256 characters.
     */
    type?: pulumi.Input<string>;
    /**
     * A single object that specifies the user's identity lifecycle information. This field is immutable and will trigger a
     * replace plan if changed.
     */
    userLifecycle?: pulumi.Input<inputs.UserUserLifecycle>;
    /**
     * A string that specifies the user name, which must be provided and must be unique within an environment. The `username`
     * must either be a well-formed email address or a string. The string can contain any letters, numbers, combining
     * characters, math and currency symbols, dingbats and drawing characters, and invisible whitespace
     */
    username?: pulumi.Input<string>;
    /**
     * A string that indicates whether ID verification can be done for the user. Options are `DISABLED`, `ENABLED`,
     * `NOT_INITIATED`. If the user verification status is `DISABLED`, a new verification status cannot be created for that
     * user until the status is changed to `ENABLED`. This field is immutable and will trigger a replace plan if changed.
     */
    verifyStatus?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * A single object that specifies the user's account information.
     */
    account?: pulumi.Input<inputs.UserAccount>;
    /**
     * A single object that specifies the user's address information.
     */
    address?: pulumi.Input<inputs.UserAddress>;
    /**
     * A string that specifies the user's email address, which must be provided and valid. For more information about email
     * address formatting, see section 3.4 of [RFC 2822, Internet Message Format](http://www.faqs.org/rfcs/rfc2822.html).
     */
    email: pulumi.Input<string>;
    /**
     * A boolean that specifies whether the user is enabled. This attribute is set to `true` by default when the user is
     * created.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the environment to manage the user in. Must be a valid PingOne resource ID. This field is immutable and will
     * trigger a replace plan if changed.
     */
    environmentId: pulumi.Input<string>;
    /**
     * A string that specifies an identifier for the user resource as defined by the provisioning client. This may be
     * explicitly set to null when updating a user to unset it. The external id attribute simplifies the correlation of the
     * user in PingOne with the user's account in another system of record. The platform does not use this attribute directly
     * in any way, but it is used by Ping Identity's Data Sync product. It can have a length of no more than 1024 characters.
     */
    externalId?: pulumi.Input<string>;
    /**
     * A single object that specifies the user's identity provider information.
     */
    identityProvider?: pulumi.Input<inputs.UserIdentityProvider>;
    /**
     * A string that specifies the user's default location. This may be explicitly set to null when updating a user to unset
     * it. This is used for purposes of localizing such items as currency, date time format, or numerical representations. If
     * provided, it must be a valid language tag as defined in [RFC 5646](https://www.rfc-editor.org/rfc/rfc5646.html). The
     * following are example tags: `fr`, `en-US`, `es-419`, `az-Arab`, `man-Nkoo-GN`. The string can contain any letters,
     * numbers, combining characters, math and currency symbols, dingbats and drawing characters, and invisible whitespace. It
     * can have a length of no more than 256 characters.
     */
    locale?: pulumi.Input<string>;
    /**
     * A boolean that specifies whether multi-factor authentication is enabled. Defaults to `false`.
     */
    mfaEnabled?: pulumi.Input<boolean>;
    /**
     * A string that specifies the user's native phone number. This might also match the `primary_phone` attribute. This may be
     * explicitly set to null when updating a user to unset it. Valid phone numbers must have at least one number and a maximum
     * character length of 32.
     */
    mobilePhone?: pulumi.Input<string>;
    /**
     * A single object that specifies the user's name information.
     */
    name?: pulumi.Input<inputs.UserName>;
    /**
     * A string that specifies the user's nickname. This can be explicitly set to null when updating a user to unset it. The
     * string can contain any letters, numbers, combining characters, math and currency symbols, dingbats and drawing
     * characters, and invisible whitespace. It can have a length of no more than 256 characters.
     */
    nickname?: pulumi.Input<string>;
    /**
     * A single object that specifies the user's password information.
     */
    password?: pulumi.Input<inputs.UserPassword>;
    /**
     * A single object that describes the user's photo information.
     */
    photo?: pulumi.Input<inputs.UserPhoto>;
    /**
     * The identifier of the population resource associated with the user. Must be a valid PingOne resource ID.
     */
    populationId: pulumi.Input<string>;
    /**
     * A string that specifies the user's preferred written or spoken languages. This may be explicitly set to null when
     * updating a user to unset it. If provided, the format of the value must be a valid language range and the same as the
     * HTTP `Accept-Language` header field (not including `Accept-Language:` prefix) and is specified in [Section 5.3.5 of RFC
     * 7231](https://datatracker.ietf.org/doc/html/rfc7231#section-5.3.5). For example: `en-US`, `en-gb;q=0.8`, `en;q=0.7`.
     */
    preferredLanguage?: pulumi.Input<string>;
    /**
     * A string that specifies the user's primary phone number. This might also match the `mobile_phone` attribute. This may be
     * explicitly set to null when updating a user to unset it. Valid phone numbers must have at least one number and a maximum
     * character length of 32.
     */
    primaryPhone?: pulumi.Input<string>;
    /**
     * A string that specifies the user's time zone. This can be explicitly set to null when updating a user to unset it. If
     * provided, it must conform with the IANA Time Zone database format [RFC
     * 6557](https://www.rfc-editor.org/rfc/rfc6557.html), also known as the "Olson" time zone database format
     * [Olson-TZ](https://www.iana.org/time-zones) for example, `America/Los_Angeles`.
     */
    timezone?: pulumi.Input<string>;
    /**
     * A string that specifies the user's title, such as `Vice President`. This can be explicitly set to null when updating a
     * user to unset it. The string can contain any letters, numbers, combining characters, math and currency symbols, dingbats
     * and drawing characters, and invisible whitespace. It can have a length of no more than 256 characters.
     */
    title?: pulumi.Input<string>;
    /**
     * A string that specifies the user's type, which is optional. This can be explicitly set to null when updating a user to
     * unset it. This attribute is organization-specific and has no special meaning within the PingOne platform. It is a
     * free-text field that could have values of (for example) `Contractor`, `Employee`, `Intern`, `Temp`, `External`, and
     * `Unknown`. The string can contain any letters, numbers, combining characters, math and currency symbols, dingbats and
     * drawing characters, and invisible whitespace. It can have a length of no more than 256 characters.
     */
    type?: pulumi.Input<string>;
    /**
     * A single object that specifies the user's identity lifecycle information. This field is immutable and will trigger a
     * replace plan if changed.
     */
    userLifecycle?: pulumi.Input<inputs.UserUserLifecycle>;
    /**
     * A string that specifies the user name, which must be provided and must be unique within an environment. The `username`
     * must either be a well-formed email address or a string. The string can contain any letters, numbers, combining
     * characters, math and currency symbols, dingbats and drawing characters, and invisible whitespace
     */
    username: pulumi.Input<string>;
    /**
     * A string that indicates whether ID verification can be done for the user. Options are `DISABLED`, `ENABLED`,
     * `NOT_INITIATED`. If the user verification status is `DISABLED`, a new verification status cannot be created for that
     * user until the status is changed to `ENABLED`. This field is immutable and will trigger a replace plan if changed.
     */
    verifyStatus?: pulumi.Input<string>;
}
