// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAgreement(args: GetAgreementArgs, opts?: pulumi.InvokeOptions): Promise<GetAgreementResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingone:index/getAgreement:getAgreement", {
        "agreementId": args.agreementId,
        "environmentId": args.environmentId,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAgreement.
 */
export interface GetAgreementArgs {
    agreementId?: string;
    environmentId: string;
    name?: string;
}

/**
 * A collection of values returned by getAgreement.
 */
export interface GetAgreementResult {
    readonly agreementId?: string;
    readonly consentCountsUpdatedAt: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly environmentId: string;
    readonly expiredUserConsentCount: number;
    readonly id: string;
    readonly name?: string;
    readonly reconsentPeriodDays: number;
    readonly totalUserConsentCount: number;
}
export function getAgreementOutput(args: GetAgreementOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAgreementResult> {
    return pulumi.output(args).apply((a: any) => getAgreement(a, opts))
}

/**
 * A collection of arguments for invoking getAgreement.
 */
export interface GetAgreementOutputArgs {
    agreementId?: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
