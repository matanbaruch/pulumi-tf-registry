// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AuthorizeDecisionEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing AuthorizeDecisionEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthorizeDecisionEndpointState, opts?: pulumi.CustomResourceOptions): AuthorizeDecisionEndpoint {
        return new AuthorizeDecisionEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingone:index/authorizeDecisionEndpoint:AuthorizeDecisionEndpoint';

    /**
     * Returns true if the given object is an instance of AuthorizeDecisionEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthorizeDecisionEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthorizeDecisionEndpoint.__pulumiType;
    }

    /**
     * A string that specifies alternative unique identifier for the endpoint, which provides a method for locating the
     * resource by a known, fixed identifier.
     */
    public readonly alternateId!: pulumi.Output<string | undefined>;
    /**
     * A string that specifies the ID of the Authorization Version deployed to this endpoint. Versioning allows independent
     * development and deployment of policies. If omitted, the endpoint always uses the latest policy version available from
     * the policy editor service.
     */
    public readonly authorizationVersionId!: pulumi.Output<string | undefined>;
    /**
     * A string that specifies the description of the policy decision resource. Defaults to ``.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the environment to create the decision endpoint in.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * A string that specifies the policy decision resource name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A boolean that when true restricts modifications of the endpoint to PingOne-owned clients.
     */
    public /*out*/ readonly owned!: pulumi.Output<boolean>;
    /**
     * A boolean that specifies whether to record a limited history of recent decision requests and responses, which can be
     * queried through a separate API.
     */
    public readonly recordRecentRequests!: pulumi.Output<boolean>;

    /**
     * Create a AuthorizeDecisionEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthorizeDecisionEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthorizeDecisionEndpointArgs | AuthorizeDecisionEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthorizeDecisionEndpointState | undefined;
            resourceInputs["alternateId"] = state ? state.alternateId : undefined;
            resourceInputs["authorizationVersionId"] = state ? state.authorizationVersionId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["owned"] = state ? state.owned : undefined;
            resourceInputs["recordRecentRequests"] = state ? state.recordRecentRequests : undefined;
        } else {
            const args = argsOrState as AuthorizeDecisionEndpointArgs | undefined;
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.recordRecentRequests === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recordRecentRequests'");
            }
            resourceInputs["alternateId"] = args ? args.alternateId : undefined;
            resourceInputs["authorizationVersionId"] = args ? args.authorizationVersionId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["recordRecentRequests"] = args ? args.recordRecentRequests : undefined;
            resourceInputs["owned"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthorizeDecisionEndpoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AuthorizeDecisionEndpoint resources.
 */
export interface AuthorizeDecisionEndpointState {
    /**
     * A string that specifies alternative unique identifier for the endpoint, which provides a method for locating the
     * resource by a known, fixed identifier.
     */
    alternateId?: pulumi.Input<string>;
    /**
     * A string that specifies the ID of the Authorization Version deployed to this endpoint. Versioning allows independent
     * development and deployment of policies. If omitted, the endpoint always uses the latest policy version available from
     * the policy editor service.
     */
    authorizationVersionId?: pulumi.Input<string>;
    /**
     * A string that specifies the description of the policy decision resource. Defaults to ``.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the environment to create the decision endpoint in.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * A string that specifies the policy decision resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * A boolean that when true restricts modifications of the endpoint to PingOne-owned clients.
     */
    owned?: pulumi.Input<boolean>;
    /**
     * A boolean that specifies whether to record a limited history of recent decision requests and responses, which can be
     * queried through a separate API.
     */
    recordRecentRequests?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AuthorizeDecisionEndpoint resource.
 */
export interface AuthorizeDecisionEndpointArgs {
    /**
     * A string that specifies alternative unique identifier for the endpoint, which provides a method for locating the
     * resource by a known, fixed identifier.
     */
    alternateId?: pulumi.Input<string>;
    /**
     * A string that specifies the ID of the Authorization Version deployed to this endpoint. Versioning allows independent
     * development and deployment of policies. If omitted, the endpoint always uses the latest policy version available from
     * the policy editor service.
     */
    authorizationVersionId?: pulumi.Input<string>;
    /**
     * A string that specifies the description of the policy decision resource. Defaults to ``.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the environment to create the decision endpoint in.
     */
    environmentId: pulumi.Input<string>;
    /**
     * A string that specifies the policy decision resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * A boolean that specifies whether to record a limited history of recent decision requests and responses, which can be
     * queried through a separate API.
     */
    recordRecentRequests: pulumi.Input<boolean>;
}
