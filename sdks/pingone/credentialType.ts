// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CredentialType extends pulumi.CustomResource {
    /**
     * Get an existing CredentialType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CredentialTypeState, opts?: pulumi.CustomResourceOptions): CredentialType {
        return new CredentialType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingone:index/credentialType:CredentialType';

    /**
     * Returns true if the given object is an instance of CredentialType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CredentialType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CredentialType.__pulumiType;
    }

    /**
     * An SVG formatted image containing placeholders for the credentials fields that need to be displayed in the image.
     */
    public readonly cardDesignTemplate!: pulumi.Output<string>;
    /**
     * A descriptor of the credential type. Can be non-identity types such as proof of employment or proof of insurance.
     */
    public readonly cardType!: pulumi.Output<string | undefined>;
    /**
     * Date and time the object was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * A description of the credential type. This value aligns to `${cardSubtitle}` in the `card_design_template`.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * PingOne environment identifier (UUID) in which the credential type exists. Must be a valid PingOne resource ID. This
     * field is immutable and will trigger a replace plan if changed.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * The identifier (UUID) of the issuer of the credential, which is the `id` of the `credential_issuer_profile` defined in
     * the `environment`.
     */
    public /*out*/ readonly issuerId!: pulumi.Output<string>;
    /**
     * Specifies the management mode of the credential type. Options are `AUTOMATED`, `MANAGED`. Defaults to `AUTOMATED`.
     */
    public readonly managementMode!: pulumi.Output<string>;
    /**
     * Contains the names, data types, and other metadata related to the credential.
     */
    public readonly metadata!: pulumi.Output<outputs.CredentialTypeMetadata>;
    /**
     * A boolean that specifies whether a user's issued verifiable credentials are automatically revoked when a
     * `credential_type`, `user`, or `environment` is deleted. Defaults to `true`.
     */
    public readonly revokeOnDelete!: pulumi.Output<boolean>;
    /**
     * Title of the credential. Verification sites are expected to be able to request the issued credential from the compatible
     * wallet app using the title. This value aligns to `${cardTitle}` in the `card_design_template`.
     */
    public readonly title!: pulumi.Output<string>;
    /**
     * Date and time the object was updated. Can be null.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a CredentialType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CredentialTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CredentialTypeArgs | CredentialTypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CredentialTypeState | undefined;
            resourceInputs["cardDesignTemplate"] = state ? state.cardDesignTemplate : undefined;
            resourceInputs["cardType"] = state ? state.cardType : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["issuerId"] = state ? state.issuerId : undefined;
            resourceInputs["managementMode"] = state ? state.managementMode : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["revokeOnDelete"] = state ? state.revokeOnDelete : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as CredentialTypeArgs | undefined;
            if ((!args || args.cardDesignTemplate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cardDesignTemplate'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.metadata === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metadata'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["cardDesignTemplate"] = args ? args.cardDesignTemplate : undefined;
            resourceInputs["cardType"] = args ? args.cardType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["managementMode"] = args ? args.managementMode : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["revokeOnDelete"] = args ? args.revokeOnDelete : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["issuerId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CredentialType.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CredentialType resources.
 */
export interface CredentialTypeState {
    /**
     * An SVG formatted image containing placeholders for the credentials fields that need to be displayed in the image.
     */
    cardDesignTemplate?: pulumi.Input<string>;
    /**
     * A descriptor of the credential type. Can be non-identity types such as proof of employment or proof of insurance.
     */
    cardType?: pulumi.Input<string>;
    /**
     * Date and time the object was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * A description of the credential type. This value aligns to `${cardSubtitle}` in the `card_design_template`.
     */
    description?: pulumi.Input<string>;
    /**
     * PingOne environment identifier (UUID) in which the credential type exists. Must be a valid PingOne resource ID. This
     * field is immutable and will trigger a replace plan if changed.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * The identifier (UUID) of the issuer of the credential, which is the `id` of the `credential_issuer_profile` defined in
     * the `environment`.
     */
    issuerId?: pulumi.Input<string>;
    /**
     * Specifies the management mode of the credential type. Options are `AUTOMATED`, `MANAGED`. Defaults to `AUTOMATED`.
     */
    managementMode?: pulumi.Input<string>;
    /**
     * Contains the names, data types, and other metadata related to the credential.
     */
    metadata?: pulumi.Input<inputs.CredentialTypeMetadata>;
    /**
     * A boolean that specifies whether a user's issued verifiable credentials are automatically revoked when a
     * `credential_type`, `user`, or `environment` is deleted. Defaults to `true`.
     */
    revokeOnDelete?: pulumi.Input<boolean>;
    /**
     * Title of the credential. Verification sites are expected to be able to request the issued credential from the compatible
     * wallet app using the title. This value aligns to `${cardTitle}` in the `card_design_template`.
     */
    title?: pulumi.Input<string>;
    /**
     * Date and time the object was updated. Can be null.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CredentialType resource.
 */
export interface CredentialTypeArgs {
    /**
     * An SVG formatted image containing placeholders for the credentials fields that need to be displayed in the image.
     */
    cardDesignTemplate: pulumi.Input<string>;
    /**
     * A descriptor of the credential type. Can be non-identity types such as proof of employment or proof of insurance.
     */
    cardType?: pulumi.Input<string>;
    /**
     * A description of the credential type. This value aligns to `${cardSubtitle}` in the `card_design_template`.
     */
    description?: pulumi.Input<string>;
    /**
     * PingOne environment identifier (UUID) in which the credential type exists. Must be a valid PingOne resource ID. This
     * field is immutable and will trigger a replace plan if changed.
     */
    environmentId: pulumi.Input<string>;
    /**
     * Specifies the management mode of the credential type. Options are `AUTOMATED`, `MANAGED`. Defaults to `AUTOMATED`.
     */
    managementMode?: pulumi.Input<string>;
    /**
     * Contains the names, data types, and other metadata related to the credential.
     */
    metadata: pulumi.Input<inputs.CredentialTypeMetadata>;
    /**
     * A boolean that specifies whether a user's issued verifiable credentials are automatically revoked when a
     * `credential_type`, `user`, or `environment` is deleted. Defaults to `true`.
     */
    revokeOnDelete?: pulumi.Input<boolean>;
    /**
     * Title of the credential. Verification sites are expected to be able to request the issued credential from the compatible
     * wallet app using the title. This value aligns to `${cardTitle}` in the `card_design_template`.
     */
    title: pulumi.Input<string>;
}
