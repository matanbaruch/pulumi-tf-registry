// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ApplicationResourceGrant extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationResourceGrant resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationResourceGrantState, opts?: pulumi.CustomResourceOptions): ApplicationResourceGrant {
        return new ApplicationResourceGrant(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingone:index/applicationResourceGrant:ApplicationResourceGrant';

    /**
     * Returns true if the given object is an instance of ApplicationResourceGrant.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationResourceGrant {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationResourceGrant.__pulumiType;
    }

    /**
     * The ID of the application to create the resource grant for. The value for `application_id` may come from the `id`
     * attribute of the `pingone.Application` or `pingone.SystemApplication` resources or data sources. Must be a valid PingOne
     * resource ID. This field is immutable and will trigger a replace plan if changed.
     */
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * A string that specifies the ID of the custom resource to be granted to the application. Must be a valid PingOne resource
     * ID. Required if `resource_type` is set to `CUSTOM`, but cannot be set if `resource_type` is set to `OPENID_CONNECT` or
     * `PINGONE_API`. This field is immutable and will trigger a replace plan if changed.
     */
    public readonly customResourceId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the environment to create the application resource grant in. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * A string that specifies the ID of the resource granted to the application.
     */
    public /*out*/ readonly resourceId!: pulumi.Output<string>;
    /**
     * The type of the resource to configure the grant for. When the value is set to `CUSTOM`, `custom_resource_id` must be
     * specified. Options are `CUSTOM`, `OPENID_CONNECT`, `PINGONE_API`. This field is immutable and will trigger a replace
     * plan if changed.
     */
    public readonly resourceType!: pulumi.Output<string>;
    /**
     * A list of IDs of the scopes associated with this grant. Values must be valid PingOne resource IDs.
     */
    public readonly scopes!: pulumi.Output<string[]>;

    /**
     * Create a ApplicationResourceGrant resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationResourceGrantArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationResourceGrantArgs | ApplicationResourceGrantState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationResourceGrantState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["customResourceId"] = state ? state.customResourceId : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
            resourceInputs["scopes"] = state ? state.scopes : undefined;
        } else {
            const args = argsOrState as ApplicationResourceGrantArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.resourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceType'");
            }
            if ((!args || args.scopes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scopes'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["customResourceId"] = args ? args.customResourceId : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
            resourceInputs["scopes"] = args ? args.scopes : undefined;
            resourceInputs["resourceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationResourceGrant.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApplicationResourceGrant resources.
 */
export interface ApplicationResourceGrantState {
    /**
     * The ID of the application to create the resource grant for. The value for `application_id` may come from the `id`
     * attribute of the `pingone.Application` or `pingone.SystemApplication` resources or data sources. Must be a valid PingOne
     * resource ID. This field is immutable and will trigger a replace plan if changed.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * A string that specifies the ID of the custom resource to be granted to the application. Must be a valid PingOne resource
     * ID. Required if `resource_type` is set to `CUSTOM`, but cannot be set if `resource_type` is set to `OPENID_CONNECT` or
     * `PINGONE_API`. This field is immutable and will trigger a replace plan if changed.
     */
    customResourceId?: pulumi.Input<string>;
    /**
     * The ID of the environment to create the application resource grant in. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * A string that specifies the ID of the resource granted to the application.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The type of the resource to configure the grant for. When the value is set to `CUSTOM`, `custom_resource_id` must be
     * specified. Options are `CUSTOM`, `OPENID_CONNECT`, `PINGONE_API`. This field is immutable and will trigger a replace
     * plan if changed.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * A list of IDs of the scopes associated with this grant. Values must be valid PingOne resource IDs.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ApplicationResourceGrant resource.
 */
export interface ApplicationResourceGrantArgs {
    /**
     * The ID of the application to create the resource grant for. The value for `application_id` may come from the `id`
     * attribute of the `pingone.Application` or `pingone.SystemApplication` resources or data sources. Must be a valid PingOne
     * resource ID. This field is immutable and will trigger a replace plan if changed.
     */
    applicationId: pulumi.Input<string>;
    /**
     * A string that specifies the ID of the custom resource to be granted to the application. Must be a valid PingOne resource
     * ID. Required if `resource_type` is set to `CUSTOM`, but cannot be set if `resource_type` is set to `OPENID_CONNECT` or
     * `PINGONE_API`. This field is immutable and will trigger a replace plan if changed.
     */
    customResourceId?: pulumi.Input<string>;
    /**
     * The ID of the environment to create the application resource grant in. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    environmentId: pulumi.Input<string>;
    /**
     * The type of the resource to configure the grant for. When the value is set to `CUSTOM`, `custom_resource_id` must be
     * specified. Options are `CUSTOM`, `OPENID_CONNECT`, `PINGONE_API`. This field is immutable and will trigger a replace
     * plan if changed.
     */
    resourceType: pulumi.Input<string>;
    /**
     * A list of IDs of the scopes associated with this grant. Values must be valid PingOne resource IDs.
     */
    scopes: pulumi.Input<pulumi.Input<string>[]>;
}
