// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NotificationPolicy extends pulumi.CustomResource {
    /**
     * Get an existing NotificationPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NotificationPolicyState, opts?: pulumi.CustomResourceOptions): NotificationPolicy {
        return new NotificationPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingone:index/notificationPolicy:NotificationPolicy';

    /**
     * Returns true if the given object is an instance of NotificationPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NotificationPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NotificationPolicy.__pulumiType;
    }

    /**
     * A single object to limit the countries where you can send SMS and voice notifications.
     */
    public readonly countryLimit!: pulumi.Output<outputs.NotificationPolicyCountryLimit>;
    /**
     * A boolean to provide an indication of whether this policy is the default notification policy for the environment. If the
     * parameter is not provided, the value used is `false`.
     */
    public /*out*/ readonly default!: pulumi.Output<boolean>;
    /**
     * The ID of the environment to associate the notification policy with. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * The name to use for the notification policy. Must be unique among the notification policies in the environment.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A set of objects that define the SMS/Voice limits. A maximum of two quota objects can be defined, one for SMS and/or
     * Voice quota, and one for Email quota.
     */
    public readonly quotas!: pulumi.Output<outputs.NotificationPolicyQuota[] | undefined>;

    /**
     * Create a NotificationPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NotificationPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NotificationPolicyArgs | NotificationPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NotificationPolicyState | undefined;
            resourceInputs["countryLimit"] = state ? state.countryLimit : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["quotas"] = state ? state.quotas : undefined;
        } else {
            const args = argsOrState as NotificationPolicyArgs | undefined;
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            resourceInputs["countryLimit"] = args ? args.countryLimit : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["quotas"] = args ? args.quotas : undefined;
            resourceInputs["default"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NotificationPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NotificationPolicy resources.
 */
export interface NotificationPolicyState {
    /**
     * A single object to limit the countries where you can send SMS and voice notifications.
     */
    countryLimit?: pulumi.Input<inputs.NotificationPolicyCountryLimit>;
    /**
     * A boolean to provide an indication of whether this policy is the default notification policy for the environment. If the
     * parameter is not provided, the value used is `false`.
     */
    default?: pulumi.Input<boolean>;
    /**
     * The ID of the environment to associate the notification policy with. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * The name to use for the notification policy. Must be unique among the notification policies in the environment.
     */
    name?: pulumi.Input<string>;
    /**
     * A set of objects that define the SMS/Voice limits. A maximum of two quota objects can be defined, one for SMS and/or
     * Voice quota, and one for Email quota.
     */
    quotas?: pulumi.Input<pulumi.Input<inputs.NotificationPolicyQuota>[]>;
}

/**
 * The set of arguments for constructing a NotificationPolicy resource.
 */
export interface NotificationPolicyArgs {
    /**
     * A single object to limit the countries where you can send SMS and voice notifications.
     */
    countryLimit?: pulumi.Input<inputs.NotificationPolicyCountryLimit>;
    /**
     * The ID of the environment to associate the notification policy with. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    environmentId: pulumi.Input<string>;
    /**
     * The name to use for the notification policy. Must be unique among the notification policies in the environment.
     */
    name?: pulumi.Input<string>;
    /**
     * A set of objects that define the SMS/Voice limits. A maximum of two quota objects can be defined, one for SMS and/or
     * Voice quota, and one for Email quota.
     */
    quotas?: pulumi.Input<pulumi.Input<inputs.NotificationPolicyQuota>[]>;
}
