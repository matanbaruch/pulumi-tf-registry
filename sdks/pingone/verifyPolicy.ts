// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VerifyPolicy extends pulumi.CustomResource {
    /**
     * Get an existing VerifyPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VerifyPolicyState, opts?: pulumi.CustomResourceOptions): VerifyPolicy {
        return new VerifyPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingone:index/verifyPolicy:VerifyPolicy';

    /**
     * Returns true if the given object is an instance of VerifyPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VerifyPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VerifyPolicy.__pulumiType;
    }

    /**
     * Date and time the verify policy was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Specifies whether this is the environment's default verify policy.
     */
    public /*out*/ readonly default!: pulumi.Output<boolean>;
    /**
     * Description of the verification policy displayed in PingOne Admin UI, 1-1024 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Defines the verification requirements to validate an email address using a one-time password (OTP).
     */
    public readonly email!: pulumi.Output<outputs.VerifyPolicyEmail>;
    /**
     * PingOne environment identifier (UUID) in which the verify policy exists. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * Defines the verification requirements to compare a mobile phone self-image to a reference photograph, such as on a
     * government ID or previously verified photograph.
     */
    public readonly facialComparison!: pulumi.Output<outputs.VerifyPolicyFacialComparison>;
    /**
     * Defines the verification requirements for a government-issued identity document, which includes a photograph.
     */
    public readonly governmentId!: pulumi.Output<outputs.VerifyPolicyGovernmentId>;
    /**
     * Defines the verification requirements to inspect a mobile phone self-image for evidence that the subject is alive and
     * not a representation, such as a photograph or mask.
     */
    public readonly liveness!: pulumi.Output<outputs.VerifyPolicyLiveness>;
    /**
     * Name of the verification policy displayed in PingOne Admin UI.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Defines the verification requirements to validate a mobile phone number using a one-time password (OTP).
     */
    public readonly phone!: pulumi.Output<outputs.VerifyPolicyPhone>;
    /**
     * Defines the requirements for transactions invoked by the policy.
     */
    public readonly transaction!: pulumi.Output<outputs.VerifyPolicyTransaction>;
    /**
     * Date and time the verify policy was updated. Can be null.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * Defines the requirements for transactions invoked by the policy.
     */
    public readonly voice!: pulumi.Output<outputs.VerifyPolicyVoice>;

    /**
     * Create a VerifyPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VerifyPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VerifyPolicyArgs | VerifyPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VerifyPolicyState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["facialComparison"] = state ? state.facialComparison : undefined;
            resourceInputs["governmentId"] = state ? state.governmentId : undefined;
            resourceInputs["liveness"] = state ? state.liveness : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["phone"] = state ? state.phone : undefined;
            resourceInputs["transaction"] = state ? state.transaction : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["voice"] = state ? state.voice : undefined;
        } else {
            const args = argsOrState as VerifyPolicyArgs | undefined;
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["facialComparison"] = args ? args.facialComparison : undefined;
            resourceInputs["governmentId"] = args ? args.governmentId : undefined;
            resourceInputs["liveness"] = args ? args.liveness : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["phone"] = args ? args.phone : undefined;
            resourceInputs["transaction"] = args ? args.transaction : undefined;
            resourceInputs["voice"] = args ? args.voice : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["default"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VerifyPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VerifyPolicy resources.
 */
export interface VerifyPolicyState {
    /**
     * Date and time the verify policy was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Specifies whether this is the environment's default verify policy.
     */
    default?: pulumi.Input<boolean>;
    /**
     * Description of the verification policy displayed in PingOne Admin UI, 1-1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Defines the verification requirements to validate an email address using a one-time password (OTP).
     */
    email?: pulumi.Input<inputs.VerifyPolicyEmail>;
    /**
     * PingOne environment identifier (UUID) in which the verify policy exists. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * Defines the verification requirements to compare a mobile phone self-image to a reference photograph, such as on a
     * government ID or previously verified photograph.
     */
    facialComparison?: pulumi.Input<inputs.VerifyPolicyFacialComparison>;
    /**
     * Defines the verification requirements for a government-issued identity document, which includes a photograph.
     */
    governmentId?: pulumi.Input<inputs.VerifyPolicyGovernmentId>;
    /**
     * Defines the verification requirements to inspect a mobile phone self-image for evidence that the subject is alive and
     * not a representation, such as a photograph or mask.
     */
    liveness?: pulumi.Input<inputs.VerifyPolicyLiveness>;
    /**
     * Name of the verification policy displayed in PingOne Admin UI.
     */
    name?: pulumi.Input<string>;
    /**
     * Defines the verification requirements to validate a mobile phone number using a one-time password (OTP).
     */
    phone?: pulumi.Input<inputs.VerifyPolicyPhone>;
    /**
     * Defines the requirements for transactions invoked by the policy.
     */
    transaction?: pulumi.Input<inputs.VerifyPolicyTransaction>;
    /**
     * Date and time the verify policy was updated. Can be null.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * Defines the requirements for transactions invoked by the policy.
     */
    voice?: pulumi.Input<inputs.VerifyPolicyVoice>;
}

/**
 * The set of arguments for constructing a VerifyPolicy resource.
 */
export interface VerifyPolicyArgs {
    /**
     * Description of the verification policy displayed in PingOne Admin UI, 1-1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Defines the verification requirements to validate an email address using a one-time password (OTP).
     */
    email?: pulumi.Input<inputs.VerifyPolicyEmail>;
    /**
     * PingOne environment identifier (UUID) in which the verify policy exists. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    environmentId: pulumi.Input<string>;
    /**
     * Defines the verification requirements to compare a mobile phone self-image to a reference photograph, such as on a
     * government ID or previously verified photograph.
     */
    facialComparison?: pulumi.Input<inputs.VerifyPolicyFacialComparison>;
    /**
     * Defines the verification requirements for a government-issued identity document, which includes a photograph.
     */
    governmentId?: pulumi.Input<inputs.VerifyPolicyGovernmentId>;
    /**
     * Defines the verification requirements to inspect a mobile phone self-image for evidence that the subject is alive and
     * not a representation, such as a photograph or mask.
     */
    liveness?: pulumi.Input<inputs.VerifyPolicyLiveness>;
    /**
     * Name of the verification policy displayed in PingOne Admin UI.
     */
    name?: pulumi.Input<string>;
    /**
     * Defines the verification requirements to validate a mobile phone number using a one-time password (OTP).
     */
    phone?: pulumi.Input<inputs.VerifyPolicyPhone>;
    /**
     * Defines the requirements for transactions invoked by the policy.
     */
    transaction?: pulumi.Input<inputs.VerifyPolicyTransaction>;
    /**
     * Defines the requirements for transactions invoked by the policy.
     */
    voice?: pulumi.Input<inputs.VerifyPolicyVoice>;
}
