// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplicationSecret(args: GetApplicationSecretArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationSecretResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingone:index/getApplicationSecret:getApplicationSecret", {
        "applicationId": args.applicationId,
        "environmentId": args.environmentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplicationSecret.
 */
export interface GetApplicationSecretArgs {
    applicationId: string;
    environmentId: string;
}

/**
 * A collection of values returned by getApplicationSecret.
 */
export interface GetApplicationSecretResult {
    readonly applicationId: string;
    readonly environmentId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly previous: outputs.GetApplicationSecretPrevious;
    readonly secret: string;
}
export function getApplicationSecretOutput(args: GetApplicationSecretOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationSecretResult> {
    return pulumi.output(args).apply((a: any) => getApplicationSecret(a, opts))
}

/**
 * A collection of arguments for invoking getApplicationSecret.
 */
export interface GetApplicationSecretOutputArgs {
    applicationId: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
}
