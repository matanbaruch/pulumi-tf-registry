// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AgreementLocalization extends pulumi.CustomResource {
    /**
     * Get an existing AgreementLocalization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AgreementLocalizationState, opts?: pulumi.CustomResourceOptions): AgreementLocalization {
        return new AgreementLocalization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingone:index/agreementLocalization:AgreementLocalization';

    /**
     * Returns true if the given object is an instance of AgreementLocalization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AgreementLocalization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AgreementLocalization.__pulumiType;
    }

    /**
     * The ID of the agreement to associate the agreement localization with. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    public readonly agreementId!: pulumi.Output<string>;
    /**
     * A string used as the title of the agreement for the language presented to the user.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * A boolean that specifies whether the localization (and it's revision text) is enabled in the agreement.
     */
    public /*out*/ readonly enabled!: pulumi.Output<boolean>;
    /**
     * The ID of the environment to associate the agreement localization with. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * The ID of the language in the PingOne environment that the localization applies to. Must be a valid PingOne resource ID.
     * This field is immutable and will trigger a replace plan if changed.
     */
    public readonly languageId!: pulumi.Output<string>;
    /**
     * A string used as the locale code of the agreement localization to retrieve. Either `agreement_localization_id`,
     * `display_name` or `locale` can be used to retrieve the agreement localization, but cannot be set together.
     */
    public /*out*/ readonly locale!: pulumi.Output<string>;
    /**
     * A string that specifies the text next to the "continue" button in the end user interface. Accepted character are unicode
     * letters, combining marks, numeric characters, whitespace, and punctuation characters.
     */
    public readonly textButtonContinue!: pulumi.Output<string | undefined>;
    /**
     * A string that specifies the text next to the "decline" button in the end user interface. Accepted character are unicode
     * letters, combining marks, numeric characters, whitespace, and punctuation characters.
     */
    public readonly textButtonDecline!: pulumi.Output<string | undefined>;
    /**
     * A string that specifies the text next to the "accept" checkbox in the end user interface. Accepted character are unicode
     * letters, combining marks, numeric characters, whitespace, and punctuation characters.
     */
    public readonly textCheckboxAccept!: pulumi.Output<string | undefined>;

    /**
     * Create a AgreementLocalization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AgreementLocalizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AgreementLocalizationArgs | AgreementLocalizationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AgreementLocalizationState | undefined;
            resourceInputs["agreementId"] = state ? state.agreementId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["languageId"] = state ? state.languageId : undefined;
            resourceInputs["locale"] = state ? state.locale : undefined;
            resourceInputs["textButtonContinue"] = state ? state.textButtonContinue : undefined;
            resourceInputs["textButtonDecline"] = state ? state.textButtonDecline : undefined;
            resourceInputs["textCheckboxAccept"] = state ? state.textCheckboxAccept : undefined;
        } else {
            const args = argsOrState as AgreementLocalizationArgs | undefined;
            if ((!args || args.agreementId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'agreementId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.languageId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'languageId'");
            }
            resourceInputs["agreementId"] = args ? args.agreementId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["languageId"] = args ? args.languageId : undefined;
            resourceInputs["textButtonContinue"] = args ? args.textButtonContinue : undefined;
            resourceInputs["textButtonDecline"] = args ? args.textButtonDecline : undefined;
            resourceInputs["textCheckboxAccept"] = args ? args.textCheckboxAccept : undefined;
            resourceInputs["enabled"] = undefined /*out*/;
            resourceInputs["locale"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AgreementLocalization.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AgreementLocalization resources.
 */
export interface AgreementLocalizationState {
    /**
     * The ID of the agreement to associate the agreement localization with. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    agreementId?: pulumi.Input<string>;
    /**
     * A string used as the title of the agreement for the language presented to the user.
     */
    displayName?: pulumi.Input<string>;
    /**
     * A boolean that specifies whether the localization (and it's revision text) is enabled in the agreement.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the environment to associate the agreement localization with. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * The ID of the language in the PingOne environment that the localization applies to. Must be a valid PingOne resource ID.
     * This field is immutable and will trigger a replace plan if changed.
     */
    languageId?: pulumi.Input<string>;
    /**
     * A string used as the locale code of the agreement localization to retrieve. Either `agreement_localization_id`,
     * `display_name` or `locale` can be used to retrieve the agreement localization, but cannot be set together.
     */
    locale?: pulumi.Input<string>;
    /**
     * A string that specifies the text next to the "continue" button in the end user interface. Accepted character are unicode
     * letters, combining marks, numeric characters, whitespace, and punctuation characters.
     */
    textButtonContinue?: pulumi.Input<string>;
    /**
     * A string that specifies the text next to the "decline" button in the end user interface. Accepted character are unicode
     * letters, combining marks, numeric characters, whitespace, and punctuation characters.
     */
    textButtonDecline?: pulumi.Input<string>;
    /**
     * A string that specifies the text next to the "accept" checkbox in the end user interface. Accepted character are unicode
     * letters, combining marks, numeric characters, whitespace, and punctuation characters.
     */
    textCheckboxAccept?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AgreementLocalization resource.
 */
export interface AgreementLocalizationArgs {
    /**
     * The ID of the agreement to associate the agreement localization with. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    agreementId: pulumi.Input<string>;
    /**
     * A string used as the title of the agreement for the language presented to the user.
     */
    displayName: pulumi.Input<string>;
    /**
     * The ID of the environment to associate the agreement localization with. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    environmentId: pulumi.Input<string>;
    /**
     * The ID of the language in the PingOne environment that the localization applies to. Must be a valid PingOne resource ID.
     * This field is immutable and will trigger a replace plan if changed.
     */
    languageId: pulumi.Input<string>;
    /**
     * A string that specifies the text next to the "continue" button in the end user interface. Accepted character are unicode
     * letters, combining marks, numeric characters, whitespace, and punctuation characters.
     */
    textButtonContinue?: pulumi.Input<string>;
    /**
     * A string that specifies the text next to the "decline" button in the end user interface. Accepted character are unicode
     * letters, combining marks, numeric characters, whitespace, and punctuation characters.
     */
    textButtonDecline?: pulumi.Input<string>;
    /**
     * A string that specifies the text next to the "accept" checkbox in the end user interface. Accepted character are unicode
     * letters, combining marks, numeric characters, whitespace, and punctuation characters.
     */
    textCheckboxAccept?: pulumi.Input<string>;
}
