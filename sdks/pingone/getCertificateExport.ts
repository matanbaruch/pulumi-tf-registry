// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCertificateExport(args: GetCertificateExportArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateExportResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingone:index/getCertificateExport:getCertificateExport", {
        "environmentId": args.environmentId,
        "id": args.id,
        "keyId": args.keyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCertificateExport.
 */
export interface GetCertificateExportArgs {
    environmentId: string;
    id?: string;
    keyId: string;
}

/**
 * A collection of values returned by getCertificateExport.
 */
export interface GetCertificateExportResult {
    readonly environmentId: string;
    readonly id: string;
    readonly keyId: string;
    readonly pemFile: string;
    readonly pkcs7FileBase64: string;
}
export function getCertificateExportOutput(args: GetCertificateExportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateExportResult> {
    return pulumi.output(args).apply((a: any) => getCertificateExport(a, opts))
}

/**
 * A collection of arguments for invoking getCertificateExport.
 */
export interface GetCertificateExportOutputArgs {
    environmentId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    keyId: pulumi.Input<string>;
}
