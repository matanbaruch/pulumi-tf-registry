// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getResource(args: GetResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingone:index/getResource:getResource", {
        "environmentId": args.environmentId,
        "name": args.name,
        "resourceId": args.resourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getResource.
 */
export interface GetResourceArgs {
    environmentId: string;
    name?: string;
    resourceId?: string;
}

/**
 * A collection of values returned by getResource.
 */
export interface GetResourceResult {
    readonly accessTokenValiditySeconds: number;
    readonly applicationPermissionsSettings: outputs.GetResourceApplicationPermissionsSettings;
    readonly audience: string;
    readonly description: string;
    readonly environmentId: string;
    readonly id: string;
    readonly introspectEndpointAuthMethod: string;
    readonly name: string;
    readonly resourceId: string;
    readonly type: string;
}
export function getResourceOutput(args: GetResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourceResult> {
    return pulumi.output(args).apply((a: any) => getResource(a, opts))
}

/**
 * A collection of arguments for invoking getResource.
 */
export interface GetResourceOutputArgs {
    environmentId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
}
