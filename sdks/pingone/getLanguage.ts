// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLanguage(args: GetLanguageArgs, opts?: pulumi.InvokeOptions): Promise<GetLanguageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingone:index/getLanguage:getLanguage", {
        "environmentId": args.environmentId,
        "id": args.id,
        "languageId": args.languageId,
        "locale": args.locale,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLanguage.
 */
export interface GetLanguageArgs {
    environmentId: string;
    id?: string;
    languageId?: string;
    locale?: string;
}

/**
 * A collection of values returned by getLanguage.
 */
export interface GetLanguageResult {
    readonly customerAdded: boolean;
    readonly default: boolean;
    readonly enabled: boolean;
    readonly environmentId: string;
    readonly id: string;
    readonly languageId?: string;
    readonly locale?: string;
    readonly name: string;
}
export function getLanguageOutput(args: GetLanguageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLanguageResult> {
    return pulumi.output(args).apply((a: any) => getLanguage(a, opts))
}

/**
 * A collection of arguments for invoking getLanguage.
 */
export interface GetLanguageOutputArgs {
    environmentId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    languageId?: pulumi.Input<string>;
    locale?: pulumi.Input<string>;
}
