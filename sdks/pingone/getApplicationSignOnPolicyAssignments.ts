// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApplicationSignOnPolicyAssignments(args: GetApplicationSignOnPolicyAssignmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationSignOnPolicyAssignmentsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingone:index/getApplicationSignOnPolicyAssignments:getApplicationSignOnPolicyAssignments", {
        "applicationId": args.applicationId,
        "environmentId": args.environmentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplicationSignOnPolicyAssignments.
 */
export interface GetApplicationSignOnPolicyAssignmentsArgs {
    applicationId: string;
    environmentId: string;
}

/**
 * A collection of values returned by getApplicationSignOnPolicyAssignments.
 */
export interface GetApplicationSignOnPolicyAssignmentsResult {
    readonly applicationId: string;
    readonly environmentId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
}
export function getApplicationSignOnPolicyAssignmentsOutput(args: GetApplicationSignOnPolicyAssignmentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationSignOnPolicyAssignmentsResult> {
    return pulumi.output(args).apply((a: any) => getApplicationSignOnPolicyAssignments(a, opts))
}

/**
 * A collection of arguments for invoking getApplicationSignOnPolicyAssignments.
 */
export interface GetApplicationSignOnPolicyAssignmentsOutputArgs {
    applicationId: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
}
