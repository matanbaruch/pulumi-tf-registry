// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplication(args: GetApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingone:index/getApplication:getApplication", {
        "applicationId": args.applicationId,
        "environmentId": args.environmentId,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationArgs {
    applicationId?: string;
    environmentId: string;
    name?: string;
}

/**
 * A collection of values returned by getApplication.
 */
export interface GetApplicationResult {
    readonly accessControlGroupOptions: outputs.GetApplicationAccessControlGroupOptions;
    readonly accessControlRoleType: string;
    readonly applicationId?: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly environmentId: string;
    readonly externalLinkOptions: outputs.GetApplicationExternalLinkOptions;
    readonly hiddenFromAppPortal: boolean;
    readonly icon: outputs.GetApplicationIcon;
    readonly id: string;
    readonly loginPageUrl: string;
    readonly name?: string;
    readonly oidcOptions: outputs.GetApplicationOidcOptions;
    readonly samlOptions: outputs.GetApplicationSamlOptions;
    readonly tags: string[];
}
export function getApplicationOutput(args: GetApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationResult> {
    return pulumi.output(args).apply((a: any) => getApplication(a, opts))
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationOutputArgs {
    applicationId?: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
