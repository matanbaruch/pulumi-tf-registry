// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AlertChannel extends pulumi.CustomResource {
    /**
     * Get an existing AlertChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlertChannelState, opts?: pulumi.CustomResourceOptions): AlertChannel {
        return new AlertChannel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingone:index/alertChannel:AlertChannel';

    /**
     * Returns true if the given object is an instance of AlertChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlertChannel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlertChannel.__pulumiType;
    }

    /**
     * A set of strings that specifies the administrator email addresses to send the alerts to.
     */
    public readonly addresses!: pulumi.Output<string[]>;
    /**
     * A string that specifies the name to assign to the alert channel.
     */
    public readonly alertName!: pulumi.Output<string | undefined>;
    /**
     * A string that specifies the alert channel type. Currently, this must be `EMAIL`. Options are `EMAIL`.
     */
    public readonly channelType!: pulumi.Output<string>;
    /**
     * The ID of the environment to manage an alert channel for. Must be a valid PingOne resource ID. This field is immutable
     * and will trigger a replace plan if changed.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * A set of strings that specifies the list of alert types that administrators will not be emailed alerts for. If left
     * undefined, no alert types are excluded. Options are `CERTIFICATE_EXPIRED`, `CERTIFICATE_EXPIRING`,
     * `GATEWAY_VERSION_DEPRECATED`, `GATEWAY_VERSION_DEPRECATING`, `KEY_PAIR_EXPIRED`, `KEY_PAIR_EXPIRING`,
     * `LICENSE_90_PERCENT_USER_SOFT_LIMIT`, `LICENSE_EXPIRED`, `LICENSE_EXPIRING`, `LICENSE_ROTATED`,
     * `LICENSE_USER_HARD_LIMIT_EXCEEDED`, `LICENSE_USER_SOFT_LIMIT_EXCEEDED`, `RISK_CONFIGURATION`.
     */
    public readonly excludeAlertTypes!: pulumi.Output<string[] | undefined>;
    /**
     * A set of strings that specifies the list of alert types that administrators will be emailed alerts for. Options are
     * `CERTIFICATE_EXPIRED`, `CERTIFICATE_EXPIRING`, `GATEWAY_VERSION_DEPRECATED`, `GATEWAY_VERSION_DEPRECATING`,
     * `KEY_PAIR_EXPIRED`, `KEY_PAIR_EXPIRING`, `LICENSE_90_PERCENT_USER_SOFT_LIMIT`, `LICENSE_EXPIRED`, `LICENSE_EXPIRING`,
     * `LICENSE_ROTATED`, `LICENSE_USER_HARD_LIMIT_EXCEEDED`, `LICENSE_USER_SOFT_LIMIT_EXCEEDED`, `RISK_CONFIGURATION`.
     */
    public readonly includeAlertTypes!: pulumi.Output<string[]>;
    /**
     * A set of strings that specifies the severity to filters alerts by. Options are `ERROR`, `INFO`, `WARNING`.
     */
    public readonly includeSeverities!: pulumi.Output<string[]>;

    /**
     * Create a AlertChannel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlertChannelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlertChannelArgs | AlertChannelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlertChannelState | undefined;
            resourceInputs["addresses"] = state ? state.addresses : undefined;
            resourceInputs["alertName"] = state ? state.alertName : undefined;
            resourceInputs["channelType"] = state ? state.channelType : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["excludeAlertTypes"] = state ? state.excludeAlertTypes : undefined;
            resourceInputs["includeAlertTypes"] = state ? state.includeAlertTypes : undefined;
            resourceInputs["includeSeverities"] = state ? state.includeSeverities : undefined;
        } else {
            const args = argsOrState as AlertChannelArgs | undefined;
            if ((!args || args.addresses === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addresses'");
            }
            if ((!args || args.channelType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'channelType'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.includeAlertTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'includeAlertTypes'");
            }
            if ((!args || args.includeSeverities === undefined) && !opts.urn) {
                throw new Error("Missing required property 'includeSeverities'");
            }
            resourceInputs["addresses"] = args ? args.addresses : undefined;
            resourceInputs["alertName"] = args ? args.alertName : undefined;
            resourceInputs["channelType"] = args ? args.channelType : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["excludeAlertTypes"] = args ? args.excludeAlertTypes : undefined;
            resourceInputs["includeAlertTypes"] = args ? args.includeAlertTypes : undefined;
            resourceInputs["includeSeverities"] = args ? args.includeSeverities : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlertChannel.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AlertChannel resources.
 */
export interface AlertChannelState {
    /**
     * A set of strings that specifies the administrator email addresses to send the alerts to.
     */
    addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A string that specifies the name to assign to the alert channel.
     */
    alertName?: pulumi.Input<string>;
    /**
     * A string that specifies the alert channel type. Currently, this must be `EMAIL`. Options are `EMAIL`.
     */
    channelType?: pulumi.Input<string>;
    /**
     * The ID of the environment to manage an alert channel for. Must be a valid PingOne resource ID. This field is immutable
     * and will trigger a replace plan if changed.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * A set of strings that specifies the list of alert types that administrators will not be emailed alerts for. If left
     * undefined, no alert types are excluded. Options are `CERTIFICATE_EXPIRED`, `CERTIFICATE_EXPIRING`,
     * `GATEWAY_VERSION_DEPRECATED`, `GATEWAY_VERSION_DEPRECATING`, `KEY_PAIR_EXPIRED`, `KEY_PAIR_EXPIRING`,
     * `LICENSE_90_PERCENT_USER_SOFT_LIMIT`, `LICENSE_EXPIRED`, `LICENSE_EXPIRING`, `LICENSE_ROTATED`,
     * `LICENSE_USER_HARD_LIMIT_EXCEEDED`, `LICENSE_USER_SOFT_LIMIT_EXCEEDED`, `RISK_CONFIGURATION`.
     */
    excludeAlertTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of strings that specifies the list of alert types that administrators will be emailed alerts for. Options are
     * `CERTIFICATE_EXPIRED`, `CERTIFICATE_EXPIRING`, `GATEWAY_VERSION_DEPRECATED`, `GATEWAY_VERSION_DEPRECATING`,
     * `KEY_PAIR_EXPIRED`, `KEY_PAIR_EXPIRING`, `LICENSE_90_PERCENT_USER_SOFT_LIMIT`, `LICENSE_EXPIRED`, `LICENSE_EXPIRING`,
     * `LICENSE_ROTATED`, `LICENSE_USER_HARD_LIMIT_EXCEEDED`, `LICENSE_USER_SOFT_LIMIT_EXCEEDED`, `RISK_CONFIGURATION`.
     */
    includeAlertTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of strings that specifies the severity to filters alerts by. Options are `ERROR`, `INFO`, `WARNING`.
     */
    includeSeverities?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a AlertChannel resource.
 */
export interface AlertChannelArgs {
    /**
     * A set of strings that specifies the administrator email addresses to send the alerts to.
     */
    addresses: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A string that specifies the name to assign to the alert channel.
     */
    alertName?: pulumi.Input<string>;
    /**
     * A string that specifies the alert channel type. Currently, this must be `EMAIL`. Options are `EMAIL`.
     */
    channelType: pulumi.Input<string>;
    /**
     * The ID of the environment to manage an alert channel for. Must be a valid PingOne resource ID. This field is immutable
     * and will trigger a replace plan if changed.
     */
    environmentId: pulumi.Input<string>;
    /**
     * A set of strings that specifies the list of alert types that administrators will not be emailed alerts for. If left
     * undefined, no alert types are excluded. Options are `CERTIFICATE_EXPIRED`, `CERTIFICATE_EXPIRING`,
     * `GATEWAY_VERSION_DEPRECATED`, `GATEWAY_VERSION_DEPRECATING`, `KEY_PAIR_EXPIRED`, `KEY_PAIR_EXPIRING`,
     * `LICENSE_90_PERCENT_USER_SOFT_LIMIT`, `LICENSE_EXPIRED`, `LICENSE_EXPIRING`, `LICENSE_ROTATED`,
     * `LICENSE_USER_HARD_LIMIT_EXCEEDED`, `LICENSE_USER_SOFT_LIMIT_EXCEEDED`, `RISK_CONFIGURATION`.
     */
    excludeAlertTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of strings that specifies the list of alert types that administrators will be emailed alerts for. Options are
     * `CERTIFICATE_EXPIRED`, `CERTIFICATE_EXPIRING`, `GATEWAY_VERSION_DEPRECATED`, `GATEWAY_VERSION_DEPRECATING`,
     * `KEY_PAIR_EXPIRED`, `KEY_PAIR_EXPIRING`, `LICENSE_90_PERCENT_USER_SOFT_LIMIT`, `LICENSE_EXPIRED`, `LICENSE_EXPIRING`,
     * `LICENSE_ROTATED`, `LICENSE_USER_HARD_LIMIT_EXCEEDED`, `LICENSE_USER_SOFT_LIMIT_EXCEEDED`, `RISK_CONFIGURATION`.
     */
    includeAlertTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of strings that specifies the severity to filters alerts by. Options are `ERROR`, `INFO`, `WARNING`.
     */
    includeSeverities: pulumi.Input<pulumi.Input<string>[]>;
}
