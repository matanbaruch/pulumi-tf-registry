// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApplicationResourcePermission extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationResourcePermission resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationResourcePermissionState, opts?: pulumi.CustomResourceOptions): ApplicationResourcePermission {
        return new ApplicationResourcePermission(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingone:index/applicationResourcePermission:ApplicationResourcePermission';

    /**
     * Returns true if the given object is an instance of ApplicationResourcePermission.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationResourcePermission {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationResourcePermission.__pulumiType;
    }

    /**
     * A string that specifies the action associated with this permission. The action must contain only Unicode letters, marks,
     * numbers, spaces, forward slashes, dots, apostrophes, underscores, or hyphens.
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * The ID of the application resource to create and manage permissions for. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    public readonly applicationResourceId!: pulumi.Output<string>;
    /**
     * A string that specifies the permission's description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the environment to create the resource attribute in. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * A single object that describes the associated application resource.
     */
    public /*out*/ readonly resource!: pulumi.Output<outputs.ApplicationResourcePermissionResource>;

    /**
     * Create a ApplicationResourcePermission resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationResourcePermissionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationResourcePermissionArgs | ApplicationResourcePermissionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationResourcePermissionState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["applicationResourceId"] = state ? state.applicationResourceId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["resource"] = state ? state.resource : undefined;
        } else {
            const args = argsOrState as ApplicationResourcePermissionArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.applicationResourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationResourceId'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["applicationResourceId"] = args ? args.applicationResourceId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["resource"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationResourcePermission.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApplicationResourcePermission resources.
 */
export interface ApplicationResourcePermissionState {
    /**
     * A string that specifies the action associated with this permission. The action must contain only Unicode letters, marks,
     * numbers, spaces, forward slashes, dots, apostrophes, underscores, or hyphens.
     */
    action?: pulumi.Input<string>;
    /**
     * The ID of the application resource to create and manage permissions for. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    applicationResourceId?: pulumi.Input<string>;
    /**
     * A string that specifies the permission's description.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the environment to create the resource attribute in. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * A single object that describes the associated application resource.
     */
    resource?: pulumi.Input<inputs.ApplicationResourcePermissionResource>;
}

/**
 * The set of arguments for constructing a ApplicationResourcePermission resource.
 */
export interface ApplicationResourcePermissionArgs {
    /**
     * A string that specifies the action associated with this permission. The action must contain only Unicode letters, marks,
     * numbers, spaces, forward slashes, dots, apostrophes, underscores, or hyphens.
     */
    action: pulumi.Input<string>;
    /**
     * The ID of the application resource to create and manage permissions for. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    applicationResourceId: pulumi.Input<string>;
    /**
     * A string that specifies the permission's description.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the environment to create the resource attribute in. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    environmentId: pulumi.Input<string>;
}
