// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCertificateSigningRequest(args: GetCertificateSigningRequestArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateSigningRequestResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingone:index/getCertificateSigningRequest:getCertificateSigningRequest", {
        "environmentId": args.environmentId,
        "id": args.id,
        "keyId": args.keyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCertificateSigningRequest.
 */
export interface GetCertificateSigningRequestArgs {
    environmentId: string;
    id?: string;
    keyId: string;
}

/**
 * A collection of values returned by getCertificateSigningRequest.
 */
export interface GetCertificateSigningRequestResult {
    readonly environmentId: string;
    readonly id: string;
    readonly keyId: string;
    readonly pemFile: string;
    readonly pkcs10FileBase64: string;
}
export function getCertificateSigningRequestOutput(args: GetCertificateSigningRequestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateSigningRequestResult> {
    return pulumi.output(args).apply((a: any) => getCertificateSigningRequest(a, opts))
}

/**
 * A collection of arguments for invoking getCertificateSigningRequest.
 */
export interface GetCertificateSigningRequestOutputArgs {
    environmentId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    keyId: pulumi.Input<string>;
}
