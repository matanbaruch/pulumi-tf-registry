// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEnvironments(args: GetEnvironmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvironmentsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingone:index/getEnvironments:getEnvironments", {
        "scimFilter": args.scimFilter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEnvironments.
 */
export interface GetEnvironmentsArgs {
    scimFilter: string;
}

/**
 * A collection of values returned by getEnvironments.
 */
export interface GetEnvironmentsResult {
    readonly id: string;
    readonly ids: string[];
    readonly scimFilter: string;
}
export function getEnvironmentsOutput(args: GetEnvironmentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnvironmentsResult> {
    return pulumi.output(args).apply((a: any) => getEnvironments(a, opts))
}

/**
 * A collection of arguments for invoking getEnvironments.
 */
export interface GetEnvironmentsOutputArgs {
    scimFilter: pulumi.Input<string>;
}
