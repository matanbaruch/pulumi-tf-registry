// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Form extends pulumi.CustomResource {
    /**
     * Get an existing Form resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FormState, opts?: pulumi.CustomResourceOptions): Form {
        return new Form(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingone:index/form:Form';

    /**
     * Returns true if the given object is an instance of Form.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Form {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Form.__pulumiType;
    }

    /**
     * A string that specifies the type of form. Options are `CUSTOM` (allows the form to be built with fields that do not map
     * specifically to the PingOne directory attributes). Defaults to `CUSTOM`.
     */
    public readonly category!: pulumi.Output<string>;
    /**
     * An integer that specifies the number of columns in the form (min = `1`; max = `4`).
     */
    public readonly cols!: pulumi.Output<number>;
    /**
     * A single object that specifies the form configuration elements.
     */
    public readonly components!: pulumi.Output<outputs.FormComponents>;
    /**
     * A string that specifies the description of the form.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the environment to manage the form in. Must be a valid PingOne resource ID. This field is immutable and will
     * trigger a replace plan if changed.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * A set of strings that specifies the field types in the form. Options are `CHECKBOX`, `COMBOBOX`, `DIVIDER`, `DROPDOWN`,
     * `EMPTY_FIELD`, `ERROR_DISPLAY`, `FLOW_BUTTON`, `FLOW_LINK`, `PASSWORD`, `PASSWORD_VERIFY`, `QR_CODE`, `RADIO`,
     * `RECAPTCHA_V2`, `SLATE_TEXTBLOB`, `SUBMIT_BUTTON`, `TEXT`, `TEXTBLOB`.
     */
    public /*out*/ readonly fieldTypes!: pulumi.Output<string[]>;
    /**
     * A boolean that specifies whether optional fields are highlighted in the rendered form.
     */
    public readonly markOptional!: pulumi.Output<boolean>;
    /**
     * A boolean that specifies whether required fields are highlighted in the rendered form.
     */
    public readonly markRequired!: pulumi.Output<boolean>;
    /**
     * A string that specifies the form name, which must be provided and must be unique within an environment.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A string that specifies how to translate the text strings in the form. Options are `DEFAULT_VALUE`, `KEY`, `TRANSLATE`.
     */
    public readonly translationMethod!: pulumi.Output<string | undefined>;

    /**
     * Create a Form resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FormArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FormArgs | FormState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FormState | undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["cols"] = state ? state.cols : undefined;
            resourceInputs["components"] = state ? state.components : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["fieldTypes"] = state ? state.fieldTypes : undefined;
            resourceInputs["markOptional"] = state ? state.markOptional : undefined;
            resourceInputs["markRequired"] = state ? state.markRequired : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["translationMethod"] = state ? state.translationMethod : undefined;
        } else {
            const args = argsOrState as FormArgs | undefined;
            if ((!args || args.cols === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cols'");
            }
            if ((!args || args.components === undefined) && !opts.urn) {
                throw new Error("Missing required property 'components'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["cols"] = args ? args.cols : undefined;
            resourceInputs["components"] = args ? args.components : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["markOptional"] = args ? args.markOptional : undefined;
            resourceInputs["markRequired"] = args ? args.markRequired : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["translationMethod"] = args ? args.translationMethod : undefined;
            resourceInputs["fieldTypes"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Form.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Form resources.
 */
export interface FormState {
    /**
     * A string that specifies the type of form. Options are `CUSTOM` (allows the form to be built with fields that do not map
     * specifically to the PingOne directory attributes). Defaults to `CUSTOM`.
     */
    category?: pulumi.Input<string>;
    /**
     * An integer that specifies the number of columns in the form (min = `1`; max = `4`).
     */
    cols?: pulumi.Input<number>;
    /**
     * A single object that specifies the form configuration elements.
     */
    components?: pulumi.Input<inputs.FormComponents>;
    /**
     * A string that specifies the description of the form.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the environment to manage the form in. Must be a valid PingOne resource ID. This field is immutable and will
     * trigger a replace plan if changed.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * A set of strings that specifies the field types in the form. Options are `CHECKBOX`, `COMBOBOX`, `DIVIDER`, `DROPDOWN`,
     * `EMPTY_FIELD`, `ERROR_DISPLAY`, `FLOW_BUTTON`, `FLOW_LINK`, `PASSWORD`, `PASSWORD_VERIFY`, `QR_CODE`, `RADIO`,
     * `RECAPTCHA_V2`, `SLATE_TEXTBLOB`, `SUBMIT_BUTTON`, `TEXT`, `TEXTBLOB`.
     */
    fieldTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A boolean that specifies whether optional fields are highlighted in the rendered form.
     */
    markOptional?: pulumi.Input<boolean>;
    /**
     * A boolean that specifies whether required fields are highlighted in the rendered form.
     */
    markRequired?: pulumi.Input<boolean>;
    /**
     * A string that specifies the form name, which must be provided and must be unique within an environment.
     */
    name?: pulumi.Input<string>;
    /**
     * A string that specifies how to translate the text strings in the form. Options are `DEFAULT_VALUE`, `KEY`, `TRANSLATE`.
     */
    translationMethod?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Form resource.
 */
export interface FormArgs {
    /**
     * A string that specifies the type of form. Options are `CUSTOM` (allows the form to be built with fields that do not map
     * specifically to the PingOne directory attributes). Defaults to `CUSTOM`.
     */
    category?: pulumi.Input<string>;
    /**
     * An integer that specifies the number of columns in the form (min = `1`; max = `4`).
     */
    cols: pulumi.Input<number>;
    /**
     * A single object that specifies the form configuration elements.
     */
    components: pulumi.Input<inputs.FormComponents>;
    /**
     * A string that specifies the description of the form.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the environment to manage the form in. Must be a valid PingOne resource ID. This field is immutable and will
     * trigger a replace plan if changed.
     */
    environmentId: pulumi.Input<string>;
    /**
     * A boolean that specifies whether optional fields are highlighted in the rendered form.
     */
    markOptional?: pulumi.Input<boolean>;
    /**
     * A boolean that specifies whether required fields are highlighted in the rendered form.
     */
    markRequired?: pulumi.Input<boolean>;
    /**
     * A string that specifies the form name, which must be provided and must be unique within an environment.
     */
    name?: pulumi.Input<string>;
    /**
     * A string that specifies how to translate the text strings in the form. Options are `DEFAULT_VALUE`, `KEY`, `TRANSLATE`.
     */
    translationMethod?: pulumi.Input<string>;
}
