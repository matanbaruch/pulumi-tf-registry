// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class TrustedEmailDomain extends pulumi.CustomResource {
    /**
     * Get an existing TrustedEmailDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TrustedEmailDomainState, opts?: pulumi.CustomResourceOptions): TrustedEmailDomain {
        return new TrustedEmailDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingone:index/trustedEmailDomain:TrustedEmailDomain';

    /**
     * Returns true if the given object is an instance of TrustedEmailDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TrustedEmailDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrustedEmailDomain.__pulumiType;
    }

    /**
     * A string that specifies the domain name to use, which must be provided and must be unique within an environment (for
     * example, `demo.bxretail.org`).
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * The ID of the environment to add the trusted email domain in. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    public readonly environmentId!: pulumi.Output<string>;

    /**
     * Create a TrustedEmailDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TrustedEmailDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TrustedEmailDomainArgs | TrustedEmailDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TrustedEmailDomainState | undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
        } else {
            const args = argsOrState as TrustedEmailDomainArgs | undefined;
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TrustedEmailDomain.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TrustedEmailDomain resources.
 */
export interface TrustedEmailDomainState {
    /**
     * A string that specifies the domain name to use, which must be provided and must be unique within an environment (for
     * example, `demo.bxretail.org`).
     */
    domainName?: pulumi.Input<string>;
    /**
     * The ID of the environment to add the trusted email domain in. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    environmentId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TrustedEmailDomain resource.
 */
export interface TrustedEmailDomainArgs {
    /**
     * A string that specifies the domain name to use, which must be provided and must be unique within an environment (for
     * example, `demo.bxretail.org`).
     */
    domainName: pulumi.Input<string>;
    /**
     * The ID of the environment to add the trusted email domain in. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    environmentId: pulumi.Input<string>;
}
