// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSchema(args: GetSchemaArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingone:index/getSchema:getSchema", {
        "environmentId": args.environmentId,
        "name": args.name,
        "schemaId": args.schemaId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchema.
 */
export interface GetSchemaArgs {
    environmentId: string;
    name?: string;
    schemaId?: string;
}

/**
 * A collection of values returned by getSchema.
 */
export interface GetSchemaResult {
    readonly description: string;
    readonly environmentId: string;
    readonly id: string;
    readonly name?: string;
    readonly schemaId?: string;
}
export function getSchemaOutput(args: GetSchemaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaResult> {
    return pulumi.output(args).apply((a: any) => getSchema(a, opts))
}

/**
 * A collection of arguments for invoking getSchema.
 */
export interface GetSchemaOutputArgs {
    environmentId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    schemaId?: pulumi.Input<string>;
}
