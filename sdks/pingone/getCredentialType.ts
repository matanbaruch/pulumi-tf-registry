// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCredentialType(args: GetCredentialTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetCredentialTypeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingone:index/getCredentialType:getCredentialType", {
        "credentialTypeId": args.credentialTypeId,
        "environmentId": args.environmentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCredentialType.
 */
export interface GetCredentialTypeArgs {
    credentialTypeId: string;
    environmentId: string;
}

/**
 * A collection of values returned by getCredentialType.
 */
export interface GetCredentialTypeResult {
    readonly cardDesignTemplate: string;
    readonly cardType: string;
    readonly createdAt: string;
    readonly credentialTypeId: string;
    readonly description: string;
    readonly environmentId: string;
    readonly id: string;
    readonly issuerId: string;
    readonly managementMode: string;
    readonly metadata: outputs.GetCredentialTypeMetadata;
    readonly revokeOnDelete: boolean;
    readonly title: string;
    readonly updatedAt: string;
}
export function getCredentialTypeOutput(args: GetCredentialTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCredentialTypeResult> {
    return pulumi.output(args).apply((a: any) => getCredentialType(a, opts))
}

/**
 * A collection of arguments for invoking getCredentialType.
 */
export interface GetCredentialTypeOutputArgs {
    credentialTypeId: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
}
