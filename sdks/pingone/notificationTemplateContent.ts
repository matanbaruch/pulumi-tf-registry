// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NotificationTemplateContent extends pulumi.CustomResource {
    /**
     * Get an existing NotificationTemplateContent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NotificationTemplateContentState, opts?: pulumi.CustomResourceOptions): NotificationTemplateContent {
        return new NotificationTemplateContent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingone:index/notificationTemplateContent:NotificationTemplateContent';

    /**
     * Returns true if the given object is an instance of NotificationTemplateContent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NotificationTemplateContent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NotificationTemplateContent.__pulumiType;
    }

    /**
     * A boolean that specifies whether the template is a predefined default template.
     */
    public /*out*/ readonly default!: pulumi.Output<boolean>;
    /**
     * A single object that specifies properties for the `email` delivery method. Exactly one of `email`, `push`, `sms` or
     * `voice` must be specified.
     */
    public readonly email!: pulumi.Output<outputs.NotificationTemplateContentEmail | undefined>;
    /**
     * The ID of the environment to manage notification template contents in. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * A string that specifies an ISO standard language code. For more information about standard language codes, see [ISO
     * Language Code Table](http://www.lingoes.net/en/translator/langcode.htm). Options are `aa`, `ab`, `ae`, `af`, `af-ZA`,
     * `ak`, `am`, `an`, `ar`, `ar-AE`, `ar-BH`, `ar-DZ`, `ar-EG`, `ar-IQ`, `ar-JO`, `ar-KW`, `ar-LB`, `ar-LY`, `ar-MA`,
     * `ar-OM`, `ar-QA`, `ar-SA`, `ar-SY`, `ar-TN`, `ar-YE`, `as`, `av`, `ay`, `az`, `az-AZ`, `ba`, `be`, `be-BY`, `bg`,
     * `bg-BG`, `bi`, `bm`, `bn`, `bo`, `br`, `bs`, `bs-BA`, `ca`, `ca-ES`, `ce`, `ch`, `cmn-CN`, `cmn-TW`, `co`, `cr`, `cs`,
     * `cs-CZ`, `cu`, `cv`, `cy`, `cy-GB`, `da`, `da-DK`, `de`, `de-AT`, `de-CH`, `de-DE`, `de-LI`, `de-LU`, `dv`, `dv-MV`,
     * `dz`, `ee`, `el`, `el-GR`, `en`, `en-AU`, `en-BZ`, `en-CA`, `en-CB`, `en-GB`, `en-GB-WLS`, `en-IE`, `en-IN`, `en-JM`,
     * `en-NZ`, `en-PH`, `en-TT`, `en-US`, `en-ZA`, `en-ZW`, `eo`, `es`, `es-AR`, `es-BO`, `es-CL`, `es-CO`, `es-CR`, `es-DO`,
     * `es-EC`, `es-ES`, `es-GT`, `es-HN`, `es-MX`, `es-NI`, `es-PA`, `es-PE`, `es-PR`, `es-PY`, `es-SV`, `es-US`, `es-UY`,
     * `es-VE`, `et`, `et-EE`, `eu`, `eu-ES`, `fa`, `fa-IR`, `ff`, `fi`, `fi-FI`, `fj`, `fo`, `fo-FO`, `fr`, `fr-BE`, `fr-CA`,
     * `fr-CH`, `fr-FR`, `fr-LU`, `fr-MC`, `fy`, `ga`, `gd`, `gl`, `gl-ES`, `gn`, `gu`, `gu-IN`, `gv`, `ha`, `he`, `he-IL`,
     * `hi`, `hi-IN`, `ho`, `hr`, `hr-BA`, `hr-HR`, `ht`, `hu`, `hu-HU`, `hy`, `hy-AM`, `hz`, `ia`, `id`, `id-ID`, `ie`, `ig`,
     * `ii`, `ik`, `io`, `is`, `is-IS`, `it`, `it-CH`, `it-IT`, `iu`, `ja`, `ja-JP`, `jv`, `ka`, `ka-GE`, `kg`, `ki`, `kj`,
     * `kk`, `kk-KZ`, `kl`, `km`, `kn`, `kn-IN`, `ko`, `ko-KR`, `kok`, `kok-IN`, `kr`, `ks`, `ku`, `kv`, `kw`, `ky`, `ky-KG`,
     * `la`, `lb`, `lg`, `li`, `ln`, `lo`, `lt`, `lt-LT`, `lu`, `lv`, `lv-LV`, `mg`, `mh`, `mi`, `mi-NZ`, `mk`, `mk-MK`, `ml`,
     * `mn`, `mn-MN`, `mr`, `mr-IN`, `ms`, `ms-BN`, `ms-MY`, `mt`, `mt-MT`, `my`, `na`, `nb`, `nb-NO`, `nd`, `ne`, `ng`, `nl`,
     * `nl-BE`, `nl-NL`, `nn`, `nn-NO`, `no`, `nr`, `ns`, `ns-ZA`, `nv`, `ny`, `oc`, `oj`, `om`, `or`, `os`, `pa`, `pa-IN`,
     * `pi`, `pl`, `pl-PL`, `ps`, `ps-AR`, `pt`, `pt-BR`, `pt-PT`, `qu`, `qu-BO`, `qu-EC`, `qu-PE`, `rm`, `rn`, `ro`, `ro-RO`,
     * `ru`, `ru-RU`, `rw`, `sa`, `sa-IN`, `sc`, `sd`, `se`, `se-FI`, `se-NO`, `se-SE`, `sg`, `si`, `sk`, `sk-SK`, `sl`,
     * `sl-SI`, `sm`, `sn`, `so`, `sq`, `sq-AL`, `sr`, `sr-BA`, `sr-SP`, `ss`, `st`, `su`, `sv`, `sv-FI`, `sv-SE`, `sw`,
     * `sw-KE`, `syr`, `syr-SY`, `ta`, `ta-IN`, `te`, `te-IN`, `tg`, `th`, `th-TH`, `ti`, `tk`, `tl`, `tl-PH`, `tn`, `tn-ZA`,
     * `to`, `tr`, `tr-TR`, `ts`, `tt`, `tt-RU`, `tw`, `ty`, `ug`, `uk`, `uk-UA`, `ur`, `ur-PK`, `uz`, `uz-UZ`, `ve`, `vi`,
     * `vi-VN`, `vo`, `wa`, `wo`, `xh`, `xh-ZA`, `yi`, `yo`, `yue-CN`, `za`, `zh`, `zh-CN`, `zh-HK`, `zh-MO`, `zh-SG`, `zh-TW`,
     * `zu`, `zu-ZA`. This field is immutable and will trigger a replace plan if changed.
     */
    public readonly locale!: pulumi.Output<string>;
    /**
     * A single object that specifies properties for the `push` delivery method. Exactly one of `email`, `push`, `sms` or
     * `voice` must be specified.
     */
    public readonly push!: pulumi.Output<outputs.NotificationTemplateContentPush | undefined>;
    /**
     * A single object that specifies properties for the `sms` delivery method. Exactly one of `email`, `push`, `sms` or
     * `voice` must be specified.
     */
    public readonly sms!: pulumi.Output<outputs.NotificationTemplateContentSms | undefined>;
    /**
     * A string that specifies the ID of the template to manage localised contents for. Options are `credential_issued`,
     * `credential_revoked`, `credential_updated`, `credential_verification`, `device_pairing`, `digital_wallet_pairing`,
     * `email_phone_verification`, `email_verification_admin`, `email_verification_user`, `general`, `id_verification`,
     * `new_device_paired`, `recovery_code_template`, `strong_authentication`, `transaction`, `verification_code_template`.
     * This field is immutable and will trigger a replace plan if changed.
     */
    public readonly templateName!: pulumi.Output<string>;
    /**
     * A string that specifies the unique user-defined name for each content variant that uses the same template +
     * `deliveryMethod` + `locale` combination. This property is case insensitive and has a limit of 100 characters.
     */
    public readonly variant!: pulumi.Output<string | undefined>;
    /**
     * A single object that specifies properties for the `voice` delivery method. Exactly one of `email`, `push`, `sms` or
     * `voice` must be specified.
     */
    public readonly voice!: pulumi.Output<outputs.NotificationTemplateContentVoice | undefined>;

    /**
     * Create a NotificationTemplateContent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NotificationTemplateContentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NotificationTemplateContentArgs | NotificationTemplateContentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NotificationTemplateContentState | undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["locale"] = state ? state.locale : undefined;
            resourceInputs["push"] = state ? state.push : undefined;
            resourceInputs["sms"] = state ? state.sms : undefined;
            resourceInputs["templateName"] = state ? state.templateName : undefined;
            resourceInputs["variant"] = state ? state.variant : undefined;
            resourceInputs["voice"] = state ? state.voice : undefined;
        } else {
            const args = argsOrState as NotificationTemplateContentArgs | undefined;
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.locale === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locale'");
            }
            if ((!args || args.templateName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateName'");
            }
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["locale"] = args ? args.locale : undefined;
            resourceInputs["push"] = args ? args.push : undefined;
            resourceInputs["sms"] = args ? args.sms : undefined;
            resourceInputs["templateName"] = args ? args.templateName : undefined;
            resourceInputs["variant"] = args ? args.variant : undefined;
            resourceInputs["voice"] = args ? args.voice : undefined;
            resourceInputs["default"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NotificationTemplateContent.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NotificationTemplateContent resources.
 */
export interface NotificationTemplateContentState {
    /**
     * A boolean that specifies whether the template is a predefined default template.
     */
    default?: pulumi.Input<boolean>;
    /**
     * A single object that specifies properties for the `email` delivery method. Exactly one of `email`, `push`, `sms` or
     * `voice` must be specified.
     */
    email?: pulumi.Input<inputs.NotificationTemplateContentEmail>;
    /**
     * The ID of the environment to manage notification template contents in. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * A string that specifies an ISO standard language code. For more information about standard language codes, see [ISO
     * Language Code Table](http://www.lingoes.net/en/translator/langcode.htm). Options are `aa`, `ab`, `ae`, `af`, `af-ZA`,
     * `ak`, `am`, `an`, `ar`, `ar-AE`, `ar-BH`, `ar-DZ`, `ar-EG`, `ar-IQ`, `ar-JO`, `ar-KW`, `ar-LB`, `ar-LY`, `ar-MA`,
     * `ar-OM`, `ar-QA`, `ar-SA`, `ar-SY`, `ar-TN`, `ar-YE`, `as`, `av`, `ay`, `az`, `az-AZ`, `ba`, `be`, `be-BY`, `bg`,
     * `bg-BG`, `bi`, `bm`, `bn`, `bo`, `br`, `bs`, `bs-BA`, `ca`, `ca-ES`, `ce`, `ch`, `cmn-CN`, `cmn-TW`, `co`, `cr`, `cs`,
     * `cs-CZ`, `cu`, `cv`, `cy`, `cy-GB`, `da`, `da-DK`, `de`, `de-AT`, `de-CH`, `de-DE`, `de-LI`, `de-LU`, `dv`, `dv-MV`,
     * `dz`, `ee`, `el`, `el-GR`, `en`, `en-AU`, `en-BZ`, `en-CA`, `en-CB`, `en-GB`, `en-GB-WLS`, `en-IE`, `en-IN`, `en-JM`,
     * `en-NZ`, `en-PH`, `en-TT`, `en-US`, `en-ZA`, `en-ZW`, `eo`, `es`, `es-AR`, `es-BO`, `es-CL`, `es-CO`, `es-CR`, `es-DO`,
     * `es-EC`, `es-ES`, `es-GT`, `es-HN`, `es-MX`, `es-NI`, `es-PA`, `es-PE`, `es-PR`, `es-PY`, `es-SV`, `es-US`, `es-UY`,
     * `es-VE`, `et`, `et-EE`, `eu`, `eu-ES`, `fa`, `fa-IR`, `ff`, `fi`, `fi-FI`, `fj`, `fo`, `fo-FO`, `fr`, `fr-BE`, `fr-CA`,
     * `fr-CH`, `fr-FR`, `fr-LU`, `fr-MC`, `fy`, `ga`, `gd`, `gl`, `gl-ES`, `gn`, `gu`, `gu-IN`, `gv`, `ha`, `he`, `he-IL`,
     * `hi`, `hi-IN`, `ho`, `hr`, `hr-BA`, `hr-HR`, `ht`, `hu`, `hu-HU`, `hy`, `hy-AM`, `hz`, `ia`, `id`, `id-ID`, `ie`, `ig`,
     * `ii`, `ik`, `io`, `is`, `is-IS`, `it`, `it-CH`, `it-IT`, `iu`, `ja`, `ja-JP`, `jv`, `ka`, `ka-GE`, `kg`, `ki`, `kj`,
     * `kk`, `kk-KZ`, `kl`, `km`, `kn`, `kn-IN`, `ko`, `ko-KR`, `kok`, `kok-IN`, `kr`, `ks`, `ku`, `kv`, `kw`, `ky`, `ky-KG`,
     * `la`, `lb`, `lg`, `li`, `ln`, `lo`, `lt`, `lt-LT`, `lu`, `lv`, `lv-LV`, `mg`, `mh`, `mi`, `mi-NZ`, `mk`, `mk-MK`, `ml`,
     * `mn`, `mn-MN`, `mr`, `mr-IN`, `ms`, `ms-BN`, `ms-MY`, `mt`, `mt-MT`, `my`, `na`, `nb`, `nb-NO`, `nd`, `ne`, `ng`, `nl`,
     * `nl-BE`, `nl-NL`, `nn`, `nn-NO`, `no`, `nr`, `ns`, `ns-ZA`, `nv`, `ny`, `oc`, `oj`, `om`, `or`, `os`, `pa`, `pa-IN`,
     * `pi`, `pl`, `pl-PL`, `ps`, `ps-AR`, `pt`, `pt-BR`, `pt-PT`, `qu`, `qu-BO`, `qu-EC`, `qu-PE`, `rm`, `rn`, `ro`, `ro-RO`,
     * `ru`, `ru-RU`, `rw`, `sa`, `sa-IN`, `sc`, `sd`, `se`, `se-FI`, `se-NO`, `se-SE`, `sg`, `si`, `sk`, `sk-SK`, `sl`,
     * `sl-SI`, `sm`, `sn`, `so`, `sq`, `sq-AL`, `sr`, `sr-BA`, `sr-SP`, `ss`, `st`, `su`, `sv`, `sv-FI`, `sv-SE`, `sw`,
     * `sw-KE`, `syr`, `syr-SY`, `ta`, `ta-IN`, `te`, `te-IN`, `tg`, `th`, `th-TH`, `ti`, `tk`, `tl`, `tl-PH`, `tn`, `tn-ZA`,
     * `to`, `tr`, `tr-TR`, `ts`, `tt`, `tt-RU`, `tw`, `ty`, `ug`, `uk`, `uk-UA`, `ur`, `ur-PK`, `uz`, `uz-UZ`, `ve`, `vi`,
     * `vi-VN`, `vo`, `wa`, `wo`, `xh`, `xh-ZA`, `yi`, `yo`, `yue-CN`, `za`, `zh`, `zh-CN`, `zh-HK`, `zh-MO`, `zh-SG`, `zh-TW`,
     * `zu`, `zu-ZA`. This field is immutable and will trigger a replace plan if changed.
     */
    locale?: pulumi.Input<string>;
    /**
     * A single object that specifies properties for the `push` delivery method. Exactly one of `email`, `push`, `sms` or
     * `voice` must be specified.
     */
    push?: pulumi.Input<inputs.NotificationTemplateContentPush>;
    /**
     * A single object that specifies properties for the `sms` delivery method. Exactly one of `email`, `push`, `sms` or
     * `voice` must be specified.
     */
    sms?: pulumi.Input<inputs.NotificationTemplateContentSms>;
    /**
     * A string that specifies the ID of the template to manage localised contents for. Options are `credential_issued`,
     * `credential_revoked`, `credential_updated`, `credential_verification`, `device_pairing`, `digital_wallet_pairing`,
     * `email_phone_verification`, `email_verification_admin`, `email_verification_user`, `general`, `id_verification`,
     * `new_device_paired`, `recovery_code_template`, `strong_authentication`, `transaction`, `verification_code_template`.
     * This field is immutable and will trigger a replace plan if changed.
     */
    templateName?: pulumi.Input<string>;
    /**
     * A string that specifies the unique user-defined name for each content variant that uses the same template +
     * `deliveryMethod` + `locale` combination. This property is case insensitive and has a limit of 100 characters.
     */
    variant?: pulumi.Input<string>;
    /**
     * A single object that specifies properties for the `voice` delivery method. Exactly one of `email`, `push`, `sms` or
     * `voice` must be specified.
     */
    voice?: pulumi.Input<inputs.NotificationTemplateContentVoice>;
}

/**
 * The set of arguments for constructing a NotificationTemplateContent resource.
 */
export interface NotificationTemplateContentArgs {
    /**
     * A single object that specifies properties for the `email` delivery method. Exactly one of `email`, `push`, `sms` or
     * `voice` must be specified.
     */
    email?: pulumi.Input<inputs.NotificationTemplateContentEmail>;
    /**
     * The ID of the environment to manage notification template contents in. Must be a valid PingOne resource ID. This field
     * is immutable and will trigger a replace plan if changed.
     */
    environmentId: pulumi.Input<string>;
    /**
     * A string that specifies an ISO standard language code. For more information about standard language codes, see [ISO
     * Language Code Table](http://www.lingoes.net/en/translator/langcode.htm). Options are `aa`, `ab`, `ae`, `af`, `af-ZA`,
     * `ak`, `am`, `an`, `ar`, `ar-AE`, `ar-BH`, `ar-DZ`, `ar-EG`, `ar-IQ`, `ar-JO`, `ar-KW`, `ar-LB`, `ar-LY`, `ar-MA`,
     * `ar-OM`, `ar-QA`, `ar-SA`, `ar-SY`, `ar-TN`, `ar-YE`, `as`, `av`, `ay`, `az`, `az-AZ`, `ba`, `be`, `be-BY`, `bg`,
     * `bg-BG`, `bi`, `bm`, `bn`, `bo`, `br`, `bs`, `bs-BA`, `ca`, `ca-ES`, `ce`, `ch`, `cmn-CN`, `cmn-TW`, `co`, `cr`, `cs`,
     * `cs-CZ`, `cu`, `cv`, `cy`, `cy-GB`, `da`, `da-DK`, `de`, `de-AT`, `de-CH`, `de-DE`, `de-LI`, `de-LU`, `dv`, `dv-MV`,
     * `dz`, `ee`, `el`, `el-GR`, `en`, `en-AU`, `en-BZ`, `en-CA`, `en-CB`, `en-GB`, `en-GB-WLS`, `en-IE`, `en-IN`, `en-JM`,
     * `en-NZ`, `en-PH`, `en-TT`, `en-US`, `en-ZA`, `en-ZW`, `eo`, `es`, `es-AR`, `es-BO`, `es-CL`, `es-CO`, `es-CR`, `es-DO`,
     * `es-EC`, `es-ES`, `es-GT`, `es-HN`, `es-MX`, `es-NI`, `es-PA`, `es-PE`, `es-PR`, `es-PY`, `es-SV`, `es-US`, `es-UY`,
     * `es-VE`, `et`, `et-EE`, `eu`, `eu-ES`, `fa`, `fa-IR`, `ff`, `fi`, `fi-FI`, `fj`, `fo`, `fo-FO`, `fr`, `fr-BE`, `fr-CA`,
     * `fr-CH`, `fr-FR`, `fr-LU`, `fr-MC`, `fy`, `ga`, `gd`, `gl`, `gl-ES`, `gn`, `gu`, `gu-IN`, `gv`, `ha`, `he`, `he-IL`,
     * `hi`, `hi-IN`, `ho`, `hr`, `hr-BA`, `hr-HR`, `ht`, `hu`, `hu-HU`, `hy`, `hy-AM`, `hz`, `ia`, `id`, `id-ID`, `ie`, `ig`,
     * `ii`, `ik`, `io`, `is`, `is-IS`, `it`, `it-CH`, `it-IT`, `iu`, `ja`, `ja-JP`, `jv`, `ka`, `ka-GE`, `kg`, `ki`, `kj`,
     * `kk`, `kk-KZ`, `kl`, `km`, `kn`, `kn-IN`, `ko`, `ko-KR`, `kok`, `kok-IN`, `kr`, `ks`, `ku`, `kv`, `kw`, `ky`, `ky-KG`,
     * `la`, `lb`, `lg`, `li`, `ln`, `lo`, `lt`, `lt-LT`, `lu`, `lv`, `lv-LV`, `mg`, `mh`, `mi`, `mi-NZ`, `mk`, `mk-MK`, `ml`,
     * `mn`, `mn-MN`, `mr`, `mr-IN`, `ms`, `ms-BN`, `ms-MY`, `mt`, `mt-MT`, `my`, `na`, `nb`, `nb-NO`, `nd`, `ne`, `ng`, `nl`,
     * `nl-BE`, `nl-NL`, `nn`, `nn-NO`, `no`, `nr`, `ns`, `ns-ZA`, `nv`, `ny`, `oc`, `oj`, `om`, `or`, `os`, `pa`, `pa-IN`,
     * `pi`, `pl`, `pl-PL`, `ps`, `ps-AR`, `pt`, `pt-BR`, `pt-PT`, `qu`, `qu-BO`, `qu-EC`, `qu-PE`, `rm`, `rn`, `ro`, `ro-RO`,
     * `ru`, `ru-RU`, `rw`, `sa`, `sa-IN`, `sc`, `sd`, `se`, `se-FI`, `se-NO`, `se-SE`, `sg`, `si`, `sk`, `sk-SK`, `sl`,
     * `sl-SI`, `sm`, `sn`, `so`, `sq`, `sq-AL`, `sr`, `sr-BA`, `sr-SP`, `ss`, `st`, `su`, `sv`, `sv-FI`, `sv-SE`, `sw`,
     * `sw-KE`, `syr`, `syr-SY`, `ta`, `ta-IN`, `te`, `te-IN`, `tg`, `th`, `th-TH`, `ti`, `tk`, `tl`, `tl-PH`, `tn`, `tn-ZA`,
     * `to`, `tr`, `tr-TR`, `ts`, `tt`, `tt-RU`, `tw`, `ty`, `ug`, `uk`, `uk-UA`, `ur`, `ur-PK`, `uz`, `uz-UZ`, `ve`, `vi`,
     * `vi-VN`, `vo`, `wa`, `wo`, `xh`, `xh-ZA`, `yi`, `yo`, `yue-CN`, `za`, `zh`, `zh-CN`, `zh-HK`, `zh-MO`, `zh-SG`, `zh-TW`,
     * `zu`, `zu-ZA`. This field is immutable and will trigger a replace plan if changed.
     */
    locale: pulumi.Input<string>;
    /**
     * A single object that specifies properties for the `push` delivery method. Exactly one of `email`, `push`, `sms` or
     * `voice` must be specified.
     */
    push?: pulumi.Input<inputs.NotificationTemplateContentPush>;
    /**
     * A single object that specifies properties for the `sms` delivery method. Exactly one of `email`, `push`, `sms` or
     * `voice` must be specified.
     */
    sms?: pulumi.Input<inputs.NotificationTemplateContentSms>;
    /**
     * A string that specifies the ID of the template to manage localised contents for. Options are `credential_issued`,
     * `credential_revoked`, `credential_updated`, `credential_verification`, `device_pairing`, `digital_wallet_pairing`,
     * `email_phone_verification`, `email_verification_admin`, `email_verification_user`, `general`, `id_verification`,
     * `new_device_paired`, `recovery_code_template`, `strong_authentication`, `transaction`, `verification_code_template`.
     * This field is immutable and will trigger a replace plan if changed.
     */
    templateName: pulumi.Input<string>;
    /**
     * A string that specifies the unique user-defined name for each content variant that uses the same template +
     * `deliveryMethod` + `locale` combination. This property is case insensitive and has a limit of 100 characters.
     */
    variant?: pulumi.Input<string>;
    /**
     * A single object that specifies properties for the `voice` delivery method. Exactly one of `email`, `push`, `sms` or
     * `voice` must be specified.
     */
    voice?: pulumi.Input<inputs.NotificationTemplateContentVoice>;
}
