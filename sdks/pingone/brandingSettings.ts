// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BrandingSettings extends pulumi.CustomResource {
    /**
     * Get an existing BrandingSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BrandingSettingsState, opts?: pulumi.CustomResourceOptions): BrandingSettings {
        return new BrandingSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingone:index/brandingSettings:BrandingSettings';

    /**
     * Returns true if the given object is an instance of BrandingSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BrandingSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BrandingSettings.__pulumiType;
    }

    /**
     * The company name associated with the specified environment.
     */
    public readonly companyName!: pulumi.Output<string>;
    /**
     * The ID of the environment to set branding settings for. Must be a valid PingOne resource ID. This field is immutable and
     * will trigger a replace plan if changed.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * A single object that specifies the HREF and ID for the company logo.
     */
    public readonly logoImage!: pulumi.Output<outputs.BrandingSettingsLogoImage>;

    /**
     * Create a BrandingSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BrandingSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BrandingSettingsArgs | BrandingSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BrandingSettingsState | undefined;
            resourceInputs["companyName"] = state ? state.companyName : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["logoImage"] = state ? state.logoImage : undefined;
        } else {
            const args = argsOrState as BrandingSettingsArgs | undefined;
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            resourceInputs["companyName"] = args ? args.companyName : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["logoImage"] = args ? args.logoImage : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BrandingSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BrandingSettings resources.
 */
export interface BrandingSettingsState {
    /**
     * The company name associated with the specified environment.
     */
    companyName?: pulumi.Input<string>;
    /**
     * The ID of the environment to set branding settings for. Must be a valid PingOne resource ID. This field is immutable and
     * will trigger a replace plan if changed.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * A single object that specifies the HREF and ID for the company logo.
     */
    logoImage?: pulumi.Input<inputs.BrandingSettingsLogoImage>;
}

/**
 * The set of arguments for constructing a BrandingSettings resource.
 */
export interface BrandingSettingsArgs {
    /**
     * The company name associated with the specified environment.
     */
    companyName?: pulumi.Input<string>;
    /**
     * The ID of the environment to set branding settings for. Must be a valid PingOne resource ID. This field is immutable and
     * will trigger a replace plan if changed.
     */
    environmentId: pulumi.Input<string>;
    /**
     * A single object that specifies the HREF and ID for the company logo.
     */
    logoImage?: pulumi.Input<inputs.BrandingSettingsLogoImage>;
}
