// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApplicationFlowPolicyAssignments(args: GetApplicationFlowPolicyAssignmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationFlowPolicyAssignmentsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingone:index/getApplicationFlowPolicyAssignments:getApplicationFlowPolicyAssignments", {
        "applicationId": args.applicationId,
        "environmentId": args.environmentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplicationFlowPolicyAssignments.
 */
export interface GetApplicationFlowPolicyAssignmentsArgs {
    applicationId: string;
    environmentId: string;
}

/**
 * A collection of values returned by getApplicationFlowPolicyAssignments.
 */
export interface GetApplicationFlowPolicyAssignmentsResult {
    readonly applicationId: string;
    readonly environmentId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
}
export function getApplicationFlowPolicyAssignmentsOutput(args: GetApplicationFlowPolicyAssignmentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationFlowPolicyAssignmentsResult> {
    return pulumi.output(args).apply((a: any) => getApplicationFlowPolicyAssignments(a, opts))
}

/**
 * A collection of arguments for invoking getApplicationFlowPolicyAssignments.
 */
export interface GetApplicationFlowPolicyAssignmentsOutputArgs {
    applicationId: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
}
