// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ThemeBorders {
    buttonBorderRadius?: pulumi.Input<number>;
    buttonBorderWidth?: pulumi.Input<number>;
    cardBorderRadius?: pulumi.Input<number>;
    cardBorderWidth?: pulumi.Input<number>;
    containerBorderRadius?: pulumi.Input<number>;
    inputBorderRadius?: pulumi.Input<number>;
    inputBorderWidth?: pulumi.Input<number>;
}

export interface ThemeColors {
    bodyText?: pulumi.Input<string>;
    buttonPrimaryBorder?: pulumi.Input<string>;
    buttonPrimaryText?: pulumi.Input<string>;
    buttonSecondaryBackground?: pulumi.Input<string>;
    buttonSecondaryBorder?: pulumi.Input<string>;
    buttonSecondaryText?: pulumi.Input<string>;
    cardBackground?: pulumi.Input<string>;
    cardBorder?: pulumi.Input<string>;
    containerBackground?: pulumi.Input<string>;
    containerBorder?: pulumi.Input<string>;
    critical?: pulumi.Input<string>;
    divider?: pulumi.Input<string>;
    focus?: pulumi.Input<string>;
    headingText?: pulumi.Input<string>;
    hover?: pulumi.Input<string>;
    icon?: pulumi.Input<string>;
    information?: pulumi.Input<string>;
    inputBackground?: pulumi.Input<string>;
    inputBorder?: pulumi.Input<string>;
    link?: pulumi.Input<string>;
    loader?: pulumi.Input<string>;
    positive?: pulumi.Input<string>;
}

export interface ThemeContainer {
    contentAlignment?: pulumi.Input<string>;
    logoAlignment?: pulumi.Input<string>;
    logoHeight?: pulumi.Input<number>;
    logoPosition?: pulumi.Input<string>;
    padding?: pulumi.Input<number>;
    position?: pulumi.Input<string>;
}

export interface ThemeDarkMode {
    borders?: pulumi.Input<inputs.ThemeDarkModeBorders>;
    colors?: pulumi.Input<inputs.ThemeDarkModeColors>;
    container?: pulumi.Input<inputs.ThemeDarkModeContainer>;
    /**
     * The URL of an image to be used as a favicon for the tenant
     */
    faviconUrl?: pulumi.Input<string>;
    /**
     * The URL of an image to be used as a logo for the tenant.
     */
    logoUrl?: pulumi.Input<string>;
    pageBackground?: pulumi.Input<inputs.ThemeDarkModePageBackground>;
    /**
     * The primary color for the tenant.
     */
    primaryColor?: pulumi.Input<string>;
    typography?: pulumi.Input<inputs.ThemeDarkModeTypography>;
    /**
     * The URL of an image to be used as a watermark at the bottom of Authsignal's pre-built UI.
     */
    watermarkUrl?: pulumi.Input<string>;
}

export interface ThemeDarkModeBorders {
    buttonBorderRadius?: pulumi.Input<number>;
    buttonBorderWidth?: pulumi.Input<number>;
    cardBorderRadius?: pulumi.Input<number>;
    cardBorderWidth?: pulumi.Input<number>;
    containerBorderRadius?: pulumi.Input<number>;
    inputBorderRadius?: pulumi.Input<number>;
    inputBorderWidth?: pulumi.Input<number>;
}

export interface ThemeDarkModeColors {
    bodyText?: pulumi.Input<string>;
    buttonPrimaryBorder?: pulumi.Input<string>;
    buttonPrimaryText?: pulumi.Input<string>;
    buttonSecondaryBackground?: pulumi.Input<string>;
    buttonSecondaryBorder?: pulumi.Input<string>;
    buttonSecondaryText?: pulumi.Input<string>;
    cardBackground?: pulumi.Input<string>;
    cardBorder?: pulumi.Input<string>;
    containerBackground?: pulumi.Input<string>;
    containerBorder?: pulumi.Input<string>;
    critical?: pulumi.Input<string>;
    divider?: pulumi.Input<string>;
    focus?: pulumi.Input<string>;
    headingText?: pulumi.Input<string>;
    hover?: pulumi.Input<string>;
    icon?: pulumi.Input<string>;
    information?: pulumi.Input<string>;
    inputBackground?: pulumi.Input<string>;
    inputBorder?: pulumi.Input<string>;
    link?: pulumi.Input<string>;
    loader?: pulumi.Input<string>;
    positive?: pulumi.Input<string>;
}

export interface ThemeDarkModeContainer {
    contentAlignment?: pulumi.Input<string>;
    logoAlignment?: pulumi.Input<string>;
    logoHeight?: pulumi.Input<number>;
    logoPosition?: pulumi.Input<string>;
    padding?: pulumi.Input<number>;
    position?: pulumi.Input<string>;
}

export interface ThemeDarkModePageBackground {
    /**
     * The color to be used for the background in the pre-built UI.
     */
    backgroundColor?: pulumi.Input<string>;
    /**
     * The URL of an image which will be used as the background in the pre-built UI.
     */
    backgroundImageUrl?: pulumi.Input<string>;
}

export interface ThemeDarkModeTypography {
    display?: pulumi.Input<inputs.ThemeDarkModeTypographyDisplay>;
}

export interface ThemeDarkModeTypographyDisplay {
    /**
     * The URL of a font file to be used for the tenant.
     */
    fontUrl?: pulumi.Input<string>;
}

export interface ThemePageBackground {
    /**
     * The color to be used for the background in the pre-built UI.
     */
    backgroundColor?: pulumi.Input<string>;
    /**
     * The URL of an image which will be used as the background in the pre-built UI.
     */
    backgroundImageUrl?: pulumi.Input<string>;
}

export interface ThemeTypography {
    display?: pulumi.Input<inputs.ThemeTypographyDisplay>;
}

export interface ThemeTypographyDisplay {
    /**
     * The URL of a font file to be used for the tenant.
     */
    fontUrl?: pulumi.Input<string>;
}
