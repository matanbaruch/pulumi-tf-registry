// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRule(args: GetRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("authsignal:index/getRule:getRule", {
        "actionCode": args.actionCode,
        "ruleId": args.ruleId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRule.
 */
export interface GetRuleArgs {
    actionCode: string;
    ruleId: string;
}

/**
 * A collection of values returned by getRule.
 */
export interface GetRuleResult {
    readonly actionCode: string;
    readonly conditions: string;
    readonly defaultVerificationMethod: string;
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isActive: boolean;
    readonly name: string;
    readonly priority: number;
    readonly promptToEnrollVerificationMethods: string[];
    readonly ruleId: string;
    readonly tenantId: string;
    readonly type: string;
    readonly verificationMethods: string[];
}
export function getRuleOutput(args: GetRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRuleResult> {
    return pulumi.output(args).apply((a: any) => getRule(a, opts))
}

/**
 * A collection of arguments for invoking getRule.
 */
export interface GetRuleOutputArgs {
    actionCode: pulumi.Input<string>;
    ruleId: pulumi.Input<string>;
}
