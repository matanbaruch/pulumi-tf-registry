// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTheme(opts?: pulumi.InvokeOptions): Promise<GetThemeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("authsignal:index/getTheme:getTheme", {
    }, opts, utilities.getPackage());
}

/**
 * A collection of values returned by getTheme.
 */
export interface GetThemeResult {
    readonly borders: outputs.GetThemeBorders;
    readonly colors: outputs.GetThemeColors;
    readonly container: outputs.GetThemeContainer;
    readonly darkMode: outputs.GetThemeDarkMode;
    readonly faviconUrl: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly logoUrl: string;
    readonly name: string;
    readonly pageBackground: outputs.GetThemePageBackground;
    readonly primaryColor: string;
    readonly typography: outputs.GetThemeTypography;
    readonly watermarkUrl: string;
}
export function getThemeOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetThemeResult> {
    return pulumi.output(getTheme(opts))
}
