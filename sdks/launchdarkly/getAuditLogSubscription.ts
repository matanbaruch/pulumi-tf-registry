// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAuditLogSubscription(args: GetAuditLogSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetAuditLogSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("launchdarkly:index/getAuditLogSubscription:getAuditLogSubscription", {
        "id": args.id,
        "integrationKey": args.integrationKey,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAuditLogSubscription.
 */
export interface GetAuditLogSubscriptionArgs {
    id: string;
    integrationKey: string;
}

/**
 * A collection of values returned by getAuditLogSubscription.
 */
export interface GetAuditLogSubscriptionResult {
    readonly config: {[key: string]: string};
    readonly id: string;
    readonly integrationKey: string;
    readonly name: string;
    readonly on: boolean;
    readonly statements: outputs.GetAuditLogSubscriptionStatement[];
    readonly tags: string[];
}
export function getAuditLogSubscriptionOutput(args: GetAuditLogSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuditLogSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getAuditLogSubscription(a, opts))
}

/**
 * A collection of arguments for invoking getAuditLogSubscription.
 */
export interface GetAuditLogSubscriptionOutputArgs {
    id: pulumi.Input<string>;
    integrationKey: pulumi.Input<string>;
}
