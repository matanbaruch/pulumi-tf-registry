// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTeamMember(args: GetTeamMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetTeamMemberResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("launchdarkly:index/getTeamMember:getTeamMember", {
        "email": args.email,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTeamMember.
 */
export interface GetTeamMemberArgs {
    email: string;
}

/**
 * A collection of values returned by getTeamMember.
 */
export interface GetTeamMemberResult {
    readonly customRoles: string[];
    readonly email: string;
    readonly firstName: string;
    readonly id: string;
    readonly lastName: string;
    readonly role: string;
}
export function getTeamMemberOutput(args: GetTeamMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTeamMemberResult> {
    return pulumi.output(args).apply((a: any) => getTeamMember(a, opts))
}

/**
 * A collection of arguments for invoking getTeamMember.
 */
export interface GetTeamMemberOutputArgs {
    email: pulumi.Input<string>;
}
