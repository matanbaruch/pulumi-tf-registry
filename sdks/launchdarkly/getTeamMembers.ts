// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTeamMembers(args: GetTeamMembersArgs, opts?: pulumi.InvokeOptions): Promise<GetTeamMembersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("launchdarkly:index/getTeamMembers:getTeamMembers", {
        "emails": args.emails,
        "id": args.id,
        "ignoreMissing": args.ignoreMissing,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTeamMembers.
 */
export interface GetTeamMembersArgs {
    emails: string[];
    id?: string;
    ignoreMissing?: boolean;
}

/**
 * A collection of values returned by getTeamMembers.
 */
export interface GetTeamMembersResult {
    readonly emails: string[];
    readonly id: string;
    readonly ignoreMissing?: boolean;
    readonly teamMembers: outputs.GetTeamMembersTeamMember[];
}
export function getTeamMembersOutput(args: GetTeamMembersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTeamMembersResult> {
    return pulumi.output(args).apply((a: any) => getTeamMembers(a, opts))
}

/**
 * A collection of arguments for invoking getTeamMembers.
 */
export interface GetTeamMembersOutputArgs {
    emails: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    ignoreMissing?: pulumi.Input<boolean>;
}
