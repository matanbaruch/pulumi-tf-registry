// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFlagTrigger(args: GetFlagTriggerArgs, opts?: pulumi.InvokeOptions): Promise<GetFlagTriggerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("launchdarkly:index/getFlagTrigger:getFlagTrigger", {
        "envKey": args.envKey,
        "flagKey": args.flagKey,
        "id": args.id,
        "projectKey": args.projectKey,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFlagTrigger.
 */
export interface GetFlagTriggerArgs {
    envKey: string;
    flagKey: string;
    id: string;
    projectKey: string;
}

/**
 * A collection of values returned by getFlagTrigger.
 */
export interface GetFlagTriggerResult {
    readonly enabled: boolean;
    readonly envKey: string;
    readonly flagKey: string;
    readonly id: string;
    readonly instructions: outputs.GetFlagTriggerInstruction[];
    readonly integrationKey: string;
    readonly maintainerId: string;
    readonly projectKey: string;
    readonly triggerUrl: string;
}
export function getFlagTriggerOutput(args: GetFlagTriggerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFlagTriggerResult> {
    return pulumi.output(args).apply((a: any) => getFlagTrigger(a, opts))
}

/**
 * A collection of arguments for invoking getFlagTrigger.
 */
export interface GetFlagTriggerOutputArgs {
    envKey: pulumi.Input<string>;
    flagKey: pulumi.Input<string>;
    id: pulumi.Input<string>;
    projectKey: pulumi.Input<string>;
}
