// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSegment(args: GetSegmentArgs, opts?: pulumi.InvokeOptions): Promise<GetSegmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("launchdarkly:index/getSegment:getSegment", {
        "envKey": args.envKey,
        "id": args.id,
        "key": args.key,
        "projectKey": args.projectKey,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSegment.
 */
export interface GetSegmentArgs {
    envKey: string;
    id?: string;
    key: string;
    projectKey: string;
}

/**
 * A collection of values returned by getSegment.
 */
export interface GetSegmentResult {
    readonly creationDate: number;
    readonly description: string;
    readonly envKey: string;
    readonly excludedContexts: outputs.GetSegmentExcludedContext[];
    readonly excludeds: string[];
    readonly id: string;
    readonly includedContexts: outputs.GetSegmentIncludedContext[];
    readonly includeds: string[];
    readonly key: string;
    readonly name: string;
    readonly projectKey: string;
    readonly rules: outputs.GetSegmentRule[];
    readonly tags: string[];
    readonly unbounded: boolean;
    readonly unboundedContextKind: string;
}
export function getSegmentOutput(args: GetSegmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSegmentResult> {
    return pulumi.output(args).apply((a: any) => getSegment(a, opts))
}

/**
 * A collection of arguments for invoking getSegment.
 */
export interface GetSegmentOutputArgs {
    envKey: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    projectKey: pulumi.Input<string>;
}
