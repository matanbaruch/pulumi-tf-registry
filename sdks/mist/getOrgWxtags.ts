// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOrgWxtags(args: GetOrgWxtagsArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgWxtagsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mist:index/getOrgWxtags:getOrgWxtags", {
        "orgId": args.orgId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrgWxtags.
 */
export interface GetOrgWxtagsArgs {
    orgId: string;
}

/**
 * A collection of values returned by getOrgWxtags.
 */
export interface GetOrgWxtagsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly orgId: string;
    readonly orgWxtags: outputs.GetOrgWxtagsOrgWxtag[];
}
export function getOrgWxtagsOutput(args: GetOrgWxtagsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgWxtagsResult> {
    return pulumi.output(args).apply((a: any) => getOrgWxtags(a, opts))
}

/**
 * A collection of arguments for invoking getOrgWxtags.
 */
export interface GetOrgWxtagsOutputArgs {
    orgId: pulumi.Input<string>;
}
