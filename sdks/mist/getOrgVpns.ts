// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOrgVpns(args: GetOrgVpnsArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgVpnsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mist:index/getOrgVpns:getOrgVpns", {
        "orgId": args.orgId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrgVpns.
 */
export interface GetOrgVpnsArgs {
    orgId: string;
}

/**
 * A collection of values returned by getOrgVpns.
 */
export interface GetOrgVpnsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly orgId: string;
    readonly orgVpns: outputs.GetOrgVpnsOrgVpn[];
}
export function getOrgVpnsOutput(args: GetOrgVpnsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgVpnsResult> {
    return pulumi.output(args).apply((a: any) => getOrgVpns(a, opts))
}

/**
 * A collection of arguments for invoking getOrgVpns.
 */
export interface GetOrgVpnsOutputArgs {
    orgId: pulumi.Input<string>;
}
