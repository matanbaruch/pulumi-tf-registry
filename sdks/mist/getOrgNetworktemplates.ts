// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOrgNetworktemplates(args: GetOrgNetworktemplatesArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgNetworktemplatesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mist:index/getOrgNetworktemplates:getOrgNetworktemplates", {
        "orgId": args.orgId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrgNetworktemplates.
 */
export interface GetOrgNetworktemplatesArgs {
    orgId: string;
}

/**
 * A collection of values returned by getOrgNetworktemplates.
 */
export interface GetOrgNetworktemplatesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly orgId: string;
    readonly orgNetworktemplates: outputs.GetOrgNetworktemplatesOrgNetworktemplate[];
}
export function getOrgNetworktemplatesOutput(args: GetOrgNetworktemplatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgNetworktemplatesResult> {
    return pulumi.output(args).apply((a: any) => getOrgNetworktemplates(a, opts))
}

/**
 * A collection of arguments for invoking getOrgNetworktemplates.
 */
export interface GetOrgNetworktemplatesOutputArgs {
    orgId: pulumi.Input<string>;
}
