// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OrgRftemplate extends pulumi.CustomResource {
    /**
     * Get an existing OrgRftemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrgRftemplateState, opts?: pulumi.CustomResourceOptions): OrgRftemplate {
        return new OrgRftemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mist:index/orgRftemplate:OrgRftemplate';

    /**
     * Returns true if the given object is an instance of OrgRftemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrgRftemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrgRftemplate.__pulumiType;
    }

    public readonly antGain24!: pulumi.Output<number>;
    public readonly antGain5!: pulumi.Output<number>;
    public readonly antGain6!: pulumi.Output<number>;
    /**
     * Radio Band AP settings
     */
    public readonly band24!: pulumi.Output<outputs.OrgRftemplateBand24 | undefined>;
    /**
     * enum: `24`, `5`, `6`, `auto`
     */
    public readonly band24Usage!: pulumi.Output<string | undefined>;
    /**
     * Radio Band AP settings
     */
    public readonly band5!: pulumi.Output<outputs.OrgRftemplateBand5 | undefined>;
    /**
     * Radio Band AP settings
     */
    public readonly band5On24Radio!: pulumi.Output<outputs.OrgRftemplateBand5On24Radio | undefined>;
    /**
     * Radio Band AP settings
     */
    public readonly band6!: pulumi.Output<outputs.OrgRftemplateBand6 | undefined>;
    /**
     * optional, country code to use. If specified, this gets applied to all sites using the RF Template
     */
    public readonly countryCode!: pulumi.Output<string | undefined>;
    /**
     * overwrites for a specific model. If a band is specified, it will shadow the default. Property key is the model name
     * (e.g. "AP63")
     */
    public readonly modelSpecific!: pulumi.Output<{[key: string]: outputs.OrgRftemplateModelSpecific} | undefined>;
    /**
     * The name of the RF template
     */
    public readonly name!: pulumi.Output<string>;
    public readonly orgId!: pulumi.Output<string>;
    /**
     * whether scanning radio is enabled
     */
    public readonly scanningEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a OrgRftemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrgRftemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrgRftemplateArgs | OrgRftemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrgRftemplateState | undefined;
            resourceInputs["antGain24"] = state ? state.antGain24 : undefined;
            resourceInputs["antGain5"] = state ? state.antGain5 : undefined;
            resourceInputs["antGain6"] = state ? state.antGain6 : undefined;
            resourceInputs["band24"] = state ? state.band24 : undefined;
            resourceInputs["band24Usage"] = state ? state.band24Usage : undefined;
            resourceInputs["band5"] = state ? state.band5 : undefined;
            resourceInputs["band5On24Radio"] = state ? state.band5On24Radio : undefined;
            resourceInputs["band6"] = state ? state.band6 : undefined;
            resourceInputs["countryCode"] = state ? state.countryCode : undefined;
            resourceInputs["modelSpecific"] = state ? state.modelSpecific : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["scanningEnabled"] = state ? state.scanningEnabled : undefined;
        } else {
            const args = argsOrState as OrgRftemplateArgs | undefined;
            if ((!args || args.orgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            resourceInputs["antGain24"] = args ? args.antGain24 : undefined;
            resourceInputs["antGain5"] = args ? args.antGain5 : undefined;
            resourceInputs["antGain6"] = args ? args.antGain6 : undefined;
            resourceInputs["band24"] = args ? args.band24 : undefined;
            resourceInputs["band24Usage"] = args ? args.band24Usage : undefined;
            resourceInputs["band5"] = args ? args.band5 : undefined;
            resourceInputs["band5On24Radio"] = args ? args.band5On24Radio : undefined;
            resourceInputs["band6"] = args ? args.band6 : undefined;
            resourceInputs["countryCode"] = args ? args.countryCode : undefined;
            resourceInputs["modelSpecific"] = args ? args.modelSpecific : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["scanningEnabled"] = args ? args.scanningEnabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrgRftemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OrgRftemplate resources.
 */
export interface OrgRftemplateState {
    antGain24?: pulumi.Input<number>;
    antGain5?: pulumi.Input<number>;
    antGain6?: pulumi.Input<number>;
    /**
     * Radio Band AP settings
     */
    band24?: pulumi.Input<inputs.OrgRftemplateBand24>;
    /**
     * enum: `24`, `5`, `6`, `auto`
     */
    band24Usage?: pulumi.Input<string>;
    /**
     * Radio Band AP settings
     */
    band5?: pulumi.Input<inputs.OrgRftemplateBand5>;
    /**
     * Radio Band AP settings
     */
    band5On24Radio?: pulumi.Input<inputs.OrgRftemplateBand5On24Radio>;
    /**
     * Radio Band AP settings
     */
    band6?: pulumi.Input<inputs.OrgRftemplateBand6>;
    /**
     * optional, country code to use. If specified, this gets applied to all sites using the RF Template
     */
    countryCode?: pulumi.Input<string>;
    /**
     * overwrites for a specific model. If a band is specified, it will shadow the default. Property key is the model name
     * (e.g. "AP63")
     */
    modelSpecific?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OrgRftemplateModelSpecific>}>;
    /**
     * The name of the RF template
     */
    name?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    /**
     * whether scanning radio is enabled
     */
    scanningEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a OrgRftemplate resource.
 */
export interface OrgRftemplateArgs {
    antGain24?: pulumi.Input<number>;
    antGain5?: pulumi.Input<number>;
    antGain6?: pulumi.Input<number>;
    /**
     * Radio Band AP settings
     */
    band24?: pulumi.Input<inputs.OrgRftemplateBand24>;
    /**
     * enum: `24`, `5`, `6`, `auto`
     */
    band24Usage?: pulumi.Input<string>;
    /**
     * Radio Band AP settings
     */
    band5?: pulumi.Input<inputs.OrgRftemplateBand5>;
    /**
     * Radio Band AP settings
     */
    band5On24Radio?: pulumi.Input<inputs.OrgRftemplateBand5On24Radio>;
    /**
     * Radio Band AP settings
     */
    band6?: pulumi.Input<inputs.OrgRftemplateBand6>;
    /**
     * optional, country code to use. If specified, this gets applied to all sites using the RF Template
     */
    countryCode?: pulumi.Input<string>;
    /**
     * overwrites for a specific model. If a band is specified, it will shadow the default. Property key is the model name
     * (e.g. "AP63")
     */
    modelSpecific?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OrgRftemplateModelSpecific>}>;
    /**
     * The name of the RF template
     */
    name?: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
    /**
     * whether scanning radio is enabled
     */
    scanningEnabled?: pulumi.Input<boolean>;
}
