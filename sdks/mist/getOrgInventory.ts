// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOrgInventory(args: GetOrgInventoryArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgInventoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mist:index/getOrgInventory:getOrgInventory", {
        "mac": args.mac,
        "model": args.model,
        "orgId": args.orgId,
        "serial": args.serial,
        "siteId": args.siteId,
        "unassigned": args.unassigned,
        "vc": args.vc,
        "vcMac": args.vcMac,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrgInventory.
 */
export interface GetOrgInventoryArgs {
    mac?: string;
    model?: string;
    orgId: string;
    serial?: string;
    siteId?: string;
    unassigned?: boolean;
    vc?: boolean;
    vcMac?: string;
}

/**
 * A collection of values returned by getOrgInventory.
 */
export interface GetOrgInventoryResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly mac?: string;
    readonly model?: string;
    readonly orgId: string;
    readonly orgInventories: outputs.GetOrgInventoryOrgInventory[];
    readonly serial?: string;
    readonly siteId?: string;
    readonly unassigned?: boolean;
    readonly vc?: boolean;
    readonly vcMac?: string;
}
export function getOrgInventoryOutput(args: GetOrgInventoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgInventoryResult> {
    return pulumi.output(args).apply((a: any) => getOrgInventory(a, opts))
}

/**
 * A collection of arguments for invoking getOrgInventory.
 */
export interface GetOrgInventoryOutputArgs {
    mac?: pulumi.Input<string>;
    model?: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
    serial?: pulumi.Input<string>;
    siteId?: pulumi.Input<string>;
    unassigned?: pulumi.Input<boolean>;
    vc?: pulumi.Input<boolean>;
    vcMac?: pulumi.Input<string>;
}
