// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OrgWxtag extends pulumi.CustomResource {
    /**
     * Get an existing OrgWxtag resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrgWxtagState, opts?: pulumi.CustomResourceOptions): OrgWxtag {
        return new OrgWxtag(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mist:index/orgWxtag:OrgWxtag';

    /**
     * Returns true if the given object is an instance of OrgWxtag.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrgWxtag {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrgWxtag.__pulumiType;
    }

    /**
     * if `type`==`client`, Client MAC Address
     */
    public readonly mac!: pulumi.Output<string | undefined>;
    /**
     * required if `type`==`match`. enum: `ap_id`, `app`, `asset_mac`, `client_mac`, `hostname`, `ip_range_subnet`, `port`,
     * `psk_name`, `psk_role`, `radius_attr`, `radius_class`, `radius_group`, `radius_username`, `sdkclient_uuid`, `wlan_id`
     */
    public readonly match!: pulumi.Output<string | undefined>;
    /**
     * The name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * required if `type`==`match`, type of tag (inclusive/exclusive). enum: `in`, `not_in`
     */
    public readonly op!: pulumi.Output<string>;
    public readonly orgId!: pulumi.Output<string>;
    /**
     * if `type`==`spec`
     */
    public readonly specs!: pulumi.Output<outputs.OrgWxtagSpec[] | undefined>;
    /**
     * enum: `client`, `match`, `resource`, `spec`, `subnet`, `vlan`
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * required if `type`==`match` and * `match`==`ap_id`: list of AP IDs * `match`==`app`: list of Application Names *
     * `match`==`asset_mac`: list of Asset MAC Addresses * `match`==`client_mac`: list of Client MAC Addresses *
     * `match`==`hostname`: list of Resources Hostnames * `match`==`ip_range_subnet`: list of IP Addresses and/or CIDRs *
     * `match`==`psk_name`: list of PSK Names * `match`==`psk_role`: list of PSK Roles * `match`==`port`: list of Ports or Port
     * Ranges * `match`==`radius_attr`: list of RADIUS Attributes. The values are [ “6=1”, “26=10.2.3.4” ], this
     * support other RADIUS attributes where we know the type * `match`==`radius_class`: list of RADIUS Classes. This matches
     * the ATTR-Class(25) * `match`==`radius_group`: list of RADIUS Groups. This is a smart tag that matches RADIUS-Filter-ID,
     * Airespace-ACL-Name (VendorID=14179, VendorType=6) / Aruba-User-Role (VendorID=14823, VendorType=1) *
     * `match`==`radius_username`: list of RADIUS Usernames. This matches the ATTR-User-Name(1) * `match`==`sdkclient_uuid`:
     * list of SDK UUIDs * `match`==`wlan_id`: list of WLAN IDs **Notes**: Variables are not allowed
     */
    public readonly values!: pulumi.Output<string[] | undefined>;
    public readonly vlanId!: pulumi.Output<string | undefined>;

    /**
     * Create a OrgWxtag resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrgWxtagArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrgWxtagArgs | OrgWxtagState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrgWxtagState | undefined;
            resourceInputs["mac"] = state ? state.mac : undefined;
            resourceInputs["match"] = state ? state.match : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["op"] = state ? state.op : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["specs"] = state ? state.specs : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["values"] = state ? state.values : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
        } else {
            const args = argsOrState as OrgWxtagArgs | undefined;
            if ((!args || args.orgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["mac"] = args ? args.mac : undefined;
            resourceInputs["match"] = args ? args.match : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["op"] = args ? args.op : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["specs"] = args ? args.specs : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["values"] = args ? args.values : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrgWxtag.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OrgWxtag resources.
 */
export interface OrgWxtagState {
    /**
     * if `type`==`client`, Client MAC Address
     */
    mac?: pulumi.Input<string>;
    /**
     * required if `type`==`match`. enum: `ap_id`, `app`, `asset_mac`, `client_mac`, `hostname`, `ip_range_subnet`, `port`,
     * `psk_name`, `psk_role`, `radius_attr`, `radius_class`, `radius_group`, `radius_username`, `sdkclient_uuid`, `wlan_id`
     */
    match?: pulumi.Input<string>;
    /**
     * The name
     */
    name?: pulumi.Input<string>;
    /**
     * required if `type`==`match`, type of tag (inclusive/exclusive). enum: `in`, `not_in`
     */
    op?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    /**
     * if `type`==`spec`
     */
    specs?: pulumi.Input<pulumi.Input<inputs.OrgWxtagSpec>[]>;
    /**
     * enum: `client`, `match`, `resource`, `spec`, `subnet`, `vlan`
     */
    type?: pulumi.Input<string>;
    /**
     * required if `type`==`match` and * `match`==`ap_id`: list of AP IDs * `match`==`app`: list of Application Names *
     * `match`==`asset_mac`: list of Asset MAC Addresses * `match`==`client_mac`: list of Client MAC Addresses *
     * `match`==`hostname`: list of Resources Hostnames * `match`==`ip_range_subnet`: list of IP Addresses and/or CIDRs *
     * `match`==`psk_name`: list of PSK Names * `match`==`psk_role`: list of PSK Roles * `match`==`port`: list of Ports or Port
     * Ranges * `match`==`radius_attr`: list of RADIUS Attributes. The values are [ “6=1”, “26=10.2.3.4” ], this
     * support other RADIUS attributes where we know the type * `match`==`radius_class`: list of RADIUS Classes. This matches
     * the ATTR-Class(25) * `match`==`radius_group`: list of RADIUS Groups. This is a smart tag that matches RADIUS-Filter-ID,
     * Airespace-ACL-Name (VendorID=14179, VendorType=6) / Aruba-User-Role (VendorID=14823, VendorType=1) *
     * `match`==`radius_username`: list of RADIUS Usernames. This matches the ATTR-User-Name(1) * `match`==`sdkclient_uuid`:
     * list of SDK UUIDs * `match`==`wlan_id`: list of WLAN IDs **Notes**: Variables are not allowed
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
    vlanId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrgWxtag resource.
 */
export interface OrgWxtagArgs {
    /**
     * if `type`==`client`, Client MAC Address
     */
    mac?: pulumi.Input<string>;
    /**
     * required if `type`==`match`. enum: `ap_id`, `app`, `asset_mac`, `client_mac`, `hostname`, `ip_range_subnet`, `port`,
     * `psk_name`, `psk_role`, `radius_attr`, `radius_class`, `radius_group`, `radius_username`, `sdkclient_uuid`, `wlan_id`
     */
    match?: pulumi.Input<string>;
    /**
     * The name
     */
    name?: pulumi.Input<string>;
    /**
     * required if `type`==`match`, type of tag (inclusive/exclusive). enum: `in`, `not_in`
     */
    op?: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
    /**
     * if `type`==`spec`
     */
    specs?: pulumi.Input<pulumi.Input<inputs.OrgWxtagSpec>[]>;
    /**
     * enum: `client`, `match`, `resource`, `spec`, `subnet`, `vlan`
     */
    type: pulumi.Input<string>;
    /**
     * required if `type`==`match` and * `match`==`ap_id`: list of AP IDs * `match`==`app`: list of Application Names *
     * `match`==`asset_mac`: list of Asset MAC Addresses * `match`==`client_mac`: list of Client MAC Addresses *
     * `match`==`hostname`: list of Resources Hostnames * `match`==`ip_range_subnet`: list of IP Addresses and/or CIDRs *
     * `match`==`psk_name`: list of PSK Names * `match`==`psk_role`: list of PSK Roles * `match`==`port`: list of Ports or Port
     * Ranges * `match`==`radius_attr`: list of RADIUS Attributes. The values are [ “6=1”, “26=10.2.3.4” ], this
     * support other RADIUS attributes where we know the type * `match`==`radius_class`: list of RADIUS Classes. This matches
     * the ATTR-Class(25) * `match`==`radius_group`: list of RADIUS Groups. This is a smart tag that matches RADIUS-Filter-ID,
     * Airespace-ACL-Name (VendorID=14179, VendorType=6) / Aruba-User-Role (VendorID=14823, VendorType=1) *
     * `match`==`radius_username`: list of RADIUS Usernames. This matches the ATTR-User-Name(1) * `match`==`sdkclient_uuid`:
     * list of SDK UUIDs * `match`==`wlan_id`: list of WLAN IDs **Notes**: Variables are not allowed
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
    vlanId?: pulumi.Input<string>;
}
