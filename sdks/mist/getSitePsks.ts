// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSitePsks(args: GetSitePsksArgs, opts?: pulumi.InvokeOptions): Promise<GetSitePsksResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mist:index/getSitePsks:getSitePsks", {
        "limit": args.limit,
        "name": args.name,
        "page": args.page,
        "role": args.role,
        "siteId": args.siteId,
        "ssid": args.ssid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSitePsks.
 */
export interface GetSitePsksArgs {
    limit?: number;
    name?: string;
    page?: number;
    role?: string;
    siteId: string;
    ssid?: string;
}

/**
 * A collection of values returned by getSitePsks.
 */
export interface GetSitePsksResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly limit?: number;
    readonly name?: string;
    readonly page?: number;
    readonly role?: string;
    readonly siteId: string;
    readonly sitePsks: outputs.GetSitePsksSitePsk[];
    readonly ssid?: string;
}
export function getSitePsksOutput(args: GetSitePsksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSitePsksResult> {
    return pulumi.output(args).apply((a: any) => getSitePsks(a, opts))
}

/**
 * A collection of arguments for invoking getSitePsks.
 */
export interface GetSitePsksOutputArgs {
    limit?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    page?: pulumi.Input<number>;
    role?: pulumi.Input<string>;
    siteId: pulumi.Input<string>;
    ssid?: pulumi.Input<string>;
}
