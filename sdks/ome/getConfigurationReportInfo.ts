// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConfigurationReportInfo(args: GetConfigurationReportInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigurationReportInfoResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ome:index/getConfigurationReportInfo:getConfigurationReportInfo", {
        "baselineName": args.baselineName,
        "fetchAttributes": args.fetchAttributes,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConfigurationReportInfo.
 */
export interface GetConfigurationReportInfoArgs {
    baselineName: string;
    fetchAttributes?: boolean;
    id?: string;
}

/**
 * A collection of values returned by getConfigurationReportInfo.
 */
export interface GetConfigurationReportInfoResult {
    readonly baselineName: string;
    readonly complianceReportDevices: outputs.GetConfigurationReportInfoComplianceReportDevice[];
    readonly fetchAttributes: boolean;
    readonly id: string;
}
export function getConfigurationReportInfoOutput(args: GetConfigurationReportInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigurationReportInfoResult> {
    return pulumi.output(args).apply((a: any) => getConfigurationReportInfo(a, opts))
}

/**
 * A collection of arguments for invoking getConfigurationReportInfo.
 */
export interface GetConfigurationReportInfoOutputArgs {
    baselineName: pulumi.Input<string>;
    fetchAttributes?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
}
