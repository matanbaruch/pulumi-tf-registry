// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGroupdevicesInfo(args: GetGroupdevicesInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupdevicesInfoResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ome:index/getGroupdevicesInfo:getGroupdevicesInfo", {
        "deviceGroupNames": args.deviceGroupNames,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGroupdevicesInfo.
 */
export interface GetGroupdevicesInfoArgs {
    deviceGroupNames: string[];
    id?: string;
}

/**
 * A collection of values returned by getGroupdevicesInfo.
 */
export interface GetGroupdevicesInfoResult {
    readonly deviceGroupNames: string[];
    readonly deviceGroups: {[key: string]: outputs.GetGroupdevicesInfoDeviceGroups};
    readonly deviceIds: number[];
    readonly deviceServicetags: string[];
    readonly id: string;
}
export function getGroupdevicesInfoOutput(args: GetGroupdevicesInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupdevicesInfoResult> {
    return pulumi.output(args).apply((a: any) => getGroupdevicesInfo(a, opts))
}

/**
 * A collection of arguments for invoking getGroupdevicesInfo.
 */
export interface GetGroupdevicesInfoOutputArgs {
    deviceGroupNames: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
}
