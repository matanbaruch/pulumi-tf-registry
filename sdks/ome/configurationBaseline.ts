// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ConfigurationBaseline extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationBaseline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfigurationBaselineState, opts?: pulumi.CustomResourceOptions): ConfigurationBaseline {
        return new ConfigurationBaseline(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ome:index/configurationBaseline:ConfigurationBaseline';

    /**
     * Returns true if the given object is an instance of ConfigurationBaseline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConfigurationBaseline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConfigurationBaseline.__pulumiType;
    }

    /**
     * Name of the Baseline.
     */
    public readonly baselineName!: pulumi.Output<string>;
    /**
     * Cron expression for notification schedule. Can be set only when both `schedule` and `notify_on_schedule` are set to
     * `true`.
     */
    public readonly cron!: pulumi.Output<string | undefined>;
    /**
     * Description of the baseline.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * List of the device id on which the baseline compliance needs to be run. Conflicts with `device_servicetags`.
     */
    public readonly deviceIds!: pulumi.Output<number[] | undefined>;
    /**
     * List of the device servicetag on which the baseline compliance needs to be run. Conflicts with `device_ids`.
     */
    public readonly deviceServicetags!: pulumi.Output<string[] | undefined>;
    /**
     * Email addresses for notification. Can be set only when `schedule` is `true`.
     */
    public readonly emailAddresses!: pulumi.Output<string[] | undefined>;
    /**
     * Number of times the job has to be polled to get the final status of the resource. Default value is `30`.
     */
    public readonly jobRetryCount!: pulumi.Output<number>;
    /**
     * Schedule notification via cron or any time the baseline becomes non-compliant. Default value is `false`.
     */
    public readonly notifyOnSchedule!: pulumi.Output<boolean>;
    /**
     * Output format type, the input is case senitive. Valid values are `html`, `csv`, `pdf`and `xls`. Default value is `html`.
     */
    public readonly outputFormat!: pulumi.Output<string>;
    /**
     * Reference template ID. Conflicts with `ref_template_name`.
     */
    public readonly refTemplateId!: pulumi.Output<number>;
    /**
     * Reference template name. Conflicts with `ref_template_id`.
     */
    public readonly refTemplateName!: pulumi.Output<string>;
    /**
     * Schedule notification via email. Default value is `false`.
     */
    public readonly schedule!: pulumi.Output<boolean>;
    /**
     * Sleep time interval for job polling in seconds. Default value is `20`.
     */
    public readonly sleepInterval!: pulumi.Output<number>;
    /**
     * Task id associated with baseline.
     */
    public /*out*/ readonly taskId!: pulumi.Output<number>;

    /**
     * Create a ConfigurationBaseline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigurationBaselineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConfigurationBaselineArgs | ConfigurationBaselineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConfigurationBaselineState | undefined;
            resourceInputs["baselineName"] = state ? state.baselineName : undefined;
            resourceInputs["cron"] = state ? state.cron : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceIds"] = state ? state.deviceIds : undefined;
            resourceInputs["deviceServicetags"] = state ? state.deviceServicetags : undefined;
            resourceInputs["emailAddresses"] = state ? state.emailAddresses : undefined;
            resourceInputs["jobRetryCount"] = state ? state.jobRetryCount : undefined;
            resourceInputs["notifyOnSchedule"] = state ? state.notifyOnSchedule : undefined;
            resourceInputs["outputFormat"] = state ? state.outputFormat : undefined;
            resourceInputs["refTemplateId"] = state ? state.refTemplateId : undefined;
            resourceInputs["refTemplateName"] = state ? state.refTemplateName : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["sleepInterval"] = state ? state.sleepInterval : undefined;
            resourceInputs["taskId"] = state ? state.taskId : undefined;
        } else {
            const args = argsOrState as ConfigurationBaselineArgs | undefined;
            if ((!args || args.baselineName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baselineName'");
            }
            resourceInputs["baselineName"] = args ? args.baselineName : undefined;
            resourceInputs["cron"] = args ? args.cron : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceIds"] = args ? args.deviceIds : undefined;
            resourceInputs["deviceServicetags"] = args ? args.deviceServicetags : undefined;
            resourceInputs["emailAddresses"] = args ? args.emailAddresses : undefined;
            resourceInputs["jobRetryCount"] = args ? args.jobRetryCount : undefined;
            resourceInputs["notifyOnSchedule"] = args ? args.notifyOnSchedule : undefined;
            resourceInputs["outputFormat"] = args ? args.outputFormat : undefined;
            resourceInputs["refTemplateId"] = args ? args.refTemplateId : undefined;
            resourceInputs["refTemplateName"] = args ? args.refTemplateName : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["sleepInterval"] = args ? args.sleepInterval : undefined;
            resourceInputs["taskId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConfigurationBaseline.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ConfigurationBaseline resources.
 */
export interface ConfigurationBaselineState {
    /**
     * Name of the Baseline.
     */
    baselineName?: pulumi.Input<string>;
    /**
     * Cron expression for notification schedule. Can be set only when both `schedule` and `notify_on_schedule` are set to
     * `true`.
     */
    cron?: pulumi.Input<string>;
    /**
     * Description of the baseline.
     */
    description?: pulumi.Input<string>;
    /**
     * List of the device id on which the baseline compliance needs to be run. Conflicts with `device_servicetags`.
     */
    deviceIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * List of the device servicetag on which the baseline compliance needs to be run. Conflicts with `device_ids`.
     */
    deviceServicetags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Email addresses for notification. Can be set only when `schedule` is `true`.
     */
    emailAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Number of times the job has to be polled to get the final status of the resource. Default value is `30`.
     */
    jobRetryCount?: pulumi.Input<number>;
    /**
     * Schedule notification via cron or any time the baseline becomes non-compliant. Default value is `false`.
     */
    notifyOnSchedule?: pulumi.Input<boolean>;
    /**
     * Output format type, the input is case senitive. Valid values are `html`, `csv`, `pdf`and `xls`. Default value is `html`.
     */
    outputFormat?: pulumi.Input<string>;
    /**
     * Reference template ID. Conflicts with `ref_template_name`.
     */
    refTemplateId?: pulumi.Input<number>;
    /**
     * Reference template name. Conflicts with `ref_template_id`.
     */
    refTemplateName?: pulumi.Input<string>;
    /**
     * Schedule notification via email. Default value is `false`.
     */
    schedule?: pulumi.Input<boolean>;
    /**
     * Sleep time interval for job polling in seconds. Default value is `20`.
     */
    sleepInterval?: pulumi.Input<number>;
    /**
     * Task id associated with baseline.
     */
    taskId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ConfigurationBaseline resource.
 */
export interface ConfigurationBaselineArgs {
    /**
     * Name of the Baseline.
     */
    baselineName: pulumi.Input<string>;
    /**
     * Cron expression for notification schedule. Can be set only when both `schedule` and `notify_on_schedule` are set to
     * `true`.
     */
    cron?: pulumi.Input<string>;
    /**
     * Description of the baseline.
     */
    description?: pulumi.Input<string>;
    /**
     * List of the device id on which the baseline compliance needs to be run. Conflicts with `device_servicetags`.
     */
    deviceIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * List of the device servicetag on which the baseline compliance needs to be run. Conflicts with `device_ids`.
     */
    deviceServicetags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Email addresses for notification. Can be set only when `schedule` is `true`.
     */
    emailAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Number of times the job has to be polled to get the final status of the resource. Default value is `30`.
     */
    jobRetryCount?: pulumi.Input<number>;
    /**
     * Schedule notification via cron or any time the baseline becomes non-compliant. Default value is `false`.
     */
    notifyOnSchedule?: pulumi.Input<boolean>;
    /**
     * Output format type, the input is case senitive. Valid values are `html`, `csv`, `pdf`and `xls`. Default value is `html`.
     */
    outputFormat?: pulumi.Input<string>;
    /**
     * Reference template ID. Conflicts with `ref_template_name`.
     */
    refTemplateId?: pulumi.Input<number>;
    /**
     * Reference template name. Conflicts with `ref_template_id`.
     */
    refTemplateName?: pulumi.Input<string>;
    /**
     * Schedule notification via email. Default value is `false`.
     */
    schedule?: pulumi.Input<boolean>;
    /**
     * Sleep time interval for job polling in seconds. Default value is `20`.
     */
    sleepInterval?: pulumi.Input<number>;
}
