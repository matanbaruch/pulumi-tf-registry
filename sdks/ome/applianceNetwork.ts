// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApplianceNetwork extends pulumi.CustomResource {
    /**
     * Get an existing ApplianceNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplianceNetworkState, opts?: pulumi.CustomResourceOptions): ApplianceNetwork {
        return new ApplianceNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ome:index/applianceNetwork:ApplianceNetwork';

    /**
     * Returns true if the given object is an instance of ApplianceNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplianceNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplianceNetwork.__pulumiType;
    }

    /**
     * Ome Adapter Setting
     */
    public readonly adapterSetting!: pulumi.Output<outputs.ApplianceNetworkAdapterSetting | undefined>;
    /**
     * Ome Proxy Setting
     */
    public readonly proxySetting!: pulumi.Output<outputs.ApplianceNetworkProxySetting | undefined>;
    /**
     * Ome Session Setting
     */
    public readonly sessionSetting!: pulumi.Output<outputs.ApplianceNetworkSessionSetting | undefined>;
    /**
     * Ome Time Setting
     */
    public readonly timeSetting!: pulumi.Output<outputs.ApplianceNetworkTimeSetting | undefined>;

    /**
     * Create a ApplianceNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ApplianceNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplianceNetworkArgs | ApplianceNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplianceNetworkState | undefined;
            resourceInputs["adapterSetting"] = state ? state.adapterSetting : undefined;
            resourceInputs["proxySetting"] = state ? state.proxySetting : undefined;
            resourceInputs["sessionSetting"] = state ? state.sessionSetting : undefined;
            resourceInputs["timeSetting"] = state ? state.timeSetting : undefined;
        } else {
            const args = argsOrState as ApplianceNetworkArgs | undefined;
            resourceInputs["adapterSetting"] = args ? args.adapterSetting : undefined;
            resourceInputs["proxySetting"] = args ? args.proxySetting : undefined;
            resourceInputs["sessionSetting"] = args ? args.sessionSetting : undefined;
            resourceInputs["timeSetting"] = args ? args.timeSetting : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplianceNetwork.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApplianceNetwork resources.
 */
export interface ApplianceNetworkState {
    /**
     * Ome Adapter Setting
     */
    adapterSetting?: pulumi.Input<inputs.ApplianceNetworkAdapterSetting>;
    /**
     * Ome Proxy Setting
     */
    proxySetting?: pulumi.Input<inputs.ApplianceNetworkProxySetting>;
    /**
     * Ome Session Setting
     */
    sessionSetting?: pulumi.Input<inputs.ApplianceNetworkSessionSetting>;
    /**
     * Ome Time Setting
     */
    timeSetting?: pulumi.Input<inputs.ApplianceNetworkTimeSetting>;
}

/**
 * The set of arguments for constructing a ApplianceNetwork resource.
 */
export interface ApplianceNetworkArgs {
    /**
     * Ome Adapter Setting
     */
    adapterSetting?: pulumi.Input<inputs.ApplianceNetworkAdapterSetting>;
    /**
     * Ome Proxy Setting
     */
    proxySetting?: pulumi.Input<inputs.ApplianceNetworkProxySetting>;
    /**
     * Ome Session Setting
     */
    sessionSetting?: pulumi.Input<inputs.ApplianceNetworkSessionSetting>;
    /**
     * Ome Time Setting
     */
    timeSetting?: pulumi.Input<inputs.ApplianceNetworkTimeSetting>;
}
