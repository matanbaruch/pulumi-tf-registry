// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ConfigurationCompliance extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationCompliance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfigurationComplianceState, opts?: pulumi.CustomResourceOptions): ConfigurationCompliance {
        return new ConfigurationCompliance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ome:index/configurationCompliance:ConfigurationCompliance';

    /**
     * Returns true if the given object is an instance of ConfigurationCompliance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConfigurationCompliance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConfigurationCompliance.__pulumiType;
    }

    /**
     * Id of the Baseline. Cannot be updated.
     */
    public readonly baselineId!: pulumi.Output<number>;
    /**
     * Name of the Baseline. Cannot be updated.
     */
    public readonly baselineName!: pulumi.Output<string>;
    /**
     * Cron to schedule the remediation task.
     */
    public readonly cron!: pulumi.Output<string | undefined>;
    /**
     * Number of times the job has to be polled to get the final status of the resource. Default value is `30`.
     */
    public readonly jobRetryCount!: pulumi.Output<number>;
    /**
     * Provides options to schedule the remediation task immediately, or at a specified time.
     */
    public readonly runLater!: pulumi.Output<boolean | undefined>;
    /**
     * Sleep time interval for job polling in seconds. Default value is `20`.
     */
    public readonly sleepInterval!: pulumi.Output<number>;
    /**
     * Target devices to be remediated.
     */
    public readonly targetDevices!: pulumi.Output<outputs.ConfigurationComplianceTargetDevice[]>;

    /**
     * Create a ConfigurationCompliance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigurationComplianceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConfigurationComplianceArgs | ConfigurationComplianceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConfigurationComplianceState | undefined;
            resourceInputs["baselineId"] = state ? state.baselineId : undefined;
            resourceInputs["baselineName"] = state ? state.baselineName : undefined;
            resourceInputs["cron"] = state ? state.cron : undefined;
            resourceInputs["jobRetryCount"] = state ? state.jobRetryCount : undefined;
            resourceInputs["runLater"] = state ? state.runLater : undefined;
            resourceInputs["sleepInterval"] = state ? state.sleepInterval : undefined;
            resourceInputs["targetDevices"] = state ? state.targetDevices : undefined;
        } else {
            const args = argsOrState as ConfigurationComplianceArgs | undefined;
            if ((!args || args.targetDevices === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetDevices'");
            }
            resourceInputs["baselineId"] = args ? args.baselineId : undefined;
            resourceInputs["baselineName"] = args ? args.baselineName : undefined;
            resourceInputs["cron"] = args ? args.cron : undefined;
            resourceInputs["jobRetryCount"] = args ? args.jobRetryCount : undefined;
            resourceInputs["runLater"] = args ? args.runLater : undefined;
            resourceInputs["sleepInterval"] = args ? args.sleepInterval : undefined;
            resourceInputs["targetDevices"] = args ? args.targetDevices : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConfigurationCompliance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ConfigurationCompliance resources.
 */
export interface ConfigurationComplianceState {
    /**
     * Id of the Baseline. Cannot be updated.
     */
    baselineId?: pulumi.Input<number>;
    /**
     * Name of the Baseline. Cannot be updated.
     */
    baselineName?: pulumi.Input<string>;
    /**
     * Cron to schedule the remediation task.
     */
    cron?: pulumi.Input<string>;
    /**
     * Number of times the job has to be polled to get the final status of the resource. Default value is `30`.
     */
    jobRetryCount?: pulumi.Input<number>;
    /**
     * Provides options to schedule the remediation task immediately, or at a specified time.
     */
    runLater?: pulumi.Input<boolean>;
    /**
     * Sleep time interval for job polling in seconds. Default value is `20`.
     */
    sleepInterval?: pulumi.Input<number>;
    /**
     * Target devices to be remediated.
     */
    targetDevices?: pulumi.Input<pulumi.Input<inputs.ConfigurationComplianceTargetDevice>[]>;
}

/**
 * The set of arguments for constructing a ConfigurationCompliance resource.
 */
export interface ConfigurationComplianceArgs {
    /**
     * Id of the Baseline. Cannot be updated.
     */
    baselineId?: pulumi.Input<number>;
    /**
     * Name of the Baseline. Cannot be updated.
     */
    baselineName?: pulumi.Input<string>;
    /**
     * Cron to schedule the remediation task.
     */
    cron?: pulumi.Input<string>;
    /**
     * Number of times the job has to be polled to get the final status of the resource. Default value is `30`.
     */
    jobRetryCount?: pulumi.Input<number>;
    /**
     * Provides options to schedule the remediation task immediately, or at a specified time.
     */
    runLater?: pulumi.Input<boolean>;
    /**
     * Sleep time interval for job polling in seconds. Default value is `20`.
     */
    sleepInterval?: pulumi.Input<number>;
    /**
     * Target devices to be remediated.
     */
    targetDevices: pulumi.Input<pulumi.Input<inputs.ConfigurationComplianceTargetDevice>[]>;
}
