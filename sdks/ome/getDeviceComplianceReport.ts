// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDeviceComplianceReport(args?: GetDeviceComplianceReportArgs, opts?: pulumi.InvokeOptions): Promise<GetDeviceComplianceReportResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ome:index/getDeviceComplianceReport:getDeviceComplianceReport", {
        "deviceGroupNames": args.deviceGroupNames,
        "deviceIds": args.deviceIds,
        "deviceServiceTags": args.deviceServiceTags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDeviceComplianceReport.
 */
export interface GetDeviceComplianceReportArgs {
    deviceGroupNames?: string[];
    deviceIds?: number[];
    deviceServiceTags?: string[];
}

/**
 * A collection of values returned by getDeviceComplianceReport.
 */
export interface GetDeviceComplianceReportResult {
    readonly deviceComplianceReports: outputs.GetDeviceComplianceReportDeviceComplianceReport[];
    readonly deviceGroupNames?: string[];
    readonly deviceIds?: number[];
    readonly deviceServiceTags?: string[];
    readonly id: number;
}
export function getDeviceComplianceReportOutput(args?: GetDeviceComplianceReportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeviceComplianceReportResult> {
    return pulumi.output(args).apply((a: any) => getDeviceComplianceReport(a, opts))
}

/**
 * A collection of arguments for invoking getDeviceComplianceReport.
 */
export interface GetDeviceComplianceReportOutputArgs {
    deviceGroupNames?: pulumi.Input<pulumi.Input<string>[]>;
    deviceIds?: pulumi.Input<pulumi.Input<number>[]>;
    deviceServiceTags?: pulumi.Input<pulumi.Input<string>[]>;
}
