// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the ome package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'ome';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * OpenManage Enterprise IP address or hostname.
     */
    public readonly host!: pulumi.Output<string>;
    /**
     * OpenManage Enterprise password.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * Set the Http protocol for OpenManage Enterprise client. Default value is `https`.
     */
    public readonly protocol!: pulumi.Output<string | undefined>;
    /**
     * OpenManage Enterprise username.
     */
    public readonly username!: pulumi.Output<string>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["port"] = pulumi.output(args ? args.port : undefined).apply(JSON.stringify);
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["skipssl"] = pulumi.output(args ? args.skipssl : undefined).apply(JSON.stringify);
            resourceInputs["timeout"] = pulumi.output(args ? args.timeout : undefined).apply(JSON.stringify);
            resourceInputs["username"] = args ? args.username : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Provider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * OpenManage Enterprise IP address or hostname.
     */
    host: pulumi.Input<string>;
    /**
     * OpenManage Enterprise password.
     */
    password: pulumi.Input<string>;
    /**
     * OpenManage Enterprise HTTPS port. Default value is `443`.
     */
    port?: pulumi.Input<number>;
    /**
     * Set the Http protocol for OpenManage Enterprise client. Default value is `https`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Skips SSL certificate validation on OpenManage Enterprise. Default value is `false`.
     */
    skipssl?: pulumi.Input<boolean>;
    /**
     * HTTPS timeout in seconds for OpenManage Enterprise client. Default value is `30`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * OpenManage Enterprise username.
     */
    username: pulumi.Input<string>;
}
