// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Template extends pulumi.CustomResource {
    /**
     * Get an existing Template resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TemplateState, opts?: pulumi.CustomResourceOptions): Template {
        return new Template(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ome:index/template:Template';

    /**
     * Returns true if the given object is an instance of Template.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Template {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Template.__pulumiType;
    }

    /**
     * List of attributes associated with a template. This field is ignored while creating a template.
     */
    public readonly attributes!: pulumi.Output<outputs.TemplateAttribute[]>;
    /**
     * The XML content of template. Cannot be updated.
     */
    public readonly content!: pulumi.Output<string>;
    /**
     * Description of the template
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * OME template device type, supported types are Server, Chassis. Cannot be updated and is applicable only for importing
     * xml. Valid values are `Server` and `Chassis`. Default value is `Server`.
     */
    public readonly deviceType!: pulumi.Output<string>;
    /**
     * Comma seperated values of components from a specified server. Valid values are `iDRAC`, `System`, `BIOS`, `NIC`,
     * `LifeCycleController`, `RAID`, `EventFilters` and `All`. Default value is `All`. Cannot be updated.
     */
    public readonly fqdds!: pulumi.Output<string>;
    /**
     * ID of the Identity Pool attached with template.
     */
    public /*out*/ readonly identityPoolId!: pulumi.Output<number>;
    /**
     * Identity Pool name to be attached with template.
     */
    public readonly identityPoolName!: pulumi.Output<string>;
    /**
     * Number of times the job has to be polled to get the final status of the resource. Default value is `5`.
     */
    public readonly jobRetryCount!: pulumi.Output<number>;
    /**
     * Name of the template resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Target device id from which the template needs to be created. Cannot be updated.
     */
    public readonly refdeviceId!: pulumi.Output<number>;
    /**
     * Target device servicetag from which the template needs to be created. Cannot be updated.
     */
    public readonly refdeviceServicetag!: pulumi.Output<string>;
    /**
     * Reference Template name from which the template needs to be cloned. Cannot be updated.
     */
    public readonly reftemplateName!: pulumi.Output<string>;
    /**
     * Sleep time interval for job polling in seconds. Default value is `30`.
     */
    public readonly sleepInterval!: pulumi.Output<number>;
    /**
     * OME template view type. Valid values are `Deployment` and `Compliance`. Default value is `Deployment`. Cannot be
     * updated.
     */
    public readonly viewType!: pulumi.Output<string>;
    /**
     * OME template view type id.
     */
    public /*out*/ readonly viewTypeId!: pulumi.Output<number>;
    /**
     * VLAN details to be attached with template.
     */
    public readonly vlan!: pulumi.Output<outputs.TemplateVlan>;

    /**
     * Create a Template resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TemplateArgs | TemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TemplateState | undefined;
            resourceInputs["attributes"] = state ? state.attributes : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceType"] = state ? state.deviceType : undefined;
            resourceInputs["fqdds"] = state ? state.fqdds : undefined;
            resourceInputs["identityPoolId"] = state ? state.identityPoolId : undefined;
            resourceInputs["identityPoolName"] = state ? state.identityPoolName : undefined;
            resourceInputs["jobRetryCount"] = state ? state.jobRetryCount : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["refdeviceId"] = state ? state.refdeviceId : undefined;
            resourceInputs["refdeviceServicetag"] = state ? state.refdeviceServicetag : undefined;
            resourceInputs["reftemplateName"] = state ? state.reftemplateName : undefined;
            resourceInputs["sleepInterval"] = state ? state.sleepInterval : undefined;
            resourceInputs["viewType"] = state ? state.viewType : undefined;
            resourceInputs["viewTypeId"] = state ? state.viewTypeId : undefined;
            resourceInputs["vlan"] = state ? state.vlan : undefined;
        } else {
            const args = argsOrState as TemplateArgs | undefined;
            resourceInputs["attributes"] = args ? args.attributes : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceType"] = args ? args.deviceType : undefined;
            resourceInputs["fqdds"] = args ? args.fqdds : undefined;
            resourceInputs["identityPoolName"] = args ? args.identityPoolName : undefined;
            resourceInputs["jobRetryCount"] = args ? args.jobRetryCount : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["refdeviceId"] = args ? args.refdeviceId : undefined;
            resourceInputs["refdeviceServicetag"] = args ? args.refdeviceServicetag : undefined;
            resourceInputs["reftemplateName"] = args ? args.reftemplateName : undefined;
            resourceInputs["sleepInterval"] = args ? args.sleepInterval : undefined;
            resourceInputs["viewType"] = args ? args.viewType : undefined;
            resourceInputs["vlan"] = args ? args.vlan : undefined;
            resourceInputs["identityPoolId"] = undefined /*out*/;
            resourceInputs["viewTypeId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Template.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Template resources.
 */
export interface TemplateState {
    /**
     * List of attributes associated with a template. This field is ignored while creating a template.
     */
    attributes?: pulumi.Input<pulumi.Input<inputs.TemplateAttribute>[]>;
    /**
     * The XML content of template. Cannot be updated.
     */
    content?: pulumi.Input<string>;
    /**
     * Description of the template
     */
    description?: pulumi.Input<string>;
    /**
     * OME template device type, supported types are Server, Chassis. Cannot be updated and is applicable only for importing
     * xml. Valid values are `Server` and `Chassis`. Default value is `Server`.
     */
    deviceType?: pulumi.Input<string>;
    /**
     * Comma seperated values of components from a specified server. Valid values are `iDRAC`, `System`, `BIOS`, `NIC`,
     * `LifeCycleController`, `RAID`, `EventFilters` and `All`. Default value is `All`. Cannot be updated.
     */
    fqdds?: pulumi.Input<string>;
    /**
     * ID of the Identity Pool attached with template.
     */
    identityPoolId?: pulumi.Input<number>;
    /**
     * Identity Pool name to be attached with template.
     */
    identityPoolName?: pulumi.Input<string>;
    /**
     * Number of times the job has to be polled to get the final status of the resource. Default value is `5`.
     */
    jobRetryCount?: pulumi.Input<number>;
    /**
     * Name of the template resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Target device id from which the template needs to be created. Cannot be updated.
     */
    refdeviceId?: pulumi.Input<number>;
    /**
     * Target device servicetag from which the template needs to be created. Cannot be updated.
     */
    refdeviceServicetag?: pulumi.Input<string>;
    /**
     * Reference Template name from which the template needs to be cloned. Cannot be updated.
     */
    reftemplateName?: pulumi.Input<string>;
    /**
     * Sleep time interval for job polling in seconds. Default value is `30`.
     */
    sleepInterval?: pulumi.Input<number>;
    /**
     * OME template view type. Valid values are `Deployment` and `Compliance`. Default value is `Deployment`. Cannot be
     * updated.
     */
    viewType?: pulumi.Input<string>;
    /**
     * OME template view type id.
     */
    viewTypeId?: pulumi.Input<number>;
    /**
     * VLAN details to be attached with template.
     */
    vlan?: pulumi.Input<inputs.TemplateVlan>;
}

/**
 * The set of arguments for constructing a Template resource.
 */
export interface TemplateArgs {
    /**
     * List of attributes associated with a template. This field is ignored while creating a template.
     */
    attributes?: pulumi.Input<pulumi.Input<inputs.TemplateAttribute>[]>;
    /**
     * The XML content of template. Cannot be updated.
     */
    content?: pulumi.Input<string>;
    /**
     * Description of the template
     */
    description?: pulumi.Input<string>;
    /**
     * OME template device type, supported types are Server, Chassis. Cannot be updated and is applicable only for importing
     * xml. Valid values are `Server` and `Chassis`. Default value is `Server`.
     */
    deviceType?: pulumi.Input<string>;
    /**
     * Comma seperated values of components from a specified server. Valid values are `iDRAC`, `System`, `BIOS`, `NIC`,
     * `LifeCycleController`, `RAID`, `EventFilters` and `All`. Default value is `All`. Cannot be updated.
     */
    fqdds?: pulumi.Input<string>;
    /**
     * Identity Pool name to be attached with template.
     */
    identityPoolName?: pulumi.Input<string>;
    /**
     * Number of times the job has to be polled to get the final status of the resource. Default value is `5`.
     */
    jobRetryCount?: pulumi.Input<number>;
    /**
     * Name of the template resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Target device id from which the template needs to be created. Cannot be updated.
     */
    refdeviceId?: pulumi.Input<number>;
    /**
     * Target device servicetag from which the template needs to be created. Cannot be updated.
     */
    refdeviceServicetag?: pulumi.Input<string>;
    /**
     * Reference Template name from which the template needs to be cloned. Cannot be updated.
     */
    reftemplateName?: pulumi.Input<string>;
    /**
     * Sleep time interval for job polling in seconds. Default value is `30`.
     */
    sleepInterval?: pulumi.Input<number>;
    /**
     * OME template view type. Valid values are `Deployment` and `Compliance`. Default value is `Deployment`. Cannot be
     * updated.
     */
    viewType?: pulumi.Input<string>;
    /**
     * VLAN details to be attached with template.
     */
    vlan?: pulumi.Input<inputs.TemplateVlan>;
}
