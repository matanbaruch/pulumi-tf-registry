// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirmwareBaselineComplianceReport(args: GetFirmwareBaselineComplianceReportArgs, opts?: pulumi.InvokeOptions): Promise<GetFirmwareBaselineComplianceReportResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ome:index/getFirmwareBaselineComplianceReport:getFirmwareBaselineComplianceReport", {
        "baselineName": args.baselineName,
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirmwareBaselineComplianceReport.
 */
export interface GetFirmwareBaselineComplianceReportArgs {
    baselineName: string;
    filter?: inputs.GetFirmwareBaselineComplianceReportFilter;
}

/**
 * A collection of values returned by getFirmwareBaselineComplianceReport.
 */
export interface GetFirmwareBaselineComplianceReportResult {
    readonly baselineName: string;
    readonly filter?: outputs.GetFirmwareBaselineComplianceReportFilter;
    readonly firmwareComplianceReports: outputs.GetFirmwareBaselineComplianceReportFirmwareComplianceReport[];
    readonly id: number;
}
export function getFirmwareBaselineComplianceReportOutput(args: GetFirmwareBaselineComplianceReportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirmwareBaselineComplianceReportResult> {
    return pulumi.output(args).apply((a: any) => getFirmwareBaselineComplianceReport(a, opts))
}

/**
 * A collection of arguments for invoking getFirmwareBaselineComplianceReport.
 */
export interface GetFirmwareBaselineComplianceReportOutputArgs {
    baselineName: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetFirmwareBaselineComplianceReportFilterArgs>;
}
