// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDestinationMssql(args: GetDestinationMssqlArgs, opts?: pulumi.InvokeOptions): Promise<GetDestinationMssqlResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("airbyte:index/getDestinationMssql:getDestinationMssql", {
        "destinationId": args.destinationId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDestinationMssql.
 */
export interface GetDestinationMssqlArgs {
    destinationId: string;
}

/**
 * A collection of values returned by getDestinationMssql.
 */
export interface GetDestinationMssqlResult {
    readonly configuration: string;
    readonly destinationId: string;
    readonly destinationType: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly workspaceId: string;
}
export function getDestinationMssqlOutput(args: GetDestinationMssqlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDestinationMssqlResult> {
    return pulumi.output(args).apply((a: any) => getDestinationMssql(a, opts))
}

/**
 * A collection of arguments for invoking getDestinationMssql.
 */
export interface GetDestinationMssqlOutputArgs {
    destinationId: pulumi.Input<string>;
}
