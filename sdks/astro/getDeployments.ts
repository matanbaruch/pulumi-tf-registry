// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDeployments(args?: GetDeploymentsArgs, opts?: pulumi.InvokeOptions): Promise<GetDeploymentsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("astro:index/getDeployments:getDeployments", {
        "deploymentIds": args.deploymentIds,
        "names": args.names,
        "workspaceIds": args.workspaceIds,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDeployments.
 */
export interface GetDeploymentsArgs {
    deploymentIds?: string[];
    names?: string[];
    workspaceIds?: string[];
}

/**
 * A collection of values returned by getDeployments.
 */
export interface GetDeploymentsResult {
    readonly deploymentIds?: string[];
    readonly deployments: outputs.GetDeploymentsDeployment[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly names?: string[];
    readonly workspaceIds?: string[];
}
export function getDeploymentsOutput(args?: GetDeploymentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeploymentsResult> {
    return pulumi.output(args).apply((a: any) => getDeployments(a, opts))
}

/**
 * A collection of arguments for invoking getDeployments.
 */
export interface GetDeploymentsOutputArgs {
    deploymentIds?: pulumi.Input<pulumi.Input<string>[]>;
    names?: pulumi.Input<pulumi.Input<string>[]>;
    workspaceIds?: pulumi.Input<pulumi.Input<string>[]>;
}
