// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDeploymentOptions(args?: GetDeploymentOptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetDeploymentOptionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("astro:index/getDeploymentOptions:getDeploymentOptions", {
        "cloudProvider": args.cloudProvider,
        "deploymentId": args.deploymentId,
        "deploymentType": args.deploymentType,
        "executor": args.executor,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDeploymentOptions.
 */
export interface GetDeploymentOptionsArgs {
    cloudProvider?: string;
    deploymentId?: string;
    deploymentType?: string;
    executor?: string;
}

/**
 * A collection of values returned by getDeploymentOptions.
 */
export interface GetDeploymentOptionsResult {
    readonly cloudProvider?: string;
    readonly deploymentId?: string;
    readonly deploymentType?: string;
    readonly executor?: string;
    readonly executors: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resourceQuotas: outputs.GetDeploymentOptionsResourceQuotas;
    readonly runtimeReleases: outputs.GetDeploymentOptionsRuntimeRelease[];
    readonly schedulerMachines: outputs.GetDeploymentOptionsSchedulerMachine[];
    readonly workerMachines: outputs.GetDeploymentOptionsWorkerMachine[];
    readonly workerQueues: outputs.GetDeploymentOptionsWorkerQueues;
    readonly workloadIdentityOptions: outputs.GetDeploymentOptionsWorkloadIdentityOption[];
}
export function getDeploymentOptionsOutput(args?: GetDeploymentOptionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeploymentOptionsResult> {
    return pulumi.output(args).apply((a: any) => getDeploymentOptions(a, opts))
}

/**
 * A collection of arguments for invoking getDeploymentOptions.
 */
export interface GetDeploymentOptionsOutputArgs {
    cloudProvider?: pulumi.Input<string>;
    deploymentId?: pulumi.Input<string>;
    deploymentType?: pulumi.Input<string>;
    executor?: pulumi.Input<string>;
}
