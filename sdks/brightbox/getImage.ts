// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getImage(args?: GetImageArgs, opts?: pulumi.InvokeOptions): Promise<GetImageResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("brightbox:index/getImage:getImage", {
        "ancestorId": args.ancestorId,
        "arch": args.arch,
        "compatibilityMode": args.compatibilityMode,
        "description": args.description,
        "id": args.id,
        "licenceName": args.licenceName,
        "minRam": args.minRam,
        "mostRecent": args.mostRecent,
        "name": args.name,
        "official": args.official,
        "owner": args.owner,
        "public": args.public,
        "source": args.source,
        "sourceTrigger": args.sourceTrigger,
        "sourceType": args.sourceType,
        "status": args.status,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageArgs {
    ancestorId?: string;
    arch?: string;
    compatibilityMode?: boolean;
    description?: string;
    id?: string;
    licenceName?: string;
    minRam?: number;
    mostRecent?: boolean;
    name?: string;
    official?: boolean;
    owner?: string;
    public?: boolean;
    source?: string;
    sourceTrigger?: string;
    sourceType?: string;
    status?: string;
    username?: string;
}

/**
 * A collection of values returned by getImage.
 */
export interface GetImageResult {
    readonly ancestorId: string;
    readonly arch: string;
    readonly compatibilityMode: boolean;
    readonly createdAt: string;
    readonly description: string;
    readonly diskSize: number;
    readonly id: string;
    readonly licenceName: string;
    readonly locked: boolean;
    readonly minRam: number;
    readonly mostRecent?: boolean;
    readonly name: string;
    readonly official: boolean;
    readonly owner: string;
    readonly public: boolean;
    readonly source: string;
    readonly sourceTrigger: string;
    readonly sourceType: string;
    readonly status: string;
    readonly username: string;
    readonly virtualSize: number;
}
export function getImageOutput(args?: GetImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImageResult> {
    return pulumi.output(args).apply((a: any) => getImage(a, opts))
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageOutputArgs {
    ancestorId?: pulumi.Input<string>;
    arch?: pulumi.Input<string>;
    compatibilityMode?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    licenceName?: pulumi.Input<string>;
    minRam?: pulumi.Input<number>;
    mostRecent?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    official?: pulumi.Input<boolean>;
    owner?: pulumi.Input<string>;
    public?: pulumi.Input<boolean>;
    source?: pulumi.Input<string>;
    sourceTrigger?: pulumi.Input<string>;
    sourceType?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}
