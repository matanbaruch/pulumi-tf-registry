// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatabaseType(args?: GetDatabaseTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseTypeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("brightbox:index/getDatabaseType:getDatabaseType", {
        "description": args.description,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseType.
 */
export interface GetDatabaseTypeArgs {
    description?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getDatabaseType.
 */
export interface GetDatabaseTypeResult {
    readonly default: boolean;
    readonly description: string;
    readonly diskSize: number;
    readonly id: string;
    readonly name: string;
    readonly ram: number;
}
export function getDatabaseTypeOutput(args?: GetDatabaseTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseTypeResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseType(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseType.
 */
export interface GetDatabaseTypeOutputArgs {
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
