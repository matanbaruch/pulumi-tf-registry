// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getServerType(args?: GetServerTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetServerTypeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("brightbox:index/getServerType:getServerType", {
        "handle": args.handle,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServerType.
 */
export interface GetServerTypeArgs {
    handle?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getServerType.
 */
export interface GetServerTypeResult {
    readonly cores: number;
    readonly diskSize: number;
    readonly handle: string;
    readonly id: string;
    readonly name: string;
    readonly ram: number;
    readonly status: string;
    readonly storageType: string;
}
export function getServerTypeOutput(args?: GetServerTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerTypeResult> {
    return pulumi.output(args).apply((a: any) => getServerType(a, opts))
}

/**
 * A collection of arguments for invoking getServerType.
 */
export interface GetServerTypeOutputArgs {
    handle?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
