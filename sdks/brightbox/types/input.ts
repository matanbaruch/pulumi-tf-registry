// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ApiClientTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface CloudipPortTranslator {
    /**
     * Incoming Port
     */
    incoming: pulumi.Input<number>;
    /**
     * Outgoing Port
     */
    outgoing: pulumi.Input<number>;
    /**
     * Transport protocol to port translate (tcp/udp)
     */
    protocol: pulumi.Input<string>;
}

export interface CloudipTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface ConfigMapTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface DatabaseServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface FirewallPolicyTimeouts {
    update?: pulumi.Input<string>;
}

export interface FirewallRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface LoadBalancerHealthcheck {
    /**
     * How often to check in milliseconds
     */
    interval?: pulumi.Input<number>;
    /**
     * Port on server to connect to for healthcheck
     */
    port: pulumi.Input<number>;
    /**
     * HTTP path to check if http type healthcheck
     */
    request?: pulumi.Input<string>;
    /**
     * How many checks have to fail before the load balancers considers a server inactive
     */
    thresholdDown?: pulumi.Input<number>;
    /**
     * How many checks have to pass before the load balancer considers the server active
     */
    thresholdUp?: pulumi.Input<number>;
    /**
     * How long to wait for a response before marking the check as a fail
     */
    timeout?: pulumi.Input<number>;
    /**
     * Protocol type to check (tcp/http)
     */
    type: pulumi.Input<string>;
}

export interface LoadBalancerListener {
    /**
     * The port this listener listens on
     */
    in: pulumi.Input<number>;
    /**
     * The port on this server the listener should talk to
     */
    out: pulumi.Input<number>;
    /**
     * The protocol to load balance (http/tcp)
     */
    protocol: pulumi.Input<string>;
    /**
     * The version of the Proxy Protocol supported by the backend servers
     */
    proxyProtocol?: pulumi.Input<string>;
    /**
     * Connection timeout in milliseconds
     */
    timeout?: pulumi.Input<number>;
}

export interface LoadBalancerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface OrbitContainerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface ServerGroupMembershipTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface ServerGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface ServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface VolumeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}
