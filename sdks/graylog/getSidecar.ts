// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSidecar(args?: GetSidecarArgs, opts?: pulumi.InvokeOptions): Promise<GetSidecarResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("graylog:index/getSidecar:getSidecar", {
        "id": args.id,
        "nodeId": args.nodeId,
        "nodeName": args.nodeName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSidecar.
 */
export interface GetSidecarArgs {
    id?: string;
    nodeId?: string;
    nodeName?: string;
}

/**
 * A collection of values returned by getSidecar.
 */
export interface GetSidecarResult {
    readonly id: string;
    readonly nodeId?: string;
    readonly nodeName?: string;
}
export function getSidecarOutput(args?: GetSidecarOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSidecarResult> {
    return pulumi.output(args).apply((a: any) => getSidecar(a, opts))
}

/**
 * A collection of arguments for invoking getSidecar.
 */
export interface GetSidecarOutputArgs {
    id?: pulumi.Input<string>;
    nodeId?: pulumi.Input<string>;
    nodeName?: pulumi.Input<string>;
}
