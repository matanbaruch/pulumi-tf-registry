// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDashboard(args?: GetDashboardArgs, opts?: pulumi.InvokeOptions): Promise<GetDashboardResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("graylog:index/getDashboard:getDashboard", {
        "createdAt": args.createdAt,
        "dashboardId": args.dashboardId,
        "description": args.description,
        "id": args.id,
        "title": args.title,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDashboard.
 */
export interface GetDashboardArgs {
    createdAt?: string;
    dashboardId?: string;
    description?: string;
    id?: string;
    title?: string;
}

/**
 * A collection of values returned by getDashboard.
 */
export interface GetDashboardResult {
    readonly createdAt: string;
    readonly dashboardId?: string;
    readonly description: string;
    readonly id: string;
    readonly title?: string;
}
export function getDashboardOutput(args?: GetDashboardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDashboardResult> {
    return pulumi.output(args).apply((a: any) => getDashboard(a, opts))
}

/**
 * A collection of arguments for invoking getDashboard.
 */
export interface GetDashboardOutputArgs {
    createdAt?: pulumi.Input<string>;
    dashboardId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    title?: pulumi.Input<string>;
}
