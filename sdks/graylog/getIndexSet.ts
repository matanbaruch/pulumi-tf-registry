// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIndexSet(args?: GetIndexSetArgs, opts?: pulumi.InvokeOptions): Promise<GetIndexSetResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("graylog:index/getIndexSet:getIndexSet", {
        "creationDate": args.creationDate,
        "default": args.default,
        "description": args.description,
        "fieldTypeRefreshInterval": args.fieldTypeRefreshInterval,
        "id": args.id,
        "indexAnalyzer": args.indexAnalyzer,
        "indexOptimizationDisabled": args.indexOptimizationDisabled,
        "indexOptimizationMaxNumSegments": args.indexOptimizationMaxNumSegments,
        "indexPrefix": args.indexPrefix,
        "indexSetId": args.indexSetId,
        "replicas": args.replicas,
        "retentionStrategy": args.retentionStrategy,
        "retentionStrategyClass": args.retentionStrategyClass,
        "rotationStrategy": args.rotationStrategy,
        "rotationStrategyClass": args.rotationStrategyClass,
        "shards": args.shards,
        "title": args.title,
        "writable": args.writable,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIndexSet.
 */
export interface GetIndexSetArgs {
    creationDate?: string;
    default?: boolean;
    description?: string;
    fieldTypeRefreshInterval?: number;
    id?: string;
    indexAnalyzer?: string;
    indexOptimizationDisabled?: boolean;
    indexOptimizationMaxNumSegments?: number;
    indexPrefix?: string;
    indexSetId?: string;
    replicas?: number;
    retentionStrategy?: string;
    retentionStrategyClass?: string;
    rotationStrategy?: string;
    rotationStrategyClass?: string;
    shards?: number;
    title?: string;
    writable?: boolean;
}

/**
 * A collection of values returned by getIndexSet.
 */
export interface GetIndexSetResult {
    readonly creationDate: string;
    readonly default: boolean;
    readonly description: string;
    readonly fieldTypeRefreshInterval: number;
    readonly id: string;
    readonly indexAnalyzer: string;
    readonly indexOptimizationDisabled: boolean;
    readonly indexOptimizationMaxNumSegments: number;
    readonly indexPrefix?: string;
    readonly indexSetId?: string;
    readonly replicas: number;
    readonly retentionStrategy: string;
    readonly retentionStrategyClass: string;
    readonly rotationStrategy: string;
    readonly rotationStrategyClass: string;
    readonly shards: number;
    readonly title?: string;
    readonly writable: boolean;
}
export function getIndexSetOutput(args?: GetIndexSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIndexSetResult> {
    return pulumi.output(args).apply((a: any) => getIndexSet(a, opts))
}

/**
 * A collection of arguments for invoking getIndexSet.
 */
export interface GetIndexSetOutputArgs {
    creationDate?: pulumi.Input<string>;
    default?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    fieldTypeRefreshInterval?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    indexAnalyzer?: pulumi.Input<string>;
    indexOptimizationDisabled?: pulumi.Input<boolean>;
    indexOptimizationMaxNumSegments?: pulumi.Input<number>;
    indexPrefix?: pulumi.Input<string>;
    indexSetId?: pulumi.Input<string>;
    replicas?: pulumi.Input<number>;
    retentionStrategy?: pulumi.Input<string>;
    retentionStrategyClass?: pulumi.Input<string>;
    rotationStrategy?: pulumi.Input<string>;
    rotationStrategyClass?: pulumi.Input<string>;
    shards?: pulumi.Input<number>;
    title?: pulumi.Input<string>;
    writable?: pulumi.Input<boolean>;
}
