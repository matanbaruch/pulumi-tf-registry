// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStack(args: GetStackArgs, opts?: pulumi.InvokeOptions): Promise<GetStackResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ec:index/getStack:getStack", {
        "lock": args.lock,
        "region": args.region,
        "versionRegex": args.versionRegex,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStack.
 */
export interface GetStackArgs {
    lock?: boolean;
    region: string;
    versionRegex: string;
}

/**
 * A collection of values returned by getStack.
 */
export interface GetStackResult {
    readonly accessible: boolean;
    readonly allowlisted: boolean;
    readonly apms: outputs.GetStackApm[];
    readonly elasticsearches: outputs.GetStackElasticsearch[];
    readonly enterpriseSearches: outputs.GetStackEnterpriseSearch[];
    readonly id: string;
    readonly kibanas: outputs.GetStackKibana[];
    readonly lock?: boolean;
    readonly minUpgradableFrom: string;
    readonly region: string;
    readonly upgradableTos: string[];
    readonly version: string;
    readonly versionRegex: string;
}
export function getStackOutput(args: GetStackOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStackResult> {
    return pulumi.output(args).apply((a: any) => getStack(a, opts))
}

/**
 * A collection of arguments for invoking getStack.
 */
export interface GetStackOutputArgs {
    lock?: pulumi.Input<boolean>;
    region: pulumi.Input<string>;
    versionRegex: pulumi.Input<string>;
}
