// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGcpPrivateServiceConnectEndpoint(args: GetGcpPrivateServiceConnectEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetGcpPrivateServiceConnectEndpointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ec:index/getGcpPrivateServiceConnectEndpoint:getGcpPrivateServiceConnectEndpoint", {
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGcpPrivateServiceConnectEndpoint.
 */
export interface GetGcpPrivateServiceConnectEndpointArgs {
    region: string;
}

/**
 * A collection of values returned by getGcpPrivateServiceConnectEndpoint.
 */
export interface GetGcpPrivateServiceConnectEndpointResult {
    readonly domainName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
    readonly serviceAttachmentUri: string;
}
export function getGcpPrivateServiceConnectEndpointOutput(args: GetGcpPrivateServiceConnectEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGcpPrivateServiceConnectEndpointResult> {
    return pulumi.output(args).apply((a: any) => getGcpPrivateServiceConnectEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getGcpPrivateServiceConnectEndpoint.
 */
export interface GetGcpPrivateServiceConnectEndpointOutputArgs {
    region: pulumi.Input<string>;
}
