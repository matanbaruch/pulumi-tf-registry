// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BudgetAdjustment extends pulumi.CustomResource {
    /**
     * Get an existing BudgetAdjustment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BudgetAdjustmentState, opts?: pulumi.CustomResourceOptions): BudgetAdjustment {
        return new BudgetAdjustment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nobl9:index/budgetAdjustment:BudgetAdjustment';

    /**
     * Returns true if the given object is an instance of BudgetAdjustment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BudgetAdjustment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BudgetAdjustment.__pulumiType;
    }

    /**
     * Optional description of the resource. Here, you can add details about who is responsible for the integration
     * (team/owner) or the purpose of creating it.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * User-friendly display name of the resource.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * The duration of the budget adjustment event. The expected value for this field is a string formatted as a time duration.
     * The duration must be defined with a precision of 1 minute. Example: `1h10m`
     */
    public readonly duration!: pulumi.Output<string>;
    /**
     * Filters are used to select SLOs for the budget adjustment event.
     */
    public readonly filters!: pulumi.Output<outputs.BudgetAdjustmentFilter[] | undefined>;
    /**
     * The time at which the first event is scheduled to start. The expected value must be a string representing the date and
     * time in RFC3339 format. Example: `2022-12-31T00:00:00Z`
     */
    public readonly firstEventStart!: pulumi.Output<string>;
    /**
     * Unique name of the resource, must conform to the naming convention from [DNS
     * RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The recurrence rule for the budget adjustment event. The expected value is a string in RRULE format. Example:
     * `FREQ=MONTHLY;BYMONTHDAY=1`
     */
    public readonly rrule!: pulumi.Output<string | undefined>;

    /**
     * Create a BudgetAdjustment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BudgetAdjustmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BudgetAdjustmentArgs | BudgetAdjustmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BudgetAdjustmentState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["duration"] = state ? state.duration : undefined;
            resourceInputs["filters"] = state ? state.filters : undefined;
            resourceInputs["firstEventStart"] = state ? state.firstEventStart : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rrule"] = state ? state.rrule : undefined;
        } else {
            const args = argsOrState as BudgetAdjustmentArgs | undefined;
            if ((!args || args.duration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'duration'");
            }
            if ((!args || args.firstEventStart === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firstEventStart'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["duration"] = args ? args.duration : undefined;
            resourceInputs["filters"] = args ? args.filters : undefined;
            resourceInputs["firstEventStart"] = args ? args.firstEventStart : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rrule"] = args ? args.rrule : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BudgetAdjustment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BudgetAdjustment resources.
 */
export interface BudgetAdjustmentState {
    /**
     * Optional description of the resource. Here, you can add details about who is responsible for the integration
     * (team/owner) or the purpose of creating it.
     */
    description?: pulumi.Input<string>;
    /**
     * User-friendly display name of the resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The duration of the budget adjustment event. The expected value for this field is a string formatted as a time duration.
     * The duration must be defined with a precision of 1 minute. Example: `1h10m`
     */
    duration?: pulumi.Input<string>;
    /**
     * Filters are used to select SLOs for the budget adjustment event.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.BudgetAdjustmentFilter>[]>;
    /**
     * The time at which the first event is scheduled to start. The expected value must be a string representing the date and
     * time in RFC3339 format. Example: `2022-12-31T00:00:00Z`
     */
    firstEventStart?: pulumi.Input<string>;
    /**
     * Unique name of the resource, must conform to the naming convention from [DNS
     * RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    name?: pulumi.Input<string>;
    /**
     * The recurrence rule for the budget adjustment event. The expected value is a string in RRULE format. Example:
     * `FREQ=MONTHLY;BYMONTHDAY=1`
     */
    rrule?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BudgetAdjustment resource.
 */
export interface BudgetAdjustmentArgs {
    /**
     * Optional description of the resource. Here, you can add details about who is responsible for the integration
     * (team/owner) or the purpose of creating it.
     */
    description?: pulumi.Input<string>;
    /**
     * User-friendly display name of the resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The duration of the budget adjustment event. The expected value for this field is a string formatted as a time duration.
     * The duration must be defined with a precision of 1 minute. Example: `1h10m`
     */
    duration: pulumi.Input<string>;
    /**
     * Filters are used to select SLOs for the budget adjustment event.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.BudgetAdjustmentFilter>[]>;
    /**
     * The time at which the first event is scheduled to start. The expected value must be a string representing the date and
     * time in RFC3339 format. Example: `2022-12-31T00:00:00Z`
     */
    firstEventStart: pulumi.Input<string>;
    /**
     * Unique name of the resource, must conform to the naming convention from [DNS
     * RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    name?: pulumi.Input<string>;
    /**
     * The recurrence rule for the budget adjustment event. The expected value is a string in RRULE format. Example:
     * `FREQ=MONTHLY;BYMONTHDAY=1`
     */
    rrule?: pulumi.Input<string>;
}
