// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDomainRecords(args: GetDomainRecordsArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainRecordsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("serverspace:index/getDomainRecords:getDomainRecords", {
        "domain": args.domain,
        "filters": args.filters,
        "id": args.id,
        "sorts": args.sorts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDomainRecords.
 */
export interface GetDomainRecordsArgs {
    domain: string;
    filters?: inputs.GetDomainRecordsFilter[];
    id?: string;
    sorts?: inputs.GetDomainRecordsSort[];
}

/**
 * A collection of values returned by getDomainRecords.
 */
export interface GetDomainRecordsResult {
    readonly domain: string;
    readonly filters?: outputs.GetDomainRecordsFilter[];
    readonly id: string;
    readonly records: outputs.GetDomainRecordsRecord[];
    readonly sorts?: outputs.GetDomainRecordsSort[];
}
export function getDomainRecordsOutput(args: GetDomainRecordsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainRecordsResult> {
    return pulumi.output(args).apply((a: any) => getDomainRecords(a, opts))
}

/**
 * A collection of arguments for invoking getDomainRecords.
 */
export interface GetDomainRecordsOutputArgs {
    domain: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDomainRecordsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    sorts?: pulumi.Input<pulumi.Input<inputs.GetDomainRecordsSortArgs>[]>;
}
