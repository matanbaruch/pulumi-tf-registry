// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServer(args: GetServerArgs, opts?: pulumi.InvokeOptions): Promise<GetServerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("serverspace:index/getServer:getServer", {
        "bootVolumeSize": args.bootVolumeSize,
        "cpu": args.cpu,
        "id": args.id,
        "location": args.location,
        "name": args.name,
        "nics": args.nics,
        "ram": args.ram,
        "sshKeys": args.sshKeys,
        "state": args.state,
        "tags": args.tags,
        "volumes": args.volumes,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServer.
 */
export interface GetServerArgs {
    bootVolumeSize?: number;
    cpu?: number;
    id: string;
    location?: string;
    name?: string;
    nics?: inputs.GetServerNic[];
    ram?: number;
    sshKeys?: number[];
    state?: string;
    tags?: string[];
    volumes?: inputs.GetServerVolume[];
}

/**
 * A collection of values returned by getServer.
 */
export interface GetServerResult {
    readonly bootVolumeId: number;
    readonly bootVolumeSize?: number;
    readonly cpu?: number;
    readonly id: string;
    readonly location?: string;
    readonly name?: string;
    readonly nics?: outputs.GetServerNic[];
    readonly publicIpAddresses: string[];
    readonly ram?: number;
    readonly sshKeys: number[];
    readonly state?: string;
    readonly tags?: string[];
    readonly volumes?: outputs.GetServerVolume[];
}
export function getServerOutput(args: GetServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerResult> {
    return pulumi.output(args).apply((a: any) => getServer(a, opts))
}

/**
 * A collection of arguments for invoking getServer.
 */
export interface GetServerOutputArgs {
    bootVolumeSize?: pulumi.Input<number>;
    cpu?: pulumi.Input<number>;
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nics?: pulumi.Input<pulumi.Input<inputs.GetServerNicArgs>[]>;
    ram?: pulumi.Input<number>;
    sshKeys?: pulumi.Input<pulumi.Input<number>[]>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    volumes?: pulumi.Input<pulumi.Input<inputs.GetServerVolumeArgs>[]>;
}
