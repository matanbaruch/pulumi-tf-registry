// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUserSshkeys(args?: GetUserSshkeysArgs, opts?: pulumi.InvokeOptions): Promise<GetUserSshkeysResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getUserSshkeys:getUserSshkeys", {
        "id": args.id,
        "userId": args.userId,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUserSshkeys.
 */
export interface GetUserSshkeysArgs {
    id?: string;
    userId?: number;
    username?: string;
}

/**
 * A collection of values returned by getUserSshkeys.
 */
export interface GetUserSshkeysResult {
    readonly id: string;
    readonly keys: outputs.GetUserSshkeysKey[];
    readonly userId: number;
    readonly username: string;
}
export function getUserSshkeysOutput(args?: GetUserSshkeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserSshkeysResult> {
    return pulumi.output(args).apply((a: any) => getUserSshkeys(a, opts))
}

/**
 * A collection of arguments for invoking getUserSshkeys.
 */
export interface GetUserSshkeysOutputArgs {
    id?: pulumi.Input<string>;
    userId?: pulumi.Input<number>;
    username?: pulumi.Input<string>;
}
