// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProjectTags(args: GetProjectTagsArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectTagsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getProjectTags:getProjectTags", {
        "id": args.id,
        "orderBy": args.orderBy,
        "project": args.project,
        "search": args.search,
        "sort": args.sort,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProjectTags.
 */
export interface GetProjectTagsArgs {
    id?: string;
    orderBy?: string;
    project: string;
    search?: string;
    sort?: string;
}

/**
 * A collection of values returned by getProjectTags.
 */
export interface GetProjectTagsResult {
    readonly id: string;
    readonly orderBy?: string;
    readonly project: string;
    readonly search?: string;
    readonly sort?: string;
    readonly tags: outputs.GetProjectTagsTag[];
}
export function getProjectTagsOutput(args: GetProjectTagsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectTagsResult> {
    return pulumi.output(args).apply((a: any) => getProjectTags(a, opts))
}

/**
 * A collection of arguments for invoking getProjectTags.
 */
export interface GetProjectTagsOutputArgs {
    id?: pulumi.Input<string>;
    orderBy?: pulumi.Input<string>;
    project: pulumi.Input<string>;
    search?: pulumi.Input<string>;
    sort?: pulumi.Input<string>;
}
