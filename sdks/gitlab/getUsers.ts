// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUsers(args?: GetUsersArgs, opts?: pulumi.InvokeOptions): Promise<GetUsersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getUsers:getUsers", {
        "active": args.active,
        "blocked": args.blocked,
        "createdAfter": args.createdAfter,
        "createdBefore": args.createdBefore,
        "externProvider": args.externProvider,
        "externUid": args.externUid,
        "id": args.id,
        "orderBy": args.orderBy,
        "search": args.search,
        "sort": args.sort,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersArgs {
    active?: boolean;
    blocked?: boolean;
    createdAfter?: string;
    createdBefore?: string;
    externProvider?: string;
    externUid?: string;
    id?: string;
    orderBy?: string;
    search?: string;
    sort?: string;
}

/**
 * A collection of values returned by getUsers.
 */
export interface GetUsersResult {
    readonly active?: boolean;
    readonly blocked?: boolean;
    readonly createdAfter?: string;
    readonly createdBefore?: string;
    readonly externProvider?: string;
    readonly externUid?: string;
    readonly id: string;
    readonly orderBy?: string;
    readonly search?: string;
    readonly sort?: string;
    readonly users: outputs.GetUsersUser[];
}
export function getUsersOutput(args?: GetUsersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUsersResult> {
    return pulumi.output(args).apply((a: any) => getUsers(a, opts))
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersOutputArgs {
    active?: pulumi.Input<boolean>;
    blocked?: pulumi.Input<boolean>;
    createdAfter?: pulumi.Input<string>;
    createdBefore?: pulumi.Input<string>;
    externProvider?: pulumi.Input<string>;
    externUid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    orderBy?: pulumi.Input<string>;
    search?: pulumi.Input<string>;
    sort?: pulumi.Input<string>;
}
