// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGroupMembership(args?: GetGroupMembershipArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupMembershipResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getGroupMembership:getGroupMembership", {
        "accessLevel": args.accessLevel,
        "fullPath": args.fullPath,
        "groupId": args.groupId,
        "id": args.id,
        "inherited": args.inherited,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGroupMembership.
 */
export interface GetGroupMembershipArgs {
    accessLevel?: string;
    fullPath?: string;
    groupId?: number;
    id?: string;
    inherited?: boolean;
}

/**
 * A collection of values returned by getGroupMembership.
 */
export interface GetGroupMembershipResult {
    readonly accessLevel: string;
    readonly fullPath: string;
    readonly groupId: number;
    readonly id: string;
    readonly inherited?: boolean;
    readonly members: outputs.GetGroupMembershipMember[];
}
export function getGroupMembershipOutput(args?: GetGroupMembershipOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupMembershipResult> {
    return pulumi.output(args).apply((a: any) => getGroupMembership(a, opts))
}

/**
 * A collection of arguments for invoking getGroupMembership.
 */
export interface GetGroupMembershipOutputArgs {
    accessLevel?: pulumi.Input<string>;
    fullPath?: pulumi.Input<string>;
    groupId?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    inherited?: pulumi.Input<boolean>;
}
