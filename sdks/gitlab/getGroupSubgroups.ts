// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGroupSubgroups(args: GetGroupSubgroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupSubgroupsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getGroupSubgroups:getGroupSubgroups", {
        "allAvailable": args.allAvailable,
        "groupId": args.groupId,
        "id": args.id,
        "minAccessLevel": args.minAccessLevel,
        "orderBy": args.orderBy,
        "owned": args.owned,
        "search": args.search,
        "skipGroups": args.skipGroups,
        "sort": args.sort,
        "statistics": args.statistics,
        "withCustomAttributes": args.withCustomAttributes,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGroupSubgroups.
 */
export interface GetGroupSubgroupsArgs {
    allAvailable?: boolean;
    groupId: number;
    id?: string;
    minAccessLevel?: string;
    orderBy?: string;
    owned?: boolean;
    search?: string;
    skipGroups?: number[];
    sort?: string;
    statistics?: boolean;
    withCustomAttributes?: boolean;
}

/**
 * A collection of values returned by getGroupSubgroups.
 */
export interface GetGroupSubgroupsResult {
    readonly allAvailable: boolean;
    readonly groupId: number;
    readonly id: string;
    readonly minAccessLevel: string;
    readonly orderBy: string;
    readonly owned: boolean;
    readonly search: string;
    readonly skipGroups: number[];
    readonly sort: string;
    readonly statistics: boolean;
    readonly subgroups: outputs.GetGroupSubgroupsSubgroup[];
    readonly withCustomAttributes: boolean;
}
export function getGroupSubgroupsOutput(args: GetGroupSubgroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupSubgroupsResult> {
    return pulumi.output(args).apply((a: any) => getGroupSubgroups(a, opts))
}

/**
 * A collection of arguments for invoking getGroupSubgroups.
 */
export interface GetGroupSubgroupsOutputArgs {
    allAvailable?: pulumi.Input<boolean>;
    groupId: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    minAccessLevel?: pulumi.Input<string>;
    orderBy?: pulumi.Input<string>;
    owned?: pulumi.Input<boolean>;
    search?: pulumi.Input<string>;
    skipGroups?: pulumi.Input<pulumi.Input<number>[]>;
    sort?: pulumi.Input<string>;
    statistics?: pulumi.Input<boolean>;
    withCustomAttributes?: pulumi.Input<boolean>;
}
