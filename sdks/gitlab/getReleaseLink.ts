// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getReleaseLink(args: GetReleaseLinkArgs, opts?: pulumi.InvokeOptions): Promise<GetReleaseLinkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getReleaseLink:getReleaseLink", {
        "id": args.id,
        "linkId": args.linkId,
        "project": args.project,
        "tagName": args.tagName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getReleaseLink.
 */
export interface GetReleaseLinkArgs {
    id?: string;
    linkId: number;
    project: string;
    tagName: string;
}

/**
 * A collection of values returned by getReleaseLink.
 */
export interface GetReleaseLinkResult {
    readonly directAssetUrl: string;
    readonly external: boolean;
    readonly filepath: string;
    readonly id: string;
    readonly linkId: number;
    readonly linkType: string;
    readonly name: string;
    readonly project: string;
    readonly tagName: string;
    readonly url: string;
}
export function getReleaseLinkOutput(args: GetReleaseLinkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReleaseLinkResult> {
    return pulumi.output(args).apply((a: any) => getReleaseLink(a, opts))
}

/**
 * A collection of arguments for invoking getReleaseLink.
 */
export interface GetReleaseLinkOutputArgs {
    id?: pulumi.Input<string>;
    linkId: pulumi.Input<number>;
    project: pulumi.Input<string>;
    tagName: pulumi.Input<string>;
}
