// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProjectHooks(args: GetProjectHooksArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectHooksResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getProjectHooks:getProjectHooks", {
        "id": args.id,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProjectHooks.
 */
export interface GetProjectHooksArgs {
    id?: string;
    project: string;
}

/**
 * A collection of values returned by getProjectHooks.
 */
export interface GetProjectHooksResult {
    readonly hooks: outputs.GetProjectHooksHook[];
    readonly id: string;
    readonly project: string;
}
export function getProjectHooksOutput(args: GetProjectHooksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectHooksResult> {
    return pulumi.output(args).apply((a: any) => getProjectHooks(a, opts))
}

/**
 * A collection of arguments for invoking getProjectHooks.
 */
export interface GetProjectHooksOutputArgs {
    id?: pulumi.Input<string>;
    project: pulumi.Input<string>;
}
