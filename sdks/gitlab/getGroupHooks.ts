// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGroupHooks(args: GetGroupHooksArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupHooksResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getGroupHooks:getGroupHooks", {
        "group": args.group,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGroupHooks.
 */
export interface GetGroupHooksArgs {
    group: string;
    id?: string;
}

/**
 * A collection of values returned by getGroupHooks.
 */
export interface GetGroupHooksResult {
    readonly group: string;
    readonly hooks: outputs.GetGroupHooksHook[];
    readonly id: string;
}
export function getGroupHooksOutput(args: GetGroupHooksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupHooksResult> {
    return pulumi.output(args).apply((a: any) => getGroupHooks(a, opts))
}

/**
 * A collection of arguments for invoking getGroupHooks.
 */
export interface GetGroupHooksOutputArgs {
    group: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
