// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComplianceFramework(args: GetComplianceFrameworkArgs, opts?: pulumi.InvokeOptions): Promise<GetComplianceFrameworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getComplianceFramework:getComplianceFramework", {
        "name": args.name,
        "namespacePath": args.namespacePath,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComplianceFramework.
 */
export interface GetComplianceFrameworkArgs {
    name: string;
    namespacePath: string;
}

/**
 * A collection of values returned by getComplianceFramework.
 */
export interface GetComplianceFrameworkResult {
    readonly color: string;
    readonly default: boolean;
    readonly description: string;
    readonly frameworkId: string;
    readonly id: string;
    readonly name: string;
    readonly namespacePath: string;
    readonly pipelineConfigurationFullPath: string;
}
export function getComplianceFrameworkOutput(args: GetComplianceFrameworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComplianceFrameworkResult> {
    return pulumi.output(args).apply((a: any) => getComplianceFramework(a, opts))
}

/**
 * A collection of arguments for invoking getComplianceFramework.
 */
export interface GetComplianceFrameworkOutputArgs {
    name: pulumi.Input<string>;
    namespacePath: pulumi.Input<string>;
}
