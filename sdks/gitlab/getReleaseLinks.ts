// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getReleaseLinks(args: GetReleaseLinksArgs, opts?: pulumi.InvokeOptions): Promise<GetReleaseLinksResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getReleaseLinks:getReleaseLinks", {
        "id": args.id,
        "project": args.project,
        "tagName": args.tagName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getReleaseLinks.
 */
export interface GetReleaseLinksArgs {
    id?: string;
    project: string;
    tagName: string;
}

/**
 * A collection of values returned by getReleaseLinks.
 */
export interface GetReleaseLinksResult {
    readonly id: string;
    readonly project: string;
    readonly releaseLinks: outputs.GetReleaseLinksReleaseLink[];
    readonly tagName: string;
}
export function getReleaseLinksOutput(args: GetReleaseLinksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReleaseLinksResult> {
    return pulumi.output(args).apply((a: any) => getReleaseLinks(a, opts))
}

/**
 * A collection of arguments for invoking getReleaseLinks.
 */
export interface GetReleaseLinksOutputArgs {
    id?: pulumi.Input<string>;
    project: pulumi.Input<string>;
    tagName: pulumi.Input<string>;
}
