// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getClusterAgent(args: GetClusterAgentArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterAgentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gitlab:index/getClusterAgent:getClusterAgent", {
        "agentId": args.agentId,
        "id": args.id,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getClusterAgent.
 */
export interface GetClusterAgentArgs {
    agentId: number;
    id?: string;
    project: string;
}

/**
 * A collection of values returned by getClusterAgent.
 */
export interface GetClusterAgentResult {
    readonly agentId: number;
    readonly createdAt: string;
    readonly createdByUserId: number;
    readonly id: string;
    readonly name: string;
    readonly project: string;
}
export function getClusterAgentOutput(args: GetClusterAgentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterAgentResult> {
    return pulumi.output(args).apply((a: any) => getClusterAgent(a, opts))
}

/**
 * A collection of arguments for invoking getClusterAgent.
 */
export interface GetClusterAgentOutputArgs {
    agentId: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    project: pulumi.Input<string>;
}
