// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPack(args?: GetPackArgs, opts?: pulumi.InvokeOptions): Promise<GetPackResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spectrocloud:index/getPack:getPack", {
        "clouds": args.clouds,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "registryUid": args.registryUid,
        "type": args.type,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPack.
 */
export interface GetPackArgs {
    clouds?: string[];
    filters?: string;
    id?: string;
    name?: string;
    registryUid?: string;
    type?: string;
    version?: string;
}

/**
 * A collection of values returned by getPack.
 */
export interface GetPackResult {
    readonly clouds: string[];
    readonly filters?: string;
    readonly id: string;
    readonly name: string;
    readonly registryUid: string;
    readonly type: string;
    readonly values: string;
    readonly version: string;
}
export function getPackOutput(args?: GetPackOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPackResult> {
    return pulumi.output(args).apply((a: any) => getPack(a, opts))
}

/**
 * A collection of arguments for invoking getPack.
 */
export interface GetPackOutputArgs {
    clouds?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    registryUid?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}
