// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ClusterProfile extends pulumi.CustomResource {
    /**
     * Get an existing ClusterProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterProfileState, opts?: pulumi.CustomResourceOptions): ClusterProfile {
        return new ClusterProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spectrocloud:index/clusterProfile:ClusterProfile';

    /**
     * Returns true if the given object is an instance of ClusterProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterProfile.__pulumiType;
    }

    /**
     * Specify the infrastructure provider the cluster profile is for. Only Palette supported infrastructure providers can be
     * used. The supported cloud types are - `all, aws, azure, gcp, vsphere, openstack, maas, virtual, baremetal, eks, aks,
     * edge, edge-native, tencent, tke, generic, and gke`,If the value is set to `all`, then the type must be set to `add-on`.
     * Otherwise, the cluster profile may be incompatible with other providers. Default value is `all`.
     */
    public readonly cloud!: pulumi.Output<string | undefined>;
    public readonly context!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * For packs of type `spectro`, `helm`, and `manifest`, at least one pack must be specified.
     */
    public readonly packs!: pulumi.Output<outputs.ClusterProfilePack[] | undefined>;
    /**
     * List of variables for the cluster profile. Note: This is a preview feature and is currently only supported for the
     * `edge_native` cloud type and general `add-on` profiles.
     */
    public readonly profileVariables!: pulumi.Output<outputs.ClusterProfileProfileVariables | undefined>;
    /**
     * A list of tags to be applied to the cluster. Tags must be in the form of `key:value`.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ClusterProfileTimeouts | undefined>;
    /**
     * Specify the cluster profile type to use. Allowed values are `cluster`, `infra`, `add-on`, and `system`. These values map
     * to the following User Interface (UI) labels. Use the value ' cluster ' for a **Full** cluster profile.For an
     * Infrastructure cluster profile, use the value `infra`; for an Add-on cluster profile, use the value `add-on`.System
     * cluster profiles can be specified using the value `system`. To learn more about cluster profiles, refer to the [Cluster
     * Profile](https://docs.spectrocloud.com/cluster-profiles) documentation. Default value is `add-on`.
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * Version of the cluster profile. Defaults to '1.0.0'.
     */
    public readonly version!: pulumi.Output<string | undefined>;

    /**
     * Create a ClusterProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ClusterProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterProfileArgs | ClusterProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterProfileState | undefined;
            resourceInputs["cloud"] = state ? state.cloud : undefined;
            resourceInputs["context"] = state ? state.context : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["packs"] = state ? state.packs : undefined;
            resourceInputs["profileVariables"] = state ? state.profileVariables : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ClusterProfileArgs | undefined;
            resourceInputs["cloud"] = args ? args.cloud : undefined;
            resourceInputs["context"] = args ? args.context : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["packs"] = args ? args.packs : undefined;
            resourceInputs["profileVariables"] = args ? args.profileVariables : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClusterProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ClusterProfile resources.
 */
export interface ClusterProfileState {
    /**
     * Specify the infrastructure provider the cluster profile is for. Only Palette supported infrastructure providers can be
     * used. The supported cloud types are - `all, aws, azure, gcp, vsphere, openstack, maas, virtual, baremetal, eks, aks,
     * edge, edge-native, tencent, tke, generic, and gke`,If the value is set to `all`, then the type must be set to `add-on`.
     * Otherwise, the cluster profile may be incompatible with other providers. Default value is `all`.
     */
    cloud?: pulumi.Input<string>;
    context?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * For packs of type `spectro`, `helm`, and `manifest`, at least one pack must be specified.
     */
    packs?: pulumi.Input<pulumi.Input<inputs.ClusterProfilePack>[]>;
    /**
     * List of variables for the cluster profile. Note: This is a preview feature and is currently only supported for the
     * `edge_native` cloud type and general `add-on` profiles.
     */
    profileVariables?: pulumi.Input<inputs.ClusterProfileProfileVariables>;
    /**
     * A list of tags to be applied to the cluster. Tags must be in the form of `key:value`.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.ClusterProfileTimeouts>;
    /**
     * Specify the cluster profile type to use. Allowed values are `cluster`, `infra`, `add-on`, and `system`. These values map
     * to the following User Interface (UI) labels. Use the value ' cluster ' for a **Full** cluster profile.For an
     * Infrastructure cluster profile, use the value `infra`; for an Add-on cluster profile, use the value `add-on`.System
     * cluster profiles can be specified using the value `system`. To learn more about cluster profiles, refer to the [Cluster
     * Profile](https://docs.spectrocloud.com/cluster-profiles) documentation. Default value is `add-on`.
     */
    type?: pulumi.Input<string>;
    /**
     * Version of the cluster profile. Defaults to '1.0.0'.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ClusterProfile resource.
 */
export interface ClusterProfileArgs {
    /**
     * Specify the infrastructure provider the cluster profile is for. Only Palette supported infrastructure providers can be
     * used. The supported cloud types are - `all, aws, azure, gcp, vsphere, openstack, maas, virtual, baremetal, eks, aks,
     * edge, edge-native, tencent, tke, generic, and gke`,If the value is set to `all`, then the type must be set to `add-on`.
     * Otherwise, the cluster profile may be incompatible with other providers. Default value is `all`.
     */
    cloud?: pulumi.Input<string>;
    context?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * For packs of type `spectro`, `helm`, and `manifest`, at least one pack must be specified.
     */
    packs?: pulumi.Input<pulumi.Input<inputs.ClusterProfilePack>[]>;
    /**
     * List of variables for the cluster profile. Note: This is a preview feature and is currently only supported for the
     * `edge_native` cloud type and general `add-on` profiles.
     */
    profileVariables?: pulumi.Input<inputs.ClusterProfileProfileVariables>;
    /**
     * A list of tags to be applied to the cluster. Tags must be in the form of `key:value`.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.ClusterProfileTimeouts>;
    /**
     * Specify the cluster profile type to use. Allowed values are `cluster`, `infra`, `add-on`, and `system`. These values map
     * to the following User Interface (UI) labels. Use the value ' cluster ' for a **Full** cluster profile.For an
     * Infrastructure cluster profile, use the value `infra`; for an Add-on cluster profile, use the value `add-on`.System
     * cluster profiles can be specified using the value `system`. To learn more about cluster profiles, refer to the [Cluster
     * Profile](https://docs.spectrocloud.com/cluster-profiles) documentation. Default value is `add-on`.
     */
    type?: pulumi.Input<string>;
    /**
     * Version of the cluster profile. Defaults to '1.0.0'.
     */
    version?: pulumi.Input<string>;
}
