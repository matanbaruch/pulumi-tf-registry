// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPrivateCloudGateway(args?: GetPrivateCloudGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivateCloudGatewayResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spectrocloud:index/getPrivateCloudGateway:getPrivateCloudGateway", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPrivateCloudGateway.
 */
export interface GetPrivateCloudGatewayArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getPrivateCloudGateway.
 */
export interface GetPrivateCloudGatewayResult {
    readonly id: string;
    readonly name: string;
}
export function getPrivateCloudGatewayOutput(args?: GetPrivateCloudGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrivateCloudGatewayResult> {
    return pulumi.output(args).apply((a: any) => getPrivateCloudGateway(a, opts))
}

/**
 * A collection of arguments for invoking getPrivateCloudGateway.
 */
export interface GetPrivateCloudGatewayOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
