// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApplicationProfile extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationProfileState, opts?: pulumi.CustomResourceOptions): ApplicationProfile {
        return new ApplicationProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spectrocloud:index/applicationProfile:ApplicationProfile';

    /**
     * Returns true if the given object is an instance of ApplicationProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationProfile.__pulumiType;
    }

    /**
     * The cloud provider the profile is eligible for. Default value is `all`.
     */
    public readonly cloud!: pulumi.Output<string | undefined>;
    public readonly context!: pulumi.Output<string | undefined>;
    /**
     * Description of the profile.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Name of the application profile
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A list of packs to be applied to the application profile.
     */
    public readonly packs!: pulumi.Output<outputs.ApplicationProfilePack[]>;
    /**
     * A list of tags to be applied to the application profile. Tags must be in the form of `key:value`.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ApplicationProfileTimeouts | undefined>;
    /**
     * Version of the profile. Default value is 1.0.0.
     */
    public readonly version!: pulumi.Output<string | undefined>;

    /**
     * Create a ApplicationProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationProfileArgs | ApplicationProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationProfileState | undefined;
            resourceInputs["cloud"] = state ? state.cloud : undefined;
            resourceInputs["context"] = state ? state.context : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["packs"] = state ? state.packs : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ApplicationProfileArgs | undefined;
            if ((!args || args.packs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'packs'");
            }
            resourceInputs["cloud"] = args ? args.cloud : undefined;
            resourceInputs["context"] = args ? args.context : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["packs"] = args ? args.packs : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApplicationProfile resources.
 */
export interface ApplicationProfileState {
    /**
     * The cloud provider the profile is eligible for. Default value is `all`.
     */
    cloud?: pulumi.Input<string>;
    context?: pulumi.Input<string>;
    /**
     * Description of the profile.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the application profile
     */
    name?: pulumi.Input<string>;
    /**
     * A list of packs to be applied to the application profile.
     */
    packs?: pulumi.Input<pulumi.Input<inputs.ApplicationProfilePack>[]>;
    /**
     * A list of tags to be applied to the application profile. Tags must be in the form of `key:value`.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.ApplicationProfileTimeouts>;
    /**
     * Version of the profile. Default value is 1.0.0.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApplicationProfile resource.
 */
export interface ApplicationProfileArgs {
    /**
     * The cloud provider the profile is eligible for. Default value is `all`.
     */
    cloud?: pulumi.Input<string>;
    context?: pulumi.Input<string>;
    /**
     * Description of the profile.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the application profile
     */
    name?: pulumi.Input<string>;
    /**
     * A list of packs to be applied to the application profile.
     */
    packs: pulumi.Input<pulumi.Input<inputs.ApplicationProfilePack>[]>;
    /**
     * A list of tags to be applied to the application profile. Tags must be in the form of `key:value`.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.ApplicationProfileTimeouts>;
    /**
     * Version of the profile. Default value is 1.0.0.
     */
    version?: pulumi.Input<string>;
}
