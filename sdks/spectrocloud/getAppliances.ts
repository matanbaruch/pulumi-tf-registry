// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAppliances(args?: GetAppliancesArgs, opts?: pulumi.InvokeOptions): Promise<GetAppliancesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spectrocloud:index/getAppliances:getAppliances", {
        "architecture": args.architecture,
        "context": args.context,
        "health": args.health,
        "id": args.id,
        "status": args.status,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppliances.
 */
export interface GetAppliancesArgs {
    architecture?: string;
    context?: string;
    health?: string;
    id?: string;
    status?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getAppliances.
 */
export interface GetAppliancesResult {
    readonly architecture?: string;
    readonly context?: string;
    readonly health?: string;
    readonly id: string;
    readonly ids: string[];
    readonly status?: string;
    readonly tags?: {[key: string]: string};
}
export function getAppliancesOutput(args?: GetAppliancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppliancesResult> {
    return pulumi.output(args).apply((a: any) => getAppliances(a, opts))
}

/**
 * A collection of arguments for invoking getAppliances.
 */
export interface GetAppliancesOutputArgs {
    architecture?: pulumi.Input<string>;
    context?: pulumi.Input<string>;
    health?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
