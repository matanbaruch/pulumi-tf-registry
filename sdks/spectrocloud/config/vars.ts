// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("spectrocloud");

/**
 * The Spectro Cloud API key. Can also be set with the `SPECTROCLOUD_APIKEY` environment variable.
 */
export declare const apiKey: string | undefined;
Object.defineProperty(exports, "apiKey", {
    get() {
        return __config.get("apiKey");
    },
    enumerable: true,
});

/**
 * The Spectro Cloud API host url. Can also be set with the `SPECTROCLOUD_HOST` environment variable. Defaults to
 * https://api.spectrocloud.com
 */
export declare const host: string | undefined;
Object.defineProperty(exports, "host", {
    get() {
        return __config.get("host");
    },
    enumerable: true,
});

/**
 * Ignore insecure TLS errors for Spectro Cloud API endpoints. Defaults to false.
 */
export declare const ignoreInsecureTlsError: boolean | undefined;
Object.defineProperty(exports, "ignoreInsecureTlsError", {
    get() {
        return __config.getObject<boolean>("ignoreInsecureTlsError");
    },
    enumerable: true,
});

/**
 * The Palette project the provider will target. If no value is provided, the `Default` Palette project is used. The
 * default value is `Default`.
 */
export declare const projectName: string | undefined;
Object.defineProperty(exports, "projectName", {
    get() {
        return __config.get("projectName");
    },
    enumerable: true,
});

/**
 * Number of retry attempts. Can also be set with the `SPECTROCLOUD_RETRY_ATTEMPTS` environment variable. Defaults to 10.
 */
export declare const retryAttempts: number | undefined;
Object.defineProperty(exports, "retryAttempts", {
    get() {
        return __config.getObject<number>("retryAttempts");
    },
    enumerable: true,
});

export declare const trace: boolean | undefined;
Object.defineProperty(exports, "trace", {
    get() {
        return __config.getObject<boolean>("trace");
    },
    enumerable: true,
});

