// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAppliance(args: GetApplianceArgs, opts?: pulumi.InvokeOptions): Promise<GetApplianceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spectrocloud:index/getAppliance:getAppliance", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppliance.
 */
export interface GetApplianceArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getAppliance.
 */
export interface GetApplianceResult {
    readonly architecture: string;
    readonly health: string;
    readonly id: string;
    readonly name: string;
    readonly status: string;
    readonly tags: {[key: string]: string};
}
export function getApplianceOutput(args: GetApplianceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplianceResult> {
    return pulumi.output(args).apply((a: any) => getAppliance(a, opts))
}

/**
 * A collection of arguments for invoking getAppliance.
 */
export interface GetApplianceOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
