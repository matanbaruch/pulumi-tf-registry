// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBackupStorageLocation(args?: GetBackupStorageLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetBackupStorageLocationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spectrocloud:index/getBackupStorageLocation:getBackupStorageLocation", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBackupStorageLocation.
 */
export interface GetBackupStorageLocationArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getBackupStorageLocation.
 */
export interface GetBackupStorageLocationResult {
    readonly id: string;
    readonly name: string;
}
export function getBackupStorageLocationOutput(args?: GetBackupStorageLocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBackupStorageLocationResult> {
    return pulumi.output(args).apply((a: any) => getBackupStorageLocation(a, opts))
}

/**
 * A collection of arguments for invoking getBackupStorageLocation.
 */
export interface GetBackupStorageLocationOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
