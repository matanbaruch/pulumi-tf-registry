// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCertificateAuthenticationProfile(args?: GetCertificateAuthenticationProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateAuthenticationProfileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ise:index/getCertificateAuthenticationProfile:getCertificateAuthenticationProfile", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCertificateAuthenticationProfile.
 */
export interface GetCertificateAuthenticationProfileArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getCertificateAuthenticationProfile.
 */
export interface GetCertificateAuthenticationProfileResult {
    readonly allowedAsUserName: boolean;
    readonly certificateAttributeName: string;
    readonly description: string;
    readonly externalIdentityStoreName: string;
    readonly id: string;
    readonly matchMode: string;
    readonly name: string;
    readonly usernameFrom: string;
}
export function getCertificateAuthenticationProfileOutput(args?: GetCertificateAuthenticationProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateAuthenticationProfileResult> {
    return pulumi.output(args).apply((a: any) => getCertificateAuthenticationProfile(a, opts))
}

/**
 * A collection of arguments for invoking getCertificateAuthenticationProfile.
 */
export interface GetCertificateAuthenticationProfileOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
