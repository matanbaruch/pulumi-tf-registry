// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTacacsCommandSet(args?: GetTacacsCommandSetArgs, opts?: pulumi.InvokeOptions): Promise<GetTacacsCommandSetResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ise:index/getTacacsCommandSet:getTacacsCommandSet", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTacacsCommandSet.
 */
export interface GetTacacsCommandSetArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getTacacsCommandSet.
 */
export interface GetTacacsCommandSetResult {
    readonly commands: outputs.GetTacacsCommandSetCommand[];
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly permitUnmatched: boolean;
}
export function getTacacsCommandSetOutput(args?: GetTacacsCommandSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTacacsCommandSetResult> {
    return pulumi.output(args).apply((a: any) => getTacacsCommandSet(a, opts))
}

/**
 * A collection of arguments for invoking getTacacsCommandSet.
 */
export interface GetTacacsCommandSetOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
