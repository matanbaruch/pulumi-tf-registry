// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getActiveDirectoryJoinPoint(args: GetActiveDirectoryJoinPointArgs, opts?: pulumi.InvokeOptions): Promise<GetActiveDirectoryJoinPointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ise:index/getActiveDirectoryJoinPoint:getActiveDirectoryJoinPoint", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getActiveDirectoryJoinPoint.
 */
export interface GetActiveDirectoryJoinPointArgs {
    id: string;
}

/**
 * A collection of values returned by getActiveDirectoryJoinPoint.
 */
export interface GetActiveDirectoryJoinPointResult {
    readonly adScopesNames: string;
    readonly agingTime: number;
    readonly attributes: outputs.GetActiveDirectoryJoinPointAttribute[];
    readonly authProtectionType: string;
    readonly country: string;
    readonly department: string;
    readonly description: string;
    readonly domain: string;
    readonly email: string;
    readonly enableCallbackForDialinClient: boolean;
    readonly enableDialinPermissionCheck: boolean;
    readonly enableDomainAllowedList: boolean;
    readonly enableFailedAuthProtection: boolean;
    readonly enableMachineAccess: boolean;
    readonly enableMachineAuth: boolean;
    readonly enablePassChange: boolean;
    readonly enableRewrites: boolean;
    readonly failedAuthThreshold: number;
    readonly firstName: string;
    readonly groups: outputs.GetActiveDirectoryJoinPointGroup[];
    readonly id: string;
    readonly identityNotInAdBehaviour: string;
    readonly jobTitle: string;
    readonly lastName: string;
    readonly locality: string;
    readonly name: string;
    readonly organizationalUnit: string;
    readonly plaintextAuth: boolean;
    readonly rewriteRules: outputs.GetActiveDirectoryJoinPointRewriteRule[];
    readonly schema: string;
    readonly stateOrProvince: string;
    readonly streetAddress: string;
    readonly telephone: string;
    readonly unreachableDomainsBehaviour: string;
}
export function getActiveDirectoryJoinPointOutput(args: GetActiveDirectoryJoinPointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetActiveDirectoryJoinPointResult> {
    return pulumi.output(args).apply((a: any) => getActiveDirectoryJoinPoint(a, opts))
}

/**
 * A collection of arguments for invoking getActiveDirectoryJoinPoint.
 */
export interface GetActiveDirectoryJoinPointOutputArgs {
    id: pulumi.Input<string>;
}
