// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getInternalUser(args?: GetInternalUserArgs, opts?: pulumi.InvokeOptions): Promise<GetInternalUserResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ise:index/getInternalUser:getInternalUser", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInternalUser.
 */
export interface GetInternalUserArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getInternalUser.
 */
export interface GetInternalUserResult {
    readonly accountNameAlias: string;
    readonly changePassword: boolean;
    readonly customAttributes: string;
    readonly description: string;
    readonly email: string;
    readonly enablePassword: string;
    readonly enabled: boolean;
    readonly firstName: string;
    readonly id: string;
    readonly identityGroups: string;
    readonly lastName: string;
    readonly name: string;
    readonly password: string;
    readonly passwordIdStore: string;
    readonly passwordNeverExpires: boolean;
}
export function getInternalUserOutput(args?: GetInternalUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInternalUserResult> {
    return pulumi.output(args).apply((a: any) => getInternalUser(a, opts))
}

/**
 * A collection of arguments for invoking getInternalUser.
 */
export interface GetInternalUserOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
