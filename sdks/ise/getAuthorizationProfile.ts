// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAuthorizationProfile(args?: GetAuthorizationProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthorizationProfileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ise:index/getAuthorizationProfile:getAuthorizationProfile", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAuthorizationProfile.
 */
export interface GetAuthorizationProfileArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getAuthorizationProfile.
 */
export interface GetAuthorizationProfileResult {
    readonly accessType: string;
    readonly acl: string;
    readonly advancedAttributes: outputs.GetAuthorizationProfileAdvancedAttribute[];
    readonly agentlessPosture: boolean;
    readonly airespaceAcl: string;
    readonly airespaceIpv6Acl: string;
    readonly asaVpn: string;
    readonly autoSmartPort: string;
    readonly avcProfile: string;
    readonly daclName: string;
    readonly description: string;
    readonly easywiredSessionCandidate: boolean;
    readonly id: string;
    readonly interfaceTemplate: string;
    readonly ipv6AclFilter: string;
    readonly ipv6DaclName: string;
    readonly macSecPolicy: string;
    readonly name: string;
    readonly neat: boolean;
    readonly profileName: string;
    readonly reauthenticationConnectivity: string;
    readonly reauthenticationTimer: number;
    readonly serviceTemplate: boolean;
    readonly trackMovement: boolean;
    readonly uniqueIdentifier: string;
    readonly vlanNameId: string;
    readonly vlanTagId: number;
    readonly voiceDomainPermission: boolean;
    readonly webAuth: boolean;
    readonly webRedirectionAcl: string;
    readonly webRedirectionDisplayCertificatesRenewalMessages: boolean;
    readonly webRedirectionPortalName: string;
    readonly webRedirectionStaticIpHostNameFqdn: string;
    readonly webRedirectionType: string;
}
export function getAuthorizationProfileOutput(args?: GetAuthorizationProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthorizationProfileResult> {
    return pulumi.output(args).apply((a: any) => getAuthorizationProfile(a, opts))
}

/**
 * A collection of arguments for invoking getAuthorizationProfile.
 */
export interface GetAuthorizationProfileOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
