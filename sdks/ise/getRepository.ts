// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRepository(args?: GetRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetRepositoryResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ise:index/getRepository:getRepository", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRepository.
 */
export interface GetRepositoryArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getRepository.
 */
export interface GetRepositoryResult {
    readonly enablePki: boolean;
    readonly id: string;
    readonly name: string;
    readonly password: string;
    readonly path: string;
    readonly protocol: string;
    readonly serverName: string;
    readonly userName: string;
}
export function getRepositoryOutput(args?: GetRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRepositoryResult> {
    return pulumi.output(args).apply((a: any) => getRepository(a, opts))
}

/**
 * A collection of arguments for invoking getRepository.
 */
export interface GetRepositoryOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
