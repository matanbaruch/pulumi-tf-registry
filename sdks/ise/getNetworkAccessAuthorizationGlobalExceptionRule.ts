// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkAccessAuthorizationGlobalExceptionRule(args?: GetNetworkAccessAuthorizationGlobalExceptionRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkAccessAuthorizationGlobalExceptionRuleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ise:index/getNetworkAccessAuthorizationGlobalExceptionRule:getNetworkAccessAuthorizationGlobalExceptionRule", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkAccessAuthorizationGlobalExceptionRule.
 */
export interface GetNetworkAccessAuthorizationGlobalExceptionRuleArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getNetworkAccessAuthorizationGlobalExceptionRule.
 */
export interface GetNetworkAccessAuthorizationGlobalExceptionRuleResult {
    readonly childrens: outputs.GetNetworkAccessAuthorizationGlobalExceptionRuleChildren[];
    readonly conditionAttributeName: string;
    readonly conditionAttributeValue: string;
    readonly conditionDictionaryName: string;
    readonly conditionDictionaryValue: string;
    readonly conditionId: string;
    readonly conditionIsNegate: boolean;
    readonly conditionOperator: string;
    readonly conditionType: string;
    readonly default: boolean;
    readonly id: string;
    readonly name: string;
    readonly profiles: string[];
    readonly rank: number;
    readonly securityGroup: string;
    readonly state: string;
}
export function getNetworkAccessAuthorizationGlobalExceptionRuleOutput(args?: GetNetworkAccessAuthorizationGlobalExceptionRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkAccessAuthorizationGlobalExceptionRuleResult> {
    return pulumi.output(args).apply((a: any) => getNetworkAccessAuthorizationGlobalExceptionRule(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkAccessAuthorizationGlobalExceptionRule.
 */
export interface GetNetworkAccessAuthorizationGlobalExceptionRuleOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
