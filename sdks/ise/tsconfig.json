{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "activeDirectoryAddGroups.ts",
        "activeDirectoryJoinDomainWithAllNodes.ts",
        "activeDirectoryJoinPoint.ts",
        "allowedProtocols.ts",
        "allowedProtocolsTacacs.ts",
        "authorizationProfile.ts",
        "certificateAuthenticationProfile.ts",
        "config/index.ts",
        "config/vars.ts",
        "deviceAdminAuthenticationRule.ts",
        "deviceAdminAuthorizationExceptionRule.ts",
        "deviceAdminAuthorizationGlobalExceptionRule.ts",
        "deviceAdminAuthorizationRule.ts",
        "deviceAdminCondition.ts",
        "deviceAdminPolicySet.ts",
        "deviceAdminTimeAndDateCondition.ts",
        "downloadableAcl.ts",
        "endpoint.ts",
        "endpointIdentityGroup.ts",
        "getActiveDirectoryGroupsByDomain.ts",
        "getActiveDirectoryJoinPoint.ts",
        "getAllowedProtocols.ts",
        "getAllowedProtocolsTacacs.ts",
        "getAuthorizationProfile.ts",
        "getCertificateAuthenticationProfile.ts",
        "getDeviceAdminAuthenticationRule.ts",
        "getDeviceAdminAuthorizationExceptionRule.ts",
        "getDeviceAdminAuthorizationGlobalExceptionRule.ts",
        "getDeviceAdminAuthorizationRule.ts",
        "getDeviceAdminCondition.ts",
        "getDeviceAdminPolicySet.ts",
        "getDeviceAdminTimeAndDateCondition.ts",
        "getDownloadableAcl.ts",
        "getEndpoint.ts",
        "getEndpointIdentityGroup.ts",
        "getIdentitySourceSequence.ts",
        "getInternalUser.ts",
        "getLicenseTierState.ts",
        "getNetworkAccessAuthenticationRule.ts",
        "getNetworkAccessAuthorizationExceptionRule.ts",
        "getNetworkAccessAuthorizationGlobalExceptionRule.ts",
        "getNetworkAccessAuthorizationRule.ts",
        "getNetworkAccessCondition.ts",
        "getNetworkAccessDictionary.ts",
        "getNetworkAccessPolicySet.ts",
        "getNetworkAccessTimeAndDateCondition.ts",
        "getNetworkDevice.ts",
        "getNetworkDeviceGroup.ts",
        "getRepository.ts",
        "getTacacsCommandSet.ts",
        "getTacacsProfile.ts",
        "getTrustsecEgressMatrixCell.ts",
        "getTrustsecIpToSgtMapping.ts",
        "getTrustsecIpToSgtMappingGroup.ts",
        "getTrustsecSecurityGroup.ts",
        "getTrustsecSecurityGroupAcl.ts",
        "getUserIdentityGroup.ts",
        "identitySourceSequence.ts",
        "index.ts",
        "internalUser.ts",
        "licenseTierState.ts",
        "networkAccessAuthenticationRule.ts",
        "networkAccessAuthorizationExceptionRule.ts",
        "networkAccessAuthorizationGlobalExceptionRule.ts",
        "networkAccessAuthorizationRule.ts",
        "networkAccessCondition.ts",
        "networkAccessDictionary.ts",
        "networkAccessPolicySet.ts",
        "networkAccessTimeAndDateCondition.ts",
        "networkDevice.ts",
        "networkDeviceGroup.ts",
        "provider.ts",
        "repository.ts",
        "tacacsCommandSet.ts",
        "tacacsProfile.ts",
        "trustsecEgressMatrixCell.ts",
        "trustsecIpToSgtMapping.ts",
        "trustsecIpToSgtMappingGroup.ts",
        "trustsecSecurityGroup.ts",
        "trustsecSecurityGroupAcl.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "userIdentityGroup.ts",
        "utilities.ts"
    ]
}
