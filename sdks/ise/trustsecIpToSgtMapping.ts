// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class TrustsecIpToSgtMapping extends pulumi.CustomResource {
    /**
     * Get an existing TrustsecIpToSgtMapping resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TrustsecIpToSgtMappingState, opts?: pulumi.CustomResourceOptions): TrustsecIpToSgtMapping {
        return new TrustsecIpToSgtMapping(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ise:index/trustsecIpToSgtMapping:TrustsecIpToSgtMapping';

    /**
     * Returns true if the given object is an instance of TrustsecIpToSgtMapping.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TrustsecIpToSgtMapping {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrustsecIpToSgtMapping.__pulumiType;
    }

    /**
     * Mandatory unless `mapping_group` is set or unless `deploy_type` is `ALL`
     */
    public readonly deployTo!: pulumi.Output<string | undefined>;
    /**
     * Deploy Type - Choices: `ALL`, `ND`, `NDG`
     */
    public readonly deployType!: pulumi.Output<string | undefined>;
    /**
     * Description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Mandatory if `host_name` is empty
     */
    public readonly hostIp!: pulumi.Output<string | undefined>;
    /**
     * Mandatory if `host_ip` is empty
     */
    public readonly hostName!: pulumi.Output<string | undefined>;
    /**
     * IP to SGT Mapping Group ID. Mandatory unless `sgt` and `deploy_to` and `deploy_type` are set
     */
    public readonly mappingGroup!: pulumi.Output<string | undefined>;
    /**
     * The name of the IP to SGT mapping
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Trustsec Security Group ID. Mandatory unless `mapping_group` is set
     */
    public readonly sgt!: pulumi.Output<string | undefined>;

    /**
     * Create a TrustsecIpToSgtMapping resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TrustsecIpToSgtMappingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TrustsecIpToSgtMappingArgs | TrustsecIpToSgtMappingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TrustsecIpToSgtMappingState | undefined;
            resourceInputs["deployTo"] = state ? state.deployTo : undefined;
            resourceInputs["deployType"] = state ? state.deployType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["hostIp"] = state ? state.hostIp : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["mappingGroup"] = state ? state.mappingGroup : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sgt"] = state ? state.sgt : undefined;
        } else {
            const args = argsOrState as TrustsecIpToSgtMappingArgs | undefined;
            resourceInputs["deployTo"] = args ? args.deployTo : undefined;
            resourceInputs["deployType"] = args ? args.deployType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["hostIp"] = args ? args.hostIp : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["mappingGroup"] = args ? args.mappingGroup : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sgt"] = args ? args.sgt : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TrustsecIpToSgtMapping.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TrustsecIpToSgtMapping resources.
 */
export interface TrustsecIpToSgtMappingState {
    /**
     * Mandatory unless `mapping_group` is set or unless `deploy_type` is `ALL`
     */
    deployTo?: pulumi.Input<string>;
    /**
     * Deploy Type - Choices: `ALL`, `ND`, `NDG`
     */
    deployType?: pulumi.Input<string>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * Mandatory if `host_name` is empty
     */
    hostIp?: pulumi.Input<string>;
    /**
     * Mandatory if `host_ip` is empty
     */
    hostName?: pulumi.Input<string>;
    /**
     * IP to SGT Mapping Group ID. Mandatory unless `sgt` and `deploy_to` and `deploy_type` are set
     */
    mappingGroup?: pulumi.Input<string>;
    /**
     * The name of the IP to SGT mapping
     */
    name?: pulumi.Input<string>;
    /**
     * Trustsec Security Group ID. Mandatory unless `mapping_group` is set
     */
    sgt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TrustsecIpToSgtMapping resource.
 */
export interface TrustsecIpToSgtMappingArgs {
    /**
     * Mandatory unless `mapping_group` is set or unless `deploy_type` is `ALL`
     */
    deployTo?: pulumi.Input<string>;
    /**
     * Deploy Type - Choices: `ALL`, `ND`, `NDG`
     */
    deployType?: pulumi.Input<string>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * Mandatory if `host_name` is empty
     */
    hostIp?: pulumi.Input<string>;
    /**
     * Mandatory if `host_ip` is empty
     */
    hostName?: pulumi.Input<string>;
    /**
     * IP to SGT Mapping Group ID. Mandatory unless `sgt` and `deploy_to` and `deploy_type` are set
     */
    mappingGroup?: pulumi.Input<string>;
    /**
     * The name of the IP to SGT mapping
     */
    name?: pulumi.Input<string>;
    /**
     * Trustsec Security Group ID. Mandatory unless `mapping_group` is set
     */
    sgt?: pulumi.Input<string>;
}
