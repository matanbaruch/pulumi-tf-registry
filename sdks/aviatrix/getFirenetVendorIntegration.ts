// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFirenetVendorIntegration(args: GetFirenetVendorIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetFirenetVendorIntegrationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aviatrix:index/getFirenetVendorIntegration:getFirenetVendorIntegration", {
        "apiToken": args.apiToken,
        "firewallName": args.firewallName,
        "id": args.id,
        "instanceId": args.instanceId,
        "numberOfRetries": args.numberOfRetries,
        "password": args.password,
        "privateKeyFile": args.privateKeyFile,
        "publicIp": args.publicIp,
        "retryInterval": args.retryInterval,
        "routeTable": args.routeTable,
        "save": args.save,
        "synchronize": args.synchronize,
        "username": args.username,
        "vendorType": args.vendorType,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirenetVendorIntegration.
 */
export interface GetFirenetVendorIntegrationArgs {
    apiToken?: string;
    firewallName?: string;
    id?: string;
    instanceId: string;
    numberOfRetries?: number;
    password?: string;
    privateKeyFile?: string;
    publicIp?: string;
    retryInterval?: number;
    routeTable?: string;
    save?: boolean;
    synchronize?: boolean;
    username?: string;
    vendorType: string;
    vpcId: string;
}

/**
 * A collection of values returned by getFirenetVendorIntegration.
 */
export interface GetFirenetVendorIntegrationResult {
    readonly apiToken?: string;
    readonly firewallName?: string;
    readonly id: string;
    readonly instanceId: string;
    readonly numberOfRetries?: number;
    readonly password?: string;
    readonly privateKeyFile?: string;
    readonly publicIp?: string;
    readonly retryInterval?: number;
    readonly routeTable?: string;
    readonly save?: boolean;
    readonly synchronize?: boolean;
    readonly username?: string;
    readonly vendorType: string;
    readonly vpcId: string;
}
export function getFirenetVendorIntegrationOutput(args: GetFirenetVendorIntegrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirenetVendorIntegrationResult> {
    return pulumi.output(args).apply((a: any) => getFirenetVendorIntegration(a, opts))
}

/**
 * A collection of arguments for invoking getFirenetVendorIntegration.
 */
export interface GetFirenetVendorIntegrationOutputArgs {
    apiToken?: pulumi.Input<string>;
    firewallName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    numberOfRetries?: pulumi.Input<number>;
    password?: pulumi.Input<string>;
    privateKeyFile?: pulumi.Input<string>;
    publicIp?: pulumi.Input<string>;
    retryInterval?: pulumi.Input<number>;
    routeTable?: pulumi.Input<string>;
    save?: pulumi.Input<boolean>;
    synchronize?: pulumi.Input<boolean>;
    username?: pulumi.Input<string>;
    vendorType: pulumi.Input<string>;
    vpcId: pulumi.Input<string>;
}
