// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AwsPeer extends pulumi.CustomResource {
    /**
     * Get an existing AwsPeer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsPeerState, opts?: pulumi.CustomResourceOptions): AwsPeer {
        return new AwsPeer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/awsPeer:AwsPeer';

    /**
     * Returns true if the given object is an instance of AwsPeer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsPeer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsPeer.__pulumiType;
    }

    /**
     * This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
     */
    public readonly accountName1!: pulumi.Output<string>;
    /**
     * This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
     */
    public readonly accountName2!: pulumi.Output<string>;
    /**
     * List of Route table IDs of VPC1.
     */
    public readonly rtbList1s!: pulumi.Output<string[]>;
    /**
     * List of Route table IDs of VPC2.
     */
    public readonly rtbList2s!: pulumi.Output<string[]>;
    /**
     * VPC-ID of AWS cloud.
     */
    public readonly vpcId1!: pulumi.Output<string>;
    /**
     * VPC-ID of AWS cloud.
     */
    public readonly vpcId2!: pulumi.Output<string>;
    /**
     * Region of AWS cloud.
     */
    public readonly vpcReg1!: pulumi.Output<string>;
    /**
     * Region of AWS cloud.
     */
    public readonly vpcReg2!: pulumi.Output<string>;

    /**
     * Create a AwsPeer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsPeerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsPeerArgs | AwsPeerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsPeerState | undefined;
            resourceInputs["accountName1"] = state ? state.accountName1 : undefined;
            resourceInputs["accountName2"] = state ? state.accountName2 : undefined;
            resourceInputs["rtbList1s"] = state ? state.rtbList1s : undefined;
            resourceInputs["rtbList2s"] = state ? state.rtbList2s : undefined;
            resourceInputs["vpcId1"] = state ? state.vpcId1 : undefined;
            resourceInputs["vpcId2"] = state ? state.vpcId2 : undefined;
            resourceInputs["vpcReg1"] = state ? state.vpcReg1 : undefined;
            resourceInputs["vpcReg2"] = state ? state.vpcReg2 : undefined;
        } else {
            const args = argsOrState as AwsPeerArgs | undefined;
            if ((!args || args.accountName1 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName1'");
            }
            if ((!args || args.accountName2 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName2'");
            }
            if ((!args || args.vpcId1 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId1'");
            }
            if ((!args || args.vpcId2 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId2'");
            }
            if ((!args || args.vpcReg1 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcReg1'");
            }
            if ((!args || args.vpcReg2 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcReg2'");
            }
            resourceInputs["accountName1"] = args ? args.accountName1 : undefined;
            resourceInputs["accountName2"] = args ? args.accountName2 : undefined;
            resourceInputs["rtbList1s"] = args ? args.rtbList1s : undefined;
            resourceInputs["rtbList2s"] = args ? args.rtbList2s : undefined;
            resourceInputs["vpcId1"] = args ? args.vpcId1 : undefined;
            resourceInputs["vpcId2"] = args ? args.vpcId2 : undefined;
            resourceInputs["vpcReg1"] = args ? args.vpcReg1 : undefined;
            resourceInputs["vpcReg2"] = args ? args.vpcReg2 : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsPeer.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsPeer resources.
 */
export interface AwsPeerState {
    /**
     * This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
     */
    accountName1?: pulumi.Input<string>;
    /**
     * This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
     */
    accountName2?: pulumi.Input<string>;
    /**
     * List of Route table IDs of VPC1.
     */
    rtbList1s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Route table IDs of VPC2.
     */
    rtbList2s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC-ID of AWS cloud.
     */
    vpcId1?: pulumi.Input<string>;
    /**
     * VPC-ID of AWS cloud.
     */
    vpcId2?: pulumi.Input<string>;
    /**
     * Region of AWS cloud.
     */
    vpcReg1?: pulumi.Input<string>;
    /**
     * Region of AWS cloud.
     */
    vpcReg2?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsPeer resource.
 */
export interface AwsPeerArgs {
    /**
     * This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
     */
    accountName1: pulumi.Input<string>;
    /**
     * This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
     */
    accountName2: pulumi.Input<string>;
    /**
     * List of Route table IDs of VPC1.
     */
    rtbList1s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Route table IDs of VPC2.
     */
    rtbList2s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC-ID of AWS cloud.
     */
    vpcId1: pulumi.Input<string>;
    /**
     * VPC-ID of AWS cloud.
     */
    vpcId2: pulumi.Input<string>;
    /**
     * Region of AWS cloud.
     */
    vpcReg1: pulumi.Input<string>;
    /**
     * Region of AWS cloud.
     */
    vpcReg2: pulumi.Input<string>;
}
