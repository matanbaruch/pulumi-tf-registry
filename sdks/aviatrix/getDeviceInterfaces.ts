// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDeviceInterfaces(args: GetDeviceInterfacesArgs, opts?: pulumi.InvokeOptions): Promise<GetDeviceInterfacesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aviatrix:index/getDeviceInterfaces:getDeviceInterfaces", {
        "deviceName": args.deviceName,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDeviceInterfaces.
 */
export interface GetDeviceInterfacesArgs {
    deviceName: string;
    id?: string;
}

/**
 * A collection of values returned by getDeviceInterfaces.
 */
export interface GetDeviceInterfacesResult {
    readonly deviceName: string;
    readonly id: string;
    readonly wanInterfaces: outputs.GetDeviceInterfacesWanInterface[];
}
export function getDeviceInterfacesOutput(args: GetDeviceInterfacesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeviceInterfacesResult> {
    return pulumi.output(args).apply((a: any) => getDeviceInterfaces(a, opts))
}

/**
 * A collection of arguments for invoking getDeviceInterfaces.
 */
export interface GetDeviceInterfacesOutputArgs {
    deviceName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
