// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SpokeHaGateway extends pulumi.CustomResource {
    /**
     * Get an existing SpokeHaGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpokeHaGatewayState, opts?: pulumi.CustomResourceOptions): SpokeHaGateway {
        return new SpokeHaGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/spokeHaGateway:SpokeHaGateway';

    /**
     * Returns true if the given object is an instance of SpokeHaGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SpokeHaGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpokeHaGateway.__pulumiType;
    }

    /**
     * This parameter represents the name of a Cloud-Account in Aviatrix controller.
     */
    public /*out*/ readonly accountName!: pulumi.Output<string>;
    /**
     * Availability domain for OCI.
     */
    public readonly availabilityDomain!: pulumi.Output<string>;
    /**
     * The name of the public IP address and its resource group in Azure to assign to this Gateway.
     */
    public readonly azureEipNameResourceGroup!: pulumi.Output<string | undefined>;
    /**
     * Cloud instance ID.
     */
    public /*out*/ readonly cloudInstanceId!: pulumi.Output<string>;
    /**
     * Type of cloud service provider.
     */
    public /*out*/ readonly cloudType!: pulumi.Output<number>;
    /**
     * If set, the specified EIP is used for this gateway.
     */
    public readonly eip!: pulumi.Output<string>;
    /**
     * Fault domain for OCI.
     */
    public readonly faultDomain!: pulumi.Output<string>;
    /**
     * Name of the HA gateway which is going to be created.
     */
    public readonly gwName!: pulumi.Output<string>;
    /**
     * Size of the gateway instance.
     */
    public readonly gwSize!: pulumi.Output<string>;
    /**
     * Image version of the gateway.
     */
    public /*out*/ readonly imageVersion!: pulumi.Output<string>;
    /**
     * Enable Insane Mode for Spoke Gateway. Valid values: true, false. Supported for AWS/AWSGov, GCP, Azure and OCI. If insane
     * mode is enabled, gateway size has to at least be c5 size for AWS and Standard_D3_v2 size for Azure.
     */
    public readonly insaneMode!: pulumi.Output<boolean | undefined>;
    /**
     * AZ of subnet being created for Insane Mode Spoke Gateway. Required if insane_mode is enabled for AWS cloud.
     */
    public readonly insaneModeAz!: pulumi.Output<string | undefined>;
    /**
     * Name of the primary gateway.
     */
    public readonly primaryGwName!: pulumi.Output<string>;
    /**
     * Private IP address of the spoke ha gateway created.
     */
    public /*out*/ readonly privateIp!: pulumi.Output<string>;
    /**
     * Public IP address of the spoke ha gateway created.
     */
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    /**
     * Security group used for the spoke ha gateway.
     */
    public /*out*/ readonly securityGroupId!: pulumi.Output<string>;
    /**
     * Software version of the gateway.
     */
    public /*out*/ readonly softwareVersion!: pulumi.Output<string>;
    /**
     * Public Subnet Info.
     */
    public readonly subnet!: pulumi.Output<string>;
    /**
     * Region of cloud provider.
     */
    public /*out*/ readonly vpcReg!: pulumi.Output<string>;
    /**
     * Availability Zone. Required for GCP gateway, example: 'us-west1-c'. Optional for Azure / Azure GOV / Azure CHINA gateway
     * in the form 'az-n', example: 'az-2'.
     */
    public readonly zone!: pulumi.Output<string | undefined>;

    /**
     * Create a SpokeHaGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpokeHaGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpokeHaGatewayArgs | SpokeHaGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SpokeHaGatewayState | undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            resourceInputs["azureEipNameResourceGroup"] = state ? state.azureEipNameResourceGroup : undefined;
            resourceInputs["cloudInstanceId"] = state ? state.cloudInstanceId : undefined;
            resourceInputs["cloudType"] = state ? state.cloudType : undefined;
            resourceInputs["eip"] = state ? state.eip : undefined;
            resourceInputs["faultDomain"] = state ? state.faultDomain : undefined;
            resourceInputs["gwName"] = state ? state.gwName : undefined;
            resourceInputs["gwSize"] = state ? state.gwSize : undefined;
            resourceInputs["imageVersion"] = state ? state.imageVersion : undefined;
            resourceInputs["insaneMode"] = state ? state.insaneMode : undefined;
            resourceInputs["insaneModeAz"] = state ? state.insaneModeAz : undefined;
            resourceInputs["primaryGwName"] = state ? state.primaryGwName : undefined;
            resourceInputs["privateIp"] = state ? state.privateIp : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["softwareVersion"] = state ? state.softwareVersion : undefined;
            resourceInputs["subnet"] = state ? state.subnet : undefined;
            resourceInputs["vpcReg"] = state ? state.vpcReg : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as SpokeHaGatewayArgs | undefined;
            if ((!args || args.primaryGwName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryGwName'");
            }
            if ((!args || args.subnet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnet'");
            }
            resourceInputs["availabilityDomain"] = args ? args.availabilityDomain : undefined;
            resourceInputs["azureEipNameResourceGroup"] = args ? args.azureEipNameResourceGroup : undefined;
            resourceInputs["eip"] = args ? args.eip : undefined;
            resourceInputs["faultDomain"] = args ? args.faultDomain : undefined;
            resourceInputs["gwName"] = args ? args.gwName : undefined;
            resourceInputs["gwSize"] = args ? args.gwSize : undefined;
            resourceInputs["insaneMode"] = args ? args.insaneMode : undefined;
            resourceInputs["insaneModeAz"] = args ? args.insaneModeAz : undefined;
            resourceInputs["primaryGwName"] = args ? args.primaryGwName : undefined;
            resourceInputs["subnet"] = args ? args.subnet : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["accountName"] = undefined /*out*/;
            resourceInputs["cloudInstanceId"] = undefined /*out*/;
            resourceInputs["cloudType"] = undefined /*out*/;
            resourceInputs["imageVersion"] = undefined /*out*/;
            resourceInputs["privateIp"] = undefined /*out*/;
            resourceInputs["publicIp"] = undefined /*out*/;
            resourceInputs["securityGroupId"] = undefined /*out*/;
            resourceInputs["softwareVersion"] = undefined /*out*/;
            resourceInputs["vpcReg"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpokeHaGateway.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SpokeHaGateway resources.
 */
export interface SpokeHaGatewayState {
    /**
     * This parameter represents the name of a Cloud-Account in Aviatrix controller.
     */
    accountName?: pulumi.Input<string>;
    /**
     * Availability domain for OCI.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * The name of the public IP address and its resource group in Azure to assign to this Gateway.
     */
    azureEipNameResourceGroup?: pulumi.Input<string>;
    /**
     * Cloud instance ID.
     */
    cloudInstanceId?: pulumi.Input<string>;
    /**
     * Type of cloud service provider.
     */
    cloudType?: pulumi.Input<number>;
    /**
     * If set, the specified EIP is used for this gateway.
     */
    eip?: pulumi.Input<string>;
    /**
     * Fault domain for OCI.
     */
    faultDomain?: pulumi.Input<string>;
    /**
     * Name of the HA gateway which is going to be created.
     */
    gwName?: pulumi.Input<string>;
    /**
     * Size of the gateway instance.
     */
    gwSize?: pulumi.Input<string>;
    /**
     * Image version of the gateway.
     */
    imageVersion?: pulumi.Input<string>;
    /**
     * Enable Insane Mode for Spoke Gateway. Valid values: true, false. Supported for AWS/AWSGov, GCP, Azure and OCI. If insane
     * mode is enabled, gateway size has to at least be c5 size for AWS and Standard_D3_v2 size for Azure.
     */
    insaneMode?: pulumi.Input<boolean>;
    /**
     * AZ of subnet being created for Insane Mode Spoke Gateway. Required if insane_mode is enabled for AWS cloud.
     */
    insaneModeAz?: pulumi.Input<string>;
    /**
     * Name of the primary gateway.
     */
    primaryGwName?: pulumi.Input<string>;
    /**
     * Private IP address of the spoke ha gateway created.
     */
    privateIp?: pulumi.Input<string>;
    /**
     * Public IP address of the spoke ha gateway created.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * Security group used for the spoke ha gateway.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Software version of the gateway.
     */
    softwareVersion?: pulumi.Input<string>;
    /**
     * Public Subnet Info.
     */
    subnet?: pulumi.Input<string>;
    /**
     * Region of cloud provider.
     */
    vpcReg?: pulumi.Input<string>;
    /**
     * Availability Zone. Required for GCP gateway, example: 'us-west1-c'. Optional for Azure / Azure GOV / Azure CHINA gateway
     * in the form 'az-n', example: 'az-2'.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SpokeHaGateway resource.
 */
export interface SpokeHaGatewayArgs {
    /**
     * Availability domain for OCI.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * The name of the public IP address and its resource group in Azure to assign to this Gateway.
     */
    azureEipNameResourceGroup?: pulumi.Input<string>;
    /**
     * If set, the specified EIP is used for this gateway.
     */
    eip?: pulumi.Input<string>;
    /**
     * Fault domain for OCI.
     */
    faultDomain?: pulumi.Input<string>;
    /**
     * Name of the HA gateway which is going to be created.
     */
    gwName?: pulumi.Input<string>;
    /**
     * Size of the gateway instance.
     */
    gwSize?: pulumi.Input<string>;
    /**
     * Enable Insane Mode for Spoke Gateway. Valid values: true, false. Supported for AWS/AWSGov, GCP, Azure and OCI. If insane
     * mode is enabled, gateway size has to at least be c5 size for AWS and Standard_D3_v2 size for Azure.
     */
    insaneMode?: pulumi.Input<boolean>;
    /**
     * AZ of subnet being created for Insane Mode Spoke Gateway. Required if insane_mode is enabled for AWS cloud.
     */
    insaneModeAz?: pulumi.Input<string>;
    /**
     * Name of the primary gateway.
     */
    primaryGwName: pulumi.Input<string>;
    /**
     * Public Subnet Info.
     */
    subnet: pulumi.Input<string>;
    /**
     * Availability Zone. Required for GCP gateway, example: 'us-west1-c'. Optional for Azure / Azure GOV / Azure CHINA gateway
     * in the form 'az-n', example: 'az-2'.
     */
    zone?: pulumi.Input<string>;
}
