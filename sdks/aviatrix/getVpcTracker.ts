// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcTracker(args?: GetVpcTrackerArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcTrackerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aviatrix:index/getVpcTracker:getVpcTracker", {
        "accountName": args.accountName,
        "cidr": args.cidr,
        "cloudType": args.cloudType,
        "id": args.id,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcTracker.
 */
export interface GetVpcTrackerArgs {
    accountName?: string;
    cidr?: string;
    cloudType?: number;
    id?: string;
    region?: string;
}

/**
 * A collection of values returned by getVpcTracker.
 */
export interface GetVpcTrackerResult {
    readonly accountName?: string;
    readonly cidr?: string;
    readonly cloudType?: number;
    readonly id: string;
    readonly region?: string;
    readonly vpcLists: outputs.GetVpcTrackerVpcList[];
}
export function getVpcTrackerOutput(args?: GetVpcTrackerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcTrackerResult> {
    return pulumi.output(args).apply((a: any) => getVpcTracker(a, opts))
}

/**
 * A collection of arguments for invoking getVpcTracker.
 */
export interface GetVpcTrackerOutputArgs {
    accountName?: pulumi.Input<string>;
    cidr?: pulumi.Input<string>;
    cloudType?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
