// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FirewallInstance extends pulumi.CustomResource {
    /**
     * Get an existing FirewallInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallInstanceState, opts?: pulumi.CustomResourceOptions): FirewallInstance {
        return new FirewallInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/firewallInstance:FirewallInstance';

    /**
     * Returns true if the given object is an instance of FirewallInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallInstance.__pulumiType;
    }

    /**
     * Availability domain for OCI.
     */
    public readonly availabilityDomain!: pulumi.Output<string>;
    /**
     * Advanced option. Bootstrap bucket name. Only available for AWS and GCP.
     */
    public readonly bootstrapBucketName!: pulumi.Output<string | undefined>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure and Palo Alto Networks VM-Series/Fortinet Series deployment
     * only.
     */
    public readonly bootstrapStorageName!: pulumi.Output<string | undefined>;
    /**
     * Cloud Type
     */
    public /*out*/ readonly cloudType!: pulumi.Output<number>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure and Fortinet Series deployment only.
     */
    public readonly containerFolder!: pulumi.Output<string | undefined>;
    /**
     * ID of Egress Interface created.
     */
    public /*out*/ readonly egressInterface!: pulumi.Output<string>;
    /**
     * Egress Interface Subnet.
     */
    public readonly egressSubnet!: pulumi.Output<string>;
    /**
     * Egress VPC ID. Required for GCP.
     */
    public readonly egressVpcId!: pulumi.Output<string | undefined>;
    /**
     * Fault domain for OCI.
     */
    public readonly faultDomain!: pulumi.Output<string>;
    /**
     * Advanced option. File share folder. Applicable to Azure and Palo Alto Networks VM-Series deployment only.
     */
    public readonly fileShareFolder!: pulumi.Output<string | undefined>;
    /**
     * Name of the primary FireNet gateway.
     */
    public readonly firenetGwName!: pulumi.Output<string | undefined>;
    /**
     * One of the AWS AMIs from Palo Alto Networks.
     */
    public readonly firewallImage!: pulumi.Output<string>;
    /**
     * Firewall image ID.
     */
    public readonly firewallImageId!: pulumi.Output<string>;
    /**
     * Version of firewall image.
     */
    public readonly firewallImageVersion!: pulumi.Output<string>;
    /**
     * Name of the firewall instance to be created.
     */
    public readonly firewallName!: pulumi.Output<string>;
    /**
     * Instance size of the firewall.
     */
    public readonly firewallSize!: pulumi.Output<string>;
    /**
     * GCP VPC ID
     */
    public /*out*/ readonly gcpVpcId!: pulumi.Output<string>;
    /**
     * Advanced option. IAM role. Only available for AWS.
     */
    public readonly iamRole!: pulumi.Output<string | undefined>;
    /**
     * ID of the firewall instance created.
     */
    public /*out*/ readonly instanceId!: pulumi.Output<string>;
    /**
     * Applicable to AWS deployment only. AWS Key Pair name. If not provided, a Key Pair will be generated.
     */
    public readonly keyName!: pulumi.Output<string | undefined>;
    /**
     * ID of Lan Interface created.
     */
    public /*out*/ readonly lanInterface!: pulumi.Output<string>;
    /**
     * ID of Management Interface created.
     */
    public /*out*/ readonly managementInterface!: pulumi.Output<string>;
    /**
     * Management Interface Subnet. Required for Palo Alto Networks VM-Series, and required to be empty for Check Point or
     * Fortinet series.
     */
    public readonly managementSubnet!: pulumi.Output<string | undefined>;
    /**
     * Management VPC ID. Required for GCP Palo Alto Networks VM-Series. Required to be empty for GCP Check Point or Fortinet
     * series.
     */
    public readonly managementVpcId!: pulumi.Output<string | undefined>;
    /**
     * Authentication method. Applicable to Azure deployment only.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Management Public IP.
     */
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure and Fortinet Series deployment only.
     */
    public readonly sasUrlConfig!: pulumi.Output<string | undefined>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure and Fortinet Series deployment only.
     */
    public readonly sasUrlLicense!: pulumi.Output<string | undefined>;
    /**
     * Advanced option. Share directory. Applicable to Azure and Palo Alto Networks VM-Series deployment only.
     */
    public readonly shareDirectory!: pulumi.Output<string | undefined>;
    /**
     * Advanced option. Bic key. Applicable to Azure and Check Point Series deployment only.
     */
    public readonly sicKey!: pulumi.Output<string | undefined>;
    /**
     * Authentication method. Applicable to Azure deployment only.
     */
    public readonly sshPublicKey!: pulumi.Output<string | undefined>;
    /**
     * Advanced option. Storage access key. Applicable to Azure and Palo Alto Networks VM-Series deployment only.
     */
    public readonly storageAccessKey!: pulumi.Output<string | undefined>;
    /**
     * A map of tags to assign to the firewall instance.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Check Point Series and Fortinet Series deployment only.
     */
    public readonly userData!: pulumi.Output<string | undefined>;
    /**
     * Applicable to Azure deployment only. 'admin' as a username is not accepted.
     */
    public readonly username!: pulumi.Output<string | undefined>;
    /**
     * ID of the Security VPC.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * Availability Zone. Only available for AWS, GCP and Azure.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a FirewallInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallInstanceArgs | FirewallInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallInstanceState | undefined;
            resourceInputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            resourceInputs["bootstrapBucketName"] = state ? state.bootstrapBucketName : undefined;
            resourceInputs["bootstrapStorageName"] = state ? state.bootstrapStorageName : undefined;
            resourceInputs["cloudType"] = state ? state.cloudType : undefined;
            resourceInputs["containerFolder"] = state ? state.containerFolder : undefined;
            resourceInputs["egressInterface"] = state ? state.egressInterface : undefined;
            resourceInputs["egressSubnet"] = state ? state.egressSubnet : undefined;
            resourceInputs["egressVpcId"] = state ? state.egressVpcId : undefined;
            resourceInputs["faultDomain"] = state ? state.faultDomain : undefined;
            resourceInputs["fileShareFolder"] = state ? state.fileShareFolder : undefined;
            resourceInputs["firenetGwName"] = state ? state.firenetGwName : undefined;
            resourceInputs["firewallImage"] = state ? state.firewallImage : undefined;
            resourceInputs["firewallImageId"] = state ? state.firewallImageId : undefined;
            resourceInputs["firewallImageVersion"] = state ? state.firewallImageVersion : undefined;
            resourceInputs["firewallName"] = state ? state.firewallName : undefined;
            resourceInputs["firewallSize"] = state ? state.firewallSize : undefined;
            resourceInputs["gcpVpcId"] = state ? state.gcpVpcId : undefined;
            resourceInputs["iamRole"] = state ? state.iamRole : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["keyName"] = state ? state.keyName : undefined;
            resourceInputs["lanInterface"] = state ? state.lanInterface : undefined;
            resourceInputs["managementInterface"] = state ? state.managementInterface : undefined;
            resourceInputs["managementSubnet"] = state ? state.managementSubnet : undefined;
            resourceInputs["managementVpcId"] = state ? state.managementVpcId : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["sasUrlConfig"] = state ? state.sasUrlConfig : undefined;
            resourceInputs["sasUrlLicense"] = state ? state.sasUrlLicense : undefined;
            resourceInputs["shareDirectory"] = state ? state.shareDirectory : undefined;
            resourceInputs["sicKey"] = state ? state.sicKey : undefined;
            resourceInputs["sshPublicKey"] = state ? state.sshPublicKey : undefined;
            resourceInputs["storageAccessKey"] = state ? state.storageAccessKey : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as FirewallInstanceArgs | undefined;
            if ((!args || args.egressSubnet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'egressSubnet'");
            }
            if ((!args || args.firewallImage === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallImage'");
            }
            if ((!args || args.firewallName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallName'");
            }
            if ((!args || args.firewallSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallSize'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["availabilityDomain"] = args ? args.availabilityDomain : undefined;
            resourceInputs["bootstrapBucketName"] = args ? args.bootstrapBucketName : undefined;
            resourceInputs["bootstrapStorageName"] = args ? args.bootstrapStorageName : undefined;
            resourceInputs["containerFolder"] = args ? args.containerFolder : undefined;
            resourceInputs["egressSubnet"] = args ? args.egressSubnet : undefined;
            resourceInputs["egressVpcId"] = args ? args.egressVpcId : undefined;
            resourceInputs["faultDomain"] = args ? args.faultDomain : undefined;
            resourceInputs["fileShareFolder"] = args ? args.fileShareFolder : undefined;
            resourceInputs["firenetGwName"] = args ? args.firenetGwName : undefined;
            resourceInputs["firewallImage"] = args ? args.firewallImage : undefined;
            resourceInputs["firewallImageId"] = args ? args.firewallImageId : undefined;
            resourceInputs["firewallImageVersion"] = args ? args.firewallImageVersion : undefined;
            resourceInputs["firewallName"] = args ? args.firewallName : undefined;
            resourceInputs["firewallSize"] = args ? args.firewallSize : undefined;
            resourceInputs["iamRole"] = args ? args.iamRole : undefined;
            resourceInputs["keyName"] = args?.keyName ? pulumi.secret(args.keyName) : undefined;
            resourceInputs["managementSubnet"] = args ? args.managementSubnet : undefined;
            resourceInputs["managementVpcId"] = args ? args.managementVpcId : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["sasUrlConfig"] = args ? args.sasUrlConfig : undefined;
            resourceInputs["sasUrlLicense"] = args ? args.sasUrlLicense : undefined;
            resourceInputs["shareDirectory"] = args ? args.shareDirectory : undefined;
            resourceInputs["sicKey"] = args?.sicKey ? pulumi.secret(args.sicKey) : undefined;
            resourceInputs["sshPublicKey"] = args?.sshPublicKey ? pulumi.secret(args.sshPublicKey) : undefined;
            resourceInputs["storageAccessKey"] = args?.storageAccessKey ? pulumi.secret(args.storageAccessKey) : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["cloudType"] = undefined /*out*/;
            resourceInputs["egressInterface"] = undefined /*out*/;
            resourceInputs["gcpVpcId"] = undefined /*out*/;
            resourceInputs["instanceId"] = undefined /*out*/;
            resourceInputs["lanInterface"] = undefined /*out*/;
            resourceInputs["managementInterface"] = undefined /*out*/;
            resourceInputs["publicIp"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["keyName", "password", "sicKey", "sshPublicKey", "storageAccessKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(FirewallInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirewallInstance resources.
 */
export interface FirewallInstanceState {
    /**
     * Availability domain for OCI.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * Advanced option. Bootstrap bucket name. Only available for AWS and GCP.
     */
    bootstrapBucketName?: pulumi.Input<string>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure and Palo Alto Networks VM-Series/Fortinet Series deployment
     * only.
     */
    bootstrapStorageName?: pulumi.Input<string>;
    /**
     * Cloud Type
     */
    cloudType?: pulumi.Input<number>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure and Fortinet Series deployment only.
     */
    containerFolder?: pulumi.Input<string>;
    /**
     * ID of Egress Interface created.
     */
    egressInterface?: pulumi.Input<string>;
    /**
     * Egress Interface Subnet.
     */
    egressSubnet?: pulumi.Input<string>;
    /**
     * Egress VPC ID. Required for GCP.
     */
    egressVpcId?: pulumi.Input<string>;
    /**
     * Fault domain for OCI.
     */
    faultDomain?: pulumi.Input<string>;
    /**
     * Advanced option. File share folder. Applicable to Azure and Palo Alto Networks VM-Series deployment only.
     */
    fileShareFolder?: pulumi.Input<string>;
    /**
     * Name of the primary FireNet gateway.
     */
    firenetGwName?: pulumi.Input<string>;
    /**
     * One of the AWS AMIs from Palo Alto Networks.
     */
    firewallImage?: pulumi.Input<string>;
    /**
     * Firewall image ID.
     */
    firewallImageId?: pulumi.Input<string>;
    /**
     * Version of firewall image.
     */
    firewallImageVersion?: pulumi.Input<string>;
    /**
     * Name of the firewall instance to be created.
     */
    firewallName?: pulumi.Input<string>;
    /**
     * Instance size of the firewall.
     */
    firewallSize?: pulumi.Input<string>;
    /**
     * GCP VPC ID
     */
    gcpVpcId?: pulumi.Input<string>;
    /**
     * Advanced option. IAM role. Only available for AWS.
     */
    iamRole?: pulumi.Input<string>;
    /**
     * ID of the firewall instance created.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Applicable to AWS deployment only. AWS Key Pair name. If not provided, a Key Pair will be generated.
     */
    keyName?: pulumi.Input<string>;
    /**
     * ID of Lan Interface created.
     */
    lanInterface?: pulumi.Input<string>;
    /**
     * ID of Management Interface created.
     */
    managementInterface?: pulumi.Input<string>;
    /**
     * Management Interface Subnet. Required for Palo Alto Networks VM-Series, and required to be empty for Check Point or
     * Fortinet series.
     */
    managementSubnet?: pulumi.Input<string>;
    /**
     * Management VPC ID. Required for GCP Palo Alto Networks VM-Series. Required to be empty for GCP Check Point or Fortinet
     * series.
     */
    managementVpcId?: pulumi.Input<string>;
    /**
     * Authentication method. Applicable to Azure deployment only.
     */
    password?: pulumi.Input<string>;
    /**
     * Management Public IP.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure and Fortinet Series deployment only.
     */
    sasUrlConfig?: pulumi.Input<string>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure and Fortinet Series deployment only.
     */
    sasUrlLicense?: pulumi.Input<string>;
    /**
     * Advanced option. Share directory. Applicable to Azure and Palo Alto Networks VM-Series deployment only.
     */
    shareDirectory?: pulumi.Input<string>;
    /**
     * Advanced option. Bic key. Applicable to Azure and Check Point Series deployment only.
     */
    sicKey?: pulumi.Input<string>;
    /**
     * Authentication method. Applicable to Azure deployment only.
     */
    sshPublicKey?: pulumi.Input<string>;
    /**
     * Advanced option. Storage access key. Applicable to Azure and Palo Alto Networks VM-Series deployment only.
     */
    storageAccessKey?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the firewall instance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Check Point Series and Fortinet Series deployment only.
     */
    userData?: pulumi.Input<string>;
    /**
     * Applicable to Azure deployment only. 'admin' as a username is not accepted.
     */
    username?: pulumi.Input<string>;
    /**
     * ID of the Security VPC.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Availability Zone. Only available for AWS, GCP and Azure.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallInstance resource.
 */
export interface FirewallInstanceArgs {
    /**
     * Availability domain for OCI.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * Advanced option. Bootstrap bucket name. Only available for AWS and GCP.
     */
    bootstrapBucketName?: pulumi.Input<string>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure and Palo Alto Networks VM-Series/Fortinet Series deployment
     * only.
     */
    bootstrapStorageName?: pulumi.Input<string>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure and Fortinet Series deployment only.
     */
    containerFolder?: pulumi.Input<string>;
    /**
     * Egress Interface Subnet.
     */
    egressSubnet: pulumi.Input<string>;
    /**
     * Egress VPC ID. Required for GCP.
     */
    egressVpcId?: pulumi.Input<string>;
    /**
     * Fault domain for OCI.
     */
    faultDomain?: pulumi.Input<string>;
    /**
     * Advanced option. File share folder. Applicable to Azure and Palo Alto Networks VM-Series deployment only.
     */
    fileShareFolder?: pulumi.Input<string>;
    /**
     * Name of the primary FireNet gateway.
     */
    firenetGwName?: pulumi.Input<string>;
    /**
     * One of the AWS AMIs from Palo Alto Networks.
     */
    firewallImage: pulumi.Input<string>;
    /**
     * Firewall image ID.
     */
    firewallImageId?: pulumi.Input<string>;
    /**
     * Version of firewall image.
     */
    firewallImageVersion?: pulumi.Input<string>;
    /**
     * Name of the firewall instance to be created.
     */
    firewallName: pulumi.Input<string>;
    /**
     * Instance size of the firewall.
     */
    firewallSize: pulumi.Input<string>;
    /**
     * Advanced option. IAM role. Only available for AWS.
     */
    iamRole?: pulumi.Input<string>;
    /**
     * Applicable to AWS deployment only. AWS Key Pair name. If not provided, a Key Pair will be generated.
     */
    keyName?: pulumi.Input<string>;
    /**
     * Management Interface Subnet. Required for Palo Alto Networks VM-Series, and required to be empty for Check Point or
     * Fortinet series.
     */
    managementSubnet?: pulumi.Input<string>;
    /**
     * Management VPC ID. Required for GCP Palo Alto Networks VM-Series. Required to be empty for GCP Check Point or Fortinet
     * series.
     */
    managementVpcId?: pulumi.Input<string>;
    /**
     * Authentication method. Applicable to Azure deployment only.
     */
    password?: pulumi.Input<string>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure and Fortinet Series deployment only.
     */
    sasUrlConfig?: pulumi.Input<string>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure and Fortinet Series deployment only.
     */
    sasUrlLicense?: pulumi.Input<string>;
    /**
     * Advanced option. Share directory. Applicable to Azure and Palo Alto Networks VM-Series deployment only.
     */
    shareDirectory?: pulumi.Input<string>;
    /**
     * Advanced option. Bic key. Applicable to Azure and Check Point Series deployment only.
     */
    sicKey?: pulumi.Input<string>;
    /**
     * Authentication method. Applicable to Azure deployment only.
     */
    sshPublicKey?: pulumi.Input<string>;
    /**
     * Advanced option. Storage access key. Applicable to Azure and Palo Alto Networks VM-Series deployment only.
     */
    storageAccessKey?: pulumi.Input<string>;
    /**
     * A map of tags to assign to the firewall instance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Check Point Series and Fortinet Series deployment only.
     */
    userData?: pulumi.Input<string>;
    /**
     * Applicable to Azure deployment only. 'admin' as a username is not accepted.
     */
    username?: pulumi.Input<string>;
    /**
     * ID of the Security VPC.
     */
    vpcId: pulumi.Input<string>;
    /**
     * Availability Zone. Only available for AWS, GCP and Azure.
     */
    zone?: pulumi.Input<string>;
}
