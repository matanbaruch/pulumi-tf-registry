// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Site2cloudCaCertTag extends pulumi.CustomResource {
    /**
     * Get an existing Site2cloudCaCertTag resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Site2cloudCaCertTagState, opts?: pulumi.CustomResourceOptions): Site2cloudCaCertTag {
        return new Site2cloudCaCertTag(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/site2cloudCaCertTag:Site2cloudCaCertTag';

    /**
     * Returns true if the given object is an instance of Site2cloudCaCertTag.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Site2cloudCaCertTag {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Site2cloudCaCertTag.__pulumiType;
    }

    /**
     * A set of CA certificates.
     */
    public readonly caCertificates!: pulumi.Output<outputs.Site2cloudCaCertTagCaCertificate[]>;
    /**
     * Unique name of the ca cert tag.
     */
    public readonly tagName!: pulumi.Output<string>;

    /**
     * Create a Site2cloudCaCertTag resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Site2cloudCaCertTagArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Site2cloudCaCertTagArgs | Site2cloudCaCertTagState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Site2cloudCaCertTagState | undefined;
            resourceInputs["caCertificates"] = state ? state.caCertificates : undefined;
            resourceInputs["tagName"] = state ? state.tagName : undefined;
        } else {
            const args = argsOrState as Site2cloudCaCertTagArgs | undefined;
            if ((!args || args.caCertificates === undefined) && !opts.urn) {
                throw new Error("Missing required property 'caCertificates'");
            }
            if ((!args || args.tagName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tagName'");
            }
            resourceInputs["caCertificates"] = args ? args.caCertificates : undefined;
            resourceInputs["tagName"] = args ? args.tagName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Site2cloudCaCertTag.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Site2cloudCaCertTag resources.
 */
export interface Site2cloudCaCertTagState {
    /**
     * A set of CA certificates.
     */
    caCertificates?: pulumi.Input<pulumi.Input<inputs.Site2cloudCaCertTagCaCertificate>[]>;
    /**
     * Unique name of the ca cert tag.
     */
    tagName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Site2cloudCaCertTag resource.
 */
export interface Site2cloudCaCertTagArgs {
    /**
     * A set of CA certificates.
     */
    caCertificates: pulumi.Input<pulumi.Input<inputs.Site2cloudCaCertTagCaCertificate>[]>;
    /**
     * Unique name of the ca cert tag.
     */
    tagName: pulumi.Input<string>;
}
