// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSpokeGatewayInspectionSubnets(args: GetSpokeGatewayInspectionSubnetsArgs, opts?: pulumi.InvokeOptions): Promise<GetSpokeGatewayInspectionSubnetsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aviatrix:index/getSpokeGatewayInspectionSubnets:getSpokeGatewayInspectionSubnets", {
        "gwName": args.gwName,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSpokeGatewayInspectionSubnets.
 */
export interface GetSpokeGatewayInspectionSubnetsArgs {
    gwName: string;
    id?: string;
}

/**
 * A collection of values returned by getSpokeGatewayInspectionSubnets.
 */
export interface GetSpokeGatewayInspectionSubnetsResult {
    readonly gwName: string;
    readonly id: string;
    readonly subnetsForInspections: string[];
}
export function getSpokeGatewayInspectionSubnetsOutput(args: GetSpokeGatewayInspectionSubnetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSpokeGatewayInspectionSubnetsResult> {
    return pulumi.output(args).apply((a: any) => getSpokeGatewayInspectionSubnets(a, opts))
}

/**
 * A collection of arguments for invoking getSpokeGatewayInspectionSubnets.
 */
export interface GetSpokeGatewayInspectionSubnetsOutputArgs {
    gwName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
