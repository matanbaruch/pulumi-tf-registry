// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DatadogAgent extends pulumi.CustomResource {
    /**
     * Get an existing DatadogAgent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatadogAgentState, opts?: pulumi.CustomResourceOptions): DatadogAgent {
        return new DatadogAgent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/datadogAgent:DatadogAgent';

    /**
     * Returns true if the given object is an instance of DatadogAgent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatadogAgent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatadogAgent.__pulumiType;
    }

    /**
     * API key.
     */
    public readonly apiKey!: pulumi.Output<string>;
    /**
     * List of excluded gateways.
     */
    public readonly excludedGateways!: pulumi.Output<string[] | undefined>;
    /**
     * Only export metrics without exporting logs.
     */
    public readonly metricsOnly!: pulumi.Output<boolean | undefined>;
    /**
     * Site preference.
     */
    public readonly site!: pulumi.Output<string | undefined>;
    /**
     * Enabled or not.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a DatadogAgent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatadogAgentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatadogAgentArgs | DatadogAgentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatadogAgentState | undefined;
            resourceInputs["apiKey"] = state ? state.apiKey : undefined;
            resourceInputs["excludedGateways"] = state ? state.excludedGateways : undefined;
            resourceInputs["metricsOnly"] = state ? state.metricsOnly : undefined;
            resourceInputs["site"] = state ? state.site : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as DatadogAgentArgs | undefined;
            if ((!args || args.apiKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiKey'");
            }
            resourceInputs["apiKey"] = args?.apiKey ? pulumi.secret(args.apiKey) : undefined;
            resourceInputs["excludedGateways"] = args ? args.excludedGateways : undefined;
            resourceInputs["metricsOnly"] = args ? args.metricsOnly : undefined;
            resourceInputs["site"] = args ? args.site : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["apiKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DatadogAgent.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatadogAgent resources.
 */
export interface DatadogAgentState {
    /**
     * API key.
     */
    apiKey?: pulumi.Input<string>;
    /**
     * List of excluded gateways.
     */
    excludedGateways?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Only export metrics without exporting logs.
     */
    metricsOnly?: pulumi.Input<boolean>;
    /**
     * Site preference.
     */
    site?: pulumi.Input<string>;
    /**
     * Enabled or not.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatadogAgent resource.
 */
export interface DatadogAgentArgs {
    /**
     * API key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * List of excluded gateways.
     */
    excludedGateways?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Only export metrics without exporting logs.
     */
    metricsOnly?: pulumi.Input<boolean>;
    /**
     * Site preference.
     */
    site?: pulumi.Input<string>;
}
