// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class GeoVpn extends pulumi.CustomResource {
    /**
     * Get an existing GeoVpn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GeoVpnState, opts?: pulumi.CustomResourceOptions): GeoVpn {
        return new GeoVpn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/geoVpn:GeoVpn';

    /**
     * Returns true if the given object is an instance of GeoVpn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GeoVpn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GeoVpn.__pulumiType;
    }

    /**
     * This parameter represents the name of a Cloud-Account in Aviatrix controller.
     */
    public readonly accountName!: pulumi.Output<string>;
    /**
     * Type of cloud service provider, requires an integer value. Currently only AWS(1) is supported.
     */
    public readonly cloudType!: pulumi.Output<number>;
    /**
     * The hosted domain name. It must be hosted by AWS Route53 or Azure DNS in the selected account.
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * List of ELB names to attach to this Geo VPN name.
     */
    public readonly elbDnsNames!: pulumi.Output<string[]>;
    /**
     * The hostname that users will connect to. A DNS record will be created for this name in the specified domain name.
     */
    public readonly serviceName!: pulumi.Output<string>;

    /**
     * Create a GeoVpn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GeoVpnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GeoVpnArgs | GeoVpnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GeoVpnState | undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["cloudType"] = state ? state.cloudType : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["elbDnsNames"] = state ? state.elbDnsNames : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
        } else {
            const args = argsOrState as GeoVpnArgs | undefined;
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.cloudType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudType'");
            }
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if ((!args || args.elbDnsNames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'elbDnsNames'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["cloudType"] = args ? args.cloudType : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["elbDnsNames"] = args ? args.elbDnsNames : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GeoVpn.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GeoVpn resources.
 */
export interface GeoVpnState {
    /**
     * This parameter represents the name of a Cloud-Account in Aviatrix controller.
     */
    accountName?: pulumi.Input<string>;
    /**
     * Type of cloud service provider, requires an integer value. Currently only AWS(1) is supported.
     */
    cloudType?: pulumi.Input<number>;
    /**
     * The hosted domain name. It must be hosted by AWS Route53 or Azure DNS in the selected account.
     */
    domainName?: pulumi.Input<string>;
    /**
     * List of ELB names to attach to this Geo VPN name.
     */
    elbDnsNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The hostname that users will connect to. A DNS record will be created for this name in the specified domain name.
     */
    serviceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GeoVpn resource.
 */
export interface GeoVpnArgs {
    /**
     * This parameter represents the name of a Cloud-Account in Aviatrix controller.
     */
    accountName: pulumi.Input<string>;
    /**
     * Type of cloud service provider, requires an integer value. Currently only AWS(1) is supported.
     */
    cloudType: pulumi.Input<number>;
    /**
     * The hosted domain name. It must be hosted by AWS Route53 or Azure DNS in the selected account.
     */
    domainName: pulumi.Input<string>;
    /**
     * List of ELB names to attach to this Geo VPN name.
     */
    elbDnsNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The hostname that users will connect to. A DNS record will be created for this name in the specified domain name.
     */
    serviceName: pulumi.Input<string>;
}
