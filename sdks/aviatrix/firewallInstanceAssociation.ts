// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FirewallInstanceAssociation extends pulumi.CustomResource {
    /**
     * Get an existing FirewallInstanceAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallInstanceAssociationState, opts?: pulumi.CustomResourceOptions): FirewallInstanceAssociation {
        return new FirewallInstanceAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/firewallInstanceAssociation:FirewallInstanceAssociation';

    /**
     * Returns true if the given object is an instance of FirewallInstanceAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallInstanceAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallInstanceAssociation.__pulumiType;
    }

    /**
     * Switch to attach/detach firewall instance to/from fireNet.
     */
    public readonly attached!: pulumi.Output<boolean | undefined>;
    /**
     * Egress interface ID, required if it is a firewall instance.
     */
    public readonly egressInterface!: pulumi.Output<string | undefined>;
    /**
     * Name of the gateway to launch the firewall instance.
     */
    public readonly firenetGwName!: pulumi.Output<string | undefined>;
    /**
     * Firewall instance name, or FQDN Gateway's gw_name, required if it is a AWS or Azure firewall instance. Not allowed for
     * GCP
     */
    public readonly firewallName!: pulumi.Output<string | undefined>;
    /**
     * ID of Firewall instance, or FQDN Gateway's gw_name.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Lan interface ID, required if it is a firewall instance.
     */
    public readonly lanInterface!: pulumi.Output<string | undefined>;
    /**
     * Management interface ID, required if it is a firewall instance.
     */
    public readonly managementInterface!: pulumi.Output<string | undefined>;
    /**
     * Indication it is a firewall instance or FQDN gateway to be associated to fireNet. Valid values: 'Generic',
     * 'fqdn_gateway'. Value 'fqdn_gateway' is required for FQDN gateway.
     */
    public readonly vendorType!: pulumi.Output<string | undefined>;
    /**
     * VPC ID.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a FirewallInstanceAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallInstanceAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallInstanceAssociationArgs | FirewallInstanceAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallInstanceAssociationState | undefined;
            resourceInputs["attached"] = state ? state.attached : undefined;
            resourceInputs["egressInterface"] = state ? state.egressInterface : undefined;
            resourceInputs["firenetGwName"] = state ? state.firenetGwName : undefined;
            resourceInputs["firewallName"] = state ? state.firewallName : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["lanInterface"] = state ? state.lanInterface : undefined;
            resourceInputs["managementInterface"] = state ? state.managementInterface : undefined;
            resourceInputs["vendorType"] = state ? state.vendorType : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as FirewallInstanceAssociationArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["attached"] = args ? args.attached : undefined;
            resourceInputs["egressInterface"] = args ? args.egressInterface : undefined;
            resourceInputs["firenetGwName"] = args ? args.firenetGwName : undefined;
            resourceInputs["firewallName"] = args ? args.firewallName : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["lanInterface"] = args ? args.lanInterface : undefined;
            resourceInputs["managementInterface"] = args ? args.managementInterface : undefined;
            resourceInputs["vendorType"] = args ? args.vendorType : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallInstanceAssociation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirewallInstanceAssociation resources.
 */
export interface FirewallInstanceAssociationState {
    /**
     * Switch to attach/detach firewall instance to/from fireNet.
     */
    attached?: pulumi.Input<boolean>;
    /**
     * Egress interface ID, required if it is a firewall instance.
     */
    egressInterface?: pulumi.Input<string>;
    /**
     * Name of the gateway to launch the firewall instance.
     */
    firenetGwName?: pulumi.Input<string>;
    /**
     * Firewall instance name, or FQDN Gateway's gw_name, required if it is a AWS or Azure firewall instance. Not allowed for
     * GCP
     */
    firewallName?: pulumi.Input<string>;
    /**
     * ID of Firewall instance, or FQDN Gateway's gw_name.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Lan interface ID, required if it is a firewall instance.
     */
    lanInterface?: pulumi.Input<string>;
    /**
     * Management interface ID, required if it is a firewall instance.
     */
    managementInterface?: pulumi.Input<string>;
    /**
     * Indication it is a firewall instance or FQDN gateway to be associated to fireNet. Valid values: 'Generic',
     * 'fqdn_gateway'. Value 'fqdn_gateway' is required for FQDN gateway.
     */
    vendorType?: pulumi.Input<string>;
    /**
     * VPC ID.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallInstanceAssociation resource.
 */
export interface FirewallInstanceAssociationArgs {
    /**
     * Switch to attach/detach firewall instance to/from fireNet.
     */
    attached?: pulumi.Input<boolean>;
    /**
     * Egress interface ID, required if it is a firewall instance.
     */
    egressInterface?: pulumi.Input<string>;
    /**
     * Name of the gateway to launch the firewall instance.
     */
    firenetGwName?: pulumi.Input<string>;
    /**
     * Firewall instance name, or FQDN Gateway's gw_name, required if it is a AWS or Azure firewall instance. Not allowed for
     * GCP
     */
    firewallName?: pulumi.Input<string>;
    /**
     * ID of Firewall instance, or FQDN Gateway's gw_name.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Lan interface ID, required if it is a firewall instance.
     */
    lanInterface?: pulumi.Input<string>;
    /**
     * Management interface ID, required if it is a firewall instance.
     */
    managementInterface?: pulumi.Input<string>;
    /**
     * Indication it is a firewall instance or FQDN gateway to be associated to fireNet. Valid values: 'Generic',
     * 'fqdn_gateway'. Value 'fqdn_gateway' is required for FQDN gateway.
     */
    vendorType?: pulumi.Input<string>;
    /**
     * VPC ID.
     */
    vpcId: pulumi.Input<string>;
}
