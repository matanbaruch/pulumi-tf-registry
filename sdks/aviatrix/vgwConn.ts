// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class VgwConn extends pulumi.CustomResource {
    /**
     * Get an existing VgwConn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VgwConnState, opts?: pulumi.CustomResourceOptions): VgwConn {
        return new VgwConn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/vgwConn:VgwConn';

    /**
     * Returns true if the given object is an instance of VgwConn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VgwConn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VgwConn.__pulumiType;
    }

    /**
     * BGP local ASN (Autonomous System Number). Integer between 1-4294967294.
     */
    public readonly bgpLocalAsNum!: pulumi.Output<string>;
    /**
     * Account of AWS's VGW that is used for this connection.
     */
    public readonly bgpVgwAccount!: pulumi.Output<string>;
    /**
     * Id of AWS's VGW that is used for this connection.
     */
    public readonly bgpVgwId!: pulumi.Output<string>;
    /**
     * Region of AWS's VGW that is used for this connection.
     */
    public readonly bgpVgwRegion!: pulumi.Output<string>;
    /**
     * The name of the VGW connection which is going to be created.
     */
    public readonly connName!: pulumi.Output<string>;
    /**
     * Enable Event Triggered HA.
     */
    public readonly enableEventTriggeredHa!: pulumi.Output<boolean | undefined>;
    /**
     * Enable learned CIDR approval for the connection. Requires the transit_gateway's 'learned_cidrs_approval_mode' attribute
     * be set to 'connection'. Valid values: true, false. Default value: false. Available as of provider version R2.18+.
     */
    public readonly enableLearnedCidrsApproval!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the Transit Gateway.
     */
    public readonly gwName!: pulumi.Output<string>;
    /**
     * Configure manual BGP advertised CIDRs for this connection. Available as of provider version R2.18+.
     */
    public readonly manualBgpAdvertisedCidrs!: pulumi.Output<string[] | undefined>;
    /**
     * Connection AS Path Prepend customized by specifying AS PATH for a BGP connection.
     */
    public readonly prependAsPaths!: pulumi.Output<string[] | undefined>;
    /**
     * VPC-ID where the Transit Gateway is located.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a VgwConn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VgwConnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VgwConnArgs | VgwConnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VgwConnState | undefined;
            resourceInputs["bgpLocalAsNum"] = state ? state.bgpLocalAsNum : undefined;
            resourceInputs["bgpVgwAccount"] = state ? state.bgpVgwAccount : undefined;
            resourceInputs["bgpVgwId"] = state ? state.bgpVgwId : undefined;
            resourceInputs["bgpVgwRegion"] = state ? state.bgpVgwRegion : undefined;
            resourceInputs["connName"] = state ? state.connName : undefined;
            resourceInputs["enableEventTriggeredHa"] = state ? state.enableEventTriggeredHa : undefined;
            resourceInputs["enableLearnedCidrsApproval"] = state ? state.enableLearnedCidrsApproval : undefined;
            resourceInputs["gwName"] = state ? state.gwName : undefined;
            resourceInputs["manualBgpAdvertisedCidrs"] = state ? state.manualBgpAdvertisedCidrs : undefined;
            resourceInputs["prependAsPaths"] = state ? state.prependAsPaths : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as VgwConnArgs | undefined;
            if ((!args || args.bgpLocalAsNum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bgpLocalAsNum'");
            }
            if ((!args || args.bgpVgwAccount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bgpVgwAccount'");
            }
            if ((!args || args.bgpVgwId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bgpVgwId'");
            }
            if ((!args || args.bgpVgwRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bgpVgwRegion'");
            }
            if ((!args || args.connName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connName'");
            }
            if ((!args || args.gwName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gwName'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["bgpLocalAsNum"] = args ? args.bgpLocalAsNum : undefined;
            resourceInputs["bgpVgwAccount"] = args ? args.bgpVgwAccount : undefined;
            resourceInputs["bgpVgwId"] = args ? args.bgpVgwId : undefined;
            resourceInputs["bgpVgwRegion"] = args ? args.bgpVgwRegion : undefined;
            resourceInputs["connName"] = args ? args.connName : undefined;
            resourceInputs["enableEventTriggeredHa"] = args ? args.enableEventTriggeredHa : undefined;
            resourceInputs["enableLearnedCidrsApproval"] = args ? args.enableLearnedCidrsApproval : undefined;
            resourceInputs["gwName"] = args ? args.gwName : undefined;
            resourceInputs["manualBgpAdvertisedCidrs"] = args ? args.manualBgpAdvertisedCidrs : undefined;
            resourceInputs["prependAsPaths"] = args ? args.prependAsPaths : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VgwConn.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VgwConn resources.
 */
export interface VgwConnState {
    /**
     * BGP local ASN (Autonomous System Number). Integer between 1-4294967294.
     */
    bgpLocalAsNum?: pulumi.Input<string>;
    /**
     * Account of AWS's VGW that is used for this connection.
     */
    bgpVgwAccount?: pulumi.Input<string>;
    /**
     * Id of AWS's VGW that is used for this connection.
     */
    bgpVgwId?: pulumi.Input<string>;
    /**
     * Region of AWS's VGW that is used for this connection.
     */
    bgpVgwRegion?: pulumi.Input<string>;
    /**
     * The name of the VGW connection which is going to be created.
     */
    connName?: pulumi.Input<string>;
    /**
     * Enable Event Triggered HA.
     */
    enableEventTriggeredHa?: pulumi.Input<boolean>;
    /**
     * Enable learned CIDR approval for the connection. Requires the transit_gateway's 'learned_cidrs_approval_mode' attribute
     * be set to 'connection'. Valid values: true, false. Default value: false. Available as of provider version R2.18+.
     */
    enableLearnedCidrsApproval?: pulumi.Input<boolean>;
    /**
     * Name of the Transit Gateway.
     */
    gwName?: pulumi.Input<string>;
    /**
     * Configure manual BGP advertised CIDRs for this connection. Available as of provider version R2.18+.
     */
    manualBgpAdvertisedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Connection AS Path Prepend customized by specifying AS PATH for a BGP connection.
     */
    prependAsPaths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC-ID where the Transit Gateway is located.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VgwConn resource.
 */
export interface VgwConnArgs {
    /**
     * BGP local ASN (Autonomous System Number). Integer between 1-4294967294.
     */
    bgpLocalAsNum: pulumi.Input<string>;
    /**
     * Account of AWS's VGW that is used for this connection.
     */
    bgpVgwAccount: pulumi.Input<string>;
    /**
     * Id of AWS's VGW that is used for this connection.
     */
    bgpVgwId: pulumi.Input<string>;
    /**
     * Region of AWS's VGW that is used for this connection.
     */
    bgpVgwRegion: pulumi.Input<string>;
    /**
     * The name of the VGW connection which is going to be created.
     */
    connName: pulumi.Input<string>;
    /**
     * Enable Event Triggered HA.
     */
    enableEventTriggeredHa?: pulumi.Input<boolean>;
    /**
     * Enable learned CIDR approval for the connection. Requires the transit_gateway's 'learned_cidrs_approval_mode' attribute
     * be set to 'connection'. Valid values: true, false. Default value: false. Available as of provider version R2.18+.
     */
    enableLearnedCidrsApproval?: pulumi.Input<boolean>;
    /**
     * Name of the Transit Gateway.
     */
    gwName: pulumi.Input<string>;
    /**
     * Configure manual BGP advertised CIDRs for this connection. Available as of provider version R2.18+.
     */
    manualBgpAdvertisedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Connection AS Path Prepend customized by specifying AS PATH for a BGP connection.
     */
    prependAsPaths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC-ID where the Transit Gateway is located.
     */
    vpcId: pulumi.Input<string>;
}
