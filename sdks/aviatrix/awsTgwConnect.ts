// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AwsTgwConnect extends pulumi.CustomResource {
    /**
     * Get an existing AwsTgwConnect resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsTgwConnectState, opts?: pulumi.CustomResourceOptions): AwsTgwConnect {
        return new AwsTgwConnect(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/awsTgwConnect:AwsTgwConnect';

    /**
     * Returns true if the given object is an instance of AwsTgwConnect.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsTgwConnect {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsTgwConnect.__pulumiType;
    }

    /**
     * Connect Attachment ID.
     */
    public /*out*/ readonly connectAttachmentId!: pulumi.Output<string>;
    /**
     * Connection Name.
     */
    public readonly connectionName!: pulumi.Output<string>;
    /**
     * Network Domain Name.
     */
    public readonly networkDomainName!: pulumi.Output<string>;
    /**
     * AWS TGW Name.
     */
    public readonly tgwName!: pulumi.Output<string>;
    /**
     * Transport Attachment ID.
     */
    public /*out*/ readonly transportAttachmentId!: pulumi.Output<string>;
    /**
     * Transport Attachment VPC ID.
     */
    public readonly transportVpcId!: pulumi.Output<string>;

    /**
     * Create a AwsTgwConnect resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsTgwConnectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsTgwConnectArgs | AwsTgwConnectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsTgwConnectState | undefined;
            resourceInputs["connectAttachmentId"] = state ? state.connectAttachmentId : undefined;
            resourceInputs["connectionName"] = state ? state.connectionName : undefined;
            resourceInputs["networkDomainName"] = state ? state.networkDomainName : undefined;
            resourceInputs["tgwName"] = state ? state.tgwName : undefined;
            resourceInputs["transportAttachmentId"] = state ? state.transportAttachmentId : undefined;
            resourceInputs["transportVpcId"] = state ? state.transportVpcId : undefined;
        } else {
            const args = argsOrState as AwsTgwConnectArgs | undefined;
            if ((!args || args.connectionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionName'");
            }
            if ((!args || args.networkDomainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkDomainName'");
            }
            if ((!args || args.tgwName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tgwName'");
            }
            if ((!args || args.transportVpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transportVpcId'");
            }
            resourceInputs["connectionName"] = args ? args.connectionName : undefined;
            resourceInputs["networkDomainName"] = args ? args.networkDomainName : undefined;
            resourceInputs["tgwName"] = args ? args.tgwName : undefined;
            resourceInputs["transportVpcId"] = args ? args.transportVpcId : undefined;
            resourceInputs["connectAttachmentId"] = undefined /*out*/;
            resourceInputs["transportAttachmentId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsTgwConnect.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsTgwConnect resources.
 */
export interface AwsTgwConnectState {
    /**
     * Connect Attachment ID.
     */
    connectAttachmentId?: pulumi.Input<string>;
    /**
     * Connection Name.
     */
    connectionName?: pulumi.Input<string>;
    /**
     * Network Domain Name.
     */
    networkDomainName?: pulumi.Input<string>;
    /**
     * AWS TGW Name.
     */
    tgwName?: pulumi.Input<string>;
    /**
     * Transport Attachment ID.
     */
    transportAttachmentId?: pulumi.Input<string>;
    /**
     * Transport Attachment VPC ID.
     */
    transportVpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsTgwConnect resource.
 */
export interface AwsTgwConnectArgs {
    /**
     * Connection Name.
     */
    connectionName: pulumi.Input<string>;
    /**
     * Network Domain Name.
     */
    networkDomainName: pulumi.Input<string>;
    /**
     * AWS TGW Name.
     */
    tgwName: pulumi.Input<string>;
    /**
     * Transport Attachment VPC ID.
     */
    transportVpcId: pulumi.Input<string>;
}
