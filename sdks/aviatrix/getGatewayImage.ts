// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGatewayImage(args: GetGatewayImageArgs, opts?: pulumi.InvokeOptions): Promise<GetGatewayImageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aviatrix:index/getGatewayImage:getGatewayImage", {
        "cloudType": args.cloudType,
        "id": args.id,
        "softwareVersion": args.softwareVersion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGatewayImage.
 */
export interface GetGatewayImageArgs {
    cloudType: number;
    id?: string;
    softwareVersion: string;
}

/**
 * A collection of values returned by getGatewayImage.
 */
export interface GetGatewayImageResult {
    readonly cloudType: number;
    readonly id: string;
    readonly imageVersion: string;
    readonly softwareVersion: string;
}
export function getGatewayImageOutput(args: GetGatewayImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGatewayImageResult> {
    return pulumi.output(args).apply((a: any) => getGatewayImage(a, opts))
}

/**
 * A collection of arguments for invoking getGatewayImage.
 */
export interface GetGatewayImageOutputArgs {
    cloudType: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    softwareVersion: pulumi.Input<string>;
}
