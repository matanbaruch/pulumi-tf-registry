// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpc(args: GetVpcArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aviatrix:index/getVpc:getVpc", {
        "id": args.id,
        "name": args.name,
        "routeTablesFilter": args.routeTablesFilter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpc.
 */
export interface GetVpcArgs {
    id?: string;
    name: string;
    routeTablesFilter?: string;
}

/**
 * A collection of values returned by getVpc.
 */
export interface GetVpcResult {
    readonly accountName: string;
    readonly availabilityDomains: string[];
    readonly aviatrixFirenetVpc: boolean;
    readonly aviatrixTransitVpc: boolean;
    readonly azureVnetResourceId: string;
    readonly cidr: string;
    readonly cloudType: number;
    readonly faultDomains: string[];
    readonly id: string;
    readonly name: string;
    readonly numOfSubnetPairs: number;
    readonly privateSubnets: outputs.GetVpcPrivateSubnet[];
    readonly publicSubnets: outputs.GetVpcPublicSubnet[];
    readonly region: string;
    readonly resourceGroup: string;
    readonly routeTables: string[];
    readonly routeTablesFilter?: string;
    readonly subnetSize: number;
    readonly subnets: outputs.GetVpcSubnet[];
    readonly vpcId: string;
}
export function getVpcOutput(args: GetVpcOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcResult> {
    return pulumi.output(args).apply((a: any) => getVpc(a, opts))
}

/**
 * A collection of arguments for invoking getVpc.
 */
export interface GetVpcOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    routeTablesFilter?: pulumi.Input<string>;
}
