// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFirenet(args: GetFirenetArgs, opts?: pulumi.InvokeOptions): Promise<GetFirenetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aviatrix:index/getFirenet:getFirenet", {
        "id": args.id,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirenet.
 */
export interface GetFirenetArgs {
    id?: string;
    vpcId: string;
}

/**
 * A collection of values returned by getFirenet.
 */
export interface GetFirenetResult {
    readonly egressEnabled: boolean;
    readonly egressStaticCidrs: string[];
    readonly hashingAlgorithm: string;
    readonly id: string;
    readonly inspectionEnabled: boolean;
    readonly keepAliveViaLanInterfaceEnabled: boolean;
    readonly tgwSegmentationForEgressEnabled: boolean;
    readonly vpcId: string;
}
export function getFirenetOutput(args: GetFirenetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirenetResult> {
    return pulumi.output(args).apply((a: any) => getFirenet(a, opts))
}

/**
 * A collection of arguments for invoking getFirenet.
 */
export interface GetFirenetOutputArgs {
    id?: pulumi.Input<string>;
    vpcId: pulumi.Input<string>;
}
