// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AwsTgwDirectconnect extends pulumi.CustomResource {
    /**
     * Get an existing AwsTgwDirectconnect resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsTgwDirectconnectState, opts?: pulumi.CustomResourceOptions): AwsTgwDirectconnect {
        return new AwsTgwDirectconnect(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/awsTgwDirectconnect:AwsTgwDirectconnect';

    /**
     * Returns true if the given object is an instance of AwsTgwDirectconnect.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsTgwDirectconnect {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsTgwDirectconnect.__pulumiType;
    }

    /**
     * Public IP address. Example: '40.0.0.0'.
     */
    public readonly allowedPrefix!: pulumi.Output<string>;
    /**
     * This parameter represents the name of an Account in Aviatrix controller.
     */
    public readonly directconnectAccountName!: pulumi.Output<string>;
    /**
     * This parameter represents the name of a Direct Connect Gateway ID.
     */
    public readonly dxGatewayId!: pulumi.Output<string>;
    /**
     * Switch to enable/disable encrypted transit approval for direct connection. Valid values: true, false.
     */
    public readonly enableLearnedCidrsApproval!: pulumi.Output<boolean | undefined>;
    /**
     * The name of an Aviatrix network domain, to which the direct connect gateway will be attached.
     */
    public readonly networkDomainName!: pulumi.Output<string>;
    /**
     * This parameter represents the name of an AWS TGW.
     */
    public readonly tgwName!: pulumi.Output<string>;

    /**
     * Create a AwsTgwDirectconnect resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsTgwDirectconnectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsTgwDirectconnectArgs | AwsTgwDirectconnectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsTgwDirectconnectState | undefined;
            resourceInputs["allowedPrefix"] = state ? state.allowedPrefix : undefined;
            resourceInputs["directconnectAccountName"] = state ? state.directconnectAccountName : undefined;
            resourceInputs["dxGatewayId"] = state ? state.dxGatewayId : undefined;
            resourceInputs["enableLearnedCidrsApproval"] = state ? state.enableLearnedCidrsApproval : undefined;
            resourceInputs["networkDomainName"] = state ? state.networkDomainName : undefined;
            resourceInputs["tgwName"] = state ? state.tgwName : undefined;
        } else {
            const args = argsOrState as AwsTgwDirectconnectArgs | undefined;
            if ((!args || args.allowedPrefix === undefined) && !opts.urn) {
                throw new Error("Missing required property 'allowedPrefix'");
            }
            if ((!args || args.directconnectAccountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'directconnectAccountName'");
            }
            if ((!args || args.dxGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dxGatewayId'");
            }
            if ((!args || args.networkDomainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkDomainName'");
            }
            if ((!args || args.tgwName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tgwName'");
            }
            resourceInputs["allowedPrefix"] = args ? args.allowedPrefix : undefined;
            resourceInputs["directconnectAccountName"] = args ? args.directconnectAccountName : undefined;
            resourceInputs["dxGatewayId"] = args ? args.dxGatewayId : undefined;
            resourceInputs["enableLearnedCidrsApproval"] = args ? args.enableLearnedCidrsApproval : undefined;
            resourceInputs["networkDomainName"] = args ? args.networkDomainName : undefined;
            resourceInputs["tgwName"] = args ? args.tgwName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsTgwDirectconnect.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsTgwDirectconnect resources.
 */
export interface AwsTgwDirectconnectState {
    /**
     * Public IP address. Example: '40.0.0.0'.
     */
    allowedPrefix?: pulumi.Input<string>;
    /**
     * This parameter represents the name of an Account in Aviatrix controller.
     */
    directconnectAccountName?: pulumi.Input<string>;
    /**
     * This parameter represents the name of a Direct Connect Gateway ID.
     */
    dxGatewayId?: pulumi.Input<string>;
    /**
     * Switch to enable/disable encrypted transit approval for direct connection. Valid values: true, false.
     */
    enableLearnedCidrsApproval?: pulumi.Input<boolean>;
    /**
     * The name of an Aviatrix network domain, to which the direct connect gateway will be attached.
     */
    networkDomainName?: pulumi.Input<string>;
    /**
     * This parameter represents the name of an AWS TGW.
     */
    tgwName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsTgwDirectconnect resource.
 */
export interface AwsTgwDirectconnectArgs {
    /**
     * Public IP address. Example: '40.0.0.0'.
     */
    allowedPrefix: pulumi.Input<string>;
    /**
     * This parameter represents the name of an Account in Aviatrix controller.
     */
    directconnectAccountName: pulumi.Input<string>;
    /**
     * This parameter represents the name of a Direct Connect Gateway ID.
     */
    dxGatewayId: pulumi.Input<string>;
    /**
     * Switch to enable/disable encrypted transit approval for direct connection. Valid values: true, false.
     */
    enableLearnedCidrsApproval?: pulumi.Input<boolean>;
    /**
     * The name of an Aviatrix network domain, to which the direct connect gateway will be attached.
     */
    networkDomainName: pulumi.Input<string>;
    /**
     * This parameter represents the name of an AWS TGW.
     */
    tgwName: pulumi.Input<string>;
}
