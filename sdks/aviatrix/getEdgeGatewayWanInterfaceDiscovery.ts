// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEdgeGatewayWanInterfaceDiscovery(args: GetEdgeGatewayWanInterfaceDiscoveryArgs, opts?: pulumi.InvokeOptions): Promise<GetEdgeGatewayWanInterfaceDiscoveryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aviatrix:index/getEdgeGatewayWanInterfaceDiscovery:getEdgeGatewayWanInterfaceDiscovery", {
        "gwName": args.gwName,
        "id": args.id,
        "wanInterfaceName": args.wanInterfaceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEdgeGatewayWanInterfaceDiscovery.
 */
export interface GetEdgeGatewayWanInterfaceDiscoveryArgs {
    gwName: string;
    id?: string;
    wanInterfaceName: string;
}

/**
 * A collection of values returned by getEdgeGatewayWanInterfaceDiscovery.
 */
export interface GetEdgeGatewayWanInterfaceDiscoveryResult {
    readonly gwName: string;
    readonly id: string;
    readonly ipAddress: string;
    readonly wanInterfaceName: string;
}
export function getEdgeGatewayWanInterfaceDiscoveryOutput(args: GetEdgeGatewayWanInterfaceDiscoveryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEdgeGatewayWanInterfaceDiscoveryResult> {
    return pulumi.output(args).apply((a: any) => getEdgeGatewayWanInterfaceDiscovery(a, opts))
}

/**
 * A collection of arguments for invoking getEdgeGatewayWanInterfaceDiscovery.
 */
export interface GetEdgeGatewayWanInterfaceDiscoveryOutputArgs {
    gwName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    wanInterfaceName: pulumi.Input<string>;
}
