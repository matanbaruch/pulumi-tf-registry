// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Firenet extends pulumi.CustomResource {
    /**
     * Get an existing Firenet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirenetState, opts?: pulumi.CustomResourceOptions): Firenet {
        return new Firenet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/firenet:Firenet';

    /**
     * Returns true if the given object is an instance of Firenet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Firenet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Firenet.__pulumiType;
    }

    /**
     * Network List Excluded From East-West Inspection. CIDRs to be excluded from inspection. Type: Set(String). Available as
     * of provider version R2.19.2+.
     */
    public readonly eastWestInspectionExcludedCidrs!: pulumi.Output<string[] | undefined>;
    /**
     * Enable/Disable egress through firewall.
     */
    public readonly egressEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * List of egress static cidrs.
     */
    public readonly egressStaticCidrs!: pulumi.Output<string[] | undefined>;
    /**
     * Hashing algorithm to load balance traffic across the firewall.
     */
    public readonly hashingAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * Enable/Disable traffic inspection.
     */
    public readonly inspectionEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable Keep Alive via Firewall LAN Interface. Supported for AWS and OCI related clouds only.
     *
     * @deprecated Deprecated
     */
    public readonly keepAliveViaLanInterfaceEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable TGW segmentation for egress.
     */
    public readonly tgwSegmentationForEgressEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * VPC ID.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a Firenet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirenetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirenetArgs | FirenetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirenetState | undefined;
            resourceInputs["eastWestInspectionExcludedCidrs"] = state ? state.eastWestInspectionExcludedCidrs : undefined;
            resourceInputs["egressEnabled"] = state ? state.egressEnabled : undefined;
            resourceInputs["egressStaticCidrs"] = state ? state.egressStaticCidrs : undefined;
            resourceInputs["hashingAlgorithm"] = state ? state.hashingAlgorithm : undefined;
            resourceInputs["inspectionEnabled"] = state ? state.inspectionEnabled : undefined;
            resourceInputs["keepAliveViaLanInterfaceEnabled"] = state ? state.keepAliveViaLanInterfaceEnabled : undefined;
            resourceInputs["tgwSegmentationForEgressEnabled"] = state ? state.tgwSegmentationForEgressEnabled : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as FirenetArgs | undefined;
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["eastWestInspectionExcludedCidrs"] = args ? args.eastWestInspectionExcludedCidrs : undefined;
            resourceInputs["egressEnabled"] = args ? args.egressEnabled : undefined;
            resourceInputs["egressStaticCidrs"] = args ? args.egressStaticCidrs : undefined;
            resourceInputs["hashingAlgorithm"] = args ? args.hashingAlgorithm : undefined;
            resourceInputs["inspectionEnabled"] = args ? args.inspectionEnabled : undefined;
            resourceInputs["keepAliveViaLanInterfaceEnabled"] = args ? args.keepAliveViaLanInterfaceEnabled : undefined;
            resourceInputs["tgwSegmentationForEgressEnabled"] = args ? args.tgwSegmentationForEgressEnabled : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Firenet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Firenet resources.
 */
export interface FirenetState {
    /**
     * Network List Excluded From East-West Inspection. CIDRs to be excluded from inspection. Type: Set(String). Available as
     * of provider version R2.19.2+.
     */
    eastWestInspectionExcludedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable/Disable egress through firewall.
     */
    egressEnabled?: pulumi.Input<boolean>;
    /**
     * List of egress static cidrs.
     */
    egressStaticCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Hashing algorithm to load balance traffic across the firewall.
     */
    hashingAlgorithm?: pulumi.Input<string>;
    /**
     * Enable/Disable traffic inspection.
     */
    inspectionEnabled?: pulumi.Input<boolean>;
    /**
     * Enable Keep Alive via Firewall LAN Interface. Supported for AWS and OCI related clouds only.
     *
     * @deprecated Deprecated
     */
    keepAliveViaLanInterfaceEnabled?: pulumi.Input<boolean>;
    /**
     * Enable TGW segmentation for egress.
     */
    tgwSegmentationForEgressEnabled?: pulumi.Input<boolean>;
    /**
     * VPC ID.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Firenet resource.
 */
export interface FirenetArgs {
    /**
     * Network List Excluded From East-West Inspection. CIDRs to be excluded from inspection. Type: Set(String). Available as
     * of provider version R2.19.2+.
     */
    eastWestInspectionExcludedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable/Disable egress through firewall.
     */
    egressEnabled?: pulumi.Input<boolean>;
    /**
     * List of egress static cidrs.
     */
    egressStaticCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Hashing algorithm to load balance traffic across the firewall.
     */
    hashingAlgorithm?: pulumi.Input<string>;
    /**
     * Enable/Disable traffic inspection.
     */
    inspectionEnabled?: pulumi.Input<boolean>;
    /**
     * Enable Keep Alive via Firewall LAN Interface. Supported for AWS and OCI related clouds only.
     *
     * @deprecated Deprecated
     */
    keepAliveViaLanInterfaceEnabled?: pulumi.Input<boolean>;
    /**
     * Enable TGW segmentation for egress.
     */
    tgwSegmentationForEgressEnabled?: pulumi.Input<boolean>;
    /**
     * VPC ID.
     */
    vpcId: pulumi.Input<string>;
}
