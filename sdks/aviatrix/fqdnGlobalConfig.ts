// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FqdnGlobalConfig extends pulumi.CustomResource {
    /**
     * Get an existing FqdnGlobalConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FqdnGlobalConfigState, opts?: pulumi.CustomResourceOptions): FqdnGlobalConfig {
        return new FqdnGlobalConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/fqdnGlobalConfig:FqdnGlobalConfig';

    /**
     * Returns true if the given object is an instance of FqdnGlobalConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FqdnGlobalConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FqdnGlobalConfig.__pulumiType;
    }

    /**
     * Customized packet destination address ranges not to be filtered by FQDN. Can be selected from pre-defined RFC 1918
     * range, or own network range.
     */
    public readonly configuredIps!: pulumi.Output<string[] | undefined>;
    /**
     * If enabled, it caches the resolved IP address from FQDN filter.
     */
    public readonly enableCaching!: pulumi.Output<boolean | undefined>;
    /**
     * If enabled, it customizes packet destination address ranges not to be filtered by FQDN.
     */
    public readonly enableCustomNetworkFiltering!: pulumi.Output<boolean | undefined>;
    /**
     * If enabled, the resolved IP address from FQDN filter is cached so that if subsequent TCP session matches the cached IP
     * address list, FQDN domain name is not checked and the session is allowed to pass.
     */
    public readonly enableExactMatch!: pulumi.Output<boolean | undefined>;
    /**
     * If enabled, it allows packets passing through the gateway without an SNI field. Only applies to whitelist.
     */
    public readonly enableExceptionRule!: pulumi.Output<boolean | undefined>;
    /**
     * If enabled, destination FQDN names that translate to private IP address range (RFC 1918) are subject to FQDN whitelist
     * filtering function.
     */
    public readonly enablePrivateNetworkFiltering!: pulumi.Output<boolean | undefined>;

    /**
     * Create a FqdnGlobalConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FqdnGlobalConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FqdnGlobalConfigArgs | FqdnGlobalConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FqdnGlobalConfigState | undefined;
            resourceInputs["configuredIps"] = state ? state.configuredIps : undefined;
            resourceInputs["enableCaching"] = state ? state.enableCaching : undefined;
            resourceInputs["enableCustomNetworkFiltering"] = state ? state.enableCustomNetworkFiltering : undefined;
            resourceInputs["enableExactMatch"] = state ? state.enableExactMatch : undefined;
            resourceInputs["enableExceptionRule"] = state ? state.enableExceptionRule : undefined;
            resourceInputs["enablePrivateNetworkFiltering"] = state ? state.enablePrivateNetworkFiltering : undefined;
        } else {
            const args = argsOrState as FqdnGlobalConfigArgs | undefined;
            resourceInputs["configuredIps"] = args ? args.configuredIps : undefined;
            resourceInputs["enableCaching"] = args ? args.enableCaching : undefined;
            resourceInputs["enableCustomNetworkFiltering"] = args ? args.enableCustomNetworkFiltering : undefined;
            resourceInputs["enableExactMatch"] = args ? args.enableExactMatch : undefined;
            resourceInputs["enableExceptionRule"] = args ? args.enableExceptionRule : undefined;
            resourceInputs["enablePrivateNetworkFiltering"] = args ? args.enablePrivateNetworkFiltering : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FqdnGlobalConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FqdnGlobalConfig resources.
 */
export interface FqdnGlobalConfigState {
    /**
     * Customized packet destination address ranges not to be filtered by FQDN. Can be selected from pre-defined RFC 1918
     * range, or own network range.
     */
    configuredIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If enabled, it caches the resolved IP address from FQDN filter.
     */
    enableCaching?: pulumi.Input<boolean>;
    /**
     * If enabled, it customizes packet destination address ranges not to be filtered by FQDN.
     */
    enableCustomNetworkFiltering?: pulumi.Input<boolean>;
    /**
     * If enabled, the resolved IP address from FQDN filter is cached so that if subsequent TCP session matches the cached IP
     * address list, FQDN domain name is not checked and the session is allowed to pass.
     */
    enableExactMatch?: pulumi.Input<boolean>;
    /**
     * If enabled, it allows packets passing through the gateway without an SNI field. Only applies to whitelist.
     */
    enableExceptionRule?: pulumi.Input<boolean>;
    /**
     * If enabled, destination FQDN names that translate to private IP address range (RFC 1918) are subject to FQDN whitelist
     * filtering function.
     */
    enablePrivateNetworkFiltering?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a FqdnGlobalConfig resource.
 */
export interface FqdnGlobalConfigArgs {
    /**
     * Customized packet destination address ranges not to be filtered by FQDN. Can be selected from pre-defined RFC 1918
     * range, or own network range.
     */
    configuredIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If enabled, it caches the resolved IP address from FQDN filter.
     */
    enableCaching?: pulumi.Input<boolean>;
    /**
     * If enabled, it customizes packet destination address ranges not to be filtered by FQDN.
     */
    enableCustomNetworkFiltering?: pulumi.Input<boolean>;
    /**
     * If enabled, the resolved IP address from FQDN filter is cached so that if subsequent TCP session matches the cached IP
     * address list, FQDN domain name is not checked and the session is allowed to pass.
     */
    enableExactMatch?: pulumi.Input<boolean>;
    /**
     * If enabled, it allows packets passing through the gateway without an SNI field. Only applies to whitelist.
     */
    enableExceptionRule?: pulumi.Input<boolean>;
    /**
     * If enabled, destination FQDN names that translate to private IP address range (RFC 1918) are subject to FQDN whitelist
     * filtering function.
     */
    enablePrivateNetworkFiltering?: pulumi.Input<boolean>;
}
