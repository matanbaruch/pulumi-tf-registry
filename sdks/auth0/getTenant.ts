// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTenant(args?: GetTenantArgs, opts?: pulumi.InvokeOptions): Promise<GetTenantResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("auth0:index/getTenant:getTenant", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTenant.
 */
export interface GetTenantArgs {
    id?: string;
}

/**
 * A collection of values returned by getTenant.
 */
export interface GetTenantResult {
    readonly allowOrganizationNameInAuthenticationApi: boolean;
    readonly allowedLogoutUrls: string[];
    readonly customizeMfaInPostloginAction: boolean;
    readonly defaultAudience: string;
    readonly defaultDirectory: string;
    readonly defaultRedirectionUri: string;
    readonly domain: string;
    readonly enabledLocales: string[];
    readonly flags: outputs.GetTenantFlag[];
    readonly friendlyName: string;
    readonly id: string;
    readonly idleSessionLifetime: number;
    readonly managementApiIdentifier: string;
    readonly pictureUrl: string;
    readonly sandboxVersion: string;
    readonly sessionCookies: outputs.GetTenantSessionCooky[];
    readonly sessionLifetime: number;
    readonly sessions: outputs.GetTenantSession[];
    readonly supportEmail: string;
    readonly supportUrl: string;
}
export function getTenantOutput(args?: GetTenantOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTenantResult> {
    return pulumi.output(args).apply((a: any) => getTenant(a, opts))
}

/**
 * A collection of arguments for invoking getTenant.
 */
export interface GetTenantOutputArgs {
    id?: pulumi.Input<string>;
}
