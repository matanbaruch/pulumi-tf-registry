// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBrandingTheme(args?: GetBrandingThemeArgs, opts?: pulumi.InvokeOptions): Promise<GetBrandingThemeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("auth0:index/getBrandingTheme:getBrandingTheme", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBrandingTheme.
 */
export interface GetBrandingThemeArgs {
    id?: string;
}

/**
 * A collection of values returned by getBrandingTheme.
 */
export interface GetBrandingThemeResult {
    readonly borders: outputs.GetBrandingThemeBorder[];
    readonly colors: outputs.GetBrandingThemeColor[];
    readonly displayName: string;
    readonly fonts: outputs.GetBrandingThemeFont[];
    readonly id: string;
    readonly pageBackgrounds: outputs.GetBrandingThemePageBackground[];
    readonly widgets: outputs.GetBrandingThemeWidget[];
}
export function getBrandingThemeOutput(args?: GetBrandingThemeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBrandingThemeResult> {
    return pulumi.output(args).apply((a: any) => getBrandingTheme(a, opts))
}

/**
 * A collection of arguments for invoking getBrandingTheme.
 */
export interface GetBrandingThemeOutputArgs {
    id?: pulumi.Input<string>;
}
