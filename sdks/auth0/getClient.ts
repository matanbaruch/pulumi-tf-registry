// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getClient(args?: GetClientArgs, opts?: pulumi.InvokeOptions): Promise<GetClientResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("auth0:index/getClient:getClient", {
        "clientId": args.clientId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getClient.
 */
export interface GetClientArgs {
    clientId?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getClient.
 */
export interface GetClientResult {
    readonly addons: outputs.GetClientAddon[];
    readonly allowedClients: string[];
    readonly allowedLogoutUrls: string[];
    readonly allowedOrigins: string[];
    readonly appType: string;
    readonly callbacks: string[];
    readonly clientAliases: string[];
    readonly clientId?: string;
    readonly clientMetadata: {[key: string]: string};
    readonly clientSecret: string;
    readonly crossOriginAuth: boolean;
    readonly crossOriginLoc: string;
    readonly customLoginPage: string;
    readonly customLoginPageOn: boolean;
    readonly description: string;
    readonly encryptionKey: {[key: string]: string};
    readonly formTemplate: string;
    readonly grantTypes: string[];
    readonly id: string;
    readonly initiateLoginUri: string;
    readonly isFirstParty: boolean;
    readonly isTokenEndpointIpHeaderTrusted: boolean;
    readonly jwtConfigurations: outputs.GetClientJwtConfiguration[];
    readonly logoUri: string;
    readonly mobiles: outputs.GetClientMobile[];
    readonly name?: string;
    readonly nativeSocialLogins: outputs.GetClientNativeSocialLogin[];
    readonly oidcBackchannelLogoutUrls: string[];
    readonly oidcConformant: boolean;
    readonly organizationRequireBehavior: string;
    readonly organizationUsage: string;
    readonly refreshTokens: outputs.GetClientRefreshToken[];
    readonly requirePushedAuthorizationRequests: boolean;
    readonly signingKeys: {[key: string]: string}[];
    readonly sso: boolean;
    readonly ssoDisabled: boolean;
    readonly tokenEndpointAuthMethod: string;
    readonly webOrigins: string[];
}
export function getClientOutput(args?: GetClientOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClientResult> {
    return pulumi.output(args).apply((a: any) => getClient(a, opts))
}

/**
 * A collection of arguments for invoking getClient.
 */
export interface GetClientOutputArgs {
    clientId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
