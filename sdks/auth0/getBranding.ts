// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBranding(args?: GetBrandingArgs, opts?: pulumi.InvokeOptions): Promise<GetBrandingResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("auth0:index/getBranding:getBranding", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBranding.
 */
export interface GetBrandingArgs {
    id?: string;
}

/**
 * A collection of values returned by getBranding.
 */
export interface GetBrandingResult {
    readonly colors: outputs.GetBrandingColor[];
    readonly faviconUrl: string;
    readonly fonts: outputs.GetBrandingFont[];
    readonly id: string;
    readonly logoUrl: string;
    readonly universalLogins: outputs.GetBrandingUniversalLogin[];
}
export function getBrandingOutput(args?: GetBrandingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBrandingResult> {
    return pulumi.output(args).apply((a: any) => getBranding(a, opts))
}

/**
 * A collection of arguments for invoking getBranding.
 */
export interface GetBrandingOutputArgs {
    id?: pulumi.Input<string>;
}
