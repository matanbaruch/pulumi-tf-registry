// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Site extends pulumi.CustomResource {
    /**
     * Get an existing Site resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SiteState, opts?: pulumi.CustomResourceOptions): Site {
        return new Site(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prismasdwan:index/site:Site';

    /**
     * Returns true if the given object is an instance of Site.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Site {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Site.__pulumiType;
    }

    /**
     * The filesystem path of the site's JSON config.
     */
    public readonly config!: pulumi.Output<string>;
    /**
     * This will be set to false if the site config deployed does not match the given config file.
     */
    public readonly isDeployed!: pulumi.Output<boolean>;
    public /*out*/ readonly tfid!: pulumi.Output<string>;
    /**
     * Timeouts for this resource's operations. A custom timeout is a string that has a number and a units suffix, such as 30s
     * or 1h1m1s. Valid units are "h", "m", or "s". Note that changes to custom timeouts only take effect during resource
     * creation or update. Default: 30m.
     */
    public readonly timeout!: pulumi.Output<string>;

    /**
     * Create a Site resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SiteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SiteArgs | SiteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SiteState | undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["isDeployed"] = state ? state.isDeployed : undefined;
            resourceInputs["tfid"] = state ? state.tfid : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
        } else {
            const args = argsOrState as SiteArgs | undefined;
            if ((!args || args.config === undefined) && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["isDeployed"] = args ? args.isDeployed : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["tfid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Site.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Site resources.
 */
export interface SiteState {
    /**
     * The filesystem path of the site's JSON config.
     */
    config?: pulumi.Input<string>;
    /**
     * This will be set to false if the site config deployed does not match the given config file.
     */
    isDeployed?: pulumi.Input<boolean>;
    tfid?: pulumi.Input<string>;
    /**
     * Timeouts for this resource's operations. A custom timeout is a string that has a number and a units suffix, such as 30s
     * or 1h1m1s. Valid units are "h", "m", or "s". Note that changes to custom timeouts only take effect during resource
     * creation or update. Default: 30m.
     */
    timeout?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Site resource.
 */
export interface SiteArgs {
    /**
     * The filesystem path of the site's JSON config.
     */
    config: pulumi.Input<string>;
    /**
     * This will be set to false if the site config deployed does not match the given config file.
     */
    isDeployed?: pulumi.Input<boolean>;
    /**
     * Timeouts for this resource's operations. A custom timeout is a string that has a number and a units suffix, such as 30s
     * or 1h1m1s. Valid units are "h", "m", or "s". Note that changes to custom timeouts only take effect during resource
     * creation or update. Default: 30m.
     */
    timeout?: pulumi.Input<string>;
}
