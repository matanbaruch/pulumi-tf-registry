// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpnInterfaceEthernetPppoeFeatureTemplate(args?: GetVpnInterfaceEthernetPppoeFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetVpnInterfaceEthernetPppoeFeatureTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getVpnInterfaceEthernetPppoeFeatureTemplate:getVpnInterfaceEthernetPppoeFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpnInterfaceEthernetPppoeFeatureTemplate.
 */
export interface GetVpnInterfaceEthernetPppoeFeatureTemplateArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getVpnInterfaceEthernetPppoeFeatureTemplate.
 */
export interface GetVpnInterfaceEthernetPppoeFeatureTemplateResult {
    readonly accessLists: outputs.GetVpnInterfaceEthernetPppoeFeatureTemplateAccessList[];
    readonly bandwidthDownstream: number;
    readonly bandwidthDownstreamVariable: string;
    readonly bandwidthUpstream: number;
    readonly bandwidthUpstreamVariable: string;
    readonly chapHostname: string;
    readonly chapHostnameVariable: string;
    readonly chapPppAuthPassword: string;
    readonly chapPppAuthPasswordVariable: string;
    readonly coreRegion: string;
    readonly coreRegionVariable: string;
    readonly description: string;
    readonly deviceTypes: string[];
    readonly dialerAddressNegotiated: boolean;
    readonly dialerAddressNegotiatedVariable: string;
    readonly dialerPoolNumber: number;
    readonly dialerPoolNumberVariable: string;
    readonly dialerTcpMss: number;
    readonly dialerTcpMssVariable: string;
    readonly enableCoreRegion: boolean;
    readonly encap: number;
    readonly encapVariable: string;
    readonly ethernetInterfaceName: string;
    readonly ethernetInterfaceNameVariable: string;
    readonly id: string;
    readonly interfaceDescription: string;
    readonly interfaceDescriptionVariable: string;
    readonly ipDirectedBroadcast: boolean;
    readonly ipDirectedBroadcastVariable: string;
    readonly ipMtuForDialerInterface: number;
    readonly ipMtuForDialerInterfaceVariable: string;
    readonly name: string;
    readonly nat: boolean;
    readonly natBlockIcmpError: boolean;
    readonly natBlockIcmpErrorVariable: string;
    readonly natPortForwards: outputs.GetVpnInterfaceEthernetPppoeFeatureTemplateNatPortForward[];
    readonly natRefreshMode: string;
    readonly natRefreshModeVariable: string;
    readonly natResponseToPing: boolean;
    readonly natResponseToPingVariable: string;
    readonly natTcpTimeout: number;
    readonly natTcpTimeoutVariable: string;
    readonly natUdpTimeout: number;
    readonly natUdpTimeoutVariable: string;
    readonly papPassword: boolean;
    readonly papPppAuthPassword: string;
    readonly papPppAuthPasswordVariable: string;
    readonly papUsername: string;
    readonly papUsernameVariable: string;
    readonly perTunnelQos: boolean;
    readonly perTunnelQosAggregator: boolean;
    readonly perTunnelQosAggregatorVariable: string;
    readonly perTunnelQosVariable: string;
    readonly policers: outputs.GetVpnInterfaceEthernetPppoeFeatureTemplatePolicer[];
    readonly pppAuthenticationProtocol: string;
    readonly pppAuthenticationProtocolPap: boolean;
    readonly pppAuthenticationProtocolVariable: string;
    readonly pppAuthenticationType: string;
    readonly pppMaximumPayload: number;
    readonly pppMaximumPayloadVariable: string;
    readonly qosAdaptiveBandwidthDownstream: number;
    readonly qosAdaptiveBandwidthDownstreamVariable: string;
    readonly qosAdaptiveBandwidthUpstream: number;
    readonly qosAdaptiveBandwidthUpstreamVariable: string;
    readonly qosAdaptiveMaxDownstream: number;
    readonly qosAdaptiveMaxDownstreamVariable: string;
    readonly qosAdaptiveMaxUpstream: number;
    readonly qosAdaptiveMaxUpstreamVariable: string;
    readonly qosAdaptiveMinDownstream: number;
    readonly qosAdaptiveMinDownstreamVariable: string;
    readonly qosAdaptiveMinUpstream: number;
    readonly qosAdaptiveMinUpstreamVariable: string;
    readonly qosAdaptivePeriod: number;
    readonly qosAdaptivePeriodVariable: string;
    readonly qosMap: string;
    readonly qosMapVariable: string;
    readonly qosMapVpn: string;
    readonly qosMapVpnVariable: string;
    readonly secondaryRegion: string;
    readonly secondaryRegionVariable: string;
    readonly shapingRate: number;
    readonly shapingRateVariable: string;
    readonly shutdown: boolean;
    readonly shutdownVariable: string;
    readonly templateType: string;
    readonly tlocExtension: string;
    readonly tlocExtensionVariable: string;
    readonly trackerVariable: string;
    readonly trackers: string[];
    readonly tunnelInterfaceAllowAll: boolean;
    readonly tunnelInterfaceAllowAllVariable: string;
    readonly tunnelInterfaceAllowBgp: boolean;
    readonly tunnelInterfaceAllowBgpVariable: string;
    readonly tunnelInterfaceAllowDhcp: boolean;
    readonly tunnelInterfaceAllowDhcpVariable: string;
    readonly tunnelInterfaceAllowDns: boolean;
    readonly tunnelInterfaceAllowDnsVariable: string;
    readonly tunnelInterfaceAllowHttps: boolean;
    readonly tunnelInterfaceAllowHttpsVariable: string;
    readonly tunnelInterfaceAllowIcmp: boolean;
    readonly tunnelInterfaceAllowIcmpVariable: string;
    readonly tunnelInterfaceAllowNetconf: boolean;
    readonly tunnelInterfaceAllowNetconfVariable: string;
    readonly tunnelInterfaceAllowNtp: boolean;
    readonly tunnelInterfaceAllowNtpVariable: string;
    readonly tunnelInterfaceAllowOspf: boolean;
    readonly tunnelInterfaceAllowOspfVariable: string;
    readonly tunnelInterfaceAllowSnmp: boolean;
    readonly tunnelInterfaceAllowSnmpVariable: string;
    readonly tunnelInterfaceAllowSsh: boolean;
    readonly tunnelInterfaceAllowSshVariable: string;
    readonly tunnelInterfaceAllowStun: boolean;
    readonly tunnelInterfaceAllowStunVariable: string;
    readonly tunnelInterfaceBindLoopbackTunnel: string;
    readonly tunnelInterfaceBindLoopbackTunnelVariable: string;
    readonly tunnelInterfaceBorder: boolean;
    readonly tunnelInterfaceBorderVariable: string;
    readonly tunnelInterfaceCarrier: string;
    readonly tunnelInterfaceCarrierVariable: string;
    readonly tunnelInterfaceClearDontFragment: boolean;
    readonly tunnelInterfaceClearDontFragmentVariable: string;
    readonly tunnelInterfaceColor: string;
    readonly tunnelInterfaceColorRestrict: boolean;
    readonly tunnelInterfaceColorVariable: string;
    readonly tunnelInterfaceControlConnections: boolean;
    readonly tunnelInterfaceControlConnectionsVariable: string;
    readonly tunnelInterfaceEncapsulations: outputs.GetVpnInterfaceEthernetPppoeFeatureTemplateTunnelInterfaceEncapsulation[];
    readonly tunnelInterfaceExcludeControllerGroupListVariable: string;
    readonly tunnelInterfaceExcludeControllerGroupLists: number[];
    readonly tunnelInterfaceGroups: number[];
    readonly tunnelInterfaceGroupsVariable: string;
    readonly tunnelInterfaceHelloInterval: number;
    readonly tunnelInterfaceHelloIntervalVariable: string;
    readonly tunnelInterfaceHelloTolerance: number;
    readonly tunnelInterfaceHelloToleranceVariable: string;
    readonly tunnelInterfaceLastResortCircuit: boolean;
    readonly tunnelInterfaceLastResortCircuitVariable: string;
    readonly tunnelInterfaceLowBandwidthLink: boolean;
    readonly tunnelInterfaceLowBandwidthLinkVariable: string;
    readonly tunnelInterfaceMaxControlConnections: number;
    readonly tunnelInterfaceMaxControlConnectionsVariable: string;
    readonly tunnelInterfaceNatRefreshInterval: number;
    readonly tunnelInterfaceNatRefreshIntervalVariable: string;
    readonly tunnelInterfaceNetworkBroadcast: boolean;
    readonly tunnelInterfaceNetworkBroadcastVariable: string;
    readonly tunnelInterfacePortHop: boolean;
    readonly tunnelInterfacePortHopVariable: string;
    readonly tunnelInterfaceTunnelTcpMss: number;
    readonly tunnelInterfaceTunnelTcpMssVariable: string;
    readonly tunnelInterfaceVbondAsStunServer: boolean;
    readonly tunnelInterfaceVbondAsStunServerVariable: string;
    readonly tunnelInterfaceVmanageConnectionPreference: number;
    readonly tunnelInterfaceVmanageConnectionPreferenceVariable: string;
    readonly tunnelQosMode: string;
    readonly tunnelQosModeVariable: string;
    readonly unnumberedLoopbackInterface: string;
    readonly unnumberedLoopbackInterfaceVariable: string;
    readonly version: number;
    readonly writeRule: string;
    readonly writeRuleVariable: string;
}
export function getVpnInterfaceEthernetPppoeFeatureTemplateOutput(args?: GetVpnInterfaceEthernetPppoeFeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpnInterfaceEthernetPppoeFeatureTemplateResult> {
    return pulumi.output(args).apply((a: any) => getVpnInterfaceEthernetPppoeFeatureTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getVpnInterfaceEthernetPppoeFeatureTemplate.
 */
export interface GetVpnInterfaceEthernetPppoeFeatureTemplateOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
