// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecurityPolicy(args: GetSecurityPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getSecurityPolicy:getSecurityPolicy", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecurityPolicy.
 */
export interface GetSecurityPolicyArgs {
    id: string;
}

/**
 * A collection of values returned by getSecurityPolicy.
 */
export interface GetSecurityPolicyResult {
    readonly auditTrail: string;
    readonly definitions: outputs.GetSecurityPolicyDefinition[];
    readonly description: string;
    readonly directInternetApplications: string;
    readonly failureMode: string;
    readonly highSpeedLoggingServerIp: string;
    readonly highSpeedLoggingServerPort: string;
    readonly highSpeedLoggingVpn: string;
    readonly id: string;
    readonly loggings: outputs.GetSecurityPolicyLogging[];
    readonly matchStatisticsPerFilter: string;
    readonly mode: string;
    readonly name: string;
    readonly tcpSynFloodLimit: string;
    readonly useCase: string;
    readonly version: number;
}
export function getSecurityPolicyOutput(args: GetSecurityPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityPolicyResult> {
    return pulumi.output(args).apply((a: any) => getSecurityPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityPolicy.
 */
export interface GetSecurityPolicyOutputArgs {
    id: pulumi.Input<string>;
}
