// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCflowdPolicyDefinition(args: GetCflowdPolicyDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetCflowdPolicyDefinitionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCflowdPolicyDefinition:getCflowdPolicyDefinition", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCflowdPolicyDefinition.
 */
export interface GetCflowdPolicyDefinitionArgs {
    id: string;
}

/**
 * A collection of values returned by getCflowdPolicyDefinition.
 */
export interface GetCflowdPolicyDefinitionResult {
    readonly activeFlowTimeout: number;
    readonly collectors: outputs.GetCflowdPolicyDefinitionCollector[];
    readonly description: string;
    readonly flowRefresh: number;
    readonly id: string;
    readonly inactiveFlowTimeout: number;
    readonly name: string;
    readonly protocol: string;
    readonly remarkedDscp: boolean;
    readonly samplingInterval: number;
    readonly tos: boolean;
    readonly type: string;
    readonly version: number;
}
export function getCflowdPolicyDefinitionOutput(args: GetCflowdPolicyDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCflowdPolicyDefinitionResult> {
    return pulumi.output(args).apply((a: any) => getCflowdPolicyDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getCflowdPolicyDefinition.
 */
export interface GetCflowdPolicyDefinitionOutputArgs {
    id: pulumi.Input<string>;
}
