// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCiscoVpnInterfaceIpsecFeatureTemplate(args?: GetCiscoVpnInterfaceIpsecFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCiscoVpnInterfaceIpsecFeatureTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCiscoVpnInterfaceIpsecFeatureTemplate:getCiscoVpnInterfaceIpsecFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCiscoVpnInterfaceIpsecFeatureTemplate.
 */
export interface GetCiscoVpnInterfaceIpsecFeatureTemplateArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getCiscoVpnInterfaceIpsecFeatureTemplate.
 */
export interface GetCiscoVpnInterfaceIpsecFeatureTemplateResult {
    readonly application: string;
    readonly applicationVariable: string;
    readonly clearDontFragment: boolean;
    readonly clearDontFragmentVariable: string;
    readonly deadPeerDetectionInterval: number;
    readonly deadPeerDetectionIntervalVariable: string;
    readonly deadPeerDetectionRetries: number;
    readonly deadPeerDetectionRetriesVariable: string;
    readonly description: string;
    readonly deviceTypes: string[];
    readonly id: string;
    readonly ikeCiphersuite: string;
    readonly ikeCiphersuiteVariable: string;
    readonly ikeGroup: string;
    readonly ikeGroupVariable: string;
    readonly ikeMode: string;
    readonly ikeModeVariable: string;
    readonly ikePreSharedKey: string;
    readonly ikePreSharedKeyLocalId: string;
    readonly ikePreSharedKeyLocalIdVariable: string;
    readonly ikePreSharedKeyRemoteId: string;
    readonly ikePreSharedKeyRemoteIdVariable: string;
    readonly ikePreSharedKeyVariable: string;
    readonly ikeRekeyInterval: number;
    readonly ikeRekeyIntervalVariable: string;
    readonly ikeVersion: number;
    readonly interfaceDescription: string;
    readonly interfaceDescriptionVariable: string;
    readonly interfaceName: string;
    readonly interfaceNameVariable: string;
    readonly ipAddress: string;
    readonly ipAddressVariable: string;
    readonly ipsecCiphersuite: string;
    readonly ipsecCiphersuiteVariable: string;
    readonly ipsecPerfectForwardSecrecy: string;
    readonly ipsecPerfectForwardSecrecyVariable: string;
    readonly ipsecRekeyInterval: number;
    readonly ipsecRekeyIntervalVariable: string;
    readonly ipsecReplayWindow: number;
    readonly ipsecReplayWindowVariable: string;
    readonly mtu: number;
    readonly mtuVariable: string;
    readonly name: string;
    readonly shutdown: boolean;
    readonly shutdownVariable: string;
    readonly tcpMssAdjust: number;
    readonly tcpMssAdjustVariable: string;
    readonly templateType: string;
    readonly trackerVariable: string;
    readonly trackers: string[];
    readonly tunnelDestination: string;
    readonly tunnelDestinationVariable: string;
    readonly tunnelRouteVia: string;
    readonly tunnelRouteViaVariable: string;
    readonly tunnelSource: string;
    readonly tunnelSourceInterface: string;
    readonly tunnelSourceInterfaceVariable: string;
    readonly tunnelSourceVariable: string;
    readonly version: number;
}
export function getCiscoVpnInterfaceIpsecFeatureTemplateOutput(args?: GetCiscoVpnInterfaceIpsecFeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCiscoVpnInterfaceIpsecFeatureTemplateResult> {
    return pulumi.output(args).apply((a: any) => getCiscoVpnInterfaceIpsecFeatureTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getCiscoVpnInterfaceIpsecFeatureTemplate.
 */
export interface GetCiscoVpnInterfaceIpsecFeatureTemplateOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
