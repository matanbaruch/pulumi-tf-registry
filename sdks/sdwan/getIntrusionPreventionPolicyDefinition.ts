// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIntrusionPreventionPolicyDefinition(args: GetIntrusionPreventionPolicyDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetIntrusionPreventionPolicyDefinitionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getIntrusionPreventionPolicyDefinition:getIntrusionPreventionPolicyDefinition", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIntrusionPreventionPolicyDefinition.
 */
export interface GetIntrusionPreventionPolicyDefinitionArgs {
    id: string;
}

/**
 * A collection of values returned by getIntrusionPreventionPolicyDefinition.
 */
export interface GetIntrusionPreventionPolicyDefinitionResult {
    readonly description: string;
    readonly id: string;
    readonly inspectionMode: string;
    readonly ipsSignatureListId: string;
    readonly ipsSignatureListVersion: number;
    readonly logLevel: string;
    readonly mode: string;
    readonly name: string;
    readonly signatureSet: string;
    readonly targetVpns: string[];
    readonly version: number;
}
export function getIntrusionPreventionPolicyDefinitionOutput(args: GetIntrusionPreventionPolicyDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIntrusionPreventionPolicyDefinitionResult> {
    return pulumi.output(args).apply((a: any) => getIntrusionPreventionPolicyDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getIntrusionPreventionPolicyDefinition.
 */
export interface GetIntrusionPreventionPolicyDefinitionOutputArgs {
    id: pulumi.Input<string>;
}
