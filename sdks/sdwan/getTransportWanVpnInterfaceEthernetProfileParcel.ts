// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTransportWanVpnInterfaceEthernetProfileParcel(args: GetTransportWanVpnInterfaceEthernetProfileParcelArgs, opts?: pulumi.InvokeOptions): Promise<GetTransportWanVpnInterfaceEthernetProfileParcelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getTransportWanVpnInterfaceEthernetProfileParcel:getTransportWanVpnInterfaceEthernetProfileParcel", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
        "transportWanVpnProfileParcelId": args.transportWanVpnProfileParcelId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTransportWanVpnInterfaceEthernetProfileParcel.
 */
export interface GetTransportWanVpnInterfaceEthernetProfileParcelArgs {
    featureProfileId: string;
    id: string;
    transportWanVpnProfileParcelId: string;
}

/**
 * A collection of values returned by getTransportWanVpnInterfaceEthernetProfileParcel.
 */
export interface GetTransportWanVpnInterfaceEthernetProfileParcelResult {
    readonly arpTimeout: number;
    readonly arpTimeoutVariable: string;
    readonly arps: outputs.GetTransportWanVpnInterfaceEthernetProfileParcelArp[];
    readonly autoDetectBandwidth: boolean;
    readonly autoDetectBandwidthVariable: string;
    readonly autonegotiate: boolean;
    readonly autonegotiateVariable: string;
    readonly bandwidthDownstream: number;
    readonly bandwidthDownstreamVariable: string;
    readonly bandwidthUpstream: number;
    readonly bandwidthUpstreamVariable: string;
    readonly blockNonSourceIp: boolean;
    readonly blockNonSourceIpVariable: string;
    readonly description: string;
    readonly duplex: string;
    readonly duplexVariable: string;
    readonly enableDhcpv6: boolean;
    readonly featureProfileId: string;
    readonly greTunnelSourceIp: string;
    readonly greTunnelSourceIpVariable: string;
    readonly icmpRedirectDisable: boolean;
    readonly icmpRedirectDisableVariable: string;
    readonly id: string;
    readonly interfaceDescription: string;
    readonly interfaceDescriptionVariable: string;
    readonly interfaceMtu: number;
    readonly interfaceMtuVariable: string;
    readonly interfaceName: string;
    readonly interfaceNameVariable: string;
    readonly ipDirectedBroadcast: boolean;
    readonly ipDirectedBroadcastVariable: string;
    readonly ipMtu: number;
    readonly ipMtuVariable: string;
    readonly iperfServer: string;
    readonly iperfServerVariable: string;
    readonly ipv4Address: string;
    readonly ipv4AddressVariable: string;
    readonly ipv4DhcpDistance: number;
    readonly ipv4DhcpDistanceVariable: string;
    readonly ipv4DhcpHelperVariable: string;
    readonly ipv4DhcpHelpers: string[];
    readonly ipv4SecondaryAddresses: outputs.GetTransportWanVpnInterfaceEthernetProfileParcelIpv4SecondaryAddress[];
    readonly ipv4SubnetMask: string;
    readonly ipv4SubnetMaskVariable: string;
    readonly ipv6Address: string;
    readonly ipv6AddressVariable: string;
    readonly ipv6DhcpSecondaryAddresses: outputs.GetTransportWanVpnInterfaceEthernetProfileParcelIpv6DhcpSecondaryAddress[];
    readonly ipv6SecondaryAddresses: outputs.GetTransportWanVpnInterfaceEthernetProfileParcelIpv6SecondaryAddress[];
    readonly loadInterval: number;
    readonly loadIntervalVariable: string;
    readonly macAddress: string;
    readonly macAddressVariable: string;
    readonly mediaType: string;
    readonly mediaTypeVariable: string;
    readonly name: string;
    readonly nat64: boolean;
    readonly nat66: boolean;
    readonly natIpv4: boolean;
    readonly natIpv4Variable: string;
    readonly natIpv6: boolean;
    readonly natIpv6Variable: string;
    readonly natLoopback: string;
    readonly natLoopbackVariable: string;
    readonly natOverload: boolean;
    readonly natOverloadVariable: string;
    readonly natPrefixLength: number;
    readonly natPrefixLengthVariable: string;
    readonly natRangeEnd: string;
    readonly natRangeEndVariable: string;
    readonly natRangeStart: string;
    readonly natRangeStartVariable: string;
    readonly natTcpTimeout: number;
    readonly natTcpTimeoutVariable: string;
    readonly natType: string;
    readonly natTypeVariable: string;
    readonly natUdpTimeout: number;
    readonly natUdpTimeoutVariable: string;
    readonly newStaticNats: outputs.GetTransportWanVpnInterfaceEthernetProfileParcelNewStaticNat[];
    readonly perTunnelQos: boolean;
    readonly perTunnelQosVariable: string;
    readonly qosAdaptive: boolean;
    readonly qosAdaptiveBandwidthDownstream: boolean;
    readonly qosAdaptiveBandwidthUpstream: boolean;
    readonly qosAdaptiveDefaultDownstream: number;
    readonly qosAdaptiveDefaultDownstreamVariable: string;
    readonly qosAdaptiveDefaultUpstream: number;
    readonly qosAdaptiveDefaultUpstreamVariable: string;
    readonly qosAdaptiveMaxDownstream: number;
    readonly qosAdaptiveMaxDownstreamVariable: string;
    readonly qosAdaptiveMaxUpstream: number;
    readonly qosAdaptiveMaxUpstreamVariable: string;
    readonly qosAdaptiveMinDownstream: number;
    readonly qosAdaptiveMinDownstreamVariable: string;
    readonly qosAdaptiveMinUpstream: number;
    readonly qosAdaptiveMinUpstreamVariable: string;
    readonly qosAdaptivePeriod: number;
    readonly qosAdaptivePeriodVariable: string;
    readonly qosShapingRate: number;
    readonly qosShapingRateVariable: string;
    readonly serviceProvider: string;
    readonly serviceProviderVariable: string;
    readonly shutdown: boolean;
    readonly shutdownVariable: string;
    readonly speed: string;
    readonly speedVariable: string;
    readonly staticNat66s: outputs.GetTransportWanVpnInterfaceEthernetProfileParcelStaticNat66[];
    readonly tcpMss: number;
    readonly tcpMssVariable: string;
    readonly tlocExtension: string;
    readonly tlocExtensionVariable: string;
    readonly tracker: string;
    readonly trackerVariable: string;
    readonly transportWanVpnProfileParcelId: string;
    readonly tunnelBandwidthPercent: number;
    readonly tunnelBandwidthPercentVariable: string;
    readonly tunnelInterface: boolean;
    readonly tunnelInterfaceAllowAll: boolean;
    readonly tunnelInterfaceAllowAllVariable: string;
    readonly tunnelInterfaceAllowBfd: boolean;
    readonly tunnelInterfaceAllowBfdVariable: string;
    readonly tunnelInterfaceAllowBgp: boolean;
    readonly tunnelInterfaceAllowBgpVariable: string;
    readonly tunnelInterfaceAllowDhcp: boolean;
    readonly tunnelInterfaceAllowDhcpVariable: string;
    readonly tunnelInterfaceAllowDns: boolean;
    readonly tunnelInterfaceAllowDnsVariable: string;
    readonly tunnelInterfaceAllowHttps: boolean;
    readonly tunnelInterfaceAllowHttpsVariable: string;
    readonly tunnelInterfaceAllowIcmp: boolean;
    readonly tunnelInterfaceAllowIcmpVariable: string;
    readonly tunnelInterfaceAllowNetconf: boolean;
    readonly tunnelInterfaceAllowNetconfVariable: string;
    readonly tunnelInterfaceAllowNtp: boolean;
    readonly tunnelInterfaceAllowNtpVariable: string;
    readonly tunnelInterfaceAllowOspf: boolean;
    readonly tunnelInterfaceAllowOspfVariable: string;
    readonly tunnelInterfaceAllowSnmp: boolean;
    readonly tunnelInterfaceAllowSnmpVariable: string;
    readonly tunnelInterfaceAllowSsh: boolean;
    readonly tunnelInterfaceAllowSshVariable: string;
    readonly tunnelInterfaceAllowStun: boolean;
    readonly tunnelInterfaceAllowStunVariable: string;
    readonly tunnelInterfaceBindLoopbackTunnel: string;
    readonly tunnelInterfaceBindLoopbackTunnelVariable: string;
    readonly tunnelInterfaceBorder: boolean;
    readonly tunnelInterfaceBorderVariable: string;
    readonly tunnelInterfaceCarrier: string;
    readonly tunnelInterfaceCarrierVariable: string;
    readonly tunnelInterfaceClearDontFragment: boolean;
    readonly tunnelInterfaceClearDontFragmentVariable: string;
    readonly tunnelInterfaceColor: string;
    readonly tunnelInterfaceColorRestrict: boolean;
    readonly tunnelInterfaceColorRestrictVariable: string;
    readonly tunnelInterfaceColorVariable: string;
    readonly tunnelInterfaceCtsSgtPropagation: boolean;
    readonly tunnelInterfaceCtsSgtPropagationVariable: string;
    readonly tunnelInterfaceEncapsulations: outputs.GetTransportWanVpnInterfaceEthernetProfileParcelTunnelInterfaceEncapsulation[];
    readonly tunnelInterfaceExcludeControllerGroupListVariable: string;
    readonly tunnelInterfaceExcludeControllerGroupLists: number[];
    readonly tunnelInterfaceGreTunnelDestinationIp: string;
    readonly tunnelInterfaceGreTunnelDestinationIpVariable: string;
    readonly tunnelInterfaceGroups: number;
    readonly tunnelInterfaceGroupsVariable: string;
    readonly tunnelInterfaceHelloInterval: number;
    readonly tunnelInterfaceHelloIntervalVariable: string;
    readonly tunnelInterfaceHelloTolerance: number;
    readonly tunnelInterfaceHelloToleranceVariable: string;
    readonly tunnelInterfaceLastResortCircuit: boolean;
    readonly tunnelInterfaceLastResortCircuitVariable: string;
    readonly tunnelInterfaceLowBandwidthLink: boolean;
    readonly tunnelInterfaceLowBandwidthLinkVariable: string;
    readonly tunnelInterfaceMaxControlConnections: number;
    readonly tunnelInterfaceMaxControlConnectionsVariable: string;
    readonly tunnelInterfaceNatRefreshInterval: number;
    readonly tunnelInterfaceNatRefreshIntervalVariable: string;
    readonly tunnelInterfaceNetworkBroadcast: boolean;
    readonly tunnelInterfaceNetworkBroadcastVariable: string;
    readonly tunnelInterfacePortHop: boolean;
    readonly tunnelInterfacePortHopVariable: string;
    readonly tunnelInterfaceTunnelTcpMss: number;
    readonly tunnelInterfaceTunnelTcpMssVariable: string;
    readonly tunnelInterfaceVbondAsStunServer: boolean;
    readonly tunnelInterfaceVbondAsStunServerVariable: string;
    readonly tunnelInterfaceVmanageConnectionPreference: number;
    readonly tunnelInterfaceVmanageConnectionPreferenceVariable: string;
    readonly tunnelQosMode: string;
    readonly tunnelQosModeVariable: string;
    readonly version: number;
    readonly xconnect: string;
    readonly xconnectVariable: string;
}
export function getTransportWanVpnInterfaceEthernetProfileParcelOutput(args: GetTransportWanVpnInterfaceEthernetProfileParcelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransportWanVpnInterfaceEthernetProfileParcelResult> {
    return pulumi.output(args).apply((a: any) => getTransportWanVpnInterfaceEthernetProfileParcel(a, opts))
}

/**
 * A collection of arguments for invoking getTransportWanVpnInterfaceEthernetProfileParcel.
 */
export interface GetTransportWanVpnInterfaceEthernetProfileParcelOutputArgs {
    featureProfileId: pulumi.Input<string>;
    id: pulumi.Input<string>;
    transportWanVpnProfileParcelId: pulumi.Input<string>;
}
