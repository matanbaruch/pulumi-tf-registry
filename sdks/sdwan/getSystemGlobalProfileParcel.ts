// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSystemGlobalProfileParcel(args: GetSystemGlobalProfileParcelArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemGlobalProfileParcelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getSystemGlobalProfileParcel:getSystemGlobalProfileParcel", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemGlobalProfileParcel.
 */
export interface GetSystemGlobalProfileParcelArgs {
    featureProfileId: string;
    id: string;
}

/**
 * A collection of values returned by getSystemGlobalProfileParcel.
 */
export interface GetSystemGlobalProfileParcelResult {
    readonly arpProxy: boolean;
    readonly arpProxyVariable: string;
    readonly cdp: boolean;
    readonly cdpVariable: string;
    readonly consoleLogging: boolean;
    readonly consoleLoggingVariable: string;
    readonly description: string;
    readonly domainLookup: boolean;
    readonly domainLookupVariable: string;
    readonly featureProfileId: string;
    readonly ftpPassive: boolean;
    readonly ftpPassiveVariable: string;
    readonly httpAuthentication: string;
    readonly httpAuthenticationVariable: string;
    readonly httpServer: boolean;
    readonly httpServerVariable: string;
    readonly httpsServer: boolean;
    readonly httpsServerVariable: string;
    readonly id: string;
    readonly ignoreBootp: boolean;
    readonly ignoreBootpVariable: string;
    readonly ipSourceRouting: boolean;
    readonly ipSourceRoutingVariable: string;
    readonly lineVty: boolean;
    readonly lineVtyVariable: string;
    readonly lldp: boolean;
    readonly lldpVariable: string;
    readonly name: string;
    readonly nat64TcpTimeout: number;
    readonly nat64TcpTimeoutVariable: string;
    readonly nat64UdpTimeout: number;
    readonly nat64UdpTimeoutVariable: string;
    readonly rshRcp: boolean;
    readonly rshRcpVariable: string;
    readonly snmpIfindexPersist: boolean;
    readonly snmpIfindexPersistVariable: string;
    readonly sourceInterface: string;
    readonly sourceInterfaceVariable: string;
    readonly sshVersion: string;
    readonly sshVersionVariable: string;
    readonly tcpKeepalivesIn: boolean;
    readonly tcpKeepalivesInVariable: string;
    readonly tcpKeepalivesOut: boolean;
    readonly tcpKeepalivesOutVariable: string;
    readonly tcpSmallServers: boolean;
    readonly tcpSmallServersVariable: string;
    readonly udpSmallServers: boolean;
    readonly udpSmallServersVariable: string;
    readonly version: number;
    readonly vtyLineLogging: boolean;
    readonly vtyLineLoggingVariable: string;
}
export function getSystemGlobalProfileParcelOutput(args: GetSystemGlobalProfileParcelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemGlobalProfileParcelResult> {
    return pulumi.output(args).apply((a: any) => getSystemGlobalProfileParcel(a, opts))
}

/**
 * A collection of arguments for invoking getSystemGlobalProfileParcel.
 */
export interface GetSystemGlobalProfileParcelOutputArgs {
    featureProfileId: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
