// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCiscoDhcpServerFeatureTemplate(args?: GetCiscoDhcpServerFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCiscoDhcpServerFeatureTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCiscoDhcpServerFeatureTemplate:getCiscoDhcpServerFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCiscoDhcpServerFeatureTemplate.
 */
export interface GetCiscoDhcpServerFeatureTemplateArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getCiscoDhcpServerFeatureTemplate.
 */
export interface GetCiscoDhcpServerFeatureTemplateResult {
    readonly addressPool: string;
    readonly addressPoolVariable: string;
    readonly defaultGateway: string;
    readonly defaultGatewayVariable: string;
    readonly description: string;
    readonly deviceTypes: string[];
    readonly dnsServers: string[];
    readonly dnsServersVariable: string;
    readonly domainName: string;
    readonly domainNameVariable: string;
    readonly excludeAddresses: string[];
    readonly excludeAddressesVariable: string;
    readonly id: string;
    readonly interfaceMtu: number;
    readonly interfaceMtuVariable: string;
    readonly leaseTime: number;
    readonly leaseTimeVariable: string;
    readonly name: string;
    readonly options: outputs.GetCiscoDhcpServerFeatureTemplateOption[];
    readonly staticLeases: outputs.GetCiscoDhcpServerFeatureTemplateStaticLease[];
    readonly templateType: string;
    readonly tftpServers: string[];
    readonly tftpServersVariable: string;
    readonly version: number;
}
export function getCiscoDhcpServerFeatureTemplateOutput(args?: GetCiscoDhcpServerFeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCiscoDhcpServerFeatureTemplateResult> {
    return pulumi.output(args).apply((a: any) => getCiscoDhcpServerFeatureTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getCiscoDhcpServerFeatureTemplate.
 */
export interface GetCiscoDhcpServerFeatureTemplateOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
