// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceLanVpnProfileParcel(args: GetServiceLanVpnProfileParcelArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceLanVpnProfileParcelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getServiceLanVpnProfileParcel:getServiceLanVpnProfileParcel", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceLanVpnProfileParcel.
 */
export interface GetServiceLanVpnProfileParcelArgs {
    featureProfileId: string;
    id: string;
}

/**
 * A collection of values returned by getServiceLanVpnProfileParcel.
 */
export interface GetServiceLanVpnProfileParcelResult {
    readonly advertiseOmpIpv4s: outputs.GetServiceLanVpnProfileParcelAdvertiseOmpIpv4[];
    readonly advertiseOmpIpv6s: outputs.GetServiceLanVpnProfileParcelAdvertiseOmpIpv6[];
    readonly configDescription: string;
    readonly configDescriptionVariable: string;
    readonly description: string;
    readonly enableSdwanRemoteAccess: boolean;
    readonly featureProfileId: string;
    readonly greRoutes: outputs.GetServiceLanVpnProfileParcelGreRoute[];
    readonly hostMappings: outputs.GetServiceLanVpnProfileParcelHostMapping[];
    readonly id: string;
    readonly ipsecRoutes: outputs.GetServiceLanVpnProfileParcelIpsecRoute[];
    readonly ipv4ExportRouteTargets: outputs.GetServiceLanVpnProfileParcelIpv4ExportRouteTarget[];
    readonly ipv4ImportRouteTargets: outputs.GetServiceLanVpnProfileParcelIpv4ImportRouteTarget[];
    readonly ipv4StaticRoutes: outputs.GetServiceLanVpnProfileParcelIpv4StaticRoute[];
    readonly ipv6ExportRouteTargets: outputs.GetServiceLanVpnProfileParcelIpv6ExportRouteTarget[];
    readonly ipv6ImportRouteTargets: outputs.GetServiceLanVpnProfileParcelIpv6ImportRouteTarget[];
    readonly ipv6StaticRoutes: outputs.GetServiceLanVpnProfileParcelIpv6StaticRoute[];
    readonly name: string;
    readonly nat64V4Pools: outputs.GetServiceLanVpnProfileParcelNat64V4Pool[];
    readonly natPools: outputs.GetServiceLanVpnProfileParcelNatPool[];
    readonly natPortForwards: outputs.GetServiceLanVpnProfileParcelNatPortForward[];
    readonly ompAdminDistanceIpv4: number;
    readonly ompAdminDistanceIpv4Variable: string;
    readonly ompAdminDistanceIpv6: number;
    readonly ompAdminDistanceIpv6Variable: string;
    readonly primaryDnsAddressIpv4: string;
    readonly primaryDnsAddressIpv4Variable: string;
    readonly primaryDnsAddressIpv6: string;
    readonly primaryDnsAddressIpv6Variable: string;
    readonly routeLeakFromGlobalVpns: outputs.GetServiceLanVpnProfileParcelRouteLeakFromGlobalVpn[];
    readonly routeLeakFromOtherServices: outputs.GetServiceLanVpnProfileParcelRouteLeakFromOtherService[];
    readonly routeLeakToGlobalVpns: outputs.GetServiceLanVpnProfileParcelRouteLeakToGlobalVpn[];
    readonly secondaryDnsAddressIpv4: string;
    readonly secondaryDnsAddressIpv4Variable: string;
    readonly secondaryDnsAddressIpv6: string;
    readonly secondaryDnsAddressIpv6Variable: string;
    readonly serviceRoutes: outputs.GetServiceLanVpnProfileParcelServiceRoute[];
    readonly services: outputs.GetServiceLanVpnProfileParcelService[];
    readonly staticNats: outputs.GetServiceLanVpnProfileParcelStaticNat[];
    readonly version: number;
    readonly vpn: number;
    readonly vpnVariable: string;
}
export function getServiceLanVpnProfileParcelOutput(args: GetServiceLanVpnProfileParcelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceLanVpnProfileParcelResult> {
    return pulumi.output(args).apply((a: any) => getServiceLanVpnProfileParcel(a, opts))
}

/**
 * A collection of arguments for invoking getServiceLanVpnProfileParcel.
 */
export interface GetServiceLanVpnProfileParcelOutputArgs {
    featureProfileId: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
