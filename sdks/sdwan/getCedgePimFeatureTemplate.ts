// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCedgePimFeatureTemplate(args?: GetCedgePimFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCedgePimFeatureTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCedgePimFeatureTemplate:getCedgePimFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCedgePimFeatureTemplate.
 */
export interface GetCedgePimFeatureTemplateArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getCedgePimFeatureTemplate.
 */
export interface GetCedgePimFeatureTemplateResult {
    readonly autoRp: boolean;
    readonly autoRpVariable: string;
    readonly bsrCandidate: string;
    readonly bsrCandidateVariable: string;
    readonly default: boolean;
    readonly defaultVariable: string;
    readonly description: string;
    readonly deviceTypes: string[];
    readonly hashMaskLength: string;
    readonly hashMaskLengthVariable: string;
    readonly id: string;
    readonly interfaceName: string;
    readonly interfaceNameVariable: string;
    readonly interfaces: outputs.GetCedgePimFeatureTemplateInterface[];
    readonly name: string;
    readonly priority: number;
    readonly priorityVariable: string;
    readonly range: string;
    readonly rangeVariable: string;
    readonly rpAddresses: outputs.GetCedgePimFeatureTemplateRpAddress[];
    readonly rpAnnounceFields: outputs.GetCedgePimFeatureTemplateRpAnnounceField[];
    readonly rpCandidateAccessList: string;
    readonly rpCandidateAccessListVariable: string;
    readonly rpCandidates: outputs.GetCedgePimFeatureTemplateRpCandidate[];
    readonly scope: number;
    readonly scopeVariable: string;
    readonly sptThreshold: string;
    readonly sptThresholdVariable: string;
    readonly templateType: string;
    readonly version: number;
}
export function getCedgePimFeatureTemplateOutput(args?: GetCedgePimFeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCedgePimFeatureTemplateResult> {
    return pulumi.output(args).apply((a: any) => getCedgePimFeatureTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getCedgePimFeatureTemplate.
 */
export interface GetCedgePimFeatureTemplateOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
