// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSystemBfdProfileParcel(args: GetSystemBfdProfileParcelArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemBfdProfileParcelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getSystemBfdProfileParcel:getSystemBfdProfileParcel", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemBfdProfileParcel.
 */
export interface GetSystemBfdProfileParcelArgs {
    featureProfileId: string;
    id: string;
}

/**
 * A collection of values returned by getSystemBfdProfileParcel.
 */
export interface GetSystemBfdProfileParcelResult {
    readonly colors: outputs.GetSystemBfdProfileParcelColor[];
    readonly defaultDscp: number;
    readonly defaultDscpVariable: string;
    readonly description: string;
    readonly featureProfileId: string;
    readonly id: string;
    readonly multiplier: number;
    readonly multiplierVariable: string;
    readonly name: string;
    readonly pollInterval: number;
    readonly pollIntervalVariable: string;
    readonly version: number;
}
export function getSystemBfdProfileParcelOutput(args: GetSystemBfdProfileParcelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemBfdProfileParcelResult> {
    return pulumi.output(args).apply((a: any) => getSystemBfdProfileParcel(a, opts))
}

/**
 * A collection of arguments for invoking getSystemBfdProfileParcel.
 */
export interface GetSystemBfdProfileParcelOutputArgs {
    featureProfileId: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
