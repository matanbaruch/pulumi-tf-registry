// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTransportManagementVpnInterfaceEthernetProfileParcel(args: GetTransportManagementVpnInterfaceEthernetProfileParcelArgs, opts?: pulumi.InvokeOptions): Promise<GetTransportManagementVpnInterfaceEthernetProfileParcelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getTransportManagementVpnInterfaceEthernetProfileParcel:getTransportManagementVpnInterfaceEthernetProfileParcel", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
        "transportManagementVpnProfileParcelId": args.transportManagementVpnProfileParcelId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTransportManagementVpnInterfaceEthernetProfileParcel.
 */
export interface GetTransportManagementVpnInterfaceEthernetProfileParcelArgs {
    featureProfileId: string;
    id: string;
    transportManagementVpnProfileParcelId: string;
}

/**
 * A collection of values returned by getTransportManagementVpnInterfaceEthernetProfileParcel.
 */
export interface GetTransportManagementVpnInterfaceEthernetProfileParcelResult {
    readonly arpEntries: outputs.GetTransportManagementVpnInterfaceEthernetProfileParcelArpEntry[];
    readonly arpTimeout: number;
    readonly arpTimeoutVariable: string;
    readonly autonegotiate: boolean;
    readonly autonegotiateVariable: string;
    readonly description: string;
    readonly duplex: string;
    readonly duplexVariable: string;
    readonly enableDhcpv6: boolean;
    readonly featureProfileId: string;
    readonly icmpRedirectDisable: boolean;
    readonly icmpRedirectDisableVariable: string;
    readonly id: string;
    readonly interfaceDescription: string;
    readonly interfaceDescriptionVariable: string;
    readonly interfaceMtu: number;
    readonly interfaceMtuVariable: string;
    readonly interfaceName: string;
    readonly interfaceNameVariable: string;
    readonly ipDirectedBroadcast: boolean;
    readonly ipDirectedBroadcastVariable: string;
    readonly ipMtu: number;
    readonly ipMtuVariable: string;
    readonly ipv4Address: string;
    readonly ipv4AddressVariable: string;
    readonly ipv4AutoDetectBandwidth: boolean;
    readonly ipv4AutoDetectBandwidthVariable: string;
    readonly ipv4DhcpDistance: number;
    readonly ipv4DhcpDistanceVariable: string;
    readonly ipv4DhcpHelperVariable: string;
    readonly ipv4DhcpHelpers: string[];
    readonly ipv4IperfServer: string;
    readonly ipv4IperfServerVariable: string;
    readonly ipv4SecondaryAddresses: outputs.GetTransportManagementVpnInterfaceEthernetProfileParcelIpv4SecondaryAddress[];
    readonly ipv4SubnetMask: string;
    readonly ipv4SubnetMaskVariable: string;
    readonly ipv6Address: string;
    readonly ipv6AddressVariable: string;
    readonly loadInterval: number;
    readonly loadIntervalVariable: string;
    readonly macAddress: string;
    readonly macAddressVariable: string;
    readonly mediaType: string;
    readonly mediaTypeVariable: string;
    readonly name: string;
    readonly shutdown: boolean;
    readonly shutdownVariable: string;
    readonly speed: string;
    readonly speedVariable: string;
    readonly tcpMss: number;
    readonly tcpMssVariable: string;
    readonly transportManagementVpnProfileParcelId: string;
    readonly version: number;
}
export function getTransportManagementVpnInterfaceEthernetProfileParcelOutput(args: GetTransportManagementVpnInterfaceEthernetProfileParcelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransportManagementVpnInterfaceEthernetProfileParcelResult> {
    return pulumi.output(args).apply((a: any) => getTransportManagementVpnInterfaceEthernetProfileParcel(a, opts))
}

/**
 * A collection of arguments for invoking getTransportManagementVpnInterfaceEthernetProfileParcel.
 */
export interface GetTransportManagementVpnInterfaceEthernetProfileParcelOutputArgs {
    featureProfileId: pulumi.Input<string>;
    id: pulumi.Input<string>;
    transportManagementVpnProfileParcelId: pulumi.Input<string>;
}
