// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTransportRoutingBgpProfileParcel(args: GetTransportRoutingBgpProfileParcelArgs, opts?: pulumi.InvokeOptions): Promise<GetTransportRoutingBgpProfileParcelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getTransportRoutingBgpProfileParcel:getTransportRoutingBgpProfileParcel", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTransportRoutingBgpProfileParcel.
 */
export interface GetTransportRoutingBgpProfileParcelArgs {
    featureProfileId: string;
    id: string;
}

/**
 * A collection of values returned by getTransportRoutingBgpProfileParcel.
 */
export interface GetTransportRoutingBgpProfileParcelResult {
    readonly alwaysCompareMed: boolean;
    readonly alwaysCompareMedVariable: string;
    readonly asNumber: number;
    readonly asNumberVariable: string;
    readonly compareRouterId: boolean;
    readonly compareRouterIdVariable: string;
    readonly description: string;
    readonly deterministicMed: boolean;
    readonly deterministicMedVariable: string;
    readonly externalRoutesDistance: number;
    readonly externalRoutesDistanceVariable: string;
    readonly featureProfileId: string;
    readonly holdTime: number;
    readonly holdTimeVariable: string;
    readonly id: string;
    readonly internalRoutesDistance: number;
    readonly internalRoutesDistanceVariable: string;
    readonly ipv4AggregateAddresses: outputs.GetTransportRoutingBgpProfileParcelIpv4AggregateAddress[];
    readonly ipv4EibgpMaximumPaths: number;
    readonly ipv4EibgpMaximumPathsVariable: string;
    readonly ipv4Neighbors: outputs.GetTransportRoutingBgpProfileParcelIpv4Neighbor[];
    readonly ipv4Networks: outputs.GetTransportRoutingBgpProfileParcelIpv4Network[];
    readonly ipv4Originate: boolean;
    readonly ipv4OriginateVariable: string;
    readonly ipv4Redistributes: outputs.GetTransportRoutingBgpProfileParcelIpv4Redistribute[];
    readonly ipv4TableMapFilter: boolean;
    readonly ipv4TableMapFilterVariable: string;
    readonly ipv4TableMapRoutePolicyId: string;
    readonly ipv6AggregateAddresses: outputs.GetTransportRoutingBgpProfileParcelIpv6AggregateAddress[];
    readonly ipv6EibgpMaximumPaths: number;
    readonly ipv6EibgpMaximumPathsVariable: string;
    readonly ipv6Neighbors: outputs.GetTransportRoutingBgpProfileParcelIpv6Neighbor[];
    readonly ipv6Networks: outputs.GetTransportRoutingBgpProfileParcelIpv6Network[];
    readonly ipv6Originate: boolean;
    readonly ipv6OriginateVariable: string;
    readonly ipv6Redistributes: outputs.GetTransportRoutingBgpProfileParcelIpv6Redistribute[];
    readonly ipv6TableMapFilter: boolean;
    readonly ipv6TableMapFilterVariable: string;
    readonly ipv6TableMapRoutePolicyId: string;
    readonly keepaliveTime: number;
    readonly keepaliveTimeVariable: string;
    readonly localRoutesDistance: number;
    readonly localRoutesDistanceVariable: string;
    readonly missingMedAsWorst: boolean;
    readonly missingMedAsWorstVariable: string;
    readonly mplsInterfaces: outputs.GetTransportRoutingBgpProfileParcelMplsInterface[];
    readonly multipathRelax: boolean;
    readonly multipathRelaxVariable: string;
    readonly name: string;
    readonly propagateAsPath: boolean;
    readonly propagateAsPathVariable: string;
    readonly propagateCommunity: boolean;
    readonly propagateCommunityVariable: string;
    readonly routerId: string;
    readonly routerIdVariable: string;
    readonly version: number;
}
export function getTransportRoutingBgpProfileParcelOutput(args: GetTransportRoutingBgpProfileParcelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransportRoutingBgpProfileParcelResult> {
    return pulumi.output(args).apply((a: any) => getTransportRoutingBgpProfileParcel(a, opts))
}

/**
 * A collection of arguments for invoking getTransportRoutingBgpProfileParcel.
 */
export interface GetTransportRoutingBgpProfileParcelOutputArgs {
    featureProfileId: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
