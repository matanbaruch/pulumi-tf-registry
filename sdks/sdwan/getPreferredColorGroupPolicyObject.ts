// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPreferredColorGroupPolicyObject(args: GetPreferredColorGroupPolicyObjectArgs, opts?: pulumi.InvokeOptions): Promise<GetPreferredColorGroupPolicyObjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getPreferredColorGroupPolicyObject:getPreferredColorGroupPolicyObject", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPreferredColorGroupPolicyObject.
 */
export interface GetPreferredColorGroupPolicyObjectArgs {
    id: string;
}

/**
 * A collection of values returned by getPreferredColorGroupPolicyObject.
 */
export interface GetPreferredColorGroupPolicyObjectResult {
    readonly id: string;
    readonly name: string;
    readonly primaryColorPreference: string;
    readonly primaryPathPreference: string;
    readonly secondaryColorPreference: string;
    readonly secondaryPathPreference: string;
    readonly tertiaryColorPreference: string;
    readonly tertiaryPathPreference: string;
    readonly version: number;
}
export function getPreferredColorGroupPolicyObjectOutput(args: GetPreferredColorGroupPolicyObjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPreferredColorGroupPolicyObjectResult> {
    return pulumi.output(args).apply((a: any) => getPreferredColorGroupPolicyObject(a, opts))
}

/**
 * A collection of arguments for invoking getPreferredColorGroupPolicyObject.
 */
export interface GetPreferredColorGroupPolicyObjectOutputArgs {
    id: pulumi.Input<string>;
}
