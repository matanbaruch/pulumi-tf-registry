// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDnsSecurityPolicyDefinition(args: GetDnsSecurityPolicyDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsSecurityPolicyDefinitionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getDnsSecurityPolicyDefinition:getDnsSecurityPolicyDefinition", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnsSecurityPolicyDefinition.
 */
export interface GetDnsSecurityPolicyDefinitionArgs {
    id: string;
}

/**
 * A collection of values returned by getDnsSecurityPolicyDefinition.
 */
export interface GetDnsSecurityPolicyDefinitionResult {
    readonly ciscoSigCredentialsFeatureTemplateId: string;
    readonly ciscoSigCredentialsFeatureTemplateVersion: number;
    readonly customDnsServerIp: string;
    readonly description: string;
    readonly dnscrypt: boolean;
    readonly domainListId: string;
    readonly domainListVersion: number;
    readonly id: string;
    readonly localDomainBypassEnabled: boolean;
    readonly matchAllVpn: boolean;
    readonly name: string;
    readonly targetVpns: outputs.GetDnsSecurityPolicyDefinitionTargetVpn[];
    readonly umbrellaDnsDefault: boolean;
    readonly version: number;
}
export function getDnsSecurityPolicyDefinitionOutput(args: GetDnsSecurityPolicyDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDnsSecurityPolicyDefinitionResult> {
    return pulumi.output(args).apply((a: any) => getDnsSecurityPolicyDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getDnsSecurityPolicyDefinition.
 */
export interface GetDnsSecurityPolicyDefinitionOutputArgs {
    id: pulumi.Input<string>;
}
