// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemIpv6DeviceAccessProfileParcel extends pulumi.CustomResource {
    /**
     * Get an existing SystemIpv6DeviceAccessProfileParcel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemIpv6DeviceAccessProfileParcelState, opts?: pulumi.CustomResourceOptions): SystemIpv6DeviceAccessProfileParcel {
        return new SystemIpv6DeviceAccessProfileParcel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sdwan:index/systemIpv6DeviceAccessProfileParcel:SystemIpv6DeviceAccessProfileParcel';

    /**
     * Returns true if the given object is an instance of SystemIpv6DeviceAccessProfileParcel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemIpv6DeviceAccessProfileParcel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemIpv6DeviceAccessProfileParcel.__pulumiType;
    }

    /**
     * Default Action - Choices: `drop`, `accept` - Default value: `drop`
     */
    public readonly defaultAction!: pulumi.Output<string | undefined>;
    /**
     * The description of the profile parcel
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Feature Profile ID
     */
    public readonly featureProfileId!: pulumi.Output<string>;
    /**
     * The name of the profile parcel
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Device Access Control List
     */
    public readonly sequences!: pulumi.Output<outputs.SystemIpv6DeviceAccessProfileParcelSequence[] | undefined>;
    /**
     * The version of the profile parcel
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a SystemIpv6DeviceAccessProfileParcel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemIpv6DeviceAccessProfileParcelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemIpv6DeviceAccessProfileParcelArgs | SystemIpv6DeviceAccessProfileParcelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemIpv6DeviceAccessProfileParcelState | undefined;
            resourceInputs["defaultAction"] = state ? state.defaultAction : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["featureProfileId"] = state ? state.featureProfileId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sequences"] = state ? state.sequences : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as SystemIpv6DeviceAccessProfileParcelArgs | undefined;
            if ((!args || args.featureProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'featureProfileId'");
            }
            resourceInputs["defaultAction"] = args ? args.defaultAction : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["featureProfileId"] = args ? args.featureProfileId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sequences"] = args ? args.sequences : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemIpv6DeviceAccessProfileParcel.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemIpv6DeviceAccessProfileParcel resources.
 */
export interface SystemIpv6DeviceAccessProfileParcelState {
    /**
     * Default Action - Choices: `drop`, `accept` - Default value: `drop`
     */
    defaultAction?: pulumi.Input<string>;
    /**
     * The description of the profile parcel
     */
    description?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId?: pulumi.Input<string>;
    /**
     * The name of the profile parcel
     */
    name?: pulumi.Input<string>;
    /**
     * Device Access Control List
     */
    sequences?: pulumi.Input<pulumi.Input<inputs.SystemIpv6DeviceAccessProfileParcelSequence>[]>;
    /**
     * The version of the profile parcel
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SystemIpv6DeviceAccessProfileParcel resource.
 */
export interface SystemIpv6DeviceAccessProfileParcelArgs {
    /**
     * Default Action - Choices: `drop`, `accept` - Default value: `drop`
     */
    defaultAction?: pulumi.Input<string>;
    /**
     * The description of the profile parcel
     */
    description?: pulumi.Input<string>;
    /**
     * Feature Profile ID
     */
    featureProfileId: pulumi.Input<string>;
    /**
     * The name of the profile parcel
     */
    name?: pulumi.Input<string>;
    /**
     * Device Access Control List
     */
    sequences?: pulumi.Input<pulumi.Input<inputs.SystemIpv6DeviceAccessProfileParcelSequence>[]>;
}
