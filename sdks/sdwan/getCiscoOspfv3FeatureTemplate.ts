// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCiscoOspfv3FeatureTemplate(args?: GetCiscoOspfv3FeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCiscoOspfv3FeatureTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCiscoOspfv3FeatureTemplate:getCiscoOspfv3FeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCiscoOspfv3FeatureTemplate.
 */
export interface GetCiscoOspfv3FeatureTemplateArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getCiscoOspfv3FeatureTemplate.
 */
export interface GetCiscoOspfv3FeatureTemplateResult {
    readonly description: string;
    readonly deviceTypes: string[];
    readonly id: string;
    readonly ipv4Areas: outputs.GetCiscoOspfv3FeatureTemplateIpv4Area[];
    readonly ipv4AutoCostReferenceBandwidth: number;
    readonly ipv4AutoCostReferenceBandwidthVariable: string;
    readonly ipv4CompatibleRfc1583: boolean;
    readonly ipv4CompatibleRfc1583Variable: string;
    readonly ipv4DefaultInformationOriginate: boolean;
    readonly ipv4DefaultInformationOriginateAlways: boolean;
    readonly ipv4DefaultInformationOriginateAlwaysVariable: string;
    readonly ipv4DefaultInformationOriginateMetric: number;
    readonly ipv4DefaultInformationOriginateMetricType: string;
    readonly ipv4DefaultInformationOriginateMetricTypeVariable: string;
    readonly ipv4DefaultInformationOriginateMetricVariable: string;
    readonly ipv4Distance: number;
    readonly ipv4DistanceExternal: number;
    readonly ipv4DistanceExternalVariable: string;
    readonly ipv4DistanceInterArea: number;
    readonly ipv4DistanceInterAreaVariable: string;
    readonly ipv4DistanceIntraArea: number;
    readonly ipv4DistanceIntraAreaVariable: string;
    readonly ipv4DistanceVariable: string;
    readonly ipv4Filter: boolean;
    readonly ipv4FilterVariable: string;
    readonly ipv4MaxMetricRouterLsas: outputs.GetCiscoOspfv3FeatureTemplateIpv4MaxMetricRouterLsa[];
    readonly ipv4PolicyName: string;
    readonly ipv4PolicyNameVariable: string;
    readonly ipv4Redistributes: outputs.GetCiscoOspfv3FeatureTemplateIpv4Redistribute[];
    readonly ipv4RouterId: string;
    readonly ipv4RouterIdVariable: string;
    readonly ipv4TimersSpfDelay: number;
    readonly ipv4TimersSpfDelayVariable: string;
    readonly ipv4TimersSpfInitialHold: number;
    readonly ipv4TimersSpfInitialHoldVariable: string;
    readonly ipv4TimersSpfMaxHold: number;
    readonly ipv4TimersSpfMaxHoldVariable: string;
    readonly ipv6Areas: outputs.GetCiscoOspfv3FeatureTemplateIpv6Area[];
    readonly ipv6AutoCostReferenceBandwidth: number;
    readonly ipv6AutoCostReferenceBandwidthVariable: string;
    readonly ipv6CompatibleRfc1583: boolean;
    readonly ipv6CompatibleRfc1583Variable: string;
    readonly ipv6DefaultInformationOriginate: boolean;
    readonly ipv6DefaultInformationOriginateAlways: boolean;
    readonly ipv6DefaultInformationOriginateAlwaysVariable: string;
    readonly ipv6DefaultInformationOriginateMetric: number;
    readonly ipv6DefaultInformationOriginateMetricType: string;
    readonly ipv6DefaultInformationOriginateMetricTypeVariable: string;
    readonly ipv6DefaultInformationOriginateMetricVariable: string;
    readonly ipv6Distance: number;
    readonly ipv6DistanceExternal: number;
    readonly ipv6DistanceExternalVariable: string;
    readonly ipv6DistanceInterArea: number;
    readonly ipv6DistanceInterAreaVariable: string;
    readonly ipv6DistanceIntraArea: number;
    readonly ipv6DistanceIntraAreaVariable: string;
    readonly ipv6DistanceVariable: string;
    readonly ipv6Filter: boolean;
    readonly ipv6FilterVariable: string;
    readonly ipv6MaxMetricRouterLsas: outputs.GetCiscoOspfv3FeatureTemplateIpv6MaxMetricRouterLsa[];
    readonly ipv6PolicyName: string;
    readonly ipv6PolicyNameVariable: string;
    readonly ipv6Redistributes: outputs.GetCiscoOspfv3FeatureTemplateIpv6Redistribute[];
    readonly ipv6RouterId: string;
    readonly ipv6RouterIdVariable: string;
    readonly ipv6TimersSpfDelay: number;
    readonly ipv6TimersSpfDelayVariable: string;
    readonly ipv6TimersSpfInitialHold: number;
    readonly ipv6TimersSpfInitialHoldVariable: string;
    readonly ipv6TimersSpfMaxHold: number;
    readonly ipv6TimersSpfMaxHoldVariable: string;
    readonly name: string;
    readonly templateType: string;
    readonly version: number;
}
export function getCiscoOspfv3FeatureTemplateOutput(args?: GetCiscoOspfv3FeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCiscoOspfv3FeatureTemplateResult> {
    return pulumi.output(args).apply((a: any) => getCiscoOspfv3FeatureTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getCiscoOspfv3FeatureTemplate.
 */
export interface GetCiscoOspfv3FeatureTemplateOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
