// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTransportIpv6TrackerProfileParcel(args: GetTransportIpv6TrackerProfileParcelArgs, opts?: pulumi.InvokeOptions): Promise<GetTransportIpv6TrackerProfileParcelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getTransportIpv6TrackerProfileParcel:getTransportIpv6TrackerProfileParcel", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTransportIpv6TrackerProfileParcel.
 */
export interface GetTransportIpv6TrackerProfileParcelArgs {
    featureProfileId: string;
    id: string;
}

/**
 * A collection of values returned by getTransportIpv6TrackerProfileParcel.
 */
export interface GetTransportIpv6TrackerProfileParcelResult {
    readonly description: string;
    readonly endpointApiUrl: string;
    readonly endpointApiUrlVariable: string;
    readonly endpointDnsName: string;
    readonly endpointDnsNameVariable: string;
    readonly endpointIp: string;
    readonly endpointIpVariable: string;
    readonly endpointTrackerType: string;
    readonly endpointTrackerTypeVariable: string;
    readonly featureProfileId: string;
    readonly id: string;
    readonly interval: number;
    readonly intervalVariable: string;
    readonly multiplier: number;
    readonly multiplierVariable: string;
    readonly name: string;
    readonly threshold: number;
    readonly thresholdVariable: string;
    readonly trackerName: string;
    readonly trackerNameVariable: string;
    readonly trackerType: string;
    readonly trackerTypeVariable: string;
    readonly version: number;
}
export function getTransportIpv6TrackerProfileParcelOutput(args: GetTransportIpv6TrackerProfileParcelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransportIpv6TrackerProfileParcelResult> {
    return pulumi.output(args).apply((a: any) => getTransportIpv6TrackerProfileParcel(a, opts))
}

/**
 * A collection of arguments for invoking getTransportIpv6TrackerProfileParcel.
 */
export interface GetTransportIpv6TrackerProfileParcelOutputArgs {
    featureProfileId: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
