// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTlsSslProfilePolicyDefinition(args: GetTlsSslProfilePolicyDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetTlsSslProfilePolicyDefinitionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getTlsSslProfilePolicyDefinition:getTlsSslProfilePolicyDefinition", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTlsSslProfilePolicyDefinition.
 */
export interface GetTlsSslProfilePolicyDefinitionArgs {
    id: string;
}

/**
 * A collection of values returned by getTlsSslProfilePolicyDefinition.
 */
export interface GetTlsSslProfilePolicyDefinitionResult {
    readonly allowUrlListId: string;
    readonly allowUrlListVersion: number;
    readonly blockUrlListId: string;
    readonly blockUrlListVersion: number;
    readonly decryptCategories: string[];
    readonly decryptThreshold: string;
    readonly description: string;
    readonly failDecrypt: boolean;
    readonly id: string;
    readonly mode: string;
    readonly name: string;
    readonly neverDecryptCategories: string[];
    readonly reputation: boolean;
    readonly skipDecryptCategories: string[];
    readonly version: number;
}
export function getTlsSslProfilePolicyDefinitionOutput(args: GetTlsSslProfilePolicyDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTlsSslProfilePolicyDefinitionResult> {
    return pulumi.output(args).apply((a: any) => getTlsSslProfilePolicyDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getTlsSslProfilePolicyDefinition.
 */
export interface GetTlsSslProfilePolicyDefinitionOutputArgs {
    id: pulumi.Input<string>;
}
