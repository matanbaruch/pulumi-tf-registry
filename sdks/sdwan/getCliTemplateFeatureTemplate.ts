// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCliTemplateFeatureTemplate(args?: GetCliTemplateFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCliTemplateFeatureTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCliTemplateFeatureTemplate:getCliTemplateFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCliTemplateFeatureTemplate.
 */
export interface GetCliTemplateFeatureTemplateArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getCliTemplateFeatureTemplate.
 */
export interface GetCliTemplateFeatureTemplateResult {
    readonly cliConfig: string;
    readonly description: string;
    readonly deviceTypes: string[];
    readonly id: string;
    readonly name: string;
    readonly templateType: string;
    readonly version: number;
}
export function getCliTemplateFeatureTemplateOutput(args?: GetCliTemplateFeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCliTemplateFeatureTemplateResult> {
    return pulumi.output(args).apply((a: any) => getCliTemplateFeatureTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getCliTemplateFeatureTemplate.
 */
export interface GetCliTemplateFeatureTemplateOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
