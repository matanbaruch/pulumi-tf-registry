// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCliFeatureProfile(args: GetCliFeatureProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetCliFeatureProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCliFeatureProfile:getCliFeatureProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCliFeatureProfile.
 */
export interface GetCliFeatureProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getCliFeatureProfile.
 */
export interface GetCliFeatureProfileResult {
    readonly description: string;
    readonly id: string;
    readonly name: string;
}
export function getCliFeatureProfileOutput(args: GetCliFeatureProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCliFeatureProfileResult> {
    return pulumi.output(args).apply((a: any) => getCliFeatureProfile(a, opts))
}

/**
 * A collection of arguments for invoking getCliFeatureProfile.
 */
export interface GetCliFeatureProfileOutputArgs {
    id: pulumi.Input<string>;
}
