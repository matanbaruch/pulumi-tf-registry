// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTransportWanVpnProfileParcel(args: GetTransportWanVpnProfileParcelArgs, opts?: pulumi.InvokeOptions): Promise<GetTransportWanVpnProfileParcelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getTransportWanVpnProfileParcel:getTransportWanVpnProfileParcel", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTransportWanVpnProfileParcel.
 */
export interface GetTransportWanVpnProfileParcelArgs {
    featureProfileId: string;
    id: string;
}

/**
 * A collection of values returned by getTransportWanVpnProfileParcel.
 */
export interface GetTransportWanVpnProfileParcelResult {
    readonly description: string;
    readonly enhanceEcmpKeying: boolean;
    readonly enhanceEcmpKeyingVariable: string;
    readonly featureProfileId: string;
    readonly id: string;
    readonly ipv4StaticRoutes: outputs.GetTransportWanVpnProfileParcelIpv4StaticRoute[];
    readonly ipv6StaticRoutes: outputs.GetTransportWanVpnProfileParcelIpv6StaticRoute[];
    readonly name: string;
    readonly nat64V4Pools: outputs.GetTransportWanVpnProfileParcelNat64V4Pool[];
    readonly newHostMappings: outputs.GetTransportWanVpnProfileParcelNewHostMapping[];
    readonly primaryDnsAddressIpv4: string;
    readonly primaryDnsAddressIpv4Variable: string;
    readonly primaryDnsAddressIpv6: string;
    readonly primaryDnsAddressIpv6Variable: string;
    readonly secondaryDnsAddressIpv4: string;
    readonly secondaryDnsAddressIpv4Variable: string;
    readonly secondaryDnsAddressIpv6: string;
    readonly secondaryDnsAddressIpv6Variable: string;
    readonly services: outputs.GetTransportWanVpnProfileParcelService[];
    readonly version: number;
    readonly vpn: number;
}
export function getTransportWanVpnProfileParcelOutput(args: GetTransportWanVpnProfileParcelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransportWanVpnProfileParcelResult> {
    return pulumi.output(args).apply((a: any) => getTransportWanVpnProfileParcel(a, opts))
}

/**
 * A collection of arguments for invoking getTransportWanVpnProfileParcel.
 */
export interface GetTransportWanVpnProfileParcelOutputArgs {
    featureProfileId: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
