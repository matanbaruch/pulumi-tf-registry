// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCiscoBgpFeatureTemplate(args?: GetCiscoBgpFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCiscoBgpFeatureTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCiscoBgpFeatureTemplate:getCiscoBgpFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCiscoBgpFeatureTemplate.
 */
export interface GetCiscoBgpFeatureTemplateArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getCiscoBgpFeatureTemplate.
 */
export interface GetCiscoBgpFeatureTemplateResult {
    readonly addressFamilies: outputs.GetCiscoBgpFeatureTemplateAddressFamily[];
    readonly alwaysCompareMed: boolean;
    readonly alwaysCompareMedVariable: string;
    readonly asNumber: string;
    readonly asNumberVariable: string;
    readonly compareRouterId: boolean;
    readonly compareRouterIdVariable: string;
    readonly description: string;
    readonly deterministicMed: boolean;
    readonly deterministicMedVariable: string;
    readonly deviceTypes: string[];
    readonly distanceExternal: number;
    readonly distanceExternalVariable: string;
    readonly distanceInternal: number;
    readonly distanceInternalVariable: string;
    readonly distanceLocal: number;
    readonly distanceLocalVariable: string;
    readonly holdtime: number;
    readonly holdtimeVariable: string;
    readonly id: string;
    readonly ipv4Neighbors: outputs.GetCiscoBgpFeatureTemplateIpv4Neighbor[];
    readonly ipv4RouteTargets: outputs.GetCiscoBgpFeatureTemplateIpv4RouteTarget[];
    readonly ipv6Neighbors: outputs.GetCiscoBgpFeatureTemplateIpv6Neighbor[];
    readonly ipv6RouteTargets: outputs.GetCiscoBgpFeatureTemplateIpv6RouteTarget[];
    readonly keepalive: number;
    readonly keepaliveVariable: string;
    readonly missingMedWorst: boolean;
    readonly missingMedWorstVariable: string;
    readonly mplsInterfaces: outputs.GetCiscoBgpFeatureTemplateMplsInterface[];
    readonly multipathRelax: boolean;
    readonly multipathRelaxVariable: string;
    readonly name: string;
    readonly propagateAspath: boolean;
    readonly propagateAspathVariable: string;
    readonly propagateCommunity: boolean;
    readonly propagateCommunityVariable: string;
    readonly routerId: string;
    readonly routerIdVariable: string;
    readonly shutdown: boolean;
    readonly shutdownVariable: string;
    readonly templateType: string;
    readonly version: number;
}
export function getCiscoBgpFeatureTemplateOutput(args?: GetCiscoBgpFeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCiscoBgpFeatureTemplateResult> {
    return pulumi.output(args).apply((a: any) => getCiscoBgpFeatureTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getCiscoBgpFeatureTemplate.
 */
export interface GetCiscoBgpFeatureTemplateOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
