// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCiscoOspfFeatureTemplate(args?: GetCiscoOspfFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCiscoOspfFeatureTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCiscoOspfFeatureTemplate:getCiscoOspfFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCiscoOspfFeatureTemplate.
 */
export interface GetCiscoOspfFeatureTemplateArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getCiscoOspfFeatureTemplate.
 */
export interface GetCiscoOspfFeatureTemplateResult {
    readonly areas: outputs.GetCiscoOspfFeatureTemplateArea[];
    readonly autoCostReferenceBandwidth: number;
    readonly autoCostReferenceBandwidthVariable: string;
    readonly compatibleRfc1583: boolean;
    readonly compatibleRfc1583Variable: string;
    readonly defaultInformationOriginate: boolean;
    readonly defaultInformationOriginateAlways: boolean;
    readonly defaultInformationOriginateAlwaysVariable: string;
    readonly defaultInformationOriginateMetric: number;
    readonly defaultInformationOriginateMetricType: string;
    readonly defaultInformationOriginateMetricTypeVariable: string;
    readonly defaultInformationOriginateMetricVariable: string;
    readonly description: string;
    readonly deviceTypes: string[];
    readonly distanceExternal: number;
    readonly distanceExternalVariable: string;
    readonly distanceInterArea: number;
    readonly distanceInterAreaVariable: string;
    readonly distanceIntraArea: number;
    readonly distanceIntraAreaVariable: string;
    readonly id: string;
    readonly maxMetricRouterLsas: outputs.GetCiscoOspfFeatureTemplateMaxMetricRouterLsa[];
    readonly name: string;
    readonly redistributes: outputs.GetCiscoOspfFeatureTemplateRedistribute[];
    readonly routePolicies: outputs.GetCiscoOspfFeatureTemplateRoutePolicy[];
    readonly routerId: string;
    readonly routerIdVariable: string;
    readonly templateType: string;
    readonly timersSpfDelay: number;
    readonly timersSpfDelayVariable: string;
    readonly timersSpfInitialHold: number;
    readonly timersSpfInitialHoldVariable: string;
    readonly timersSpfMaxHold: number;
    readonly timersSpfMaxHoldVariable: string;
    readonly version: number;
}
export function getCiscoOspfFeatureTemplateOutput(args?: GetCiscoOspfFeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCiscoOspfFeatureTemplateResult> {
    return pulumi.output(args).apply((a: any) => getCiscoOspfFeatureTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getCiscoOspfFeatureTemplate.
 */
export interface GetCiscoOspfFeatureTemplateOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
