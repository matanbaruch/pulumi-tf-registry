// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCiscoTrustsecFeatureTemplate(args?: GetCiscoTrustsecFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCiscoTrustsecFeatureTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCiscoTrustsecFeatureTemplate:getCiscoTrustsecFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCiscoTrustsecFeatureTemplate.
 */
export interface GetCiscoTrustsecFeatureTemplateArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getCiscoTrustsecFeatureTemplate.
 */
export interface GetCiscoTrustsecFeatureTemplateResult {
    readonly credentialsId: string;
    readonly credentialsIdVariable: string;
    readonly credentialsPassword: string;
    readonly credentialsPasswordVariable: string;
    readonly description: string;
    readonly deviceSgt: number;
    readonly deviceSgtVariable: string;
    readonly deviceTypes: string[];
    readonly enableEnforcement: boolean;
    readonly enableEnforcementVariable: string;
    readonly enableSxp: boolean;
    readonly id: string;
    readonly maximumListenerHoldTime: number;
    readonly maximumListenerHoldTimeVariable: string;
    readonly minimumListenerHoldTime: number;
    readonly minimumListenerHoldTimeVariable: string;
    readonly name: string;
    readonly speakerHoldTime: number;
    readonly speakerHoldTimeVariable: string;
    readonly sxpConnections: outputs.GetCiscoTrustsecFeatureTemplateSxpConnection[];
    readonly sxpDefaultPassword: string;
    readonly sxpDefaultPasswordVariable: string;
    readonly sxpKeyChain: string;
    readonly sxpKeyChainVariable: string;
    readonly sxpLogBindingChanges: boolean;
    readonly sxpLogBindingChangesVariable: string;
    readonly sxpNodeId: string;
    readonly sxpNodeIdType: string;
    readonly sxpNodeIdVariable: string;
    readonly sxpReconciliationPeriod: number;
    readonly sxpReconciliationPeriodVariable: string;
    readonly sxpRetryPeriod: number;
    readonly sxpRetryPeriodVariable: string;
    readonly sxpSourceIp: string;
    readonly sxpSourceIpVariable: string;
    readonly templateType: string;
    readonly version: number;
}
export function getCiscoTrustsecFeatureTemplateOutput(args?: GetCiscoTrustsecFeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCiscoTrustsecFeatureTemplateResult> {
    return pulumi.output(args).apply((a: any) => getCiscoTrustsecFeatureTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getCiscoTrustsecFeatureTemplate.
 */
export interface GetCiscoTrustsecFeatureTemplateOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
