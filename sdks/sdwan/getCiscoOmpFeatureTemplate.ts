// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCiscoOmpFeatureTemplate(args?: GetCiscoOmpFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetCiscoOmpFeatureTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getCiscoOmpFeatureTemplate:getCiscoOmpFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCiscoOmpFeatureTemplate.
 */
export interface GetCiscoOmpFeatureTemplateArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getCiscoOmpFeatureTemplate.
 */
export interface GetCiscoOmpFeatureTemplateResult {
    readonly advertiseIpv4Routes: outputs.GetCiscoOmpFeatureTemplateAdvertiseIpv4Route[];
    readonly advertiseIpv6Routes: outputs.GetCiscoOmpFeatureTemplateAdvertiseIpv6Route[];
    readonly advertisementInterval: number;
    readonly advertisementIntervalVariable: string;
    readonly description: string;
    readonly deviceTypes: string[];
    readonly ecmpLimit: number;
    readonly ecmpLimitVariable: string;
    readonly eorTimer: number;
    readonly eorTimerVariable: string;
    readonly gracefulRestart: boolean;
    readonly gracefulRestartTimer: number;
    readonly gracefulRestartTimerVariable: string;
    readonly gracefulRestartVariable: string;
    readonly holdtime: number;
    readonly holdtimeVariable: string;
    readonly id: string;
    readonly ignoreRegionPathLength: boolean;
    readonly ignoreRegionPathLengthVariable: string;
    readonly name: string;
    readonly ompAdminDistanceIpv4: number;
    readonly ompAdminDistanceIpv4Variable: string;
    readonly ompAdminDistanceIpv6: number;
    readonly ompAdminDistanceIpv6Variable: string;
    readonly overlayAs: number;
    readonly overlayAsVariable: string;
    readonly sendPathLimit: number;
    readonly sendPathLimitVariable: string;
    readonly shutdown: boolean;
    readonly shutdownVariable: string;
    readonly templateType: string;
    readonly transportGateway: string;
    readonly transportGatewayVariable: string;
    readonly version: number;
}
export function getCiscoOmpFeatureTemplateOutput(args?: GetCiscoOmpFeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCiscoOmpFeatureTemplateResult> {
    return pulumi.output(args).apply((a: any) => getCiscoOmpFeatureTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getCiscoOmpFeatureTemplate.
 */
export interface GetCiscoOmpFeatureTemplateOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
