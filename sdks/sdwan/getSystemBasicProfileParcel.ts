// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSystemBasicProfileParcel(args: GetSystemBasicProfileParcelArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemBasicProfileParcelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getSystemBasicProfileParcel:getSystemBasicProfileParcel", {
        "featureProfileId": args.featureProfileId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemBasicProfileParcel.
 */
export interface GetSystemBasicProfileParcelArgs {
    featureProfileId: string;
    id: string;
}

/**
 * A collection of values returned by getSystemBasicProfileParcel.
 */
export interface GetSystemBasicProfileParcelResult {
    readonly adminTechOnFailure: boolean;
    readonly adminTechOnFailureVariable: string;
    readonly affinityGroupNumber: number;
    readonly affinityGroupNumberVariable: string;
    readonly affinityGroupPreferences: number[];
    readonly affinityGroupPreferencesVariable: string;
    readonly affinityPerVrfs: outputs.GetSystemBasicProfileParcelAffinityPerVrf[];
    readonly affinityPreferenceAuto: boolean;
    readonly affinityPreferenceAutoVariable: string;
    readonly configDescription: string;
    readonly configDescriptionVariable: string;
    readonly consoleBaudRate: string;
    readonly consoleBaudRateVariable: string;
    readonly controlSessionPps: number;
    readonly controlSessionPpsVariable: string;
    readonly controllerGroups: number[];
    readonly controllerGroupsVariable: string;
    readonly description: string;
    readonly deviceGroups: string[];
    readonly deviceGroupsVariable: string;
    readonly enhancedAppAwareRouting: string;
    readonly enhancedAppAwareRoutingVariable: string;
    readonly featureProfileId: string;
    readonly gpsGeoFencingEnable: boolean;
    readonly gpsGeoFencingRange: number;
    readonly gpsGeoFencingRangeVariable: string;
    readonly gpsLatitude: number;
    readonly gpsLatitudeVariable: string;
    readonly gpsLongitude: number;
    readonly gpsLongitudeVariable: string;
    readonly gpsSmsEnable: boolean;
    readonly gpsSmsMobileNumbers: outputs.GetSystemBasicProfileParcelGpsSmsMobileNumber[];
    readonly id: string;
    readonly idleTimeout: number;
    readonly idleTimeoutVariable: string;
    readonly location: string;
    readonly locationVariable: string;
    readonly maxOmpSessions: number;
    readonly maxOmpSessionsVariable: string;
    readonly multiTenant: boolean;
    readonly multiTenantVariable: string;
    readonly name: string;
    readonly onDemandEnable: boolean;
    readonly onDemandEnableVariable: string;
    readonly onDemandIdleTimeout: number;
    readonly onDemandIdleTimeoutVariable: string;
    readonly overlayId: number;
    readonly overlayIdVariable: string;
    readonly portHopping: boolean;
    readonly portHoppingVariable: string;
    readonly portOffset: number;
    readonly portOffsetVariable: string;
    readonly siteTypes: string[];
    readonly siteTypesVariable: string;
    readonly timezone: string;
    readonly timezoneVariable: string;
    readonly trackDefaultGateway: boolean;
    readonly trackDefaultGatewayVariable: string;
    readonly trackInterfaceTag: number;
    readonly trackInterfaceTagVariable: string;
    readonly trackTransport: boolean;
    readonly trackTransportVariable: string;
    readonly transportGateway: boolean;
    readonly transportGatewayVariable: string;
    readonly version: number;
}
export function getSystemBasicProfileParcelOutput(args: GetSystemBasicProfileParcelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemBasicProfileParcelResult> {
    return pulumi.output(args).apply((a: any) => getSystemBasicProfileParcel(a, opts))
}

/**
 * A collection of arguments for invoking getSystemBasicProfileParcel.
 */
export interface GetSystemBasicProfileParcelOutputArgs {
    featureProfileId: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
