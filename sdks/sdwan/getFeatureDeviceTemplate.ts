// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFeatureDeviceTemplate(args: GetFeatureDeviceTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetFeatureDeviceTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getFeatureDeviceTemplate:getFeatureDeviceTemplate", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFeatureDeviceTemplate.
 */
export interface GetFeatureDeviceTemplateArgs {
    id: string;
}

/**
 * A collection of values returned by getFeatureDeviceTemplate.
 */
export interface GetFeatureDeviceTemplateResult {
    readonly description: string;
    readonly deviceRole: string;
    readonly deviceType: string;
    readonly generalTemplates: outputs.GetFeatureDeviceTemplateGeneralTemplate[];
    readonly id: string;
    readonly name: string;
    readonly policyId: string;
    readonly policyVersion: number;
    readonly securityPolicyId: string;
    readonly securityPolicyVersion: number;
    readonly version: number;
}
export function getFeatureDeviceTemplateOutput(args: GetFeatureDeviceTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFeatureDeviceTemplateResult> {
    return pulumi.output(args).apply((a: any) => getFeatureDeviceTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getFeatureDeviceTemplate.
 */
export interface GetFeatureDeviceTemplateOutputArgs {
    id: pulumi.Input<string>;
}
