// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGpsFeatureTemplate(args?: GetGpsFeatureTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetGpsFeatureTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sdwan:index/getGpsFeatureTemplate:getGpsFeatureTemplate", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGpsFeatureTemplate.
 */
export interface GetGpsFeatureTemplateArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getGpsFeatureTemplate.
 */
export interface GetGpsFeatureTemplateResult {
    readonly description: string;
    readonly destinationAddress: string;
    readonly destinationAddressVariable: string;
    readonly destinationPort: number;
    readonly destinationPortVariable: string;
    readonly deviceTypes: string[];
    readonly enable: boolean;
    readonly enableVariable: string;
    readonly gpsMode: string;
    readonly gpsModeVariable: string;
    readonly id: string;
    readonly name: string;
    readonly nmea: boolean;
    readonly nmeaVariable: string;
    readonly sourceAddress: string;
    readonly sourceAddressVariable: string;
    readonly templateType: string;
    readonly version: number;
}
export function getGpsFeatureTemplateOutput(args?: GetGpsFeatureTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGpsFeatureTemplateResult> {
    return pulumi.output(args).apply((a: any) => getGpsFeatureTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getGpsFeatureTemplate.
 */
export interface GetGpsFeatureTemplateOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
