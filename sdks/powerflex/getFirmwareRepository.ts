// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirmwareRepository(args?: GetFirmwareRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetFirmwareRepositoryResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powerflex:index/getFirmwareRepository:getFirmwareRepository", {
        "firmwareRepositoryIds": args.firmwareRepositoryIds,
        "firmwareRepositoryNames": args.firmwareRepositoryNames,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirmwareRepository.
 */
export interface GetFirmwareRepositoryArgs {
    firmwareRepositoryIds?: string[];
    firmwareRepositoryNames?: string[];
}

/**
 * A collection of values returned by getFirmwareRepository.
 */
export interface GetFirmwareRepositoryResult {
    readonly firmwareRepositoryDetails: outputs.GetFirmwareRepositoryFirmwareRepositoryDetail[];
    readonly firmwareRepositoryIds?: string[];
    readonly firmwareRepositoryNames?: string[];
    readonly id: string;
}
export function getFirmwareRepositoryOutput(args?: GetFirmwareRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirmwareRepositoryResult> {
    return pulumi.output(args).apply((a: any) => getFirmwareRepository(a, opts))
}

/**
 * A collection of arguments for invoking getFirmwareRepository.
 */
export interface GetFirmwareRepositoryOutputArgs {
    firmwareRepositoryIds?: pulumi.Input<pulumi.Input<string>[]>;
    firmwareRepositoryNames?: pulumi.Input<pulumi.Input<string>[]>;
}
