// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsRepository(args?: GetOsRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetOsRepositoryResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powerflex:index/getOsRepository:getOsRepository", {
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsRepository.
 */
export interface GetOsRepositoryArgs {
    filter?: inputs.GetOsRepositoryFilter;
}

/**
 * A collection of values returned by getOsRepository.
 */
export interface GetOsRepositoryResult {
    readonly filter?: outputs.GetOsRepositoryFilter;
    readonly id: string;
    readonly osRepositories: outputs.GetOsRepositoryOsRepository[];
}
export function getOsRepositoryOutput(args?: GetOsRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsRepositoryResult> {
    return pulumi.output(args).apply((a: any) => getOsRepository(a, opts))
}

/**
 * A collection of arguments for invoking getOsRepository.
 */
export interface GetOsRepositoryOutputArgs {
    filter?: pulumi.Input<inputs.GetOsRepositoryFilterArgs>;
}
