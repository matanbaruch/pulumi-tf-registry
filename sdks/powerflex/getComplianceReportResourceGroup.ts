// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getComplianceReportResourceGroup(args: GetComplianceReportResourceGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetComplianceReportResourceGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powerflex:index/getComplianceReportResourceGroup:getComplianceReportResourceGroup", {
        "filter": args.filter,
        "resourceGroupId": args.resourceGroupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComplianceReportResourceGroup.
 */
export interface GetComplianceReportResourceGroupArgs {
    filter?: inputs.GetComplianceReportResourceGroupFilter;
    resourceGroupId: string;
}

/**
 * A collection of values returned by getComplianceReportResourceGroup.
 */
export interface GetComplianceReportResourceGroupResult {
    readonly complianceReports: outputs.GetComplianceReportResourceGroupComplianceReport[];
    readonly filter?: outputs.GetComplianceReportResourceGroupFilter;
    readonly id: string;
    readonly resourceGroupId: string;
}
export function getComplianceReportResourceGroupOutput(args: GetComplianceReportResourceGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComplianceReportResourceGroupResult> {
    return pulumi.output(args).apply((a: any) => getComplianceReportResourceGroup(a, opts))
}

/**
 * A collection of arguments for invoking getComplianceReportResourceGroup.
 */
export interface GetComplianceReportResourceGroupOutputArgs {
    filter?: pulumi.Input<inputs.GetComplianceReportResourceGroupFilterArgs>;
    resourceGroupId: pulumi.Input<string>;
}
