// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFaultSet(args?: GetFaultSetArgs, opts?: pulumi.InvokeOptions): Promise<GetFaultSetResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powerflex:index/getFaultSet:getFaultSet", {
        "faultSetIds": args.faultSetIds,
        "faultSetNames": args.faultSetNames,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFaultSet.
 */
export interface GetFaultSetArgs {
    faultSetIds?: string[];
    faultSetNames?: string[];
}

/**
 * A collection of values returned by getFaultSet.
 */
export interface GetFaultSetResult {
    readonly faultSetDetails: outputs.GetFaultSetFaultSetDetail[];
    readonly faultSetIds?: string[];
    readonly faultSetNames?: string[];
    readonly id: string;
}
export function getFaultSetOutput(args?: GetFaultSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFaultSetResult> {
    return pulumi.output(args).apply((a: any) => getFaultSet(a, opts))
}

/**
 * A collection of arguments for invoking getFaultSet.
 */
export interface GetFaultSetOutputArgs {
    faultSetIds?: pulumi.Input<pulumi.Input<string>[]>;
    faultSetNames?: pulumi.Input<pulumi.Input<string>[]>;
}
