// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class System extends pulumi.CustomResource {
    /**
     * Get an existing System resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemState, opts?: pulumi.CustomResourceOptions): System {
        return new System(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'powerflex:index/system:System';

    /**
     * Returns true if the given object is an instance of System.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is System {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === System.__pulumiType;
    }

    /**
     * Restricted mode of the cluster. Accepted values are `None`, `Guid`, `ApprovedIp`.
     */
    public readonly restrictedMode!: pulumi.Output<string>;
    /**
     * Specifies list of SDC IPs.
     */
    public readonly sdcApprovedIps!: pulumi.Output<outputs.SystemSdcApprovedIp[] | undefined>;
    /**
     * Specifies list of SDC GUIDs.
     */
    public readonly sdcGuids!: pulumi.Output<string[]>;
    /**
     * Specifies list of SDC IDs.
     */
    public readonly sdcIds!: pulumi.Output<string[] | undefined>;
    /**
     * Specifies list of SDC names.
     */
    public readonly sdcNames!: pulumi.Output<string[] | undefined>;

    /**
     * Create a System resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemArgs | SystemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemState | undefined;
            resourceInputs["restrictedMode"] = state ? state.restrictedMode : undefined;
            resourceInputs["sdcApprovedIps"] = state ? state.sdcApprovedIps : undefined;
            resourceInputs["sdcGuids"] = state ? state.sdcGuids : undefined;
            resourceInputs["sdcIds"] = state ? state.sdcIds : undefined;
            resourceInputs["sdcNames"] = state ? state.sdcNames : undefined;
        } else {
            const args = argsOrState as SystemArgs | undefined;
            if ((!args || args.restrictedMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'restrictedMode'");
            }
            resourceInputs["restrictedMode"] = args ? args.restrictedMode : undefined;
            resourceInputs["sdcApprovedIps"] = args ? args.sdcApprovedIps : undefined;
            resourceInputs["sdcGuids"] = args ? args.sdcGuids : undefined;
            resourceInputs["sdcIds"] = args ? args.sdcIds : undefined;
            resourceInputs["sdcNames"] = args ? args.sdcNames : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(System.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering System resources.
 */
export interface SystemState {
    /**
     * Restricted mode of the cluster. Accepted values are `None`, `Guid`, `ApprovedIp`.
     */
    restrictedMode?: pulumi.Input<string>;
    /**
     * Specifies list of SDC IPs.
     */
    sdcApprovedIps?: pulumi.Input<pulumi.Input<inputs.SystemSdcApprovedIp>[]>;
    /**
     * Specifies list of SDC GUIDs.
     */
    sdcGuids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies list of SDC IDs.
     */
    sdcIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies list of SDC names.
     */
    sdcNames?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a System resource.
 */
export interface SystemArgs {
    /**
     * Restricted mode of the cluster. Accepted values are `None`, `Guid`, `ApprovedIp`.
     */
    restrictedMode: pulumi.Input<string>;
    /**
     * Specifies list of SDC IPs.
     */
    sdcApprovedIps?: pulumi.Input<pulumi.Input<inputs.SystemSdcApprovedIp>[]>;
    /**
     * Specifies list of SDC GUIDs.
     */
    sdcGuids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies list of SDC IDs.
     */
    sdcIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies list of SDC names.
     */
    sdcNames?: pulumi.Input<pulumi.Input<string>[]>;
}
