// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ClusterCluster {
    /**
     * Fault Set
     */
    faultSet?: pulumi.Input<string>;
    /**
     * Use this field to assign a single IP address for all the MDM IP, MDM Mgmt IP, and SDS All IP. This option is useful when separate networks for data and management are not required.
     */
    ips?: pulumi.Input<string>;
    /**
     * Is Mdm Or Tb
     */
    isMdmOrTb: pulumi.Input<string>;
    /**
     * Is RFCache. The acceptable values are `Yes` and `No`. Default value is `No`.
     */
    isRfcache?: pulumi.Input<string>;
    /**
     * Is Sdc. The acceptable values are `Yes` and `No`. Default value is `No`.
     */
    isSdc?: pulumi.Input<string>;
    /**
     * Is SDR. The acceptable values are `Yes` and `No`. Default value is `No`.
     */
    isSdr?: pulumi.Input<string>;
    /**
     * Is Sds. The acceptable values are `Yes` and `No`. Default value is `No`.
     */
    isSds?: pulumi.Input<string>;
    /**
     * MDM IP addresses used to communicate with other PowerFlex components in the storage network. This is required for all MDMs, Tiebreakers and Standbys.Leave this field blank for hosts that are not part of the MDM cluster.
     */
    mdmIps?: pulumi.Input<string>;
    /**
     * This IP address is for the management-only network. The management ip is not required for Tiebreaker MDM, Standby Tiebreaker MDM and any host that is not an MDM.
     */
    mdmMgmtIp?: pulumi.Input<string>;
    /**
     * MDMName
     */
    mdmName?: pulumi.Input<string>;
    /**
     * Operating System
     */
    operatingSystem: pulumi.Input<string>;
    /**
     * Password used to log in to the node.
     */
    password?: pulumi.Input<string>;
    /**
     * Performance Profile For MDM
     */
    perfProfileForMdm?: pulumi.Input<string>;
    /**
     * Performance Profile For SDC
     */
    perfProfileForSdc?: pulumi.Input<string>;
    /**
     * Performance Profile For SDR
     */
    perfProfileForSdr?: pulumi.Input<string>;
    /**
     * Performance Profile For SDS
     */
    perfProfileForSds?: pulumi.Input<string>;
    /**
     * Protection Domain
     */
    protectionDomain?: pulumi.Input<string>;
    /**
     * List of SSD devices to provide RFcache acceleration for Medium Granularity data layout Storage Pools.
     */
    rfCacheSsdDeviceList?: pulumi.Input<string>;
    /**
     * SDC Name
     */
    sdcName?: pulumi.Input<string>;
    /**
     * SDR IP addresses to be used for communication among all nodes (including all three roles)
     */
    sdrAllIps?: pulumi.Input<string>;
    /**
     * The IP addresses through which the SDC communicates with the SDR.
     */
    sdrApplicationIps?: pulumi.Input<string>;
    /**
     * The IP addresses through which the SDR communicates with peer systems SDRs
     */
    sdrExternalIps?: pulumi.Input<string>;
    /**
     * SDR Name
     */
    sdrName?: pulumi.Input<string>;
    /**
     * SDR Port
     */
    sdrPort?: pulumi.Input<string>;
    /**
     * The IP addresses through which the SDR communicates with the MDM for server side control communications.
     */
    sdrStorageIps?: pulumi.Input<string>;
    /**
     * SDS IP addresses to be used for communication among all nodes.
     */
    sdsAllIps?: pulumi.Input<string>;
    /**
     * SDS Name
     */
    sdsName?: pulumi.Input<string>;
    /**
     * Storage devices to be added to an SDS. For more than one device, use a comma separated list, with no spaces.
     */
    sdsStorageDeviceList?: pulumi.Input<string>;
    /**
     * Sets names for devices.
     */
    sdsStorageDeviceNames?: pulumi.Input<string>;
    /**
     * SDS IP addresses to be used for communication among SDS and SDC nodes only.
     */
    sdsToSdcOnlyIps?: pulumi.Input<string>;
    /**
     * SDS IP addresses to be used for communication among SDS nodes. When the replication feature is used, these addresses are also used for SDS-SDR communication.
     */
    sdsToSdsOnlyIps?: pulumi.Input<string>;
    /**
     * Sets Storage Pool names
     */
    storagePoolList?: pulumi.Input<string>;
    /**
     * The value can be either `root` or any non-root user name with appropriate permissions.
     */
    username?: pulumi.Input<string>;
    /**
     * The NIC to which the virtual IP addresses are mapped.
     */
    virtualIpNics?: pulumi.Input<string>;
    /**
     * Virtual IPs
     */
    virtualIps?: pulumi.Input<string>;
}

export interface ClusterMdmList {
    /**
     * ID
     */
    id?: pulumi.Input<string>;
    /**
     * MDM Node IP
     */
    ip?: pulumi.Input<string>;
    /**
     * MDM IP
     */
    mdmIp?: pulumi.Input<string>;
    /**
     * MGMTIP
     */
    mgmtIp?: pulumi.Input<string>;
    /**
     * Mode
     */
    mode?: pulumi.Input<string>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Role
     */
    role?: pulumi.Input<string>;
    /**
     * Virtual IP
     */
    virtualIp?: pulumi.Input<string>;
    /**
     * Virtual IPNIC
     */
    virtualIpNic?: pulumi.Input<string>;
}

export interface ClusterProtectionDomain {
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Storage Pools
     */
    storagePoolLists?: pulumi.Input<pulumi.Input<inputs.ClusterProtectionDomainStoragePoolList>[]>;
}

export interface ClusterProtectionDomainStoragePoolList {
    /**
     * Compression Method
     */
    compressionMethod?: pulumi.Input<string>;
    /**
     * Data Layout
     */
    dataLayout?: pulumi.Input<string>;
    /**
     * External Acceleration
     */
    externalAcceleration?: pulumi.Input<string>;
    /**
     * Media Type
     */
    mediaType?: pulumi.Input<string>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Replication Journal Capacity Percentage
     */
    replicationJournalCapacityPercentage?: pulumi.Input<number>;
    /**
     * Zero Padding
     */
    zeroPadding?: pulumi.Input<string>;
}

export interface ClusterSdcList {
    /**
     * GUID
     */
    guid?: pulumi.Input<string>;
    /**
     * ID
     */
    id?: pulumi.Input<string>;
    /**
     * SDC Node IP
     */
    ip?: pulumi.Input<string>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
}

export interface ClusterSdrList {
    /**
     * All IP
     */
    allIps?: pulumi.Input<string>;
    /**
     * Application IP
     */
    applicationIps?: pulumi.Input<string>;
    /**
     * External IP
     */
    externalIps?: pulumi.Input<string>;
    /**
     * ID
     */
    id?: pulumi.Input<string>;
    /**
     * SDR Node IP
     */
    ip?: pulumi.Input<string>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Port
     */
    port?: pulumi.Input<number>;
    /**
     * Storage IP
     */
    storageIps?: pulumi.Input<string>;
}

export interface ClusterSdsList {
    /**
     * All IP
     */
    allIps?: pulumi.Input<string>;
    /**
     * Devices
     */
    devices?: pulumi.Input<pulumi.Input<inputs.ClusterSdsListDevice>[]>;
    /**
     * Fault Set
     */
    faultSet?: pulumi.Input<string>;
    /**
     * ID
     */
    id?: pulumi.Input<string>;
    /**
     * SDS Node IP
     */
    ip?: pulumi.Input<string>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Protection Domain Name
     */
    protectionDomainId?: pulumi.Input<string>;
    /**
     * Protection Domain Name
     */
    protectionDomainName?: pulumi.Input<string>;
    /**
     * SDSOnly IP
     */
    sdsOnlyIps?: pulumi.Input<string>;
    /**
     * SDSSDCIP
     */
    sdsSdcIps?: pulumi.Input<string>;
}

export interface ClusterSdsListDevice {
    /**
     * Max Capacity
     */
    maxCapacityInKb?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Path
     */
    path?: pulumi.Input<string>;
    /**
     * Storage Pool Name
     */
    storagePool?: pulumi.Input<string>;
}

export interface ClusterStoragePool {
    /**
     * Compression Method
     */
    compressionMethod?: pulumi.Input<string>;
    /**
     * Data Layout
     */
    dataLayout?: pulumi.Input<string>;
    /**
     * External Acceleration
     */
    externalAcceleration?: pulumi.Input<string>;
    /**
     * Media Type
     */
    mediaType: pulumi.Input<string>;
    /**
     * Protection Domain
     */
    protectionDomain?: pulumi.Input<string>;
    /**
     * Replication Journal Capacity Percentage
     */
    replicationJournalCapacityPercentage?: pulumi.Input<string>;
    /**
     * Storage Pool
     */
    storagePool?: pulumi.Input<string>;
    /**
     * Zero Padding
     */
    zeroPadding?: pulumi.Input<string>;
}

export interface GetComplianceReportResourceGroupFilter {
    /**
     * Compliant status for resources.
     */
    compliant?: boolean;
    /**
     * List of host names for resources.
     */
    hostNames?: string[];
    /**
     * List of Ip Address for resources.
     */
    ipAddresses?: string[];
    /**
     * List of resource ids.
     */
    resourceIds?: string[];
    /**
     * List of service tags for resources.
     */
    serviceTags?: string[];
}

export interface GetComplianceReportResourceGroupFilterArgs {
    /**
     * Compliant status for resources.
     */
    compliant?: pulumi.Input<boolean>;
    /**
     * List of host names for resources.
     */
    hostNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Ip Address for resources.
     */
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of resource ids.
     */
    resourceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of service tags for resources.
     */
    serviceTags?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsRepositoryFilter {
    /**
     * List of OS Repository Ids.
     */
    osRepoIds?: string[];
    /**
     * List of OS Repository names.
     */
    osRepoNames?: string[];
}

export interface GetOsRepositoryFilterArgs {
    /**
     * List of OS Repository Ids.
     */
    osRepoIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of OS Repository names.
     */
    osRepoNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MdmClusterPrimaryMdm {
    /**
     * ID of the primary MDM.
     */
    id?: pulumi.Input<string>;
    /**
     * The Ips of the primary MDM.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The management ips of the primary MDM.
     */
    managementIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the the primary MDM.
     */
    name?: pulumi.Input<string>;
    /**
     * Port of the primary MDM.
     */
    port?: pulumi.Input<number>;
}

export interface MdmClusterSecondaryMdm {
    /**
     * ID of the secondary MDM.
     */
    id?: pulumi.Input<string>;
    /**
     * The Ips of the secondary MDM.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The management ips of the secondary MDM.
     */
    managementIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the the secondary MDM.
     */
    name?: pulumi.Input<string>;
    /**
     * Port of the secondary MDM.
     */
    port?: pulumi.Input<number>;
}

export interface MdmClusterStandbyMdm {
    /**
     * Allow the added MDM to have a different number of IPs from the primary MDM. Cannot be updated.
     */
    allowAsymmetricIps?: pulumi.Input<boolean>;
    /**
     * ID of the standby MDM.
     */
    id?: pulumi.Input<string>;
    /**
     * The Ips of the standby MDM. Cannot be updated.
     */
    ips: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The management ips of the standby MDM. Cannot be updated.
     */
    managementIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the the standby MDM.
     */
    name?: pulumi.Input<string>;
    /**
     * Port of the standby MDM. Cannot be updated.
     */
    port?: pulumi.Input<number>;
    /**
     * Role of the standby mdm. Accepted values are `Manager` and `TieBreaker`. Cannot be updated.
     */
    role: pulumi.Input<string>;
}

export interface MdmClusterTiebreakerMdm {
    /**
     * ID of the tiebreaker MDM.
     */
    id?: pulumi.Input<string>;
    /**
     * The Ips of the tiebreaker MDM.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The management ips of the tiebreaker MDM.
     */
    managementIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the the tiebreaker MDM.
     */
    name?: pulumi.Input<string>;
    /**
     * Port of the tiebreaker MDM.
     */
    port?: pulumi.Input<number>;
}

export interface PackagePackageDetail {
    /**
     * The Name of package.
     */
    fileName?: pulumi.Input<string>;
    /**
     * Uploaded Package Minor Version with OS Combination.
     */
    label?: pulumi.Input<string>;
    /**
     * Package Version is latest or not
     */
    latest?: pulumi.Input<boolean>;
    /**
     * Type of Linux OS
     */
    linuxFlavour?: pulumi.Input<string>;
    /**
     * Supported OS.
     */
    operatingSystem?: pulumi.Input<string>;
    /**
     * Package Patch Number.
     */
    sioPatchNumber?: pulumi.Input<number>;
    /**
     * Size of Package.
     */
    size?: pulumi.Input<number>;
    /**
     * Type of Package. Like. MDM, LIA, SDS, SDC, etc.
     */
    type?: pulumi.Input<string>;
    /**
     * Uploaded Package Version.
     */
    version?: pulumi.Input<string>;
}

export interface ProtectionDomainLink {
    /**
     * Specifies the exact path to fetch the details.
     */
    href?: pulumi.Input<string>;
    /**
     * Specifies the relationship with the Protection Domain.
     */
    rel?: pulumi.Input<string>;
}

export interface SdcHostEsxi {
    /**
     * GUID of the SDC.
     */
    guid: pulumi.Input<string>;
    /**
     * Whether to verify the VIB signature or not. Defaults to `true`.
     */
    verifyVibSignature?: pulumi.Input<boolean>;
}

export interface SdcHostRemote {
    /**
     * Remote Login certificate issued by a CA to the remote login user. Must be used with `private_key` and the private key must match the certificate.
     */
    certificate?: pulumi.Input<string>;
    /**
     * Directory on the SDC server to upload packages to for Unix. Defaults to `/tmp` on Unix.
     */
    dir?: pulumi.Input<string>;
    /**
     * Remote Login host key of the SDC server. Corresponds to the UserKnownHostsFile field of OpenSSH.
     */
    hostKey?: pulumi.Input<string>;
    /**
     * Remote Login password of the SDC server.
     */
    password?: pulumi.Input<string>;
    /**
     * Remote Login port of the SDC server. Defaults to `22`.
     */
    port?: pulumi.Input<string>;
    /**
     * Remote Login private key of the SDC server. Corresponds to the IdentityFile field of OpenSSH.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * Remote Login username of the SDC server.
     */
    user: pulumi.Input<string>;
}

export interface SdcVolumesMappingVolumeList {
    /**
     * The Access Mode of the SDC. Valid values are `ReadOnly`, `ReadWrite` and `NoAccess`. Default value is `ReadOnly`.
     */
    accessMode?: pulumi.Input<string>;
    /**
     * Bandwidth limit in MBPS. `0` represents unlimited bandwith. Default value is `0`.
     */
    limitBwInMbps?: pulumi.Input<number>;
    /**
     * IOPS limit. Valid values are 0 or integers greater than 10. `0` represents unlimited IOPS. Default value is `0`.
     */
    limitIops?: pulumi.Input<number>;
    /**
     * The ID of the volume.
     */
    volumeId?: pulumi.Input<string>;
    /**
     * The name of the volume.
     */
    volumeName?: pulumi.Input<string>;
}

export interface SdsIpList {
    /**
     * IP address to be assigned to the SDS.
     */
    ip: pulumi.Input<string>;
    /**
     * Role to be assigned to the IP address. Valid values are `all`, `sdcOnly` and `sdsOnly`.
     */
    role: pulumi.Input<string>;
}

export interface SystemSdcApprovedIp {
    /**
     * SDC ID.
     */
    id: pulumi.Input<string>;
    /**
     * SDC IPs.
     */
    ips: pulumi.Input<pulumi.Input<string>[]>;
}
