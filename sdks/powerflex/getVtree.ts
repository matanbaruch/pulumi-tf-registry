// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVtree(args?: GetVtreeArgs, opts?: pulumi.InvokeOptions): Promise<GetVtreeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powerflex:index/getVtree:getVtree", {
        "volumeIds": args.volumeIds,
        "volumeNames": args.volumeNames,
        "vtreeIds": args.vtreeIds,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVtree.
 */
export interface GetVtreeArgs {
    volumeIds?: string[];
    volumeNames?: string[];
    vtreeIds?: string[];
}

/**
 * A collection of values returned by getVtree.
 */
export interface GetVtreeResult {
    readonly id: string;
    readonly volumeIds?: string[];
    readonly volumeNames?: string[];
    readonly vtreeDetails: outputs.GetVtreeVtreeDetail[];
    readonly vtreeIds?: string[];
}
export function getVtreeOutput(args?: GetVtreeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVtreeResult> {
    return pulumi.output(args).apply((a: any) => getVtree(a, opts))
}

/**
 * A collection of arguments for invoking getVtree.
 */
export interface GetVtreeOutputArgs {
    volumeIds?: pulumi.Input<pulumi.Input<string>[]>;
    volumeNames?: pulumi.Input<pulumi.Input<string>[]>;
    vtreeIds?: pulumi.Input<pulumi.Input<string>[]>;
}
