// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIssueTemplates(args?: GetIssueTemplatesArgs, opts?: pulumi.InvokeOptions): Promise<GetIssueTemplatesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hund:index/getIssueTemplates:getIssueTemplates", {
        "kind": args.kind,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIssueTemplates.
 */
export interface GetIssueTemplatesArgs {
    kind?: string;
}

/**
 * A collection of values returned by getIssueTemplates.
 */
export interface GetIssueTemplatesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly issueTemplates: outputs.GetIssueTemplatesIssueTemplate[];
    readonly kind?: string;
}
export function getIssueTemplatesOutput(args?: GetIssueTemplatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIssueTemplatesResult> {
    return pulumi.output(args).apply((a: any) => getIssueTemplates(a, opts))
}

/**
 * A collection of arguments for invoking getIssueTemplates.
 */
export interface GetIssueTemplatesOutputArgs {
    kind?: pulumi.Input<string>;
}
