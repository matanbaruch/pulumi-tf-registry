// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class GroupComponentOrdering extends pulumi.CustomResource {
    /**
     * Get an existing GroupComponentOrdering resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupComponentOrderingState, opts?: pulumi.CustomResourceOptions): GroupComponentOrdering {
        return new GroupComponentOrdering(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'hund:index/groupComponentOrdering:GroupComponentOrdering';

    /**
     * Returns true if the given object is an instance of GroupComponentOrdering.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GroupComponentOrdering {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GroupComponentOrdering.__pulumiType;
    }

    /**
     * The list of Component IDs in this Group, listed in the exact order they will appear under the Group. > This list **must
     * not** omit nor add any Components not already in the referenced Group, or an error will occur. This resource is **only**
     * for managing an order for the Components of a Group.
     */
    public readonly components!: pulumi.Output<string[]>;
    /**
     * The Group whose ordering is managed by this resource.
     */
    public readonly group!: pulumi.Output<string>;

    /**
     * Create a GroupComponentOrdering resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GroupComponentOrderingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GroupComponentOrderingArgs | GroupComponentOrderingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GroupComponentOrderingState | undefined;
            resourceInputs["components"] = state ? state.components : undefined;
            resourceInputs["group"] = state ? state.group : undefined;
        } else {
            const args = argsOrState as GroupComponentOrderingArgs | undefined;
            if ((!args || args.group === undefined) && !opts.urn) {
                throw new Error("Missing required property 'group'");
            }
            resourceInputs["components"] = args ? args.components : undefined;
            resourceInputs["group"] = args ? args.group : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GroupComponentOrdering.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GroupComponentOrdering resources.
 */
export interface GroupComponentOrderingState {
    /**
     * The list of Component IDs in this Group, listed in the exact order they will appear under the Group. > This list **must
     * not** omit nor add any Components not already in the referenced Group, or an error will occur. This resource is **only**
     * for managing an order for the Components of a Group.
     */
    components?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Group whose ordering is managed by this resource.
     */
    group?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GroupComponentOrdering resource.
 */
export interface GroupComponentOrderingArgs {
    /**
     * The list of Component IDs in this Group, listed in the exact order they will appear under the Group. > This list **must
     * not** omit nor add any Components not already in the referenced Group, or an error will occur. This resource is **only**
     * for managing an order for the Components of a Group.
     */
    components?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Group whose ordering is managed by this resource.
     */
    group: pulumi.Input<string>;
}
