// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Group extends pulumi.CustomResource {
    /**
     * Get an existing Group resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupState, opts?: pulumi.CustomResourceOptions): Group {
        return new Group(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'hund:index/group:Group';

    /**
     * Returns true if the given object is an instance of Group.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Group {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Group.__pulumiType;
    }

    /**
     * Whether or not this group is displayed collapsed by default on the status page.
     */
    public readonly collapsed!: pulumi.Output<boolean>;
    /**
     * A list of the Component IDs contained within this Group.
     */
    public /*out*/ readonly components!: pulumi.Output<string[]>;
    /**
     * The timestamp at which this Group was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * A description of this Group, potentially with markdown formatting, in the default translation.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * An HTML rendering of the markdown-formatted `description`, in the default translation.
     */
    public /*out*/ readonly descriptionHtml!: pulumi.Output<string>;
    /**
     * An HTML rendering of the markdown-formatted `description`, translated into multiple languages. Map keys express the
     * language each string value is to be interpreted in. The `original` field of this map denotes the language used for the
     * non-`_translations` version of this attribute.
     */
    public /*out*/ readonly descriptionHtmlTranslations!: pulumi.Output<{[key: string]: string}>;
    /**
     * A description of this Group, potentially with markdown formatting, translated into multiple languages. Map keys express
     * the language each string value is to be interpreted in. The `original` field of this map denotes the language used for
     * the non-`_translations` version of this attribute.
     */
    public readonly descriptionTranslations!: pulumi.Output<{[key: string]: string}>;
    /**
     * The name of this Group, in the default translation.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of this Group, translated into multiple languages. Map keys express the language each string value is to be
     * interpreted in. The `original` field of this map denotes the language used for the non-`_translations` version of this
     * attribute.
     */
    public readonly nameTranslations!: pulumi.Output<{[key: string]: string}>;
    /**
     * An integer representing the position of this Group. Groups are displayed on the status page in ascending order according
     * to this value.
     */
    public readonly position!: pulumi.Output<number>;
    /**
     * The timestamp at which this Group was last updated.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a Group resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GroupArgs | GroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GroupState | undefined;
            resourceInputs["collapsed"] = state ? state.collapsed : undefined;
            resourceInputs["components"] = state ? state.components : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["descriptionHtml"] = state ? state.descriptionHtml : undefined;
            resourceInputs["descriptionHtmlTranslations"] = state ? state.descriptionHtmlTranslations : undefined;
            resourceInputs["descriptionTranslations"] = state ? state.descriptionTranslations : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameTranslations"] = state ? state.nameTranslations : undefined;
            resourceInputs["position"] = state ? state.position : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as GroupArgs | undefined;
            resourceInputs["collapsed"] = args ? args.collapsed : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["descriptionTranslations"] = args ? args.descriptionTranslations : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameTranslations"] = args ? args.nameTranslations : undefined;
            resourceInputs["position"] = args ? args.position : undefined;
            resourceInputs["components"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["descriptionHtml"] = undefined /*out*/;
            resourceInputs["descriptionHtmlTranslations"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Group.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Group resources.
 */
export interface GroupState {
    /**
     * Whether or not this group is displayed collapsed by default on the status page.
     */
    collapsed?: pulumi.Input<boolean>;
    /**
     * A list of the Component IDs contained within this Group.
     */
    components?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The timestamp at which this Group was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * A description of this Group, potentially with markdown formatting, in the default translation.
     */
    description?: pulumi.Input<string>;
    /**
     * An HTML rendering of the markdown-formatted `description`, in the default translation.
     */
    descriptionHtml?: pulumi.Input<string>;
    /**
     * An HTML rendering of the markdown-formatted `description`, translated into multiple languages. Map keys express the
     * language each string value is to be interpreted in. The `original` field of this map denotes the language used for the
     * non-`_translations` version of this attribute.
     */
    descriptionHtmlTranslations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A description of this Group, potentially with markdown formatting, translated into multiple languages. Map keys express
     * the language each string value is to be interpreted in. The `original` field of this map denotes the language used for
     * the non-`_translations` version of this attribute.
     */
    descriptionTranslations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of this Group, in the default translation.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of this Group, translated into multiple languages. Map keys express the language each string value is to be
     * interpreted in. The `original` field of this map denotes the language used for the non-`_translations` version of this
     * attribute.
     */
    nameTranslations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * An integer representing the position of this Group. Groups are displayed on the status page in ascending order according
     * to this value.
     */
    position?: pulumi.Input<number>;
    /**
     * The timestamp at which this Group was last updated.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Group resource.
 */
export interface GroupArgs {
    /**
     * Whether or not this group is displayed collapsed by default on the status page.
     */
    collapsed?: pulumi.Input<boolean>;
    /**
     * A description of this Group, potentially with markdown formatting, in the default translation.
     */
    description?: pulumi.Input<string>;
    /**
     * A description of this Group, potentially with markdown formatting, translated into multiple languages. Map keys express
     * the language each string value is to be interpreted in. The `original` field of this map denotes the language used for
     * the non-`_translations` version of this attribute.
     */
    descriptionTranslations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of this Group, in the default translation.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of this Group, translated into multiple languages. Map keys express the language each string value is to be
     * interpreted in. The `original` field of this map denotes the language used for the non-`_translations` version of this
     * attribute.
     */
    nameTranslations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * An integer representing the position of this Group. Groups are displayed on the status page in ascending order according
     * to this value.
     */
    position?: pulumi.Input<number>;
}
