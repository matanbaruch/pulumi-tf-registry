// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getComponents(args?: GetComponentsArgs, opts?: pulumi.InvokeOptions): Promise<GetComponentsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hund:index/getComponents:getComponents", {
        "group": args.group,
        "issue": args.issue,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComponents.
 */
export interface GetComponentsArgs {
    group?: string;
    issue?: string;
}

/**
 * A collection of values returned by getComponents.
 */
export interface GetComponentsResult {
    readonly components: outputs.GetComponentsComponent[];
    readonly group?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly issue?: string;
}
export function getComponentsOutput(args?: GetComponentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComponentsResult> {
    return pulumi.output(args).apply((a: any) => getComponents(a, opts))
}

/**
 * A collection of arguments for invoking getComponents.
 */
export interface GetComponentsOutputArgs {
    group?: pulumi.Input<string>;
    issue?: pulumi.Input<string>;
}
