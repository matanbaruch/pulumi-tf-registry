// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrgUnit(args?: GetOrgUnitArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgUnitResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("googleworkspace:index/getOrgUnit:getOrgUnit", {
        "orgUnitId": args.orgUnitId,
        "orgUnitPath": args.orgUnitPath,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrgUnit.
 */
export interface GetOrgUnitArgs {
    orgUnitId?: string;
    orgUnitPath?: string;
}

/**
 * A collection of values returned by getOrgUnit.
 */
export interface GetOrgUnitResult {
    readonly blockInheritance: boolean;
    readonly description: string;
    readonly etag: string;
    readonly id: string;
    readonly name: string;
    readonly orgUnitId: string;
    readonly orgUnitPath: string;
    readonly parentOrgUnitId: string;
    readonly parentOrgUnitPath: string;
}
export function getOrgUnitOutput(args?: GetOrgUnitOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgUnitResult> {
    return pulumi.output(args).apply((a: any) => getOrgUnit(a, opts))
}

/**
 * A collection of arguments for invoking getOrgUnit.
 */
export interface GetOrgUnitOutputArgs {
    orgUnitId?: pulumi.Input<string>;
    orgUnitPath?: pulumi.Input<string>;
}
