// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDomain(args: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("googleworkspace:index/getDomain:getDomain", {
        "domainName": args.domainName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainArgs {
    domainName: string;
}

/**
 * A collection of values returned by getDomain.
 */
export interface GetDomainResult {
    readonly creationTime: number;
    readonly domainAliases: string[];
    readonly domainName: string;
    readonly etag: string;
    readonly id: string;
    readonly isPrimary: boolean;
    readonly verified: boolean;
}
export function getDomainOutput(args: GetDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainResult> {
    return pulumi.output(args).apply((a: any) => getDomain(a, opts))
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainOutputArgs {
    domainName: pulumi.Input<string>;
}
