// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPvs(args: GetPvsArgs, opts?: pulumi.InvokeOptions): Promise<GetPvsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("citrix:index/getPvs:getPvs", {
        "pvsFarmName": args.pvsFarmName,
        "pvsSiteName": args.pvsSiteName,
        "pvsStoreName": args.pvsStoreName,
        "pvsVdiskName": args.pvsVdiskName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPvs.
 */
export interface GetPvsArgs {
    pvsFarmName: string;
    pvsSiteName: string;
    pvsStoreName: string;
    pvsVdiskName: string;
}

/**
 * A collection of values returned by getPvs.
 */
export interface GetPvsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly pvsFarmName: string;
    readonly pvsSiteId: string;
    readonly pvsSiteName: string;
    readonly pvsStoreName: string;
    readonly pvsVdiskId: string;
    readonly pvsVdiskName: string;
}
export function getPvsOutput(args: GetPvsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPvsResult> {
    return pulumi.output(args).apply((a: any) => getPvs(a, opts))
}

/**
 * A collection of arguments for invoking getPvs.
 */
export interface GetPvsOutputArgs {
    pvsFarmName: pulumi.Input<string>;
    pvsSiteName: pulumi.Input<string>;
    pvsStoreName: pulumi.Input<string>;
    pvsVdiskName: pulumi.Input<string>;
}
