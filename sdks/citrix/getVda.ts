// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVda(args?: GetVdaArgs, opts?: pulumi.InvokeOptions): Promise<GetVdaResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("citrix:index/getVda:getVda", {
        "deliveryGroup": args.deliveryGroup,
        "machineCatalog": args.machineCatalog,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVda.
 */
export interface GetVdaArgs {
    deliveryGroup?: string;
    machineCatalog?: string;
}

/**
 * A collection of values returned by getVda.
 */
export interface GetVdaResult {
    readonly deliveryGroup?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly machineCatalog?: string;
    readonly vdas: outputs.GetVdaVda[];
}
export function getVdaOutput(args?: GetVdaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVdaResult> {
    return pulumi.output(args).apply((a: any) => getVda(a, opts))
}

/**
 * A collection of arguments for invoking getVda.
 */
export interface GetVdaOutputArgs {
    deliveryGroup?: pulumi.Input<string>;
    machineCatalog?: pulumi.Input<string>;
}
