// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplicationFolderDetails(args: GetApplicationFolderDetailsArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationFolderDetailsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("citrix:index/getApplicationFolderDetails:getApplicationFolderDetails", {
        "path": args.path,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplicationFolderDetails.
 */
export interface GetApplicationFolderDetailsArgs {
    path: string;
}

/**
 * A collection of values returned by getApplicationFolderDetails.
 */
export interface GetApplicationFolderDetailsResult {
    readonly applicationsLists: outputs.GetApplicationFolderDetailsApplicationsList[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly path: string;
    readonly totalApplications: number;
}
export function getApplicationFolderDetailsOutput(args: GetApplicationFolderDetailsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationFolderDetailsResult> {
    return pulumi.output(args).apply((a: any) => getApplicationFolderDetails(a, opts))
}

/**
 * A collection of arguments for invoking getApplicationFolderDetails.
 */
export interface GetApplicationFolderDetailsOutputArgs {
    path: pulumi.Input<string>;
}
