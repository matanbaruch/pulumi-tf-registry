// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStfRoamingService(args: GetStfRoamingServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetStfRoamingServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("citrix:index/getStfRoamingService:getStfRoamingService", {
        "siteId": args.siteId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStfRoamingService.
 */
export interface GetStfRoamingServiceArgs {
    siteId: string;
}

/**
 * A collection of values returned by getStfRoamingService.
 */
export interface GetStfRoamingServiceResult {
    readonly configurationFile: string;
    readonly featureInstanceId: string;
    readonly friendlyName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly physicalPath: string;
    readonly siteId: string;
    readonly tenantId: string;
    readonly virtualPath: string;
}
export function getStfRoamingServiceOutput(args: GetStfRoamingServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStfRoamingServiceResult> {
    return pulumi.output(args).apply((a: any) => getStfRoamingService(a, opts))
}

/**
 * A collection of arguments for invoking getStfRoamingService.
 */
export interface GetStfRoamingServiceOutputArgs {
    siteId: pulumi.Input<string>;
}
