// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSshKeypair(args?: GetSshKeypairArgs, opts?: pulumi.InvokeOptions): Promise<GetSshKeypairResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecloud:index/getSshKeypair:getSshKeypair", {
        "id": args.id,
        "name": args.name,
        "sshKeypairId": args.sshKeypairId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSshKeypair.
 */
export interface GetSshKeypairArgs {
    id?: string;
    name?: string;
    sshKeypairId?: string;
}

/**
 * A collection of values returned by getSshKeypair.
 */
export interface GetSshKeypairResult {
    readonly id: string;
    readonly name?: string;
    readonly publicKey: string;
    readonly sshKeypairId?: string;
}
export function getSshKeypairOutput(args?: GetSshKeypairOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSshKeypairResult> {
    return pulumi.output(args).apply((a: any) => getSshKeypair(a, opts))
}

/**
 * A collection of arguments for invoking getSshKeypair.
 */
export interface GetSshKeypairOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sshKeypairId?: pulumi.Input<string>;
}
