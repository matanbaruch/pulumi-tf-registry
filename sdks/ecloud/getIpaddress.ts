// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpaddress(args?: GetIpaddressArgs, opts?: pulumi.InvokeOptions): Promise<GetIpaddressResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecloud:index/getIpaddress:getIpaddress", {
        "id": args.id,
        "ipAddress": args.ipAddress,
        "ipAddressId": args.ipAddressId,
        "name": args.name,
        "networkId": args.networkId,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpaddress.
 */
export interface GetIpaddressArgs {
    id?: string;
    ipAddress?: string;
    ipAddressId?: string;
    name?: string;
    networkId?: string;
    type?: string;
}

/**
 * A collection of values returned by getIpaddress.
 */
export interface GetIpaddressResult {
    readonly id: string;
    readonly ipAddress?: string;
    readonly ipAddressId?: string;
    readonly name?: string;
    readonly networkId?: string;
    readonly type?: string;
}
export function getIpaddressOutput(args?: GetIpaddressOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpaddressResult> {
    return pulumi.output(args).apply((a: any) => getIpaddress(a, opts))
}

/**
 * A collection of arguments for invoking getIpaddress.
 */
export interface GetIpaddressOutputArgs {
    id?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    ipAddressId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkId?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
