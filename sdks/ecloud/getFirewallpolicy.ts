// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFirewallpolicy(args?: GetFirewallpolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallpolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecloud:index/getFirewallpolicy:getFirewallpolicy", {
        "firewallPolicyId": args.firewallPolicyId,
        "id": args.id,
        "name": args.name,
        "routerId": args.routerId,
        "sequence": args.sequence,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirewallpolicy.
 */
export interface GetFirewallpolicyArgs {
    firewallPolicyId?: string;
    id?: string;
    name?: string;
    routerId?: string;
    sequence?: number;
}

/**
 * A collection of values returned by getFirewallpolicy.
 */
export interface GetFirewallpolicyResult {
    readonly firewallPolicyId?: string;
    readonly id: string;
    readonly name?: string;
    readonly routerId?: string;
    readonly sequence?: number;
}
export function getFirewallpolicyOutput(args?: GetFirewallpolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallpolicyResult> {
    return pulumi.output(args).apply((a: any) => getFirewallpolicy(a, opts))
}

/**
 * A collection of arguments for invoking getFirewallpolicy.
 */
export interface GetFirewallpolicyOutputArgs {
    firewallPolicyId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    routerId?: pulumi.Input<string>;
    sequence?: pulumi.Input<number>;
}
