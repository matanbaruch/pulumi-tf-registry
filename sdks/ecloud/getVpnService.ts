// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVpnService(args?: GetVpnServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetVpnServiceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecloud:index/getVpnService:getVpnService", {
        "id": args.id,
        "name": args.name,
        "routerId": args.routerId,
        "vpcId": args.vpcId,
        "vpnServiceId": args.vpnServiceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpnService.
 */
export interface GetVpnServiceArgs {
    id?: string;
    name?: string;
    routerId?: string;
    vpcId?: string;
    vpnServiceId?: string;
}

/**
 * A collection of values returned by getVpnService.
 */
export interface GetVpnServiceResult {
    readonly id: string;
    readonly name?: string;
    readonly routerId?: string;
    readonly vpcId?: string;
    readonly vpnServiceId?: string;
}
export function getVpnServiceOutput(args?: GetVpnServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpnServiceResult> {
    return pulumi.output(args).apply((a: any) => getVpnService(a, opts))
}

/**
 * A collection of arguments for invoking getVpnService.
 */
export interface GetVpnServiceOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    routerId?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vpnServiceId?: pulumi.Input<string>;
}
