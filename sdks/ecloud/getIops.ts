// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIops(args?: GetIopsArgs, opts?: pulumi.InvokeOptions): Promise<GetIopsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecloud:index/getIops:getIops", {
        "availabilityZoneId": args.availabilityZoneId,
        "id": args.id,
        "level": args.level,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIops.
 */
export interface GetIopsArgs {
    availabilityZoneId?: string;
    id?: string;
    level?: number;
    name?: string;
}

/**
 * A collection of values returned by getIops.
 */
export interface GetIopsResult {
    readonly availabilityZoneId?: string;
    readonly id: string;
    readonly level?: number;
    readonly name?: string;
}
export function getIopsOutput(args?: GetIopsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIopsResult> {
    return pulumi.output(args).apply((a: any) => getIops(a, opts))
}

/**
 * A collection of arguments for invoking getIops.
 */
export interface GetIopsOutputArgs {
    availabilityZoneId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    level?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
