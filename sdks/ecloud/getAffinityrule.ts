// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAffinityrule(args?: GetAffinityruleArgs, opts?: pulumi.InvokeOptions): Promise<GetAffinityruleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecloud:index/getAffinityrule:getAffinityrule", {
        "affinityRuleId": args.affinityRuleId,
        "availabilityZoneId": args.availabilityZoneId,
        "id": args.id,
        "name": args.name,
        "type": args.type,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAffinityrule.
 */
export interface GetAffinityruleArgs {
    affinityRuleId?: string;
    availabilityZoneId?: string;
    id?: string;
    name?: string;
    type?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getAffinityrule.
 */
export interface GetAffinityruleResult {
    readonly affinityRuleId?: string;
    readonly availabilityZoneId?: string;
    readonly id: string;
    readonly name?: string;
    readonly type?: string;
    readonly vpcId?: string;
}
export function getAffinityruleOutput(args?: GetAffinityruleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAffinityruleResult> {
    return pulumi.output(args).apply((a: any) => getAffinityrule(a, opts))
}

/**
 * A collection of arguments for invoking getAffinityrule.
 */
export interface GetAffinityruleOutputArgs {
    affinityRuleId?: pulumi.Input<string>;
    availabilityZoneId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
