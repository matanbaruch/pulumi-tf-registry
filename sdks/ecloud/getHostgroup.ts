// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getHostgroup(args?: GetHostgroupArgs, opts?: pulumi.InvokeOptions): Promise<GetHostgroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecloud:index/getHostgroup:getHostgroup", {
        "hostGroupId": args.hostGroupId,
        "id": args.id,
        "name": args.name,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHostgroup.
 */
export interface GetHostgroupArgs {
    hostGroupId?: string;
    id?: string;
    name?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getHostgroup.
 */
export interface GetHostgroupResult {
    readonly hostGroupId?: string;
    readonly hostSpecId: string;
    readonly id: string;
    readonly name?: string;
    readonly vpcId?: string;
}
export function getHostgroupOutput(args?: GetHostgroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHostgroupResult> {
    return pulumi.output(args).apply((a: any) => getHostgroup(a, opts))
}

/**
 * A collection of arguments for invoking getHostgroup.
 */
export interface GetHostgroupOutputArgs {
    hostGroupId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
