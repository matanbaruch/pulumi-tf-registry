// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Natoverloadrule extends pulumi.CustomResource {
    /**
     * Get an existing Natoverloadrule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NatoverloadruleState, opts?: pulumi.CustomResourceOptions): Natoverloadrule {
        return new Natoverloadrule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ecloud:index/natoverloadrule:Natoverloadrule';

    /**
     * Returns true if the given object is an instance of Natoverloadrule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Natoverloadrule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Natoverloadrule.__pulumiType;
    }

    public readonly action!: pulumi.Output<string>;
    public readonly floatingIpId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly networkId!: pulumi.Output<string>;
    public readonly subnet!: pulumi.Output<string>;

    /**
     * Create a Natoverloadrule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NatoverloadruleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NatoverloadruleArgs | NatoverloadruleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NatoverloadruleState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["floatingIpId"] = state ? state.floatingIpId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["subnet"] = state ? state.subnet : undefined;
        } else {
            const args = argsOrState as NatoverloadruleArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.floatingIpId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'floatingIpId'");
            }
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if ((!args || args.subnet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnet'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["floatingIpId"] = args ? args.floatingIpId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["subnet"] = args ? args.subnet : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Natoverloadrule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Natoverloadrule resources.
 */
export interface NatoverloadruleState {
    action?: pulumi.Input<string>;
    floatingIpId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkId?: pulumi.Input<string>;
    subnet?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Natoverloadrule resource.
 */
export interface NatoverloadruleArgs {
    action: pulumi.Input<string>;
    floatingIpId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkId: pulumi.Input<string>;
    subnet: pulumi.Input<string>;
}
