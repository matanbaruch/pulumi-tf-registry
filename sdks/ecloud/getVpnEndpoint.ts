// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVpnEndpoint(args?: GetVpnEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetVpnEndpointResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecloud:index/getVpnEndpoint:getVpnEndpoint", {
        "floatingIpId": args.floatingIpId,
        "id": args.id,
        "name": args.name,
        "vpnEndpointId": args.vpnEndpointId,
        "vpnServiceId": args.vpnServiceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpnEndpoint.
 */
export interface GetVpnEndpointArgs {
    floatingIpId?: string;
    id?: string;
    name?: string;
    vpnEndpointId?: string;
    vpnServiceId?: string;
}

/**
 * A collection of values returned by getVpnEndpoint.
 */
export interface GetVpnEndpointResult {
    readonly floatingIpId?: string;
    readonly id: string;
    readonly name?: string;
    readonly vpnEndpointId?: string;
    readonly vpnServiceId?: string;
}
export function getVpnEndpointOutput(args?: GetVpnEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpnEndpointResult> {
    return pulumi.output(args).apply((a: any) => getVpnEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getVpnEndpoint.
 */
export interface GetVpnEndpointOutputArgs {
    floatingIpId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    vpnEndpointId?: pulumi.Input<string>;
    vpnServiceId?: pulumi.Input<string>;
}
