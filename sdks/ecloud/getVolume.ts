// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVolume(args?: GetVolumeArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecloud:index/getVolume:getVolume", {
        "availabilityZoneId": args.availabilityZoneId,
        "capacity": args.capacity,
        "id": args.id,
        "iops": args.iops,
        "name": args.name,
        "port": args.port,
        "volumeGroupId": args.volumeGroupId,
        "volumeId": args.volumeId,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeArgs {
    availabilityZoneId?: string;
    capacity?: number;
    id?: string;
    iops?: number;
    name?: string;
    port?: number;
    volumeGroupId?: string;
    volumeId?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getVolume.
 */
export interface GetVolumeResult {
    readonly availabilityZoneId?: string;
    readonly capacity?: number;
    readonly id: string;
    readonly iops?: number;
    readonly name?: string;
    readonly port?: number;
    readonly volumeGroupId?: string;
    readonly volumeId?: string;
    readonly vpcId?: string;
}
export function getVolumeOutput(args?: GetVolumeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVolumeResult> {
    return pulumi.output(args).apply((a: any) => getVolume(a, opts))
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeOutputArgs {
    availabilityZoneId?: pulumi.Input<string>;
    capacity?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    iops?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    volumeGroupId?: pulumi.Input<string>;
    volumeId?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
