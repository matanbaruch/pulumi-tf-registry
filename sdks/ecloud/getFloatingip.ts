// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFloatingip(args?: GetFloatingipArgs, opts?: pulumi.InvokeOptions): Promise<GetFloatingipResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecloud:index/getFloatingip:getFloatingip", {
        "availabilityZoneId": args.availabilityZoneId,
        "floatingIpId": args.floatingIpId,
        "id": args.id,
        "ipAddress": args.ipAddress,
        "name": args.name,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFloatingip.
 */
export interface GetFloatingipArgs {
    availabilityZoneId?: string;
    floatingIpId?: string;
    id?: string;
    ipAddress?: string;
    name?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getFloatingip.
 */
export interface GetFloatingipResult {
    readonly availabilityZoneId?: string;
    readonly floatingIpId?: string;
    readonly id: string;
    readonly ipAddress?: string;
    readonly name?: string;
    readonly vpcId?: string;
}
export function getFloatingipOutput(args?: GetFloatingipOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFloatingipResult> {
    return pulumi.output(args).apply((a: any) => getFloatingip(a, opts))
}

/**
 * A collection of arguments for invoking getFloatingip.
 */
export interface GetFloatingipOutputArgs {
    availabilityZoneId?: pulumi.Input<string>;
    floatingIpId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
