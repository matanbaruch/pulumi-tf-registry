// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getImage(args?: GetImageArgs, opts?: pulumi.InvokeOptions): Promise<GetImageResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecloud:index/getImage:getImage", {
        "availabilityZoneId": args.availabilityZoneId,
        "id": args.id,
        "imageId": args.imageId,
        "name": args.name,
        "platform": args.platform,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageArgs {
    availabilityZoneId?: string;
    id?: string;
    imageId?: string;
    name?: string;
    platform?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getImage.
 */
export interface GetImageResult {
    readonly availabilityZoneId?: string;
    readonly id: string;
    readonly imageId?: string;
    readonly name?: string;
    readonly platform?: string;
    readonly vpcId?: string;
}
export function getImageOutput(args?: GetImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImageResult> {
    return pulumi.output(args).apply((a: any) => getImage(a, opts))
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageOutputArgs {
    availabilityZoneId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    platform?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
