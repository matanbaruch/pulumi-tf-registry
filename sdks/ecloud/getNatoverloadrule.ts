// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNatoverloadrule(args?: GetNatoverloadruleArgs, opts?: pulumi.InvokeOptions): Promise<GetNatoverloadruleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecloud:index/getNatoverloadrule:getNatoverloadrule", {
        "id": args.id,
        "name": args.name,
        "natOverloadRuleId": args.natOverloadRuleId,
        "networkId": args.networkId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNatoverloadrule.
 */
export interface GetNatoverloadruleArgs {
    id?: string;
    name?: string;
    natOverloadRuleId?: string;
    networkId?: string;
}

/**
 * A collection of values returned by getNatoverloadrule.
 */
export interface GetNatoverloadruleResult {
    readonly action: string;
    readonly floatingIpId: string;
    readonly id: string;
    readonly name?: string;
    readonly natOverloadRuleId?: string;
    readonly networkId?: string;
    readonly subnet: string;
}
export function getNatoverloadruleOutput(args?: GetNatoverloadruleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNatoverloadruleResult> {
    return pulumi.output(args).apply((a: any) => getNatoverloadrule(a, opts))
}

/**
 * A collection of arguments for invoking getNatoverloadrule.
 */
export interface GetNatoverloadruleOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    natOverloadRuleId?: pulumi.Input<string>;
    networkId?: pulumi.Input<string>;
}
