// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getHostspec(args?: GetHostspecArgs, opts?: pulumi.InvokeOptions): Promise<GetHostspecResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecloud:index/getHostspec:getHostspec", {
        "hostSpecId": args.hostSpecId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHostspec.
 */
export interface GetHostspecArgs {
    hostSpecId?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getHostspec.
 */
export interface GetHostspecResult {
    readonly cpuCores: number;
    readonly cpuSockets: number;
    readonly hostSpecId?: string;
    readonly id: string;
    readonly name?: string;
    readonly ramCapacity: number;
}
export function getHostspecOutput(args?: GetHostspecOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHostspecResult> {
    return pulumi.output(args).apply((a: any) => getHostspec(a, opts))
}

/**
 * A collection of arguments for invoking getHostspec.
 */
export interface GetHostspecOutputArgs {
    hostSpecId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
