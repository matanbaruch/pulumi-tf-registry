// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getInstanceCredential(args: GetInstanceCredentialArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceCredentialResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecloud:index/getInstanceCredential:getInstanceCredential", {
        "credentialId": args.credentialId,
        "id": args.id,
        "instanceId": args.instanceId,
        "name": args.name,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInstanceCredential.
 */
export interface GetInstanceCredentialArgs {
    credentialId?: string;
    id?: string;
    instanceId: string;
    name?: string;
    username?: string;
}

/**
 * A collection of values returned by getInstanceCredential.
 */
export interface GetInstanceCredentialResult {
    readonly credentialId: string;
    readonly id: string;
    readonly instanceId: string;
    readonly name: string;
    readonly password: string;
    readonly username: string;
}
export function getInstanceCredentialOutput(args: GetInstanceCredentialOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceCredentialResult> {
    return pulumi.output(args).apply((a: any) => getInstanceCredential(a, opts))
}

/**
 * A collection of arguments for invoking getInstanceCredential.
 */
export interface GetInstanceCredentialOutputArgs {
    credentialId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}
