// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecureNotificationChannel(args: GetSecureNotificationChannelArgs, opts?: pulumi.InvokeOptions): Promise<GetSecureNotificationChannelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sysdig:index/getSecureNotificationChannel:getSecureNotificationChannel", {
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecureNotificationChannel.
 */
export interface GetSecureNotificationChannelArgs {
    id?: string;
    name: string;
    timeouts?: inputs.GetSecureNotificationChannelTimeouts;
}

/**
 * A collection of values returned by getSecureNotificationChannel.
 */
export interface GetSecureNotificationChannelResult {
    readonly account: string;
    readonly apiKey: string;
    readonly channel: string;
    readonly enabled: boolean;
    readonly id: string;
    readonly name: string;
    readonly notifyWhenOk: boolean;
    readonly notifyWhenResolved: boolean;
    readonly recipients: string;
    readonly routingKey: string;
    readonly sendTestNotification: boolean;
    readonly serviceKey: string;
    readonly serviceName: string;
    readonly timeouts?: outputs.GetSecureNotificationChannelTimeouts;
    readonly topics: string;
    readonly type: string;
    readonly url: string;
    readonly version: number;
}
export function getSecureNotificationChannelOutput(args: GetSecureNotificationChannelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecureNotificationChannelResult> {
    return pulumi.output(args).apply((a: any) => getSecureNotificationChannel(a, opts))
}

/**
 * A collection of arguments for invoking getSecureNotificationChannel.
 */
export interface GetSecureNotificationChannelOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetSecureNotificationChannelTimeoutsArgs>;
}
