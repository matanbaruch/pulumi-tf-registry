// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SecureCloudAuthAccountFeature extends pulumi.CustomResource {
    /**
     * Get an existing SecureCloudAuthAccountFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecureCloudAuthAccountFeatureState, opts?: pulumi.CustomResourceOptions): SecureCloudAuthAccountFeature {
        return new SecureCloudAuthAccountFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sysdig:index/secureCloudAuthAccountFeature:SecureCloudAuthAccountFeature';

    /**
     * Returns true if the given object is an instance of SecureCloudAuthAccountFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecureCloudAuthAccountFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecureCloudAuthAccountFeature.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<string>;
    public readonly components!: pulumi.Output<string[]>;
    public readonly enabled!: pulumi.Output<boolean>;
    public readonly flags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.SecureCloudAuthAccountFeatureTimeouts | undefined>;
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a SecureCloudAuthAccountFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecureCloudAuthAccountFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecureCloudAuthAccountFeatureArgs | SecureCloudAuthAccountFeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecureCloudAuthAccountFeatureState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["components"] = state ? state.components : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["flags"] = state ? state.flags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as SecureCloudAuthAccountFeatureArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.components === undefined) && !opts.urn) {
                throw new Error("Missing required property 'components'");
            }
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["components"] = args ? args.components : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["flags"] = args ? args.flags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecureCloudAuthAccountFeature.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SecureCloudAuthAccountFeature resources.
 */
export interface SecureCloudAuthAccountFeatureState {
    accountId?: pulumi.Input<string>;
    components?: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
    flags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.SecureCloudAuthAccountFeatureTimeouts>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecureCloudAuthAccountFeature resource.
 */
export interface SecureCloudAuthAccountFeatureArgs {
    accountId: pulumi.Input<string>;
    components: pulumi.Input<pulumi.Input<string>[]>;
    enabled: pulumi.Input<boolean>;
    flags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.SecureCloudAuthAccountFeatureTimeouts>;
    type: pulumi.Input<string>;
}
