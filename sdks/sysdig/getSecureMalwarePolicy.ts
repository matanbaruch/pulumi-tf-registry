// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecureMalwarePolicy(args: GetSecureMalwarePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetSecureMalwarePolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sysdig:index/getSecureMalwarePolicy:getSecureMalwarePolicy", {
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecureMalwarePolicy.
 */
export interface GetSecureMalwarePolicyArgs {
    id?: string;
    name: string;
    timeouts?: inputs.GetSecureMalwarePolicyTimeouts;
}

/**
 * A collection of values returned by getSecureMalwarePolicy.
 */
export interface GetSecureMalwarePolicyResult {
    readonly actions: outputs.GetSecureMalwarePolicyAction[];
    readonly description: string;
    readonly enabled: boolean;
    readonly id: string;
    readonly name: string;
    readonly notificationChannels: number[];
    readonly rules: outputs.GetSecureMalwarePolicyRule[];
    readonly runbook: string;
    readonly scope: string;
    readonly severity: number;
    readonly timeouts?: outputs.GetSecureMalwarePolicyTimeouts;
    readonly type: string;
    readonly version: number;
}
export function getSecureMalwarePolicyOutput(args: GetSecureMalwarePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecureMalwarePolicyResult> {
    return pulumi.output(args).apply((a: any) => getSecureMalwarePolicy(a, opts))
}

/**
 * A collection of arguments for invoking getSecureMalwarePolicy.
 */
export interface GetSecureMalwarePolicyOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetSecureMalwarePolicyTimeoutsArgs>;
}
