// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFargateWorkloadAgent(args: GetFargateWorkloadAgentArgs, opts?: pulumi.InvokeOptions): Promise<GetFargateWorkloadAgentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sysdig:index/getFargateWorkloadAgent:getFargateWorkloadAgent", {
        "barePdigOnContainers": args.barePdigOnContainers,
        "collectorHost": args.collectorHost,
        "collectorPort": args.collectorPort,
        "containerDefinitions": args.containerDefinitions,
        "id": args.id,
        "ignoreContainers": args.ignoreContainers,
        "imageAuthSecret": args.imageAuthSecret,
        "instrumentationCpu": args.instrumentationCpu,
        "instrumentationEssential": args.instrumentationEssential,
        "instrumentationMemoryLimit": args.instrumentationMemoryLimit,
        "instrumentationMemoryReservation": args.instrumentationMemoryReservation,
        "logConfiguration": args.logConfiguration,
        "orchestratorHost": args.orchestratorHost,
        "orchestratorPort": args.orchestratorPort,
        "priority": args.priority,
        "sidecar": args.sidecar,
        "sysdigAccessKey": args.sysdigAccessKey,
        "sysdigLogging": args.sysdigLogging,
        "workloadAgentImage": args.workloadAgentImage,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFargateWorkloadAgent.
 */
export interface GetFargateWorkloadAgentArgs {
    barePdigOnContainers?: string[];
    collectorHost?: string;
    collectorPort?: string;
    containerDefinitions: string;
    id?: string;
    ignoreContainers?: string[];
    imageAuthSecret?: string;
    instrumentationCpu?: number;
    instrumentationEssential?: boolean;
    instrumentationMemoryLimit?: number;
    instrumentationMemoryReservation?: number;
    logConfiguration?: inputs.GetFargateWorkloadAgentLogConfiguration;
    orchestratorHost?: string;
    orchestratorPort?: string;
    priority?: string;
    sidecar?: string;
    sysdigAccessKey?: string;
    sysdigLogging?: string;
    workloadAgentImage: string;
}

/**
 * A collection of values returned by getFargateWorkloadAgent.
 */
export interface GetFargateWorkloadAgentResult {
    readonly barePdigOnContainers?: string[];
    readonly collectorHost?: string;
    readonly collectorPort?: string;
    readonly containerDefinitions: string;
    readonly id: string;
    readonly ignoreContainers?: string[];
    readonly imageAuthSecret?: string;
    readonly instrumentationCpu?: number;
    readonly instrumentationEssential?: boolean;
    readonly instrumentationMemoryLimit?: number;
    readonly instrumentationMemoryReservation?: number;
    readonly logConfiguration?: outputs.GetFargateWorkloadAgentLogConfiguration;
    readonly orchestratorHost?: string;
    readonly orchestratorPort?: string;
    readonly outputContainerDefinitions: string;
    readonly priority?: string;
    readonly sidecar?: string;
    readonly sysdigAccessKey?: string;
    readonly sysdigLogging?: string;
    readonly workloadAgentImage: string;
}
export function getFargateWorkloadAgentOutput(args: GetFargateWorkloadAgentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFargateWorkloadAgentResult> {
    return pulumi.output(args).apply((a: any) => getFargateWorkloadAgent(a, opts))
}

/**
 * A collection of arguments for invoking getFargateWorkloadAgent.
 */
export interface GetFargateWorkloadAgentOutputArgs {
    barePdigOnContainers?: pulumi.Input<pulumi.Input<string>[]>;
    collectorHost?: pulumi.Input<string>;
    collectorPort?: pulumi.Input<string>;
    containerDefinitions: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ignoreContainers?: pulumi.Input<pulumi.Input<string>[]>;
    imageAuthSecret?: pulumi.Input<string>;
    instrumentationCpu?: pulumi.Input<number>;
    instrumentationEssential?: pulumi.Input<boolean>;
    instrumentationMemoryLimit?: pulumi.Input<number>;
    instrumentationMemoryReservation?: pulumi.Input<number>;
    logConfiguration?: pulumi.Input<inputs.GetFargateWorkloadAgentLogConfigurationArgs>;
    orchestratorHost?: pulumi.Input<string>;
    orchestratorPort?: pulumi.Input<string>;
    priority?: pulumi.Input<string>;
    sidecar?: pulumi.Input<string>;
    sysdigAccessKey?: pulumi.Input<string>;
    sysdigLogging?: pulumi.Input<string>;
    workloadAgentImage: pulumi.Input<string>;
}
