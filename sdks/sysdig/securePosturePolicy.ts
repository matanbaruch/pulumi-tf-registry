// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SecurePosturePolicy extends pulumi.CustomResource {
    /**
     * Get an existing SecurePosturePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurePosturePolicyState, opts?: pulumi.CustomResourceOptions): SecurePosturePolicy {
        return new SecurePosturePolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sysdig:index/securePosturePolicy:SecurePosturePolicy';

    /**
     * Returns true if the given object is an instance of SecurePosturePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurePosturePolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurePosturePolicy.__pulumiType;
    }

    public readonly description!: pulumi.Output<string>;
    public readonly groups!: pulumi.Output<outputs.SecurePosturePolicyGroup[] | undefined>;
    public readonly isActive!: pulumi.Output<boolean | undefined>;
    public readonly link!: pulumi.Output<string | undefined>;
    public readonly maxKubeVersion!: pulumi.Output<number | undefined>;
    public readonly minKubeVersion!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly platform!: pulumi.Output<string | undefined>;
    public readonly targets!: pulumi.Output<outputs.SecurePosturePolicyTarget[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.SecurePosturePolicyTimeouts | undefined>;
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a SecurePosturePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurePosturePolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurePosturePolicyArgs | SecurePosturePolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurePosturePolicyState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["isActive"] = state ? state.isActive : undefined;
            resourceInputs["link"] = state ? state.link : undefined;
            resourceInputs["maxKubeVersion"] = state ? state.maxKubeVersion : undefined;
            resourceInputs["minKubeVersion"] = state ? state.minKubeVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["platform"] = state ? state.platform : undefined;
            resourceInputs["targets"] = state ? state.targets : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as SecurePosturePolicyArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["isActive"] = args ? args.isActive : undefined;
            resourceInputs["link"] = args ? args.link : undefined;
            resourceInputs["maxKubeVersion"] = args ? args.maxKubeVersion : undefined;
            resourceInputs["minKubeVersion"] = args ? args.minKubeVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["platform"] = args ? args.platform : undefined;
            resourceInputs["targets"] = args ? args.targets : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurePosturePolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SecurePosturePolicy resources.
 */
export interface SecurePosturePolicyState {
    description?: pulumi.Input<string>;
    groups?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroup>[]>;
    isActive?: pulumi.Input<boolean>;
    link?: pulumi.Input<string>;
    maxKubeVersion?: pulumi.Input<number>;
    minKubeVersion?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    platform?: pulumi.Input<string>;
    targets?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyTarget>[]>;
    timeouts?: pulumi.Input<inputs.SecurePosturePolicyTimeouts>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecurePosturePolicy resource.
 */
export interface SecurePosturePolicyArgs {
    description: pulumi.Input<string>;
    groups?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroup>[]>;
    isActive?: pulumi.Input<boolean>;
    link?: pulumi.Input<string>;
    maxKubeVersion?: pulumi.Input<number>;
    minKubeVersion?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    platform?: pulumi.Input<string>;
    targets?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyTarget>[]>;
    timeouts?: pulumi.Input<inputs.SecurePosturePolicyTimeouts>;
    type?: pulumi.Input<string>;
}
