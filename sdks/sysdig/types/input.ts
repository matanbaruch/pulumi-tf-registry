// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AgentAccessKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CustomRolePermissions {
    monitorPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    securePermissions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CustomRoleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GetAgentAccessKeyTimeouts {
    read?: string;
}

export interface GetAgentAccessKeyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCurrentUserTimeouts {
    read?: string;
}

export interface GetCurrentUserTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCustomRoleTimeouts {
    read?: string;
}

export interface GetCustomRoleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetFargateWorkloadAgentLogConfiguration {
    /**
     * The log group where the awslogs driver will send log streams
     */
    group: string;
    /**
     * Region for the log group
     */
    region: string;
    /**
     * Prefix for the instrumentation log stream
     */
    streamPrefix: string;
}

export interface GetFargateWorkloadAgentLogConfigurationArgs {
    /**
     * The log group where the awslogs driver will send log streams
     */
    group: pulumi.Input<string>;
    /**
     * Region for the log group
     */
    region: pulumi.Input<string>;
    /**
     * Prefix for the instrumentation log stream
     */
    streamPrefix: pulumi.Input<string>;
}

export interface GetMonitorCustomRolePermissionsTimeouts {
    read?: string;
}

export interface GetMonitorCustomRolePermissionsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorNotificationChannelCustomWebhookTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelCustomWebhookTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorNotificationChannelEmailTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelEmailTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorNotificationChannelGoogleChatTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelGoogleChatTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorNotificationChannelIbmEventNotificationTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelIbmEventNotificationTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorNotificationChannelIbmFunctionTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelIbmFunctionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorNotificationChannelMsteamsTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelMsteamsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorNotificationChannelOpsgenieTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelOpsgenieTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorNotificationChannelPagerdutyTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelPagerdutyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorNotificationChannelPrometheusAlertManagerTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelPrometheusAlertManagerTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorNotificationChannelSlackTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelSlackTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorNotificationChannelSnsTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelSnsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorNotificationChannelTeamEmailTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelTeamEmailTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorNotificationChannelVictoropsTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelVictoropsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorNotificationChannelWebhookTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelWebhookTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureAgentlessScanningAssetsTimeouts {
    read?: string;
}

export interface GetSecureAgentlessScanningAssetsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureAwsMlPolicyTimeouts {
    read?: string;
}

export interface GetSecureAwsMlPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureCloudIngestionAssetsTimeouts {
    read?: string;
}

export interface GetSecureCloudIngestionAssetsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureCustomPolicyAction {
    captures?: inputs.GetSecureCustomPolicyActionCapture[];
    container?: string;
    killProcess?: string;
}

export interface GetSecureCustomPolicyActionArgs {
    captures?: pulumi.Input<pulumi.Input<inputs.GetSecureCustomPolicyActionCaptureArgs>[]>;
    container?: pulumi.Input<string>;
    killProcess?: pulumi.Input<string>;
}

export interface GetSecureCustomPolicyActionCapture {
    bucketName?: string;
    filter?: string;
    folder?: string;
    name?: string;
    secondsAfterEvent?: number;
    secondsBeforeEvent?: number;
}

export interface GetSecureCustomPolicyActionCaptureArgs {
    bucketName?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    folder?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    secondsAfterEvent?: pulumi.Input<number>;
    secondsBeforeEvent?: pulumi.Input<number>;
}

export interface GetSecureCustomPolicyTimeouts {
    read?: string;
}

export interface GetSecureCustomPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureCustomRolePermissionsTimeouts {
    read?: string;
}

export interface GetSecureCustomRolePermissionsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureDriftPolicyTimeouts {
    read?: string;
}

export interface GetSecureDriftPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureMalwarePolicyTimeouts {
    read?: string;
}

export interface GetSecureMalwarePolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureManagedPolicyAction {
    captures?: inputs.GetSecureManagedPolicyActionCapture[];
    container?: string;
    killProcess?: string;
}

export interface GetSecureManagedPolicyActionArgs {
    captures?: pulumi.Input<pulumi.Input<inputs.GetSecureManagedPolicyActionCaptureArgs>[]>;
    container?: pulumi.Input<string>;
    killProcess?: pulumi.Input<string>;
}

export interface GetSecureManagedPolicyActionCapture {
    bucketName?: string;
    filter?: string;
    folder?: string;
    name?: string;
    secondsAfterEvent?: number;
    secondsBeforeEvent?: number;
}

export interface GetSecureManagedPolicyActionCaptureArgs {
    bucketName?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    folder?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    secondsAfterEvent?: pulumi.Input<number>;
    secondsBeforeEvent?: pulumi.Input<number>;
}

export interface GetSecureManagedPolicyTimeouts {
    read?: string;
}

export interface GetSecureManagedPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureManagedRulesetAction {
    captures?: inputs.GetSecureManagedRulesetActionCapture[];
    container?: string;
    killProcess?: string;
}

export interface GetSecureManagedRulesetActionArgs {
    captures?: pulumi.Input<pulumi.Input<inputs.GetSecureManagedRulesetActionCaptureArgs>[]>;
    container?: pulumi.Input<string>;
    killProcess?: pulumi.Input<string>;
}

export interface GetSecureManagedRulesetActionCapture {
    bucketName?: string;
    filter?: string;
    folder?: string;
    name?: string;
    secondsAfterEvent?: number;
    secondsBeforeEvent?: number;
}

export interface GetSecureManagedRulesetActionCaptureArgs {
    bucketName?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    folder?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    secondsAfterEvent?: pulumi.Input<number>;
    secondsBeforeEvent?: pulumi.Input<number>;
}

export interface GetSecureManagedRulesetTimeouts {
    read?: string;
}

export interface GetSecureManagedRulesetTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureMlPolicyTimeouts {
    read?: string;
}

export interface GetSecureMlPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureNotificationChannelEmailTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelEmailTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureNotificationChannelMsteamsTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelMsteamsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureNotificationChannelOpsgenieTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelOpsgenieTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureNotificationChannelPagerdutyTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelPagerdutyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureNotificationChannelPrometheusAlertManagerTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelPrometheusAlertManagerTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureNotificationChannelSlackTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelSlackTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureNotificationChannelSnsTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelSnsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureNotificationChannelTeamEmailTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelTeamEmailTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureNotificationChannelTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureNotificationChannelVictoropsTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelVictoropsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureNotificationChannelWebhookTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelWebhookTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecurePosturePoliciesTimeouts {
    read?: string;
}

export interface GetSecurePosturePoliciesTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecurePosturePolicyGroup {
    description: string;
    groups?: inputs.GetSecurePosturePolicyGroupGroup[];
    id?: string;
    name: string;
    requirements?: inputs.GetSecurePosturePolicyGroupRequirement[];
}

export interface GetSecurePosturePolicyGroupArgs {
    description: pulumi.Input<string>;
    groups?: pulumi.Input<pulumi.Input<inputs.GetSecurePosturePolicyGroupGroupArgs>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    requirements?: pulumi.Input<pulumi.Input<inputs.GetSecurePosturePolicyGroupRequirementArgs>[]>;
}

export interface GetSecurePosturePolicyGroupGroup {
    description: string;
    groups?: inputs.GetSecurePosturePolicyGroupGroupGroup[];
    id?: string;
    name: string;
    requirements?: inputs.GetSecurePosturePolicyGroupGroupRequirement[];
}

export interface GetSecurePosturePolicyGroupGroupArgs {
    description: pulumi.Input<string>;
    groups?: pulumi.Input<pulumi.Input<inputs.GetSecurePosturePolicyGroupGroupGroupArgs>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    requirements?: pulumi.Input<pulumi.Input<inputs.GetSecurePosturePolicyGroupGroupRequirementArgs>[]>;
}

export interface GetSecurePosturePolicyGroupGroupGroup {
    description: string;
    groups?: inputs.GetSecurePosturePolicyGroupGroupGroupGroup[];
    id?: string;
    name: string;
    requirements?: inputs.GetSecurePosturePolicyGroupGroupGroupRequirement[];
}

export interface GetSecurePosturePolicyGroupGroupGroupArgs {
    description: pulumi.Input<string>;
    groups?: pulumi.Input<pulumi.Input<inputs.GetSecurePosturePolicyGroupGroupGroupGroupArgs>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    requirements?: pulumi.Input<pulumi.Input<inputs.GetSecurePosturePolicyGroupGroupGroupRequirementArgs>[]>;
}

export interface GetSecurePosturePolicyGroupGroupGroupGroup {
    description: string;
    groups?: inputs.GetSecurePosturePolicyGroupGroupGroupGroupGroup[];
    id?: string;
    name: string;
    requirements?: inputs.GetSecurePosturePolicyGroupGroupGroupGroupRequirement[];
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupArgs {
    description: pulumi.Input<string>;
    groups?: pulumi.Input<pulumi.Input<inputs.GetSecurePosturePolicyGroupGroupGroupGroupGroupArgs>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    requirements?: pulumi.Input<pulumi.Input<inputs.GetSecurePosturePolicyGroupGroupGroupGroupRequirementArgs>[]>;
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupGroup {
    description: string;
    id?: string;
    name: string;
    requirements?: inputs.GetSecurePosturePolicyGroupGroupGroupGroupGroupRequirement[];
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupGroupArgs {
    description: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    requirements?: pulumi.Input<pulumi.Input<inputs.GetSecurePosturePolicyGroupGroupGroupGroupGroupRequirementArgs>[]>;
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupGroupRequirement {
    controls?: inputs.GetSecurePosturePolicyGroupGroupGroupGroupGroupRequirementControl[];
    description: string;
    id?: string;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupGroupRequirementArgs {
    controls?: pulumi.Input<pulumi.Input<inputs.GetSecurePosturePolicyGroupGroupGroupGroupGroupRequirementControlArgs>[]>;
    description: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupGroupRequirementControlArgs {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupRequirement {
    controls?: inputs.GetSecurePosturePolicyGroupGroupGroupGroupRequirementControl[];
    description: string;
    id?: string;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupRequirementArgs {
    controls?: pulumi.Input<pulumi.Input<inputs.GetSecurePosturePolicyGroupGroupGroupGroupRequirementControlArgs>[]>;
    description: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupRequirementControlArgs {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface GetSecurePosturePolicyGroupGroupGroupRequirement {
    controls?: inputs.GetSecurePosturePolicyGroupGroupGroupRequirementControl[];
    description: string;
    id?: string;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupGroupRequirementArgs {
    controls?: pulumi.Input<pulumi.Input<inputs.GetSecurePosturePolicyGroupGroupGroupRequirementControlArgs>[]>;
    description: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface GetSecurePosturePolicyGroupGroupGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupGroupRequirementControlArgs {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface GetSecurePosturePolicyGroupGroupRequirement {
    controls?: inputs.GetSecurePosturePolicyGroupGroupRequirementControl[];
    description: string;
    id?: string;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupRequirementArgs {
    controls?: pulumi.Input<pulumi.Input<inputs.GetSecurePosturePolicyGroupGroupRequirementControlArgs>[]>;
    description: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface GetSecurePosturePolicyGroupGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupRequirementControlArgs {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface GetSecurePosturePolicyGroupRequirement {
    controls?: inputs.GetSecurePosturePolicyGroupRequirementControl[];
    description: string;
    id?: string;
    name: string;
}

export interface GetSecurePosturePolicyGroupRequirementArgs {
    controls?: pulumi.Input<pulumi.Input<inputs.GetSecurePosturePolicyGroupRequirementControlArgs>[]>;
    description: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface GetSecurePosturePolicyGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface GetSecurePosturePolicyGroupRequirementControlArgs {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface GetSecurePosturePolicyTimeouts {
    read?: string;
}

export interface GetSecurePosturePolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureRuleContainerTimeouts {
    read?: string;
}

export interface GetSecureRuleContainerTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureRuleFalcoCountTimeouts {
    read?: string;
}

export interface GetSecureRuleFalcoCountTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureRuleFalcoTimeouts {
    read?: string;
}

export interface GetSecureRuleFalcoTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureRuleFilesystemTimeouts {
    read?: string;
}

export interface GetSecureRuleFilesystemTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureRuleNetworkTimeouts {
    read?: string;
}

export interface GetSecureRuleNetworkTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureRuleNetworkUdp {
    matching?: boolean;
    ports?: number[];
}

export interface GetSecureRuleNetworkUdpArgs {
    matching?: pulumi.Input<boolean>;
    ports?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface GetSecureRuleProcessTimeouts {
    read?: string;
}

export interface GetSecureRuleProcessTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureRuleSyscallTimeouts {
    read?: string;
}

export interface GetSecureRuleSyscallTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureTenantExternalIdTimeouts {
    read?: string;
}

export interface GetSecureTenantExternalIdTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureTrustedAzureAppTimeouts {
    read?: string;
}

export interface GetSecureTrustedAzureAppTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecureTrustedCloudIdentityTimeouts {
    read?: string;
}

export interface GetSecureTrustedCloudIdentityTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetUserTimeouts {
    read?: string;
}

export interface GetUserTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GroupMappingConfigTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GroupMappingTeamMap {
    allTeams?: pulumi.Input<boolean>;
    teamIds?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface GroupMappingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertAnomalyCapture {
    duration: pulumi.Input<number>;
    filename: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
}

export interface MonitorAlertAnomalyCustomNotification {
    append?: pulumi.Input<string>;
    prepend?: pulumi.Input<string>;
    title: pulumi.Input<string>;
}

export interface MonitorAlertAnomalyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertDowntimeCapture {
    duration: pulumi.Input<number>;
    filename: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
}

export interface MonitorAlertDowntimeCustomNotification {
    append?: pulumi.Input<string>;
    prepend?: pulumi.Input<string>;
    title: pulumi.Input<string>;
}

export interface MonitorAlertDowntimeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertEventCapture {
    duration: pulumi.Input<number>;
    filename: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
}

export interface MonitorAlertEventCustomNotification {
    append?: pulumi.Input<string>;
    prepend?: pulumi.Input<string>;
    title: pulumi.Input<string>;
}

export interface MonitorAlertEventTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertGroupOutlierCapture {
    duration: pulumi.Input<number>;
    filename: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
}

export interface MonitorAlertGroupOutlierCustomNotification {
    append?: pulumi.Input<string>;
    prepend?: pulumi.Input<string>;
    title: pulumi.Input<string>;
}

export interface MonitorAlertGroupOutlierTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertMetricCapture {
    duration: pulumi.Input<number>;
    filename: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
}

export interface MonitorAlertMetricCustomNotification {
    append?: pulumi.Input<string>;
    prepend?: pulumi.Input<string>;
    title: pulumi.Input<string>;
}

export interface MonitorAlertMetricTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertPromqlCapture {
    duration: pulumi.Input<number>;
    filename: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
}

export interface MonitorAlertPromqlCustomNotification {
    append?: pulumi.Input<string>;
    prepend?: pulumi.Input<string>;
    title: pulumi.Input<string>;
}

export interface MonitorAlertPromqlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertV2ChangeCapture {
    durationSeconds?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    filename: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    storage?: pulumi.Input<string>;
}

export interface MonitorAlertV2ChangeCustomNotification {
    append?: pulumi.Input<string>;
    prepend?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
}

export interface MonitorAlertV2ChangeLink {
    href?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MonitorAlertV2ChangeNotificationChannel {
    id: pulumi.Input<number>;
    mainThreshold?: pulumi.Input<boolean>;
    notifyOnResolve?: pulumi.Input<boolean>;
    renotifyEveryMinutes?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    type?: pulumi.Input<string>;
    warningThreshold?: pulumi.Input<boolean>;
}

export interface MonitorAlertV2ChangeScope {
    label: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertV2ChangeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertV2DowntimeCapture {
    durationSeconds?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    filename: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    storage?: pulumi.Input<string>;
}

export interface MonitorAlertV2DowntimeCustomNotification {
    append?: pulumi.Input<string>;
    prepend?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
}

export interface MonitorAlertV2DowntimeLink {
    href?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MonitorAlertV2DowntimeNotificationChannel {
    id: pulumi.Input<number>;
    mainThreshold?: pulumi.Input<boolean>;
    notifyOnResolve?: pulumi.Input<boolean>;
    renotifyEveryMinutes?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    type?: pulumi.Input<string>;
    warningThreshold?: pulumi.Input<boolean>;
}

export interface MonitorAlertV2DowntimeScope {
    label: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertV2DowntimeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertV2EventCapture {
    durationSeconds?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    filename: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    storage?: pulumi.Input<string>;
}

export interface MonitorAlertV2EventCustomNotification {
    append?: pulumi.Input<string>;
    prepend?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
}

export interface MonitorAlertV2EventLink {
    href?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MonitorAlertV2EventNotificationChannel {
    id: pulumi.Input<number>;
    mainThreshold?: pulumi.Input<boolean>;
    notifyOnResolve?: pulumi.Input<boolean>;
    renotifyEveryMinutes?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    type?: pulumi.Input<string>;
    warningThreshold?: pulumi.Input<boolean>;
}

export interface MonitorAlertV2EventScope {
    label: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertV2EventTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertV2FormBasedPrometheusCapture {
    durationSeconds?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    filename: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    storage?: pulumi.Input<string>;
}

export interface MonitorAlertV2FormBasedPrometheusCustomNotification {
    append?: pulumi.Input<string>;
    prepend?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
}

export interface MonitorAlertV2FormBasedPrometheusLink {
    href?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MonitorAlertV2FormBasedPrometheusNotificationChannel {
    id: pulumi.Input<number>;
    mainThreshold?: pulumi.Input<boolean>;
    notifyOnResolve?: pulumi.Input<boolean>;
    renotifyEveryMinutes?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    type?: pulumi.Input<string>;
    warningThreshold?: pulumi.Input<boolean>;
}

export interface MonitorAlertV2FormBasedPrometheusScope {
    label: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertV2FormBasedPrometheusTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertV2GroupOutlierCapture {
    durationSeconds?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    filename: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    storage?: pulumi.Input<string>;
}

export interface MonitorAlertV2GroupOutlierCustomNotification {
    append?: pulumi.Input<string>;
    prepend?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
}

export interface MonitorAlertV2GroupOutlierLink {
    href?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MonitorAlertV2GroupOutlierNotificationChannel {
    id: pulumi.Input<number>;
    mainThreshold?: pulumi.Input<boolean>;
    notifyOnResolve?: pulumi.Input<boolean>;
    renotifyEveryMinutes?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    type?: pulumi.Input<string>;
    warningThreshold?: pulumi.Input<boolean>;
}

export interface MonitorAlertV2GroupOutlierScope {
    label: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertV2GroupOutlierTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertV2MetricCapture {
    durationSeconds?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    filename: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    storage?: pulumi.Input<string>;
}

export interface MonitorAlertV2MetricCustomNotification {
    append?: pulumi.Input<string>;
    prepend?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
}

export interface MonitorAlertV2MetricLink {
    href?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MonitorAlertV2MetricNotificationChannel {
    id: pulumi.Input<number>;
    mainThreshold?: pulumi.Input<boolean>;
    notifyOnResolve?: pulumi.Input<boolean>;
    renotifyEveryMinutes?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    type?: pulumi.Input<string>;
    warningThreshold?: pulumi.Input<boolean>;
}

export interface MonitorAlertV2MetricScope {
    label: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertV2MetricTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertV2PrometheusCapture {
    durationSeconds?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    filename: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    storage?: pulumi.Input<string>;
}

export interface MonitorAlertV2PrometheusCustomNotification {
    append?: pulumi.Input<string>;
    prepend?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
}

export interface MonitorAlertV2PrometheusLink {
    href?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MonitorAlertV2PrometheusNotificationChannel {
    id: pulumi.Input<number>;
    mainThreshold?: pulumi.Input<boolean>;
    notifyOnResolve?: pulumi.Input<boolean>;
    renotifyEveryMinutes?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    type?: pulumi.Input<string>;
    warningThreshold?: pulumi.Input<boolean>;
}

export interface MonitorAlertV2PrometheusTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorCloudAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorDashboardPanel {
    autosizeText?: pulumi.Input<boolean>;
    content?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    height: pulumi.Input<number>;
    legend?: pulumi.Input<inputs.MonitorDashboardPanelLegend>;
    name: pulumi.Input<string>;
    posX: pulumi.Input<number>;
    posY: pulumi.Input<number>;
    queries?: pulumi.Input<pulumi.Input<inputs.MonitorDashboardPanelQuery>[]>;
    transparentBackground?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    visibleTitle?: pulumi.Input<boolean>;
    width: pulumi.Input<number>;
}

export interface MonitorDashboardPanelLegend {
    enabled?: pulumi.Input<boolean>;
    layout: pulumi.Input<string>;
    position: pulumi.Input<string>;
    showCurrent: pulumi.Input<boolean>;
}

export interface MonitorDashboardPanelQuery {
    displayInfos?: pulumi.Input<pulumi.Input<inputs.MonitorDashboardPanelQueryDisplayInfo>[]>;
    format?: pulumi.Input<inputs.MonitorDashboardPanelQueryFormat>;
    promql: pulumi.Input<string>;
    unit: pulumi.Input<string>;
}

export interface MonitorDashboardPanelQueryDisplayInfo {
    displayName?: pulumi.Input<string>;
    timeSeriesDisplayNameTemplate: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MonitorDashboardPanelQueryFormat {
    decimals?: pulumi.Input<number>;
    displayFormat: pulumi.Input<string>;
    inputFormat: pulumi.Input<string>;
    minInterval?: pulumi.Input<string>;
    nullValueDisplayMode?: pulumi.Input<string>;
    yAxis: pulumi.Input<string>;
}

export interface MonitorDashboardScope {
    comparator?: pulumi.Input<string>;
    metric: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
    variable?: pulumi.Input<string>;
}

export interface MonitorDashboardShare {
    member: pulumi.Input<inputs.MonitorDashboardShareMember>;
    role: pulumi.Input<string>;
}

export interface MonitorDashboardShareMember {
    id: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface MonitorDashboardTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorInhibitionRuleSourceMatcher {
    labelName: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface MonitorInhibitionRuleTargetMatcher {
    labelName: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface MonitorInhibitionRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorNotificationChannelCustomWebhookTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorNotificationChannelEmailTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorNotificationChannelGoogleChatTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorNotificationChannelIbmEventNotificationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorNotificationChannelIbmFunctionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorNotificationChannelMsteamsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorNotificationChannelOpsgenieTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorNotificationChannelPagerdutyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorNotificationChannelPrometheusAlertManagerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorNotificationChannelSlackTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorNotificationChannelSnsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorNotificationChannelTeamEmailTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorNotificationChannelVictoropsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorNotificationChannelWebhookTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorSilenceRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorTeamEntrypoint {
    selection?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MonitorTeamTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorTeamUserRole {
    email: pulumi.Input<string>;
    role?: pulumi.Input<string>;
}

export interface SecureAwsMlPolicyRule {
    anomalousConsoleLogin?: pulumi.Input<inputs.SecureAwsMlPolicyRuleAnomalousConsoleLogin>;
    description: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    version?: pulumi.Input<number>;
}

export interface SecureAwsMlPolicyRuleAnomalousConsoleLogin {
    enabled?: pulumi.Input<boolean>;
    threshold: pulumi.Input<number>;
}

export interface SecureAwsMlPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureCloudAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureCloudAuthAccountComponent {
    cloudConnectorMetadata?: pulumi.Input<string>;
    cloudLogsMetadata?: pulumi.Input<string>;
    cryptoKeyMetadata?: pulumi.Input<string>;
    eventBridgeMetadata?: pulumi.Input<string>;
    instance: pulumi.Input<string>;
    servicePrincipalMetadata?: pulumi.Input<string>;
    trustedRoleMetadata?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    webhookDatasourceMetadata?: pulumi.Input<string>;
}

export interface SecureCloudAuthAccountComponentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureCloudAuthAccountFeature {
    monitorCloudMetrics?: pulumi.Input<pulumi.Input<inputs.SecureCloudAuthAccountFeatureMonitorCloudMetric>[]>;
    secureAgentlessScannings?: pulumi.Input<pulumi.Input<inputs.SecureCloudAuthAccountFeatureSecureAgentlessScanning>[]>;
    secureConfigPostures?: pulumi.Input<pulumi.Input<inputs.SecureCloudAuthAccountFeatureSecureConfigPosture>[]>;
    secureIdentityEntitlements?: pulumi.Input<pulumi.Input<inputs.SecureCloudAuthAccountFeatureSecureIdentityEntitlement>[]>;
    secureThreatDetections?: pulumi.Input<pulumi.Input<inputs.SecureCloudAuthAccountFeatureSecureThreatDetection>[]>;
}

export interface SecureCloudAuthAccountFeatureMonitorCloudMetric {
    components?: pulumi.Input<pulumi.Input<string>[]>;
    enabled: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
}

export interface SecureCloudAuthAccountFeatureSecureAgentlessScanning {
    components?: pulumi.Input<pulumi.Input<string>[]>;
    enabled: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
}

export interface SecureCloudAuthAccountFeatureSecureConfigPosture {
    components?: pulumi.Input<pulumi.Input<string>[]>;
    enabled: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
}

export interface SecureCloudAuthAccountFeatureSecureIdentityEntitlement {
    components?: pulumi.Input<pulumi.Input<string>[]>;
    enabled: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
}

export interface SecureCloudAuthAccountFeatureSecureThreatDetection {
    components?: pulumi.Input<pulumi.Input<string>[]>;
    enabled: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
}

export interface SecureCloudAuthAccountFeatureTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureCloudAuthAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureCustomPolicyAction {
    captures?: pulumi.Input<pulumi.Input<inputs.SecureCustomPolicyActionCapture>[]>;
    container?: pulumi.Input<string>;
    killProcess?: pulumi.Input<boolean>;
}

export interface SecureCustomPolicyActionCapture {
    bucketName?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    folder?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    secondsAfterEvent: pulumi.Input<number>;
    secondsBeforeEvent: pulumi.Input<number>;
}

export interface SecureCustomPolicyRule {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface SecureCustomPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureDriftPolicyAction {
    captures?: pulumi.Input<pulumi.Input<inputs.SecureDriftPolicyActionCapture>[]>;
    container?: pulumi.Input<string>;
    preventDrift?: pulumi.Input<boolean>;
}

export interface SecureDriftPolicyActionCapture {
    bucketName?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    folder?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    secondsAfterEvent: pulumi.Input<number>;
    secondsBeforeEvent: pulumi.Input<number>;
}

export interface SecureDriftPolicyRule {
    description: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    exceptions?: pulumi.Input<inputs.SecureDriftPolicyRuleExceptions>;
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    prohibitedBinaries?: pulumi.Input<inputs.SecureDriftPolicyRuleProhibitedBinaries>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    version?: pulumi.Input<number>;
}

export interface SecureDriftPolicyRuleExceptions {
    items: pulumi.Input<pulumi.Input<string>[]>;
    matchItems?: pulumi.Input<boolean>;
}

export interface SecureDriftPolicyRuleProhibitedBinaries {
    items: pulumi.Input<pulumi.Input<string>[]>;
    matchItems?: pulumi.Input<boolean>;
}

export interface SecureDriftPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureListTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureMacroTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureMalwarePolicyAction {
    captures?: pulumi.Input<pulumi.Input<inputs.SecureMalwarePolicyActionCapture>[]>;
    container?: pulumi.Input<string>;
    preventMalware?: pulumi.Input<boolean>;
}

export interface SecureMalwarePolicyActionCapture {
    bucketName?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    folder?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    secondsAfterEvent: pulumi.Input<number>;
    secondsBeforeEvent: pulumi.Input<number>;
}

export interface SecureMalwarePolicyRule {
    additionalHashes?: pulumi.Input<pulumi.Input<inputs.SecureMalwarePolicyRuleAdditionalHash>[]>;
    description: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    ignoreHashes?: pulumi.Input<pulumi.Input<inputs.SecureMalwarePolicyRuleIgnoreHash>[]>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    useManagedHashes?: pulumi.Input<boolean>;
    version?: pulumi.Input<number>;
}

export interface SecureMalwarePolicyRuleAdditionalHash {
    hash: pulumi.Input<string>;
}

export interface SecureMalwarePolicyRuleIgnoreHash {
    hash: pulumi.Input<string>;
}

export interface SecureMalwarePolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureManagedPolicyAction {
    captures?: pulumi.Input<pulumi.Input<inputs.SecureManagedPolicyActionCapture>[]>;
    container?: pulumi.Input<string>;
    killProcess?: pulumi.Input<boolean>;
}

export interface SecureManagedPolicyActionCapture {
    bucketName?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    folder?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    secondsAfterEvent: pulumi.Input<number>;
    secondsBeforeEvent: pulumi.Input<number>;
}

export interface SecureManagedPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureManagedRulesetAction {
    captures?: pulumi.Input<pulumi.Input<inputs.SecureManagedRulesetActionCapture>[]>;
    container?: pulumi.Input<string>;
    killProcess?: pulumi.Input<boolean>;
}

export interface SecureManagedRulesetActionCapture {
    bucketName?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    folder?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    secondsAfterEvent: pulumi.Input<number>;
    secondsBeforeEvent: pulumi.Input<number>;
}

export interface SecureManagedRulesetInheritedFrom {
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface SecureManagedRulesetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureMlPolicyRule {
    cryptominingTrigger?: pulumi.Input<inputs.SecureMlPolicyRuleCryptominingTrigger>;
    description: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    version?: pulumi.Input<number>;
}

export interface SecureMlPolicyRuleCryptominingTrigger {
    enabled?: pulumi.Input<boolean>;
    threshold: pulumi.Input<number>;
}

export interface SecureMlPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureNotificationChannelEmailTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureNotificationChannelMsteamsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureNotificationChannelOpsgenieTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureNotificationChannelPagerdutyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureNotificationChannelPrometheusAlertManagerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureNotificationChannelSlackTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureNotificationChannelSnsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureNotificationChannelTeamEmailTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureNotificationChannelVictoropsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureNotificationChannelWebhookTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureOrganizationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecurePolicyAction {
    captures?: pulumi.Input<pulumi.Input<inputs.SecurePolicyActionCapture>[]>;
    container?: pulumi.Input<string>;
    killProcess?: pulumi.Input<boolean>;
}

export interface SecurePolicyActionCapture {
    bucketName?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    folder?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    secondsAfterEvent: pulumi.Input<number>;
    secondsBeforeEvent: pulumi.Input<number>;
}

export interface SecurePolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecurePostureControlTimeouts {
    create?: pulumi.Input<string>;
}

export interface SecurePosturePolicyGroup {
    description: pulumi.Input<string>;
    groups?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroupGroup>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    requirements?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroupRequirement>[]>;
}

export interface SecurePosturePolicyGroupGroup {
    description: pulumi.Input<string>;
    groups?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroupGroupGroup>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    requirements?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroupGroupRequirement>[]>;
}

export interface SecurePosturePolicyGroupGroupGroup {
    description: pulumi.Input<string>;
    groups?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroupGroupGroupGroup>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    requirements?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroupGroupGroupRequirement>[]>;
}

export interface SecurePosturePolicyGroupGroupGroupGroup {
    description: pulumi.Input<string>;
    groups?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroupGroupGroupGroupGroup>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    requirements?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroupGroupGroupGroupRequirement>[]>;
}

export interface SecurePosturePolicyGroupGroupGroupGroupGroup {
    description: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    requirements?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroupGroupGroupGroupGroupRequirement>[]>;
}

export interface SecurePosturePolicyGroupGroupGroupGroupGroupRequirement {
    controls?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroupGroupGroupGroupGroupRequirementControl>[]>;
    description: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface SecurePosturePolicyGroupGroupGroupGroupGroupRequirementControl {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface SecurePosturePolicyGroupGroupGroupGroupRequirement {
    controls?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroupGroupGroupGroupRequirementControl>[]>;
    description: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface SecurePosturePolicyGroupGroupGroupGroupRequirementControl {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface SecurePosturePolicyGroupGroupGroupRequirement {
    controls?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroupGroupGroupRequirementControl>[]>;
    description: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface SecurePosturePolicyGroupGroupGroupRequirementControl {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface SecurePosturePolicyGroupGroupRequirement {
    controls?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroupGroupRequirementControl>[]>;
    description: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface SecurePosturePolicyGroupGroupRequirementControl {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface SecurePosturePolicyGroupRequirement {
    controls?: pulumi.Input<pulumi.Input<inputs.SecurePosturePolicyGroupRequirementControl>[]>;
    description: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface SecurePosturePolicyGroupRequirementControl {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface SecurePosturePolicyTarget {
    maxVersion?: pulumi.Input<number>;
    minVersion?: pulumi.Input<number>;
    platform?: pulumi.Input<string>;
}

export interface SecurePosturePolicyTimeouts {
    create?: pulumi.Input<string>;
}

export interface SecurePostureZoneScopes {
    scopes: pulumi.Input<pulumi.Input<inputs.SecurePostureZoneScopesScope>[]>;
}

export interface SecurePostureZoneScopesScope {
    rules?: pulumi.Input<string>;
    targetType: pulumi.Input<string>;
}

export interface SecurePostureZoneTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureRuleContainerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureRuleFalcoException {
    comps?: pulumi.Input<pulumi.Input<string>[]>;
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    values: pulumi.Input<string>;
}

export interface SecureRuleFalcoTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureRuleFilesystemReadOnly {
    matching?: pulumi.Input<boolean>;
    paths: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SecureRuleFilesystemReadWrite {
    matching?: pulumi.Input<boolean>;
    paths: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SecureRuleFilesystemTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureRuleNetworkTcp {
    matching?: pulumi.Input<boolean>;
    ports: pulumi.Input<pulumi.Input<number>[]>;
}

export interface SecureRuleNetworkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureRuleNetworkUdp {
    matching?: pulumi.Input<boolean>;
    ports: pulumi.Input<pulumi.Input<number>[]>;
}

export interface SecureRuleProcessTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureRuleSyscallTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureScanningPolicyAssignmentItem {
    id?: pulumi.Input<string>;
    image: pulumi.Input<inputs.SecureScanningPolicyAssignmentItemImage>;
    name?: pulumi.Input<string>;
    policyIds: pulumi.Input<pulumi.Input<string>[]>;
    registry: pulumi.Input<string>;
    repository: pulumi.Input<string>;
    whitelistIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SecureScanningPolicyAssignmentItemImage {
    type?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface SecureScanningPolicyAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureScanningPolicyRule {
    action: pulumi.Input<string>;
    gate: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    params: pulumi.Input<pulumi.Input<inputs.SecureScanningPolicyRuleParam>[]>;
    trigger: pulumi.Input<string>;
}

export interface SecureScanningPolicyRuleParam {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface SecureScanningPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureTeamTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureTeamUserRole {
    email: pulumi.Input<string>;
    role?: pulumi.Input<string>;
}

export interface SecureVulnerabilityExceptionListTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecureVulnerabilityExceptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface TeamServiceAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface UserTimeouts {
    create?: pulumi.Input<string>;
}
