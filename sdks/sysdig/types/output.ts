// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AgentAccessKeyTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface CustomRolePermissions {
    monitorPermissions?: string[];
    securePermissions?: string[];
}

export interface CustomRoleTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface GetAgentAccessKeyTimeouts {
    read?: string;
}

export interface GetCurrentUserTimeouts {
    read?: string;
}

export interface GetCustomRoleTimeouts {
    read?: string;
}

export interface GetFargateWorkloadAgentLogConfiguration {
    /**
     * The log group where the awslogs driver will send log streams
     */
    group: string;
    /**
     * Region for the log group
     */
    region: string;
    /**
     * Prefix for the instrumentation log stream
     */
    streamPrefix: string;
}

export interface GetMonitorCustomRolePermissionsTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelCustomWebhookTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelEmailTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelGoogleChatTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelIbmEventNotificationTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelIbmFunctionTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelMsteamsTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelOpsgenieTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelPagerdutyTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelPrometheusAlertManagerTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelSlackTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelSnsTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelTeamEmailTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelVictoropsTimeouts {
    read?: string;
}

export interface GetMonitorNotificationChannelWebhookTimeouts {
    read?: string;
}

export interface GetSecureAgentlessScanningAssetsTimeouts {
    read?: string;
}

export interface GetSecureAwsMlPolicyRule {
    anomalousConsoleLogins: outputs.GetSecureAwsMlPolicyRuleAnomalousConsoleLogin[];
    description: string;
    id: number;
    name: string;
    tags: string[];
    version: number;
}

export interface GetSecureAwsMlPolicyRuleAnomalousConsoleLogin {
    enabled: boolean;
    threshold: number;
}

export interface GetSecureAwsMlPolicyTimeouts {
    read?: string;
}

export interface GetSecureCloudIngestionAssetsTimeouts {
    read?: string;
}

export interface GetSecureCustomPolicyAction {
    captures?: outputs.GetSecureCustomPolicyActionCapture[];
    container: string;
    killProcess: string;
}

export interface GetSecureCustomPolicyActionCapture {
    bucketName: string;
    filter: string;
    folder: string;
    name: string;
    secondsAfterEvent: number;
    secondsBeforeEvent: number;
}

export interface GetSecureCustomPolicyRule {
    enabled: boolean;
    name: string;
}

export interface GetSecureCustomPolicyTimeouts {
    read?: string;
}

export interface GetSecureCustomRolePermissionsTimeouts {
    read?: string;
}

export interface GetSecureDriftPolicyAction {
    captures: outputs.GetSecureDriftPolicyActionCapture[];
    container: string;
    preventDrift: boolean;
}

export interface GetSecureDriftPolicyActionCapture {
    bucketName: string;
    filter: string;
    folder: string;
    name: string;
    secondsAfterEvent: number;
    secondsBeforeEvent: number;
}

export interface GetSecureDriftPolicyRule {
    description: string;
    enabled: boolean;
    exceptions: outputs.GetSecureDriftPolicyRuleException[];
    id: number;
    name: string;
    prohibitedBinaries: outputs.GetSecureDriftPolicyRuleProhibitedBinary[];
    tags: string[];
    version: number;
}

export interface GetSecureDriftPolicyRuleException {
    items: string[];
    matchItems: boolean;
}

export interface GetSecureDriftPolicyRuleProhibitedBinary {
    items: string[];
    matchItems: boolean;
}

export interface GetSecureDriftPolicyTimeouts {
    read?: string;
}

export interface GetSecureMalwarePolicyAction {
    captures: outputs.GetSecureMalwarePolicyActionCapture[];
    container: string;
    preventMalware: boolean;
}

export interface GetSecureMalwarePolicyActionCapture {
    bucketName: string;
    filter: string;
    folder: string;
    name: string;
    secondsAfterEvent: number;
    secondsBeforeEvent: number;
}

export interface GetSecureMalwarePolicyRule {
    additionalHashes: outputs.GetSecureMalwarePolicyRuleAdditionalHash[];
    description: string;
    id: number;
    ignoreHashes: outputs.GetSecureMalwarePolicyRuleIgnoreHash[];
    name: string;
    tags: string[];
    useManagedHashes: boolean;
    version: number;
}

export interface GetSecureMalwarePolicyRuleAdditionalHash {
    hash: string;
}

export interface GetSecureMalwarePolicyRuleIgnoreHash {
    hash: string;
}

export interface GetSecureMalwarePolicyTimeouts {
    read?: string;
}

export interface GetSecureManagedPolicyAction {
    captures?: outputs.GetSecureManagedPolicyActionCapture[];
    container: string;
    killProcess: string;
}

export interface GetSecureManagedPolicyActionCapture {
    bucketName: string;
    filter: string;
    folder: string;
    name: string;
    secondsAfterEvent: number;
    secondsBeforeEvent: number;
}

export interface GetSecureManagedPolicyRule {
    enabled: boolean;
    name: string;
}

export interface GetSecureManagedPolicyTimeouts {
    read?: string;
}

export interface GetSecureManagedRulesetAction {
    captures?: outputs.GetSecureManagedRulesetActionCapture[];
    container: string;
    killProcess: string;
}

export interface GetSecureManagedRulesetActionCapture {
    bucketName: string;
    filter: string;
    folder: string;
    name: string;
    secondsAfterEvent: number;
    secondsBeforeEvent: number;
}

export interface GetSecureManagedRulesetRule {
    enabled: boolean;
    name: string;
}

export interface GetSecureManagedRulesetTimeouts {
    read?: string;
}

export interface GetSecureMlPolicyRule {
    cryptominingTriggers: outputs.GetSecureMlPolicyRuleCryptominingTrigger[];
    description: string;
    id: number;
    name: string;
    tags: string[];
    version: number;
}

export interface GetSecureMlPolicyRuleCryptominingTrigger {
    enabled: boolean;
    threshold: number;
}

export interface GetSecureMlPolicyTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelEmailTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelMsteamsTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelOpsgenieTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelPagerdutyTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelPrometheusAlertManagerTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelSlackTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelSnsTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelTeamEmailTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelVictoropsTimeouts {
    read?: string;
}

export interface GetSecureNotificationChannelWebhookTimeouts {
    read?: string;
}

export interface GetSecurePosturePoliciesPolicy {
    authors: string;
    description: string;
    id: number;
    isActive: boolean;
    isCustom: boolean;
    kind: number;
    link: string;
    maxKubeVersion: number;
    minKubeVersion: number;
    name: string;
    platform: string;
    publishedDate: string;
    type: number;
    version: string;
    zones: outputs.GetSecurePosturePoliciesPolicyZone[];
}

export interface GetSecurePosturePoliciesPolicyZone {
    id: string;
    name: string;
}

export interface GetSecurePosturePoliciesTimeouts {
    read?: string;
}

export interface GetSecurePosturePolicyGroup {
    description: string;
    groups?: outputs.GetSecurePosturePolicyGroupGroup[];
    id: string;
    name: string;
    requirements?: outputs.GetSecurePosturePolicyGroupRequirement[];
}

export interface GetSecurePosturePolicyGroupGroup {
    description: string;
    groups?: outputs.GetSecurePosturePolicyGroupGroupGroup[];
    id: string;
    name: string;
    requirements?: outputs.GetSecurePosturePolicyGroupGroupRequirement[];
}

export interface GetSecurePosturePolicyGroupGroupGroup {
    description: string;
    groups?: outputs.GetSecurePosturePolicyGroupGroupGroupGroup[];
    id: string;
    name: string;
    requirements?: outputs.GetSecurePosturePolicyGroupGroupGroupRequirement[];
}

export interface GetSecurePosturePolicyGroupGroupGroupGroup {
    description: string;
    groups?: outputs.GetSecurePosturePolicyGroupGroupGroupGroupGroup[];
    id: string;
    name: string;
    requirements?: outputs.GetSecurePosturePolicyGroupGroupGroupGroupRequirement[];
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupGroup {
    description: string;
    id: string;
    name: string;
    requirements?: outputs.GetSecurePosturePolicyGroupGroupGroupGroupGroupRequirement[];
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupGroupRequirement {
    controls?: outputs.GetSecurePosturePolicyGroupGroupGroupGroupGroupRequirementControl[];
    description: string;
    id: string;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupRequirement {
    controls?: outputs.GetSecurePosturePolicyGroupGroupGroupGroupRequirementControl[];
    description: string;
    id: string;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupGroupGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupGroupRequirement {
    controls?: outputs.GetSecurePosturePolicyGroupGroupGroupRequirementControl[];
    description: string;
    id: string;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupRequirement {
    controls?: outputs.GetSecurePosturePolicyGroupGroupRequirementControl[];
    description: string;
    id: string;
    name: string;
}

export interface GetSecurePosturePolicyGroupGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface GetSecurePosturePolicyGroupRequirement {
    controls?: outputs.GetSecurePosturePolicyGroupRequirementControl[];
    description: string;
    id: string;
    name: string;
}

export interface GetSecurePosturePolicyGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface GetSecurePosturePolicyTimeouts {
    read?: string;
}

export interface GetSecureRuleContainerTimeouts {
    read?: string;
}

export interface GetSecureRuleFalcoCountTimeouts {
    read?: string;
}

export interface GetSecureRuleFalcoException {
    comps: string[];
    fields: string[];
    name: string;
    values: string;
}

export interface GetSecureRuleFalcoTimeouts {
    read?: string;
}

export interface GetSecureRuleFilesystemReadOnly {
    matching: boolean;
    paths: string[];
}

export interface GetSecureRuleFilesystemReadWrite {
    matching: boolean;
    paths: string[];
}

export interface GetSecureRuleFilesystemTimeouts {
    read?: string;
}

export interface GetSecureRuleNetworkTcp {
    matching: boolean;
    ports: number[];
}

export interface GetSecureRuleNetworkTimeouts {
    read?: string;
}

export interface GetSecureRuleNetworkUdp {
    matching: boolean;
    ports: number[];
}

export interface GetSecureRuleProcessTimeouts {
    read?: string;
}

export interface GetSecureRuleSyscallTimeouts {
    read?: string;
}

export interface GetSecureTenantExternalIdTimeouts {
    read?: string;
}

export interface GetSecureTrustedAzureAppTimeouts {
    read?: string;
}

export interface GetSecureTrustedCloudIdentityTimeouts {
    read?: string;
}

export interface GetUserTimeouts {
    read?: string;
}

export interface GroupMappingConfigTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface GroupMappingTeamMap {
    allTeams?: boolean;
    teamIds?: number[];
}

export interface GroupMappingTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorAlertAnomalyCapture {
    duration: number;
    filename: string;
    filter?: string;
}

export interface MonitorAlertAnomalyCustomNotification {
    append?: string;
    prepend?: string;
    title: string;
}

export interface MonitorAlertAnomalyTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorAlertDowntimeCapture {
    duration: number;
    filename: string;
    filter?: string;
}

export interface MonitorAlertDowntimeCustomNotification {
    append?: string;
    prepend?: string;
    title: string;
}

export interface MonitorAlertDowntimeTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorAlertEventCapture {
    duration: number;
    filename: string;
    filter?: string;
}

export interface MonitorAlertEventCustomNotification {
    append?: string;
    prepend?: string;
    title: string;
}

export interface MonitorAlertEventTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorAlertGroupOutlierCapture {
    duration: number;
    filename: string;
    filter?: string;
}

export interface MonitorAlertGroupOutlierCustomNotification {
    append?: string;
    prepend?: string;
    title: string;
}

export interface MonitorAlertGroupOutlierTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorAlertMetricCapture {
    duration: number;
    filename: string;
    filter?: string;
}

export interface MonitorAlertMetricCustomNotification {
    append?: string;
    prepend?: string;
    title: string;
}

export interface MonitorAlertMetricTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorAlertPromqlCapture {
    duration: number;
    filename: string;
    filter?: string;
}

export interface MonitorAlertPromqlCustomNotification {
    append?: string;
    prepend?: string;
    title: string;
}

export interface MonitorAlertPromqlTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorAlertV2ChangeCapture {
    durationSeconds?: number;
    enabled?: boolean;
    filename: string;
    filter?: string;
    storage?: string;
}

export interface MonitorAlertV2ChangeCustomNotification {
    append?: string;
    prepend?: string;
    subject?: string;
}

export interface MonitorAlertV2ChangeLink {
    href?: string;
    id?: string;
    type: string;
}

export interface MonitorAlertV2ChangeNotificationChannel {
    id: number;
    mainThreshold?: boolean;
    notifyOnResolve?: boolean;
    renotifyEveryMinutes?: number;
    /**
     * @deprecated Deprecated
     */
    type?: string;
    warningThreshold?: boolean;
}

export interface MonitorAlertV2ChangeScope {
    label: string;
    operator: string;
    values: string[];
}

export interface MonitorAlertV2ChangeTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorAlertV2DowntimeCapture {
    durationSeconds?: number;
    enabled?: boolean;
    filename: string;
    filter?: string;
    storage?: string;
}

export interface MonitorAlertV2DowntimeCustomNotification {
    append?: string;
    prepend?: string;
    subject?: string;
}

export interface MonitorAlertV2DowntimeLink {
    href?: string;
    id?: string;
    type: string;
}

export interface MonitorAlertV2DowntimeNotificationChannel {
    id: number;
    mainThreshold?: boolean;
    notifyOnResolve?: boolean;
    renotifyEveryMinutes?: number;
    /**
     * @deprecated Deprecated
     */
    type?: string;
    warningThreshold?: boolean;
}

export interface MonitorAlertV2DowntimeScope {
    label: string;
    operator: string;
    values: string[];
}

export interface MonitorAlertV2DowntimeTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorAlertV2EventCapture {
    durationSeconds?: number;
    enabled?: boolean;
    filename: string;
    filter?: string;
    storage?: string;
}

export interface MonitorAlertV2EventCustomNotification {
    append?: string;
    prepend?: string;
    subject?: string;
}

export interface MonitorAlertV2EventLink {
    href?: string;
    id?: string;
    type: string;
}

export interface MonitorAlertV2EventNotificationChannel {
    id: number;
    mainThreshold?: boolean;
    notifyOnResolve?: boolean;
    renotifyEveryMinutes?: number;
    /**
     * @deprecated Deprecated
     */
    type?: string;
    warningThreshold?: boolean;
}

export interface MonitorAlertV2EventScope {
    label: string;
    operator: string;
    values: string[];
}

export interface MonitorAlertV2EventTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorAlertV2FormBasedPrometheusCapture {
    durationSeconds?: number;
    enabled?: boolean;
    filename: string;
    filter?: string;
    storage?: string;
}

export interface MonitorAlertV2FormBasedPrometheusCustomNotification {
    append?: string;
    prepend?: string;
    subject?: string;
}

export interface MonitorAlertV2FormBasedPrometheusLink {
    href?: string;
    id?: string;
    type: string;
}

export interface MonitorAlertV2FormBasedPrometheusNotificationChannel {
    id: number;
    mainThreshold?: boolean;
    notifyOnResolve?: boolean;
    renotifyEveryMinutes?: number;
    /**
     * @deprecated Deprecated
     */
    type?: string;
    warningThreshold?: boolean;
}

export interface MonitorAlertV2FormBasedPrometheusScope {
    label: string;
    operator: string;
    values: string[];
}

export interface MonitorAlertV2FormBasedPrometheusTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorAlertV2GroupOutlierCapture {
    durationSeconds?: number;
    enabled?: boolean;
    filename: string;
    filter?: string;
    storage?: string;
}

export interface MonitorAlertV2GroupOutlierCustomNotification {
    append?: string;
    prepend?: string;
    subject?: string;
}

export interface MonitorAlertV2GroupOutlierLink {
    href?: string;
    id?: string;
    type: string;
}

export interface MonitorAlertV2GroupOutlierNotificationChannel {
    id: number;
    mainThreshold?: boolean;
    notifyOnResolve?: boolean;
    renotifyEveryMinutes?: number;
    /**
     * @deprecated Deprecated
     */
    type?: string;
    warningThreshold?: boolean;
}

export interface MonitorAlertV2GroupOutlierScope {
    label: string;
    operator: string;
    values: string[];
}

export interface MonitorAlertV2GroupOutlierTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorAlertV2MetricCapture {
    durationSeconds?: number;
    enabled?: boolean;
    filename: string;
    filter?: string;
    storage?: string;
}

export interface MonitorAlertV2MetricCustomNotification {
    append?: string;
    prepend?: string;
    subject?: string;
}

export interface MonitorAlertV2MetricLink {
    href?: string;
    id?: string;
    type: string;
}

export interface MonitorAlertV2MetricNotificationChannel {
    id: number;
    mainThreshold?: boolean;
    notifyOnResolve?: boolean;
    renotifyEveryMinutes?: number;
    /**
     * @deprecated Deprecated
     */
    type?: string;
    warningThreshold?: boolean;
}

export interface MonitorAlertV2MetricScope {
    label: string;
    operator: string;
    values: string[];
}

export interface MonitorAlertV2MetricTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorAlertV2PrometheusCapture {
    durationSeconds?: number;
    enabled?: boolean;
    filename: string;
    filter?: string;
    storage?: string;
}

export interface MonitorAlertV2PrometheusCustomNotification {
    append?: string;
    prepend?: string;
    subject?: string;
}

export interface MonitorAlertV2PrometheusLink {
    href?: string;
    id?: string;
    type: string;
}

export interface MonitorAlertV2PrometheusNotificationChannel {
    id: number;
    mainThreshold?: boolean;
    notifyOnResolve?: boolean;
    renotifyEveryMinutes?: number;
    /**
     * @deprecated Deprecated
     */
    type?: string;
    warningThreshold?: boolean;
}

export interface MonitorAlertV2PrometheusTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorCloudAccountTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorDashboardPanel {
    autosizeText?: boolean;
    content?: string;
    description?: string;
    height: number;
    legend?: outputs.MonitorDashboardPanelLegend;
    name: string;
    posX: number;
    posY: number;
    queries?: outputs.MonitorDashboardPanelQuery[];
    transparentBackground?: boolean;
    type: string;
    visibleTitle?: boolean;
    width: number;
}

export interface MonitorDashboardPanelLegend {
    enabled?: boolean;
    layout: string;
    position: string;
    showCurrent: boolean;
}

export interface MonitorDashboardPanelQuery {
    displayInfos?: outputs.MonitorDashboardPanelQueryDisplayInfo[];
    format?: outputs.MonitorDashboardPanelQueryFormat;
    promql: string;
    unit: string;
}

export interface MonitorDashboardPanelQueryDisplayInfo {
    displayName?: string;
    timeSeriesDisplayNameTemplate: string;
    type: string;
}

export interface MonitorDashboardPanelQueryFormat {
    decimals?: number;
    displayFormat: string;
    inputFormat: string;
    minInterval?: string;
    nullValueDisplayMode?: string;
    yAxis: string;
}

export interface MonitorDashboardScope {
    comparator?: string;
    metric: string;
    values?: string[];
    variable?: string;
}

export interface MonitorDashboardShare {
    member: outputs.MonitorDashboardShareMember;
    role: string;
}

export interface MonitorDashboardShareMember {
    id: number;
    type: string;
}

export interface MonitorDashboardTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorInhibitionRuleSourceMatcher {
    labelName: string;
    operator: string;
    value: string;
}

export interface MonitorInhibitionRuleTargetMatcher {
    labelName: string;
    operator: string;
    value: string;
}

export interface MonitorInhibitionRuleTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorNotificationChannelCustomWebhookTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorNotificationChannelEmailTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorNotificationChannelGoogleChatTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorNotificationChannelIbmEventNotificationTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorNotificationChannelIbmFunctionTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorNotificationChannelMsteamsTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorNotificationChannelOpsgenieTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorNotificationChannelPagerdutyTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorNotificationChannelPrometheusAlertManagerTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorNotificationChannelSlackTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorNotificationChannelSnsTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorNotificationChannelTeamEmailTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorNotificationChannelVictoropsTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorNotificationChannelWebhookTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorSilenceRuleTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorTeamEntrypoint {
    selection?: string;
    type: string;
}

export interface MonitorTeamTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MonitorTeamUserRole {
    email: string;
    role?: string;
}

export interface SecureAwsMlPolicyRule {
    anomalousConsoleLogin?: outputs.SecureAwsMlPolicyRuleAnomalousConsoleLogin;
    description: string;
    id: number;
    name: string;
    tags: string[];
    version: number;
}

export interface SecureAwsMlPolicyRuleAnomalousConsoleLogin {
    enabled?: boolean;
    threshold: number;
}

export interface SecureAwsMlPolicyTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureCloudAccountTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureCloudAuthAccountComponent {
    cloudConnectorMetadata?: string;
    cloudLogsMetadata?: string;
    cryptoKeyMetadata?: string;
    eventBridgeMetadata?: string;
    instance: string;
    servicePrincipalMetadata?: string;
    trustedRoleMetadata?: string;
    type: string;
    version?: string;
    webhookDatasourceMetadata?: string;
}

export interface SecureCloudAuthAccountComponentTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureCloudAuthAccountFeature {
    monitorCloudMetrics?: outputs.SecureCloudAuthAccountFeatureMonitorCloudMetric[];
    secureAgentlessScannings?: outputs.SecureCloudAuthAccountFeatureSecureAgentlessScanning[];
    secureConfigPostures?: outputs.SecureCloudAuthAccountFeatureSecureConfigPosture[];
    secureIdentityEntitlements?: outputs.SecureCloudAuthAccountFeatureSecureIdentityEntitlement[];
    secureThreatDetections?: outputs.SecureCloudAuthAccountFeatureSecureThreatDetection[];
}

export interface SecureCloudAuthAccountFeatureMonitorCloudMetric {
    components?: string[];
    enabled: boolean;
    type: string;
}

export interface SecureCloudAuthAccountFeatureSecureAgentlessScanning {
    components?: string[];
    enabled: boolean;
    type: string;
}

export interface SecureCloudAuthAccountFeatureSecureConfigPosture {
    components?: string[];
    enabled: boolean;
    type: string;
}

export interface SecureCloudAuthAccountFeatureSecureIdentityEntitlement {
    components?: string[];
    enabled: boolean;
    type: string;
}

export interface SecureCloudAuthAccountFeatureSecureThreatDetection {
    components?: string[];
    enabled: boolean;
    type: string;
}

export interface SecureCloudAuthAccountFeatureTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureCloudAuthAccountTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureCustomPolicyAction {
    captures?: outputs.SecureCustomPolicyActionCapture[];
    container?: string;
    killProcess?: boolean;
}

export interface SecureCustomPolicyActionCapture {
    bucketName?: string;
    filter?: string;
    folder?: string;
    name: string;
    secondsAfterEvent: number;
    secondsBeforeEvent: number;
}

export interface SecureCustomPolicyRule {
    enabled?: boolean;
    name: string;
}

export interface SecureCustomPolicyTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureDriftPolicyAction {
    captures?: outputs.SecureDriftPolicyActionCapture[];
    container?: string;
    preventDrift?: boolean;
}

export interface SecureDriftPolicyActionCapture {
    bucketName?: string;
    filter?: string;
    folder?: string;
    name: string;
    secondsAfterEvent: number;
    secondsBeforeEvent: number;
}

export interface SecureDriftPolicyRule {
    description: string;
    enabled?: boolean;
    exceptions?: outputs.SecureDriftPolicyRuleExceptions;
    id: number;
    name: string;
    prohibitedBinaries?: outputs.SecureDriftPolicyRuleProhibitedBinaries;
    tags: string[];
    version: number;
}

export interface SecureDriftPolicyRuleExceptions {
    items: string[];
    matchItems: boolean;
}

export interface SecureDriftPolicyRuleProhibitedBinaries {
    items: string[];
    matchItems: boolean;
}

export interface SecureDriftPolicyTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureListTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureMacroTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureMalwarePolicyAction {
    captures?: outputs.SecureMalwarePolicyActionCapture[];
    container?: string;
    preventMalware?: boolean;
}

export interface SecureMalwarePolicyActionCapture {
    bucketName?: string;
    filter?: string;
    folder?: string;
    name: string;
    secondsAfterEvent: number;
    secondsBeforeEvent: number;
}

export interface SecureMalwarePolicyRule {
    additionalHashes?: outputs.SecureMalwarePolicyRuleAdditionalHash[];
    description: string;
    id: number;
    ignoreHashes?: outputs.SecureMalwarePolicyRuleIgnoreHash[];
    name: string;
    tags: string[];
    useManagedHashes?: boolean;
    version: number;
}

export interface SecureMalwarePolicyRuleAdditionalHash {
    hash: string;
}

export interface SecureMalwarePolicyRuleIgnoreHash {
    hash: string;
}

export interface SecureMalwarePolicyTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureManagedPolicyAction {
    captures?: outputs.SecureManagedPolicyActionCapture[];
    container?: string;
    killProcess?: boolean;
}

export interface SecureManagedPolicyActionCapture {
    bucketName?: string;
    filter?: string;
    folder?: string;
    name: string;
    secondsAfterEvent: number;
    secondsBeforeEvent: number;
}

export interface SecureManagedPolicyTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureManagedRulesetAction {
    captures?: outputs.SecureManagedRulesetActionCapture[];
    container?: string;
    killProcess?: boolean;
}

export interface SecureManagedRulesetActionCapture {
    bucketName?: string;
    filter?: string;
    folder?: string;
    name: string;
    secondsAfterEvent: number;
    secondsBeforeEvent: number;
}

export interface SecureManagedRulesetInheritedFrom {
    name: string;
    type?: string;
}

export interface SecureManagedRulesetTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureMlPolicyRule {
    cryptominingTrigger?: outputs.SecureMlPolicyRuleCryptominingTrigger;
    description: string;
    id: number;
    name: string;
    tags: string[];
    version: number;
}

export interface SecureMlPolicyRuleCryptominingTrigger {
    enabled?: boolean;
    threshold: number;
}

export interface SecureMlPolicyTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureNotificationChannelEmailTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureNotificationChannelMsteamsTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureNotificationChannelOpsgenieTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureNotificationChannelPagerdutyTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureNotificationChannelPrometheusAlertManagerTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureNotificationChannelSlackTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureNotificationChannelSnsTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureNotificationChannelTeamEmailTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureNotificationChannelVictoropsTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureNotificationChannelWebhookTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureOrganizationTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecurePolicyAction {
    captures?: outputs.SecurePolicyActionCapture[];
    container?: string;
    killProcess?: boolean;
}

export interface SecurePolicyActionCapture {
    bucketName?: string;
    filter?: string;
    folder?: string;
    name: string;
    secondsAfterEvent: number;
    secondsBeforeEvent: number;
}

export interface SecurePolicyTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecurePostureControlTimeouts {
    create?: string;
}

export interface SecurePosturePolicyGroup {
    description: string;
    groups?: outputs.SecurePosturePolicyGroupGroup[];
    id: string;
    name: string;
    requirements?: outputs.SecurePosturePolicyGroupRequirement[];
}

export interface SecurePosturePolicyGroupGroup {
    description: string;
    groups?: outputs.SecurePosturePolicyGroupGroupGroup[];
    id: string;
    name: string;
    requirements?: outputs.SecurePosturePolicyGroupGroupRequirement[];
}

export interface SecurePosturePolicyGroupGroupGroup {
    description: string;
    groups?: outputs.SecurePosturePolicyGroupGroupGroupGroup[];
    id: string;
    name: string;
    requirements?: outputs.SecurePosturePolicyGroupGroupGroupRequirement[];
}

export interface SecurePosturePolicyGroupGroupGroupGroup {
    description: string;
    groups?: outputs.SecurePosturePolicyGroupGroupGroupGroupGroup[];
    id: string;
    name: string;
    requirements?: outputs.SecurePosturePolicyGroupGroupGroupGroupRequirement[];
}

export interface SecurePosturePolicyGroupGroupGroupGroupGroup {
    description: string;
    id: string;
    name: string;
    requirements?: outputs.SecurePosturePolicyGroupGroupGroupGroupGroupRequirement[];
}

export interface SecurePosturePolicyGroupGroupGroupGroupGroupRequirement {
    controls?: outputs.SecurePosturePolicyGroupGroupGroupGroupGroupRequirementControl[];
    description: string;
    id: string;
    name: string;
}

export interface SecurePosturePolicyGroupGroupGroupGroupGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface SecurePosturePolicyGroupGroupGroupGroupRequirement {
    controls?: outputs.SecurePosturePolicyGroupGroupGroupGroupRequirementControl[];
    description: string;
    id: string;
    name: string;
}

export interface SecurePosturePolicyGroupGroupGroupGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface SecurePosturePolicyGroupGroupGroupRequirement {
    controls?: outputs.SecurePosturePolicyGroupGroupGroupRequirementControl[];
    description: string;
    id: string;
    name: string;
}

export interface SecurePosturePolicyGroupGroupGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface SecurePosturePolicyGroupGroupRequirement {
    controls?: outputs.SecurePosturePolicyGroupGroupRequirementControl[];
    description: string;
    id: string;
    name: string;
}

export interface SecurePosturePolicyGroupGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface SecurePosturePolicyGroupRequirement {
    controls?: outputs.SecurePosturePolicyGroupRequirementControl[];
    description: string;
    id: string;
    name: string;
}

export interface SecurePosturePolicyGroupRequirementControl {
    enabled?: boolean;
    name: string;
}

export interface SecurePosturePolicyTarget {
    maxVersion?: number;
    minVersion?: number;
    platform?: string;
}

export interface SecurePosturePolicyTimeouts {
    create?: string;
}

export interface SecurePostureZoneScopes {
    scopes: outputs.SecurePostureZoneScopesScope[];
}

export interface SecurePostureZoneScopesScope {
    rules?: string;
    targetType: string;
}

export interface SecurePostureZoneTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureRuleContainerTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureRuleFalcoException {
    comps?: string[];
    fields?: string[];
    name: string;
    values: string;
}

export interface SecureRuleFalcoTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureRuleFilesystemReadOnly {
    matching?: boolean;
    paths: string[];
}

export interface SecureRuleFilesystemReadWrite {
    matching?: boolean;
    paths: string[];
}

export interface SecureRuleFilesystemTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureRuleNetworkTcp {
    matching?: boolean;
    ports: number[];
}

export interface SecureRuleNetworkTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureRuleNetworkUdp {
    matching?: boolean;
    ports: number[];
}

export interface SecureRuleProcessTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureRuleSyscallTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureScanningPolicyAssignmentItem {
    id: string;
    image: outputs.SecureScanningPolicyAssignmentItemImage;
    name?: string;
    policyIds: string[];
    registry: string;
    repository: string;
    whitelistIds?: string[];
}

export interface SecureScanningPolicyAssignmentItemImage {
    type?: string;
    value: string;
}

export interface SecureScanningPolicyAssignmentTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureScanningPolicyRule {
    action: string;
    gate: string;
    id: string;
    params: outputs.SecureScanningPolicyRuleParam[];
    trigger: string;
}

export interface SecureScanningPolicyRuleParam {
    name: string;
    value: string;
}

export interface SecureScanningPolicyTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureTeamTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureTeamUserRole {
    email: string;
    role?: string;
}

export interface SecureVulnerabilityExceptionListTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface SecureVulnerabilityExceptionTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface TeamServiceAccountTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface UserTimeouts {
    create?: string;
}

