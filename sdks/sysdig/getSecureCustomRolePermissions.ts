// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecureCustomRolePermissions(args: GetSecureCustomRolePermissionsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecureCustomRolePermissionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sysdig:index/getSecureCustomRolePermissions:getSecureCustomRolePermissions", {
        "id": args.id,
        "requestedPermissions": args.requestedPermissions,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecureCustomRolePermissions.
 */
export interface GetSecureCustomRolePermissionsArgs {
    id?: string;
    requestedPermissions: string[];
    timeouts?: inputs.GetSecureCustomRolePermissionsTimeouts;
}

/**
 * A collection of values returned by getSecureCustomRolePermissions.
 */
export interface GetSecureCustomRolePermissionsResult {
    readonly enrichedPermissions: string[];
    readonly id: string;
    readonly requestedPermissions: string[];
    readonly timeouts?: outputs.GetSecureCustomRolePermissionsTimeouts;
}
export function getSecureCustomRolePermissionsOutput(args: GetSecureCustomRolePermissionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecureCustomRolePermissionsResult> {
    return pulumi.output(args).apply((a: any) => getSecureCustomRolePermissions(a, opts))
}

/**
 * A collection of arguments for invoking getSecureCustomRolePermissions.
 */
export interface GetSecureCustomRolePermissionsOutputArgs {
    id?: pulumi.Input<string>;
    requestedPermissions: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.GetSecureCustomRolePermissionsTimeoutsArgs>;
}
