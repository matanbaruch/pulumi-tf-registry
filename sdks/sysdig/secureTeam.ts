// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SecureTeam extends pulumi.CustomResource {
    /**
     * Get an existing SecureTeam resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecureTeamState, opts?: pulumi.CustomResourceOptions): SecureTeam {
        return new SecureTeam(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sysdig:index/secureTeam:SecureTeam';

    /**
     * Returns true if the given object is an instance of SecureTeam.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecureTeam {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecureTeam.__pulumiType;
    }

    public readonly allZones!: pulumi.Output<boolean | undefined>;
    public readonly defaultTeam!: pulumi.Output<boolean | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly enableIbmPlatformMetrics!: pulumi.Output<boolean | undefined>;
    public readonly filter!: pulumi.Output<string | undefined>;
    public readonly ibmPlatformMetrics!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly scopeBy!: pulumi.Output<string | undefined>;
    public readonly theme!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.SecureTeamTimeouts | undefined>;
    public readonly useSysdigCapture!: pulumi.Output<boolean | undefined>;
    public readonly userRoles!: pulumi.Output<outputs.SecureTeamUserRole[] | undefined>;
    public /*out*/ readonly version!: pulumi.Output<number>;
    public readonly zoneIds!: pulumi.Output<number[] | undefined>;

    /**
     * Create a SecureTeam resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SecureTeamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecureTeamArgs | SecureTeamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecureTeamState | undefined;
            resourceInputs["allZones"] = state ? state.allZones : undefined;
            resourceInputs["defaultTeam"] = state ? state.defaultTeam : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableIbmPlatformMetrics"] = state ? state.enableIbmPlatformMetrics : undefined;
            resourceInputs["filter"] = state ? state.filter : undefined;
            resourceInputs["ibmPlatformMetrics"] = state ? state.ibmPlatformMetrics : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["scopeBy"] = state ? state.scopeBy : undefined;
            resourceInputs["theme"] = state ? state.theme : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["useSysdigCapture"] = state ? state.useSysdigCapture : undefined;
            resourceInputs["userRoles"] = state ? state.userRoles : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["zoneIds"] = state ? state.zoneIds : undefined;
        } else {
            const args = argsOrState as SecureTeamArgs | undefined;
            resourceInputs["allZones"] = args ? args.allZones : undefined;
            resourceInputs["defaultTeam"] = args ? args.defaultTeam : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableIbmPlatformMetrics"] = args ? args.enableIbmPlatformMetrics : undefined;
            resourceInputs["filter"] = args ? args.filter : undefined;
            resourceInputs["ibmPlatformMetrics"] = args ? args.ibmPlatformMetrics : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["scopeBy"] = args ? args.scopeBy : undefined;
            resourceInputs["theme"] = args ? args.theme : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["useSysdigCapture"] = args ? args.useSysdigCapture : undefined;
            resourceInputs["userRoles"] = args ? args.userRoles : undefined;
            resourceInputs["zoneIds"] = args ? args.zoneIds : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecureTeam.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SecureTeam resources.
 */
export interface SecureTeamState {
    allZones?: pulumi.Input<boolean>;
    defaultTeam?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    enableIbmPlatformMetrics?: pulumi.Input<boolean>;
    filter?: pulumi.Input<string>;
    ibmPlatformMetrics?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    scopeBy?: pulumi.Input<string>;
    theme?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SecureTeamTimeouts>;
    useSysdigCapture?: pulumi.Input<boolean>;
    userRoles?: pulumi.Input<pulumi.Input<inputs.SecureTeamUserRole>[]>;
    version?: pulumi.Input<number>;
    zoneIds?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * The set of arguments for constructing a SecureTeam resource.
 */
export interface SecureTeamArgs {
    allZones?: pulumi.Input<boolean>;
    defaultTeam?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    enableIbmPlatformMetrics?: pulumi.Input<boolean>;
    filter?: pulumi.Input<string>;
    ibmPlatformMetrics?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    scopeBy?: pulumi.Input<string>;
    theme?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SecureTeamTimeouts>;
    useSysdigCapture?: pulumi.Input<boolean>;
    userRoles?: pulumi.Input<pulumi.Input<inputs.SecureTeamUserRole>[]>;
    zoneIds?: pulumi.Input<pulumi.Input<number>[]>;
}
