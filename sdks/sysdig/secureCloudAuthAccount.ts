// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SecureCloudAuthAccount extends pulumi.CustomResource {
    /**
     * Get an existing SecureCloudAuthAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecureCloudAuthAccountState, opts?: pulumi.CustomResourceOptions): SecureCloudAuthAccount {
        return new SecureCloudAuthAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sysdig:index/secureCloudAuthAccount:SecureCloudAuthAccount';

    /**
     * Returns true if the given object is an instance of SecureCloudAuthAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecureCloudAuthAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecureCloudAuthAccount.__pulumiType;
    }

    public readonly components!: pulumi.Output<outputs.SecureCloudAuthAccountComponent[] | undefined>;
    public readonly enabled!: pulumi.Output<boolean>;
    public readonly features!: pulumi.Output<outputs.SecureCloudAuthAccountFeature[] | undefined>;
    public /*out*/ readonly organizationId!: pulumi.Output<string>;
    public readonly providerAlias!: pulumi.Output<string | undefined>;
    public readonly providerId!: pulumi.Output<string>;
    public readonly providerTenantId!: pulumi.Output<string | undefined>;
    public readonly providerType!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.SecureCloudAuthAccountTimeouts | undefined>;

    /**
     * Create a SecureCloudAuthAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecureCloudAuthAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecureCloudAuthAccountArgs | SecureCloudAuthAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecureCloudAuthAccountState | undefined;
            resourceInputs["components"] = state ? state.components : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["features"] = state ? state.features : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["providerAlias"] = state ? state.providerAlias : undefined;
            resourceInputs["providerId"] = state ? state.providerId : undefined;
            resourceInputs["providerTenantId"] = state ? state.providerTenantId : undefined;
            resourceInputs["providerType"] = state ? state.providerType : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as SecureCloudAuthAccountArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.providerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerId'");
            }
            if ((!args || args.providerType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerType'");
            }
            resourceInputs["components"] = args ? args.components : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["features"] = args ? args.features : undefined;
            resourceInputs["providerAlias"] = args ? args.providerAlias : undefined;
            resourceInputs["providerId"] = args ? args.providerId : undefined;
            resourceInputs["providerTenantId"] = args ? args.providerTenantId : undefined;
            resourceInputs["providerType"] = args ? args.providerType : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["organizationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecureCloudAuthAccount.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SecureCloudAuthAccount resources.
 */
export interface SecureCloudAuthAccountState {
    components?: pulumi.Input<pulumi.Input<inputs.SecureCloudAuthAccountComponent>[]>;
    enabled?: pulumi.Input<boolean>;
    features?: pulumi.Input<pulumi.Input<inputs.SecureCloudAuthAccountFeature>[]>;
    organizationId?: pulumi.Input<string>;
    providerAlias?: pulumi.Input<string>;
    providerId?: pulumi.Input<string>;
    providerTenantId?: pulumi.Input<string>;
    providerType?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SecureCloudAuthAccountTimeouts>;
}

/**
 * The set of arguments for constructing a SecureCloudAuthAccount resource.
 */
export interface SecureCloudAuthAccountArgs {
    components?: pulumi.Input<pulumi.Input<inputs.SecureCloudAuthAccountComponent>[]>;
    enabled: pulumi.Input<boolean>;
    features?: pulumi.Input<pulumi.Input<inputs.SecureCloudAuthAccountFeature>[]>;
    providerAlias?: pulumi.Input<string>;
    providerId: pulumi.Input<string>;
    providerTenantId?: pulumi.Input<string>;
    providerType: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SecureCloudAuthAccountTimeouts>;
}
