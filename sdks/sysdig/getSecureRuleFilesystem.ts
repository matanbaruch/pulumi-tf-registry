// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecureRuleFilesystem(args: GetSecureRuleFilesystemArgs, opts?: pulumi.InvokeOptions): Promise<GetSecureRuleFilesystemResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sysdig:index/getSecureRuleFilesystem:getSecureRuleFilesystem", {
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecureRuleFilesystem.
 */
export interface GetSecureRuleFilesystemArgs {
    name: string;
    timeouts?: inputs.GetSecureRuleFilesystemTimeouts;
}

/**
 * A collection of values returned by getSecureRuleFilesystem.
 */
export interface GetSecureRuleFilesystemResult {
    readonly description: string;
    readonly id: number;
    readonly name: string;
    readonly readOnlies: outputs.GetSecureRuleFilesystemReadOnly[];
    readonly readWrites: outputs.GetSecureRuleFilesystemReadWrite[];
    readonly tags: string[];
    readonly timeouts?: outputs.GetSecureRuleFilesystemTimeouts;
    readonly version: number;
}
export function getSecureRuleFilesystemOutput(args: GetSecureRuleFilesystemOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecureRuleFilesystemResult> {
    return pulumi.output(args).apply((a: any) => getSecureRuleFilesystem(a, opts))
}

/**
 * A collection of arguments for invoking getSecureRuleFilesystem.
 */
export interface GetSecureRuleFilesystemOutputArgs {
    name: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetSecureRuleFilesystemTimeoutsArgs>;
}
