// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Mpsuser extends pulumi.CustomResource {
    /**
     * Get an existing Mpsuser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MpsuserState, opts?: pulumi.CustomResourceOptions): Mpsuser {
        return new Mpsuser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netscalersdx:index/mpsuser:Mpsuser';

    /**
     * Returns true if the given object is an instance of Mpsuser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Mpsuser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Mpsuser.__pulumiType;
    }

    /**
     * Enables session timeout for user.
     */
    public readonly enableSessionTimeout!: pulumi.Output<boolean | undefined>;
    /**
     * Enable external authentication.
     */
    public readonly externalAuthentication!: pulumi.Output<boolean | undefined>;
    /**
     * Groups to which user belongs.
     */
    public readonly groups!: pulumi.Output<string[]>;
    /**
     * User Name. Minimum length = 1 Maximum length = 128
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Password. Minimum length = 1 Maximum length = 128
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * Session timeout for the user.
     */
    public readonly sessionTimeout!: pulumi.Output<number | undefined>;
    /**
     * Session timeout unit for the user.
     */
    public readonly sessionTimeoutUnit!: pulumi.Output<string | undefined>;
    /**
     * Tenant Id of the system users. Minimum length = 1 Maximum length = 128
     */
    public readonly tenantId!: pulumi.Output<string | undefined>;

    /**
     * Create a Mpsuser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MpsuserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MpsuserArgs | MpsuserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MpsuserState | undefined;
            resourceInputs["enableSessionTimeout"] = state ? state.enableSessionTimeout : undefined;
            resourceInputs["externalAuthentication"] = state ? state.externalAuthentication : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["sessionTimeout"] = state ? state.sessionTimeout : undefined;
            resourceInputs["sessionTimeoutUnit"] = state ? state.sessionTimeoutUnit : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as MpsuserArgs | undefined;
            if ((!args || args.groups === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groups'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            resourceInputs["enableSessionTimeout"] = args ? args.enableSessionTimeout : undefined;
            resourceInputs["externalAuthentication"] = args ? args.externalAuthentication : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["sessionTimeout"] = args ? args.sessionTimeout : undefined;
            resourceInputs["sessionTimeoutUnit"] = args ? args.sessionTimeoutUnit : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Mpsuser.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Mpsuser resources.
 */
export interface MpsuserState {
    /**
     * Enables session timeout for user.
     */
    enableSessionTimeout?: pulumi.Input<boolean>;
    /**
     * Enable external authentication.
     */
    externalAuthentication?: pulumi.Input<boolean>;
    /**
     * Groups to which user belongs.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User Name. Minimum length = 1 Maximum length = 128
     */
    name?: pulumi.Input<string>;
    /**
     * Password. Minimum length = 1 Maximum length = 128
     */
    password?: pulumi.Input<string>;
    /**
     * Session timeout for the user.
     */
    sessionTimeout?: pulumi.Input<number>;
    /**
     * Session timeout unit for the user.
     */
    sessionTimeoutUnit?: pulumi.Input<string>;
    /**
     * Tenant Id of the system users. Minimum length = 1 Maximum length = 128
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Mpsuser resource.
 */
export interface MpsuserArgs {
    /**
     * Enables session timeout for user.
     */
    enableSessionTimeout?: pulumi.Input<boolean>;
    /**
     * Enable external authentication.
     */
    externalAuthentication?: pulumi.Input<boolean>;
    /**
     * Groups to which user belongs.
     */
    groups: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User Name. Minimum length = 1 Maximum length = 128
     */
    name?: pulumi.Input<string>;
    /**
     * Password. Minimum length = 1 Maximum length = 128
     */
    password: pulumi.Input<string>;
    /**
     * Session timeout for the user.
     */
    sessionTimeout?: pulumi.Input<number>;
    /**
     * Session timeout unit for the user.
     */
    sessionTimeoutUnit?: pulumi.Input<string>;
    /**
     * Tenant Id of the system users. Minimum length = 1 Maximum length = 128
     */
    tenantId?: pulumi.Input<string>;
}
