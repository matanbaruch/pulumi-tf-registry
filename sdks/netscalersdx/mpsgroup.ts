// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Mpsgroup extends pulumi.CustomResource {
    /**
     * Get an existing Mpsgroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MpsgroupState, opts?: pulumi.CustomResourceOptions): Mpsgroup {
        return new Mpsgroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netscalersdx:index/mpsgroup:Mpsgroup';

    /**
     * Returns true if the given object is an instance of Mpsgroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Mpsgroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Mpsgroup.__pulumiType;
    }

    /**
     * Checks if only application centic page is needed.
     */
    public readonly allowApplicationOnly!: pulumi.Output<boolean | undefined>;
    /**
     * All Application names that are part of this group.This includes selected appnames as well as applications which are
     * result of defined regex.
     */
    public readonly applicationNames!: pulumi.Output<string[] | undefined>;
    /**
     * Apply for all bound entities (TRUE|FALSE).
     */
    public readonly applyAllBoundEntities!: pulumi.Output<boolean | undefined>;
    /**
     * Assign All Applications (YES|NO).
     */
    public readonly assignAllApps!: pulumi.Output<boolean | undefined>;
    /**
     * Assign All Autoscale groups (YES|NO).
     */
    public readonly assignAllAutoscaleGroups!: pulumi.Output<boolean | undefined>;
    /**
     * Assign All Instances (YES|NO).
     */
    public readonly assignAllDevices!: pulumi.Output<boolean | undefined>;
    /**
     * Assign All Application from selected instances (YES|NO).
     */
    public readonly assignAllSelectedDeviceApps!: pulumi.Output<boolean | undefined>;
    /**
     * Autoscale groups belong to this groupp.
     */
    public readonly autoscaleGroupsIds!: pulumi.Output<string[] | undefined>;
    /**
     * Which bound entiy is selected VSERVER(0),SERVICE(1),SERVICEGROUP(2),SERVER(3).
     */
    public readonly boundEntitySelected!: pulumi.Output<number | undefined>;
    /**
     * Description of Group. Minimum length = 1 Maximum length = 1024
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Enables session timeout for group.
     */
    public readonly enableSessionTimeout!: pulumi.Output<boolean | undefined>;
    /**
     * Group Name. Minimum length = 1 Maximum length = 64
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Permission for the group (admin/read-only). Minimum length = 1 Maximum length = 128
     */
    public readonly permission!: pulumi.Output<string>;
    /**
     * Role (admin|nonadmin).
     */
    public readonly role!: pulumi.Output<string | undefined>;
    /**
     * Roles assigned to the group.
     */
    public readonly roles!: pulumi.Output<string[] | undefined>;
    /**
     * Select Individual Entity Type.
     */
    public readonly selectIndividualEntity!: pulumi.Output<boolean | undefined>;
    /**
     * Session timeout for the Group.
     */
    public readonly sessionTimeout!: pulumi.Output<number | undefined>;
    /**
     * Session timeout unit for the Group.
     */
    public readonly sessionTimeoutUnit!: pulumi.Output<string | undefined>;
    /**
     * Stand alone instances belong to this groupp.
     */
    public readonly standaloneInstancesIds!: pulumi.Output<string[] | undefined>;
    /**
     * Id of the tenant. Minimum length = 1 Maximum length = 128
     */
    public readonly tenantId!: pulumi.Output<string | undefined>;
    /**
     * Users belong to the group.
     */
    public readonly users!: pulumi.Output<string[] | undefined>;

    /**
     * Create a Mpsgroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MpsgroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MpsgroupArgs | MpsgroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MpsgroupState | undefined;
            resourceInputs["allowApplicationOnly"] = state ? state.allowApplicationOnly : undefined;
            resourceInputs["applicationNames"] = state ? state.applicationNames : undefined;
            resourceInputs["applyAllBoundEntities"] = state ? state.applyAllBoundEntities : undefined;
            resourceInputs["assignAllApps"] = state ? state.assignAllApps : undefined;
            resourceInputs["assignAllAutoscaleGroups"] = state ? state.assignAllAutoscaleGroups : undefined;
            resourceInputs["assignAllDevices"] = state ? state.assignAllDevices : undefined;
            resourceInputs["assignAllSelectedDeviceApps"] = state ? state.assignAllSelectedDeviceApps : undefined;
            resourceInputs["autoscaleGroupsIds"] = state ? state.autoscaleGroupsIds : undefined;
            resourceInputs["boundEntitySelected"] = state ? state.boundEntitySelected : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableSessionTimeout"] = state ? state.enableSessionTimeout : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["permission"] = state ? state.permission : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["roles"] = state ? state.roles : undefined;
            resourceInputs["selectIndividualEntity"] = state ? state.selectIndividualEntity : undefined;
            resourceInputs["sessionTimeout"] = state ? state.sessionTimeout : undefined;
            resourceInputs["sessionTimeoutUnit"] = state ? state.sessionTimeoutUnit : undefined;
            resourceInputs["standaloneInstancesIds"] = state ? state.standaloneInstancesIds : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
        } else {
            const args = argsOrState as MpsgroupArgs | undefined;
            if ((!args || args.permission === undefined) && !opts.urn) {
                throw new Error("Missing required property 'permission'");
            }
            resourceInputs["allowApplicationOnly"] = args ? args.allowApplicationOnly : undefined;
            resourceInputs["applicationNames"] = args ? args.applicationNames : undefined;
            resourceInputs["applyAllBoundEntities"] = args ? args.applyAllBoundEntities : undefined;
            resourceInputs["assignAllApps"] = args ? args.assignAllApps : undefined;
            resourceInputs["assignAllAutoscaleGroups"] = args ? args.assignAllAutoscaleGroups : undefined;
            resourceInputs["assignAllDevices"] = args ? args.assignAllDevices : undefined;
            resourceInputs["assignAllSelectedDeviceApps"] = args ? args.assignAllSelectedDeviceApps : undefined;
            resourceInputs["autoscaleGroupsIds"] = args ? args.autoscaleGroupsIds : undefined;
            resourceInputs["boundEntitySelected"] = args ? args.boundEntitySelected : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableSessionTimeout"] = args ? args.enableSessionTimeout : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["permission"] = args ? args.permission : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["roles"] = args ? args.roles : undefined;
            resourceInputs["selectIndividualEntity"] = args ? args.selectIndividualEntity : undefined;
            resourceInputs["sessionTimeout"] = args ? args.sessionTimeout : undefined;
            resourceInputs["sessionTimeoutUnit"] = args ? args.sessionTimeoutUnit : undefined;
            resourceInputs["standaloneInstancesIds"] = args ? args.standaloneInstancesIds : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Mpsgroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Mpsgroup resources.
 */
export interface MpsgroupState {
    /**
     * Checks if only application centic page is needed.
     */
    allowApplicationOnly?: pulumi.Input<boolean>;
    /**
     * All Application names that are part of this group.This includes selected appnames as well as applications which are
     * result of defined regex.
     */
    applicationNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Apply for all bound entities (TRUE|FALSE).
     */
    applyAllBoundEntities?: pulumi.Input<boolean>;
    /**
     * Assign All Applications (YES|NO).
     */
    assignAllApps?: pulumi.Input<boolean>;
    /**
     * Assign All Autoscale groups (YES|NO).
     */
    assignAllAutoscaleGroups?: pulumi.Input<boolean>;
    /**
     * Assign All Instances (YES|NO).
     */
    assignAllDevices?: pulumi.Input<boolean>;
    /**
     * Assign All Application from selected instances (YES|NO).
     */
    assignAllSelectedDeviceApps?: pulumi.Input<boolean>;
    /**
     * Autoscale groups belong to this groupp.
     */
    autoscaleGroupsIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Which bound entiy is selected VSERVER(0),SERVICE(1),SERVICEGROUP(2),SERVER(3).
     */
    boundEntitySelected?: pulumi.Input<number>;
    /**
     * Description of Group. Minimum length = 1 Maximum length = 1024
     */
    description?: pulumi.Input<string>;
    /**
     * Enables session timeout for group.
     */
    enableSessionTimeout?: pulumi.Input<boolean>;
    /**
     * Group Name. Minimum length = 1 Maximum length = 64
     */
    name?: pulumi.Input<string>;
    /**
     * Permission for the group (admin/read-only). Minimum length = 1 Maximum length = 128
     */
    permission?: pulumi.Input<string>;
    /**
     * Role (admin|nonadmin).
     */
    role?: pulumi.Input<string>;
    /**
     * Roles assigned to the group.
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Select Individual Entity Type.
     */
    selectIndividualEntity?: pulumi.Input<boolean>;
    /**
     * Session timeout for the Group.
     */
    sessionTimeout?: pulumi.Input<number>;
    /**
     * Session timeout unit for the Group.
     */
    sessionTimeoutUnit?: pulumi.Input<string>;
    /**
     * Stand alone instances belong to this groupp.
     */
    standaloneInstancesIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Id of the tenant. Minimum length = 1 Maximum length = 128
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Users belong to the group.
     */
    users?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Mpsgroup resource.
 */
export interface MpsgroupArgs {
    /**
     * Checks if only application centic page is needed.
     */
    allowApplicationOnly?: pulumi.Input<boolean>;
    /**
     * All Application names that are part of this group.This includes selected appnames as well as applications which are
     * result of defined regex.
     */
    applicationNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Apply for all bound entities (TRUE|FALSE).
     */
    applyAllBoundEntities?: pulumi.Input<boolean>;
    /**
     * Assign All Applications (YES|NO).
     */
    assignAllApps?: pulumi.Input<boolean>;
    /**
     * Assign All Autoscale groups (YES|NO).
     */
    assignAllAutoscaleGroups?: pulumi.Input<boolean>;
    /**
     * Assign All Instances (YES|NO).
     */
    assignAllDevices?: pulumi.Input<boolean>;
    /**
     * Assign All Application from selected instances (YES|NO).
     */
    assignAllSelectedDeviceApps?: pulumi.Input<boolean>;
    /**
     * Autoscale groups belong to this groupp.
     */
    autoscaleGroupsIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Which bound entiy is selected VSERVER(0),SERVICE(1),SERVICEGROUP(2),SERVER(3).
     */
    boundEntitySelected?: pulumi.Input<number>;
    /**
     * Description of Group. Minimum length = 1 Maximum length = 1024
     */
    description?: pulumi.Input<string>;
    /**
     * Enables session timeout for group.
     */
    enableSessionTimeout?: pulumi.Input<boolean>;
    /**
     * Group Name. Minimum length = 1 Maximum length = 64
     */
    name?: pulumi.Input<string>;
    /**
     * Permission for the group (admin/read-only). Minimum length = 1 Maximum length = 128
     */
    permission: pulumi.Input<string>;
    /**
     * Role (admin|nonadmin).
     */
    role?: pulumi.Input<string>;
    /**
     * Roles assigned to the group.
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Select Individual Entity Type.
     */
    selectIndividualEntity?: pulumi.Input<boolean>;
    /**
     * Session timeout for the Group.
     */
    sessionTimeout?: pulumi.Input<number>;
    /**
     * Session timeout unit for the Group.
     */
    sessionTimeoutUnit?: pulumi.Input<string>;
    /**
     * Stand alone instances belong to this groupp.
     */
    standaloneInstancesIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Id of the tenant. Minimum length = 1 Maximum length = 128
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Users belong to the group.
     */
    users?: pulumi.Input<pulumi.Input<string>[]>;
}
