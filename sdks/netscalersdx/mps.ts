// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Mps extends pulumi.CustomResource {
    /**
     * Get an existing Mps resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MpsState, opts?: pulumi.CustomResourceOptions): Mps {
        return new Mps(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netscalersdx:index/mps:Mps';

    /**
     * Returns true if the given object is an instance of Mps.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Mps {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Mps.__pulumiType;
    }

    /**
     * Configure Message of the Day (contents of motd file), this needs to be set true if user wants to configure message if
     * the day.
     */
    public readonly configMotd!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates the type of deployment of NetScaler ADM: standalone or ha or scaleout..
     */
    public readonly deploymentType!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the historical tables database migration is in progress or not..
     */
    public readonly histMigInprog!: pulumi.Output<boolean | undefined>;
    /**
     * True if its a cloud deployment.
     */
    public readonly isCloud!: pulumi.Output<boolean | undefined>;
    /**
     * True if its a container deployment.
     */
    public readonly isContainer!: pulumi.Output<boolean | undefined>;
    /**
     * Is Member Of Default Group.
     */
    public readonly isMemberOfDefaultGroup!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates the node's state: ACTIVE or PASSIVE in a HA deployment..
     */
    public readonly isPassive!: pulumi.Output<boolean | undefined>;
    /**
     * True, if third party VM is supported.
     */
    public readonly isThirdpartyVmSupported!: pulumi.Output<boolean | undefined>;
    /**
     * Maps API Key.
     */
    public readonly mapsApikey!: pulumi.Output<string | undefined>;
    /**
     * Message of the Day (contents of motd file) that can be shown on UI after successful login. Maximum length = 255
     */
    public readonly motd!: pulumi.Output<string | undefined>;
    /**
     * privilege_feature.
     */
    public readonly privilegeFeature!: pulumi.Output<string | undefined>;
    /**
     * Indicates the next version the agent needs to upgrade to..
     */
    public readonly upgradeAgentVersion!: pulumi.Output<string | undefined>;

    /**
     * Create a Mps resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: MpsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MpsArgs | MpsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MpsState | undefined;
            resourceInputs["configMotd"] = state ? state.configMotd : undefined;
            resourceInputs["deploymentType"] = state ? state.deploymentType : undefined;
            resourceInputs["histMigInprog"] = state ? state.histMigInprog : undefined;
            resourceInputs["isCloud"] = state ? state.isCloud : undefined;
            resourceInputs["isContainer"] = state ? state.isContainer : undefined;
            resourceInputs["isMemberOfDefaultGroup"] = state ? state.isMemberOfDefaultGroup : undefined;
            resourceInputs["isPassive"] = state ? state.isPassive : undefined;
            resourceInputs["isThirdpartyVmSupported"] = state ? state.isThirdpartyVmSupported : undefined;
            resourceInputs["mapsApikey"] = state ? state.mapsApikey : undefined;
            resourceInputs["motd"] = state ? state.motd : undefined;
            resourceInputs["privilegeFeature"] = state ? state.privilegeFeature : undefined;
            resourceInputs["upgradeAgentVersion"] = state ? state.upgradeAgentVersion : undefined;
        } else {
            const args = argsOrState as MpsArgs | undefined;
            resourceInputs["configMotd"] = args ? args.configMotd : undefined;
            resourceInputs["deploymentType"] = args ? args.deploymentType : undefined;
            resourceInputs["histMigInprog"] = args ? args.histMigInprog : undefined;
            resourceInputs["isCloud"] = args ? args.isCloud : undefined;
            resourceInputs["isContainer"] = args ? args.isContainer : undefined;
            resourceInputs["isMemberOfDefaultGroup"] = args ? args.isMemberOfDefaultGroup : undefined;
            resourceInputs["isPassive"] = args ? args.isPassive : undefined;
            resourceInputs["isThirdpartyVmSupported"] = args ? args.isThirdpartyVmSupported : undefined;
            resourceInputs["mapsApikey"] = args ? args.mapsApikey : undefined;
            resourceInputs["motd"] = args ? args.motd : undefined;
            resourceInputs["privilegeFeature"] = args ? args.privilegeFeature : undefined;
            resourceInputs["upgradeAgentVersion"] = args ? args.upgradeAgentVersion : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Mps.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Mps resources.
 */
export interface MpsState {
    /**
     * Configure Message of the Day (contents of motd file), this needs to be set true if user wants to configure message if
     * the day.
     */
    configMotd?: pulumi.Input<boolean>;
    /**
     * Indicates the type of deployment of NetScaler ADM: standalone or ha or scaleout..
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * Indicates whether the historical tables database migration is in progress or not..
     */
    histMigInprog?: pulumi.Input<boolean>;
    /**
     * True if its a cloud deployment.
     */
    isCloud?: pulumi.Input<boolean>;
    /**
     * True if its a container deployment.
     */
    isContainer?: pulumi.Input<boolean>;
    /**
     * Is Member Of Default Group.
     */
    isMemberOfDefaultGroup?: pulumi.Input<boolean>;
    /**
     * Indicates the node's state: ACTIVE or PASSIVE in a HA deployment..
     */
    isPassive?: pulumi.Input<boolean>;
    /**
     * True, if third party VM is supported.
     */
    isThirdpartyVmSupported?: pulumi.Input<boolean>;
    /**
     * Maps API Key.
     */
    mapsApikey?: pulumi.Input<string>;
    /**
     * Message of the Day (contents of motd file) that can be shown on UI after successful login. Maximum length = 255
     */
    motd?: pulumi.Input<string>;
    /**
     * privilege_feature.
     */
    privilegeFeature?: pulumi.Input<string>;
    /**
     * Indicates the next version the agent needs to upgrade to..
     */
    upgradeAgentVersion?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Mps resource.
 */
export interface MpsArgs {
    /**
     * Configure Message of the Day (contents of motd file), this needs to be set true if user wants to configure message if
     * the day.
     */
    configMotd?: pulumi.Input<boolean>;
    /**
     * Indicates the type of deployment of NetScaler ADM: standalone or ha or scaleout..
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * Indicates whether the historical tables database migration is in progress or not..
     */
    histMigInprog?: pulumi.Input<boolean>;
    /**
     * True if its a cloud deployment.
     */
    isCloud?: pulumi.Input<boolean>;
    /**
     * True if its a container deployment.
     */
    isContainer?: pulumi.Input<boolean>;
    /**
     * Is Member Of Default Group.
     */
    isMemberOfDefaultGroup?: pulumi.Input<boolean>;
    /**
     * Indicates the node's state: ACTIVE or PASSIVE in a HA deployment..
     */
    isPassive?: pulumi.Input<boolean>;
    /**
     * True, if third party VM is supported.
     */
    isThirdpartyVmSupported?: pulumi.Input<boolean>;
    /**
     * Maps API Key.
     */
    mapsApikey?: pulumi.Input<string>;
    /**
     * Message of the Day (contents of motd file) that can be shown on UI after successful login. Maximum length = 255
     */
    motd?: pulumi.Input<string>;
    /**
     * privilege_feature.
     */
    privilegeFeature?: pulumi.Input<string>;
    /**
     * Indicates the next version the agent needs to upgrade to..
     */
    upgradeAgentVersion?: pulumi.Input<string>;
}
