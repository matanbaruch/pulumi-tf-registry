// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DeviceGroup extends pulumi.CustomResource {
    /**
     * Get an existing DeviceGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeviceGroupState, opts?: pulumi.CustomResourceOptions): DeviceGroup {
        return new DeviceGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netscalersdx:index/deviceGroup:DeviceGroup';

    /**
     * Returns true if the given object is an instance of DeviceGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DeviceGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DeviceGroup.__pulumiType;
    }

    /**
     * Device group category. Will be default/upgrade.. Maximum length = 255
     */
    public readonly category!: pulumi.Output<string | undefined>;
    /**
     * Tenant. Maximum length = 255
     */
    public readonly criteriaCondn!: pulumi.Output<string | undefined>;
    /**
     * Device Group Criteria. Maximum length = 255
     */
    public readonly criteriaType!: pulumi.Output<string | undefined>;
    /**
     * Criteria Value. Maximum length = 255
     */
    public readonly criteriaValue!: pulumi.Output<string | undefined>;
    /**
     * Device Family. Minimum length = 1 Maximum length = 64
     */
    public readonly deviceFamily!: pulumi.Output<string | undefined>;
    /**
     * Setting to disable agent upgrades.
     */
    public readonly disableUpgrade!: pulumi.Output<boolean | undefined>;
    /**
     * Duration of Maintenance window for groups of category upgrade. Minimum value = 1 Maximum value =
     */
    public readonly duration!: pulumi.Output<number>;
    /**
     * Upgrade Lock acquiring time. Maximum length = 255
     */
    public readonly lockAcquireTime!: pulumi.Output<string | undefined>;
    /**
     * Upgrade Lock acquiring device. Maximum length = 255
     */
    public readonly lockAcquiringDevice!: pulumi.Output<string | undefined>;
    /**
     * Maintenance window start time for groups of category upgrade. Maximum length = 255
     */
    public readonly maintenanceWindowStart!: pulumi.Output<string | undefined>;
    /**
     * Device Group Name. Maximum length = 255
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Devices in the group.
     */
    public readonly staticDeviceList!: pulumi.Output<string | undefined>;
    /**
     * Static Device List.
     */
    public readonly staticDeviceListArrs!: pulumi.Output<string[] | undefined>;
    /**
     * Lock to be acquired before upgrading device group.
     */
    public readonly upgradeLock!: pulumi.Output<boolean | undefined>;
    /**
     * New Available upgrade version for devices. Maximum length = 255
     */
    public readonly upgradeVersion!: pulumi.Output<string | undefined>;

    /**
     * Create a DeviceGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeviceGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeviceGroupArgs | DeviceGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeviceGroupState | undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["criteriaCondn"] = state ? state.criteriaCondn : undefined;
            resourceInputs["criteriaType"] = state ? state.criteriaType : undefined;
            resourceInputs["criteriaValue"] = state ? state.criteriaValue : undefined;
            resourceInputs["deviceFamily"] = state ? state.deviceFamily : undefined;
            resourceInputs["disableUpgrade"] = state ? state.disableUpgrade : undefined;
            resourceInputs["duration"] = state ? state.duration : undefined;
            resourceInputs["lockAcquireTime"] = state ? state.lockAcquireTime : undefined;
            resourceInputs["lockAcquiringDevice"] = state ? state.lockAcquiringDevice : undefined;
            resourceInputs["maintenanceWindowStart"] = state ? state.maintenanceWindowStart : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["staticDeviceList"] = state ? state.staticDeviceList : undefined;
            resourceInputs["staticDeviceListArrs"] = state ? state.staticDeviceListArrs : undefined;
            resourceInputs["upgradeLock"] = state ? state.upgradeLock : undefined;
            resourceInputs["upgradeVersion"] = state ? state.upgradeVersion : undefined;
        } else {
            const args = argsOrState as DeviceGroupArgs | undefined;
            if ((!args || args.duration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'duration'");
            }
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["criteriaCondn"] = args ? args.criteriaCondn : undefined;
            resourceInputs["criteriaType"] = args ? args.criteriaType : undefined;
            resourceInputs["criteriaValue"] = args ? args.criteriaValue : undefined;
            resourceInputs["deviceFamily"] = args ? args.deviceFamily : undefined;
            resourceInputs["disableUpgrade"] = args ? args.disableUpgrade : undefined;
            resourceInputs["duration"] = args ? args.duration : undefined;
            resourceInputs["lockAcquireTime"] = args ? args.lockAcquireTime : undefined;
            resourceInputs["lockAcquiringDevice"] = args ? args.lockAcquiringDevice : undefined;
            resourceInputs["maintenanceWindowStart"] = args ? args.maintenanceWindowStart : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["staticDeviceList"] = args ? args.staticDeviceList : undefined;
            resourceInputs["staticDeviceListArrs"] = args ? args.staticDeviceListArrs : undefined;
            resourceInputs["upgradeLock"] = args ? args.upgradeLock : undefined;
            resourceInputs["upgradeVersion"] = args ? args.upgradeVersion : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DeviceGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DeviceGroup resources.
 */
export interface DeviceGroupState {
    /**
     * Device group category. Will be default/upgrade.. Maximum length = 255
     */
    category?: pulumi.Input<string>;
    /**
     * Tenant. Maximum length = 255
     */
    criteriaCondn?: pulumi.Input<string>;
    /**
     * Device Group Criteria. Maximum length = 255
     */
    criteriaType?: pulumi.Input<string>;
    /**
     * Criteria Value. Maximum length = 255
     */
    criteriaValue?: pulumi.Input<string>;
    /**
     * Device Family. Minimum length = 1 Maximum length = 64
     */
    deviceFamily?: pulumi.Input<string>;
    /**
     * Setting to disable agent upgrades.
     */
    disableUpgrade?: pulumi.Input<boolean>;
    /**
     * Duration of Maintenance window for groups of category upgrade. Minimum value = 1 Maximum value =
     */
    duration?: pulumi.Input<number>;
    /**
     * Upgrade Lock acquiring time. Maximum length = 255
     */
    lockAcquireTime?: pulumi.Input<string>;
    /**
     * Upgrade Lock acquiring device. Maximum length = 255
     */
    lockAcquiringDevice?: pulumi.Input<string>;
    /**
     * Maintenance window start time for groups of category upgrade. Maximum length = 255
     */
    maintenanceWindowStart?: pulumi.Input<string>;
    /**
     * Device Group Name. Maximum length = 255
     */
    name?: pulumi.Input<string>;
    /**
     * Devices in the group.
     */
    staticDeviceList?: pulumi.Input<string>;
    /**
     * Static Device List.
     */
    staticDeviceListArrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Lock to be acquired before upgrading device group.
     */
    upgradeLock?: pulumi.Input<boolean>;
    /**
     * New Available upgrade version for devices. Maximum length = 255
     */
    upgradeVersion?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DeviceGroup resource.
 */
export interface DeviceGroupArgs {
    /**
     * Device group category. Will be default/upgrade.. Maximum length = 255
     */
    category?: pulumi.Input<string>;
    /**
     * Tenant. Maximum length = 255
     */
    criteriaCondn?: pulumi.Input<string>;
    /**
     * Device Group Criteria. Maximum length = 255
     */
    criteriaType?: pulumi.Input<string>;
    /**
     * Criteria Value. Maximum length = 255
     */
    criteriaValue?: pulumi.Input<string>;
    /**
     * Device Family. Minimum length = 1 Maximum length = 64
     */
    deviceFamily?: pulumi.Input<string>;
    /**
     * Setting to disable agent upgrades.
     */
    disableUpgrade?: pulumi.Input<boolean>;
    /**
     * Duration of Maintenance window for groups of category upgrade. Minimum value = 1 Maximum value =
     */
    duration: pulumi.Input<number>;
    /**
     * Upgrade Lock acquiring time. Maximum length = 255
     */
    lockAcquireTime?: pulumi.Input<string>;
    /**
     * Upgrade Lock acquiring device. Maximum length = 255
     */
    lockAcquiringDevice?: pulumi.Input<string>;
    /**
     * Maintenance window start time for groups of category upgrade. Maximum length = 255
     */
    maintenanceWindowStart?: pulumi.Input<string>;
    /**
     * Device Group Name. Maximum length = 255
     */
    name?: pulumi.Input<string>;
    /**
     * Devices in the group.
     */
    staticDeviceList?: pulumi.Input<string>;
    /**
     * Static Device List.
     */
    staticDeviceListArrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Lock to be acquired before upgrading device group.
     */
    upgradeLock?: pulumi.Input<boolean>;
    /**
     * New Available upgrade version for devices. Maximum length = 255
     */
    upgradeVersion?: pulumi.Input<string>;
}
