// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class BlxDeviceProfile extends pulumi.CustomResource {
    /**
     * Get an existing BlxDeviceProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BlxDeviceProfileState, opts?: pulumi.CustomResourceOptions): BlxDeviceProfile {
        return new BlxDeviceProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netscalersdx:index/blxDeviceProfile:BlxDeviceProfile';

    /**
     * Returns true if the given object is an instance of BlxDeviceProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BlxDeviceProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BlxDeviceProfile.__pulumiType;
    }

    /**
     * Profile Name, This is one of the already created Citrix SD-WAN profiles.
     */
    public readonly cbProfileName!: pulumi.Output<string | undefined>;
    /**
     * Host Password for this profile.Used for BLX form factor of ADC. Minimum length = 1 Maximum length = 127
     */
    public readonly hostPassword!: pulumi.Output<string | undefined>;
    /**
     * Host User Name for this profile.Used for BLX form factor of ADC. Minimum length = 1 Maximum length = 127
     */
    public readonly hostUsername!: pulumi.Output<string | undefined>;
    /**
     * HTTP port to connect to the device.
     */
    public readonly httpPort!: pulumi.Output<number | undefined>;
    /**
     * HTTPS port to connect to the device.
     */
    public readonly httpsPort!: pulumi.Output<number | undefined>;
    /**
     * Max waiting time to reboot Citrix ADC.
     */
    public readonly maxWaitTimeReboot!: pulumi.Output<string | undefined>;
    /**
     * Profile Name. Minimum length = 1 Maximum length = 128
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Profile Name, This is one of the already created Citrix ADC profiles.
     */
    public readonly nsProfileName!: pulumi.Output<string | undefined>;
    /**
     * Passphrase with which private key is encrypted.
     */
    public readonly passphrase!: pulumi.Output<string | undefined>;
    /**
     * Instance credentials.Password for this profile. Minimum length = 1 Maximum length = 127
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * SNMP v3 auth password for this profile. Minimum length = 8 Maximum length = 31
     */
    public readonly snmpauthpassword!: pulumi.Output<string | undefined>;
    /**
     * SNMP v3 auth protocol for this profile.
     */
    public readonly snmpauthprotocol!: pulumi.Output<string | undefined>;
    /**
     * SNMP community for this profile. Maximum length = 31
     */
    public readonly snmpcommunity!: pulumi.Output<string | undefined>;
    /**
     * SNMP v3 priv password for this profile. Minimum length = 8 Maximum length = 31
     */
    public readonly snmpprivpassword!: pulumi.Output<string | undefined>;
    /**
     * SNMP v3 priv protocol for this profile.
     */
    public readonly snmpprivprotocol!: pulumi.Output<string | undefined>;
    /**
     * SNMP v3 security level for this profile.
     */
    public readonly snmpsecuritylevel!: pulumi.Output<string | undefined>;
    /**
     * SNMP v3 security name for this profile. Maximum length = 31
     */
    public readonly snmpsecurityname!: pulumi.Output<string | undefined>;
    /**
     * SNMP version for this profile.
     */
    public readonly snmpversion!: pulumi.Output<string | undefined>;
    /**
     * SSH port to connect to the device.
     */
    public readonly sshPort!: pulumi.Output<string | undefined>;
    /**
     * SSL Certificate for certificate based authentication.
     */
    public readonly sslCert!: pulumi.Output<string | undefined>;
    /**
     * SSL Private Key for key based authentication.
     */
    public readonly sslPrivateKey!: pulumi.Output<string | undefined>;
    /**
     * Communication protocol (http or https) with Instances. Minimum length = 1 Maximum length = 10
     */
    public readonly svmNsComm!: pulumi.Output<string | undefined>;
    /**
     * Profile Type, This must be with in specified supported instance types: blx,sdvanvw,ns,nssdx,cbwanopt,cpx. Minimum length
     * = 1 Maximum length = 128
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * True, if the communication with Instance needs to be global and not device specific.
     */
    public readonly useGlobalSettingForCommunicationWithNs!: pulumi.Output<boolean | undefined>;
    /**
     * Instance credentials.Username provided in the profile will be used to contact the instance. Minimum length = 1 Maximum
     * length = 127
     */
    public readonly username!: pulumi.Output<string | undefined>;

    /**
     * Create a BlxDeviceProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BlxDeviceProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BlxDeviceProfileArgs | BlxDeviceProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BlxDeviceProfileState | undefined;
            resourceInputs["cbProfileName"] = state ? state.cbProfileName : undefined;
            resourceInputs["hostPassword"] = state ? state.hostPassword : undefined;
            resourceInputs["hostUsername"] = state ? state.hostUsername : undefined;
            resourceInputs["httpPort"] = state ? state.httpPort : undefined;
            resourceInputs["httpsPort"] = state ? state.httpsPort : undefined;
            resourceInputs["maxWaitTimeReboot"] = state ? state.maxWaitTimeReboot : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nsProfileName"] = state ? state.nsProfileName : undefined;
            resourceInputs["passphrase"] = state ? state.passphrase : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["snmpauthpassword"] = state ? state.snmpauthpassword : undefined;
            resourceInputs["snmpauthprotocol"] = state ? state.snmpauthprotocol : undefined;
            resourceInputs["snmpcommunity"] = state ? state.snmpcommunity : undefined;
            resourceInputs["snmpprivpassword"] = state ? state.snmpprivpassword : undefined;
            resourceInputs["snmpprivprotocol"] = state ? state.snmpprivprotocol : undefined;
            resourceInputs["snmpsecuritylevel"] = state ? state.snmpsecuritylevel : undefined;
            resourceInputs["snmpsecurityname"] = state ? state.snmpsecurityname : undefined;
            resourceInputs["snmpversion"] = state ? state.snmpversion : undefined;
            resourceInputs["sshPort"] = state ? state.sshPort : undefined;
            resourceInputs["sslCert"] = state ? state.sslCert : undefined;
            resourceInputs["sslPrivateKey"] = state ? state.sslPrivateKey : undefined;
            resourceInputs["svmNsComm"] = state ? state.svmNsComm : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["useGlobalSettingForCommunicationWithNs"] = state ? state.useGlobalSettingForCommunicationWithNs : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as BlxDeviceProfileArgs | undefined;
            resourceInputs["cbProfileName"] = args ? args.cbProfileName : undefined;
            resourceInputs["hostPassword"] = args ? args.hostPassword : undefined;
            resourceInputs["hostUsername"] = args ? args.hostUsername : undefined;
            resourceInputs["httpPort"] = args ? args.httpPort : undefined;
            resourceInputs["httpsPort"] = args ? args.httpsPort : undefined;
            resourceInputs["maxWaitTimeReboot"] = args ? args.maxWaitTimeReboot : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nsProfileName"] = args ? args.nsProfileName : undefined;
            resourceInputs["passphrase"] = args ? args.passphrase : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["snmpauthpassword"] = args ? args.snmpauthpassword : undefined;
            resourceInputs["snmpauthprotocol"] = args ? args.snmpauthprotocol : undefined;
            resourceInputs["snmpcommunity"] = args ? args.snmpcommunity : undefined;
            resourceInputs["snmpprivpassword"] = args ? args.snmpprivpassword : undefined;
            resourceInputs["snmpprivprotocol"] = args ? args.snmpprivprotocol : undefined;
            resourceInputs["snmpsecuritylevel"] = args ? args.snmpsecuritylevel : undefined;
            resourceInputs["snmpsecurityname"] = args ? args.snmpsecurityname : undefined;
            resourceInputs["snmpversion"] = args ? args.snmpversion : undefined;
            resourceInputs["sshPort"] = args ? args.sshPort : undefined;
            resourceInputs["sslCert"] = args ? args.sslCert : undefined;
            resourceInputs["sslPrivateKey"] = args ? args.sslPrivateKey : undefined;
            resourceInputs["svmNsComm"] = args ? args.svmNsComm : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["useGlobalSettingForCommunicationWithNs"] = args ? args.useGlobalSettingForCommunicationWithNs : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BlxDeviceProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BlxDeviceProfile resources.
 */
export interface BlxDeviceProfileState {
    /**
     * Profile Name, This is one of the already created Citrix SD-WAN profiles.
     */
    cbProfileName?: pulumi.Input<string>;
    /**
     * Host Password for this profile.Used for BLX form factor of ADC. Minimum length = 1 Maximum length = 127
     */
    hostPassword?: pulumi.Input<string>;
    /**
     * Host User Name for this profile.Used for BLX form factor of ADC. Minimum length = 1 Maximum length = 127
     */
    hostUsername?: pulumi.Input<string>;
    /**
     * HTTP port to connect to the device.
     */
    httpPort?: pulumi.Input<number>;
    /**
     * HTTPS port to connect to the device.
     */
    httpsPort?: pulumi.Input<number>;
    /**
     * Max waiting time to reboot Citrix ADC.
     */
    maxWaitTimeReboot?: pulumi.Input<string>;
    /**
     * Profile Name. Minimum length = 1 Maximum length = 128
     */
    name?: pulumi.Input<string>;
    /**
     * Profile Name, This is one of the already created Citrix ADC profiles.
     */
    nsProfileName?: pulumi.Input<string>;
    /**
     * Passphrase with which private key is encrypted.
     */
    passphrase?: pulumi.Input<string>;
    /**
     * Instance credentials.Password for this profile. Minimum length = 1 Maximum length = 127
     */
    password?: pulumi.Input<string>;
    /**
     * SNMP v3 auth password for this profile. Minimum length = 8 Maximum length = 31
     */
    snmpauthpassword?: pulumi.Input<string>;
    /**
     * SNMP v3 auth protocol for this profile.
     */
    snmpauthprotocol?: pulumi.Input<string>;
    /**
     * SNMP community for this profile. Maximum length = 31
     */
    snmpcommunity?: pulumi.Input<string>;
    /**
     * SNMP v3 priv password for this profile. Minimum length = 8 Maximum length = 31
     */
    snmpprivpassword?: pulumi.Input<string>;
    /**
     * SNMP v3 priv protocol for this profile.
     */
    snmpprivprotocol?: pulumi.Input<string>;
    /**
     * SNMP v3 security level for this profile.
     */
    snmpsecuritylevel?: pulumi.Input<string>;
    /**
     * SNMP v3 security name for this profile. Maximum length = 31
     */
    snmpsecurityname?: pulumi.Input<string>;
    /**
     * SNMP version for this profile.
     */
    snmpversion?: pulumi.Input<string>;
    /**
     * SSH port to connect to the device.
     */
    sshPort?: pulumi.Input<string>;
    /**
     * SSL Certificate for certificate based authentication.
     */
    sslCert?: pulumi.Input<string>;
    /**
     * SSL Private Key for key based authentication.
     */
    sslPrivateKey?: pulumi.Input<string>;
    /**
     * Communication protocol (http or https) with Instances. Minimum length = 1 Maximum length = 10
     */
    svmNsComm?: pulumi.Input<string>;
    /**
     * Profile Type, This must be with in specified supported instance types: blx,sdvanvw,ns,nssdx,cbwanopt,cpx. Minimum length
     * = 1 Maximum length = 128
     */
    type?: pulumi.Input<string>;
    /**
     * True, if the communication with Instance needs to be global and not device specific.
     */
    useGlobalSettingForCommunicationWithNs?: pulumi.Input<boolean>;
    /**
     * Instance credentials.Username provided in the profile will be used to contact the instance. Minimum length = 1 Maximum
     * length = 127
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BlxDeviceProfile resource.
 */
export interface BlxDeviceProfileArgs {
    /**
     * Profile Name, This is one of the already created Citrix SD-WAN profiles.
     */
    cbProfileName?: pulumi.Input<string>;
    /**
     * Host Password for this profile.Used for BLX form factor of ADC. Minimum length = 1 Maximum length = 127
     */
    hostPassword?: pulumi.Input<string>;
    /**
     * Host User Name for this profile.Used for BLX form factor of ADC. Minimum length = 1 Maximum length = 127
     */
    hostUsername?: pulumi.Input<string>;
    /**
     * HTTP port to connect to the device.
     */
    httpPort?: pulumi.Input<number>;
    /**
     * HTTPS port to connect to the device.
     */
    httpsPort?: pulumi.Input<number>;
    /**
     * Max waiting time to reboot Citrix ADC.
     */
    maxWaitTimeReboot?: pulumi.Input<string>;
    /**
     * Profile Name. Minimum length = 1 Maximum length = 128
     */
    name?: pulumi.Input<string>;
    /**
     * Profile Name, This is one of the already created Citrix ADC profiles.
     */
    nsProfileName?: pulumi.Input<string>;
    /**
     * Passphrase with which private key is encrypted.
     */
    passphrase?: pulumi.Input<string>;
    /**
     * Instance credentials.Password for this profile. Minimum length = 1 Maximum length = 127
     */
    password?: pulumi.Input<string>;
    /**
     * SNMP v3 auth password for this profile. Minimum length = 8 Maximum length = 31
     */
    snmpauthpassword?: pulumi.Input<string>;
    /**
     * SNMP v3 auth protocol for this profile.
     */
    snmpauthprotocol?: pulumi.Input<string>;
    /**
     * SNMP community for this profile. Maximum length = 31
     */
    snmpcommunity?: pulumi.Input<string>;
    /**
     * SNMP v3 priv password for this profile. Minimum length = 8 Maximum length = 31
     */
    snmpprivpassword?: pulumi.Input<string>;
    /**
     * SNMP v3 priv protocol for this profile.
     */
    snmpprivprotocol?: pulumi.Input<string>;
    /**
     * SNMP v3 security level for this profile.
     */
    snmpsecuritylevel?: pulumi.Input<string>;
    /**
     * SNMP v3 security name for this profile. Maximum length = 31
     */
    snmpsecurityname?: pulumi.Input<string>;
    /**
     * SNMP version for this profile.
     */
    snmpversion?: pulumi.Input<string>;
    /**
     * SSH port to connect to the device.
     */
    sshPort?: pulumi.Input<string>;
    /**
     * SSL Certificate for certificate based authentication.
     */
    sslCert?: pulumi.Input<string>;
    /**
     * SSL Private Key for key based authentication.
     */
    sslPrivateKey?: pulumi.Input<string>;
    /**
     * Communication protocol (http or https) with Instances. Minimum length = 1 Maximum length = 10
     */
    svmNsComm?: pulumi.Input<string>;
    /**
     * Profile Type, This must be with in specified supported instance types: blx,sdvanvw,ns,nssdx,cbwanopt,cpx. Minimum length
     * = 1 Maximum length = 128
     */
    type?: pulumi.Input<string>;
    /**
     * True, if the communication with Instance needs to be global and not device specific.
     */
    useGlobalSettingForCommunicationWithNs?: pulumi.Input<boolean>;
    /**
     * Instance credentials.Username provided in the profile will be used to contact the instance. Minimum length = 1 Maximum
     * length = 127
     */
    username?: pulumi.Input<string>;
}
