// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SslSettings extends pulumi.CustomResource {
    /**
     * Get an existing SslSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SslSettingsState, opts?: pulumi.CustomResourceOptions): SslSettings {
        return new SslSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netscalersdx:index/sslSettings:SslSettings';

    /**
     * Returns true if the given object is an instance of SslSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SslSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SslSettings.__pulumiType;
    }

    /**
     * Enable SSL Renegotiation.
     */
    public readonly sslreneg!: pulumi.Output<boolean | undefined>;
    /**
     * Enable SSLv3.
     */
    public readonly sslv3!: pulumi.Output<boolean | undefined>;
    /**
     * Enable TLSv1.
     */
    public readonly tlsv1!: pulumi.Output<boolean | undefined>;
    /**
     * Enable TLSv1.1.
     */
    public readonly tlsv11!: pulumi.Output<boolean | undefined>;
    /**
     * Enable TLSv1.2.
     */
    public readonly tlsv12!: pulumi.Output<boolean | undefined>;

    /**
     * Create a SslSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SslSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SslSettingsArgs | SslSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SslSettingsState | undefined;
            resourceInputs["sslreneg"] = state ? state.sslreneg : undefined;
            resourceInputs["sslv3"] = state ? state.sslv3 : undefined;
            resourceInputs["tlsv1"] = state ? state.tlsv1 : undefined;
            resourceInputs["tlsv11"] = state ? state.tlsv11 : undefined;
            resourceInputs["tlsv12"] = state ? state.tlsv12 : undefined;
        } else {
            const args = argsOrState as SslSettingsArgs | undefined;
            resourceInputs["sslreneg"] = args ? args.sslreneg : undefined;
            resourceInputs["sslv3"] = args ? args.sslv3 : undefined;
            resourceInputs["tlsv1"] = args ? args.tlsv1 : undefined;
            resourceInputs["tlsv11"] = args ? args.tlsv11 : undefined;
            resourceInputs["tlsv12"] = args ? args.tlsv12 : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SslSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SslSettings resources.
 */
export interface SslSettingsState {
    /**
     * Enable SSL Renegotiation.
     */
    sslreneg?: pulumi.Input<boolean>;
    /**
     * Enable SSLv3.
     */
    sslv3?: pulumi.Input<boolean>;
    /**
     * Enable TLSv1.
     */
    tlsv1?: pulumi.Input<boolean>;
    /**
     * Enable TLSv1.1.
     */
    tlsv11?: pulumi.Input<boolean>;
    /**
     * Enable TLSv1.2.
     */
    tlsv12?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a SslSettings resource.
 */
export interface SslSettingsArgs {
    /**
     * Enable SSL Renegotiation.
     */
    sslreneg?: pulumi.Input<boolean>;
    /**
     * Enable SSLv3.
     */
    sslv3?: pulumi.Input<boolean>;
    /**
     * Enable TLSv1.
     */
    tlsv1?: pulumi.Input<boolean>;
    /**
     * Enable TLSv1.1.
     */
    tlsv11?: pulumi.Input<boolean>;
    /**
     * Enable TLSv1.2.
     */
    tlsv12?: pulumi.Input<boolean>;
}
