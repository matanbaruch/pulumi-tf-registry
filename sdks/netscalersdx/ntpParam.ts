// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NtpParam extends pulumi.CustomResource {
    /**
     * Get an existing NtpParam resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NtpParamState, opts?: pulumi.CustomResourceOptions): NtpParam {
        return new NtpParam(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netscalersdx:index/ntpParam:NtpParam';

    /**
     * Returns true if the given object is an instance of NtpParam.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NtpParam {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NtpParam.__pulumiType;
    }

    /**
     * Authentication Enabled.
     */
    public readonly authentication!: pulumi.Output<boolean>;
    /**
     * Automax Interval (as power of 2 in seconds).
     */
    public readonly automaxLogsec!: pulumi.Output<number | undefined>;
    /**
     * Revoke Interval (as power of 2 in seconds).
     */
    public readonly revokeLogsec!: pulumi.Output<number | undefined>;
    /**
     * List of Trusted Key Identifiers for Symmetric Key Cryptography. Minimum value = 1 Maximum value =
     */
    public readonly trustedKeyLists!: pulumi.Output<number[] | undefined>;

    /**
     * Create a NtpParam resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NtpParamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NtpParamArgs | NtpParamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NtpParamState | undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["automaxLogsec"] = state ? state.automaxLogsec : undefined;
            resourceInputs["revokeLogsec"] = state ? state.revokeLogsec : undefined;
            resourceInputs["trustedKeyLists"] = state ? state.trustedKeyLists : undefined;
        } else {
            const args = argsOrState as NtpParamArgs | undefined;
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["automaxLogsec"] = args ? args.automaxLogsec : undefined;
            resourceInputs["revokeLogsec"] = args ? args.revokeLogsec : undefined;
            resourceInputs["trustedKeyLists"] = args ? args.trustedKeyLists : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NtpParam.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NtpParam resources.
 */
export interface NtpParamState {
    /**
     * Authentication Enabled.
     */
    authentication?: pulumi.Input<boolean>;
    /**
     * Automax Interval (as power of 2 in seconds).
     */
    automaxLogsec?: pulumi.Input<number>;
    /**
     * Revoke Interval (as power of 2 in seconds).
     */
    revokeLogsec?: pulumi.Input<number>;
    /**
     * List of Trusted Key Identifiers for Symmetric Key Cryptography. Minimum value = 1 Maximum value =
     */
    trustedKeyLists?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * The set of arguments for constructing a NtpParam resource.
 */
export interface NtpParamArgs {
    /**
     * Authentication Enabled.
     */
    authentication?: pulumi.Input<boolean>;
    /**
     * Automax Interval (as power of 2 in seconds).
     */
    automaxLogsec?: pulumi.Input<number>;
    /**
     * Revoke Interval (as power of 2 in seconds).
     */
    revokeLogsec?: pulumi.Input<number>;
    /**
     * List of Trusted Key Identifiers for Symmetric Key Cryptography. Minimum value = 1 Maximum value =
     */
    trustedKeyLists?: pulumi.Input<pulumi.Input<number>[]>;
}
