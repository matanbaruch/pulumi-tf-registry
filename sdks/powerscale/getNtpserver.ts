// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNtpserver(args?: GetNtpserverArgs, opts?: pulumi.InvokeOptions): Promise<GetNtpserverResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powerscale:index/getNtpserver:getNtpserver", {
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNtpserver.
 */
export interface GetNtpserverArgs {
    filter?: inputs.GetNtpserverFilter;
}

/**
 * A collection of values returned by getNtpserver.
 */
export interface GetNtpserverResult {
    readonly filter?: outputs.GetNtpserverFilter;
    readonly id: string;
    readonly ntpServersDetails: outputs.GetNtpserverNtpServersDetail[];
}
export function getNtpserverOutput(args?: GetNtpserverOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNtpserverResult> {
    return pulumi.output(args).apply((a: any) => getNtpserver(a, opts))
}

/**
 * A collection of arguments for invoking getNtpserver.
 */
export interface GetNtpserverOutputArgs {
    filter?: pulumi.Input<inputs.GetNtpserverFilterArgs>;
}
