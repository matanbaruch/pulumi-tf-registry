// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAccesszone(args?: GetAccesszoneArgs, opts?: pulumi.InvokeOptions): Promise<GetAccesszoneResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powerscale:index/getAccesszone:getAccesszone", {
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccesszone.
 */
export interface GetAccesszoneArgs {
    filter?: inputs.GetAccesszoneFilter;
}

/**
 * A collection of values returned by getAccesszone.
 */
export interface GetAccesszoneResult {
    readonly accessZonesDetails: outputs.GetAccesszoneAccessZonesDetail[];
    readonly filter?: outputs.GetAccesszoneFilter;
    readonly id: string;
}
export function getAccesszoneOutput(args?: GetAccesszoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccesszoneResult> {
    return pulumi.output(args).apply((a: any) => getAccesszone(a, opts))
}

/**
 * A collection of arguments for invoking getAccesszone.
 */
export interface GetAccesszoneOutputArgs {
    filter?: pulumi.Input<inputs.GetAccesszoneFilterArgs>;
}
