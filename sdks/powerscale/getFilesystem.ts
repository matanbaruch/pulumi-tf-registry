// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFilesystem(args?: GetFilesystemArgs, opts?: pulumi.InvokeOptions): Promise<GetFilesystemResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powerscale:index/getFilesystem:getFilesystem", {
        "directoryPath": args.directoryPath,
        "fileSystemsDetails": args.fileSystemsDetails,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFilesystem.
 */
export interface GetFilesystemArgs {
    directoryPath?: string;
    fileSystemsDetails?: inputs.GetFilesystemFileSystemsDetails;
    id?: string;
}

/**
 * A collection of values returned by getFilesystem.
 */
export interface GetFilesystemResult {
    readonly directoryPath: string;
    readonly fileSystemsDetails: outputs.GetFilesystemFileSystemsDetails;
    readonly id: string;
}
export function getFilesystemOutput(args?: GetFilesystemOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFilesystemResult> {
    return pulumi.output(args).apply((a: any) => getFilesystem(a, opts))
}

/**
 * A collection of arguments for invoking getFilesystem.
 */
export interface GetFilesystemOutputArgs {
    directoryPath?: pulumi.Input<string>;
    fileSystemsDetails?: pulumi.Input<inputs.GetFilesystemFileSystemsDetailsArgs>;
    id?: pulumi.Input<string>;
}
