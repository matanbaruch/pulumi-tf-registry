// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRoleprivilege(args?: GetRoleprivilegeArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleprivilegeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powerscale:index/getRoleprivilege:getRoleprivilege", {
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoleprivilege.
 */
export interface GetRoleprivilegeArgs {
    filter?: inputs.GetRoleprivilegeFilter;
}

/**
 * A collection of values returned by getRoleprivilege.
 */
export interface GetRoleprivilegeResult {
    readonly filter?: outputs.GetRoleprivilegeFilter;
    readonly id: string;
    readonly rolePrivilegesDetails: outputs.GetRoleprivilegeRolePrivilegesDetail[];
}
export function getRoleprivilegeOutput(args?: GetRoleprivilegeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoleprivilegeResult> {
    return pulumi.output(args).apply((a: any) => getRoleprivilege(a, opts))
}

/**
 * A collection of arguments for invoking getRoleprivilege.
 */
export interface GetRoleprivilegeOutputArgs {
    filter?: pulumi.Input<inputs.GetRoleprivilegeFilterArgs>;
}
