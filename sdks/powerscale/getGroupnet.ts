// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGroupnet(args?: GetGroupnetArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupnetResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powerscale:index/getGroupnet:getGroupnet", {
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGroupnet.
 */
export interface GetGroupnetArgs {
    filter?: inputs.GetGroupnetFilter;
}

/**
 * A collection of values returned by getGroupnet.
 */
export interface GetGroupnetResult {
    readonly filter?: outputs.GetGroupnetFilter;
    readonly groupnets: outputs.GetGroupnetGroupnet[];
    readonly id: string;
}
export function getGroupnetOutput(args?: GetGroupnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupnetResult> {
    return pulumi.output(args).apply((a: any) => getGroupnet(a, opts))
}

/**
 * A collection of arguments for invoking getGroupnet.
 */
export interface GetGroupnetOutputArgs {
    filter?: pulumi.Input<inputs.GetGroupnetFilterArgs>;
}
