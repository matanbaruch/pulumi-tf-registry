// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNamespaceAcl(args?: GetNamespaceAclArgs, opts?: pulumi.InvokeOptions): Promise<GetNamespaceAclResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powerscale:index/getNamespaceAcl:getNamespaceAcl", {
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNamespaceAcl.
 */
export interface GetNamespaceAclArgs {
    filter?: inputs.GetNamespaceAclFilter;
}

/**
 * A collection of values returned by getNamespaceAcl.
 */
export interface GetNamespaceAclResult {
    readonly acls: outputs.GetNamespaceAclAcl[];
    readonly authoritative: string;
    readonly filter?: outputs.GetNamespaceAclFilter;
    readonly group: outputs.GetNamespaceAclGroup;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly mode: string;
    readonly owner: outputs.GetNamespaceAclOwner;
}
export function getNamespaceAclOutput(args?: GetNamespaceAclOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNamespaceAclResult> {
    return pulumi.output(args).apply((a: any) => getNamespaceAcl(a, opts))
}

/**
 * A collection of arguments for invoking getNamespaceAcl.
 */
export interface GetNamespaceAclOutputArgs {
    filter?: pulumi.Input<inputs.GetNamespaceAclFilterArgs>;
}
