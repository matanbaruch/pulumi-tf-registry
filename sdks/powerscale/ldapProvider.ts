// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LdapProvider extends pulumi.CustomResource {
    /**
     * Get an existing LdapProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LdapProviderState, opts?: pulumi.CustomResourceOptions): LdapProvider {
        return new LdapProvider(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'powerscale:index/ldapProvider:LdapProvider';

    /**
     * Returns true if the given object is an instance of LdapProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LdapProvider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LdapProvider.__pulumiType;
    }

    /**
     * Specifies the attribute name used when searching for alternate security identities. (Update Supported)
     */
    public readonly alternateSecurityIdentitiesAttribute!: pulumi.Output<string>;
    /**
     * If true, enables authentication and identity management through the authentication provider. (Update Supported)
     */
    public readonly authentication!: pulumi.Output<boolean>;
    /**
     * If true, connects the provider to a random server. (Update Supported)
     */
    public readonly balanceServers!: pulumi.Output<boolean>;
    /**
     * Specifies the root of the tree in which to search identities. (Update Supported)
     */
    public readonly baseDn!: pulumi.Output<string>;
    /**
     * Specifies the distinguished name for binding to the LDAP server. (Update Supported)
     */
    public readonly bindDn!: pulumi.Output<string>;
    /**
     * Specifies which bind mechanism to use when connecting to an LDAP server. The only supported option is the 'simple'
     * value. (Update Supported)
     */
    public readonly bindMechanism!: pulumi.Output<string>;
    /**
     * Specifies the timeout in seconds when binding to an LDAP server. (Update Supported)
     */
    public readonly bindTimeout!: pulumi.Output<number>;
    /**
     * Specifies the path to the root certificates file. (Update Supported)
     */
    public readonly certificateAuthorityFile!: pulumi.Output<string>;
    /**
     * Specifies the time in seconds between provider online checks. (Update Supported)
     */
    public readonly checkOnlineInterval!: pulumi.Output<number>;
    /**
     * Specifies the canonical name. (Update Supported)
     */
    public readonly cnAttribute!: pulumi.Output<string>;
    /**
     * Automatically create the home directory on the first login. (Update Supported)
     */
    public readonly createHomeDirectory!: pulumi.Output<boolean>;
    /**
     * Specifies the hashed password value. (Update Supported)
     */
    public readonly cryptPasswordAttribute!: pulumi.Output<string>;
    /**
     * Specifies the LDAP Email attribute. (Update Supported)
     */
    public readonly emailAttribute!: pulumi.Output<string>;
    /**
     * If true, enables the LDAP provider. (Update Supported)
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * If true, allows the provider to enumerate groups. (Update Supported)
     */
    public readonly enumerateGroups!: pulumi.Output<boolean>;
    /**
     * If true, allows the provider to enumerate users. (Update Supported)
     */
    public readonly enumerateUsers!: pulumi.Output<boolean>;
    /**
     * Specifies the list of groups that can be resolved. (Update Supported)
     */
    public readonly findableGroups!: pulumi.Output<string[]>;
    /**
     * Specifies the list of users that can be resolved. (Update Supported)
     */
    public readonly findableUsers!: pulumi.Output<string[]>;
    /**
     * Specifies the LDAP GECOS attribute. (Update Supported)
     */
    public readonly gecosAttribute!: pulumi.Output<string>;
    /**
     * Specifies the LDAP GID attribute. (Update Supported)
     */
    public readonly gidAttribute!: pulumi.Output<string>;
    /**
     * Specifies the distinguished name of the entry where LDAP searches for groups are started. (Update Supported)
     */
    public readonly groupBaseDn!: pulumi.Output<string>;
    /**
     * Specifies the domain for this provider through which groups are qualified. (Update Supported)
     */
    public readonly groupDomain!: pulumi.Output<string>;
    /**
     * Specifies the LDAP filter for group objects. (Update Supported)
     */
    public readonly groupFilter!: pulumi.Output<string>;
    /**
     * Specifies the LDAP Group Members attribute. (Update Supported)
     */
    public readonly groupMembersAttribute!: pulumi.Output<string>;
    /**
     * Specifies the depth from the base DN to perform LDAP searches. Acceptable values: "default", "base", "onelevel",
     * "subtree", "children". (Update Supported)
     */
    public readonly groupSearchScope!: pulumi.Output<string>;
    /**
     * Groupnet identifier.
     */
    public readonly groupnet!: pulumi.Output<string>;
    /**
     * Specifies the path to the home directory template. (Update Supported)
     */
    public readonly homeDirectoryTemplate!: pulumi.Output<string>;
    /**
     * Specifies the LDAP Homedir attribute. (Update Supported)
     */
    public readonly homedirAttribute!: pulumi.Output<string>;
    /**
     * If true, continues over secure connections even if identity checks fail. (Update Supported)
     */
    public readonly ignoreTlsErrors!: pulumi.Output<boolean>;
    /**
     * Ignore unresolvable server URIs when creating and updating. (Update Supported)
     */
    public readonly ignoreUnresolvableServerUrls!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the groups that can be viewed in the provider. (Update Supported)
     */
    public readonly listableGroups!: pulumi.Output<string[]>;
    /**
     * Specifies the users that can be viewed in the provider. (Update Supported)
     */
    public readonly listableUsers!: pulumi.Output<string[]>;
    /**
     * Specifies the login shell path. (Update Supported)
     */
    public readonly loginShell!: pulumi.Output<string>;
    /**
     * Sets the method by which group member lookups are performed. Use caution when changing this option directly. Acceptable
     * values: "default", "rfc2307bis". (Update Supported)
     */
    public readonly memberLookupMethod!: pulumi.Output<string>;
    /**
     * Specifies the LDAP Query Member Of attribute, which performs reverse membership queries. (Update Supported)
     */
    public readonly memberOfAttribute!: pulumi.Output<string>;
    /**
     * Specifies the name of the LDAP provider. (Update Supported)
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the LDAP UID attribute, which is used as the login name. (Update Supported)
     */
    public readonly nameAttribute!: pulumi.Output<string>;
    /**
     * Specifies the distinguished name of the entry where LDAP searches for netgroups are started. (Update Supported)
     */
    public readonly netgroupBaseDn!: pulumi.Output<string>;
    /**
     * Specifies the LDAP filter for netgroup objects. (Update Supported)
     */
    public readonly netgroupFilter!: pulumi.Output<string>;
    /**
     * Specifies the LDAP Netgroup Members attribute. (Update Supported)
     */
    public readonly netgroupMembersAttribute!: pulumi.Output<string>;
    /**
     * Specifies the depth from the base DN to perform LDAP searches. Acceptable values: "default", "base", "onelevel",
     * "subtree", "children". (Update Supported)
     */
    public readonly netgroupSearchScope!: pulumi.Output<string>;
    /**
     * Specifies the LDAP Netgroup Triple attribute. (Update Supported)
     */
    public readonly netgroupTripleAttribute!: pulumi.Output<string>;
    /**
     * Normalizes group names to lowercase before look up. (Update Supported)
     */
    public readonly normalizeGroups!: pulumi.Output<boolean>;
    /**
     * Normalizes user names to lowercase before look up. (Update Supported)
     */
    public readonly normalizeUsers!: pulumi.Output<boolean>;
    /**
     * Specifies the LDAP NT Password attribute. (Update Supported)
     */
    public readonly ntPasswordAttribute!: pulumi.Output<string>;
    /**
     * Specifies which NTLM versions to support for users with NTLM-compatible credentials. Acceptable values: "all", "v2only",
     * "none". (Update Supported)
     */
    public readonly ntlmSupport!: pulumi.Output<string>;
    /**
     * Specifies the OCSP server URIs. Only available for PowerScale 9.5 and above. (Update Supported)
     */
    public readonly ocspServerUris!: pulumi.Output<string[]>;
    /**
     * Specifies the provider domain. (Update Supported)
     */
    public readonly providerDomain!: pulumi.Output<string>;
    /**
     * Determines whether to continue over a non-TLS connection. (Update Supported)
     */
    public readonly requireSecureConnection!: pulumi.Output<boolean>;
    /**
     * If true, checks the provider for filtered lists of findable and unfindable users and groups. (Update Supported)
     */
    public readonly restrictFindable!: pulumi.Output<boolean>;
    /**
     * If true, checks the provider for filtered lists of listable and unlistable users and groups. (Update Supported)
     */
    public readonly restrictListable!: pulumi.Output<boolean>;
    /**
     * Specifies the default depth from the base DN to perform LDAP searches. Acceptable values: "base", "onelevel", "subtree",
     * "children". (Update Supported)
     */
    public readonly searchScope!: pulumi.Output<string>;
    /**
     * Specifies the search timeout period in seconds. (Update Supported)
     */
    public readonly searchTimeout!: pulumi.Output<number>;
    /**
     * Specifies the server URIs. (Update Supported)
     */
    public readonly serverUris!: pulumi.Output<string[]>;
    /**
     * Sets the attribute name that indicates the absolute date to expire the account. (Update Supported)
     */
    public readonly shadowExpireAttribute!: pulumi.Output<string>;
    /**
     * Sets the attribute name that indicates the section of the shadow map that is used to store the flag value. (Update
     * Supported)
     */
    public readonly shadowFlagAttribute!: pulumi.Output<string>;
    /**
     * Sets the attribute name that indicates the number of days of inactivity that is allowed for the user. (Update Supported)
     */
    public readonly shadowInactiveAttribute!: pulumi.Output<string>;
    /**
     * Sets the attribute name that indicates the last change of the shadow information. (Update Supported)
     */
    public readonly shadowLastChangeAttribute!: pulumi.Output<string>;
    /**
     * Sets the attribute name that indicates the maximum number of days a password can be valid. (Update Supported)
     */
    public readonly shadowMaxAttribute!: pulumi.Output<string>;
    /**
     * Sets the attribute name that indicates the minimum number of days between shadow changes. (Update Supported)
     */
    public readonly shadowMinAttribute!: pulumi.Output<string>;
    /**
     * Sets LDAP filter for shadow user objects. (Update Supported)
     */
    public readonly shadowUserFilter!: pulumi.Output<string>;
    /**
     * Sets the attribute name that indicates the number of days before the password expires to warn the user. (Update
     * Supported)
     */
    public readonly shadowWarningAttribute!: pulumi.Output<string>;
    /**
     * Specifies the LDAP Shell attribute. (Update Supported)
     */
    public readonly shellAttribute!: pulumi.Output<string>;
    /**
     * Sets the attribute name that indicates the SSH Public Key for the user. (Update Supported)
     */
    public readonly sshPublicKeyAttribute!: pulumi.Output<string>;
    /**
     * Specifies the status of the provider. (Update Supported)
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * If true, indicates that this provider instance was created by OneFS and cannot be removed. (Update Supported)
     */
    public readonly system!: pulumi.Output<boolean>;
    /**
     * Specifies the minimum TLS protocol version. (Update Supported)
     */
    public readonly tlsProtocolMin!: pulumi.Output<string>;
    /**
     * This setting controls the behavior of the certificate revocation checking algorithm when the LDAP provider is presented
     * with a digital certificate by an LDAP server. Acceptable values: "none", "allowNoData", "allowNoSrc", "strict". Only
     * available for PowerScale 9.5 and above. (Update Supported)
     */
    public readonly tlsRevocationCheckLevel!: pulumi.Output<string>;
    /**
     * Specifies the LDAP UID Number attribute. (Update Supported)
     */
    public readonly uidAttribute!: pulumi.Output<string>;
    /**
     * Specifies the groups that cannot be resolved by the provider. (Update Supported)
     */
    public readonly unfindableGroups!: pulumi.Output<string[]>;
    /**
     * Specifies users that cannot be resolved by the provider. (Update Supported)
     */
    public readonly unfindableUsers!: pulumi.Output<string[]>;
    /**
     * Sets the LDAP Unique Group Members attribute. (Update Supported)
     */
    public readonly uniqueGroupMembersAttribute!: pulumi.Output<string>;
    /**
     * Specifies a group that cannot be listed by the provider. (Update Supported)
     */
    public readonly unlistableGroups!: pulumi.Output<string[]>;
    /**
     * Specifies a user that cannot be listed by the provider. (Update Supported)
     */
    public readonly unlistableUsers!: pulumi.Output<string[]>;
    /**
     * Specifies the distinguished name of the entry at which to start LDAP searches for users. (Update Supported)
     */
    public readonly userBaseDn!: pulumi.Output<string>;
    /**
     * Specifies the domain for this provider through which users are qualified. (Update Supported)
     */
    public readonly userDomain!: pulumi.Output<string>;
    /**
     * Specifies the LDAP filter for user objects. (Update Supported)
     */
    public readonly userFilter!: pulumi.Output<string>;
    /**
     * Specifies the depth from the base DN to perform LDAP searches. Acceptable values: "default", "base", "onelevel",
     * "subtree", "children". (Update Supported)
     */
    public readonly userSearchScope!: pulumi.Output<string>;
    /**
     * Specifies the name of the access zone in which this provider was created.
     */
    public /*out*/ readonly zoneName!: pulumi.Output<string>;

    /**
     * Create a LdapProvider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LdapProviderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LdapProviderArgs | LdapProviderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LdapProviderState | undefined;
            resourceInputs["alternateSecurityIdentitiesAttribute"] = state ? state.alternateSecurityIdentitiesAttribute : undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["balanceServers"] = state ? state.balanceServers : undefined;
            resourceInputs["baseDn"] = state ? state.baseDn : undefined;
            resourceInputs["bindDn"] = state ? state.bindDn : undefined;
            resourceInputs["bindMechanism"] = state ? state.bindMechanism : undefined;
            resourceInputs["bindTimeout"] = state ? state.bindTimeout : undefined;
            resourceInputs["certificateAuthorityFile"] = state ? state.certificateAuthorityFile : undefined;
            resourceInputs["checkOnlineInterval"] = state ? state.checkOnlineInterval : undefined;
            resourceInputs["cnAttribute"] = state ? state.cnAttribute : undefined;
            resourceInputs["createHomeDirectory"] = state ? state.createHomeDirectory : undefined;
            resourceInputs["cryptPasswordAttribute"] = state ? state.cryptPasswordAttribute : undefined;
            resourceInputs["emailAttribute"] = state ? state.emailAttribute : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["enumerateGroups"] = state ? state.enumerateGroups : undefined;
            resourceInputs["enumerateUsers"] = state ? state.enumerateUsers : undefined;
            resourceInputs["findableGroups"] = state ? state.findableGroups : undefined;
            resourceInputs["findableUsers"] = state ? state.findableUsers : undefined;
            resourceInputs["gecosAttribute"] = state ? state.gecosAttribute : undefined;
            resourceInputs["gidAttribute"] = state ? state.gidAttribute : undefined;
            resourceInputs["groupBaseDn"] = state ? state.groupBaseDn : undefined;
            resourceInputs["groupDomain"] = state ? state.groupDomain : undefined;
            resourceInputs["groupFilter"] = state ? state.groupFilter : undefined;
            resourceInputs["groupMembersAttribute"] = state ? state.groupMembersAttribute : undefined;
            resourceInputs["groupSearchScope"] = state ? state.groupSearchScope : undefined;
            resourceInputs["groupnet"] = state ? state.groupnet : undefined;
            resourceInputs["homeDirectoryTemplate"] = state ? state.homeDirectoryTemplate : undefined;
            resourceInputs["homedirAttribute"] = state ? state.homedirAttribute : undefined;
            resourceInputs["ignoreTlsErrors"] = state ? state.ignoreTlsErrors : undefined;
            resourceInputs["ignoreUnresolvableServerUrls"] = state ? state.ignoreUnresolvableServerUrls : undefined;
            resourceInputs["listableGroups"] = state ? state.listableGroups : undefined;
            resourceInputs["listableUsers"] = state ? state.listableUsers : undefined;
            resourceInputs["loginShell"] = state ? state.loginShell : undefined;
            resourceInputs["memberLookupMethod"] = state ? state.memberLookupMethod : undefined;
            resourceInputs["memberOfAttribute"] = state ? state.memberOfAttribute : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameAttribute"] = state ? state.nameAttribute : undefined;
            resourceInputs["netgroupBaseDn"] = state ? state.netgroupBaseDn : undefined;
            resourceInputs["netgroupFilter"] = state ? state.netgroupFilter : undefined;
            resourceInputs["netgroupMembersAttribute"] = state ? state.netgroupMembersAttribute : undefined;
            resourceInputs["netgroupSearchScope"] = state ? state.netgroupSearchScope : undefined;
            resourceInputs["netgroupTripleAttribute"] = state ? state.netgroupTripleAttribute : undefined;
            resourceInputs["normalizeGroups"] = state ? state.normalizeGroups : undefined;
            resourceInputs["normalizeUsers"] = state ? state.normalizeUsers : undefined;
            resourceInputs["ntPasswordAttribute"] = state ? state.ntPasswordAttribute : undefined;
            resourceInputs["ntlmSupport"] = state ? state.ntlmSupport : undefined;
            resourceInputs["ocspServerUris"] = state ? state.ocspServerUris : undefined;
            resourceInputs["providerDomain"] = state ? state.providerDomain : undefined;
            resourceInputs["requireSecureConnection"] = state ? state.requireSecureConnection : undefined;
            resourceInputs["restrictFindable"] = state ? state.restrictFindable : undefined;
            resourceInputs["restrictListable"] = state ? state.restrictListable : undefined;
            resourceInputs["searchScope"] = state ? state.searchScope : undefined;
            resourceInputs["searchTimeout"] = state ? state.searchTimeout : undefined;
            resourceInputs["serverUris"] = state ? state.serverUris : undefined;
            resourceInputs["shadowExpireAttribute"] = state ? state.shadowExpireAttribute : undefined;
            resourceInputs["shadowFlagAttribute"] = state ? state.shadowFlagAttribute : undefined;
            resourceInputs["shadowInactiveAttribute"] = state ? state.shadowInactiveAttribute : undefined;
            resourceInputs["shadowLastChangeAttribute"] = state ? state.shadowLastChangeAttribute : undefined;
            resourceInputs["shadowMaxAttribute"] = state ? state.shadowMaxAttribute : undefined;
            resourceInputs["shadowMinAttribute"] = state ? state.shadowMinAttribute : undefined;
            resourceInputs["shadowUserFilter"] = state ? state.shadowUserFilter : undefined;
            resourceInputs["shadowWarningAttribute"] = state ? state.shadowWarningAttribute : undefined;
            resourceInputs["shellAttribute"] = state ? state.shellAttribute : undefined;
            resourceInputs["sshPublicKeyAttribute"] = state ? state.sshPublicKeyAttribute : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["system"] = state ? state.system : undefined;
            resourceInputs["tlsProtocolMin"] = state ? state.tlsProtocolMin : undefined;
            resourceInputs["tlsRevocationCheckLevel"] = state ? state.tlsRevocationCheckLevel : undefined;
            resourceInputs["uidAttribute"] = state ? state.uidAttribute : undefined;
            resourceInputs["unfindableGroups"] = state ? state.unfindableGroups : undefined;
            resourceInputs["unfindableUsers"] = state ? state.unfindableUsers : undefined;
            resourceInputs["uniqueGroupMembersAttribute"] = state ? state.uniqueGroupMembersAttribute : undefined;
            resourceInputs["unlistableGroups"] = state ? state.unlistableGroups : undefined;
            resourceInputs["unlistableUsers"] = state ? state.unlistableUsers : undefined;
            resourceInputs["userBaseDn"] = state ? state.userBaseDn : undefined;
            resourceInputs["userDomain"] = state ? state.userDomain : undefined;
            resourceInputs["userFilter"] = state ? state.userFilter : undefined;
            resourceInputs["userSearchScope"] = state ? state.userSearchScope : undefined;
            resourceInputs["zoneName"] = state ? state.zoneName : undefined;
        } else {
            const args = argsOrState as LdapProviderArgs | undefined;
            if ((!args || args.baseDn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baseDn'");
            }
            if ((!args || args.serverUris === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverUris'");
            }
            resourceInputs["alternateSecurityIdentitiesAttribute"] = args ? args.alternateSecurityIdentitiesAttribute : undefined;
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["balanceServers"] = args ? args.balanceServers : undefined;
            resourceInputs["baseDn"] = args ? args.baseDn : undefined;
            resourceInputs["bindDn"] = args ? args.bindDn : undefined;
            resourceInputs["bindMechanism"] = args ? args.bindMechanism : undefined;
            resourceInputs["bindTimeout"] = args ? args.bindTimeout : undefined;
            resourceInputs["certificateAuthorityFile"] = args ? args.certificateAuthorityFile : undefined;
            resourceInputs["checkOnlineInterval"] = args ? args.checkOnlineInterval : undefined;
            resourceInputs["cnAttribute"] = args ? args.cnAttribute : undefined;
            resourceInputs["createHomeDirectory"] = args ? args.createHomeDirectory : undefined;
            resourceInputs["cryptPasswordAttribute"] = args ? args.cryptPasswordAttribute : undefined;
            resourceInputs["emailAttribute"] = args ? args.emailAttribute : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["enumerateGroups"] = args ? args.enumerateGroups : undefined;
            resourceInputs["enumerateUsers"] = args ? args.enumerateUsers : undefined;
            resourceInputs["findableGroups"] = args ? args.findableGroups : undefined;
            resourceInputs["findableUsers"] = args ? args.findableUsers : undefined;
            resourceInputs["gecosAttribute"] = args ? args.gecosAttribute : undefined;
            resourceInputs["gidAttribute"] = args ? args.gidAttribute : undefined;
            resourceInputs["groupBaseDn"] = args ? args.groupBaseDn : undefined;
            resourceInputs["groupDomain"] = args ? args.groupDomain : undefined;
            resourceInputs["groupFilter"] = args ? args.groupFilter : undefined;
            resourceInputs["groupMembersAttribute"] = args ? args.groupMembersAttribute : undefined;
            resourceInputs["groupSearchScope"] = args ? args.groupSearchScope : undefined;
            resourceInputs["groupnet"] = args ? args.groupnet : undefined;
            resourceInputs["homeDirectoryTemplate"] = args ? args.homeDirectoryTemplate : undefined;
            resourceInputs["homedirAttribute"] = args ? args.homedirAttribute : undefined;
            resourceInputs["ignoreTlsErrors"] = args ? args.ignoreTlsErrors : undefined;
            resourceInputs["ignoreUnresolvableServerUrls"] = args ? args.ignoreUnresolvableServerUrls : undefined;
            resourceInputs["listableGroups"] = args ? args.listableGroups : undefined;
            resourceInputs["listableUsers"] = args ? args.listableUsers : undefined;
            resourceInputs["loginShell"] = args ? args.loginShell : undefined;
            resourceInputs["memberLookupMethod"] = args ? args.memberLookupMethod : undefined;
            resourceInputs["memberOfAttribute"] = args ? args.memberOfAttribute : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameAttribute"] = args ? args.nameAttribute : undefined;
            resourceInputs["netgroupBaseDn"] = args ? args.netgroupBaseDn : undefined;
            resourceInputs["netgroupFilter"] = args ? args.netgroupFilter : undefined;
            resourceInputs["netgroupMembersAttribute"] = args ? args.netgroupMembersAttribute : undefined;
            resourceInputs["netgroupSearchScope"] = args ? args.netgroupSearchScope : undefined;
            resourceInputs["netgroupTripleAttribute"] = args ? args.netgroupTripleAttribute : undefined;
            resourceInputs["normalizeGroups"] = args ? args.normalizeGroups : undefined;
            resourceInputs["normalizeUsers"] = args ? args.normalizeUsers : undefined;
            resourceInputs["ntPasswordAttribute"] = args ? args.ntPasswordAttribute : undefined;
            resourceInputs["ntlmSupport"] = args ? args.ntlmSupport : undefined;
            resourceInputs["ocspServerUris"] = args ? args.ocspServerUris : undefined;
            resourceInputs["providerDomain"] = args ? args.providerDomain : undefined;
            resourceInputs["requireSecureConnection"] = args ? args.requireSecureConnection : undefined;
            resourceInputs["restrictFindable"] = args ? args.restrictFindable : undefined;
            resourceInputs["restrictListable"] = args ? args.restrictListable : undefined;
            resourceInputs["searchScope"] = args ? args.searchScope : undefined;
            resourceInputs["searchTimeout"] = args ? args.searchTimeout : undefined;
            resourceInputs["serverUris"] = args ? args.serverUris : undefined;
            resourceInputs["shadowExpireAttribute"] = args ? args.shadowExpireAttribute : undefined;
            resourceInputs["shadowFlagAttribute"] = args ? args.shadowFlagAttribute : undefined;
            resourceInputs["shadowInactiveAttribute"] = args ? args.shadowInactiveAttribute : undefined;
            resourceInputs["shadowLastChangeAttribute"] = args ? args.shadowLastChangeAttribute : undefined;
            resourceInputs["shadowMaxAttribute"] = args ? args.shadowMaxAttribute : undefined;
            resourceInputs["shadowMinAttribute"] = args ? args.shadowMinAttribute : undefined;
            resourceInputs["shadowUserFilter"] = args ? args.shadowUserFilter : undefined;
            resourceInputs["shadowWarningAttribute"] = args ? args.shadowWarningAttribute : undefined;
            resourceInputs["shellAttribute"] = args ? args.shellAttribute : undefined;
            resourceInputs["sshPublicKeyAttribute"] = args ? args.sshPublicKeyAttribute : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["system"] = args ? args.system : undefined;
            resourceInputs["tlsProtocolMin"] = args ? args.tlsProtocolMin : undefined;
            resourceInputs["tlsRevocationCheckLevel"] = args ? args.tlsRevocationCheckLevel : undefined;
            resourceInputs["uidAttribute"] = args ? args.uidAttribute : undefined;
            resourceInputs["unfindableGroups"] = args ? args.unfindableGroups : undefined;
            resourceInputs["unfindableUsers"] = args ? args.unfindableUsers : undefined;
            resourceInputs["uniqueGroupMembersAttribute"] = args ? args.uniqueGroupMembersAttribute : undefined;
            resourceInputs["unlistableGroups"] = args ? args.unlistableGroups : undefined;
            resourceInputs["unlistableUsers"] = args ? args.unlistableUsers : undefined;
            resourceInputs["userBaseDn"] = args ? args.userBaseDn : undefined;
            resourceInputs["userDomain"] = args ? args.userDomain : undefined;
            resourceInputs["userFilter"] = args ? args.userFilter : undefined;
            resourceInputs["userSearchScope"] = args ? args.userSearchScope : undefined;
            resourceInputs["zoneName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LdapProvider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LdapProvider resources.
 */
export interface LdapProviderState {
    /**
     * Specifies the attribute name used when searching for alternate security identities. (Update Supported)
     */
    alternateSecurityIdentitiesAttribute?: pulumi.Input<string>;
    /**
     * If true, enables authentication and identity management through the authentication provider. (Update Supported)
     */
    authentication?: pulumi.Input<boolean>;
    /**
     * If true, connects the provider to a random server. (Update Supported)
     */
    balanceServers?: pulumi.Input<boolean>;
    /**
     * Specifies the root of the tree in which to search identities. (Update Supported)
     */
    baseDn?: pulumi.Input<string>;
    /**
     * Specifies the distinguished name for binding to the LDAP server. (Update Supported)
     */
    bindDn?: pulumi.Input<string>;
    /**
     * Specifies which bind mechanism to use when connecting to an LDAP server. The only supported option is the 'simple'
     * value. (Update Supported)
     */
    bindMechanism?: pulumi.Input<string>;
    /**
     * Specifies the timeout in seconds when binding to an LDAP server. (Update Supported)
     */
    bindTimeout?: pulumi.Input<number>;
    /**
     * Specifies the path to the root certificates file. (Update Supported)
     */
    certificateAuthorityFile?: pulumi.Input<string>;
    /**
     * Specifies the time in seconds between provider online checks. (Update Supported)
     */
    checkOnlineInterval?: pulumi.Input<number>;
    /**
     * Specifies the canonical name. (Update Supported)
     */
    cnAttribute?: pulumi.Input<string>;
    /**
     * Automatically create the home directory on the first login. (Update Supported)
     */
    createHomeDirectory?: pulumi.Input<boolean>;
    /**
     * Specifies the hashed password value. (Update Supported)
     */
    cryptPasswordAttribute?: pulumi.Input<string>;
    /**
     * Specifies the LDAP Email attribute. (Update Supported)
     */
    emailAttribute?: pulumi.Input<string>;
    /**
     * If true, enables the LDAP provider. (Update Supported)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * If true, allows the provider to enumerate groups. (Update Supported)
     */
    enumerateGroups?: pulumi.Input<boolean>;
    /**
     * If true, allows the provider to enumerate users. (Update Supported)
     */
    enumerateUsers?: pulumi.Input<boolean>;
    /**
     * Specifies the list of groups that can be resolved. (Update Supported)
     */
    findableGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the list of users that can be resolved. (Update Supported)
     */
    findableUsers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the LDAP GECOS attribute. (Update Supported)
     */
    gecosAttribute?: pulumi.Input<string>;
    /**
     * Specifies the LDAP GID attribute. (Update Supported)
     */
    gidAttribute?: pulumi.Input<string>;
    /**
     * Specifies the distinguished name of the entry where LDAP searches for groups are started. (Update Supported)
     */
    groupBaseDn?: pulumi.Input<string>;
    /**
     * Specifies the domain for this provider through which groups are qualified. (Update Supported)
     */
    groupDomain?: pulumi.Input<string>;
    /**
     * Specifies the LDAP filter for group objects. (Update Supported)
     */
    groupFilter?: pulumi.Input<string>;
    /**
     * Specifies the LDAP Group Members attribute. (Update Supported)
     */
    groupMembersAttribute?: pulumi.Input<string>;
    /**
     * Specifies the depth from the base DN to perform LDAP searches. Acceptable values: "default", "base", "onelevel",
     * "subtree", "children". (Update Supported)
     */
    groupSearchScope?: pulumi.Input<string>;
    /**
     * Groupnet identifier.
     */
    groupnet?: pulumi.Input<string>;
    /**
     * Specifies the path to the home directory template. (Update Supported)
     */
    homeDirectoryTemplate?: pulumi.Input<string>;
    /**
     * Specifies the LDAP Homedir attribute. (Update Supported)
     */
    homedirAttribute?: pulumi.Input<string>;
    /**
     * If true, continues over secure connections even if identity checks fail. (Update Supported)
     */
    ignoreTlsErrors?: pulumi.Input<boolean>;
    /**
     * Ignore unresolvable server URIs when creating and updating. (Update Supported)
     */
    ignoreUnresolvableServerUrls?: pulumi.Input<boolean>;
    /**
     * Specifies the groups that can be viewed in the provider. (Update Supported)
     */
    listableGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the users that can be viewed in the provider. (Update Supported)
     */
    listableUsers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the login shell path. (Update Supported)
     */
    loginShell?: pulumi.Input<string>;
    /**
     * Sets the method by which group member lookups are performed. Use caution when changing this option directly. Acceptable
     * values: "default", "rfc2307bis". (Update Supported)
     */
    memberLookupMethod?: pulumi.Input<string>;
    /**
     * Specifies the LDAP Query Member Of attribute, which performs reverse membership queries. (Update Supported)
     */
    memberOfAttribute?: pulumi.Input<string>;
    /**
     * Specifies the name of the LDAP provider. (Update Supported)
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the LDAP UID attribute, which is used as the login name. (Update Supported)
     */
    nameAttribute?: pulumi.Input<string>;
    /**
     * Specifies the distinguished name of the entry where LDAP searches for netgroups are started. (Update Supported)
     */
    netgroupBaseDn?: pulumi.Input<string>;
    /**
     * Specifies the LDAP filter for netgroup objects. (Update Supported)
     */
    netgroupFilter?: pulumi.Input<string>;
    /**
     * Specifies the LDAP Netgroup Members attribute. (Update Supported)
     */
    netgroupMembersAttribute?: pulumi.Input<string>;
    /**
     * Specifies the depth from the base DN to perform LDAP searches. Acceptable values: "default", "base", "onelevel",
     * "subtree", "children". (Update Supported)
     */
    netgroupSearchScope?: pulumi.Input<string>;
    /**
     * Specifies the LDAP Netgroup Triple attribute. (Update Supported)
     */
    netgroupTripleAttribute?: pulumi.Input<string>;
    /**
     * Normalizes group names to lowercase before look up. (Update Supported)
     */
    normalizeGroups?: pulumi.Input<boolean>;
    /**
     * Normalizes user names to lowercase before look up. (Update Supported)
     */
    normalizeUsers?: pulumi.Input<boolean>;
    /**
     * Specifies the LDAP NT Password attribute. (Update Supported)
     */
    ntPasswordAttribute?: pulumi.Input<string>;
    /**
     * Specifies which NTLM versions to support for users with NTLM-compatible credentials. Acceptable values: "all", "v2only",
     * "none". (Update Supported)
     */
    ntlmSupport?: pulumi.Input<string>;
    /**
     * Specifies the OCSP server URIs. Only available for PowerScale 9.5 and above. (Update Supported)
     */
    ocspServerUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the provider domain. (Update Supported)
     */
    providerDomain?: pulumi.Input<string>;
    /**
     * Determines whether to continue over a non-TLS connection. (Update Supported)
     */
    requireSecureConnection?: pulumi.Input<boolean>;
    /**
     * If true, checks the provider for filtered lists of findable and unfindable users and groups. (Update Supported)
     */
    restrictFindable?: pulumi.Input<boolean>;
    /**
     * If true, checks the provider for filtered lists of listable and unlistable users and groups. (Update Supported)
     */
    restrictListable?: pulumi.Input<boolean>;
    /**
     * Specifies the default depth from the base DN to perform LDAP searches. Acceptable values: "base", "onelevel", "subtree",
     * "children". (Update Supported)
     */
    searchScope?: pulumi.Input<string>;
    /**
     * Specifies the search timeout period in seconds. (Update Supported)
     */
    searchTimeout?: pulumi.Input<number>;
    /**
     * Specifies the server URIs. (Update Supported)
     */
    serverUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Sets the attribute name that indicates the absolute date to expire the account. (Update Supported)
     */
    shadowExpireAttribute?: pulumi.Input<string>;
    /**
     * Sets the attribute name that indicates the section of the shadow map that is used to store the flag value. (Update
     * Supported)
     */
    shadowFlagAttribute?: pulumi.Input<string>;
    /**
     * Sets the attribute name that indicates the number of days of inactivity that is allowed for the user. (Update Supported)
     */
    shadowInactiveAttribute?: pulumi.Input<string>;
    /**
     * Sets the attribute name that indicates the last change of the shadow information. (Update Supported)
     */
    shadowLastChangeAttribute?: pulumi.Input<string>;
    /**
     * Sets the attribute name that indicates the maximum number of days a password can be valid. (Update Supported)
     */
    shadowMaxAttribute?: pulumi.Input<string>;
    /**
     * Sets the attribute name that indicates the minimum number of days between shadow changes. (Update Supported)
     */
    shadowMinAttribute?: pulumi.Input<string>;
    /**
     * Sets LDAP filter for shadow user objects. (Update Supported)
     */
    shadowUserFilter?: pulumi.Input<string>;
    /**
     * Sets the attribute name that indicates the number of days before the password expires to warn the user. (Update
     * Supported)
     */
    shadowWarningAttribute?: pulumi.Input<string>;
    /**
     * Specifies the LDAP Shell attribute. (Update Supported)
     */
    shellAttribute?: pulumi.Input<string>;
    /**
     * Sets the attribute name that indicates the SSH Public Key for the user. (Update Supported)
     */
    sshPublicKeyAttribute?: pulumi.Input<string>;
    /**
     * Specifies the status of the provider. (Update Supported)
     */
    status?: pulumi.Input<string>;
    /**
     * If true, indicates that this provider instance was created by OneFS and cannot be removed. (Update Supported)
     */
    system?: pulumi.Input<boolean>;
    /**
     * Specifies the minimum TLS protocol version. (Update Supported)
     */
    tlsProtocolMin?: pulumi.Input<string>;
    /**
     * This setting controls the behavior of the certificate revocation checking algorithm when the LDAP provider is presented
     * with a digital certificate by an LDAP server. Acceptable values: "none", "allowNoData", "allowNoSrc", "strict". Only
     * available for PowerScale 9.5 and above. (Update Supported)
     */
    tlsRevocationCheckLevel?: pulumi.Input<string>;
    /**
     * Specifies the LDAP UID Number attribute. (Update Supported)
     */
    uidAttribute?: pulumi.Input<string>;
    /**
     * Specifies the groups that cannot be resolved by the provider. (Update Supported)
     */
    unfindableGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies users that cannot be resolved by the provider. (Update Supported)
     */
    unfindableUsers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Sets the LDAP Unique Group Members attribute. (Update Supported)
     */
    uniqueGroupMembersAttribute?: pulumi.Input<string>;
    /**
     * Specifies a group that cannot be listed by the provider. (Update Supported)
     */
    unlistableGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a user that cannot be listed by the provider. (Update Supported)
     */
    unlistableUsers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the distinguished name of the entry at which to start LDAP searches for users. (Update Supported)
     */
    userBaseDn?: pulumi.Input<string>;
    /**
     * Specifies the domain for this provider through which users are qualified. (Update Supported)
     */
    userDomain?: pulumi.Input<string>;
    /**
     * Specifies the LDAP filter for user objects. (Update Supported)
     */
    userFilter?: pulumi.Input<string>;
    /**
     * Specifies the depth from the base DN to perform LDAP searches. Acceptable values: "default", "base", "onelevel",
     * "subtree", "children". (Update Supported)
     */
    userSearchScope?: pulumi.Input<string>;
    /**
     * Specifies the name of the access zone in which this provider was created.
     */
    zoneName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LdapProvider resource.
 */
export interface LdapProviderArgs {
    /**
     * Specifies the attribute name used when searching for alternate security identities. (Update Supported)
     */
    alternateSecurityIdentitiesAttribute?: pulumi.Input<string>;
    /**
     * If true, enables authentication and identity management through the authentication provider. (Update Supported)
     */
    authentication?: pulumi.Input<boolean>;
    /**
     * If true, connects the provider to a random server. (Update Supported)
     */
    balanceServers?: pulumi.Input<boolean>;
    /**
     * Specifies the root of the tree in which to search identities. (Update Supported)
     */
    baseDn: pulumi.Input<string>;
    /**
     * Specifies the distinguished name for binding to the LDAP server. (Update Supported)
     */
    bindDn?: pulumi.Input<string>;
    /**
     * Specifies which bind mechanism to use when connecting to an LDAP server. The only supported option is the 'simple'
     * value. (Update Supported)
     */
    bindMechanism?: pulumi.Input<string>;
    /**
     * Specifies the timeout in seconds when binding to an LDAP server. (Update Supported)
     */
    bindTimeout?: pulumi.Input<number>;
    /**
     * Specifies the path to the root certificates file. (Update Supported)
     */
    certificateAuthorityFile?: pulumi.Input<string>;
    /**
     * Specifies the time in seconds between provider online checks. (Update Supported)
     */
    checkOnlineInterval?: pulumi.Input<number>;
    /**
     * Specifies the canonical name. (Update Supported)
     */
    cnAttribute?: pulumi.Input<string>;
    /**
     * Automatically create the home directory on the first login. (Update Supported)
     */
    createHomeDirectory?: pulumi.Input<boolean>;
    /**
     * Specifies the hashed password value. (Update Supported)
     */
    cryptPasswordAttribute?: pulumi.Input<string>;
    /**
     * Specifies the LDAP Email attribute. (Update Supported)
     */
    emailAttribute?: pulumi.Input<string>;
    /**
     * If true, enables the LDAP provider. (Update Supported)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * If true, allows the provider to enumerate groups. (Update Supported)
     */
    enumerateGroups?: pulumi.Input<boolean>;
    /**
     * If true, allows the provider to enumerate users. (Update Supported)
     */
    enumerateUsers?: pulumi.Input<boolean>;
    /**
     * Specifies the list of groups that can be resolved. (Update Supported)
     */
    findableGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the list of users that can be resolved. (Update Supported)
     */
    findableUsers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the LDAP GECOS attribute. (Update Supported)
     */
    gecosAttribute?: pulumi.Input<string>;
    /**
     * Specifies the LDAP GID attribute. (Update Supported)
     */
    gidAttribute?: pulumi.Input<string>;
    /**
     * Specifies the distinguished name of the entry where LDAP searches for groups are started. (Update Supported)
     */
    groupBaseDn?: pulumi.Input<string>;
    /**
     * Specifies the domain for this provider through which groups are qualified. (Update Supported)
     */
    groupDomain?: pulumi.Input<string>;
    /**
     * Specifies the LDAP filter for group objects. (Update Supported)
     */
    groupFilter?: pulumi.Input<string>;
    /**
     * Specifies the LDAP Group Members attribute. (Update Supported)
     */
    groupMembersAttribute?: pulumi.Input<string>;
    /**
     * Specifies the depth from the base DN to perform LDAP searches. Acceptable values: "default", "base", "onelevel",
     * "subtree", "children". (Update Supported)
     */
    groupSearchScope?: pulumi.Input<string>;
    /**
     * Groupnet identifier.
     */
    groupnet?: pulumi.Input<string>;
    /**
     * Specifies the path to the home directory template. (Update Supported)
     */
    homeDirectoryTemplate?: pulumi.Input<string>;
    /**
     * Specifies the LDAP Homedir attribute. (Update Supported)
     */
    homedirAttribute?: pulumi.Input<string>;
    /**
     * If true, continues over secure connections even if identity checks fail. (Update Supported)
     */
    ignoreTlsErrors?: pulumi.Input<boolean>;
    /**
     * Ignore unresolvable server URIs when creating and updating. (Update Supported)
     */
    ignoreUnresolvableServerUrls?: pulumi.Input<boolean>;
    /**
     * Specifies the groups that can be viewed in the provider. (Update Supported)
     */
    listableGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the users that can be viewed in the provider. (Update Supported)
     */
    listableUsers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the login shell path. (Update Supported)
     */
    loginShell?: pulumi.Input<string>;
    /**
     * Sets the method by which group member lookups are performed. Use caution when changing this option directly. Acceptable
     * values: "default", "rfc2307bis". (Update Supported)
     */
    memberLookupMethod?: pulumi.Input<string>;
    /**
     * Specifies the LDAP Query Member Of attribute, which performs reverse membership queries. (Update Supported)
     */
    memberOfAttribute?: pulumi.Input<string>;
    /**
     * Specifies the name of the LDAP provider. (Update Supported)
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the LDAP UID attribute, which is used as the login name. (Update Supported)
     */
    nameAttribute?: pulumi.Input<string>;
    /**
     * Specifies the distinguished name of the entry where LDAP searches for netgroups are started. (Update Supported)
     */
    netgroupBaseDn?: pulumi.Input<string>;
    /**
     * Specifies the LDAP filter for netgroup objects. (Update Supported)
     */
    netgroupFilter?: pulumi.Input<string>;
    /**
     * Specifies the LDAP Netgroup Members attribute. (Update Supported)
     */
    netgroupMembersAttribute?: pulumi.Input<string>;
    /**
     * Specifies the depth from the base DN to perform LDAP searches. Acceptable values: "default", "base", "onelevel",
     * "subtree", "children". (Update Supported)
     */
    netgroupSearchScope?: pulumi.Input<string>;
    /**
     * Specifies the LDAP Netgroup Triple attribute. (Update Supported)
     */
    netgroupTripleAttribute?: pulumi.Input<string>;
    /**
     * Normalizes group names to lowercase before look up. (Update Supported)
     */
    normalizeGroups?: pulumi.Input<boolean>;
    /**
     * Normalizes user names to lowercase before look up. (Update Supported)
     */
    normalizeUsers?: pulumi.Input<boolean>;
    /**
     * Specifies the LDAP NT Password attribute. (Update Supported)
     */
    ntPasswordAttribute?: pulumi.Input<string>;
    /**
     * Specifies which NTLM versions to support for users with NTLM-compatible credentials. Acceptable values: "all", "v2only",
     * "none". (Update Supported)
     */
    ntlmSupport?: pulumi.Input<string>;
    /**
     * Specifies the OCSP server URIs. Only available for PowerScale 9.5 and above. (Update Supported)
     */
    ocspServerUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the provider domain. (Update Supported)
     */
    providerDomain?: pulumi.Input<string>;
    /**
     * Determines whether to continue over a non-TLS connection. (Update Supported)
     */
    requireSecureConnection?: pulumi.Input<boolean>;
    /**
     * If true, checks the provider for filtered lists of findable and unfindable users and groups. (Update Supported)
     */
    restrictFindable?: pulumi.Input<boolean>;
    /**
     * If true, checks the provider for filtered lists of listable and unlistable users and groups. (Update Supported)
     */
    restrictListable?: pulumi.Input<boolean>;
    /**
     * Specifies the default depth from the base DN to perform LDAP searches. Acceptable values: "base", "onelevel", "subtree",
     * "children". (Update Supported)
     */
    searchScope?: pulumi.Input<string>;
    /**
     * Specifies the search timeout period in seconds. (Update Supported)
     */
    searchTimeout?: pulumi.Input<number>;
    /**
     * Specifies the server URIs. (Update Supported)
     */
    serverUris: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Sets the attribute name that indicates the absolute date to expire the account. (Update Supported)
     */
    shadowExpireAttribute?: pulumi.Input<string>;
    /**
     * Sets the attribute name that indicates the section of the shadow map that is used to store the flag value. (Update
     * Supported)
     */
    shadowFlagAttribute?: pulumi.Input<string>;
    /**
     * Sets the attribute name that indicates the number of days of inactivity that is allowed for the user. (Update Supported)
     */
    shadowInactiveAttribute?: pulumi.Input<string>;
    /**
     * Sets the attribute name that indicates the last change of the shadow information. (Update Supported)
     */
    shadowLastChangeAttribute?: pulumi.Input<string>;
    /**
     * Sets the attribute name that indicates the maximum number of days a password can be valid. (Update Supported)
     */
    shadowMaxAttribute?: pulumi.Input<string>;
    /**
     * Sets the attribute name that indicates the minimum number of days between shadow changes. (Update Supported)
     */
    shadowMinAttribute?: pulumi.Input<string>;
    /**
     * Sets LDAP filter for shadow user objects. (Update Supported)
     */
    shadowUserFilter?: pulumi.Input<string>;
    /**
     * Sets the attribute name that indicates the number of days before the password expires to warn the user. (Update
     * Supported)
     */
    shadowWarningAttribute?: pulumi.Input<string>;
    /**
     * Specifies the LDAP Shell attribute. (Update Supported)
     */
    shellAttribute?: pulumi.Input<string>;
    /**
     * Sets the attribute name that indicates the SSH Public Key for the user. (Update Supported)
     */
    sshPublicKeyAttribute?: pulumi.Input<string>;
    /**
     * Specifies the status of the provider. (Update Supported)
     */
    status?: pulumi.Input<string>;
    /**
     * If true, indicates that this provider instance was created by OneFS and cannot be removed. (Update Supported)
     */
    system?: pulumi.Input<boolean>;
    /**
     * Specifies the minimum TLS protocol version. (Update Supported)
     */
    tlsProtocolMin?: pulumi.Input<string>;
    /**
     * This setting controls the behavior of the certificate revocation checking algorithm when the LDAP provider is presented
     * with a digital certificate by an LDAP server. Acceptable values: "none", "allowNoData", "allowNoSrc", "strict". Only
     * available for PowerScale 9.5 and above. (Update Supported)
     */
    tlsRevocationCheckLevel?: pulumi.Input<string>;
    /**
     * Specifies the LDAP UID Number attribute. (Update Supported)
     */
    uidAttribute?: pulumi.Input<string>;
    /**
     * Specifies the groups that cannot be resolved by the provider. (Update Supported)
     */
    unfindableGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies users that cannot be resolved by the provider. (Update Supported)
     */
    unfindableUsers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Sets the LDAP Unique Group Members attribute. (Update Supported)
     */
    uniqueGroupMembersAttribute?: pulumi.Input<string>;
    /**
     * Specifies a group that cannot be listed by the provider. (Update Supported)
     */
    unlistableGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a user that cannot be listed by the provider. (Update Supported)
     */
    unlistableUsers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the distinguished name of the entry at which to start LDAP searches for users. (Update Supported)
     */
    userBaseDn?: pulumi.Input<string>;
    /**
     * Specifies the domain for this provider through which users are qualified. (Update Supported)
     */
    userDomain?: pulumi.Input<string>;
    /**
     * Specifies the LDAP filter for user objects. (Update Supported)
     */
    userFilter?: pulumi.Input<string>;
    /**
     * Specifies the depth from the base DN to perform LDAP searches. Acceptable values: "default", "base", "onelevel",
     * "subtree", "children". (Update Supported)
     */
    userSearchScope?: pulumi.Input<string>;
}
