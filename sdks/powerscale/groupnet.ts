// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Groupnet extends pulumi.CustomResource {
    /**
     * Get an existing Groupnet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupnetState, opts?: pulumi.CustomResourceOptions): Groupnet {
        return new Groupnet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'powerscale:index/groupnet:Groupnet';

    /**
     * Returns true if the given object is an instance of Groupnet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Groupnet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Groupnet.__pulumiType;
    }

    /**
     * If enabled, SmartConnect treats subdomains of known dns zones as the known dns zone. This is required for S3 Virtual
     * Host domains. Defaults to True. (Update Supported)
     */
    public readonly allowWildcardSubdomains!: pulumi.Output<boolean>;
    /**
     * A description of the groupnet. (Update Supported)
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * DNS caching is enabled or disabled. Defaults to True. (Update Supported)
     */
    public readonly dnsCacheEnabled!: pulumi.Output<boolean>;
    /**
     * Enable or disable DNS resolver rotate. Defaults to False. (Update Supported)
     */
    public readonly dnsResolverRotate!: pulumi.Output<boolean>;
    /**
     * List of DNS search suffixes. (Update Supported)
     */
    public readonly dnsSearches!: pulumi.Output<string[] | undefined>;
    /**
     * List of Domain Name Server IP addresses. (Update Supported)
     */
    public readonly dnsServers!: pulumi.Output<string[] | undefined>;
    /**
     * The name of the groupnet. (Update Supported)
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable or disable appending nodes DNS search list to client DNS inquiries directed at SmartConnect service IP. Defaults
     * to True. (Update Supported)
     */
    public readonly serverSideDnsSearch!: pulumi.Output<boolean>;
    /**
     * Name of the subnets in the groupnet.
     */
    public /*out*/ readonly subnets!: pulumi.Output<string[]>;

    /**
     * Create a Groupnet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GroupnetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GroupnetArgs | GroupnetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GroupnetState | undefined;
            resourceInputs["allowWildcardSubdomains"] = state ? state.allowWildcardSubdomains : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dnsCacheEnabled"] = state ? state.dnsCacheEnabled : undefined;
            resourceInputs["dnsResolverRotate"] = state ? state.dnsResolverRotate : undefined;
            resourceInputs["dnsSearches"] = state ? state.dnsSearches : undefined;
            resourceInputs["dnsServers"] = state ? state.dnsServers : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serverSideDnsSearch"] = state ? state.serverSideDnsSearch : undefined;
            resourceInputs["subnets"] = state ? state.subnets : undefined;
        } else {
            const args = argsOrState as GroupnetArgs | undefined;
            resourceInputs["allowWildcardSubdomains"] = args ? args.allowWildcardSubdomains : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dnsCacheEnabled"] = args ? args.dnsCacheEnabled : undefined;
            resourceInputs["dnsResolverRotate"] = args ? args.dnsResolverRotate : undefined;
            resourceInputs["dnsSearches"] = args ? args.dnsSearches : undefined;
            resourceInputs["dnsServers"] = args ? args.dnsServers : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serverSideDnsSearch"] = args ? args.serverSideDnsSearch : undefined;
            resourceInputs["subnets"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Groupnet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Groupnet resources.
 */
export interface GroupnetState {
    /**
     * If enabled, SmartConnect treats subdomains of known dns zones as the known dns zone. This is required for S3 Virtual
     * Host domains. Defaults to True. (Update Supported)
     */
    allowWildcardSubdomains?: pulumi.Input<boolean>;
    /**
     * A description of the groupnet. (Update Supported)
     */
    description?: pulumi.Input<string>;
    /**
     * DNS caching is enabled or disabled. Defaults to True. (Update Supported)
     */
    dnsCacheEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable DNS resolver rotate. Defaults to False. (Update Supported)
     */
    dnsResolverRotate?: pulumi.Input<boolean>;
    /**
     * List of DNS search suffixes. (Update Supported)
     */
    dnsSearches?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Domain Name Server IP addresses. (Update Supported)
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the groupnet. (Update Supported)
     */
    name?: pulumi.Input<string>;
    /**
     * Enable or disable appending nodes DNS search list to client DNS inquiries directed at SmartConnect service IP. Defaults
     * to True. (Update Supported)
     */
    serverSideDnsSearch?: pulumi.Input<boolean>;
    /**
     * Name of the subnets in the groupnet.
     */
    subnets?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Groupnet resource.
 */
export interface GroupnetArgs {
    /**
     * If enabled, SmartConnect treats subdomains of known dns zones as the known dns zone. This is required for S3 Virtual
     * Host domains. Defaults to True. (Update Supported)
     */
    allowWildcardSubdomains?: pulumi.Input<boolean>;
    /**
     * A description of the groupnet. (Update Supported)
     */
    description?: pulumi.Input<string>;
    /**
     * DNS caching is enabled or disabled. Defaults to True. (Update Supported)
     */
    dnsCacheEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable DNS resolver rotate. Defaults to False. (Update Supported)
     */
    dnsResolverRotate?: pulumi.Input<boolean>;
    /**
     * List of DNS search suffixes. (Update Supported)
     */
    dnsSearches?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Domain Name Server IP addresses. (Update Supported)
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the groupnet. (Update Supported)
     */
    name?: pulumi.Input<string>;
    /**
     * Enable or disable appending nodes DNS search list to client DNS inquiries directed at SmartConnect service IP. Defaults
     * to True. (Update Supported)
     */
    serverSideDnsSearch?: pulumi.Input<boolean>;
}
