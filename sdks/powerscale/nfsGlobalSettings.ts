// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NfsGlobalSettings extends pulumi.CustomResource {
    /**
     * Get an existing NfsGlobalSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NfsGlobalSettingsState, opts?: pulumi.CustomResourceOptions): NfsGlobalSettings {
        return new NfsGlobalSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'powerscale:index/nfsGlobalSettings:NfsGlobalSettings';

    /**
     * Returns true if the given object is an instance of NfsGlobalSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NfsGlobalSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NfsGlobalSettings.__pulumiType;
    }

    /**
     * True if NFSv3 is enabled.
     */
    public readonly nfsv3Enabled!: pulumi.Output<boolean>;
    /**
     * True if the RDMA is enabled for NFSv3.
     */
    public readonly nfsv3RdmaEnabled!: pulumi.Output<boolean>;
    /**
     * True if NFSv4 is enabled.
     */
    public readonly nfsv4Enabled!: pulumi.Output<boolean>;
    /**
     * Specifies the maximum number of threads in the nfsd thread pool.
     */
    public readonly rpcMaxthreads!: pulumi.Output<number>;
    /**
     * Specifies the minimum number of threads in the nfsd thread pool.
     */
    public readonly rpcMinthreads!: pulumi.Output<number>;
    /**
     * True if the rquota protocol is enabled.
     */
    public readonly rquotaEnabled!: pulumi.Output<boolean>;
    /**
     * True if the NFS service is enabled. When set to false, the NFS service is disabled.
     */
    public readonly service!: pulumi.Output<boolean>;

    /**
     * Create a NfsGlobalSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NfsGlobalSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NfsGlobalSettingsArgs | NfsGlobalSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NfsGlobalSettingsState | undefined;
            resourceInputs["nfsv3Enabled"] = state ? state.nfsv3Enabled : undefined;
            resourceInputs["nfsv3RdmaEnabled"] = state ? state.nfsv3RdmaEnabled : undefined;
            resourceInputs["nfsv4Enabled"] = state ? state.nfsv4Enabled : undefined;
            resourceInputs["rpcMaxthreads"] = state ? state.rpcMaxthreads : undefined;
            resourceInputs["rpcMinthreads"] = state ? state.rpcMinthreads : undefined;
            resourceInputs["rquotaEnabled"] = state ? state.rquotaEnabled : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
        } else {
            const args = argsOrState as NfsGlobalSettingsArgs | undefined;
            resourceInputs["nfsv3Enabled"] = args ? args.nfsv3Enabled : undefined;
            resourceInputs["nfsv3RdmaEnabled"] = args ? args.nfsv3RdmaEnabled : undefined;
            resourceInputs["nfsv4Enabled"] = args ? args.nfsv4Enabled : undefined;
            resourceInputs["rpcMaxthreads"] = args ? args.rpcMaxthreads : undefined;
            resourceInputs["rpcMinthreads"] = args ? args.rpcMinthreads : undefined;
            resourceInputs["rquotaEnabled"] = args ? args.rquotaEnabled : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NfsGlobalSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NfsGlobalSettings resources.
 */
export interface NfsGlobalSettingsState {
    /**
     * True if NFSv3 is enabled.
     */
    nfsv3Enabled?: pulumi.Input<boolean>;
    /**
     * True if the RDMA is enabled for NFSv3.
     */
    nfsv3RdmaEnabled?: pulumi.Input<boolean>;
    /**
     * True if NFSv4 is enabled.
     */
    nfsv4Enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the maximum number of threads in the nfsd thread pool.
     */
    rpcMaxthreads?: pulumi.Input<number>;
    /**
     * Specifies the minimum number of threads in the nfsd thread pool.
     */
    rpcMinthreads?: pulumi.Input<number>;
    /**
     * True if the rquota protocol is enabled.
     */
    rquotaEnabled?: pulumi.Input<boolean>;
    /**
     * True if the NFS service is enabled. When set to false, the NFS service is disabled.
     */
    service?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a NfsGlobalSettings resource.
 */
export interface NfsGlobalSettingsArgs {
    /**
     * True if NFSv3 is enabled.
     */
    nfsv3Enabled?: pulumi.Input<boolean>;
    /**
     * True if the RDMA is enabled for NFSv3.
     */
    nfsv3RdmaEnabled?: pulumi.Input<boolean>;
    /**
     * True if NFSv4 is enabled.
     */
    nfsv4Enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the maximum number of threads in the nfsd thread pool.
     */
    rpcMaxthreads?: pulumi.Input<number>;
    /**
     * Specifies the minimum number of threads in the nfsd thread pool.
     */
    rpcMinthreads?: pulumi.Input<number>;
    /**
     * True if the rquota protocol is enabled.
     */
    rquotaEnabled?: pulumi.Input<boolean>;
    /**
     * True if the NFS service is enabled. When set to false, the NFS service is disabled.
     */
    service?: pulumi.Input<boolean>;
}
