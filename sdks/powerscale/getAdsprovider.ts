// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAdsprovider(args?: GetAdsproviderArgs, opts?: pulumi.InvokeOptions): Promise<GetAdsproviderResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powerscale:index/getAdsprovider:getAdsprovider", {
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAdsprovider.
 */
export interface GetAdsproviderArgs {
    filter?: inputs.GetAdsproviderFilter;
}

/**
 * A collection of values returned by getAdsprovider.
 */
export interface GetAdsproviderResult {
    readonly adsProvidersDetails: outputs.GetAdsproviderAdsProvidersDetail[];
    readonly filter?: outputs.GetAdsproviderFilter;
    readonly id: string;
}
export function getAdsproviderOutput(args?: GetAdsproviderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAdsproviderResult> {
    return pulumi.output(args).apply((a: any) => getAdsprovider(a, opts))
}

/**
 * A collection of arguments for invoking getAdsprovider.
 */
export interface GetAdsproviderOutputArgs {
    filter?: pulumi.Input<inputs.GetAdsproviderFilterArgs>;
}
