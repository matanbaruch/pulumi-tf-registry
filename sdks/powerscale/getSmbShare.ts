// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSmbShare(args?: GetSmbShareArgs, opts?: pulumi.InvokeOptions): Promise<GetSmbShareResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powerscale:index/getSmbShare:getSmbShare", {
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSmbShare.
 */
export interface GetSmbShareArgs {
    filter?: inputs.GetSmbShareFilter;
}

/**
 * A collection of values returned by getSmbShare.
 */
export interface GetSmbShareResult {
    readonly filter?: outputs.GetSmbShareFilter;
    readonly id: string;
    readonly smbShares: outputs.GetSmbShareSmbShare[];
}
export function getSmbShareOutput(args?: GetSmbShareOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSmbShareResult> {
    return pulumi.output(args).apply((a: any) => getSmbShare(a, opts))
}

/**
 * A collection of arguments for invoking getSmbShare.
 */
export interface GetSmbShareOutputArgs {
    filter?: pulumi.Input<inputs.GetSmbShareFilterArgs>;
}
