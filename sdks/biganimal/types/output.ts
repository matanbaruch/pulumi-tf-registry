// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AnalyticsClusterAllowedIpRange {
    /**
     * CIDR block
     */
    cidrBlock: string;
    /**
     * Description of CIDR block
     */
    description?: string;
}

export interface AnalyticsClusterMaintenanceWindow {
    /**
     * Is maintenance window enabled.
     */
    isEnabled: boolean;
    /**
     * The day of week, 0 represents Sunday, 1 is Monday, and so on.
     */
    startDay: number;
    /**
     * Start time. "hh:mm", for example: "23:59".
     */
    startTime: string;
}

export interface AnalyticsClusterTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: string;
}

export interface AwsConnectionTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface AzureConnectionTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface ClusterAllowedIpRange {
    /**
     * CIDR block
     */
    cidrBlock: string;
    /**
     * Description of CIDR block
     */
    description?: string;
}

export interface ClusterClusterArchitecture {
    id: string;
    /**
     * Name.
     */
    name: string;
    /**
     * Node count.
     */
    nodes: number;
}

export interface ClusterMaintenanceWindow {
    /**
     * Is maintenance window enabled.
     */
    isEnabled: boolean;
    /**
     * The day of week, 0 represents Sunday, 1 is Monday, and so on.
     */
    startDay: number;
    /**
     * Start time. "hh:mm", for example: "23:59".
     */
    startTime: string;
}

export interface ClusterPgBouncer {
    /**
     * Is pg bouncer enabled.
     */
    isEnabled: boolean;
    /**
     * PgBouncer Configuration Settings.
     */
    settings: outputs.ClusterPgBouncerSetting[];
}

export interface ClusterPgBouncerSetting {
    /**
     * Name.
     */
    name: string;
    /**
     * Operation.
     */
    operation: string;
    /**
     * Value.
     */
    value: string;
}

export interface ClusterPgConfig {
    /**
     * GUC name.
     */
    name: string;
    /**
     * GUC value.
     */
    value: string;
}

export interface ClusterStorage {
    /**
     * IOPS for the selected volume. It can be set to different values depending on your volume type and properties.
     */
    iops: string;
    /**
     * Size of the volume. It can be set to different values depending on your volume type and properties.
     */
    size: string;
    /**
     * Throughput is automatically calculated by BigAnimal based on the IOPS input if it's not provided.
     */
    throughput: string;
    /**
     * Volume properties in accordance with the selected volume type.
     */
    volumeProperties: string;
    /**
     * Volume type. For Azure: "azurepremiumstorage" or "ultradisk". For AWS: "gp3", "io2", org s "io2-block-express". For Google Cloud: only "pd-ssd".
     */
    volumeType: string;
}

export interface ClusterTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: string;
}

export interface ClusterTransparentDataEncryption {
    /**
     * Transparent Data Encryption (TDE) key ID.
     */
    keyId: string;
    /**
     * Key name.
     */
    keyName: string;
    /**
     * Status.
     */
    status: string;
}

export interface FarawayReplicaAllowedIpRange {
    /**
     * CIDR block
     */
    cidrBlock: string;
    /**
     * Description of CIDR block
     */
    description: string;
}

export interface FarawayReplicaClusterArchitecture {
    id: string;
    /**
     * Name.
     */
    name: string;
    /**
     * Node count.
     */
    nodes: number;
}

export interface FarawayReplicaPgConfig {
    /**
     * GUC name.
     */
    name: string;
    /**
     * GUC value.
     */
    value: string;
}

export interface FarawayReplicaStorage {
    /**
     * IOPS for the selected volume.
     */
    iops: string;
    /**
     * Size of the volume.
     */
    size: string;
    /**
     * Throughput.
     */
    throughput: string;
    /**
     * Volume properties.
     */
    volumeProperties: string;
    /**
     * Volume type.
     */
    volumeType: string;
}

export interface FarawayReplicaTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: string;
}

export interface FarawayReplicaTransparentDataEncryption {
    /**
     * Transparent Data Encryption (TDE) key ID.
     */
    keyId: string;
    /**
     * Key name.
     */
    keyName: string;
    /**
     * Status.
     */
    status: string;
}

export interface GetAnalyticsClusterAllowedIpRange {
    /**
     * CIDR block
     */
    cidrBlock: string;
    /**
     * Description of CIDR block
     */
    description?: string;
}

export interface GetAnalyticsClusterMaintenanceWindow {
    /**
     * Is maintenance window enabled.
     */
    isEnabled: boolean;
    /**
     * The day of week, 0 represents Sunday, 1 is Monday, and so on.
     */
    startDay: number;
    /**
     * Start time. "hh:mm", for example: "23:59".
     */
    startTime: string;
}

export interface GetAnalyticsClusterTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: string;
}

export interface GetClusterAllowedIpRange {
    /**
     * CIDR block
     */
    cidrBlock: string;
    /**
     * Description of CIDR block
     */
    description?: string;
}

export interface GetClusterClusterArchitecture {
    id: string;
    /**
     * Name.
     */
    name: string;
    /**
     * Node count.
     */
    nodes: number;
}

export interface GetClusterMaintenanceWindow {
    /**
     * Is maintenance window enabled.
     */
    isEnabled: boolean;
    /**
     * The day of week, 0 represents Sunday, 1 is Monday, and so on.
     */
    startDay: number;
    /**
     * Start time. "hh:mm", for example: "23:59".
     */
    startTime: string;
}

export interface GetClusterPgBouncer {
    /**
     * Is pg bouncer enabled.
     */
    isEnabled: boolean;
    /**
     * PgBouncer Configuration Settings.
     */
    settings: outputs.GetClusterPgBouncerSetting[];
}

export interface GetClusterPgBouncerSetting {
    /**
     * Name.
     */
    name: string;
    /**
     * Operation.
     */
    operation: string;
    /**
     * Value.
     */
    value: string;
}

export interface GetClusterPgConfig {
    /**
     * GUC name.
     */
    name: string;
    /**
     * GUC value.
     */
    value: string;
}

export interface GetClusterStorage {
    /**
     * IOPS for the selected volume. It can be set to different values depending on your volume type and properties.
     */
    iops: string;
    /**
     * Size of the volume. It can be set to different values depending on your volume type and properties.
     */
    size: string;
    /**
     * Throughput is automatically calculated by BigAnimal based on the IOPS input if it's not provided.
     */
    throughput: string;
    /**
     * Volume properties in accordance with the selected volume type.
     */
    volumeProperties: string;
    /**
     * Volume type. For Azure: "azurepremiumstorage" or "ultradisk". For AWS: "gp3", "io2", org s "io2-block-express". For Google Cloud: only "pd-ssd".
     */
    volumeType: string;
}

export interface GetClusterTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: string;
}

export interface GetClusterTransparentDataEncryption {
    /**
     * Transparent Data Encryption (TDE) key ID.
     */
    keyId: string;
    /**
     * Key name.
     */
    keyName: string;
    /**
     * Status.
     */
    status: string;
}

export interface GetFarawayReplicaAllowedIpRange {
    /**
     * CIDR block
     */
    cidrBlock: string;
    /**
     * Description of CIDR block
     */
    description: string;
}

export interface GetFarawayReplicaClusterArchitecture {
    id: string;
    /**
     * Name.
     */
    name: string;
    /**
     * Node count.
     */
    nodes: number;
}

export interface GetFarawayReplicaPgConfig {
    /**
     * GUC name.
     */
    name: string;
    /**
     * GUC value.
     */
    value: string;
}

export interface GetFarawayReplicaStorage {
    /**
     * IOPS for the selected volume.
     */
    iops: string;
    /**
     * Size of the volume.
     */
    size: string;
    /**
     * Throughput.
     */
    throughput: string;
    /**
     * Volume properties.
     */
    volumeProperties: string;
    /**
     * Volume type.
     */
    volumeType: string;
}

export interface GetFarawayReplicaTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: string;
}

export interface GetFarawayReplicaTransparentDataEncryption {
    /**
     * Transparent Data Encryption (TDE) key ID.
     */
    keyId: string;
    /**
     * Key name.
     */
    keyName: string;
    /**
     * Status.
     */
    status: string;
}

export interface GetPgdDataGroup {
    /**
     * Allowed IP ranges.
     */
    allowedIpRanges: outputs.GetPgdDataGroupAllowedIpRange[];
    /**
     * Backup retention period
     */
    backupRetentionPeriod: string;
    /**
     * Cloud provider.
     */
    cloudProvider: outputs.GetPgdDataGroupCloudProvider;
    /**
     * Cluster architecture.
     */
    clusterArchitecture: outputs.GetPgdDataGroupClusterArchitecture;
    /**
     * Name of the group.
     */
    clusterName: string;
    /**
     * Type of the Specified Cluster
     */
    clusterType: string;
    /**
     * Data group connection URI.
     */
    connectionUri: string;
    /**
     * Cluster creation time.
     */
    createdAt: string;
    /**
     * Is authentication handled by the cloud service provider.
     */
    cspAuth: boolean;
    /**
     * Group ID of the group.
     */
    groupId: string;
    /**
     * Instance type.
     */
    instanceType: outputs.GetPgdDataGroupInstanceType;
    /**
     * The URL to find the logs of this cluster.
     */
    logsUrl: string;
    /**
     * Custom maintenance window.
     */
    maintenanceWindow: outputs.GetPgdDataGroupMaintenanceWindow;
    /**
     * The URL to find the metrics of this cluster.
     */
    metricsUrl: string;
    /**
     * Cloud provider subscription/account ID, need to be specified when cluster is deployed on BigAnimal's cloud account.
     */
    peAllowedPrincipalIds: string[];
    /**
     * Database configuration parameters.
     */
    pgConfigs: outputs.GetPgdDataGroupPgConfig[];
    /**
     * Postgres type.
     */
    pgType: outputs.GetPgdDataGroupPgType;
    /**
     * Postgres version.
     */
    pgVersion: outputs.GetPgdDataGroupPgVersion;
    /**
     * Current phase of the cluster group.
     */
    phase: string;
    /**
     * Is private networking enabled.
     */
    privateNetworking: boolean;
    /**
     * Region.
     */
    region: outputs.GetPgdDataGroupRegion;
    /**
     * Resizing PVC.
     */
    resizingPvcs: string[];
    /**
     * A Google Cloud Service Account is used for logs. If you leave this blank, then you will be unable to access log details for this cluster. Required when cluster is deployed on BigAnimal's cloud account.
     */
    serviceAccountIds: string[];
    /**
     * Storage.
     */
    storage: outputs.GetPgdDataGroupStorage;
}

export interface GetPgdDataGroupAllowedIpRange {
    /**
     * CIDR block
     */
    cidrBlock: string;
    /**
     * Description of CIDR block
     */
    description: string;
}

export interface GetPgdDataGroupCloudProvider {
    /**
     * Data group cloud provider id.
     */
    cloudProviderId: string;
}

export interface GetPgdDataGroupClusterArchitecture {
    /**
     * Cluster architecture ID.
     */
    clusterArchitectureId: string;
    /**
     * Cluster architecture name.
     */
    clusterArchitectureName: string;
    /**
     * Node count.
     */
    nodes: number;
    /**
     * Witness nodes count.
     */
    witnessNodes: number;
}

export interface GetPgdDataGroupInstanceType {
    /**
     * Data group instance type id.
     */
    instanceTypeId: string;
}

export interface GetPgdDataGroupMaintenanceWindow {
    /**
     * Is maintenance window enabled.
     */
    isEnabled: boolean;
    /**
     * Start day.
     */
    startDay: number;
    /**
     * Start time.
     */
    startTime: string;
}

export interface GetPgdDataGroupPgConfig {
    /**
     * GUC name.
     */
    name: string;
    /**
     * GUC value.
     */
    value: string;
}

export interface GetPgdDataGroupPgType {
    /**
     * Data group pg type id.
     */
    pgTypeId: string;
}

export interface GetPgdDataGroupPgVersion {
    /**
     * Data group pg version id.
     */
    pgVersionId: string;
}

export interface GetPgdDataGroupRegion {
    /**
     * Data group region id.
     */
    regionId: string;
}

export interface GetPgdDataGroupStorage {
    /**
     * IOPS for the selected volume.
     */
    iops: string;
    /**
     * Size of the volume.
     */
    size: string;
    /**
     * Throughput.
     */
    throughput: string;
    /**
     * Volume properties.
     */
    volumeProperties: string;
    /**
     * Volume type.
     */
    volumeType: string;
}

export interface GetPgdWitnessGroup {
    /**
     * Cloud provider.
     */
    cloudProvider: outputs.GetPgdWitnessGroupCloudProvider;
    /**
     * Cluster architecture.
     */
    clusterArchitecture: outputs.GetPgdWitnessGroupClusterArchitecture;
    /**
     * Type of the Specified Cluster
     */
    clusterType: string;
    /**
     * Group id of witness group.
     */
    groupId: string;
    /**
     * Instance type.
     */
    instanceType: outputs.GetPgdWitnessGroupInstanceType;
    /**
     * Custom maintenance window.
     */
    maintenanceWindow: outputs.GetPgdWitnessGroupMaintenanceWindow;
    /**
     * Current phase of the witness group.
     */
    phase: string;
    /**
     * Region.
     */
    region: outputs.GetPgdWitnessGroupRegion;
    /**
     * Storage.
     */
    storage: outputs.GetPgdWitnessGroupStorage;
}

export interface GetPgdWitnessGroupCloudProvider {
    /**
     * Cloud provider id.
     */
    cloudProviderId: string;
}

export interface GetPgdWitnessGroupClusterArchitecture {
    /**
     * Cluster architecture ID.
     */
    clusterArchitectureId: string;
    /**
     * Name.
     */
    clusterArchitectureName: string;
    /**
     * Nodes.
     */
    nodes: number;
    /**
     * Witness nodes count.
     */
    witnessNodes: number;
}

export interface GetPgdWitnessGroupInstanceType {
    /**
     * Witness group instance type id.
     */
    instanceTypeId: string;
}

export interface GetPgdWitnessGroupMaintenanceWindow {
    /**
     * Is maintenance window enabled.
     */
    isEnabled: boolean;
    /**
     * The day of week, 0 represents Sunday, 1 is Monday, and so on.
     */
    startDay: number;
    /**
     * Start time. "hh:mm", for example: "23:59".
     */
    startTime: string;
}

export interface GetPgdWitnessGroupRegion {
    /**
     * Region id.
     */
    regionId: string;
}

export interface GetPgdWitnessGroupStorage {
    /**
     * IOPS for the selected volume.
     */
    iops: string;
    /**
     * Size of the volume.
     */
    size: string;
    /**
     * Throughput.
     */
    throughput: string;
    /**
     * Volume properties.
     */
    volumeProperties: string;
    /**
     * Volume type.
     */
    volumeType: string;
}

export interface GetProjectsProject {
    /**
     * Enabled Cloud Providers.
     */
    cloudProviders: outputs.GetProjectsProjectCloudProvider[];
    /**
     * User Count of the project.
     */
    clusterCount: number;
    /**
     * Project ID of the project.
     */
    projectId: string;
    /**
     * Project Name of the project.
     */
    projectName: string;
    /**
     * User Count of the project.
     */
    userCount: number;
}

export interface GetProjectsProjectCloudProvider {
    /**
     * Cloud Provider ID.
     */
    cloudProviderId: string;
    /**
     * Cloud Provider Name.
     */
    cloudProviderName: string;
}

export interface GetRegionRegion {
    /**
     * Continent that region belongs to.
     */
    continent: string;
    /**
     * Region name of the region.
     */
    name: string;
    /**
     * Region ID of the region.
     */
    regionId: string;
    /**
     * Region status of the region.
     */
    status: string;
}

export interface PgdDataGroup {
    /**
     * Allowed IP ranges.
     */
    allowedIpRanges: outputs.PgdDataGroupAllowedIpRange[];
    /**
     * Backup retention period
     */
    backupRetentionPeriod: string;
    /**
     * Cloud provider.
     */
    cloudProvider: outputs.PgdDataGroupCloudProvider;
    /**
     * Cluster architecture.
     */
    clusterArchitecture: outputs.PgdDataGroupClusterArchitecture;
    /**
     * Name of the group.
     */
    clusterName: string;
    /**
     * Type of the Specified Cluster
     */
    clusterType: string;
    /**
     * Data group connection URI.
     */
    connectionUri: string;
    /**
     * Cluster creation time.
     */
    createdAt: string;
    /**
     * Is authentication handled by the cloud service provider.
     */
    cspAuth: boolean;
    /**
     * Group ID of the group.
     */
    groupId: string;
    /**
     * Instance type.
     */
    instanceType: outputs.PgdDataGroupInstanceType;
    /**
     * The URL to find the logs of this cluster.
     */
    logsUrl: string;
    /**
     * Custom maintenance window.
     */
    maintenanceWindow: outputs.PgdDataGroupMaintenanceWindow;
    /**
     * The URL to find the metrics of this cluster.
     */
    metricsUrl: string;
    /**
     * Cloud provider subscription/account ID, need to be specified when cluster is deployed on BigAnimal's cloud account.
     */
    peAllowedPrincipalIds: string[];
    /**
     * Database configuration parameters.
     */
    pgConfigs: outputs.PgdDataGroupPgConfig[];
    /**
     * Postgres type.
     */
    pgType: outputs.PgdDataGroupPgType;
    /**
     * Postgres version.
     */
    pgVersion: outputs.PgdDataGroupPgVersion;
    /**
     * Current phase of the data group.
     */
    phase: string;
    /**
     * Is private networking enabled.
     */
    privateNetworking: boolean;
    /**
     * Region.
     */
    region: outputs.PgdDataGroupRegion;
    /**
     * Resizing PVC.
     */
    resizingPvcs: string[];
    /**
     * A Google Cloud Service Account is used for logs. If you leave this blank, then you will be unable to access log details for this cluster. Required when cluster is deployed on BigAnimal's cloud account.
     */
    serviceAccountIds: string[];
    /**
     * Storage.
     */
    storage: outputs.PgdDataGroupStorage;
}

export interface PgdDataGroupAllowedIpRange {
    /**
     * CIDR block
     */
    cidrBlock: string;
    /**
     * Description of CIDR block
     */
    description: string;
}

export interface PgdDataGroupCloudProvider {
    /**
     * Data group cloud provider id.
     */
    cloudProviderId: string;
}

export interface PgdDataGroupClusterArchitecture {
    /**
     * Cluster architecture ID.
     */
    clusterArchitectureId: string;
    /**
     * Cluster architecture name.
     */
    clusterArchitectureName: string;
    /**
     * Node count.
     */
    nodes: number;
    /**
     * Witness nodes count.
     */
    witnessNodes: number;
}

export interface PgdDataGroupInstanceType {
    /**
     * Data group instance type id.
     */
    instanceTypeId: string;
}

export interface PgdDataGroupMaintenanceWindow {
    /**
     * Is maintenance window enabled.
     */
    isEnabled: boolean;
    /**
     * Start day.
     */
    startDay: number;
    /**
     * Start time.
     */
    startTime: string;
}

export interface PgdDataGroupPgConfig {
    /**
     * GUC name.
     */
    name: string;
    /**
     * GUC value.
     */
    value: string;
}

export interface PgdDataGroupPgType {
    /**
     * Data group pg type id.
     */
    pgTypeId: string;
}

export interface PgdDataGroupPgVersion {
    /**
     * Data group pg version id.
     */
    pgVersionId: string;
}

export interface PgdDataGroupRegion {
    /**
     * Data group region id.
     */
    regionId: string;
}

export interface PgdDataGroupStorage {
    /**
     * IOPS for the selected volume.
     */
    iops: string;
    /**
     * Size of the volume.
     */
    size: string;
    /**
     * Throughput.
     */
    throughput: string;
    /**
     * Volume properties.
     */
    volumeProperties: string;
    /**
     * Volume type.
     */
    volumeType: string;
}

export interface PgdTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: string;
}

export interface PgdWitnessGroup {
    /**
     * Witness Group cloud provider id. It can be set during creation only and can be different than the cloud provider of the data groups. Once set, cannot be changed.
     */
    cloudProvider: outputs.PgdWitnessGroupCloudProvider;
    /**
     * Cluster architecture.
     */
    clusterArchitecture: outputs.PgdWitnessGroupClusterArchitecture;
    /**
     * Type of the Specified Cluster
     */
    clusterType: string;
    /**
     * Group id of witness group.
     */
    groupId: string;
    /**
     * Instance type.
     */
    instanceType: outputs.PgdWitnessGroupInstanceType;
    /**
     * Custom maintenance window.
     */
    maintenanceWindow: outputs.PgdWitnessGroupMaintenanceWindow;
    /**
     * Current phase of the witness group.
     */
    phase: string;
    /**
     * Region.
     */
    region: outputs.PgdWitnessGroupRegion;
    /**
     * Storage.
     */
    storage: outputs.PgdWitnessGroupStorage;
}

export interface PgdWitnessGroupCloudProvider {
    /**
     * Cloud provider id.
     */
    cloudProviderId: string;
}

export interface PgdWitnessGroupClusterArchitecture {
    /**
     * Cluster architecture ID.
     */
    clusterArchitectureId: string;
    /**
     * Name.
     */
    clusterArchitectureName: string;
    /**
     * Nodes.
     */
    nodes: number;
    /**
     * Witness nodes count.
     */
    witnessNodes: number;
}

export interface PgdWitnessGroupInstanceType {
    /**
     * Witness group instance type id.
     */
    instanceTypeId: string;
}

export interface PgdWitnessGroupMaintenanceWindow {
    /**
     * Is maintenance window enabled.
     */
    isEnabled: boolean;
    /**
     * The day of week, 0 represents Sunday, 1 is Monday, and so on.
     */
    startDay: number;
    /**
     * Start time. "hh:mm", for example: "23:59".
     */
    startTime: string;
}

export interface PgdWitnessGroupRegion {
    /**
     * Region id.
     */
    regionId: string;
}

export interface PgdWitnessGroupStorage {
    /**
     * IOPS for the selected volume.
     */
    iops: string;
    /**
     * Size of the volume.
     */
    size: string;
    /**
     * Throughput.
     */
    throughput: string;
    /**
     * Volume properties.
     */
    volumeProperties: string;
    /**
     * Volume type.
     */
    volumeType: string;
}

export interface ProjectCloudProvider {
    /**
     * Cloud Provider ID.
     */
    cloudProviderId: string;
    /**
     * Cloud Provider Name.
     */
    cloudProviderName: string;
}

export interface RegionTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: string;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: string;
}

