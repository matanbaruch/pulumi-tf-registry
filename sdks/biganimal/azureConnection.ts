// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AzureConnection extends pulumi.CustomResource {
    /**
     * Get an existing AzureConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureConnectionState, opts?: pulumi.CustomResourceOptions): AzureConnection {
        return new AzureConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'biganimal:index/azureConnection:AzureConnection';

    /**
     * Returns true if the given object is an instance of AzureConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureConnection.__pulumiType;
    }

    /**
     * Azure APP client identity for BigAnimal.
     */
    public readonly clientId!: pulumi.Output<string>;
    /**
     * Azure APP client secret for BigAnimal.
     */
    public readonly clientSecret!: pulumi.Output<string>;
    /**
     * Project ID of the project.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * Your Azure subscription identity.
     */
    public readonly subscriptionId!: pulumi.Output<string>;
    /**
     * Your Azure tenant identity.
     */
    public readonly tenantId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.AzureConnectionTimeouts | undefined>;

    /**
     * Create a AzureConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureConnectionArgs | AzureConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureConnectionState | undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AzureConnectionArgs | undefined;
            if ((!args || args.clientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if ((!args || args.clientSecret === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientSecret'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.subscriptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionId'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecret"] = args ? args.clientSecret : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureConnection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AzureConnection resources.
 */
export interface AzureConnectionState {
    /**
     * Azure APP client identity for BigAnimal.
     */
    clientId?: pulumi.Input<string>;
    /**
     * Azure APP client secret for BigAnimal.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Project ID of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Your Azure subscription identity.
     */
    subscriptionId?: pulumi.Input<string>;
    /**
     * Your Azure tenant identity.
     */
    tenantId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AzureConnectionTimeouts>;
}

/**
 * The set of arguments for constructing a AzureConnection resource.
 */
export interface AzureConnectionArgs {
    /**
     * Azure APP client identity for BigAnimal.
     */
    clientId: pulumi.Input<string>;
    /**
     * Azure APP client secret for BigAnimal.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Project ID of the project.
     */
    projectId: pulumi.Input<string>;
    /**
     * Your Azure subscription identity.
     */
    subscriptionId: pulumi.Input<string>;
    /**
     * Your Azure tenant identity.
     */
    tenantId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AzureConnectionTimeouts>;
}
