// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPgd(args: GetPgdArgs, opts?: pulumi.InvokeOptions): Promise<GetPgdResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("biganimal:index/getPgd:getPgd", {
        "clusterName": args.clusterName,
        "mostRecent": args.mostRecent,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPgd.
 */
export interface GetPgdArgs {
    clusterName: string;
    mostRecent?: boolean;
    projectId: string;
}

/**
 * A collection of values returned by getPgd.
 */
export interface GetPgdResult {
    readonly clusterId: string;
    readonly clusterName: string;
    readonly dataGroups: outputs.GetPgdDataGroup[];
    readonly id: string;
    readonly mostRecent?: boolean;
    readonly projectId: string;
    readonly witnessGroups: outputs.GetPgdWitnessGroup[];
}
export function getPgdOutput(args: GetPgdOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPgdResult> {
    return pulumi.output(args).apply((a: any) => getPgd(a, opts))
}

/**
 * A collection of arguments for invoking getPgd.
 */
export interface GetPgdOutputArgs {
    clusterName: pulumi.Input<string>;
    mostRecent?: pulumi.Input<boolean>;
    projectId: pulumi.Input<string>;
}
