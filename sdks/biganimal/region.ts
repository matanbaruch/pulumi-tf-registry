// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Region extends pulumi.CustomResource {
    /**
     * Get an existing Region resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RegionState, opts?: pulumi.CustomResourceOptions): Region {
        return new Region(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'biganimal:index/region:Region';

    /**
     * Returns true if the given object is an instance of Region.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Region {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Region.__pulumiType;
    }

    /**
     * Cloud provider. For example, "aws", "azure", "gcp" or "bah:aws".
     */
    public readonly cloudProvider!: pulumi.Output<string>;
    /**
     * Continent that region belongs to. For example, "Asia", "Australia", or "Europe".
     */
    public /*out*/ readonly continent!: pulumi.Output<string>;
    /**
     * Region name of the region. For example, "Germany West Central" or "EU West 1".
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * BigAnimal Project ID.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * Region ID of the region. For example, "germanywestcentral" in the Azure cloud provider, "eu-west-1" in the AWS cloud
     * provider or "us-east1" in the Google Cloud Platform.
     */
    public readonly regionId!: pulumi.Output<string>;
    /**
     * Region status of the region. For example, "ACTIVE", "INACTIVE", or "SUSPENDED".
     */
    public readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.RegionTimeouts | undefined>;

    /**
     * Create a Region resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RegionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RegionArgs | RegionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RegionState | undefined;
            resourceInputs["cloudProvider"] = state ? state.cloudProvider : undefined;
            resourceInputs["continent"] = state ? state.continent : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["regionId"] = state ? state.regionId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as RegionArgs | undefined;
            if ((!args || args.cloudProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudProvider'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.regionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'regionId'");
            }
            resourceInputs["cloudProvider"] = args ? args.cloudProvider : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["regionId"] = args ? args.regionId : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["continent"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Region.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Region resources.
 */
export interface RegionState {
    /**
     * Cloud provider. For example, "aws", "azure", "gcp" or "bah:aws".
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * Continent that region belongs to. For example, "Asia", "Australia", or "Europe".
     */
    continent?: pulumi.Input<string>;
    /**
     * Region name of the region. For example, "Germany West Central" or "EU West 1".
     */
    name?: pulumi.Input<string>;
    /**
     * BigAnimal Project ID.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Region ID of the region. For example, "germanywestcentral" in the Azure cloud provider, "eu-west-1" in the AWS cloud
     * provider or "us-east1" in the Google Cloud Platform.
     */
    regionId?: pulumi.Input<string>;
    /**
     * Region status of the region. For example, "ACTIVE", "INACTIVE", or "SUSPENDED".
     */
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.RegionTimeouts>;
}

/**
 * The set of arguments for constructing a Region resource.
 */
export interface RegionArgs {
    /**
     * Cloud provider. For example, "aws", "azure", "gcp" or "bah:aws".
     */
    cloudProvider: pulumi.Input<string>;
    /**
     * BigAnimal Project ID.
     */
    projectId: pulumi.Input<string>;
    /**
     * Region ID of the region. For example, "germanywestcentral" in the Azure cloud provider, "eu-west-1" in the AWS cloud
     * provider or "us-east1" in the Google Cloud Platform.
     */
    regionId: pulumi.Input<string>;
    /**
     * Region status of the region. For example, "ACTIVE", "INACTIVE", or "SUSPENDED".
     */
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.RegionTimeouts>;
}
