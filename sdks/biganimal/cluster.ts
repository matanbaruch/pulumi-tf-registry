// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'biganimal:index/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * Allowed IP ranges.
     */
    public readonly allowedIpRanges!: pulumi.Output<outputs.ClusterAllowedIpRange[]>;
    /**
     * Backup retention period. For example, "7d", "2w", or "3m".
     */
    public readonly backupRetentionPeriod!: pulumi.Output<string>;
    /**
     * Cloud provider. For example, "aws", "azure", "gcp" or "bah:aws", "bah:gcp".
     */
    public readonly cloudProvider!: pulumi.Output<string>;
    /**
     * Cluster architecture.
     */
    public readonly clusterArchitecture!: pulumi.Output<outputs.ClusterClusterArchitecture>;
    /**
     * Cluster ID.
     */
    public /*out*/ readonly clusterId!: pulumi.Output<string>;
    /**
     * Name of the cluster.
     */
    public readonly clusterName!: pulumi.Output<string>;
    /**
     * Type of the cluster. For example, "cluster" for biganimal.Cluster resources, or "faraway_replica" for
     * biganimal.FarawayReplica resources.
     */
    public /*out*/ readonly clusterType!: pulumi.Output<string>;
    /**
     * Cluster connection URI.
     */
    public /*out*/ readonly connectionUri!: pulumi.Output<string>;
    /**
     * Cluster creation time.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Is authentication handled by the cloud service provider. Available for AWS only, See
     * [Authentication](https://www.enterprisedb.com/docs/biganimal/latest/getting_started/creating_a_cluster/#authentication)
     * for details.
     */
    public readonly cspAuth!: pulumi.Output<boolean>;
    public /*out*/ readonly farawayReplicaIds!: pulumi.Output<string[]>;
    /**
     * Earliest backup recover time.
     */
    public /*out*/ readonly firstRecoverabilityPointAt!: pulumi.Output<string>;
    /**
     * Instance type. For example, "azure:Standard_D2s_v3", "aws:c5.large" or "gcp:e2-highcpu-4".
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * The URL to find the logs of this cluster.
     */
    public /*out*/ readonly logsUrl!: pulumi.Output<string>;
    /**
     * Custom maintenance window.
     */
    public readonly maintenanceWindow!: pulumi.Output<outputs.ClusterMaintenanceWindow>;
    /**
     * The URL to find the metrics of this cluster.
     */
    public /*out*/ readonly metricsUrl!: pulumi.Output<string>;
    /**
     * Password for the user edb_admin. It must be 12 characters or more.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * Pause cluster. If true it will put the cluster on pause and set the phase as paused, if false it will resume the cluster
     * and set the phase as healthy. Pausing a cluster allows you to save on compute costs without losing data or cluster
     * configuration settings. While paused, clusters aren't upgraded or patched, but changes are applied when the cluster
     * resumes. Pausing a high availability cluster shuts down all cluster nodes
     */
    public readonly pause!: pulumi.Output<boolean | undefined>;
    /**
     * Cloud provider subscription/account ID, need to be specified when cluster is deployed on BigAnimal's cloud account.
     */
    public readonly peAllowedPrincipalIds!: pulumi.Output<string[]>;
    /**
     * Pg bouncer.
     */
    public readonly pgBouncer!: pulumi.Output<outputs.ClusterPgBouncer>;
    /**
     * Database configuration parameters. See [Modifying database configuration
     * parameters](https://www.enterprisedb.com/docs/biganimal/latest/using_cluster/03_modifying_your_cluster/05_db_configuration_parameters/)
     * for details.
     */
    public readonly pgConfigs!: pulumi.Output<outputs.ClusterPgConfig[] | undefined>;
    /**
     * PG Identity required to grant key permissions to activate the cluster.
     */
    public /*out*/ readonly pgIdentity!: pulumi.Output<string>;
    /**
     * Postgres type. For example, "epas", "pgextended", or "postgres".
     */
    public readonly pgType!: pulumi.Output<string>;
    /**
     * Postgres version. See [Supported Postgres types and
     * versions](https://www.enterprisedb.com/docs/biganimal/latest/overview/05_database_version_policy/#supported-postgres-types-and-versions)
     * for supported Postgres types and versions.
     */
    public readonly pgVersion!: pulumi.Output<string>;
    /**
     * Is pgvector extension enabled. Adds support for vector storage and vector similarity search to Postgres.
     */
    public readonly pgvector!: pulumi.Output<boolean | undefined>;
    /**
     * Current phase of the cluster.
     */
    public /*out*/ readonly phase!: pulumi.Output<string>;
    /**
     * Is postGIS extension enabled. PostGIS extends the capabilities of the PostgreSQL relational database by adding support
     * storing, indexing and querying geographic data.
     */
    public readonly postGis!: pulumi.Output<boolean | undefined>;
    /**
     * Is private networking enabled.
     */
    public readonly privateNetworking!: pulumi.Output<boolean | undefined>;
    /**
     * BigAnimal Project ID.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * Is read only connection enabled.
     */
    public readonly readOnlyConnections!: pulumi.Output<boolean | undefined>;
    /**
     * Region to deploy the cluster. See [Supported
     * regions](https://www.enterprisedb.com/docs/biganimal/latest/overview/03a_region_support/) for supported regions.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Resizing PVC.
     */
    public /*out*/ readonly resizingPvcs!: pulumi.Output<string[]>;
    /**
     * Cluster read-only connection URI. Only available for high availability clusters.
     */
    public /*out*/ readonly roConnectionUri!: pulumi.Output<string>;
    /**
     * A Google Cloud Service Account is used for logs. If you leave this blank, then you will be unable to access log details
     * for this cluster. Required when cluster is deployed on BigAnimal's cloud account.
     */
    public readonly serviceAccountIds!: pulumi.Output<string[]>;
    /**
     * Storage.
     */
    public readonly storage!: pulumi.Output<outputs.ClusterStorage>;
    /**
     * Enable to grant superuser access to the edb_admin role.
     */
    public readonly superuserAccess!: pulumi.Output<boolean>;
    public readonly timeouts!: pulumi.Output<outputs.ClusterTimeouts | undefined>;
    /**
     * Transparent Data Encryption (TDE) key
     */
    public readonly transparentDataEncryption!: pulumi.Output<outputs.ClusterTransparentDataEncryption | undefined>;
    /**
     * Transparent data encryption action.
     */
    public /*out*/ readonly transparentDataEncryptionAction!: pulumi.Output<string>;
    /**
     * Enable to take a snapshot of the volume.
     */
    public readonly volumeSnapshotBackup!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["allowedIpRanges"] = state ? state.allowedIpRanges : undefined;
            resourceInputs["backupRetentionPeriod"] = state ? state.backupRetentionPeriod : undefined;
            resourceInputs["cloudProvider"] = state ? state.cloudProvider : undefined;
            resourceInputs["clusterArchitecture"] = state ? state.clusterArchitecture : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["clusterName"] = state ? state.clusterName : undefined;
            resourceInputs["clusterType"] = state ? state.clusterType : undefined;
            resourceInputs["connectionUri"] = state ? state.connectionUri : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["cspAuth"] = state ? state.cspAuth : undefined;
            resourceInputs["farawayReplicaIds"] = state ? state.farawayReplicaIds : undefined;
            resourceInputs["firstRecoverabilityPointAt"] = state ? state.firstRecoverabilityPointAt : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["logsUrl"] = state ? state.logsUrl : undefined;
            resourceInputs["maintenanceWindow"] = state ? state.maintenanceWindow : undefined;
            resourceInputs["metricsUrl"] = state ? state.metricsUrl : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["pause"] = state ? state.pause : undefined;
            resourceInputs["peAllowedPrincipalIds"] = state ? state.peAllowedPrincipalIds : undefined;
            resourceInputs["pgBouncer"] = state ? state.pgBouncer : undefined;
            resourceInputs["pgConfigs"] = state ? state.pgConfigs : undefined;
            resourceInputs["pgIdentity"] = state ? state.pgIdentity : undefined;
            resourceInputs["pgType"] = state ? state.pgType : undefined;
            resourceInputs["pgVersion"] = state ? state.pgVersion : undefined;
            resourceInputs["pgvector"] = state ? state.pgvector : undefined;
            resourceInputs["phase"] = state ? state.phase : undefined;
            resourceInputs["postGis"] = state ? state.postGis : undefined;
            resourceInputs["privateNetworking"] = state ? state.privateNetworking : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["readOnlyConnections"] = state ? state.readOnlyConnections : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resizingPvcs"] = state ? state.resizingPvcs : undefined;
            resourceInputs["roConnectionUri"] = state ? state.roConnectionUri : undefined;
            resourceInputs["serviceAccountIds"] = state ? state.serviceAccountIds : undefined;
            resourceInputs["storage"] = state ? state.storage : undefined;
            resourceInputs["superuserAccess"] = state ? state.superuserAccess : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["transparentDataEncryption"] = state ? state.transparentDataEncryption : undefined;
            resourceInputs["transparentDataEncryptionAction"] = state ? state.transparentDataEncryptionAction : undefined;
            resourceInputs["volumeSnapshotBackup"] = state ? state.volumeSnapshotBackup : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if ((!args || args.cloudProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudProvider'");
            }
            if ((!args || args.clusterArchitecture === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterArchitecture'");
            }
            if ((!args || args.clusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            if ((!args || args.instanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.pgType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pgType'");
            }
            if ((!args || args.pgVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pgVersion'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if ((!args || args.storage === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storage'");
            }
            resourceInputs["allowedIpRanges"] = args ? args.allowedIpRanges : undefined;
            resourceInputs["backupRetentionPeriod"] = args ? args.backupRetentionPeriod : undefined;
            resourceInputs["cloudProvider"] = args ? args.cloudProvider : undefined;
            resourceInputs["clusterArchitecture"] = args ? args.clusterArchitecture : undefined;
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["cspAuth"] = args ? args.cspAuth : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["maintenanceWindow"] = args ? args.maintenanceWindow : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["pause"] = args ? args.pause : undefined;
            resourceInputs["peAllowedPrincipalIds"] = args ? args.peAllowedPrincipalIds : undefined;
            resourceInputs["pgBouncer"] = args ? args.pgBouncer : undefined;
            resourceInputs["pgConfigs"] = args ? args.pgConfigs : undefined;
            resourceInputs["pgType"] = args ? args.pgType : undefined;
            resourceInputs["pgVersion"] = args ? args.pgVersion : undefined;
            resourceInputs["pgvector"] = args ? args.pgvector : undefined;
            resourceInputs["postGis"] = args ? args.postGis : undefined;
            resourceInputs["privateNetworking"] = args ? args.privateNetworking : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["readOnlyConnections"] = args ? args.readOnlyConnections : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["serviceAccountIds"] = args ? args.serviceAccountIds : undefined;
            resourceInputs["storage"] = args ? args.storage : undefined;
            resourceInputs["superuserAccess"] = args ? args.superuserAccess : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["transparentDataEncryption"] = args ? args.transparentDataEncryption : undefined;
            resourceInputs["volumeSnapshotBackup"] = args ? args.volumeSnapshotBackup : undefined;
            resourceInputs["clusterId"] = undefined /*out*/;
            resourceInputs["clusterType"] = undefined /*out*/;
            resourceInputs["connectionUri"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["farawayReplicaIds"] = undefined /*out*/;
            resourceInputs["firstRecoverabilityPointAt"] = undefined /*out*/;
            resourceInputs["logsUrl"] = undefined /*out*/;
            resourceInputs["metricsUrl"] = undefined /*out*/;
            resourceInputs["pgIdentity"] = undefined /*out*/;
            resourceInputs["phase"] = undefined /*out*/;
            resourceInputs["resizingPvcs"] = undefined /*out*/;
            resourceInputs["roConnectionUri"] = undefined /*out*/;
            resourceInputs["transparentDataEncryptionAction"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * Allowed IP ranges.
     */
    allowedIpRanges?: pulumi.Input<pulumi.Input<inputs.ClusterAllowedIpRange>[]>;
    /**
     * Backup retention period. For example, "7d", "2w", or "3m".
     */
    backupRetentionPeriod?: pulumi.Input<string>;
    /**
     * Cloud provider. For example, "aws", "azure", "gcp" or "bah:aws", "bah:gcp".
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * Cluster architecture.
     */
    clusterArchitecture?: pulumi.Input<inputs.ClusterClusterArchitecture>;
    /**
     * Cluster ID.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Name of the cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Type of the cluster. For example, "cluster" for biganimal.Cluster resources, or "faraway_replica" for
     * biganimal.FarawayReplica resources.
     */
    clusterType?: pulumi.Input<string>;
    /**
     * Cluster connection URI.
     */
    connectionUri?: pulumi.Input<string>;
    /**
     * Cluster creation time.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Is authentication handled by the cloud service provider. Available for AWS only, See
     * [Authentication](https://www.enterprisedb.com/docs/biganimal/latest/getting_started/creating_a_cluster/#authentication)
     * for details.
     */
    cspAuth?: pulumi.Input<boolean>;
    farawayReplicaIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Earliest backup recover time.
     */
    firstRecoverabilityPointAt?: pulumi.Input<string>;
    /**
     * Instance type. For example, "azure:Standard_D2s_v3", "aws:c5.large" or "gcp:e2-highcpu-4".
     */
    instanceType?: pulumi.Input<string>;
    /**
     * The URL to find the logs of this cluster.
     */
    logsUrl?: pulumi.Input<string>;
    /**
     * Custom maintenance window.
     */
    maintenanceWindow?: pulumi.Input<inputs.ClusterMaintenanceWindow>;
    /**
     * The URL to find the metrics of this cluster.
     */
    metricsUrl?: pulumi.Input<string>;
    /**
     * Password for the user edb_admin. It must be 12 characters or more.
     */
    password?: pulumi.Input<string>;
    /**
     * Pause cluster. If true it will put the cluster on pause and set the phase as paused, if false it will resume the cluster
     * and set the phase as healthy. Pausing a cluster allows you to save on compute costs without losing data or cluster
     * configuration settings. While paused, clusters aren't upgraded or patched, but changes are applied when the cluster
     * resumes. Pausing a high availability cluster shuts down all cluster nodes
     */
    pause?: pulumi.Input<boolean>;
    /**
     * Cloud provider subscription/account ID, need to be specified when cluster is deployed on BigAnimal's cloud account.
     */
    peAllowedPrincipalIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Pg bouncer.
     */
    pgBouncer?: pulumi.Input<inputs.ClusterPgBouncer>;
    /**
     * Database configuration parameters. See [Modifying database configuration
     * parameters](https://www.enterprisedb.com/docs/biganimal/latest/using_cluster/03_modifying_your_cluster/05_db_configuration_parameters/)
     * for details.
     */
    pgConfigs?: pulumi.Input<pulumi.Input<inputs.ClusterPgConfig>[]>;
    /**
     * PG Identity required to grant key permissions to activate the cluster.
     */
    pgIdentity?: pulumi.Input<string>;
    /**
     * Postgres type. For example, "epas", "pgextended", or "postgres".
     */
    pgType?: pulumi.Input<string>;
    /**
     * Postgres version. See [Supported Postgres types and
     * versions](https://www.enterprisedb.com/docs/biganimal/latest/overview/05_database_version_policy/#supported-postgres-types-and-versions)
     * for supported Postgres types and versions.
     */
    pgVersion?: pulumi.Input<string>;
    /**
     * Is pgvector extension enabled. Adds support for vector storage and vector similarity search to Postgres.
     */
    pgvector?: pulumi.Input<boolean>;
    /**
     * Current phase of the cluster.
     */
    phase?: pulumi.Input<string>;
    /**
     * Is postGIS extension enabled. PostGIS extends the capabilities of the PostgreSQL relational database by adding support
     * storing, indexing and querying geographic data.
     */
    postGis?: pulumi.Input<boolean>;
    /**
     * Is private networking enabled.
     */
    privateNetworking?: pulumi.Input<boolean>;
    /**
     * BigAnimal Project ID.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Is read only connection enabled.
     */
    readOnlyConnections?: pulumi.Input<boolean>;
    /**
     * Region to deploy the cluster. See [Supported
     * regions](https://www.enterprisedb.com/docs/biganimal/latest/overview/03a_region_support/) for supported regions.
     */
    region?: pulumi.Input<string>;
    /**
     * Resizing PVC.
     */
    resizingPvcs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Cluster read-only connection URI. Only available for high availability clusters.
     */
    roConnectionUri?: pulumi.Input<string>;
    /**
     * A Google Cloud Service Account is used for logs. If you leave this blank, then you will be unable to access log details
     * for this cluster. Required when cluster is deployed on BigAnimal's cloud account.
     */
    serviceAccountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Storage.
     */
    storage?: pulumi.Input<inputs.ClusterStorage>;
    /**
     * Enable to grant superuser access to the edb_admin role.
     */
    superuserAccess?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.ClusterTimeouts>;
    /**
     * Transparent Data Encryption (TDE) key
     */
    transparentDataEncryption?: pulumi.Input<inputs.ClusterTransparentDataEncryption>;
    /**
     * Transparent data encryption action.
     */
    transparentDataEncryptionAction?: pulumi.Input<string>;
    /**
     * Enable to take a snapshot of the volume.
     */
    volumeSnapshotBackup?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * Allowed IP ranges.
     */
    allowedIpRanges?: pulumi.Input<pulumi.Input<inputs.ClusterAllowedIpRange>[]>;
    /**
     * Backup retention period. For example, "7d", "2w", or "3m".
     */
    backupRetentionPeriod?: pulumi.Input<string>;
    /**
     * Cloud provider. For example, "aws", "azure", "gcp" or "bah:aws", "bah:gcp".
     */
    cloudProvider: pulumi.Input<string>;
    /**
     * Cluster architecture.
     */
    clusterArchitecture: pulumi.Input<inputs.ClusterClusterArchitecture>;
    /**
     * Name of the cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * Is authentication handled by the cloud service provider. Available for AWS only, See
     * [Authentication](https://www.enterprisedb.com/docs/biganimal/latest/getting_started/creating_a_cluster/#authentication)
     * for details.
     */
    cspAuth?: pulumi.Input<boolean>;
    /**
     * Instance type. For example, "azure:Standard_D2s_v3", "aws:c5.large" or "gcp:e2-highcpu-4".
     */
    instanceType: pulumi.Input<string>;
    /**
     * Custom maintenance window.
     */
    maintenanceWindow?: pulumi.Input<inputs.ClusterMaintenanceWindow>;
    /**
     * Password for the user edb_admin. It must be 12 characters or more.
     */
    password: pulumi.Input<string>;
    /**
     * Pause cluster. If true it will put the cluster on pause and set the phase as paused, if false it will resume the cluster
     * and set the phase as healthy. Pausing a cluster allows you to save on compute costs without losing data or cluster
     * configuration settings. While paused, clusters aren't upgraded or patched, but changes are applied when the cluster
     * resumes. Pausing a high availability cluster shuts down all cluster nodes
     */
    pause?: pulumi.Input<boolean>;
    /**
     * Cloud provider subscription/account ID, need to be specified when cluster is deployed on BigAnimal's cloud account.
     */
    peAllowedPrincipalIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Pg bouncer.
     */
    pgBouncer?: pulumi.Input<inputs.ClusterPgBouncer>;
    /**
     * Database configuration parameters. See [Modifying database configuration
     * parameters](https://www.enterprisedb.com/docs/biganimal/latest/using_cluster/03_modifying_your_cluster/05_db_configuration_parameters/)
     * for details.
     */
    pgConfigs?: pulumi.Input<pulumi.Input<inputs.ClusterPgConfig>[]>;
    /**
     * Postgres type. For example, "epas", "pgextended", or "postgres".
     */
    pgType: pulumi.Input<string>;
    /**
     * Postgres version. See [Supported Postgres types and
     * versions](https://www.enterprisedb.com/docs/biganimal/latest/overview/05_database_version_policy/#supported-postgres-types-and-versions)
     * for supported Postgres types and versions.
     */
    pgVersion: pulumi.Input<string>;
    /**
     * Is pgvector extension enabled. Adds support for vector storage and vector similarity search to Postgres.
     */
    pgvector?: pulumi.Input<boolean>;
    /**
     * Is postGIS extension enabled. PostGIS extends the capabilities of the PostgreSQL relational database by adding support
     * storing, indexing and querying geographic data.
     */
    postGis?: pulumi.Input<boolean>;
    /**
     * Is private networking enabled.
     */
    privateNetworking?: pulumi.Input<boolean>;
    /**
     * BigAnimal Project ID.
     */
    projectId: pulumi.Input<string>;
    /**
     * Is read only connection enabled.
     */
    readOnlyConnections?: pulumi.Input<boolean>;
    /**
     * Region to deploy the cluster. See [Supported
     * regions](https://www.enterprisedb.com/docs/biganimal/latest/overview/03a_region_support/) for supported regions.
     */
    region: pulumi.Input<string>;
    /**
     * A Google Cloud Service Account is used for logs. If you leave this blank, then you will be unable to access log details
     * for this cluster. Required when cluster is deployed on BigAnimal's cloud account.
     */
    serviceAccountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Storage.
     */
    storage: pulumi.Input<inputs.ClusterStorage>;
    /**
     * Enable to grant superuser access to the edb_admin role.
     */
    superuserAccess?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.ClusterTimeouts>;
    /**
     * Transparent Data Encryption (TDE) key
     */
    transparentDataEncryption?: pulumi.Input<inputs.ClusterTransparentDataEncryption>;
    /**
     * Enable to take a snapshot of the volume.
     */
    volumeSnapshotBackup?: pulumi.Input<boolean>;
}
