// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BmcInstance extends pulumi.CustomResource {
    /**
     * Get an existing BmcInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BmcInstanceState, opts?: pulumi.CustomResourceOptions): BmcInstance {
        return new BmcInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zenlayercloud:index/bmcInstance:BmcInstance';

    /**
     * Returns true if the given object is an instance of BmcInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BmcInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BmcInstance.__pulumiType;
    }

    /**
     * The ID of zone that the bmc instance locates at.
     */
    public readonly availabilityZone!: pulumi.Output<string>;
    /**
     * Create time of the instance.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Expired time of the instance.
     */
    public /*out*/ readonly expiredTime!: pulumi.Output<string>;
    /**
     * Indicate whether to force delete the instance. Default is `false`. If set true, the instance will be permanently deleted
     * instead of being moved into the recycle bin.
     */
    public readonly forceDelete!: pulumi.Output<boolean | undefined>;
    public readonly hostname!: pulumi.Output<string | undefined>;
    /**
     * The image to use for the instance. Changing `image_id` will cause the instance reset.
     */
    public readonly imageId!: pulumi.Output<string | undefined>;
    /**
     * The image name to use for the instance.
     */
    public /*out*/ readonly imageName!: pulumi.Output<string>;
    /**
     * The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to
     * `PREPAID`.
     */
    public readonly instanceChargePrepaidPeriod!: pulumi.Output<number | undefined>;
    /**
     * The charge type of instance. Valid values are `PREPAID`, `POSTPAID`. The default is `POSTPAID`. Note: `PREPAID` instance
     * may not allow to delete before expired.
     */
    public readonly instanceChargeType!: pulumi.Output<string | undefined>;
    public readonly instanceName!: pulumi.Output<string | undefined>;
    /**
     * Current status of the instance.
     */
    public /*out*/ readonly instanceStatus!: pulumi.Output<string>;
    /**
     * The type of the instance.
     */
    public readonly instanceTypeId!: pulumi.Output<string>;
    /**
     * Internet charge type of the instance, Valid values are `ByBandwidth`, `ByTrafficPackage`, `ByInstanceBandwidth95` and
     * `ByClusterBandwidth95`. This value currently not support to change.
     */
    public readonly internetChargeType!: pulumi.Output<string>;
    /**
     * Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second).
     */
    public readonly internetMaxBandwidthOut!: pulumi.Output<number>;
    /**
     * The lan name of the nic. The lan name should be a combination of 4 to 10 characters comprised of letters (case
     * insensitive), numbers. The lan name must start with letter. Modifying will cause the instance reset.
     */
    public readonly nicLanName!: pulumi.Output<string>;
    /**
     * The wan name of the nic. The wan name should be a combination of 4 to 10 characters comprised of letters (case
     * insensitive), numbers. The wan name must start with letter. Modifying will cause the instance reset.
     */
    public readonly nicWanName!: pulumi.Output<string>;
    /**
     * Partition for the instance. Modifying will cause the instance reset.
     */
    public readonly partitions!: pulumi.Output<outputs.BmcInstancePartition[] | undefined>;
    /**
     * Password for the instance. The max length of password is 16. Modifying will cause the instance reset.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Primary Ipv4 address of the instance.
     */
    public /*out*/ readonly primaryIpv4Address!: pulumi.Output<string>;
    /**
     * Private Ip addresses of the instance.
     */
    public /*out*/ readonly privateIpAddresses!: pulumi.Output<string[]>;
    /**
     * Public Ipv4 addresses bind to the instance.
     */
    public /*out*/ readonly publicIpv4Addresses!: pulumi.Output<string[]>;
    /**
     * Public Ipv6 addresses of the instance.
     */
    public /*out*/ readonly publicIpv6Addresses!: pulumi.Output<string[]>;
    /**
     * Custom config for instance raid. Modifying will cause the instance reset.
     */
    public readonly raidConfigCustoms!: pulumi.Output<outputs.BmcInstanceRaidConfigCustom[] | undefined>;
    /**
     * Simple config for instance raid. Modifying will cause the instance reset.
     */
    public readonly raidConfigType!: pulumi.Output<string | undefined>;
    /**
     * The resource group id the instance belongs to, default to Default Resource Group.
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * The resource group name the instance belongs to, default to Default Resource Group.
     */
    public /*out*/ readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The ssh keys to use for the instance. The max number of ssh keys is 5. Modifying will cause the instance reset.
     */
    public readonly sshKeys!: pulumi.Output<string[] | undefined>;
    /**
     * The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
     */
    public readonly subnetId!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.BmcInstanceTimeouts | undefined>;
    /**
     * Traffic package size. Only valid when the charge type of instance is `ByTrafficPackage` and the instance charge type is
     * `PREPAID`.
     */
    public readonly trafficPackageSize!: pulumi.Output<number | undefined>;

    /**
     * Create a BmcInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BmcInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BmcInstanceArgs | BmcInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BmcInstanceState | undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["expiredTime"] = state ? state.expiredTime : undefined;
            resourceInputs["forceDelete"] = state ? state.forceDelete : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["imageName"] = state ? state.imageName : undefined;
            resourceInputs["instanceChargePrepaidPeriod"] = state ? state.instanceChargePrepaidPeriod : undefined;
            resourceInputs["instanceChargeType"] = state ? state.instanceChargeType : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["instanceStatus"] = state ? state.instanceStatus : undefined;
            resourceInputs["instanceTypeId"] = state ? state.instanceTypeId : undefined;
            resourceInputs["internetChargeType"] = state ? state.internetChargeType : undefined;
            resourceInputs["internetMaxBandwidthOut"] = state ? state.internetMaxBandwidthOut : undefined;
            resourceInputs["nicLanName"] = state ? state.nicLanName : undefined;
            resourceInputs["nicWanName"] = state ? state.nicWanName : undefined;
            resourceInputs["partitions"] = state ? state.partitions : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["primaryIpv4Address"] = state ? state.primaryIpv4Address : undefined;
            resourceInputs["privateIpAddresses"] = state ? state.privateIpAddresses : undefined;
            resourceInputs["publicIpv4Addresses"] = state ? state.publicIpv4Addresses : undefined;
            resourceInputs["publicIpv6Addresses"] = state ? state.publicIpv6Addresses : undefined;
            resourceInputs["raidConfigCustoms"] = state ? state.raidConfigCustoms : undefined;
            resourceInputs["raidConfigType"] = state ? state.raidConfigType : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["sshKeys"] = state ? state.sshKeys : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["trafficPackageSize"] = state ? state.trafficPackageSize : undefined;
        } else {
            const args = argsOrState as BmcInstanceArgs | undefined;
            if ((!args || args.availabilityZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityZone'");
            }
            if ((!args || args.instanceTypeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceTypeId'");
            }
            if ((!args || args.internetChargeType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'internetChargeType'");
            }
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["forceDelete"] = args ? args.forceDelete : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["instanceChargePrepaidPeriod"] = args ? args.instanceChargePrepaidPeriod : undefined;
            resourceInputs["instanceChargeType"] = args ? args.instanceChargeType : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["instanceTypeId"] = args ? args.instanceTypeId : undefined;
            resourceInputs["internetChargeType"] = args ? args.internetChargeType : undefined;
            resourceInputs["internetMaxBandwidthOut"] = args ? args.internetMaxBandwidthOut : undefined;
            resourceInputs["nicLanName"] = args ? args.nicLanName : undefined;
            resourceInputs["nicWanName"] = args ? args.nicWanName : undefined;
            resourceInputs["partitions"] = args ? args.partitions : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["raidConfigCustoms"] = args ? args.raidConfigCustoms : undefined;
            resourceInputs["raidConfigType"] = args ? args.raidConfigType : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["sshKeys"] = args ? args.sshKeys : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["trafficPackageSize"] = args ? args.trafficPackageSize : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["expiredTime"] = undefined /*out*/;
            resourceInputs["imageName"] = undefined /*out*/;
            resourceInputs["instanceStatus"] = undefined /*out*/;
            resourceInputs["primaryIpv4Address"] = undefined /*out*/;
            resourceInputs["privateIpAddresses"] = undefined /*out*/;
            resourceInputs["publicIpv4Addresses"] = undefined /*out*/;
            resourceInputs["publicIpv6Addresses"] = undefined /*out*/;
            resourceInputs["resourceGroupName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(BmcInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BmcInstance resources.
 */
export interface BmcInstanceState {
    /**
     * The ID of zone that the bmc instance locates at.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * Create time of the instance.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Expired time of the instance.
     */
    expiredTime?: pulumi.Input<string>;
    /**
     * Indicate whether to force delete the instance. Default is `false`. If set true, the instance will be permanently deleted
     * instead of being moved into the recycle bin.
     */
    forceDelete?: pulumi.Input<boolean>;
    hostname?: pulumi.Input<string>;
    /**
     * The image to use for the instance. Changing `image_id` will cause the instance reset.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The image name to use for the instance.
     */
    imageName?: pulumi.Input<string>;
    /**
     * The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to
     * `PREPAID`.
     */
    instanceChargePrepaidPeriod?: pulumi.Input<number>;
    /**
     * The charge type of instance. Valid values are `PREPAID`, `POSTPAID`. The default is `POSTPAID`. Note: `PREPAID` instance
     * may not allow to delete before expired.
     */
    instanceChargeType?: pulumi.Input<string>;
    instanceName?: pulumi.Input<string>;
    /**
     * Current status of the instance.
     */
    instanceStatus?: pulumi.Input<string>;
    /**
     * The type of the instance.
     */
    instanceTypeId?: pulumi.Input<string>;
    /**
     * Internet charge type of the instance, Valid values are `ByBandwidth`, `ByTrafficPackage`, `ByInstanceBandwidth95` and
     * `ByClusterBandwidth95`. This value currently not support to change.
     */
    internetChargeType?: pulumi.Input<string>;
    /**
     * Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second).
     */
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * The lan name of the nic. The lan name should be a combination of 4 to 10 characters comprised of letters (case
     * insensitive), numbers. The lan name must start with letter. Modifying will cause the instance reset.
     */
    nicLanName?: pulumi.Input<string>;
    /**
     * The wan name of the nic. The wan name should be a combination of 4 to 10 characters comprised of letters (case
     * insensitive), numbers. The wan name must start with letter. Modifying will cause the instance reset.
     */
    nicWanName?: pulumi.Input<string>;
    /**
     * Partition for the instance. Modifying will cause the instance reset.
     */
    partitions?: pulumi.Input<pulumi.Input<inputs.BmcInstancePartition>[]>;
    /**
     * Password for the instance. The max length of password is 16. Modifying will cause the instance reset.
     */
    password?: pulumi.Input<string>;
    /**
     * Primary Ipv4 address of the instance.
     */
    primaryIpv4Address?: pulumi.Input<string>;
    /**
     * Private Ip addresses of the instance.
     */
    privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Public Ipv4 addresses bind to the instance.
     */
    publicIpv4Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Public Ipv6 addresses of the instance.
     */
    publicIpv6Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Custom config for instance raid. Modifying will cause the instance reset.
     */
    raidConfigCustoms?: pulumi.Input<pulumi.Input<inputs.BmcInstanceRaidConfigCustom>[]>;
    /**
     * Simple config for instance raid. Modifying will cause the instance reset.
     */
    raidConfigType?: pulumi.Input<string>;
    /**
     * The resource group id the instance belongs to, default to Default Resource Group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The resource group name the instance belongs to, default to Default Resource Group.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The ssh keys to use for the instance. The max number of ssh keys is 5. Modifying will cause the instance reset.
     */
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
     */
    subnetId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.BmcInstanceTimeouts>;
    /**
     * Traffic package size. Only valid when the charge type of instance is `ByTrafficPackage` and the instance charge type is
     * `PREPAID`.
     */
    trafficPackageSize?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a BmcInstance resource.
 */
export interface BmcInstanceArgs {
    /**
     * The ID of zone that the bmc instance locates at.
     */
    availabilityZone: pulumi.Input<string>;
    /**
     * Indicate whether to force delete the instance. Default is `false`. If set true, the instance will be permanently deleted
     * instead of being moved into the recycle bin.
     */
    forceDelete?: pulumi.Input<boolean>;
    hostname?: pulumi.Input<string>;
    /**
     * The image to use for the instance. Changing `image_id` will cause the instance reset.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The tenancy (time unit is month) of the prepaid instance, NOTE: it only works when instance_charge_type is set to
     * `PREPAID`.
     */
    instanceChargePrepaidPeriod?: pulumi.Input<number>;
    /**
     * The charge type of instance. Valid values are `PREPAID`, `POSTPAID`. The default is `POSTPAID`. Note: `PREPAID` instance
     * may not allow to delete before expired.
     */
    instanceChargeType?: pulumi.Input<string>;
    instanceName?: pulumi.Input<string>;
    /**
     * The type of the instance.
     */
    instanceTypeId: pulumi.Input<string>;
    /**
     * Internet charge type of the instance, Valid values are `ByBandwidth`, `ByTrafficPackage`, `ByInstanceBandwidth95` and
     * `ByClusterBandwidth95`. This value currently not support to change.
     */
    internetChargeType: pulumi.Input<string>;
    /**
     * Maximum outgoing bandwidth to the public network, measured in Mbps (Mega bits per second).
     */
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * The lan name of the nic. The lan name should be a combination of 4 to 10 characters comprised of letters (case
     * insensitive), numbers. The lan name must start with letter. Modifying will cause the instance reset.
     */
    nicLanName?: pulumi.Input<string>;
    /**
     * The wan name of the nic. The wan name should be a combination of 4 to 10 characters comprised of letters (case
     * insensitive), numbers. The wan name must start with letter. Modifying will cause the instance reset.
     */
    nicWanName?: pulumi.Input<string>;
    /**
     * Partition for the instance. Modifying will cause the instance reset.
     */
    partitions?: pulumi.Input<pulumi.Input<inputs.BmcInstancePartition>[]>;
    /**
     * Password for the instance. The max length of password is 16. Modifying will cause the instance reset.
     */
    password?: pulumi.Input<string>;
    /**
     * Custom config for instance raid. Modifying will cause the instance reset.
     */
    raidConfigCustoms?: pulumi.Input<pulumi.Input<inputs.BmcInstanceRaidConfigCustom>[]>;
    /**
     * Simple config for instance raid. Modifying will cause the instance reset.
     */
    raidConfigType?: pulumi.Input<string>;
    /**
     * The resource group id the instance belongs to, default to Default Resource Group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The ssh keys to use for the instance. The max number of ssh keys is 5. Modifying will cause the instance reset.
     */
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of a VPC subnet. If you want to create instances in a VPC network, this parameter must be set.
     */
    subnetId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.BmcInstanceTimeouts>;
    /**
     * Traffic package size. Only valid when the charge type of instance is `ByTrafficPackage` and the instance charge type is
     * `PREPAID`.
     */
    trafficPackageSize?: pulumi.Input<number>;
}
