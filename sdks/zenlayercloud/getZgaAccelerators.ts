// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getZgaAccelerators(args?: GetZgaAcceleratorsArgs, opts?: pulumi.InvokeOptions): Promise<GetZgaAcceleratorsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zenlayercloud:index/getZgaAccelerators:getZgaAccelerators", {
        "accelerateRegionId": args.accelerateRegionId,
        "acceleratorIds": args.acceleratorIds,
        "acceleratorName": args.acceleratorName,
        "acceleratorStatus": args.acceleratorStatus,
        "cname": args.cname,
        "domain": args.domain,
        "id": args.id,
        "origin": args.origin,
        "originRegionId": args.originRegionId,
        "resourceGroupId": args.resourceGroupId,
        "resultOutputFile": args.resultOutputFile,
        "vip": args.vip,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getZgaAccelerators.
 */
export interface GetZgaAcceleratorsArgs {
    accelerateRegionId?: string;
    acceleratorIds?: string[];
    acceleratorName?: string;
    acceleratorStatus?: string;
    cname?: string;
    domain?: string;
    id?: string;
    origin?: string;
    originRegionId?: string;
    resourceGroupId?: string;
    resultOutputFile?: string;
    vip?: string;
}

/**
 * A collection of values returned by getZgaAccelerators.
 */
export interface GetZgaAcceleratorsResult {
    readonly accelerateRegionId?: string;
    readonly acceleratorIds?: string[];
    readonly acceleratorName?: string;
    readonly acceleratorStatus?: string;
    readonly accelerators: outputs.GetZgaAcceleratorsAccelerator[];
    readonly cname?: string;
    readonly domain?: string;
    readonly id: string;
    readonly origin?: string;
    readonly originRegionId?: string;
    readonly resourceGroupId?: string;
    readonly resultOutputFile?: string;
    readonly vip?: string;
}
export function getZgaAcceleratorsOutput(args?: GetZgaAcceleratorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZgaAcceleratorsResult> {
    return pulumi.output(args).apply((a: any) => getZgaAccelerators(a, opts))
}

/**
 * A collection of arguments for invoking getZgaAccelerators.
 */
export interface GetZgaAcceleratorsOutputArgs {
    accelerateRegionId?: pulumi.Input<string>;
    acceleratorIds?: pulumi.Input<pulumi.Input<string>[]>;
    acceleratorName?: pulumi.Input<string>;
    acceleratorStatus?: pulumi.Input<string>;
    cname?: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    origin?: pulumi.Input<string>;
    originRegionId?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    vip?: pulumi.Input<string>;
}
