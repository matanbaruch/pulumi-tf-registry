// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBmcImages(args?: GetBmcImagesArgs, opts?: pulumi.InvokeOptions): Promise<GetBmcImagesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zenlayercloud:index/getBmcImages:getBmcImages", {
        "catalog": args.catalog,
        "id": args.id,
        "imageId": args.imageId,
        "imageName": args.imageName,
        "imageType": args.imageType,
        "instanceTypeId": args.instanceTypeId,
        "osType": args.osType,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBmcImages.
 */
export interface GetBmcImagesArgs {
    catalog?: string;
    id?: string;
    imageId?: string;
    imageName?: string;
    imageType?: string;
    instanceTypeId?: string;
    osType?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getBmcImages.
 */
export interface GetBmcImagesResult {
    readonly catalog?: string;
    readonly id: string;
    readonly imageId?: string;
    readonly imageName?: string;
    readonly imageType?: string;
    readonly images: outputs.GetBmcImagesImage[];
    readonly instanceTypeId?: string;
    readonly osType?: string;
    readonly resultOutputFile?: string;
}
export function getBmcImagesOutput(args?: GetBmcImagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBmcImagesResult> {
    return pulumi.output(args).apply((a: any) => getBmcImages(a, opts))
}

/**
 * A collection of arguments for invoking getBmcImages.
 */
export interface GetBmcImagesOutputArgs {
    catalog?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    imageName?: pulumi.Input<string>;
    imageType?: pulumi.Input<string>;
    instanceTypeId?: pulumi.Input<string>;
    osType?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
