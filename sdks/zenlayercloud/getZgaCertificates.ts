// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getZgaCertificates(args?: GetZgaCertificatesArgs, opts?: pulumi.InvokeOptions): Promise<GetZgaCertificatesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zenlayercloud:index/getZgaCertificates:getZgaCertificates", {
        "certificateIds": args.certificateIds,
        "certificateLabel": args.certificateLabel,
        "dnsName": args.dnsName,
        "expired": args.expired,
        "id": args.id,
        "resourceGroupId": args.resourceGroupId,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getZgaCertificates.
 */
export interface GetZgaCertificatesArgs {
    certificateIds?: string[];
    certificateLabel?: string;
    dnsName?: string;
    expired?: boolean;
    id?: string;
    resourceGroupId?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getZgaCertificates.
 */
export interface GetZgaCertificatesResult {
    readonly certificateIds?: string[];
    readonly certificateLabel?: string;
    readonly certificates: outputs.GetZgaCertificatesCertificate[];
    readonly dnsName?: string;
    readonly expired?: boolean;
    readonly id: string;
    readonly resourceGroupId?: string;
    readonly resultOutputFile?: string;
}
export function getZgaCertificatesOutput(args?: GetZgaCertificatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZgaCertificatesResult> {
    return pulumi.output(args).apply((a: any) => getZgaCertificates(a, opts))
}

/**
 * A collection of arguments for invoking getZgaCertificates.
 */
export interface GetZgaCertificatesOutputArgs {
    certificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    certificateLabel?: pulumi.Input<string>;
    dnsName?: pulumi.Input<string>;
    expired?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
