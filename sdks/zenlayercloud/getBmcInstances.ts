// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBmcInstances(args?: GetBmcInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetBmcInstancesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zenlayercloud:index/getBmcInstances:getBmcInstances", {
        "availabilityZone": args.availabilityZone,
        "hostname": args.hostname,
        "id": args.id,
        "imageId": args.imageId,
        "instanceIds": args.instanceIds,
        "instanceName": args.instanceName,
        "instanceStatus": args.instanceStatus,
        "instanceTypeId": args.instanceTypeId,
        "privateIpv4": args.privateIpv4,
        "publicIpv4": args.publicIpv4,
        "resourceGroupId": args.resourceGroupId,
        "resultOutputFile": args.resultOutputFile,
        "subnetId": args.subnetId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBmcInstances.
 */
export interface GetBmcInstancesArgs {
    availabilityZone?: string;
    hostname?: string;
    id?: string;
    imageId?: string;
    instanceIds?: string[];
    instanceName?: string;
    instanceStatus?: string;
    instanceTypeId?: string;
    privateIpv4?: string;
    publicIpv4?: string;
    resourceGroupId?: string;
    resultOutputFile?: string;
    subnetId?: string;
}

/**
 * A collection of values returned by getBmcInstances.
 */
export interface GetBmcInstancesResult {
    readonly availabilityZone?: string;
    readonly hostname?: string;
    readonly id: string;
    readonly imageId?: string;
    readonly instanceIds?: string[];
    readonly instanceLists: outputs.GetBmcInstancesInstanceList[];
    readonly instanceName?: string;
    readonly instanceStatus?: string;
    readonly instanceTypeId?: string;
    readonly privateIpv4?: string;
    readonly publicIpv4?: string;
    readonly resourceGroupId?: string;
    readonly resultOutputFile?: string;
    readonly subnetId?: string;
}
export function getBmcInstancesOutput(args?: GetBmcInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBmcInstancesResult> {
    return pulumi.output(args).apply((a: any) => getBmcInstances(a, opts))
}

/**
 * A collection of arguments for invoking getBmcInstances.
 */
export interface GetBmcInstancesOutputArgs {
    availabilityZone?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    instanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    instanceName?: pulumi.Input<string>;
    instanceStatus?: pulumi.Input<string>;
    instanceTypeId?: pulumi.Input<string>;
    privateIpv4?: pulumi.Input<string>;
    publicIpv4?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}
