// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ZgaAccelerator extends pulumi.CustomResource {
    /**
     * Get an existing ZgaAccelerator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZgaAcceleratorState, opts?: pulumi.CustomResourceOptions): ZgaAccelerator {
        return new ZgaAccelerator(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zenlayercloud:index/zgaAccelerator:ZgaAccelerator';

    /**
     * Returns true if the given object is an instance of ZgaAccelerator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZgaAccelerator {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZgaAccelerator.__pulumiType;
    }

    /**
     * Accelerate region of the accelerator.
     */
    public readonly accelerateRegions!: pulumi.Output<outputs.ZgaAcceleratorAccelerateRegion[]>;
    /**
     * The name of accelerator. The max length of accelerator name is 64.
     */
    public readonly acceleratorName!: pulumi.Output<string>;
    /**
     * Status of the accelerator. Values are `Accelerating`, `NotAccelerate`, `Deploying`, `StopAccelerate`,
     * `AccelerateFailure`.
     */
    public /*out*/ readonly acceleratorStatus!: pulumi.Output<string>;
    /**
     * Access control of the accelerator.
     */
    public readonly accessControl!: pulumi.Output<outputs.ZgaAcceleratorAccessControl | undefined>;
    /**
     * Backup endpoint of the origin. Backup orgin only be configured when origin configured with IP. Only one back endpoint is
     * allowed to be configured, when the back endpoint is CNAME.
     */
    public readonly backupOrigins!: pulumi.Output<string[] | undefined>;
    /**
     * The certificate of the accelerator. Required when exist https protocol accelerate.
     */
    public readonly certificateId!: pulumi.Output<string | undefined>;
    /**
     * The charge type of the accelerator. The default charge type of the account will be used. Modification is not supported.
     * Valid values are `ByTrafficPackage`, `ByBandwidth95`, `ByBandwidth`, `ByTraffic`.
     */
    public readonly chargeType!: pulumi.Output<string>;
    /**
     * Cname of the accelerator.
     */
    public /*out*/ readonly cname!: pulumi.Output<string>;
    /**
     * Main domain of the accelerator. Required when L7 http or https accelerate, globally unique and no duplication is
     * allowed. Supports generic domain names, like: *.zenlayer.com.
     */
    public readonly domain!: pulumi.Output<string | undefined>;
    /**
     * Health check of the accelerator.
     */
    public readonly healthCheck!: pulumi.Output<outputs.ZgaAcceleratorHealthCheck | undefined>;
    /**
     * L4 listeners of the accelerator.
     */
    public readonly l4Listeners!: pulumi.Output<outputs.ZgaAcceleratorL4Listener[] | undefined>;
    /**
     * L7 listeners of the accelerator.
     */
    public readonly l7Listeners!: pulumi.Output<outputs.ZgaAcceleratorL7Listener[] | undefined>;
    /**
     * ID of the orgin region. Modification is not supported.
     */
    public readonly originRegionId!: pulumi.Output<string>;
    /**
     * Endpoints of the origin. Only one endpoint is allowed to be configured, when the endpoint is CNAME.
     */
    public readonly origins!: pulumi.Output<string[]>;
    /**
     * Protocol opts of the accelerator.
     */
    public readonly protocolOpts!: pulumi.Output<outputs.ZgaAcceleratorProtocolOpts | undefined>;
    /**
     * Relate domains of the accelerator. Globally unique and no duplication is allowed. The max length of relate domains is
     * 10.
     */
    public readonly relateDomains!: pulumi.Output<string[] | undefined>;
    /**
     * The resource group id the accelerator belongs to, default to Default Resource Group. Modification is not supported.
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ZgaAcceleratorTimeouts | undefined>;

    /**
     * Create a ZgaAccelerator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZgaAcceleratorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZgaAcceleratorArgs | ZgaAcceleratorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZgaAcceleratorState | undefined;
            resourceInputs["accelerateRegions"] = state ? state.accelerateRegions : undefined;
            resourceInputs["acceleratorName"] = state ? state.acceleratorName : undefined;
            resourceInputs["acceleratorStatus"] = state ? state.acceleratorStatus : undefined;
            resourceInputs["accessControl"] = state ? state.accessControl : undefined;
            resourceInputs["backupOrigins"] = state ? state.backupOrigins : undefined;
            resourceInputs["certificateId"] = state ? state.certificateId : undefined;
            resourceInputs["chargeType"] = state ? state.chargeType : undefined;
            resourceInputs["cname"] = state ? state.cname : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["healthCheck"] = state ? state.healthCheck : undefined;
            resourceInputs["l4Listeners"] = state ? state.l4Listeners : undefined;
            resourceInputs["l7Listeners"] = state ? state.l7Listeners : undefined;
            resourceInputs["originRegionId"] = state ? state.originRegionId : undefined;
            resourceInputs["origins"] = state ? state.origins : undefined;
            resourceInputs["protocolOpts"] = state ? state.protocolOpts : undefined;
            resourceInputs["relateDomains"] = state ? state.relateDomains : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ZgaAcceleratorArgs | undefined;
            if ((!args || args.accelerateRegions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accelerateRegions'");
            }
            if ((!args || args.originRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'originRegionId'");
            }
            if ((!args || args.origins === undefined) && !opts.urn) {
                throw new Error("Missing required property 'origins'");
            }
            resourceInputs["accelerateRegions"] = args ? args.accelerateRegions : undefined;
            resourceInputs["acceleratorName"] = args ? args.acceleratorName : undefined;
            resourceInputs["accessControl"] = args ? args.accessControl : undefined;
            resourceInputs["backupOrigins"] = args ? args.backupOrigins : undefined;
            resourceInputs["certificateId"] = args ? args.certificateId : undefined;
            resourceInputs["chargeType"] = args ? args.chargeType : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["healthCheck"] = args ? args.healthCheck : undefined;
            resourceInputs["l4Listeners"] = args ? args.l4Listeners : undefined;
            resourceInputs["l7Listeners"] = args ? args.l7Listeners : undefined;
            resourceInputs["originRegionId"] = args ? args.originRegionId : undefined;
            resourceInputs["origins"] = args ? args.origins : undefined;
            resourceInputs["protocolOpts"] = args ? args.protocolOpts : undefined;
            resourceInputs["relateDomains"] = args ? args.relateDomains : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["acceleratorStatus"] = undefined /*out*/;
            resourceInputs["cname"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZgaAccelerator.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ZgaAccelerator resources.
 */
export interface ZgaAcceleratorState {
    /**
     * Accelerate region of the accelerator.
     */
    accelerateRegions?: pulumi.Input<pulumi.Input<inputs.ZgaAcceleratorAccelerateRegion>[]>;
    /**
     * The name of accelerator. The max length of accelerator name is 64.
     */
    acceleratorName?: pulumi.Input<string>;
    /**
     * Status of the accelerator. Values are `Accelerating`, `NotAccelerate`, `Deploying`, `StopAccelerate`,
     * `AccelerateFailure`.
     */
    acceleratorStatus?: pulumi.Input<string>;
    /**
     * Access control of the accelerator.
     */
    accessControl?: pulumi.Input<inputs.ZgaAcceleratorAccessControl>;
    /**
     * Backup endpoint of the origin. Backup orgin only be configured when origin configured with IP. Only one back endpoint is
     * allowed to be configured, when the back endpoint is CNAME.
     */
    backupOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The certificate of the accelerator. Required when exist https protocol accelerate.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * The charge type of the accelerator. The default charge type of the account will be used. Modification is not supported.
     * Valid values are `ByTrafficPackage`, `ByBandwidth95`, `ByBandwidth`, `ByTraffic`.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * Cname of the accelerator.
     */
    cname?: pulumi.Input<string>;
    /**
     * Main domain of the accelerator. Required when L7 http or https accelerate, globally unique and no duplication is
     * allowed. Supports generic domain names, like: *.zenlayer.com.
     */
    domain?: pulumi.Input<string>;
    /**
     * Health check of the accelerator.
     */
    healthCheck?: pulumi.Input<inputs.ZgaAcceleratorHealthCheck>;
    /**
     * L4 listeners of the accelerator.
     */
    l4Listeners?: pulumi.Input<pulumi.Input<inputs.ZgaAcceleratorL4Listener>[]>;
    /**
     * L7 listeners of the accelerator.
     */
    l7Listeners?: pulumi.Input<pulumi.Input<inputs.ZgaAcceleratorL7Listener>[]>;
    /**
     * ID of the orgin region. Modification is not supported.
     */
    originRegionId?: pulumi.Input<string>;
    /**
     * Endpoints of the origin. Only one endpoint is allowed to be configured, when the endpoint is CNAME.
     */
    origins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Protocol opts of the accelerator.
     */
    protocolOpts?: pulumi.Input<inputs.ZgaAcceleratorProtocolOpts>;
    /**
     * Relate domains of the accelerator. Globally unique and no duplication is allowed. The max length of relate domains is
     * 10.
     */
    relateDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource group id the accelerator belongs to, default to Default Resource Group. Modification is not supported.
     */
    resourceGroupId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ZgaAcceleratorTimeouts>;
}

/**
 * The set of arguments for constructing a ZgaAccelerator resource.
 */
export interface ZgaAcceleratorArgs {
    /**
     * Accelerate region of the accelerator.
     */
    accelerateRegions: pulumi.Input<pulumi.Input<inputs.ZgaAcceleratorAccelerateRegion>[]>;
    /**
     * The name of accelerator. The max length of accelerator name is 64.
     */
    acceleratorName?: pulumi.Input<string>;
    /**
     * Access control of the accelerator.
     */
    accessControl?: pulumi.Input<inputs.ZgaAcceleratorAccessControl>;
    /**
     * Backup endpoint of the origin. Backup orgin only be configured when origin configured with IP. Only one back endpoint is
     * allowed to be configured, when the back endpoint is CNAME.
     */
    backupOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The certificate of the accelerator. Required when exist https protocol accelerate.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * The charge type of the accelerator. The default charge type of the account will be used. Modification is not supported.
     * Valid values are `ByTrafficPackage`, `ByBandwidth95`, `ByBandwidth`, `ByTraffic`.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * Main domain of the accelerator. Required when L7 http or https accelerate, globally unique and no duplication is
     * allowed. Supports generic domain names, like: *.zenlayer.com.
     */
    domain?: pulumi.Input<string>;
    /**
     * Health check of the accelerator.
     */
    healthCheck?: pulumi.Input<inputs.ZgaAcceleratorHealthCheck>;
    /**
     * L4 listeners of the accelerator.
     */
    l4Listeners?: pulumi.Input<pulumi.Input<inputs.ZgaAcceleratorL4Listener>[]>;
    /**
     * L7 listeners of the accelerator.
     */
    l7Listeners?: pulumi.Input<pulumi.Input<inputs.ZgaAcceleratorL7Listener>[]>;
    /**
     * ID of the orgin region. Modification is not supported.
     */
    originRegionId: pulumi.Input<string>;
    /**
     * Endpoints of the origin. Only one endpoint is allowed to be configured, when the endpoint is CNAME.
     */
    origins: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Protocol opts of the accelerator.
     */
    protocolOpts?: pulumi.Input<inputs.ZgaAcceleratorProtocolOpts>;
    /**
     * Relate domains of the accelerator. Globally unique and no duplication is allowed. The max length of relate domains is
     * 10.
     */
    relateDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource group id the accelerator belongs to, default to Default Resource Group. Modification is not supported.
     */
    resourceGroupId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ZgaAcceleratorTimeouts>;
}
