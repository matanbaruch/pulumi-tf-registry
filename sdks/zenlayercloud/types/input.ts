// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface BmcInstancePartition {
    /**
     * The drive letter(windows) or device name(linux) for the partition.
     */
    fsPath: pulumi.Input<string>;
    /**
     * The type of the partitioned file.
     */
    fsType: pulumi.Input<string>;
    /**
     * The size of the partitioned disk.
     */
    size: pulumi.Input<number>;
}

export interface BmcInstanceRaidConfigCustom {
    /**
     * The sequence of disk to make raid.
     */
    diskSequences: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Simple config for raid.
     */
    raidType: pulumi.Input<string>;
}

export interface BmcInstanceTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface InstanceTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SdnPrivateConnectEndpoint {
    /**
     * The account of public cloud access point. If cloud type is GOOGLE, the value is google pairing key. This value is available only when `endpoint_type` within cloud type (AWS, GOOGLE and TENCENT).
     */
    cloudAccount?: pulumi.Input<string>;
    /**
     * Region of cloud access point. This value is available only when `endpoint_type` within cloud type (AWS, GOOGLE and TENCENT).
     */
    cloudRegion?: pulumi.Input<string>;
    /**
     * Network connectivity state. ACTIVE means the network is connected. DOWN which means not connected.
     */
    connectivityStatus?: pulumi.Input<string>;
    /**
     * The ID of data center.
     */
    datacenter?: pulumi.Input<string>;
    /**
     * The name of the access point.
     */
    endpointName?: pulumi.Input<string>;
    /**
     * The type of the access point, Valid values: PORT,AWS,TENCENT and GOOGLE.
     */
    endpointType: pulumi.Input<string>;
    /**
     * The ID of the port. This value is required when `endpoint_type` is `PORT`.
     */
    portId?: pulumi.Input<string>;
    /**
     * VLAN ID of the access point. Value range: from 1 to 4096.
     */
    vlanId?: pulumi.Input<number>;
}

export interface ZgaAcceleratorAccelerateRegion {
    /**
     * ID of the accelerate region.
     */
    accelerateRegionId: pulumi.Input<string>;
    /**
     * Bandwidth limit of the accelerate region. Exceeding the account speed limit is not allowed. Unit: Mbps.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * Virtual IP the accelerate region. Modification is not supported.
     */
    vip?: pulumi.Input<string>;
}

export interface ZgaAcceleratorAccessControl {
    /**
     * Whether to enable access control. Default is `false`.
     */
    enable: pulumi.Input<boolean>;
    /**
     * Rules of the access control.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.ZgaAcceleratorAccessControlRule>[]>;
}

export interface ZgaAcceleratorAccessControlRule {
    /**
     * The cidr ip of the rule.
     */
    cidrIps: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The directory of the rule. Not configurable with L4 listener. Default is `/`. Wildcards supported: *.
     */
    directory?: pulumi.Input<string>;
    /**
     * The listener of the rule. Valid values are `$protocol:$port`, `$protocol:$portRange`, `all`.
     */
    listener: pulumi.Input<string>;
    /**
     * The note of the rule.
     */
    note?: pulumi.Input<string>;
    /**
     * The policy of the rule. Valid values are `accept`, `deny`.
     */
    policy: pulumi.Input<string>;
}

export interface ZgaAcceleratorHealthCheck {
    /**
     * Whether to enable alarm. Default is `false`.
     */
    alarm?: pulumi.Input<boolean>;
    /**
     * Whether to enable health check. If the enable is `false`, the alarm will be set to `false` and the port will be cleared.
     */
    enable: pulumi.Input<boolean>;
    /**
     * The port of health check.
     */
    port?: pulumi.Input<number>;
}

export interface ZgaAcceleratorL4Listener {
    /**
     * The Return-to-origin port of the l4 listener.
     */
    backPort?: pulumi.Input<number>;
    /**
     * The Return-to-origin port range of the l4 listener. Use a slash (/) to separate the starting and ending ports, like: 1/200.
     */
    backPortRange?: pulumi.Input<string>;
    /**
     * The port of the l4 listener. Only port or portRange can be configured, and duplicate ports are not allowed.
     */
    port?: pulumi.Input<number>;
    /**
     * The port range of the l4 listener. Only port or portRange can be configured. Use a slash (/) to separate the starting and ending ports, like: 1/200. The max range: 300.
     */
    portRange?: pulumi.Input<string>;
    /**
     * The protocol of the l4 listener. Valid values: `tcp`, `udp`.
     */
    protocol: pulumi.Input<string>;
}

export interface ZgaAcceleratorL7Listener {
    /**
     * The Return-to-origin port of the l7 listener.
     */
    backPort?: pulumi.Input<number>;
    /**
     * The Return-to-origin port range of the l7 listener. Use a slash (/) to separate the starting and ending ports, like: 1/200.
     */
    backPortRange?: pulumi.Input<string>;
    /**
     * The Return-to-origin protocol of the l7 listener. Valid values: http and https. The default is equal to protocol.
     */
    backProtocol: pulumi.Input<string>;
    /**
     * The Return-to-origin host of the l7 listener.
     */
    host?: pulumi.Input<string>;
    /**
     * The port of the l7 listener. Only port or portRange can be configured, and duplicate ports are not allowed.
     */
    port?: pulumi.Input<number>;
    /**
     * The port range of the l7 listener. Only port or portRange can be configured. Use a slash (/) to separate the starting and ending ports, like: 1/200. The max range: 300.
     */
    portRange?: pulumi.Input<string>;
    /**
     * The protocol of the l4 listener. Valid values: `http`, `https`.
     */
    protocol: pulumi.Input<string>;
}

export interface ZgaAcceleratorProtocolOpts {
    /**
     * Whether to enable gzip. Default is `false`.
     */
    gzip?: pulumi.Input<boolean>;
    /**
     * Whether to enable proxyProtocol. Default is `false`.
     */
    proxyProtocol?: pulumi.Input<boolean>;
    /**
     * Whether to enable TOA. Default is `false`.
     */
    toa?: pulumi.Input<boolean>;
    /**
     * TOA verison. Default is `253`.
     */
    toaValue?: pulumi.Input<number>;
    /**
     * Whether to enable websocket. Default is `false`.
     */
    websocket?: pulumi.Input<boolean>;
}

export interface ZgaAcceleratorTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ZgaCertificateTimeouts {
    create?: pulumi.Input<string>;
}
