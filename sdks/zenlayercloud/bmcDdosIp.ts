// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class BmcDdosIp extends pulumi.CustomResource {
    /**
     * Get an existing BmcDdosIp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BmcDdosIpState, opts?: pulumi.CustomResourceOptions): BmcDdosIp {
        return new BmcDdosIp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zenlayercloud:index/bmcDdosIp:BmcDdosIp';

    /**
     * Returns true if the given object is an instance of BmcDdosIp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BmcDdosIp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BmcDdosIp.__pulumiType;
    }

    /**
     * The ID of zone that the DDoS IP locates at.
     */
    public readonly availabilityZone!: pulumi.Output<string>;
    /**
     * The tenancy (time unit is month) of the prepaid DDoS IP, NOTE: it only works when DDoS charge_type is set to `PREPAID`.
     */
    public readonly chargePrepaidPeriod!: pulumi.Output<number | undefined>;
    /**
     * The charge type of DDoS IP. Valid values are `PREPAID`, `POSTPAID`. The default is `POSTPAID`. Note: `PREPAID` DDoS IP
     * may not allow to delete before expired.
     */
    public readonly chargeType!: pulumi.Output<string | undefined>;
    /**
     * Create time of the DDoS IP.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Expired time of the DDoS IP.
     */
    public /*out*/ readonly expiredTime!: pulumi.Output<string>;
    /**
     * Indicate whether to force delete the DDoS IP. Default is `false`. If set true, the DDoS IP will be permanently deleted
     * instead of being moved into the recycle bin.
     */
    public readonly forceDelete!: pulumi.Output<boolean | undefined>;
    /**
     * Current status of the DDoS IP.
     */
    public /*out*/ readonly ipStatus!: pulumi.Output<string>;
    /**
     * The DDoS IP address.
     */
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    /**
     * The resource group id the DDoS IP belongs to, default to Default Resource Group.
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * The resource group name the DDoS IP belongs to, default to Default Resource Group.
     */
    public /*out*/ readonly resourceGroupName!: pulumi.Output<string>;

    /**
     * Create a BmcDdosIp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BmcDdosIpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BmcDdosIpArgs | BmcDdosIpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BmcDdosIpState | undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["chargePrepaidPeriod"] = state ? state.chargePrepaidPeriod : undefined;
            resourceInputs["chargeType"] = state ? state.chargeType : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["expiredTime"] = state ? state.expiredTime : undefined;
            resourceInputs["forceDelete"] = state ? state.forceDelete : undefined;
            resourceInputs["ipStatus"] = state ? state.ipStatus : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
        } else {
            const args = argsOrState as BmcDdosIpArgs | undefined;
            if ((!args || args.availabilityZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityZone'");
            }
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["chargePrepaidPeriod"] = args ? args.chargePrepaidPeriod : undefined;
            resourceInputs["chargeType"] = args ? args.chargeType : undefined;
            resourceInputs["forceDelete"] = args ? args.forceDelete : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["expiredTime"] = undefined /*out*/;
            resourceInputs["ipStatus"] = undefined /*out*/;
            resourceInputs["publicIp"] = undefined /*out*/;
            resourceInputs["resourceGroupName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BmcDdosIp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BmcDdosIp resources.
 */
export interface BmcDdosIpState {
    /**
     * The ID of zone that the DDoS IP locates at.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * The tenancy (time unit is month) of the prepaid DDoS IP, NOTE: it only works when DDoS charge_type is set to `PREPAID`.
     */
    chargePrepaidPeriod?: pulumi.Input<number>;
    /**
     * The charge type of DDoS IP. Valid values are `PREPAID`, `POSTPAID`. The default is `POSTPAID`. Note: `PREPAID` DDoS IP
     * may not allow to delete before expired.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * Create time of the DDoS IP.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Expired time of the DDoS IP.
     */
    expiredTime?: pulumi.Input<string>;
    /**
     * Indicate whether to force delete the DDoS IP. Default is `false`. If set true, the DDoS IP will be permanently deleted
     * instead of being moved into the recycle bin.
     */
    forceDelete?: pulumi.Input<boolean>;
    /**
     * Current status of the DDoS IP.
     */
    ipStatus?: pulumi.Input<string>;
    /**
     * The DDoS IP address.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * The resource group id the DDoS IP belongs to, default to Default Resource Group.
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * The resource group name the DDoS IP belongs to, default to Default Resource Group.
     */
    resourceGroupName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BmcDdosIp resource.
 */
export interface BmcDdosIpArgs {
    /**
     * The ID of zone that the DDoS IP locates at.
     */
    availabilityZone: pulumi.Input<string>;
    /**
     * The tenancy (time unit is month) of the prepaid DDoS IP, NOTE: it only works when DDoS charge_type is set to `PREPAID`.
     */
    chargePrepaidPeriod?: pulumi.Input<number>;
    /**
     * The charge type of DDoS IP. Valid values are `PREPAID`, `POSTPAID`. The default is `POSTPAID`. Note: `PREPAID` DDoS IP
     * may not allow to delete before expired.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * Indicate whether to force delete the DDoS IP. Default is `false`. If set true, the DDoS IP will be permanently deleted
     * instead of being moved into the recycle bin.
     */
    forceDelete?: pulumi.Input<boolean>;
    /**
     * The resource group id the DDoS IP belongs to, default to Default Resource Group.
     */
    resourceGroupId?: pulumi.Input<string>;
}
