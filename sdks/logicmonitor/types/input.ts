// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface CollectorAutomaticUpgradeInfo {
    createdBy?: pulumi.Input<string>;
    dayOfWeek: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    hour: pulumi.Input<number>;
    level?: pulumi.Input<string>;
    minute: pulumi.Input<number>;
    occurrence: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface CollectorCustomProperty {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CollectorGroupCustomProperty {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CollectorNextUpgradeInfo {
    majorVersion: pulumi.Input<number>;
    mandatory: pulumi.Input<boolean>;
    minorVersion: pulumi.Input<number>;
    stable: pulumi.Input<boolean>;
    upgradeTime: pulumi.Input<string>;
    upgradeTimeEpoch: pulumi.Input<number>;
}

export interface CollectorOnetimeDowngradeInfo {
    createdBy?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    endEpoch?: pulumi.Input<number>;
    level?: pulumi.Input<string>;
    majorVersion: pulumi.Input<number>;
    minorVersion: pulumi.Input<number>;
    startEpoch: pulumi.Input<number>;
    timezone?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface CollectorOnetimeUpgradeInfo {
    createdBy?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    endEpoch?: pulumi.Input<number>;
    level?: pulumi.Input<string>;
    majorVersion: pulumi.Input<number>;
    minorVersion: pulumi.Input<number>;
    startEpoch: pulumi.Input<number>;
    timezone?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DashboardGroupDashboard {
    id: pulumi.Input<number>;
    name: pulumi.Input<string>;
    sharable: pulumi.Input<boolean>;
    userPermission: pulumi.Input<string>;
}

export interface DashboardGroupWidgetToken {
    inheritLists: pulumi.Input<pulumi.Input<inputs.DashboardGroupWidgetTokenInheritList>[]>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DashboardGroupWidgetTokenInheritList {
    fullpath: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DashboardWidgetToken {
    inheritLists: pulumi.Input<pulumi.Input<inputs.DashboardWidgetTokenInheritList>[]>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DashboardWidgetTokenInheritList {
    fullpath: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DatasourceAutoDiscoveryConfig {
    dataSourceName?: pulumi.Input<string>;
    deleteInactiveInstance?: pulumi.Input<boolean>;
    disableInstance?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.DatasourceAutoDiscoveryConfigFilter>[]>;
    instanceAutoGroupMethod?: pulumi.Input<string>;
    instanceAutoGroupMethodParams?: pulumi.Input<string>;
    methods: pulumi.Input<pulumi.Input<inputs.DatasourceAutoDiscoveryConfigMethod>[]>;
    persistentInstance?: pulumi.Input<boolean>;
    scheduleInterval?: pulumi.Input<number>;
}

export interface DatasourceAutoDiscoveryConfigFilter {
    attribute: pulumi.Input<string>;
    comment: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DatasourceAutoDiscoveryConfigMethod {
    name: pulumi.Input<string>;
}

export interface DatasourceCollectorAttribute {
    name: pulumi.Input<string>;
}

export interface DatasourceDataPoint {
    alertBody: pulumi.Input<string>;
    alertClearTransitionInterval: pulumi.Input<number>;
    alertExpr: pulumi.Input<string>;
    alertExprNote: pulumi.Input<string>;
    alertForNoData: pulumi.Input<number>;
    alertSubject: pulumi.Input<string>;
    alertTransitionInterval: pulumi.Input<number>;
    dataType: pulumi.Input<number>;
    description: pulumi.Input<string>;
    maxDigits: pulumi.Input<number>;
    maxValue: pulumi.Input<string>;
    minValue: pulumi.Input<string>;
    name: pulumi.Input<string>;
    postProcessorMethod: pulumi.Input<string>;
    postProcessorParam: pulumi.Input<string>;
    rawDataFieldName: pulumi.Input<string>;
    type: pulumi.Input<number>;
}

export interface DatasourceEriDiscoveryConfig {
    groovyScript?: pulumi.Input<string>;
    linuxCmdline?: pulumi.Input<string>;
    linuxScript?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    winCmdline?: pulumi.Input<string>;
    winScript?: pulumi.Input<string>;
}

export interface DeviceAutoProperty {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceCustomProperty {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupAwsTestResult {
    detailLink: pulumi.Input<string>;
    noPermissionServices: pulumi.Input<pulumi.Input<string>[]>;
    nonPermissionErrors: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DeviceGroupAzureTestResult {
    detailLink: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    noPermissionServices: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DeviceGroupCustomProperty {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtra {
    accounts: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraAccount>[]>;
    defaults: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraDefault>[]>;
    devices?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraDevice>[]>;
    services: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraService>[]>;
}

export interface DeviceGroupExtraAccount {
    accountId?: pulumi.Input<string>;
    assumedRoleArn?: pulumi.Input<string>;
    billingBucketName?: pulumi.Input<string>;
    billingPathPrefix?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    collectorDescription?: pulumi.Input<string>;
    collectorId?: pulumi.Input<number>;
    country?: pulumi.Input<string>;
    externalId?: pulumi.Input<string>;
    schedule?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    subscriptionIds?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DeviceGroupExtraDefault {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraDefaultNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraDefaultTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraDefaultNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraDefaultNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraDefaultNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraDefaultTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraDevice {
    deviceType: pulumi.Input<number>;
    requiredProps: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DeviceGroupExtraService {
    aPPLICATIONELBs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPLICATIONELB>[]>;
    aPPLICATIONGATEWAIes?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPLICATIONGATEWAIe>[]>;
    aPPLICATIONINSIGHTS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPLICATIONINSIGHT>[]>;
    aPPSERVICEPLANs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPSERVICEPLAN>[]>;
    aPPSERVICEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPSERVICE>[]>;
    aPPSTREAMs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPSTREAM>[]>;
    aTHENAs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceATHENA>[]>;
    aUTOMATIONACCOUNTs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAUTOMATIONACCOUNT>[]>;
    aUTOSCALINGs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAUTOSCALING>[]>;
    apiGATEWAIes?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceApiGATEWAIe>[]>;
    apiMANAGEMENTs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceApiMANAGEMENT>[]>;
    bACKUPPROTECTEDITEMS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceBACKUPPROTECTEDITEM>[]>;
    bLOBSTORAGEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceBLOBSTORAGE>[]>;
    cLOUDFRONTs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCLOUDFRONT>[]>;
    cLOUDSEARCHs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCLOUDSEARCH>[]>;
    cODEBUiLDs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCODEBUiLD>[]>;
    cOGNITIVESEARCHs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOGNITIVESEARCH>[]>;
    cOGNITIVESERVICES?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOGNITIVESERVICE>[]>;
    cOGNITOs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOGNITO>[]>;
    cOSMOSDBs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOSMOSDB>[]>;
    dATAFACTORIes?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDATAFACTORy>[]>;
    dIRECTCONNECTs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDIRECTCONNECT>[]>;
    dMSREPLICATIONTASKS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDMSREPLICATIONTASK>[]>;
    dMSREPLICATIONs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDMSREPLICATION>[]>;
    dOCDBs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDOCDB>[]>;
    dYNAMODBs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDYNAMODB>[]>;
    eBS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEB>[]>;
    eC2s?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEC2>[]>;
    eCS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEC>[]>;
    eFS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEF>[]>;
    eLASTICACHEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICACH>[]>;
    eLASTICBEANSTALKs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICBEANSTALK>[]>;
    eLASTICSEARCHs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICSEARCH>[]>;
    eLASTICTRANSCODERs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICTRANSCODER>[]>;
    eLBs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELB>[]>;
    eMRs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEMR>[]>;
    eVENTBRIdGEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEVENTBRIdGE>[]>;
    eVENTHUBs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEVENTHUB>[]>;
    eXPRESSROUTECIRCUiTs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEXPRESSROUTECIRCUiT>[]>;
    fILESTORAGEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFILESTORAGE>[]>;
    fIREHOSEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFIREHOSE>[]>;
    fIREWALLs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFIREWALL>[]>;
    fRONTDOORS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFRONTDOOR>[]>;
    fSXes?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFSX>[]>;
    gLUEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceGLUE>[]>;
    kEYVAULTs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceKEYVAULT>[]>;
    kINESIS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceKINESI>[]>;
    kINESISVIdEOs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceKINESISVIdEO>[]>;
    lAMBDAs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLAMBDA>[]>;
    lOADBALANCERS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLOADBALANCER>[]>;
    lOGANALYTICSWORKSPACES?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLOGANALYTICSWORKSPACE>[]>;
    lOGICAPPS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLOGICAPP>[]>;
    mEDIACONNECTs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIACONNECT>[]>;
    mEDIACONVERTs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIACONVERT>[]>;
    mEDIAPACKAGELIVEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIAPACKAGELIfe>[]>;
    mEDIAPACKAGEVODs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIAPACKAGEVOD>[]>;
    mEDIASTOREs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIASTORE>[]>;
    mEDIATAILORs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIATAILOR>[]>;
    mQs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMQ>[]>;
    mSKBROKERs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMSKBROKER>[]>;
    mSKCLUSTERs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMSKCLUSTER>[]>;
    mYSqls?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMYSql>[]>;
    nATGATEWAIes?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceNATGATEWAIe>[]>;
    nETWORKELBs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceNETWORKELB>[]>;
    nETWORKINTERFACEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceNETWORKINTERFACE>[]>;
    oPSWORKS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceOPSWORK>[]>;
    pOSTGRESqls?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServicePOSTGRESql>[]>;
    pUBLICIps?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServicePUBLICIp>[]>;
    qUEUESTORAGEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceQUEUESTORAGE>[]>;
    rDS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceRD>[]>;
    rECOVERYPROTECTEDITEMs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceRECOVERYPROTECTEDITEM>[]>;
    rECOVERYSERVICES?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceRECOVERYSERVICE>[]>;
    rEDISCACHEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceREDISCACH>[]>;
    rEDSHIFTs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceREDSHIFT>[]>;
    rOUTE53RESOLVERs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceROUTE53RESOLVER>[]>;
    rOUTE53s?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceROUTE53>[]>;
    s3s?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceS3>[]>;
    sAGEMAKERs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSAGEMAKER>[]>;
    sERVICEBUS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSERVICEBU>[]>;
    sES?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSE>[]>;
    sNS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSN>[]>;
    sQS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSQ>[]>;
    sTEPFUNCTIONS?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSTEPFUNCTION>[]>;
    sTORAGEACCOUNTs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSTORAGEACCOUNT>[]>;
    sWFACTIVITIes?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSWFACTIVITy>[]>;
    sWFWORKFLOWs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSWFWORKFLOW>[]>;
    sYNAPSEWORKSPACES?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSYNAPSEWORKSPACE>[]>;
    sqlDATABASEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSqlDATABASE>[]>;
    sqlELASTICPOOLs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSqlELASTICPOOL>[]>;
    sqlMANAGEDINSTANCEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSqlMANAGEDINSTANCE>[]>;
    tABLESTORAGEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceTABLESTORAGE>[]>;
    tRAFFICMANAGERs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceTRAFFICMANAGER>[]>;
    tRANSITGATEWAIes?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceTRANSITGATEWAIe>[]>;
    vIRTUALDESKTOPs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALDESKTOP>[]>;
    vIRTUALMACHINESCALESETVms?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESETVm>[]>;
    vIRTUALMACHINESCALESETs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESET>[]>;
    vIRTUALMACHINEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALMACHINE>[]>;
    vIRTUALNETWORKGATEWAIes?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIe>[]>;
    vPNs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVPN>[]>;
    wORKSPACEDIRECTORIes?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceWORKSPACEDIRECTORy>[]>;
    wORKSPACEs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceWORKSPACE>[]>;
}

export interface DeviceGroupExtraServiceAPPLICATIONELB {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPLICATIONELBTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPLICATIONELBTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceAPPLICATIONGATEWAIe {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPLICATIONGATEWAIeTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPLICATIONGATEWAIeTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceAPPLICATIONINSIGHT {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPLICATIONINSIGHTTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPLICATIONINSIGHTTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceAPPSERVICE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPSERVICENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPSERVICETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPSERVICENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPSERVICENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPSERVICENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPSERVICEPLAN {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPSERVICEPLANTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPSERVICEPLANTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceAPPSERVICETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceAPPSTREAM {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPSTREAMNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPSTREAMTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPSTREAMNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAPPSTREAMNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPSTREAMNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAPPSTREAMTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceATHENA {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceATHENANormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceATHENATag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceATHENANormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceATHENANormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceATHENANormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceATHENATag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceAUTOMATIONACCOUNT {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAUTOMATIONACCOUNTTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAUTOMATIONACCOUNTTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceAUTOSCALING {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAUTOSCALINGTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceAUTOSCALINGTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceApiGATEWAIe {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceApiGATEWAIeTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceApiGATEWAIeTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceApiMANAGEMENT {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceApiMANAGEMENTTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceApiMANAGEMENTTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceBACKUPPROTECTEDITEM {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceBACKUPPROTECTEDITEMTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceBACKUPPROTECTEDITEMTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceBLOBSTORAGE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceBLOBSTORAGETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceBLOBSTORAGETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceCLOUDFRONT {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCLOUDFRONTTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCLOUDFRONTTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceCLOUDSEARCH {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCLOUDSEARCHTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCLOUDSEARCHTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceCODEBUiLD {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCODEBUiLDNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCODEBUiLDTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCODEBUiLDNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCODEBUiLDNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCODEBUiLDNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCODEBUiLDTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceCOGNITIVESEARCH {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOGNITIVESEARCHTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCOGNITIVESEARCHTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceCOGNITIVESERVICE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOGNITIVESERVICETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCOGNITIVESERVICETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceCOGNITO {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOGNITONormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOGNITOTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCOGNITONormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOGNITONormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCOGNITONormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCOGNITOTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceCOSMOSDB {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOSMOSDBNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOSMOSDBTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCOSMOSDBNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceCOSMOSDBNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCOSMOSDBNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceCOSMOSDBTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceDATAFACTORy {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDATAFACTORyNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDATAFACTORyTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDATAFACTORyNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDATAFACTORyNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDATAFACTORyNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDATAFACTORyTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceDIRECTCONNECT {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDIRECTCONNECTTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDIRECTCONNECTTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceDMSREPLICATION {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDMSREPLICATIONTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDMSREPLICATIONTASK {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDMSREPLICATIONTASKTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDMSREPLICATIONTASKTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceDMSREPLICATIONTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceDOCDB {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDOCDBNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDOCDBTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDOCDBNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDOCDBNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDOCDBNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDOCDBTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceDYNAMODB {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDYNAMODBNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDYNAMODBTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDYNAMODBNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceDYNAMODBNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDYNAMODBNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceDYNAMODBTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceEB {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEBNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEBTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEBNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEBNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEBNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEBTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceEC {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceECNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceECTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEC2 {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEC2NormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEC2Tag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEC2NormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEC2NormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEC2NormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEC2Tag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceECNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceECNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceECNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceECTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceEF {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEFNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEFTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEFNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEFNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEFNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEFTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceELASTICACH {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICACHNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICACHTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELASTICACHNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICACHNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELASTICACHNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELASTICACHTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceELASTICBEANSTALK {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICBEANSTALKTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELASTICBEANSTALKTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceELASTICSEARCH {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICSEARCHTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELASTICSEARCHTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceELASTICTRANSCODER {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICTRANSCODERTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELASTICTRANSCODERTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceELB {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELBNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELBTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELBNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceELBNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELBNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceELBTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceEMR {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEMRNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEMRTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEMRNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEMRNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEMRNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEMRTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceEVENTBRIdGE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEVENTBRIdGETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEVENTBRIdGETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceEVENTHUB {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEVENTHUBNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEVENTHUBTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEVENTHUBNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEVENTHUBNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEVENTHUBNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEVENTHUBTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceEXPRESSROUTECIRCUiT {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEXPRESSROUTECIRCUiTTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceEXPRESSROUTECIRCUiTTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceFILESTORAGE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFILESTORAGENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFILESTORAGETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFILESTORAGENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFILESTORAGENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFILESTORAGENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFILESTORAGETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceFIREHOSE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFIREHOSENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFIREHOSETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFIREHOSENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFIREHOSENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFIREHOSENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFIREHOSETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceFIREWALL {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFIREWALLNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFIREWALLTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFIREWALLNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFIREWALLNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFIREWALLNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFIREWALLTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceFRONTDOOR {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFRONTDOORNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFRONTDOORTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFRONTDOORNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFRONTDOORNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFRONTDOORNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFRONTDOORTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceFSX {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFSXNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFSXTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFSXNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceFSXNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFSXNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceFSXTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceGLUE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceGLUENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceGLUETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceGLUENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceGLUENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceGLUENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceGLUETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceKEYVAULT {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceKEYVAULTNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceKEYVAULTTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceKEYVAULTNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceKEYVAULTNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceKEYVAULTNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceKEYVAULTTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceKINESI {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceKINESINormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceKINESITag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceKINESINormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceKINESINormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceKINESINormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceKINESISVIdEO {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceKINESISVIdEONormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceKINESISVIdEOTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceKINESISVIdEONormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceKINESISVIdEONormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceKINESISVIdEONormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceKINESISVIdEOTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceKINESITag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceLAMBDA {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLAMBDANormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLAMBDATag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceLAMBDANormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLAMBDANormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceLAMBDANormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceLAMBDATag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceLOADBALANCER {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLOADBALANCERNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLOADBALANCERTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceLOADBALANCERNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLOADBALANCERNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceLOADBALANCERNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceLOADBALANCERTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceLOGANALYTICSWORKSPACE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLOGANALYTICSWORKSPACETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceLOGANALYTICSWORKSPACETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceLOGICAPP {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLOGICAPPNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLOGICAPPTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceLOGICAPPNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceLOGICAPPNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceLOGICAPPNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceLOGICAPPTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceMEDIACONNECT {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIACONNECTTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIACONNECTTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceMEDIACONVERT {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIACONVERTTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIACONVERTTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGELIfe {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIAPACKAGELIfeTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGELIfeTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGEVOD {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIAPACKAGEVODTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGEVODTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceMEDIASTORE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIASTORENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIASTORETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIASTORENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIASTORENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIASTORENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIASTORETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceMEDIATAILOR {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIATAILORNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIATAILORTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIATAILORNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMEDIATAILORNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIATAILORNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMEDIATAILORTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceMQ {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMQNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMQTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMQNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMQNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMQNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMQTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceMSKBROKER {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMSKBROKERNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMSKBROKERTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMSKBROKERNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMSKBROKERNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMSKBROKERNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMSKBROKERTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceMSKCLUSTER {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMSKCLUSTERTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMSKCLUSTERTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceMYSql {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMYSqlNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMYSqlTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMYSqlNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceMYSqlNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMYSqlNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceMYSqlTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceNATGATEWAIe {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceNATGATEWAIeTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceNATGATEWAIeTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceNETWORKELB {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceNETWORKELBNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceNETWORKELBTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceNETWORKELBNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceNETWORKELBNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceNETWORKELBNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceNETWORKELBTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceNETWORKINTERFACE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceNETWORKINTERFACETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceNETWORKINTERFACETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceOPSWORK {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceOPSWORKNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceOPSWORKTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceOPSWORKNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceOPSWORKNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceOPSWORKNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceOPSWORKTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServicePOSTGRESql {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServicePOSTGRESqlNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServicePOSTGRESqlTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServicePOSTGRESqlNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServicePOSTGRESqlNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServicePOSTGRESqlNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServicePOSTGRESqlTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServicePUBLICIp {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServicePUBLICIpNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServicePUBLICIpTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServicePUBLICIpNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServicePUBLICIpNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServicePUBLICIpNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServicePUBLICIpTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceQUEUESTORAGE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceQUEUESTORAGETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceQUEUESTORAGETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceRD {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceRDNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceRDTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceRDNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceRDNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceRDNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceRDTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceRECOVERYPROTECTEDITEM {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceRECOVERYPROTECTEDITEMTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceRECOVERYPROTECTEDITEMTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceRECOVERYSERVICE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceRECOVERYSERVICETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceRECOVERYSERVICETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceREDISCACH {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceREDISCACHNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceREDISCACHTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceREDISCACHNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceREDISCACHNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceREDISCACHNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceREDISCACHTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceREDSHIFT {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceREDSHIFTNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceREDSHIFTTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceREDSHIFTNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceREDSHIFTNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceREDSHIFTNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceREDSHIFTTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceROUTE53 {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceROUTE53NormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceROUTE53Tag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceROUTE53NormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceROUTE53NormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceROUTE53NormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceROUTE53RESOLVER {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceROUTE53RESOLVERTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceROUTE53RESOLVERTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceROUTE53Tag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceS3 {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceS3NormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceS3Tag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceS3NormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceS3NormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceS3NormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceS3Tag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceSAGEMAKER {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSAGEMAKERNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSAGEMAKERTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSAGEMAKERNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSAGEMAKERNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSAGEMAKERNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSAGEMAKERTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceSE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSERVICEBU {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSERVICEBUNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSERVICEBUTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSERVICEBUNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSERVICEBUNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSERVICEBUNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSERVICEBUTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceSETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceSN {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSNNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSNTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSNNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSNNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSNNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSNTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceSQ {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSQNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSQTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSQNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSQNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSQNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSQTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceSTEPFUNCTION {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSTEPFUNCTIONTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSTEPFUNCTIONTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceSTORAGEACCOUNT {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSTORAGEACCOUNTTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSTORAGEACCOUNTTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceSWFACTIVITy {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSWFACTIVITyTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSWFACTIVITyTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceSWFWORKFLOW {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSWFWORKFLOWTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSWFWORKFLOWTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceSYNAPSEWORKSPACE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSYNAPSEWORKSPACETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSYNAPSEWORKSPACETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceSqlDATABASE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSqlDATABASENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSqlDATABASETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSqlDATABASENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSqlDATABASENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSqlDATABASENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSqlDATABASETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceSqlELASTICPOOL {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSqlELASTICPOOLTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSqlELASTICPOOLTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceSqlMANAGEDINSTANCE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSqlMANAGEDINSTANCETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceSqlMANAGEDINSTANCETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceTABLESTORAGE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceTABLESTORAGENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceTABLESTORAGETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceTABLESTORAGENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceTABLESTORAGENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceTABLESTORAGENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceTABLESTORAGETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceTRAFFICMANAGER {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceTRAFFICMANAGERTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceTRAFFICMANAGERTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceTRANSITGATEWAIe {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceTRANSITGATEWAIeTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceTRANSITGATEWAIeTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceVIRTUALDESKTOP {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALDESKTOPTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALDESKTOPTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALMACHINETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESET {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESETTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESETTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESETVm {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESETVmTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESETVmTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIe {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceVPN {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVPNNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVPNTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVPNNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceVPNNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVPNNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceVPNTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceWORKSPACE {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceWORKSPACENormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceWORKSPACETag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceWORKSPACEDIRECTORy {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfig>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceWORKSPACEDIRECTORyTag>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceWORKSPACEDIRECTORyTag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupExtraServiceWORKSPACENormalCollectorConfig {
    collectors?: pulumi.Input<pulumi.Input<inputs.DeviceGroupExtraServiceWORKSPACENormalCollectorConfigCollector>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceWORKSPACENormalCollectorConfigCollector {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface DeviceGroupExtraServiceWORKSPACETag {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceGroupGcpTestResult {
    detailLink: pulumi.Input<string>;
    noPermissionServices: pulumi.Input<pulumi.Input<string>[]>;
    nonPermissionErrors: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DeviceGroupSubGroup {
    appliesTo: pulumi.Input<string>;
    awsRegionsInfo: pulumi.Input<string>;
    azureRegionsInfo: pulumi.Input<string>;
    description: pulumi.Input<string>;
    fullPath: pulumi.Input<string>;
    gcpRegionsInfo: pulumi.Input<string>;
    groupType: pulumi.Input<string>;
    id: pulumi.Input<number>;
    name: pulumi.Input<string>;
    numOfDirectDevices: pulumi.Input<number>;
    numOfDirectSubGroups: pulumi.Input<number>;
    numOfHosts: pulumi.Input<number>;
    userPermission: pulumi.Input<string>;
}

export interface DeviceInheritedProperty {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DeviceSystemProperty {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface EscalationChainCcDestination {
    addr: pulumi.Input<string>;
    contact: pulumi.Input<string>;
    method: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface EscalationChainDestination {
    periods: pulumi.Input<pulumi.Input<inputs.EscalationChainDestinationPeriod>[]>;
    stages: pulumi.Input<pulumi.Input<pulumi.Input<inputs.EscalationChainDestinationStage>[]>[]>;
    type: pulumi.Input<string>;
}

export interface EscalationChainDestinationPeriod {
    endMinutes: pulumi.Input<number>;
    startMinutes: pulumi.Input<number>;
    timezone: pulumi.Input<string>;
    weekDays: pulumi.Input<pulumi.Input<number>[]>;
}

export interface EscalationChainDestinationStage {
    addr: pulumi.Input<string>;
    contact: pulumi.Input<string>;
    method: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetCollectorAutomaticUpgradeInfo {
    createdBy?: string;
    dayOfWeek: string;
    description?: string;
    hour: number;
    level?: string;
    minute: number;
    occurrence: string;
    timezone?: string;
    type?: string;
    version: string;
}

export interface GetCollectorAutomaticUpgradeInfoArgs {
    createdBy?: pulumi.Input<string>;
    dayOfWeek: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    hour: pulumi.Input<number>;
    level?: pulumi.Input<string>;
    minute: pulumi.Input<number>;
    occurrence: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface GetCollectorCustomProperty {
    name: string;
    value: string;
}

export interface GetCollectorCustomPropertyArgs {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetCollectorGroupCustomProperty {
    name: string;
    value: string;
}

export interface GetCollectorGroupCustomPropertyArgs {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetCollectorNextUpgradeInfo {
    majorVersion?: number;
    mandatory?: boolean;
    minorVersion?: number;
    stable?: boolean;
    upgradeTime?: string;
    upgradeTimeEpoch?: number;
}

export interface GetCollectorNextUpgradeInfoArgs {
    majorVersion?: pulumi.Input<number>;
    mandatory?: pulumi.Input<boolean>;
    minorVersion?: pulumi.Input<number>;
    stable?: pulumi.Input<boolean>;
    upgradeTime?: pulumi.Input<string>;
    upgradeTimeEpoch?: pulumi.Input<number>;
}

export interface GetCollectorOnetimeDowngradeInfo {
    createdBy?: string;
    description?: string;
    endEpoch?: number;
    level?: string;
    majorVersion: number;
    minorVersion: number;
    startEpoch: number;
    timezone?: string;
    type?: string;
}

export interface GetCollectorOnetimeDowngradeInfoArgs {
    createdBy?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    endEpoch?: pulumi.Input<number>;
    level?: pulumi.Input<string>;
    majorVersion: pulumi.Input<number>;
    minorVersion: pulumi.Input<number>;
    startEpoch: pulumi.Input<number>;
    timezone?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface GetCollectorOnetimeUpgradeInfo {
    createdBy?: string;
    description?: string;
    endEpoch?: number;
    level?: string;
    majorVersion: number;
    minorVersion: number;
    startEpoch: number;
    timezone?: string;
    type?: string;
}

export interface GetCollectorOnetimeUpgradeInfoArgs {
    createdBy?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    endEpoch?: pulumi.Input<number>;
    level?: pulumi.Input<string>;
    majorVersion: pulumi.Input<number>;
    minorVersion: pulumi.Input<number>;
    startEpoch: pulumi.Input<number>;
    timezone?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface GetDashboardGroupDashboard {
    id: number;
    name: string;
    sharable: boolean;
    userPermission: string;
}

export interface GetDashboardGroupDashboardArgs {
    id: pulumi.Input<number>;
    name: pulumi.Input<string>;
    sharable: pulumi.Input<boolean>;
    userPermission: pulumi.Input<string>;
}

export interface GetDashboardGroupWidgetToken {
    inheritLists: inputs.GetDashboardGroupWidgetTokenInheritList[];
    name: string;
    type: string;
    value: string;
}

export interface GetDashboardGroupWidgetTokenArgs {
    inheritLists: pulumi.Input<pulumi.Input<inputs.GetDashboardGroupWidgetTokenInheritListArgs>[]>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDashboardGroupWidgetTokenInheritList {
    fullpath: string;
    value: string;
}

export interface GetDashboardGroupWidgetTokenInheritListArgs {
    fullpath: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDashboardWidgetToken {
    inheritLists: inputs.GetDashboardWidgetTokenInheritList[];
    name: string;
    type: string;
    value: string;
}

export interface GetDashboardWidgetTokenArgs {
    inheritLists: pulumi.Input<pulumi.Input<inputs.GetDashboardWidgetTokenInheritListArgs>[]>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDashboardWidgetTokenInheritList {
    fullpath: string;
    value: string;
}

export interface GetDashboardWidgetTokenInheritListArgs {
    fullpath: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDatasourceAutoDiscoveryConfig {
    dataSourceName?: string;
    deleteInactiveInstance?: boolean;
    disableInstance?: boolean;
    filters?: inputs.GetDatasourceAutoDiscoveryConfigFilter[];
    instanceAutoGroupMethod?: string;
    instanceAutoGroupMethodParams?: string;
    methods: inputs.GetDatasourceAutoDiscoveryConfigMethod[];
    persistentInstance?: boolean;
    scheduleInterval?: number;
}

export interface GetDatasourceAutoDiscoveryConfigArgs {
    dataSourceName?: pulumi.Input<string>;
    deleteInactiveInstance?: pulumi.Input<boolean>;
    disableInstance?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatasourceAutoDiscoveryConfigFilterArgs>[]>;
    instanceAutoGroupMethod?: pulumi.Input<string>;
    instanceAutoGroupMethodParams?: pulumi.Input<string>;
    methods: pulumi.Input<pulumi.Input<inputs.GetDatasourceAutoDiscoveryConfigMethodArgs>[]>;
    persistentInstance?: pulumi.Input<boolean>;
    scheduleInterval?: pulumi.Input<number>;
}

export interface GetDatasourceAutoDiscoveryConfigFilter {
    attribute: string;
    comment: string;
    operation: string;
    value: string;
}

export interface GetDatasourceAutoDiscoveryConfigFilterArgs {
    attribute: pulumi.Input<string>;
    comment: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDatasourceAutoDiscoveryConfigMethod {
    name: string;
}

export interface GetDatasourceAutoDiscoveryConfigMethodArgs {
    name: pulumi.Input<string>;
}

export interface GetDatasourceCollectorAttribute {
    name: string;
}

export interface GetDatasourceCollectorAttributeArgs {
    name: pulumi.Input<string>;
}

export interface GetDatasourceDataPoint {
    alertBody: string;
    alertClearTransitionInterval: number;
    alertExpr: string;
    alertExprNote: string;
    alertForNoData: number;
    alertSubject: string;
    alertTransitionInterval: number;
    dataType: number;
    description: string;
    maxDigits: number;
    maxValue: string;
    minValue: string;
    name: string;
    postProcessorMethod: string;
    postProcessorParam: string;
    rawDataFieldName: string;
    type: number;
}

export interface GetDatasourceDataPointArgs {
    alertBody: pulumi.Input<string>;
    alertClearTransitionInterval: pulumi.Input<number>;
    alertExpr: pulumi.Input<string>;
    alertExprNote: pulumi.Input<string>;
    alertForNoData: pulumi.Input<number>;
    alertSubject: pulumi.Input<string>;
    alertTransitionInterval: pulumi.Input<number>;
    dataType: pulumi.Input<number>;
    description: pulumi.Input<string>;
    maxDigits: pulumi.Input<number>;
    maxValue: pulumi.Input<string>;
    minValue: pulumi.Input<string>;
    name: pulumi.Input<string>;
    postProcessorMethod: pulumi.Input<string>;
    postProcessorParam: pulumi.Input<string>;
    rawDataFieldName: pulumi.Input<string>;
    type: pulumi.Input<number>;
}

export interface GetDatasourceEriDiscoveryConfig {
    groovyScript?: string;
    linuxCmdline?: string;
    linuxScript?: string;
    name: string;
    type?: string;
    winCmdline?: string;
    winScript?: string;
}

export interface GetDatasourceEriDiscoveryConfigArgs {
    groovyScript?: pulumi.Input<string>;
    linuxCmdline?: pulumi.Input<string>;
    linuxScript?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    winCmdline?: pulumi.Input<string>;
    winScript?: pulumi.Input<string>;
}

export interface GetDeviceAutoProperty {
    name: string;
    value: string;
}

export interface GetDeviceAutoPropertyArgs {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceCustomProperty {
    name: string;
    value: string;
}

export interface GetDeviceCustomPropertyArgs {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupAwsTestResult {
    detailLink?: string;
    noPermissionServices?: string[];
    nonPermissionErrors?: string[];
}

export interface GetDeviceGroupAwsTestResultArgs {
    detailLink?: pulumi.Input<string>;
    noPermissionServices?: pulumi.Input<pulumi.Input<string>[]>;
    nonPermissionErrors?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDeviceGroupAzureTestResult {
    detailLink?: {[key: string]: string};
    noPermissionServices?: {[key: string]: string};
}

export interface GetDeviceGroupAzureTestResultArgs {
    detailLink?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    noPermissionServices?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetDeviceGroupCustomProperty {
    name: string;
    value: string;
}

export interface GetDeviceGroupCustomPropertyArgs {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtra {
    accounts: inputs.GetDeviceGroupExtraAccount[];
    defaults: inputs.GetDeviceGroupExtraDefault[];
    devices?: inputs.GetDeviceGroupExtraDevice[];
    services: inputs.GetDeviceGroupExtraService[];
}

export interface GetDeviceGroupExtraArgs {
    accounts: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraAccountArgs>[]>;
    defaults: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraDefaultArgs>[]>;
    devices?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraDeviceArgs>[]>;
    services: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceArgs>[]>;
}

export interface GetDeviceGroupExtraAccount {
    accountId?: string;
    assumedRoleArn?: string;
    billingBucketName?: string;
    billingPathPrefix?: string;
    clientId?: string;
    collectorDescription?: string;
    collectorId?: number;
    country?: string;
    externalId?: string;
    schedule?: string;
    secretKey?: string;
    subscriptionIds?: string;
    tenantId?: string;
    type?: string;
}

export interface GetDeviceGroupExtraAccountArgs {
    accountId?: pulumi.Input<string>;
    assumedRoleArn?: pulumi.Input<string>;
    billingBucketName?: pulumi.Input<string>;
    billingPathPrefix?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    collectorDescription?: pulumi.Input<string>;
    collectorId?: pulumi.Input<number>;
    country?: pulumi.Input<string>;
    externalId?: pulumi.Input<string>;
    schedule?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    subscriptionIds?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraDefault {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraDefaultNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraDefaultTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraDefaultArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraDefaultNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraDefaultTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraDefaultNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraDefaultNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraDefaultNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraDefaultNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraDefaultNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraDefaultNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraDefaultTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraDefaultTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraDevice {
    deviceType: number;
    requiredProps: string[];
}

export interface GetDeviceGroupExtraDeviceArgs {
    deviceType: pulumi.Input<number>;
    requiredProps: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDeviceGroupExtraService {
    aPPLICATIONELBs?: inputs.GetDeviceGroupExtraServiceAPPLICATIONELB[];
    aPPLICATIONGATEWAIes?: inputs.GetDeviceGroupExtraServiceAPPLICATIONGATEWAIe[];
    aPPLICATIONINSIGHTS?: inputs.GetDeviceGroupExtraServiceAPPLICATIONINSIGHT[];
    aPPSERVICEPLANs?: inputs.GetDeviceGroupExtraServiceAPPSERVICEPLAN[];
    aPPSERVICEs?: inputs.GetDeviceGroupExtraServiceAPPSERVICE[];
    aPPSTREAMs?: inputs.GetDeviceGroupExtraServiceAPPSTREAM[];
    aTHENAs?: inputs.GetDeviceGroupExtraServiceATHENA[];
    aUTOMATIONACCOUNTs?: inputs.GetDeviceGroupExtraServiceAUTOMATIONACCOUNT[];
    aUTOSCALINGs?: inputs.GetDeviceGroupExtraServiceAUTOSCALING[];
    apiGATEWAIes?: inputs.GetDeviceGroupExtraServiceApiGATEWAIe[];
    apiMANAGEMENTs?: inputs.GetDeviceGroupExtraServiceApiMANAGEMENT[];
    bACKUPPROTECTEDITEMS?: inputs.GetDeviceGroupExtraServiceBACKUPPROTECTEDITEM[];
    bLOBSTORAGEs?: inputs.GetDeviceGroupExtraServiceBLOBSTORAGE[];
    cLOUDFRONTs?: inputs.GetDeviceGroupExtraServiceCLOUDFRONT[];
    cLOUDSEARCHs?: inputs.GetDeviceGroupExtraServiceCLOUDSEARCH[];
    cODEBUiLDs?: inputs.GetDeviceGroupExtraServiceCODEBUiLD[];
    cOGNITIVESEARCHs?: inputs.GetDeviceGroupExtraServiceCOGNITIVESEARCH[];
    cOGNITIVESERVICES?: inputs.GetDeviceGroupExtraServiceCOGNITIVESERVICE[];
    cOGNITOs?: inputs.GetDeviceGroupExtraServiceCOGNITO[];
    cOSMOSDBs?: inputs.GetDeviceGroupExtraServiceCOSMOSDB[];
    dATAFACTORIes?: inputs.GetDeviceGroupExtraServiceDATAFACTORy[];
    dIRECTCONNECTs?: inputs.GetDeviceGroupExtraServiceDIRECTCONNECT[];
    dMSREPLICATIONTASKS?: inputs.GetDeviceGroupExtraServiceDMSREPLICATIONTASK[];
    dMSREPLICATIONs?: inputs.GetDeviceGroupExtraServiceDMSREPLICATION[];
    dOCDBs?: inputs.GetDeviceGroupExtraServiceDOCDB[];
    dYNAMODBs?: inputs.GetDeviceGroupExtraServiceDYNAMODB[];
    eBS?: inputs.GetDeviceGroupExtraServiceEB[];
    eC2s?: inputs.GetDeviceGroupExtraServiceEC2[];
    eCS?: inputs.GetDeviceGroupExtraServiceEC[];
    eFS?: inputs.GetDeviceGroupExtraServiceEF[];
    eLASTICACHEs?: inputs.GetDeviceGroupExtraServiceELASTICACH[];
    eLASTICBEANSTALKs?: inputs.GetDeviceGroupExtraServiceELASTICBEANSTALK[];
    eLASTICSEARCHs?: inputs.GetDeviceGroupExtraServiceELASTICSEARCH[];
    eLASTICTRANSCODERs?: inputs.GetDeviceGroupExtraServiceELASTICTRANSCODER[];
    eLBs?: inputs.GetDeviceGroupExtraServiceELB[];
    eMRs?: inputs.GetDeviceGroupExtraServiceEMR[];
    eVENTBRIdGEs?: inputs.GetDeviceGroupExtraServiceEVENTBRIdGE[];
    eVENTHUBs?: inputs.GetDeviceGroupExtraServiceEVENTHUB[];
    eXPRESSROUTECIRCUiTs?: inputs.GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiT[];
    fILESTORAGEs?: inputs.GetDeviceGroupExtraServiceFILESTORAGE[];
    fIREHOSEs?: inputs.GetDeviceGroupExtraServiceFIREHOSE[];
    fIREWALLs?: inputs.GetDeviceGroupExtraServiceFIREWALL[];
    fRONTDOORS?: inputs.GetDeviceGroupExtraServiceFRONTDOOR[];
    fSXes?: inputs.GetDeviceGroupExtraServiceFSX[];
    gLUEs?: inputs.GetDeviceGroupExtraServiceGLUE[];
    kEYVAULTs?: inputs.GetDeviceGroupExtraServiceKEYVAULT[];
    kINESIS?: inputs.GetDeviceGroupExtraServiceKINESI[];
    kINESISVIdEOs?: inputs.GetDeviceGroupExtraServiceKINESISVIdEO[];
    lAMBDAs?: inputs.GetDeviceGroupExtraServiceLAMBDA[];
    lOADBALANCERS?: inputs.GetDeviceGroupExtraServiceLOADBALANCER[];
    lOGANALYTICSWORKSPACES?: inputs.GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACE[];
    lOGICAPPS?: inputs.GetDeviceGroupExtraServiceLOGICAPP[];
    mEDIACONNECTs?: inputs.GetDeviceGroupExtraServiceMEDIACONNECT[];
    mEDIACONVERTs?: inputs.GetDeviceGroupExtraServiceMEDIACONVERT[];
    mEDIAPACKAGELIVEs?: inputs.GetDeviceGroupExtraServiceMEDIAPACKAGELIfe[];
    mEDIAPACKAGEVODs?: inputs.GetDeviceGroupExtraServiceMEDIAPACKAGEVOD[];
    mEDIASTOREs?: inputs.GetDeviceGroupExtraServiceMEDIASTORE[];
    mEDIATAILORs?: inputs.GetDeviceGroupExtraServiceMEDIATAILOR[];
    mQs?: inputs.GetDeviceGroupExtraServiceMQ[];
    mSKBROKERs?: inputs.GetDeviceGroupExtraServiceMSKBROKER[];
    mSKCLUSTERs?: inputs.GetDeviceGroupExtraServiceMSKCLUSTER[];
    mYSqls?: inputs.GetDeviceGroupExtraServiceMYSql[];
    nATGATEWAIes?: inputs.GetDeviceGroupExtraServiceNATGATEWAIe[];
    nETWORKELBs?: inputs.GetDeviceGroupExtraServiceNETWORKELB[];
    nETWORKINTERFACEs?: inputs.GetDeviceGroupExtraServiceNETWORKINTERFACE[];
    oPSWORKS?: inputs.GetDeviceGroupExtraServiceOPSWORK[];
    pOSTGRESqls?: inputs.GetDeviceGroupExtraServicePOSTGRESql[];
    pUBLICIps?: inputs.GetDeviceGroupExtraServicePUBLICIp[];
    qUEUESTORAGEs?: inputs.GetDeviceGroupExtraServiceQUEUESTORAGE[];
    rDS?: inputs.GetDeviceGroupExtraServiceRD[];
    rECOVERYPROTECTEDITEMs?: inputs.GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEM[];
    rECOVERYSERVICES?: inputs.GetDeviceGroupExtraServiceRECOVERYSERVICE[];
    rEDISCACHEs?: inputs.GetDeviceGroupExtraServiceREDISCACH[];
    rEDSHIFTs?: inputs.GetDeviceGroupExtraServiceREDSHIFT[];
    rOUTE53RESOLVERs?: inputs.GetDeviceGroupExtraServiceROUTE53RESOLVER[];
    rOUTE53s?: inputs.GetDeviceGroupExtraServiceROUTE53[];
    s3s?: inputs.GetDeviceGroupExtraServiceS3[];
    sAGEMAKERs?: inputs.GetDeviceGroupExtraServiceSAGEMAKER[];
    sERVICEBUS?: inputs.GetDeviceGroupExtraServiceSERVICEBU[];
    sES?: inputs.GetDeviceGroupExtraServiceSE[];
    sNS?: inputs.GetDeviceGroupExtraServiceSN[];
    sQS?: inputs.GetDeviceGroupExtraServiceSQ[];
    sTEPFUNCTIONS?: inputs.GetDeviceGroupExtraServiceSTEPFUNCTION[];
    sTORAGEACCOUNTs?: inputs.GetDeviceGroupExtraServiceSTORAGEACCOUNT[];
    sWFACTIVITIes?: inputs.GetDeviceGroupExtraServiceSWFACTIVITy[];
    sWFWORKFLOWs?: inputs.GetDeviceGroupExtraServiceSWFWORKFLOW[];
    sYNAPSEWORKSPACES?: inputs.GetDeviceGroupExtraServiceSYNAPSEWORKSPACE[];
    sqlDATABASEs?: inputs.GetDeviceGroupExtraServiceSqlDATABASE[];
    sqlELASTICPOOLs?: inputs.GetDeviceGroupExtraServiceSqlELASTICPOOL[];
    sqlMANAGEDINSTANCEs?: inputs.GetDeviceGroupExtraServiceSqlMANAGEDINSTANCE[];
    tABLESTORAGEs?: inputs.GetDeviceGroupExtraServiceTABLESTORAGE[];
    tRAFFICMANAGERs?: inputs.GetDeviceGroupExtraServiceTRAFFICMANAGER[];
    tRANSITGATEWAIes?: inputs.GetDeviceGroupExtraServiceTRANSITGATEWAIe[];
    vIRTUALDESKTOPs?: inputs.GetDeviceGroupExtraServiceVIRTUALDESKTOP[];
    vIRTUALMACHINESCALESETVms?: inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVm[];
    vIRTUALMACHINESCALESETs?: inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESET[];
    vIRTUALMACHINEs?: inputs.GetDeviceGroupExtraServiceVIRTUALMACHINE[];
    vIRTUALNETWORKGATEWAIes?: inputs.GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIe[];
    vPNs?: inputs.GetDeviceGroupExtraServiceVPN[];
    wORKSPACEDIRECTORIes?: inputs.GetDeviceGroupExtraServiceWORKSPACEDIRECTORy[];
    wORKSPACEs?: inputs.GetDeviceGroupExtraServiceWORKSPACE[];
}

export interface GetDeviceGroupExtraServiceArgs {
    aPPLICATIONELBs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPLICATIONELBArgs>[]>;
    aPPLICATIONGATEWAIes?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeArgs>[]>;
    aPPLICATIONINSIGHTS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPLICATIONINSIGHTArgs>[]>;
    aPPSERVICEPLANs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPSERVICEPLANArgs>[]>;
    aPPSERVICEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPSERVICEArgs>[]>;
    aPPSTREAMs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPSTREAMArgs>[]>;
    aTHENAs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceATHENAArgs>[]>;
    aUTOMATIONACCOUNTs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAUTOMATIONACCOUNTArgs>[]>;
    aUTOSCALINGs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAUTOSCALINGArgs>[]>;
    apiGATEWAIes?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceApiGATEWAIeArgs>[]>;
    apiMANAGEMENTs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceApiMANAGEMENTArgs>[]>;
    bACKUPPROTECTEDITEMS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMArgs>[]>;
    bLOBSTORAGEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceBLOBSTORAGEArgs>[]>;
    cLOUDFRONTs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCLOUDFRONTArgs>[]>;
    cLOUDSEARCHs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCLOUDSEARCHArgs>[]>;
    cODEBUiLDs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCODEBUiLDArgs>[]>;
    cOGNITIVESEARCHs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOGNITIVESEARCHArgs>[]>;
    cOGNITIVESERVICES?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOGNITIVESERVICEArgs>[]>;
    cOGNITOs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOGNITOArgs>[]>;
    cOSMOSDBs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOSMOSDBArgs>[]>;
    dATAFACTORIes?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDATAFACTORyArgs>[]>;
    dIRECTCONNECTs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDIRECTCONNECTArgs>[]>;
    dMSREPLICATIONTASKS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDMSREPLICATIONTASKArgs>[]>;
    dMSREPLICATIONs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDMSREPLICATIONArgs>[]>;
    dOCDBs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDOCDBArgs>[]>;
    dYNAMODBs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDYNAMODBArgs>[]>;
    eBS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEBArgs>[]>;
    eC2s?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEC2Args>[]>;
    eCS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceECArgs>[]>;
    eFS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEFArgs>[]>;
    eLASTICACHEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICACHArgs>[]>;
    eLASTICBEANSTALKs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICBEANSTALKArgs>[]>;
    eLASTICSEARCHs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICSEARCHArgs>[]>;
    eLASTICTRANSCODERs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICTRANSCODERArgs>[]>;
    eLBs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELBArgs>[]>;
    eMRs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEMRArgs>[]>;
    eVENTBRIdGEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEVENTBRIdGEArgs>[]>;
    eVENTHUBs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEVENTHUBArgs>[]>;
    eXPRESSROUTECIRCUiTs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTArgs>[]>;
    fILESTORAGEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFILESTORAGEArgs>[]>;
    fIREHOSEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFIREHOSEArgs>[]>;
    fIREWALLs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFIREWALLArgs>[]>;
    fRONTDOORS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFRONTDOORArgs>[]>;
    fSXes?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFSXArgs>[]>;
    gLUEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceGLUEArgs>[]>;
    kEYVAULTs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceKEYVAULTArgs>[]>;
    kINESIS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceKINESIArgs>[]>;
    kINESISVIdEOs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceKINESISVIdEOArgs>[]>;
    lAMBDAs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLAMBDAArgs>[]>;
    lOADBALANCERS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLOADBALANCERArgs>[]>;
    lOGANALYTICSWORKSPACES?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACEArgs>[]>;
    lOGICAPPS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLOGICAPPArgs>[]>;
    mEDIACONNECTs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIACONNECTArgs>[]>;
    mEDIACONVERTs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIACONVERTArgs>[]>;
    mEDIAPACKAGELIVEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIAPACKAGELIfeArgs>[]>;
    mEDIAPACKAGEVODs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIAPACKAGEVODArgs>[]>;
    mEDIASTOREs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIASTOREArgs>[]>;
    mEDIATAILORs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIATAILORArgs>[]>;
    mQs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMQArgs>[]>;
    mSKBROKERs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMSKBROKERArgs>[]>;
    mSKCLUSTERs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMSKCLUSTERArgs>[]>;
    mYSqls?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMYSqlArgs>[]>;
    nATGATEWAIes?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceNATGATEWAIeArgs>[]>;
    nETWORKELBs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceNETWORKELBArgs>[]>;
    nETWORKINTERFACEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceNETWORKINTERFACEArgs>[]>;
    oPSWORKS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceOPSWORKArgs>[]>;
    pOSTGRESqls?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServicePOSTGRESqlArgs>[]>;
    pUBLICIps?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServicePUBLICIpArgs>[]>;
    qUEUESTORAGEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceQUEUESTORAGEArgs>[]>;
    rDS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceRDArgs>[]>;
    rECOVERYPROTECTEDITEMs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMArgs>[]>;
    rECOVERYSERVICES?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceRECOVERYSERVICEArgs>[]>;
    rEDISCACHEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceREDISCACHArgs>[]>;
    rEDSHIFTs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceREDSHIFTArgs>[]>;
    rOUTE53RESOLVERs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceROUTE53RESOLVERArgs>[]>;
    rOUTE53s?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceROUTE53Args>[]>;
    s3s?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceS3Args>[]>;
    sAGEMAKERs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSAGEMAKERArgs>[]>;
    sERVICEBUS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSERVICEBUArgs>[]>;
    sES?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSEArgs>[]>;
    sNS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSNArgs>[]>;
    sQS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSQArgs>[]>;
    sTEPFUNCTIONS?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSTEPFUNCTIONArgs>[]>;
    sTORAGEACCOUNTs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSTORAGEACCOUNTArgs>[]>;
    sWFACTIVITIes?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSWFACTIVITyArgs>[]>;
    sWFWORKFLOWs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSWFWORKFLOWArgs>[]>;
    sYNAPSEWORKSPACES?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSYNAPSEWORKSPACEArgs>[]>;
    sqlDATABASEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSqlDATABASEArgs>[]>;
    sqlELASTICPOOLs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSqlELASTICPOOLArgs>[]>;
    sqlMANAGEDINSTANCEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSqlMANAGEDINSTANCEArgs>[]>;
    tABLESTORAGEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceTABLESTORAGEArgs>[]>;
    tRAFFICMANAGERs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceTRAFFICMANAGERArgs>[]>;
    tRANSITGATEWAIes?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceTRANSITGATEWAIeArgs>[]>;
    vIRTUALDESKTOPs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALDESKTOPArgs>[]>;
    vIRTUALMACHINESCALESETVms?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmArgs>[]>;
    vIRTUALMACHINESCALESETs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETArgs>[]>;
    vIRTUALMACHINEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALMACHINEArgs>[]>;
    vIRTUALNETWORKGATEWAIes?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeArgs>[]>;
    vPNs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVPNArgs>[]>;
    wORKSPACEDIRECTORIes?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceWORKSPACEDIRECTORyArgs>[]>;
    wORKSPACEs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceWORKSPACEArgs>[]>;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONELB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceAPPLICATIONELBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONELBArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPLICATIONELBTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONELBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONELBTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONINSIGHT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceAPPLICATIONINSIGHTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONINSIGHTArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPLICATIONINSIGHTTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONINSIGHTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONINSIGHTTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceAPPSERVICE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceAPPSERVICENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceAPPSERVICETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSERVICEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPSERVICENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPSERVICETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPSERVICENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceAPPSERVICENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSERVICENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPSERVICENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPSERVICENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSERVICENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPSERVICEPLAN {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceAPPSERVICEPLANTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSERVICEPLANArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPSERVICEPLANTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPSERVICEPLANTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAPPSERVICEPLANTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceAPPSERVICETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAPPSERVICETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceAPPSTREAM {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceAPPSTREAMNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceAPPSTREAMTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSTREAMArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPSTREAMNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPSTREAMTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPSTREAMNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceAPPSTREAMNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSTREAMNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAPPSTREAMNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPSTREAMNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSTREAMNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAPPSTREAMTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAPPSTREAMTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceATHENA {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceATHENANormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceATHENATag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceATHENAArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceATHENANormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceATHENATagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceATHENANormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceATHENANormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceATHENANormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceATHENANormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceATHENANormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceATHENANormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceATHENATag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceATHENATagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceAUTOMATIONACCOUNT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceAUTOMATIONACCOUNTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAUTOMATIONACCOUNTArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAUTOMATIONACCOUNTTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAUTOMATIONACCOUNTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAUTOMATIONACCOUNTTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceAUTOSCALING {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceAUTOSCALINGTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAUTOSCALINGArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAUTOSCALINGTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceAUTOSCALINGTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAUTOSCALINGTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceApiGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceApiGATEWAIeTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceApiGATEWAIeArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceApiGATEWAIeTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceApiGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceApiGATEWAIeTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceApiMANAGEMENT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceApiMANAGEMENTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceApiMANAGEMENTArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceApiMANAGEMENTTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceApiMANAGEMENTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceApiMANAGEMENTTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceBACKUPPROTECTEDITEM {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceBLOBSTORAGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceBLOBSTORAGETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceBLOBSTORAGEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceBLOBSTORAGETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceBLOBSTORAGETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceBLOBSTORAGETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceCLOUDFRONT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceCLOUDFRONTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceCLOUDFRONTArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCLOUDFRONTTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCLOUDFRONTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceCLOUDFRONTTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceCLOUDSEARCH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceCLOUDSEARCHTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceCLOUDSEARCHArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCLOUDSEARCHTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCLOUDSEARCHTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceCLOUDSEARCHTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceCODEBUiLD {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceCODEBUiLDNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceCODEBUiLDTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceCODEBUiLDArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCODEBUiLDNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCODEBUiLDTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCODEBUiLDNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceCODEBUiLDNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceCODEBUiLDNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCODEBUiLDNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCODEBUiLDNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceCODEBUiLDNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCODEBUiLDTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceCODEBUiLDTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESEARCH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceCOGNITIVESEARCHTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESEARCHArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOGNITIVESEARCHTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESEARCHTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESEARCHTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESERVICE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceCOGNITIVESERVICETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESERVICEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOGNITIVESERVICETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESERVICETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESERVICETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceCOGNITO {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceCOGNITONormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceCOGNITOTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITOArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOGNITONormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOGNITOTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCOGNITONormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceCOGNITONormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITONormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOGNITONormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCOGNITONormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITONormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCOGNITOTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceCOGNITOTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceCOSMOSDB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceCOSMOSDBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceCOSMOSDBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceCOSMOSDBArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOSMOSDBNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOSMOSDBTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCOSMOSDBNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceCOSMOSDBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceCOSMOSDBNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceCOSMOSDBNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCOSMOSDBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceCOSMOSDBNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceCOSMOSDBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceCOSMOSDBTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceDATAFACTORy {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceDATAFACTORyNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceDATAFACTORyTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceDATAFACTORyArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDATAFACTORyNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDATAFACTORyTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDATAFACTORyNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceDATAFACTORyNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceDATAFACTORyNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDATAFACTORyNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDATAFACTORyNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceDATAFACTORyNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDATAFACTORyTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceDATAFACTORyTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceDIRECTCONNECT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceDIRECTCONNECTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceDIRECTCONNECTArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDIRECTCONNECTTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDIRECTCONNECTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceDIRECTCONNECTTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATION {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceDMSREPLICATIONTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDMSREPLICATIONTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTASK {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceDMSREPLICATIONTASKTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTASKArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDMSREPLICATIONTASKTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTASKTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTASKTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceDOCDB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceDOCDBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceDOCDBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceDOCDBArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDOCDBNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDOCDBTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDOCDBNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceDOCDBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceDOCDBNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDOCDBNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDOCDBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceDOCDBNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDOCDBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceDOCDBTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceDYNAMODB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceDYNAMODBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceDYNAMODBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceDYNAMODBArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDYNAMODBNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDYNAMODBTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDYNAMODBNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceDYNAMODBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceDYNAMODBNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceDYNAMODBNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDYNAMODBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceDYNAMODBNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceDYNAMODBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceDYNAMODBTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceEB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceEBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceEBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEBArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEBNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEBTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEBNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceEBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceEBNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEBNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceEBNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceEBTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceEC {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceECNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceECTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceECArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceECNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceECTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEC2 {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceEC2NormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceEC2Tag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEC2Args {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEC2NormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEC2TagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEC2NormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceEC2NormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceEC2NormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEC2NormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEC2NormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceEC2NormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEC2Tag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceEC2TagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceECNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceECNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceECNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceECNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceECNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceECNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceECTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceECTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceEF {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceEFNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceEFTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEFArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEFNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEFTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEFNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceEFNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceEFNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEFNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEFNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceEFNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEFTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceEFTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceELASTICACH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceELASTICACHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceELASTICACHTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICACHArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICACHNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICACHTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELASTICACHNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceELASTICACHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICACHNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICACHNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELASTICACHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICACHNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELASTICACHTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceELASTICACHTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceELASTICBEANSTALK {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceELASTICBEANSTALKTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICBEANSTALKArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICBEANSTALKTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELASTICBEANSTALKTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceELASTICBEANSTALKTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceELASTICSEARCH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceELASTICSEARCHTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICSEARCHArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICSEARCHTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELASTICSEARCHTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceELASTICSEARCHTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceELASTICTRANSCODER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceELASTICTRANSCODERTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICTRANSCODERArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICTRANSCODERTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELASTICTRANSCODERTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceELASTICTRANSCODERTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceELB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceELBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceELBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceELBArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELBNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELBTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELBNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceELBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceELBNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceELBNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceELBNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceELBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceELBTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceEMR {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceEMRNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceEMRTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEMRArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEMRNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEMRTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEMRNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceEMRNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceEMRNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEMRNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEMRNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceEMRNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEMRTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceEMRTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceEVENTBRIdGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceEVENTBRIdGETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEVENTBRIdGEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEVENTBRIdGETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEVENTBRIdGETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceEVENTBRIdGETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceEVENTHUB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceEVENTHUBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceEVENTHUBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEVENTHUBArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEVENTHUBNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEVENTHUBTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEVENTHUBNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceEVENTHUBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceEVENTHUBNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEVENTHUBNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEVENTHUBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceEVENTHUBNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEVENTHUBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceEVENTHUBTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceFILESTORAGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceFILESTORAGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceFILESTORAGETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceFILESTORAGEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFILESTORAGENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFILESTORAGETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFILESTORAGENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceFILESTORAGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceFILESTORAGENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFILESTORAGENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFILESTORAGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceFILESTORAGENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFILESTORAGETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceFILESTORAGETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceFIREHOSE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceFIREHOSENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceFIREHOSETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceFIREHOSEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFIREHOSENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFIREHOSETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFIREHOSENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceFIREHOSENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceFIREHOSENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFIREHOSENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFIREHOSENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceFIREHOSENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFIREHOSETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceFIREHOSETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceFIREWALL {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceFIREWALLNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceFIREWALLTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceFIREWALLArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFIREWALLNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFIREWALLTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFIREWALLNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceFIREWALLNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceFIREWALLNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFIREWALLNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFIREWALLNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceFIREWALLNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFIREWALLTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceFIREWALLTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceFRONTDOOR {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceFRONTDOORNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceFRONTDOORTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceFRONTDOORArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFRONTDOORNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFRONTDOORTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFRONTDOORNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceFRONTDOORNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceFRONTDOORNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFRONTDOORNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFRONTDOORNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceFRONTDOORNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFRONTDOORTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceFRONTDOORTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceFSX {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceFSXNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceFSXTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceFSXArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFSXNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFSXTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFSXNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceFSXNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceFSXNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceFSXNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFSXNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceFSXNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceFSXTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceFSXTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceGLUE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceGLUENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceGLUETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceGLUEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceGLUENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceGLUETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceGLUENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceGLUENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceGLUENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceGLUENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceGLUENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceGLUENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceGLUETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceGLUETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceKEYVAULT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceKEYVAULTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceKEYVAULTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceKEYVAULTArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceKEYVAULTNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceKEYVAULTTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceKEYVAULTNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceKEYVAULTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceKEYVAULTNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceKEYVAULTNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceKEYVAULTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceKEYVAULTNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceKEYVAULTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceKEYVAULTTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceKINESI {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceKINESINormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceKINESITag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceKINESIArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceKINESINormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceKINESITagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceKINESINormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceKINESINormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceKINESINormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceKINESINormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceKINESINormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceKINESINormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceKINESISVIdEO {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceKINESISVIdEONormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceKINESISVIdEOTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceKINESISVIdEOArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceKINESISVIdEONormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceKINESISVIdEOTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceKINESISVIdEONormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceKINESISVIdEONormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceKINESISVIdEONormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceKINESISVIdEONormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceKINESISVIdEONormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceKINESISVIdEONormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceKINESISVIdEOTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceKINESISVIdEOTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceKINESITag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceKINESITagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceLAMBDA {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceLAMBDANormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceLAMBDATag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceLAMBDAArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLAMBDANormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLAMBDATagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceLAMBDANormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceLAMBDANormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceLAMBDANormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLAMBDANormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceLAMBDANormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceLAMBDANormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceLAMBDATag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceLAMBDATagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceLOADBALANCER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceLOADBALANCERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceLOADBALANCERTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceLOADBALANCERArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLOADBALANCERNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLOADBALANCERTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceLOADBALANCERNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceLOADBALANCERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceLOADBALANCERNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLOADBALANCERNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceLOADBALANCERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceLOADBALANCERNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceLOADBALANCERTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceLOADBALANCERTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceLOGICAPP {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceLOGICAPPNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceLOGICAPPTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceLOGICAPPArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLOGICAPPNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLOGICAPPTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceLOGICAPPNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceLOGICAPPNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceLOGICAPPNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceLOGICAPPNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceLOGICAPPNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceLOGICAPPNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceLOGICAPPTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceLOGICAPPTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceMEDIACONNECT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceMEDIACONNECTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIACONNECTArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIACONNECTTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIACONNECTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMEDIACONNECTTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceMEDIACONVERT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceMEDIACONVERTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIACONVERTArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIACONVERTTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIACONVERTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMEDIACONVERTTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGELIfe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceMEDIAPACKAGELIfeTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGELIfeArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIAPACKAGELIfeTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGELIfeTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGELIfeTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGEVOD {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceMEDIAPACKAGEVODTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGEVODArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIAPACKAGEVODTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGEVODTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGEVODTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceMEDIASTORE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceMEDIASTORENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceMEDIASTORETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIASTOREArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIASTORENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIASTORETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIASTORENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceMEDIASTORENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIASTORENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIASTORENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIASTORENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIASTORENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIASTORETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMEDIASTORETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceMEDIATAILOR {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceMEDIATAILORNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceMEDIATAILORTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIATAILORArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIATAILORNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIATAILORTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIATAILORNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceMEDIATAILORNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIATAILORNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMEDIATAILORNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIATAILORNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIATAILORNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMEDIATAILORTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMEDIATAILORTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceMQ {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceMQNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceMQTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMQArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMQNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMQTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMQNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceMQNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMQNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMQNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMQNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMQNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMQTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMQTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceMSKBROKER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceMSKBROKERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceMSKBROKERTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMSKBROKERArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMSKBROKERNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMSKBROKERTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMSKBROKERNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceMSKBROKERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMSKBROKERNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMSKBROKERNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMSKBROKERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMSKBROKERNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMSKBROKERTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMSKBROKERTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceMSKCLUSTER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceMSKCLUSTERTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMSKCLUSTERArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMSKCLUSTERTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMSKCLUSTERTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMSKCLUSTERTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceMYSql {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceMYSqlNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceMYSqlTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMYSqlArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMYSqlNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMYSqlTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMYSqlNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceMYSqlNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMYSqlNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceMYSqlNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMYSqlNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMYSqlNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceMYSqlTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMYSqlTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceNATGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceNATGATEWAIeTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceNATGATEWAIeArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceNATGATEWAIeTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceNATGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceNATGATEWAIeTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceNETWORKELB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceNETWORKELBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceNETWORKELBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceNETWORKELBArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceNETWORKELBNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceNETWORKELBTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceNETWORKELBNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceNETWORKELBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceNETWORKELBNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceNETWORKELBNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceNETWORKELBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceNETWORKELBNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceNETWORKELBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceNETWORKELBTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceNETWORKINTERFACE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceNETWORKINTERFACETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceNETWORKINTERFACEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceNETWORKINTERFACETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceNETWORKINTERFACETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceNETWORKINTERFACETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceOPSWORK {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceOPSWORKNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceOPSWORKTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceOPSWORKArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceOPSWORKNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceOPSWORKTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceOPSWORKNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceOPSWORKNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceOPSWORKNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceOPSWORKNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceOPSWORKNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceOPSWORKNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceOPSWORKTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceOPSWORKTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServicePOSTGRESql {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServicePOSTGRESqlNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServicePOSTGRESqlTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServicePOSTGRESqlArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServicePOSTGRESqlNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServicePOSTGRESqlTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServicePOSTGRESqlNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServicePOSTGRESqlNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServicePOSTGRESqlNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServicePOSTGRESqlNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServicePOSTGRESqlNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServicePOSTGRESqlNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServicePOSTGRESqlTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServicePOSTGRESqlTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServicePUBLICIp {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServicePUBLICIpNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServicePUBLICIpTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServicePUBLICIpArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServicePUBLICIpNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServicePUBLICIpTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServicePUBLICIpNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServicePUBLICIpNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServicePUBLICIpNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServicePUBLICIpNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServicePUBLICIpNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServicePUBLICIpNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServicePUBLICIpTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServicePUBLICIpTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceQUEUESTORAGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceQUEUESTORAGETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceQUEUESTORAGEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceQUEUESTORAGETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceQUEUESTORAGETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceQUEUESTORAGETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceRD {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceRDNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceRDTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceRDArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceRDNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceRDTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceRDNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceRDNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceRDNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceRDNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceRDNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceRDNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceRDTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceRDTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEM {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceRECOVERYSERVICE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceRECOVERYSERVICETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceRECOVERYSERVICEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceRECOVERYSERVICETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceRECOVERYSERVICETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceRECOVERYSERVICETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceREDISCACH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceREDISCACHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceREDISCACHTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceREDISCACHArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceREDISCACHNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceREDISCACHTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceREDISCACHNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceREDISCACHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceREDISCACHNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceREDISCACHNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceREDISCACHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceREDISCACHNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceREDISCACHTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceREDISCACHTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceREDSHIFT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceREDSHIFTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceREDSHIFTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceREDSHIFTArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceREDSHIFTNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceREDSHIFTTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceREDSHIFTNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceREDSHIFTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceREDSHIFTNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceREDSHIFTNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceREDSHIFTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceREDSHIFTNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceREDSHIFTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceREDSHIFTTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceROUTE53 {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceROUTE53NormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceROUTE53Tag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceROUTE53Args {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceROUTE53NormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceROUTE53TagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceROUTE53NormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceROUTE53NormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceROUTE53NormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceROUTE53NormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceROUTE53NormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceROUTE53NormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceROUTE53RESOLVER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceROUTE53RESOLVERTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceROUTE53RESOLVERArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceROUTE53RESOLVERTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceROUTE53RESOLVERTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceROUTE53RESOLVERTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceROUTE53Tag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceROUTE53TagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceS3 {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceS3NormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceS3Tag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceS3Args {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceS3NormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceS3TagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceS3NormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceS3NormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceS3NormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceS3NormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceS3NormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceS3NormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceS3Tag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceS3TagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceSAGEMAKER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceSAGEMAKERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceSAGEMAKERTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSAGEMAKERArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSAGEMAKERNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSAGEMAKERTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSAGEMAKERNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceSAGEMAKERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSAGEMAKERNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSAGEMAKERNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSAGEMAKERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSAGEMAKERNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSAGEMAKERTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSAGEMAKERTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceSE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceSENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceSETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceSENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSERVICEBU {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceSERVICEBUNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceSERVICEBUTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSERVICEBUArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSERVICEBUNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSERVICEBUTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSERVICEBUNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceSERVICEBUNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSERVICEBUNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSERVICEBUNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSERVICEBUNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSERVICEBUNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSERVICEBUTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSERVICEBUTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceSETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceSN {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceSNNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceSNTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSNArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSNNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSNTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSNNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceSNNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSNNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSNNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSNNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSNNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSNTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSNTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceSQ {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceSQNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceSQTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSQArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSQNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSQTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSQNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceSQNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSQNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSQNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSQNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSQNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSQTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSQTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceSTEPFUNCTION {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceSTEPFUNCTIONTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSTEPFUNCTIONArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSTEPFUNCTIONTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSTEPFUNCTIONTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSTEPFUNCTIONTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceSTORAGEACCOUNT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceSTORAGEACCOUNTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSTORAGEACCOUNTArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSTORAGEACCOUNTTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSTORAGEACCOUNTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSTORAGEACCOUNTTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceSWFACTIVITy {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceSWFACTIVITyTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSWFACTIVITyArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSWFACTIVITyTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSWFACTIVITyTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSWFACTIVITyTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceSWFWORKFLOW {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceSWFWORKFLOWTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSWFWORKFLOWArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSWFWORKFLOWTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSWFWORKFLOWTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSWFWORKFLOWTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceSYNAPSEWORKSPACE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceSYNAPSEWORKSPACETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSYNAPSEWORKSPACEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSYNAPSEWORKSPACETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSYNAPSEWORKSPACETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSYNAPSEWORKSPACETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceSqlDATABASE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceSqlDATABASENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceSqlDATABASETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSqlDATABASEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSqlDATABASENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSqlDATABASETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSqlDATABASENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceSqlDATABASENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSqlDATABASENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSqlDATABASENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSqlDATABASENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSqlDATABASENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSqlDATABASETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSqlDATABASETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceSqlELASTICPOOL {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceSqlELASTICPOOLTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSqlELASTICPOOLArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSqlELASTICPOOLTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSqlELASTICPOOLTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSqlELASTICPOOLTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceSqlMANAGEDINSTANCE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceSqlMANAGEDINSTANCETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSqlMANAGEDINSTANCEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSqlMANAGEDINSTANCETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceSqlMANAGEDINSTANCETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSqlMANAGEDINSTANCETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceTABLESTORAGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceTABLESTORAGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceTABLESTORAGETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceTABLESTORAGEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceTABLESTORAGENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceTABLESTORAGETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceTABLESTORAGENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceTABLESTORAGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceTABLESTORAGENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceTABLESTORAGENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceTABLESTORAGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceTABLESTORAGENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceTABLESTORAGETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceTABLESTORAGETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceTRAFFICMANAGER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceTRAFFICMANAGERTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceTRAFFICMANAGERArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceTRAFFICMANAGERTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceTRAFFICMANAGERTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceTRAFFICMANAGERTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceTRANSITGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceTRANSITGATEWAIeTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceTRANSITGATEWAIeArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceTRANSITGATEWAIeTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceTRANSITGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceTRANSITGATEWAIeTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceVIRTUALDESKTOP {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceVIRTUALDESKTOPTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALDESKTOPArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALDESKTOPTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALDESKTOPTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceVIRTUALDESKTOPTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceVIRTUALMACHINETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALMACHINETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESET {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVm {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceVPN {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceVPNNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceVPNTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceVPNArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVPNNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVPNTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVPNNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceVPNNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceVPNNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceVPNNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVPNNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceVPNNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceVPNTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceVPNTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceWORKSPACE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceWORKSPACENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceWORKSPACETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceWORKSPACEArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceWORKSPACENormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceWORKSPACETagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceWORKSPACEDIRECTORy {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: inputs.GetDeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: inputs.GetDeviceGroupExtraServiceWORKSPACEDIRECTORyTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceWORKSPACEDIRECTORyArgs {
    customNSPSchedule?: pulumi.Input<string>;
    deadOperation?: pulumi.Input<string>;
    deviceDisplayNameTemplate?: pulumi.Input<string>;
    disableStopTerminateHostMonitor?: pulumi.Input<boolean>;
    disableTerminatedHostAlerting?: pulumi.Input<boolean>;
    monitoringRegionInfos?: pulumi.Input<pulumi.Input<string>[]>;
    monitoringRegions?: pulumi.Input<pulumi.Input<string>[]>;
    nameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    normalCollectorConfigs?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfigArgs>[]>;
    selectAll?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceWORKSPACEDIRECTORyTagArgs>[]>;
    useDefault: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceWORKSPACEDIRECTORyTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceWORKSPACEDIRECTORyTagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupExtraServiceWORKSPACENormalCollectorConfig {
    collectors?: inputs.GetDeviceGroupExtraServiceWORKSPACENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceWORKSPACENormalCollectorConfigArgs {
    collectors?: pulumi.Input<pulumi.Input<inputs.GetDeviceGroupExtraServiceWORKSPACENormalCollectorConfigCollectorArgs>[]>;
    enabled: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceWORKSPACENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceWORKSPACENormalCollectorConfigCollectorArgs {
    appliesTo: pulumi.Input<string>;
    autoBalancedCollectorGroupId: pulumi.Input<number>;
    collectorId: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    usePublicIp: pulumi.Input<boolean>;
}

export interface GetDeviceGroupExtraServiceWORKSPACETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceWORKSPACETagArgs {
    name: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceGroupGcpTestResult {
    detailLink?: string;
    noPermissionServices?: string[];
    nonPermissionErrors?: string[];
}

export interface GetDeviceGroupGcpTestResultArgs {
    detailLink?: pulumi.Input<string>;
    noPermissionServices?: pulumi.Input<pulumi.Input<string>[]>;
    nonPermissionErrors?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDeviceGroupSubGroup {
    appliesTo: string;
    awsRegionsInfo: string;
    azureRegionsInfo: string;
    description: string;
    fullPath: string;
    gcpRegionsInfo: string;
    groupType: string;
    id: number;
    name: string;
    numOfDirectDevices: number;
    numOfDirectSubGroups: number;
    numOfHosts: number;
    userPermission: string;
}

export interface GetDeviceGroupSubGroupArgs {
    appliesTo: pulumi.Input<string>;
    awsRegionsInfo: pulumi.Input<string>;
    azureRegionsInfo: pulumi.Input<string>;
    description: pulumi.Input<string>;
    fullPath: pulumi.Input<string>;
    gcpRegionsInfo: pulumi.Input<string>;
    groupType: pulumi.Input<string>;
    id: pulumi.Input<number>;
    name: pulumi.Input<string>;
    numOfDirectDevices: pulumi.Input<number>;
    numOfDirectSubGroups: pulumi.Input<number>;
    numOfHosts: pulumi.Input<number>;
    userPermission: pulumi.Input<string>;
}

export interface GetDeviceInheritedProperty {
    name: string;
    value: string;
}

export interface GetDeviceInheritedPropertyArgs {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetDeviceSystemProperty {
    name: string;
    value: string;
}

export interface GetDeviceSystemPropertyArgs {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetEscalationChainCcDestination {
    addr: string;
    contact: string;
    method: string;
    type: string;
}

export interface GetEscalationChainCcDestinationArgs {
    addr: pulumi.Input<string>;
    contact: pulumi.Input<string>;
    method: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetEscalationChainDestination {
    periods: inputs.GetEscalationChainDestinationPeriod[];
    stages: inputs.GetEscalationChainDestinationStage[][];
    type: string;
}

export interface GetEscalationChainDestinationArgs {
    periods: pulumi.Input<pulumi.Input<inputs.GetEscalationChainDestinationPeriodArgs>[]>;
    stages: pulumi.Input<pulumi.Input<pulumi.Input<inputs.GetEscalationChainDestinationStageArgs>[]>[]>;
    type: pulumi.Input<string>;
}

export interface GetEscalationChainDestinationPeriod {
    endMinutes: number;
    startMinutes: number;
    timezone: string;
    weekDays: number[];
}

export interface GetEscalationChainDestinationPeriodArgs {
    endMinutes: pulumi.Input<number>;
    startMinutes: pulumi.Input<number>;
    timezone: pulumi.Input<string>;
    weekDays: pulumi.Input<pulumi.Input<number>[]>;
}

export interface GetEscalationChainDestinationStage {
    addr: string;
    contact: string;
    method: string;
    type: string;
}

export interface GetEscalationChainDestinationStageArgs {
    addr: pulumi.Input<string>;
    contact: pulumi.Input<string>;
    method: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetWebsiteGroupProperty {
    name: string;
    value: string;
}

export interface GetWebsiteGroupPropertyArgs {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetWebsiteStep {
    auths: inputs.GetWebsiteStepAuth[];
    description: string;
    enable: boolean;
    followRedirection: boolean;
    fullpageLoad: boolean;
    httpBody: string;
    httpHeaders: string;
    httpMethod: string;
    httpVersion: string;
    invertMatch: boolean;
    keyword: string;
    label: string;
    matchType: string;
    name: string;
    path: string;
    postDataEditType: string;
    reqScript: string;
    reqType: string;
    requireAuth: boolean;
    respScript: string;
    respType: string;
    schema: string;
    statusCode: string;
    timeout: number;
    type: string;
    url: string;
    useDefaultRoot: boolean;
}

export interface GetWebsiteStepArgs {
    auths: pulumi.Input<pulumi.Input<inputs.GetWebsiteStepAuthArgs>[]>;
    description: pulumi.Input<string>;
    enable: pulumi.Input<boolean>;
    followRedirection: pulumi.Input<boolean>;
    fullpageLoad: pulumi.Input<boolean>;
    httpBody: pulumi.Input<string>;
    httpHeaders: pulumi.Input<string>;
    httpMethod: pulumi.Input<string>;
    httpVersion: pulumi.Input<string>;
    invertMatch: pulumi.Input<boolean>;
    keyword: pulumi.Input<string>;
    label: pulumi.Input<string>;
    matchType: pulumi.Input<string>;
    name: pulumi.Input<string>;
    path: pulumi.Input<string>;
    postDataEditType: pulumi.Input<string>;
    reqScript: pulumi.Input<string>;
    reqType: pulumi.Input<string>;
    requireAuth: pulumi.Input<boolean>;
    respScript: pulumi.Input<string>;
    respType: pulumi.Input<string>;
    schema: pulumi.Input<string>;
    statusCode: pulumi.Input<string>;
    timeout: pulumi.Input<number>;
    type: pulumi.Input<string>;
    url: pulumi.Input<string>;
    useDefaultRoot: pulumi.Input<boolean>;
}

export interface GetWebsiteStepAuth {
    domain: string;
    password: string;
    type: string;
    userName: string;
}

export interface GetWebsiteStepAuthArgs {
    domain: pulumi.Input<string>;
    password: pulumi.Input<string>;
    type: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}

export interface GetWebsiteTestLocation {
    all?: boolean;
    collectorIds?: number[];
    collectors?: inputs.GetWebsiteTestLocationCollector[];
    smgIds?: number[];
}

export interface GetWebsiteTestLocationArgs {
    all?: pulumi.Input<boolean>;
    collectorIds?: pulumi.Input<pulumi.Input<number>[]>;
    collectors?: pulumi.Input<pulumi.Input<inputs.GetWebsiteTestLocationCollectorArgs>[]>;
    smgIds?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface GetWebsiteTestLocationCollector {
    collectorGroupId: number;
    collectorGroupName: string;
    description: string;
    hostname: string;
    id: number;
    status: string;
}

export interface GetWebsiteTestLocationCollectorArgs {
    collectorGroupId: pulumi.Input<number>;
    collectorGroupName: pulumi.Input<string>;
    description: pulumi.Input<string>;
    hostname: pulumi.Input<string>;
    id: pulumi.Input<number>;
    status: pulumi.Input<string>;
}

export interface WebsiteGroupProperty {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface WebsiteStep {
    auths: pulumi.Input<pulumi.Input<inputs.WebsiteStepAuth>[]>;
    description: pulumi.Input<string>;
    enable: pulumi.Input<boolean>;
    followRedirection: pulumi.Input<boolean>;
    fullpageLoad: pulumi.Input<boolean>;
    httpBody: pulumi.Input<string>;
    httpHeaders: pulumi.Input<string>;
    httpMethod: pulumi.Input<string>;
    httpVersion: pulumi.Input<string>;
    invertMatch: pulumi.Input<boolean>;
    keyword: pulumi.Input<string>;
    label: pulumi.Input<string>;
    matchType: pulumi.Input<string>;
    name: pulumi.Input<string>;
    path: pulumi.Input<string>;
    postDataEditType: pulumi.Input<string>;
    reqScript: pulumi.Input<string>;
    reqType: pulumi.Input<string>;
    requireAuth: pulumi.Input<boolean>;
    respScript: pulumi.Input<string>;
    respType: pulumi.Input<string>;
    schema: pulumi.Input<string>;
    statusCode: pulumi.Input<string>;
    timeout: pulumi.Input<number>;
    type: pulumi.Input<string>;
    url: pulumi.Input<string>;
    useDefaultRoot: pulumi.Input<boolean>;
}

export interface WebsiteStepAuth {
    domain: pulumi.Input<string>;
    password: pulumi.Input<string>;
    type: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}

export interface WebsiteTestLocation {
    all: pulumi.Input<boolean>;
    collectorIds: pulumi.Input<pulumi.Input<number>[]>;
    collectors: pulumi.Input<pulumi.Input<inputs.WebsiteTestLocationCollector>[]>;
    smgIds: pulumi.Input<pulumi.Input<number>[]>;
}

export interface WebsiteTestLocationCollector {
    collectorGroupId: pulumi.Input<number>;
    collectorGroupName: pulumi.Input<string>;
    description: pulumi.Input<string>;
    hostname: pulumi.Input<string>;
    id: pulumi.Input<number>;
    status: pulumi.Input<string>;
}
