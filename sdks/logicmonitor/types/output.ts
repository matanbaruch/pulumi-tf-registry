// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface CollectorAutomaticUpgradeInfo {
    createdBy: string;
    dayOfWeek: string;
    description?: string;
    hour: number;
    level: string;
    minute: number;
    occurrence: string;
    timezone?: string;
    type: string;
    version: string;
}

export interface CollectorCustomProperty {
    name: string;
    value: string;
}

export interface CollectorGroupCustomProperty {
    name: string;
    value: string;
}

export interface CollectorNextUpgradeInfo {
    majorVersion: number;
    mandatory: boolean;
    minorVersion: number;
    stable: boolean;
    upgradeTime: string;
    upgradeTimeEpoch: number;
}

export interface CollectorOnetimeDowngradeInfo {
    createdBy: string;
    description?: string;
    endEpoch: number;
    level: string;
    majorVersion: number;
    minorVersion: number;
    startEpoch: number;
    timezone?: string;
    type: string;
}

export interface CollectorOnetimeUpgradeInfo {
    createdBy: string;
    description?: string;
    endEpoch: number;
    level: string;
    majorVersion: number;
    minorVersion: number;
    startEpoch: number;
    timezone?: string;
    type: string;
}

export interface DashboardGroupDashboard {
    id: number;
    name: string;
    sharable: boolean;
    userPermission: string;
}

export interface DashboardGroupWidgetToken {
    inheritLists: outputs.DashboardGroupWidgetTokenInheritList[];
    name: string;
    type: string;
    value: string;
}

export interface DashboardGroupWidgetTokenInheritList {
    fullpath: string;
    value: string;
}

export interface DashboardWidgetToken {
    inheritLists: outputs.DashboardWidgetTokenInheritList[];
    name: string;
    type: string;
    value: string;
}

export interface DashboardWidgetTokenInheritList {
    fullpath: string;
    value: string;
}

export interface DatasourceAutoDiscoveryConfig {
    dataSourceName: string;
    deleteInactiveInstance?: boolean;
    disableInstance?: boolean;
    filters?: outputs.DatasourceAutoDiscoveryConfigFilter[];
    instanceAutoGroupMethod?: string;
    instanceAutoGroupMethodParams?: string;
    methods: outputs.DatasourceAutoDiscoveryConfigMethod[];
    persistentInstance?: boolean;
    scheduleInterval?: number;
}

export interface DatasourceAutoDiscoveryConfigFilter {
    attribute: string;
    comment: string;
    operation: string;
    value: string;
}

export interface DatasourceAutoDiscoveryConfigMethod {
    name: string;
}

export interface DatasourceCollectorAttribute {
    name: string;
}

export interface DatasourceDataPoint {
    alertBody: string;
    alertClearTransitionInterval: number;
    alertExpr: string;
    alertExprNote: string;
    alertForNoData: number;
    alertSubject: string;
    alertTransitionInterval: number;
    dataType: number;
    description: string;
    maxDigits: number;
    maxValue: string;
    minValue: string;
    name: string;
    postProcessorMethod: string;
    postProcessorParam: string;
    rawDataFieldName: string;
    type: number;
}

export interface DatasourceEriDiscoveryConfig {
    groovyScript?: string;
    linuxCmdline?: string;
    linuxScript?: string;
    name: string;
    type?: string;
    winCmdline?: string;
    winScript?: string;
}

export interface DeviceAutoProperty {
    name: string;
    value: string;
}

export interface DeviceCustomProperty {
    name: string;
    value: string;
}

export interface DeviceGroupAwsTestResult {
    detailLink: string;
    noPermissionServices: string[];
    nonPermissionErrors: string[];
}

export interface DeviceGroupAzureTestResult {
    detailLink: {[key: string]: string};
    noPermissionServices: {[key: string]: string};
}

export interface DeviceGroupCustomProperty {
    name: string;
    value: string;
}

export interface DeviceGroupExtra {
    accounts: outputs.DeviceGroupExtraAccount[];
    defaults: outputs.DeviceGroupExtraDefault[];
    devices: outputs.DeviceGroupExtraDevice[];
    services: outputs.DeviceGroupExtraService[];
}

export interface DeviceGroupExtraAccount {
    accountId?: string;
    assumedRoleArn?: string;
    billingBucketName: string;
    billingPathPrefix: string;
    clientId?: string;
    collectorDescription?: string;
    collectorId: number;
    country?: string;
    externalId?: string;
    schedule?: string;
    secretKey?: string;
    subscriptionIds?: string;
    tenantId?: string;
    type: string;
}

export interface DeviceGroupExtraDefault {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraDefaultNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraDefaultTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraDefaultNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraDefaultNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraDefaultNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraDefaultTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraDevice {
    deviceType: number;
    requiredProps: string[];
}

export interface DeviceGroupExtraService {
    aPPLICATIONELBs?: outputs.DeviceGroupExtraServiceAPPLICATIONELB[];
    aPPLICATIONGATEWAIes?: outputs.DeviceGroupExtraServiceAPPLICATIONGATEWAIe[];
    aPPLICATIONINSIGHTS?: outputs.DeviceGroupExtraServiceAPPLICATIONINSIGHT[];
    aPPSERVICEPLANs?: outputs.DeviceGroupExtraServiceAPPSERVICEPLAN[];
    aPPSERVICEs?: outputs.DeviceGroupExtraServiceAPPSERVICE[];
    aPPSTREAMs?: outputs.DeviceGroupExtraServiceAPPSTREAM[];
    aTHENAs?: outputs.DeviceGroupExtraServiceATHENA[];
    aUTOMATIONACCOUNTs?: outputs.DeviceGroupExtraServiceAUTOMATIONACCOUNT[];
    aUTOSCALINGs?: outputs.DeviceGroupExtraServiceAUTOSCALING[];
    apiGATEWAIes?: outputs.DeviceGroupExtraServiceApiGATEWAIe[];
    apiMANAGEMENTs?: outputs.DeviceGroupExtraServiceApiMANAGEMENT[];
    bACKUPPROTECTEDITEMS?: outputs.DeviceGroupExtraServiceBACKUPPROTECTEDITEM[];
    bLOBSTORAGEs?: outputs.DeviceGroupExtraServiceBLOBSTORAGE[];
    cLOUDFRONTs?: outputs.DeviceGroupExtraServiceCLOUDFRONT[];
    cLOUDSEARCHs?: outputs.DeviceGroupExtraServiceCLOUDSEARCH[];
    cODEBUiLDs?: outputs.DeviceGroupExtraServiceCODEBUiLD[];
    cOGNITIVESEARCHs?: outputs.DeviceGroupExtraServiceCOGNITIVESEARCH[];
    cOGNITIVESERVICES?: outputs.DeviceGroupExtraServiceCOGNITIVESERVICE[];
    cOGNITOs?: outputs.DeviceGroupExtraServiceCOGNITO[];
    cOSMOSDBs?: outputs.DeviceGroupExtraServiceCOSMOSDB[];
    dATAFACTORIes?: outputs.DeviceGroupExtraServiceDATAFACTORy[];
    dIRECTCONNECTs?: outputs.DeviceGroupExtraServiceDIRECTCONNECT[];
    dMSREPLICATIONTASKS?: outputs.DeviceGroupExtraServiceDMSREPLICATIONTASK[];
    dMSREPLICATIONs?: outputs.DeviceGroupExtraServiceDMSREPLICATION[];
    dOCDBs?: outputs.DeviceGroupExtraServiceDOCDB[];
    dYNAMODBs?: outputs.DeviceGroupExtraServiceDYNAMODB[];
    eBS?: outputs.DeviceGroupExtraServiceEB[];
    eC2s?: outputs.DeviceGroupExtraServiceEC2[];
    eCS?: outputs.DeviceGroupExtraServiceEC[];
    eFS?: outputs.DeviceGroupExtraServiceEF[];
    eLASTICACHEs?: outputs.DeviceGroupExtraServiceELASTICACH[];
    eLASTICBEANSTALKs?: outputs.DeviceGroupExtraServiceELASTICBEANSTALK[];
    eLASTICSEARCHs?: outputs.DeviceGroupExtraServiceELASTICSEARCH[];
    eLASTICTRANSCODERs?: outputs.DeviceGroupExtraServiceELASTICTRANSCODER[];
    eLBs?: outputs.DeviceGroupExtraServiceELB[];
    eMRs?: outputs.DeviceGroupExtraServiceEMR[];
    eVENTBRIdGEs?: outputs.DeviceGroupExtraServiceEVENTBRIdGE[];
    eVENTHUBs?: outputs.DeviceGroupExtraServiceEVENTHUB[];
    eXPRESSROUTECIRCUiTs?: outputs.DeviceGroupExtraServiceEXPRESSROUTECIRCUiT[];
    fILESTORAGEs?: outputs.DeviceGroupExtraServiceFILESTORAGE[];
    fIREHOSEs?: outputs.DeviceGroupExtraServiceFIREHOSE[];
    fIREWALLs?: outputs.DeviceGroupExtraServiceFIREWALL[];
    fRONTDOORS?: outputs.DeviceGroupExtraServiceFRONTDOOR[];
    fSXes?: outputs.DeviceGroupExtraServiceFSX[];
    gLUEs?: outputs.DeviceGroupExtraServiceGLUE[];
    kEYVAULTs?: outputs.DeviceGroupExtraServiceKEYVAULT[];
    kINESIS?: outputs.DeviceGroupExtraServiceKINESI[];
    kINESISVIdEOs?: outputs.DeviceGroupExtraServiceKINESISVIdEO[];
    lAMBDAs?: outputs.DeviceGroupExtraServiceLAMBDA[];
    lOADBALANCERS?: outputs.DeviceGroupExtraServiceLOADBALANCER[];
    lOGANALYTICSWORKSPACES?: outputs.DeviceGroupExtraServiceLOGANALYTICSWORKSPACE[];
    lOGICAPPS?: outputs.DeviceGroupExtraServiceLOGICAPP[];
    mEDIACONNECTs?: outputs.DeviceGroupExtraServiceMEDIACONNECT[];
    mEDIACONVERTs?: outputs.DeviceGroupExtraServiceMEDIACONVERT[];
    mEDIAPACKAGELIVEs?: outputs.DeviceGroupExtraServiceMEDIAPACKAGELIfe[];
    mEDIAPACKAGEVODs?: outputs.DeviceGroupExtraServiceMEDIAPACKAGEVOD[];
    mEDIASTOREs?: outputs.DeviceGroupExtraServiceMEDIASTORE[];
    mEDIATAILORs?: outputs.DeviceGroupExtraServiceMEDIATAILOR[];
    mQs?: outputs.DeviceGroupExtraServiceMQ[];
    mSKBROKERs?: outputs.DeviceGroupExtraServiceMSKBROKER[];
    mSKCLUSTERs?: outputs.DeviceGroupExtraServiceMSKCLUSTER[];
    mYSqls?: outputs.DeviceGroupExtraServiceMYSql[];
    nATGATEWAIes?: outputs.DeviceGroupExtraServiceNATGATEWAIe[];
    nETWORKELBs?: outputs.DeviceGroupExtraServiceNETWORKELB[];
    nETWORKINTERFACEs?: outputs.DeviceGroupExtraServiceNETWORKINTERFACE[];
    oPSWORKS?: outputs.DeviceGroupExtraServiceOPSWORK[];
    pOSTGRESqls?: outputs.DeviceGroupExtraServicePOSTGRESql[];
    pUBLICIps?: outputs.DeviceGroupExtraServicePUBLICIp[];
    qUEUESTORAGEs?: outputs.DeviceGroupExtraServiceQUEUESTORAGE[];
    rDS?: outputs.DeviceGroupExtraServiceRD[];
    rECOVERYPROTECTEDITEMs?: outputs.DeviceGroupExtraServiceRECOVERYPROTECTEDITEM[];
    rECOVERYSERVICES?: outputs.DeviceGroupExtraServiceRECOVERYSERVICE[];
    rEDISCACHEs?: outputs.DeviceGroupExtraServiceREDISCACH[];
    rEDSHIFTs?: outputs.DeviceGroupExtraServiceREDSHIFT[];
    rOUTE53RESOLVERs?: outputs.DeviceGroupExtraServiceROUTE53RESOLVER[];
    rOUTE53s?: outputs.DeviceGroupExtraServiceROUTE53[];
    s3s?: outputs.DeviceGroupExtraServiceS3[];
    sAGEMAKERs?: outputs.DeviceGroupExtraServiceSAGEMAKER[];
    sERVICEBUS?: outputs.DeviceGroupExtraServiceSERVICEBU[];
    sES?: outputs.DeviceGroupExtraServiceSE[];
    sNS?: outputs.DeviceGroupExtraServiceSN[];
    sQS?: outputs.DeviceGroupExtraServiceSQ[];
    sTEPFUNCTIONS?: outputs.DeviceGroupExtraServiceSTEPFUNCTION[];
    sTORAGEACCOUNTs?: outputs.DeviceGroupExtraServiceSTORAGEACCOUNT[];
    sWFACTIVITIes?: outputs.DeviceGroupExtraServiceSWFACTIVITy[];
    sWFWORKFLOWs?: outputs.DeviceGroupExtraServiceSWFWORKFLOW[];
    sYNAPSEWORKSPACES?: outputs.DeviceGroupExtraServiceSYNAPSEWORKSPACE[];
    sqlDATABASEs?: outputs.DeviceGroupExtraServiceSqlDATABASE[];
    sqlELASTICPOOLs?: outputs.DeviceGroupExtraServiceSqlELASTICPOOL[];
    sqlMANAGEDINSTANCEs?: outputs.DeviceGroupExtraServiceSqlMANAGEDINSTANCE[];
    tABLESTORAGEs?: outputs.DeviceGroupExtraServiceTABLESTORAGE[];
    tRAFFICMANAGERs?: outputs.DeviceGroupExtraServiceTRAFFICMANAGER[];
    tRANSITGATEWAIes?: outputs.DeviceGroupExtraServiceTRANSITGATEWAIe[];
    vIRTUALDESKTOPs?: outputs.DeviceGroupExtraServiceVIRTUALDESKTOP[];
    vIRTUALMACHINESCALESETVms?: outputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESETVm[];
    vIRTUALMACHINESCALESETs?: outputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESET[];
    vIRTUALMACHINEs?: outputs.DeviceGroupExtraServiceVIRTUALMACHINE[];
    vIRTUALNETWORKGATEWAIes?: outputs.DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIe[];
    vPNs?: outputs.DeviceGroupExtraServiceVPN[];
    wORKSPACEDIRECTORIes?: outputs.DeviceGroupExtraServiceWORKSPACEDIRECTORy[];
    wORKSPACEs?: outputs.DeviceGroupExtraServiceWORKSPACE[];
}

export interface DeviceGroupExtraServiceAPPLICATIONELB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceAPPLICATIONELBTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceAPPLICATIONELBTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceAPPLICATIONGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceAPPLICATIONGATEWAIeTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceAPPLICATIONGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceAPPLICATIONINSIGHT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceAPPLICATIONINSIGHTTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceAPPLICATIONINSIGHTTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceAPPSERVICE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceAPPSERVICENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceAPPSERVICETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceAPPSERVICENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceAPPSERVICENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceAPPSERVICENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceAPPSERVICEPLAN {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceAPPSERVICEPLANTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceAPPSERVICEPLANTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceAPPSERVICETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceAPPSTREAM {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceAPPSTREAMNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceAPPSTREAMTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceAPPSTREAMNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceAPPSTREAMNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceAPPSTREAMNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceAPPSTREAMTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceATHENA {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceATHENANormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceATHENATag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceATHENANormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceATHENANormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceATHENANormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceATHENATag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceAUTOMATIONACCOUNT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceAUTOMATIONACCOUNTTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceAUTOMATIONACCOUNTTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceAUTOSCALING {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceAUTOSCALINGTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceAUTOSCALINGTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceApiGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceApiGATEWAIeTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceApiGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceApiMANAGEMENT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceApiMANAGEMENTTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceApiMANAGEMENTTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceBACKUPPROTECTEDITEM {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceBACKUPPROTECTEDITEMTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceBACKUPPROTECTEDITEMTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceBLOBSTORAGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceBLOBSTORAGETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceBLOBSTORAGETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceCLOUDFRONT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceCLOUDFRONTTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceCLOUDFRONTTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceCLOUDSEARCH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceCLOUDSEARCHTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceCLOUDSEARCHTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceCODEBUiLD {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceCODEBUiLDNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceCODEBUiLDTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceCODEBUiLDNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceCODEBUiLDNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceCODEBUiLDNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceCODEBUiLDTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceCOGNITIVESEARCH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceCOGNITIVESEARCHTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceCOGNITIVESEARCHTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceCOGNITIVESERVICE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceCOGNITIVESERVICETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceCOGNITIVESERVICETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceCOGNITO {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceCOGNITONormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceCOGNITOTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceCOGNITONormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceCOGNITONormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceCOGNITONormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceCOGNITOTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceCOSMOSDB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceCOSMOSDBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceCOSMOSDBTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceCOSMOSDBNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceCOSMOSDBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceCOSMOSDBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceCOSMOSDBTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceDATAFACTORy {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceDATAFACTORyNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceDATAFACTORyTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceDATAFACTORyNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceDATAFACTORyNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceDATAFACTORyNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceDATAFACTORyTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceDIRECTCONNECT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceDIRECTCONNECTTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceDIRECTCONNECTTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceDMSREPLICATION {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceDMSREPLICATIONTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceDMSREPLICATIONTASK {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceDMSREPLICATIONTASKTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceDMSREPLICATIONTASKTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceDMSREPLICATIONTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceDOCDB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceDOCDBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceDOCDBTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceDOCDBNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceDOCDBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceDOCDBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceDOCDBTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceDYNAMODB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceDYNAMODBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceDYNAMODBTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceDYNAMODBNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceDYNAMODBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceDYNAMODBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceDYNAMODBTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceEB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceEBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceEBTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceEBNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceEBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceEBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceEBTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceEC {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceECNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceECTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceEC2 {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceEC2NormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceEC2Tag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceEC2NormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceEC2NormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceEC2NormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceEC2Tag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceECNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceECNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceECNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceECTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceEF {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceEFNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceEFTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceEFNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceEFNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceEFNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceEFTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceELASTICACH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceELASTICACHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceELASTICACHTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceELASTICACHNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceELASTICACHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceELASTICACHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceELASTICACHTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceELASTICBEANSTALK {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceELASTICBEANSTALKTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceELASTICBEANSTALKTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceELASTICSEARCH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceELASTICSEARCHTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceELASTICSEARCHTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceELASTICTRANSCODER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceELASTICTRANSCODERTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceELASTICTRANSCODERTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceELB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceELBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceELBTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceELBNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceELBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceELBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceELBTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceEMR {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceEMRNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceEMRTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceEMRNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceEMRNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceEMRNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceEMRTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceEVENTBRIdGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceEVENTBRIdGETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceEVENTBRIdGETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceEVENTHUB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceEVENTHUBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceEVENTHUBTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceEVENTHUBNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceEVENTHUBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceEVENTHUBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceEVENTHUBTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceEXPRESSROUTECIRCUiT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceEXPRESSROUTECIRCUiTTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceEXPRESSROUTECIRCUiTTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceFILESTORAGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceFILESTORAGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceFILESTORAGETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceFILESTORAGENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceFILESTORAGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceFILESTORAGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceFILESTORAGETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceFIREHOSE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceFIREHOSENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceFIREHOSETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceFIREHOSENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceFIREHOSENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceFIREHOSENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceFIREHOSETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceFIREWALL {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceFIREWALLNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceFIREWALLTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceFIREWALLNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceFIREWALLNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceFIREWALLNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceFIREWALLTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceFRONTDOOR {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceFRONTDOORNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceFRONTDOORTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceFRONTDOORNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceFRONTDOORNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceFRONTDOORNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceFRONTDOORTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceFSX {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceFSXNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceFSXTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceFSXNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceFSXNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceFSXNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceFSXTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceGLUE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceGLUENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceGLUETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceGLUENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceGLUENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceGLUENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceGLUETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceKEYVAULT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceKEYVAULTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceKEYVAULTTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceKEYVAULTNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceKEYVAULTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceKEYVAULTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceKEYVAULTTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceKINESI {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceKINESINormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceKINESITag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceKINESINormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceKINESINormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceKINESINormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceKINESISVIdEO {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceKINESISVIdEONormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceKINESISVIdEOTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceKINESISVIdEONormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceKINESISVIdEONormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceKINESISVIdEONormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceKINESISVIdEOTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceKINESITag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceLAMBDA {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceLAMBDANormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceLAMBDATag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceLAMBDANormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceLAMBDANormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceLAMBDANormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceLAMBDATag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceLOADBALANCER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceLOADBALANCERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceLOADBALANCERTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceLOADBALANCERNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceLOADBALANCERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceLOADBALANCERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceLOADBALANCERTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceLOGANALYTICSWORKSPACE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceLOGANALYTICSWORKSPACETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceLOGANALYTICSWORKSPACETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceLOGICAPP {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceLOGICAPPNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceLOGICAPPTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceLOGICAPPNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceLOGICAPPNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceLOGICAPPNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceLOGICAPPTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceMEDIACONNECT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceMEDIACONNECTTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceMEDIACONNECTTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceMEDIACONVERT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceMEDIACONVERTTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceMEDIACONVERTTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGELIfe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceMEDIAPACKAGELIfeTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGELIfeTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGEVOD {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceMEDIAPACKAGEVODTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceMEDIAPACKAGEVODTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceMEDIASTORE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceMEDIASTORENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceMEDIASTORETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceMEDIASTORENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceMEDIASTORENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceMEDIASTORENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceMEDIASTORETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceMEDIATAILOR {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceMEDIATAILORNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceMEDIATAILORTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceMEDIATAILORNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceMEDIATAILORNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceMEDIATAILORNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceMEDIATAILORTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceMQ {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceMQNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceMQTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceMQNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceMQNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceMQNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceMQTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceMSKBROKER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceMSKBROKERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceMSKBROKERTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceMSKBROKERNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceMSKBROKERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceMSKBROKERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceMSKBROKERTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceMSKCLUSTER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceMSKCLUSTERTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceMSKCLUSTERTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceMYSql {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceMYSqlNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceMYSqlTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceMYSqlNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceMYSqlNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceMYSqlNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceMYSqlTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceNATGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceNATGATEWAIeTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceNATGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceNETWORKELB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceNETWORKELBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceNETWORKELBTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceNETWORKELBNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceNETWORKELBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceNETWORKELBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceNETWORKELBTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceNETWORKINTERFACE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceNETWORKINTERFACETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceNETWORKINTERFACETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceOPSWORK {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceOPSWORKNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceOPSWORKTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceOPSWORKNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceOPSWORKNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceOPSWORKNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceOPSWORKTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServicePOSTGRESql {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServicePOSTGRESqlNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServicePOSTGRESqlTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServicePOSTGRESqlNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServicePOSTGRESqlNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServicePOSTGRESqlNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServicePOSTGRESqlTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServicePUBLICIp {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServicePUBLICIpNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServicePUBLICIpTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServicePUBLICIpNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServicePUBLICIpNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServicePUBLICIpNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServicePUBLICIpTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceQUEUESTORAGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceQUEUESTORAGETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceQUEUESTORAGETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceRD {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceRDNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceRDTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceRDNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceRDNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceRDNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceRDTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceRECOVERYPROTECTEDITEM {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceRECOVERYPROTECTEDITEMTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceRECOVERYPROTECTEDITEMTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceRECOVERYSERVICE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceRECOVERYSERVICETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceRECOVERYSERVICETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceREDISCACH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceREDISCACHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceREDISCACHTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceREDISCACHNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceREDISCACHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceREDISCACHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceREDISCACHTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceREDSHIFT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceREDSHIFTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceREDSHIFTTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceREDSHIFTNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceREDSHIFTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceREDSHIFTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceREDSHIFTTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceROUTE53 {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceROUTE53NormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceROUTE53Tag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceROUTE53NormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceROUTE53NormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceROUTE53NormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceROUTE53RESOLVER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceROUTE53RESOLVERTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceROUTE53RESOLVERTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceROUTE53Tag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceS3 {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceS3NormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceS3Tag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceS3NormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceS3NormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceS3NormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceS3Tag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceSAGEMAKER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceSAGEMAKERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceSAGEMAKERTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceSAGEMAKERNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceSAGEMAKERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceSAGEMAKERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceSAGEMAKERTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceSE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceSENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceSETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceSENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceSENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceSENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceSERVICEBU {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceSERVICEBUNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceSERVICEBUTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceSERVICEBUNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceSERVICEBUNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceSERVICEBUNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceSERVICEBUTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceSETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceSN {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceSNNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceSNTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceSNNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceSNNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceSNNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceSNTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceSQ {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceSQNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceSQTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceSQNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceSQNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceSQNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceSQTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceSTEPFUNCTION {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceSTEPFUNCTIONTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceSTEPFUNCTIONTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceSTORAGEACCOUNT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceSTORAGEACCOUNTTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceSTORAGEACCOUNTTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceSWFACTIVITy {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceSWFACTIVITyTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceSWFACTIVITyTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceSWFWORKFLOW {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceSWFWORKFLOWTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceSWFWORKFLOWTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceSYNAPSEWORKSPACE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceSYNAPSEWORKSPACETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceSYNAPSEWORKSPACETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceSqlDATABASE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceSqlDATABASENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceSqlDATABASETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceSqlDATABASENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceSqlDATABASENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceSqlDATABASENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceSqlDATABASETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceSqlELASTICPOOL {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceSqlELASTICPOOLTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceSqlELASTICPOOLTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceSqlMANAGEDINSTANCE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceSqlMANAGEDINSTANCETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceSqlMANAGEDINSTANCETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceTABLESTORAGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceTABLESTORAGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceTABLESTORAGETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceTABLESTORAGENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceTABLESTORAGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceTABLESTORAGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceTABLESTORAGETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceTRAFFICMANAGER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceTRAFFICMANAGERTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceTRAFFICMANAGERTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceTRANSITGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceTRANSITGATEWAIeTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceTRANSITGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceVIRTUALDESKTOP {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceVIRTUALDESKTOPTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALDESKTOPTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceVIRTUALMACHINETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESET {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESETTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESETTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESETVm {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESETVmTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINESCALESETVmTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceVIRTUALMACHINETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceVPN {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceVPNNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceVPNTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceVPNNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceVPNNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceVPNNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceVPNTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceWORKSPACE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceWORKSPACENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceWORKSPACETag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceWORKSPACEDIRECTORy {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.DeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.DeviceGroupExtraServiceWORKSPACEDIRECTORyTag[];
    useDefault: boolean;
}

export interface DeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceWORKSPACEDIRECTORyTag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupExtraServiceWORKSPACENormalCollectorConfig {
    collectors?: outputs.DeviceGroupExtraServiceWORKSPACENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface DeviceGroupExtraServiceWORKSPACENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface DeviceGroupExtraServiceWORKSPACETag {
    name: string;
    operation: string;
    value: string;
}

export interface DeviceGroupGcpTestResult {
    detailLink: string;
    noPermissionServices: string[];
    nonPermissionErrors: string[];
}

export interface DeviceGroupSubGroup {
    appliesTo: string;
    awsRegionsInfo: string;
    azureRegionsInfo: string;
    description: string;
    fullPath: string;
    gcpRegionsInfo: string;
    groupType: string;
    id: number;
    name: string;
    numOfDirectDevices: number;
    numOfDirectSubGroups: number;
    numOfHosts: number;
    userPermission: string;
}

export interface DeviceInheritedProperty {
    name: string;
    value: string;
}

export interface DeviceSystemProperty {
    name: string;
    value: string;
}

export interface EscalationChainCcDestination {
    addr: string;
    contact: string;
    method: string;
    type: string;
}

export interface EscalationChainDestination {
    periods: outputs.EscalationChainDestinationPeriod[];
    stages: outputs.EscalationChainDestinationStage[][];
    type: string;
}

export interface EscalationChainDestinationPeriod {
    endMinutes: number;
    startMinutes: number;
    timezone: string;
    weekDays: number[];
}

export interface EscalationChainDestinationStage {
    addr: string;
    contact: string;
    method: string;
    type: string;
}

export interface GetCollectorAutomaticUpgradeInfo {
    createdBy: string;
    dayOfWeek: string;
    description?: string;
    hour: number;
    level: string;
    minute: number;
    occurrence: string;
    timezone?: string;
    type: string;
    version: string;
}

export interface GetCollectorCustomProperty {
    name: string;
    value: string;
}

export interface GetCollectorGroupCustomProperty {
    name: string;
    value: string;
}

export interface GetCollectorNextUpgradeInfo {
    majorVersion: number;
    mandatory: boolean;
    minorVersion: number;
    stable: boolean;
    upgradeTime: string;
    upgradeTimeEpoch: number;
}

export interface GetCollectorOnetimeDowngradeInfo {
    createdBy: string;
    description?: string;
    endEpoch: number;
    level: string;
    majorVersion: number;
    minorVersion: number;
    startEpoch: number;
    timezone?: string;
    type: string;
}

export interface GetCollectorOnetimeUpgradeInfo {
    createdBy: string;
    description?: string;
    endEpoch: number;
    level: string;
    majorVersion: number;
    minorVersion: number;
    startEpoch: number;
    timezone?: string;
    type: string;
}

export interface GetDashboardGroupDashboard {
    id: number;
    name: string;
    sharable: boolean;
    userPermission: string;
}

export interface GetDashboardGroupWidgetToken {
    inheritLists: outputs.GetDashboardGroupWidgetTokenInheritList[];
    name: string;
    type: string;
    value: string;
}

export interface GetDashboardGroupWidgetTokenInheritList {
    fullpath: string;
    value: string;
}

export interface GetDashboardWidgetToken {
    inheritLists: outputs.GetDashboardWidgetTokenInheritList[];
    name: string;
    type: string;
    value: string;
}

export interface GetDashboardWidgetTokenInheritList {
    fullpath: string;
    value: string;
}

export interface GetDatasourceAutoDiscoveryConfig {
    dataSourceName: string;
    deleteInactiveInstance?: boolean;
    disableInstance?: boolean;
    filters?: outputs.GetDatasourceAutoDiscoveryConfigFilter[];
    instanceAutoGroupMethod?: string;
    instanceAutoGroupMethodParams?: string;
    methods: outputs.GetDatasourceAutoDiscoveryConfigMethod[];
    persistentInstance?: boolean;
    scheduleInterval?: number;
}

export interface GetDatasourceAutoDiscoveryConfigFilter {
    attribute: string;
    comment: string;
    operation: string;
    value: string;
}

export interface GetDatasourceAutoDiscoveryConfigMethod {
    name: string;
}

export interface GetDatasourceCollectorAttribute {
    name: string;
}

export interface GetDatasourceDataPoint {
    alertBody: string;
    alertClearTransitionInterval: number;
    alertExpr: string;
    alertExprNote: string;
    alertForNoData: number;
    alertSubject: string;
    alertTransitionInterval: number;
    dataType: number;
    description: string;
    maxDigits: number;
    maxValue: string;
    minValue: string;
    name: string;
    postProcessorMethod: string;
    postProcessorParam: string;
    rawDataFieldName: string;
    type: number;
}

export interface GetDatasourceEriDiscoveryConfig {
    groovyScript?: string;
    linuxCmdline?: string;
    linuxScript?: string;
    name: string;
    type?: string;
    winCmdline?: string;
    winScript?: string;
}

export interface GetDeviceAutoProperty {
    name: string;
    value: string;
}

export interface GetDeviceCustomProperty {
    name: string;
    value: string;
}

export interface GetDeviceGroupAwsTestResult {
    detailLink?: string;
    noPermissionServices?: string[];
    nonPermissionErrors?: string[];
}

export interface GetDeviceGroupAzureTestResult {
    detailLink: {[key: string]: string};
    noPermissionServices: {[key: string]: string};
}

export interface GetDeviceGroupCustomProperty {
    name: string;
    value: string;
}

export interface GetDeviceGroupExtra {
    accounts: outputs.GetDeviceGroupExtraAccount[];
    defaults: outputs.GetDeviceGroupExtraDefault[];
    devices: outputs.GetDeviceGroupExtraDevice[];
    services: outputs.GetDeviceGroupExtraService[];
}

export interface GetDeviceGroupExtraAccount {
    accountId?: string;
    assumedRoleArn?: string;
    billingBucketName: string;
    billingPathPrefix: string;
    clientId?: string;
    collectorDescription?: string;
    collectorId: number;
    country?: string;
    externalId?: string;
    schedule?: string;
    secretKey?: string;
    subscriptionIds?: string;
    tenantId?: string;
    type: string;
}

export interface GetDeviceGroupExtraDefault {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraDefaultNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraDefaultTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraDefaultNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraDefaultNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraDefaultNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraDefaultTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraDevice {
    deviceType: number;
    requiredProps: string[];
}

export interface GetDeviceGroupExtraService {
    aPPLICATIONELBs?: outputs.GetDeviceGroupExtraServiceAPPLICATIONELB[];
    aPPLICATIONGATEWAIes?: outputs.GetDeviceGroupExtraServiceAPPLICATIONGATEWAIe[];
    aPPLICATIONINSIGHTS?: outputs.GetDeviceGroupExtraServiceAPPLICATIONINSIGHT[];
    aPPSERVICEPLANs?: outputs.GetDeviceGroupExtraServiceAPPSERVICEPLAN[];
    aPPSERVICEs?: outputs.GetDeviceGroupExtraServiceAPPSERVICE[];
    aPPSTREAMs?: outputs.GetDeviceGroupExtraServiceAPPSTREAM[];
    aTHENAs?: outputs.GetDeviceGroupExtraServiceATHENA[];
    aUTOMATIONACCOUNTs?: outputs.GetDeviceGroupExtraServiceAUTOMATIONACCOUNT[];
    aUTOSCALINGs?: outputs.GetDeviceGroupExtraServiceAUTOSCALING[];
    apiGATEWAIes?: outputs.GetDeviceGroupExtraServiceApiGATEWAIe[];
    apiMANAGEMENTs?: outputs.GetDeviceGroupExtraServiceApiMANAGEMENT[];
    bACKUPPROTECTEDITEMS?: outputs.GetDeviceGroupExtraServiceBACKUPPROTECTEDITEM[];
    bLOBSTORAGEs?: outputs.GetDeviceGroupExtraServiceBLOBSTORAGE[];
    cLOUDFRONTs?: outputs.GetDeviceGroupExtraServiceCLOUDFRONT[];
    cLOUDSEARCHs?: outputs.GetDeviceGroupExtraServiceCLOUDSEARCH[];
    cODEBUiLDs?: outputs.GetDeviceGroupExtraServiceCODEBUiLD[];
    cOGNITIVESEARCHs?: outputs.GetDeviceGroupExtraServiceCOGNITIVESEARCH[];
    cOGNITIVESERVICES?: outputs.GetDeviceGroupExtraServiceCOGNITIVESERVICE[];
    cOGNITOs?: outputs.GetDeviceGroupExtraServiceCOGNITO[];
    cOSMOSDBs?: outputs.GetDeviceGroupExtraServiceCOSMOSDB[];
    dATAFACTORIes?: outputs.GetDeviceGroupExtraServiceDATAFACTORy[];
    dIRECTCONNECTs?: outputs.GetDeviceGroupExtraServiceDIRECTCONNECT[];
    dMSREPLICATIONTASKS?: outputs.GetDeviceGroupExtraServiceDMSREPLICATIONTASK[];
    dMSREPLICATIONs?: outputs.GetDeviceGroupExtraServiceDMSREPLICATION[];
    dOCDBs?: outputs.GetDeviceGroupExtraServiceDOCDB[];
    dYNAMODBs?: outputs.GetDeviceGroupExtraServiceDYNAMODB[];
    eBS?: outputs.GetDeviceGroupExtraServiceEB[];
    eC2s?: outputs.GetDeviceGroupExtraServiceEC2[];
    eCS?: outputs.GetDeviceGroupExtraServiceEC[];
    eFS?: outputs.GetDeviceGroupExtraServiceEF[];
    eLASTICACHEs?: outputs.GetDeviceGroupExtraServiceELASTICACH[];
    eLASTICBEANSTALKs?: outputs.GetDeviceGroupExtraServiceELASTICBEANSTALK[];
    eLASTICSEARCHs?: outputs.GetDeviceGroupExtraServiceELASTICSEARCH[];
    eLASTICTRANSCODERs?: outputs.GetDeviceGroupExtraServiceELASTICTRANSCODER[];
    eLBs?: outputs.GetDeviceGroupExtraServiceELB[];
    eMRs?: outputs.GetDeviceGroupExtraServiceEMR[];
    eVENTBRIdGEs?: outputs.GetDeviceGroupExtraServiceEVENTBRIdGE[];
    eVENTHUBs?: outputs.GetDeviceGroupExtraServiceEVENTHUB[];
    eXPRESSROUTECIRCUiTs?: outputs.GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiT[];
    fILESTORAGEs?: outputs.GetDeviceGroupExtraServiceFILESTORAGE[];
    fIREHOSEs?: outputs.GetDeviceGroupExtraServiceFIREHOSE[];
    fIREWALLs?: outputs.GetDeviceGroupExtraServiceFIREWALL[];
    fRONTDOORS?: outputs.GetDeviceGroupExtraServiceFRONTDOOR[];
    fSXes?: outputs.GetDeviceGroupExtraServiceFSX[];
    gLUEs?: outputs.GetDeviceGroupExtraServiceGLUE[];
    kEYVAULTs?: outputs.GetDeviceGroupExtraServiceKEYVAULT[];
    kINESIS?: outputs.GetDeviceGroupExtraServiceKINESI[];
    kINESISVIdEOs?: outputs.GetDeviceGroupExtraServiceKINESISVIdEO[];
    lAMBDAs?: outputs.GetDeviceGroupExtraServiceLAMBDA[];
    lOADBALANCERS?: outputs.GetDeviceGroupExtraServiceLOADBALANCER[];
    lOGANALYTICSWORKSPACES?: outputs.GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACE[];
    lOGICAPPS?: outputs.GetDeviceGroupExtraServiceLOGICAPP[];
    mEDIACONNECTs?: outputs.GetDeviceGroupExtraServiceMEDIACONNECT[];
    mEDIACONVERTs?: outputs.GetDeviceGroupExtraServiceMEDIACONVERT[];
    mEDIAPACKAGELIVEs?: outputs.GetDeviceGroupExtraServiceMEDIAPACKAGELIfe[];
    mEDIAPACKAGEVODs?: outputs.GetDeviceGroupExtraServiceMEDIAPACKAGEVOD[];
    mEDIASTOREs?: outputs.GetDeviceGroupExtraServiceMEDIASTORE[];
    mEDIATAILORs?: outputs.GetDeviceGroupExtraServiceMEDIATAILOR[];
    mQs?: outputs.GetDeviceGroupExtraServiceMQ[];
    mSKBROKERs?: outputs.GetDeviceGroupExtraServiceMSKBROKER[];
    mSKCLUSTERs?: outputs.GetDeviceGroupExtraServiceMSKCLUSTER[];
    mYSqls?: outputs.GetDeviceGroupExtraServiceMYSql[];
    nATGATEWAIes?: outputs.GetDeviceGroupExtraServiceNATGATEWAIe[];
    nETWORKELBs?: outputs.GetDeviceGroupExtraServiceNETWORKELB[];
    nETWORKINTERFACEs?: outputs.GetDeviceGroupExtraServiceNETWORKINTERFACE[];
    oPSWORKS?: outputs.GetDeviceGroupExtraServiceOPSWORK[];
    pOSTGRESqls?: outputs.GetDeviceGroupExtraServicePOSTGRESql[];
    pUBLICIps?: outputs.GetDeviceGroupExtraServicePUBLICIp[];
    qUEUESTORAGEs?: outputs.GetDeviceGroupExtraServiceQUEUESTORAGE[];
    rDS?: outputs.GetDeviceGroupExtraServiceRD[];
    rECOVERYPROTECTEDITEMs?: outputs.GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEM[];
    rECOVERYSERVICES?: outputs.GetDeviceGroupExtraServiceRECOVERYSERVICE[];
    rEDISCACHEs?: outputs.GetDeviceGroupExtraServiceREDISCACH[];
    rEDSHIFTs?: outputs.GetDeviceGroupExtraServiceREDSHIFT[];
    rOUTE53RESOLVERs?: outputs.GetDeviceGroupExtraServiceROUTE53RESOLVER[];
    rOUTE53s?: outputs.GetDeviceGroupExtraServiceROUTE53[];
    s3s?: outputs.GetDeviceGroupExtraServiceS3[];
    sAGEMAKERs?: outputs.GetDeviceGroupExtraServiceSAGEMAKER[];
    sERVICEBUS?: outputs.GetDeviceGroupExtraServiceSERVICEBU[];
    sES?: outputs.GetDeviceGroupExtraServiceSE[];
    sNS?: outputs.GetDeviceGroupExtraServiceSN[];
    sQS?: outputs.GetDeviceGroupExtraServiceSQ[];
    sTEPFUNCTIONS?: outputs.GetDeviceGroupExtraServiceSTEPFUNCTION[];
    sTORAGEACCOUNTs?: outputs.GetDeviceGroupExtraServiceSTORAGEACCOUNT[];
    sWFACTIVITIes?: outputs.GetDeviceGroupExtraServiceSWFACTIVITy[];
    sWFWORKFLOWs?: outputs.GetDeviceGroupExtraServiceSWFWORKFLOW[];
    sYNAPSEWORKSPACES?: outputs.GetDeviceGroupExtraServiceSYNAPSEWORKSPACE[];
    sqlDATABASEs?: outputs.GetDeviceGroupExtraServiceSqlDATABASE[];
    sqlELASTICPOOLs?: outputs.GetDeviceGroupExtraServiceSqlELASTICPOOL[];
    sqlMANAGEDINSTANCEs?: outputs.GetDeviceGroupExtraServiceSqlMANAGEDINSTANCE[];
    tABLESTORAGEs?: outputs.GetDeviceGroupExtraServiceTABLESTORAGE[];
    tRAFFICMANAGERs?: outputs.GetDeviceGroupExtraServiceTRAFFICMANAGER[];
    tRANSITGATEWAIes?: outputs.GetDeviceGroupExtraServiceTRANSITGATEWAIe[];
    vIRTUALDESKTOPs?: outputs.GetDeviceGroupExtraServiceVIRTUALDESKTOP[];
    vIRTUALMACHINESCALESETVms?: outputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVm[];
    vIRTUALMACHINESCALESETs?: outputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESET[];
    vIRTUALMACHINEs?: outputs.GetDeviceGroupExtraServiceVIRTUALMACHINE[];
    vIRTUALNETWORKGATEWAIes?: outputs.GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIe[];
    vPNs?: outputs.GetDeviceGroupExtraServiceVPN[];
    wORKSPACEDIRECTORIes?: outputs.GetDeviceGroupExtraServiceWORKSPACEDIRECTORy[];
    wORKSPACEs?: outputs.GetDeviceGroupExtraServiceWORKSPACE[];
}

export interface GetDeviceGroupExtraServiceAPPLICATIONELB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceAPPLICATIONELBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONELBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONELBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONINSIGHT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceAPPLICATIONINSIGHTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONINSIGHTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAPPLICATIONINSIGHTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAPPSERVICE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceAPPSERVICENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceAPPSERVICETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSERVICENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceAPPSERVICENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSERVICENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSERVICEPLAN {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceAPPSERVICEPLANTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSERVICEPLANNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSERVICEPLANTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAPPSERVICETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAPPSTREAM {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceAPPSTREAMNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceAPPSTREAMTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSTREAMNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceAPPSTREAMNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSTREAMNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAPPSTREAMTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceATHENA {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceATHENANormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceATHENATag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceATHENANormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceATHENANormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceATHENANormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceATHENATag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAUTOMATIONACCOUNT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceAUTOMATIONACCOUNTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAUTOMATIONACCOUNTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAUTOMATIONACCOUNTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceAUTOSCALING {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceAUTOSCALINGTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceAUTOSCALINGNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceAUTOSCALINGTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceApiGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceApiGATEWAIeTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceApiGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceApiGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceApiMANAGEMENT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceApiMANAGEMENTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceApiMANAGEMENTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceApiMANAGEMENTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceBACKUPPROTECTEDITEM {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceBACKUPPROTECTEDITEMTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceBLOBSTORAGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceBLOBSTORAGETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceBLOBSTORAGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceBLOBSTORAGETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceCLOUDFRONT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceCLOUDFRONTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceCLOUDFRONTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceCLOUDFRONTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceCLOUDSEARCH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceCLOUDSEARCHTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceCLOUDSEARCHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceCLOUDSEARCHTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceCODEBUiLD {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceCODEBUiLDNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceCODEBUiLDTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceCODEBUiLDNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceCODEBUiLDNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceCODEBUiLDNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceCODEBUiLDTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESEARCH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceCOGNITIVESEARCHTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESEARCHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESEARCHTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESERVICE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceCOGNITIVESERVICETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESERVICENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITIVESERVICETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceCOGNITO {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceCOGNITONormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceCOGNITOTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITONormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceCOGNITONormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITONormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceCOGNITOTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceCOSMOSDB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceCOSMOSDBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceCOSMOSDBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceCOSMOSDBNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceCOSMOSDBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceCOSMOSDBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceCOSMOSDBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceDATAFACTORy {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceDATAFACTORyNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceDATAFACTORyTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceDATAFACTORyNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceDATAFACTORyNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceDATAFACTORyNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceDATAFACTORyTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceDIRECTCONNECT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceDIRECTCONNECTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceDIRECTCONNECTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceDIRECTCONNECTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATION {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceDMSREPLICATIONTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTASK {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceDMSREPLICATIONTASKTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTASKNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTASKTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceDMSREPLICATIONTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceDOCDB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceDOCDBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceDOCDBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceDOCDBNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceDOCDBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceDOCDBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceDOCDBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceDYNAMODB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceDYNAMODBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceDYNAMODBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceDYNAMODBNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceDYNAMODBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceDYNAMODBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceDYNAMODBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceEB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceEBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceEBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEBNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceEBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceEBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceEBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceEC {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceECNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceECTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEC2 {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceEC2NormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceEC2Tag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEC2NormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceEC2NormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceEC2NormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceEC2Tag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceECNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceECNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceECNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceECTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceEF {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceEFNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceEFTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEFNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceEFNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceEFNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceEFTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceELASTICACH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceELASTICACHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceELASTICACHTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICACHNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceELASTICACHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICACHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICACHTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceELASTICBEANSTALK {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceELASTICBEANSTALKTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICBEANSTALKNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICBEANSTALKTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceELASTICSEARCH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceELASTICSEARCHTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICSEARCHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICSEARCHTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceELASTICTRANSCODER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceELASTICTRANSCODERTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICTRANSCODERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceELASTICTRANSCODERTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceELB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceELBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceELBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceELBNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceELBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceELBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceELBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceEMR {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceEMRNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceEMRTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEMRNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceEMRNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceEMRNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceEMRTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceEVENTBRIdGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceEVENTBRIdGETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceEVENTBRIdGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceEVENTBRIdGETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceEVENTHUB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceEVENTHUBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceEVENTHUBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEVENTHUBNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceEVENTHUBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceEVENTHUBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceEVENTHUBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceEXPRESSROUTECIRCUiTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceFILESTORAGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceFILESTORAGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceFILESTORAGETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceFILESTORAGENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceFILESTORAGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceFILESTORAGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceFILESTORAGETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceFIREHOSE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceFIREHOSENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceFIREHOSETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceFIREHOSENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceFIREHOSENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceFIREHOSENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceFIREHOSETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceFIREWALL {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceFIREWALLNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceFIREWALLTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceFIREWALLNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceFIREWALLNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceFIREWALLNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceFIREWALLTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceFRONTDOOR {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceFRONTDOORNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceFRONTDOORTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceFRONTDOORNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceFRONTDOORNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceFRONTDOORNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceFRONTDOORTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceFSX {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceFSXNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceFSXTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceFSXNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceFSXNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceFSXNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceFSXTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceGLUE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceGLUENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceGLUETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceGLUENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceGLUENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceGLUENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceGLUETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceKEYVAULT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceKEYVAULTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceKEYVAULTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceKEYVAULTNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceKEYVAULTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceKEYVAULTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceKEYVAULTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceKINESI {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceKINESINormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceKINESITag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceKINESINormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceKINESINormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceKINESINormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceKINESISVIdEO {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceKINESISVIdEONormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceKINESISVIdEOTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceKINESISVIdEONormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceKINESISVIdEONormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceKINESISVIdEONormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceKINESISVIdEOTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceKINESITag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceLAMBDA {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceLAMBDANormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceLAMBDATag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceLAMBDANormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceLAMBDANormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceLAMBDANormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceLAMBDATag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceLOADBALANCER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceLOADBALANCERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceLOADBALANCERTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceLOADBALANCERNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceLOADBALANCERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceLOADBALANCERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceLOADBALANCERTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceLOGANALYTICSWORKSPACETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceLOGICAPP {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceLOGICAPPNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceLOGICAPPTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceLOGICAPPNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceLOGICAPPNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceLOGICAPPNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceLOGICAPPTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMEDIACONNECT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceMEDIACONNECTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIACONNECTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIACONNECTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMEDIACONVERT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceMEDIACONVERTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIACONVERTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIACONVERTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGELIfe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceMEDIAPACKAGELIfeTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGELIfeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGELIfeTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGEVOD {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceMEDIAPACKAGEVODTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGEVODNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIAPACKAGEVODTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMEDIASTORE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceMEDIASTORENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceMEDIASTORETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIASTORENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceMEDIASTORENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIASTORENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIASTORETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMEDIATAILOR {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceMEDIATAILORNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceMEDIATAILORTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIATAILORNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceMEDIATAILORNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIATAILORNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMEDIATAILORTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMQ {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceMQNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceMQTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMQNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceMQNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMQNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMQTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMSKBROKER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceMSKBROKERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceMSKBROKERTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMSKBROKERNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceMSKBROKERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMSKBROKERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMSKBROKERTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMSKCLUSTER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceMSKCLUSTERTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMSKCLUSTERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMSKCLUSTERTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceMYSql {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceMYSqlNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceMYSqlTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceMYSqlNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceMYSqlNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceMYSqlNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceMYSqlTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceNATGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceNATGATEWAIeTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceNATGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceNATGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceNETWORKELB {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceNETWORKELBNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceNETWORKELBTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceNETWORKELBNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceNETWORKELBNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceNETWORKELBNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceNETWORKELBTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceNETWORKINTERFACE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceNETWORKINTERFACETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceNETWORKINTERFACENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceNETWORKINTERFACETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceOPSWORK {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceOPSWORKNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceOPSWORKTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceOPSWORKNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceOPSWORKNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceOPSWORKNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceOPSWORKTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServicePOSTGRESql {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServicePOSTGRESqlNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServicePOSTGRESqlTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServicePOSTGRESqlNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServicePOSTGRESqlNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServicePOSTGRESqlNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServicePOSTGRESqlTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServicePUBLICIp {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServicePUBLICIpNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServicePUBLICIpTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServicePUBLICIpNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServicePUBLICIpNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServicePUBLICIpNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServicePUBLICIpTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceQUEUESTORAGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceQUEUESTORAGETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceQUEUESTORAGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceQUEUESTORAGETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceRD {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceRDNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceRDTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceRDNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceRDNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceRDNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceRDTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEM {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceRECOVERYPROTECTEDITEMTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceRECOVERYSERVICE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceRECOVERYSERVICETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceRECOVERYSERVICENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceRECOVERYSERVICETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceREDISCACH {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceREDISCACHNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceREDISCACHTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceREDISCACHNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceREDISCACHNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceREDISCACHNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceREDISCACHTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceREDSHIFT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceREDSHIFTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceREDSHIFTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceREDSHIFTNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceREDSHIFTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceREDSHIFTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceREDSHIFTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceROUTE53 {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceROUTE53NormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceROUTE53Tag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceROUTE53NormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceROUTE53NormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceROUTE53NormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceROUTE53RESOLVER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceROUTE53RESOLVERTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceROUTE53RESOLVERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceROUTE53RESOLVERTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceROUTE53Tag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceS3 {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceS3NormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceS3Tag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceS3NormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceS3NormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceS3NormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceS3Tag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSAGEMAKER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceSAGEMAKERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceSAGEMAKERTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSAGEMAKERNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceSAGEMAKERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSAGEMAKERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSAGEMAKERTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceSENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceSETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceSENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSERVICEBU {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceSERVICEBUNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceSERVICEBUTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSERVICEBUNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceSERVICEBUNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSERVICEBUNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSERVICEBUTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSN {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceSNNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceSNTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSNNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceSNNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSNNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSNTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSQ {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceSQNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceSQTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSQNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceSQNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSQNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSQTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSTEPFUNCTION {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceSTEPFUNCTIONTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSTEPFUNCTIONNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSTEPFUNCTIONTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSTORAGEACCOUNT {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceSTORAGEACCOUNTTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSTORAGEACCOUNTNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSTORAGEACCOUNTTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSWFACTIVITy {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceSWFACTIVITyTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSWFACTIVITyNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSWFACTIVITyTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSWFWORKFLOW {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceSWFWORKFLOWTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSWFWORKFLOWNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSWFWORKFLOWTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSYNAPSEWORKSPACE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceSYNAPSEWORKSPACETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSYNAPSEWORKSPACENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSYNAPSEWORKSPACETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSqlDATABASE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceSqlDATABASENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceSqlDATABASETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSqlDATABASENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceSqlDATABASENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSqlDATABASENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSqlDATABASETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSqlELASTICPOOL {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceSqlELASTICPOOLTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSqlELASTICPOOLNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSqlELASTICPOOLTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceSqlMANAGEDINSTANCE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceSqlMANAGEDINSTANCETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceSqlMANAGEDINSTANCENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceSqlMANAGEDINSTANCETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceTABLESTORAGE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceTABLESTORAGENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceTABLESTORAGETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceTABLESTORAGENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceTABLESTORAGENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceTABLESTORAGENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceTABLESTORAGETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceTRAFFICMANAGER {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceTRAFFICMANAGERTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceTRAFFICMANAGERNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceTRAFFICMANAGERTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceTRANSITGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceTRANSITGATEWAIeTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceTRANSITGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceTRANSITGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceVIRTUALDESKTOP {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceVIRTUALDESKTOPTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALDESKTOPNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALDESKTOPTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceVIRTUALMACHINETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESET {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVm {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINESCALESETVmTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceVIRTUALMACHINETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIe {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceVIRTUALNETWORKGATEWAIeTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceVPN {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceVPNNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceVPNTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceVPNNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceVPNNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceVPNNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceVPNTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceWORKSPACE {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceWORKSPACENormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceWORKSPACETag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceWORKSPACEDIRECTORy {
    customNSPSchedule?: string;
    deadOperation?: string;
    deviceDisplayNameTemplate?: string;
    disableStopTerminateHostMonitor?: boolean;
    disableTerminatedHostAlerting?: boolean;
    monitoringRegionInfos?: string[];
    monitoringRegions?: string[];
    nameFilters?: string[];
    normalCollectorConfigs?: outputs.GetDeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfig[];
    selectAll?: boolean;
    tags?: outputs.GetDeviceGroupExtraServiceWORKSPACEDIRECTORyTag[];
    useDefault: boolean;
}

export interface GetDeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceWORKSPACEDIRECTORyNormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceWORKSPACEDIRECTORyTag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupExtraServiceWORKSPACENormalCollectorConfig {
    collectors?: outputs.GetDeviceGroupExtraServiceWORKSPACENormalCollectorConfigCollector[];
    enabled: boolean;
}

export interface GetDeviceGroupExtraServiceWORKSPACENormalCollectorConfigCollector {
    appliesTo: string;
    autoBalancedCollectorGroupId: number;
    collectorId: number;
    priority: number;
    usePublicIp: boolean;
}

export interface GetDeviceGroupExtraServiceWORKSPACETag {
    name: string;
    operation: string;
    value: string;
}

export interface GetDeviceGroupGcpTestResult {
    detailLink?: string;
    noPermissionServices?: string[];
    nonPermissionErrors?: string[];
}

export interface GetDeviceGroupSubGroup {
    appliesTo: string;
    awsRegionsInfo: string;
    azureRegionsInfo: string;
    description: string;
    fullPath: string;
    gcpRegionsInfo: string;
    groupType: string;
    id: number;
    name: string;
    numOfDirectDevices: number;
    numOfDirectSubGroups: number;
    numOfHosts: number;
    userPermission: string;
}

export interface GetDeviceInheritedProperty {
    name: string;
    value: string;
}

export interface GetDeviceSystemProperty {
    name: string;
    value: string;
}

export interface GetEscalationChainCcDestination {
    addr: string;
    contact: string;
    method: string;
    type: string;
}

export interface GetEscalationChainDestination {
    periods: outputs.GetEscalationChainDestinationPeriod[];
    stages: outputs.GetEscalationChainDestinationStage[][];
    type: string;
}

export interface GetEscalationChainDestinationPeriod {
    endMinutes: number;
    startMinutes: number;
    timezone: string;
    weekDays: number[];
}

export interface GetEscalationChainDestinationStage {
    addr: string;
    contact: string;
    method: string;
    type: string;
}

export interface GetWebsiteGroupProperty {
    name: string;
    value: string;
}

export interface GetWebsiteStep {
    auths: outputs.GetWebsiteStepAuth[];
    description: string;
    enable: boolean;
    followRedirection: boolean;
    fullpageLoad: boolean;
    httpBody: string;
    httpHeaders: string;
    httpMethod: string;
    httpVersion: string;
    invertMatch: boolean;
    keyword: string;
    label: string;
    matchType: string;
    name: string;
    path: string;
    postDataEditType: string;
    reqScript: string;
    reqType: string;
    requireAuth: boolean;
    respScript: string;
    respType: string;
    schema: string;
    statusCode: string;
    timeout: number;
    type: string;
    url: string;
    useDefaultRoot: boolean;
}

export interface GetWebsiteStepAuth {
    domain: string;
    password: string;
    type: string;
    userName: string;
}

export interface GetWebsiteTestLocation {
    all?: boolean;
    collectorIds?: number[];
    collectors?: outputs.GetWebsiteTestLocationCollector[];
    smgIds?: number[];
}

export interface GetWebsiteTestLocationCollector {
    collectorGroupId: number;
    collectorGroupName: string;
    description: string;
    hostname: string;
    id: number;
    status: string;
}

export interface WebsiteGroupProperty {
    name: string;
    value: string;
}

export interface WebsiteStep {
    auths: outputs.WebsiteStepAuth[];
    description: string;
    enable: boolean;
    followRedirection: boolean;
    fullpageLoad: boolean;
    httpBody: string;
    httpHeaders: string;
    httpMethod: string;
    httpVersion: string;
    invertMatch: boolean;
    keyword: string;
    label: string;
    matchType: string;
    name: string;
    path: string;
    postDataEditType: string;
    reqScript: string;
    reqType: string;
    requireAuth: boolean;
    respScript: string;
    respType: string;
    schema: string;
    statusCode: string;
    timeout: number;
    type: string;
    url: string;
    useDefaultRoot: boolean;
}

export interface WebsiteStepAuth {
    domain: string;
    password: string;
    type: string;
    userName: string;
}

export interface WebsiteTestLocation {
    all: boolean;
    collectorIds: number[];
    collectors: outputs.WebsiteTestLocationCollector[];
    smgIds: number[];
}

export interface WebsiteTestLocationCollector {
    collectorGroupId: number;
    collectorGroupName: string;
    description: string;
    hostname: string;
    id: number;
    status: string;
}

