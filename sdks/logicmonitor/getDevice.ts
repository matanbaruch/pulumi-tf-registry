// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDevice(args?: GetDeviceArgs, opts?: pulumi.InvokeOptions): Promise<GetDeviceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("logicmonitor:index/getDevice:getDevice", {
        "autoBalancedCollectorGroupId": args.autoBalancedCollectorGroupId,
        "autoProperties": args.autoProperties,
        "autoPropsAssignedOn": args.autoPropsAssignedOn,
        "autoPropsUpdatedOn": args.autoPropsUpdatedOn,
        "awsState": args.awsState,
        "azureState": args.azureState,
        "collectorDescription": args.collectorDescription,
        "createdOn": args.createdOn,
        "currentCollectorId": args.currentCollectorId,
        "customProperties": args.customProperties,
        "deletedTimeInMs": args.deletedTimeInMs,
        "description": args.description,
        "deviceType": args.deviceType,
        "disableAlerting": args.disableAlerting,
        "displayName": args.displayName,
        "enableNetflow": args.enableNetflow,
        "filter": args.filter,
        "gcpState": args.gcpState,
        "hostGroupIds": args.hostGroupIds,
        "hostStatus": args.hostStatus,
        "id": args.id,
        "inheritedProperties": args.inheritedProperties,
        "lastDataTime": args.lastDataTime,
        "lastRawdataTime": args.lastRawdataTime,
        "link": args.link,
        "name": args.name,
        "netflowCollectorDescription": args.netflowCollectorDescription,
        "netflowCollectorGroupId": args.netflowCollectorGroupId,
        "netflowCollectorGroupName": args.netflowCollectorGroupName,
        "netflowCollectorId": args.netflowCollectorId,
        "preferredCollectorGroupId": args.preferredCollectorGroupId,
        "preferredCollectorGroupName": args.preferredCollectorGroupName,
        "preferredCollectorId": args.preferredCollectorId,
        "relatedDeviceId": args.relatedDeviceId,
        "scanConfigId": args.scanConfigId,
        "systemProperties": args.systemProperties,
        "toDeleteTimeInMs": args.toDeleteTimeInMs,
        "upTimeInSeconds": args.upTimeInSeconds,
        "updatedOn": args.updatedOn,
        "userPermission": args.userPermission,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDevice.
 */
export interface GetDeviceArgs {
    autoBalancedCollectorGroupId?: number;
    autoProperties?: inputs.GetDeviceAutoProperty[];
    autoPropsAssignedOn?: number;
    autoPropsUpdatedOn?: number;
    awsState?: number;
    azureState?: number;
    collectorDescription?: string;
    createdOn?: number;
    currentCollectorId?: number;
    customProperties?: inputs.GetDeviceCustomProperty[];
    deletedTimeInMs?: number;
    description?: string;
    deviceType?: number;
    disableAlerting?: boolean;
    displayName?: string;
    enableNetflow?: boolean;
    filter?: string;
    gcpState?: number;
    hostGroupIds?: string;
    hostStatus?: string;
    id?: number;
    inheritedProperties?: inputs.GetDeviceInheritedProperty[];
    lastDataTime?: number;
    lastRawdataTime?: number;
    link?: string;
    name?: string;
    netflowCollectorDescription?: string;
    netflowCollectorGroupId?: number;
    netflowCollectorGroupName?: string;
    netflowCollectorId?: number;
    preferredCollectorGroupId?: number;
    preferredCollectorGroupName?: string;
    preferredCollectorId?: number;
    relatedDeviceId?: number;
    scanConfigId?: number;
    systemProperties?: inputs.GetDeviceSystemProperty[];
    toDeleteTimeInMs?: number;
    upTimeInSeconds?: number;
    updatedOn?: number;
    userPermission?: string;
}

/**
 * A collection of values returned by getDevice.
 */
export interface GetDeviceResult {
    readonly autoBalancedCollectorGroupId?: number;
    readonly autoProperties?: outputs.GetDeviceAutoProperty[];
    readonly autoPropsAssignedOn?: number;
    readonly autoPropsUpdatedOn?: number;
    readonly awsState?: number;
    readonly azureState?: number;
    readonly collectorDescription?: string;
    readonly createdOn?: number;
    readonly currentCollectorId?: number;
    readonly customProperties?: outputs.GetDeviceCustomProperty[];
    readonly deletedTimeInMs?: number;
    readonly description?: string;
    readonly deviceType?: number;
    readonly disableAlerting?: boolean;
    readonly displayName?: string;
    readonly enableNetflow?: boolean;
    readonly filter?: string;
    readonly gcpState?: number;
    readonly hostGroupIds?: string;
    readonly hostStatus?: string;
    readonly id: number;
    readonly inheritedProperties?: outputs.GetDeviceInheritedProperty[];
    readonly lastDataTime?: number;
    readonly lastRawdataTime?: number;
    readonly link?: string;
    readonly name?: string;
    readonly netflowCollectorDescription?: string;
    readonly netflowCollectorGroupId?: number;
    readonly netflowCollectorGroupName?: string;
    readonly netflowCollectorId?: number;
    readonly preferredCollectorGroupId?: number;
    readonly preferredCollectorGroupName?: string;
    readonly preferredCollectorId?: number;
    readonly relatedDeviceId?: number;
    readonly scanConfigId?: number;
    readonly systemProperties?: outputs.GetDeviceSystemProperty[];
    readonly toDeleteTimeInMs?: number;
    readonly upTimeInSeconds?: number;
    readonly updatedOn?: number;
    readonly userPermission?: string;
}
export function getDeviceOutput(args?: GetDeviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeviceResult> {
    return pulumi.output(args).apply((a: any) => getDevice(a, opts))
}

/**
 * A collection of arguments for invoking getDevice.
 */
export interface GetDeviceOutputArgs {
    autoBalancedCollectorGroupId?: pulumi.Input<number>;
    autoProperties?: pulumi.Input<pulumi.Input<inputs.GetDeviceAutoPropertyArgs>[]>;
    autoPropsAssignedOn?: pulumi.Input<number>;
    autoPropsUpdatedOn?: pulumi.Input<number>;
    awsState?: pulumi.Input<number>;
    azureState?: pulumi.Input<number>;
    collectorDescription?: pulumi.Input<string>;
    createdOn?: pulumi.Input<number>;
    currentCollectorId?: pulumi.Input<number>;
    customProperties?: pulumi.Input<pulumi.Input<inputs.GetDeviceCustomPropertyArgs>[]>;
    deletedTimeInMs?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    deviceType?: pulumi.Input<number>;
    disableAlerting?: pulumi.Input<boolean>;
    displayName?: pulumi.Input<string>;
    enableNetflow?: pulumi.Input<boolean>;
    filter?: pulumi.Input<string>;
    gcpState?: pulumi.Input<number>;
    hostGroupIds?: pulumi.Input<string>;
    hostStatus?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    inheritedProperties?: pulumi.Input<pulumi.Input<inputs.GetDeviceInheritedPropertyArgs>[]>;
    lastDataTime?: pulumi.Input<number>;
    lastRawdataTime?: pulumi.Input<number>;
    link?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    netflowCollectorDescription?: pulumi.Input<string>;
    netflowCollectorGroupId?: pulumi.Input<number>;
    netflowCollectorGroupName?: pulumi.Input<string>;
    netflowCollectorId?: pulumi.Input<number>;
    preferredCollectorGroupId?: pulumi.Input<number>;
    preferredCollectorGroupName?: pulumi.Input<string>;
    preferredCollectorId?: pulumi.Input<number>;
    relatedDeviceId?: pulumi.Input<number>;
    scanConfigId?: pulumi.Input<number>;
    systemProperties?: pulumi.Input<pulumi.Input<inputs.GetDeviceSystemPropertyArgs>[]>;
    toDeleteTimeInMs?: pulumi.Input<number>;
    upTimeInSeconds?: pulumi.Input<number>;
    updatedOn?: pulumi.Input<number>;
    userPermission?: pulumi.Input<string>;
}
