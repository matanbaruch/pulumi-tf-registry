// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDashboard(args?: GetDashboardArgs, opts?: pulumi.InvokeOptions): Promise<GetDashboardResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("logicmonitor:index/getDashboard:getDashboard", {
        "description": args.description,
        "filter": args.filter,
        "fullName": args.fullName,
        "groupFullPath": args.groupFullPath,
        "groupId": args.groupId,
        "groupName": args.groupName,
        "id": args.id,
        "name": args.name,
        "owner": args.owner,
        "sharable": args.sharable,
        "template": args.template,
        "userPermission": args.userPermission,
        "widgetTokens": args.widgetTokens,
        "widgetsConfig": args.widgetsConfig,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDashboard.
 */
export interface GetDashboardArgs {
    description?: string;
    filter?: string;
    fullName?: string;
    groupFullPath?: string;
    groupId?: number;
    groupName?: string;
    id?: number;
    name?: string;
    owner?: string;
    sharable?: boolean;
    template?: {[key: string]: string};
    userPermission?: string;
    widgetTokens?: inputs.GetDashboardWidgetToken[];
    widgetsConfig?: {[key: string]: string};
}

/**
 * A collection of values returned by getDashboard.
 */
export interface GetDashboardResult {
    readonly description?: string;
    readonly filter?: string;
    readonly fullName?: string;
    readonly groupFullPath?: string;
    readonly groupId?: number;
    readonly groupName?: string;
    readonly id: number;
    readonly name?: string;
    readonly owner?: string;
    readonly sharable?: boolean;
    readonly template?: {[key: string]: string};
    readonly userPermission?: string;
    readonly widgetTokens?: outputs.GetDashboardWidgetToken[];
    readonly widgetsConfig?: {[key: string]: string};
}
export function getDashboardOutput(args?: GetDashboardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDashboardResult> {
    return pulumi.output(args).apply((a: any) => getDashboard(a, opts))
}

/**
 * A collection of arguments for invoking getDashboard.
 */
export interface GetDashboardOutputArgs {
    description?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    fullName?: pulumi.Input<string>;
    groupFullPath?: pulumi.Input<string>;
    groupId?: pulumi.Input<number>;
    groupName?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
    sharable?: pulumi.Input<boolean>;
    template?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    userPermission?: pulumi.Input<string>;
    widgetTokens?: pulumi.Input<pulumi.Input<inputs.GetDashboardWidgetTokenArgs>[]>;
    widgetsConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
