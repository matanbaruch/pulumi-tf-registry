// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPolicyValue(args: GetPolicyValueArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyValueResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("turbot:index/getPolicyValue:getPolicyValue", {
        "id": args.id,
        "resource": args.resource,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPolicyValue.
 */
export interface GetPolicyValueArgs {
    id?: string;
    resource: string;
    type: string;
}

/**
 * A collection of values returned by getPolicyValue.
 */
export interface GetPolicyValueResult {
    readonly details: string;
    readonly id: string;
    readonly precedence: string;
    readonly reason: string;
    readonly resource: string;
    readonly settingId: string;
    readonly state: string;
    readonly type: string;
    readonly value: string;
    readonly valueSource: string;
}
export function getPolicyValueOutput(args: GetPolicyValueOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyValueResult> {
    return pulumi.output(args).apply((a: any) => getPolicyValue(a, opts))
}

/**
 * A collection of arguments for invoking getPolicyValue.
 */
export interface GetPolicyValueOutputArgs {
    id?: pulumi.Input<string>;
    resource: pulumi.Input<string>;
    type: pulumi.Input<string>;
}
