// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SmartFolder extends pulumi.CustomResource {
    /**
     * Get an existing SmartFolder resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SmartFolderState, opts?: pulumi.CustomResourceOptions): SmartFolder {
        return new SmartFolder(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'turbot:index/smartFolder:SmartFolder';

    /**
     * Returns true if the given object is an instance of SmartFolder.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SmartFolder {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SmartFolder.__pulumiType;
    }

    public readonly akas!: pulumi.Output<string[] | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly filter!: pulumi.Output<string | undefined>;
    public readonly parent!: pulumi.Output<string | undefined>;
    public /*out*/ readonly parentAkas!: pulumi.Output<string[]>;
    public readonly title!: pulumi.Output<string>;

    /**
     * Create a SmartFolder resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SmartFolderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SmartFolderArgs | SmartFolderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SmartFolderState | undefined;
            resourceInputs["akas"] = state ? state.akas : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["filter"] = state ? state.filter : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["parentAkas"] = state ? state.parentAkas : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
        } else {
            const args = argsOrState as SmartFolderArgs | undefined;
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["akas"] = args ? args.akas : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["filter"] = args ? args.filter : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["parentAkas"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SmartFolder.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SmartFolder resources.
 */
export interface SmartFolderState {
    akas?: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    parent?: pulumi.Input<string>;
    parentAkas?: pulumi.Input<pulumi.Input<string>[]>;
    title?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SmartFolder resource.
 */
export interface SmartFolderArgs {
    akas?: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    parent?: pulumi.Input<string>;
    title: pulumi.Input<string>;
}
