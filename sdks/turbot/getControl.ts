// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getControl(args?: GetControlArgs, opts?: pulumi.InvokeOptions): Promise<GetControlResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("turbot:index/getControl:getControl", {
        "id": args.id,
        "resource": args.resource,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getControl.
 */
export interface GetControlArgs {
    id?: string;
    resource?: string;
    type?: string;
}

/**
 * A collection of values returned by getControl.
 */
export interface GetControlResult {
    readonly details: string;
    readonly id?: string;
    readonly reason: string;
    readonly resource?: string;
    readonly state: string;
    readonly type?: string;
}
export function getControlOutput(args?: GetControlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetControlResult> {
    return pulumi.output(args).apply((a: any) => getControl(a, opts))
}

/**
 * A collection of arguments for invoking getControl.
 */
export interface GetControlOutputArgs {
    id?: pulumi.Input<string>;
    resource?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
