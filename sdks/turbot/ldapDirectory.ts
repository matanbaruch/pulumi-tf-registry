// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LdapDirectory extends pulumi.CustomResource {
    /**
     * Get an existing LdapDirectory resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LdapDirectoryState, opts?: pulumi.CustomResourceOptions): LdapDirectory {
        return new LdapDirectory(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'turbot:index/ldapDirectory:LdapDirectory';

    /**
     * Returns true if the given object is an instance of LdapDirectory.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LdapDirectory {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LdapDirectory.__pulumiType;
    }

    public readonly base!: pulumi.Output<string>;
    public readonly connectivityTestFilter!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly disabledGroupFilter!: pulumi.Output<string | undefined>;
    public readonly disabledUserFilter!: pulumi.Output<string | undefined>;
    public readonly distinguishedName!: pulumi.Output<string>;
    public readonly groupMemberOfAttribute!: pulumi.Output<string | undefined>;
    public readonly groupMembershipAttribute!: pulumi.Output<string | undefined>;
    public readonly groupObjectFilter!: pulumi.Output<string | undefined>;
    public readonly groupProfileIdTemplate!: pulumi.Output<string | undefined>;
    public readonly groupSearchFilter!: pulumi.Output<string | undefined>;
    public readonly groupSyncFilter!: pulumi.Output<string | undefined>;
    public readonly parent!: pulumi.Output<string>;
    public /*out*/ readonly parentAkas!: pulumi.Output<string[]>;
    public readonly password!: pulumi.Output<string>;
    public readonly profileIdTemplate!: pulumi.Output<string>;
    public readonly rejectUnauthorized!: pulumi.Output<boolean>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly title!: pulumi.Output<string>;
    public readonly tlsEnabled!: pulumi.Output<boolean>;
    public readonly tlsServerCertificate!: pulumi.Output<string | undefined>;
    public readonly url!: pulumi.Output<string>;
    public readonly userCanonicalNameAttribute!: pulumi.Output<string | undefined>;
    public readonly userDisplayNameAttribute!: pulumi.Output<string | undefined>;
    public readonly userEmailAttribute!: pulumi.Output<string | undefined>;
    public readonly userFamilyNameAttribute!: pulumi.Output<string | undefined>;
    public readonly userGivenNameAttribute!: pulumi.Output<string | undefined>;
    public readonly userMatchFilter!: pulumi.Output<string | undefined>;
    public readonly userObjectFilter!: pulumi.Output<string | undefined>;
    public readonly userSearchAttributes!: pulumi.Output<string[] | undefined>;
    public readonly userSearchFilter!: pulumi.Output<string | undefined>;

    /**
     * Create a LdapDirectory resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LdapDirectoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LdapDirectoryArgs | LdapDirectoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LdapDirectoryState | undefined;
            resourceInputs["base"] = state ? state.base : undefined;
            resourceInputs["connectivityTestFilter"] = state ? state.connectivityTestFilter : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disabledGroupFilter"] = state ? state.disabledGroupFilter : undefined;
            resourceInputs["disabledUserFilter"] = state ? state.disabledUserFilter : undefined;
            resourceInputs["distinguishedName"] = state ? state.distinguishedName : undefined;
            resourceInputs["groupMemberOfAttribute"] = state ? state.groupMemberOfAttribute : undefined;
            resourceInputs["groupMembershipAttribute"] = state ? state.groupMembershipAttribute : undefined;
            resourceInputs["groupObjectFilter"] = state ? state.groupObjectFilter : undefined;
            resourceInputs["groupProfileIdTemplate"] = state ? state.groupProfileIdTemplate : undefined;
            resourceInputs["groupSearchFilter"] = state ? state.groupSearchFilter : undefined;
            resourceInputs["groupSyncFilter"] = state ? state.groupSyncFilter : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["parentAkas"] = state ? state.parentAkas : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["profileIdTemplate"] = state ? state.profileIdTemplate : undefined;
            resourceInputs["rejectUnauthorized"] = state ? state.rejectUnauthorized : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
            resourceInputs["tlsEnabled"] = state ? state.tlsEnabled : undefined;
            resourceInputs["tlsServerCertificate"] = state ? state.tlsServerCertificate : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["userCanonicalNameAttribute"] = state ? state.userCanonicalNameAttribute : undefined;
            resourceInputs["userDisplayNameAttribute"] = state ? state.userDisplayNameAttribute : undefined;
            resourceInputs["userEmailAttribute"] = state ? state.userEmailAttribute : undefined;
            resourceInputs["userFamilyNameAttribute"] = state ? state.userFamilyNameAttribute : undefined;
            resourceInputs["userGivenNameAttribute"] = state ? state.userGivenNameAttribute : undefined;
            resourceInputs["userMatchFilter"] = state ? state.userMatchFilter : undefined;
            resourceInputs["userObjectFilter"] = state ? state.userObjectFilter : undefined;
            resourceInputs["userSearchAttributes"] = state ? state.userSearchAttributes : undefined;
            resourceInputs["userSearchFilter"] = state ? state.userSearchFilter : undefined;
        } else {
            const args = argsOrState as LdapDirectoryArgs | undefined;
            if ((!args || args.base === undefined) && !opts.urn) {
                throw new Error("Missing required property 'base'");
            }
            if ((!args || args.distinguishedName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'distinguishedName'");
            }
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.profileIdTemplate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'profileIdTemplate'");
            }
            if ((!args || args.rejectUnauthorized === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rejectUnauthorized'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            if ((!args || args.tlsEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tlsEnabled'");
            }
            if ((!args || args.url === undefined) && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            resourceInputs["base"] = args ? args.base : undefined;
            resourceInputs["connectivityTestFilter"] = args ? args.connectivityTestFilter : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disabledGroupFilter"] = args ? args.disabledGroupFilter : undefined;
            resourceInputs["disabledUserFilter"] = args ? args.disabledUserFilter : undefined;
            resourceInputs["distinguishedName"] = args ? args.distinguishedName : undefined;
            resourceInputs["groupMemberOfAttribute"] = args ? args.groupMemberOfAttribute : undefined;
            resourceInputs["groupMembershipAttribute"] = args ? args.groupMembershipAttribute : undefined;
            resourceInputs["groupObjectFilter"] = args ? args.groupObjectFilter : undefined;
            resourceInputs["groupProfileIdTemplate"] = args ? args.groupProfileIdTemplate : undefined;
            resourceInputs["groupSearchFilter"] = args ? args.groupSearchFilter : undefined;
            resourceInputs["groupSyncFilter"] = args ? args.groupSyncFilter : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["profileIdTemplate"] = args ? args.profileIdTemplate : undefined;
            resourceInputs["rejectUnauthorized"] = args ? args.rejectUnauthorized : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["tlsEnabled"] = args ? args.tlsEnabled : undefined;
            resourceInputs["tlsServerCertificate"] = args ? args.tlsServerCertificate : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["userCanonicalNameAttribute"] = args ? args.userCanonicalNameAttribute : undefined;
            resourceInputs["userDisplayNameAttribute"] = args ? args.userDisplayNameAttribute : undefined;
            resourceInputs["userEmailAttribute"] = args ? args.userEmailAttribute : undefined;
            resourceInputs["userFamilyNameAttribute"] = args ? args.userFamilyNameAttribute : undefined;
            resourceInputs["userGivenNameAttribute"] = args ? args.userGivenNameAttribute : undefined;
            resourceInputs["userMatchFilter"] = args ? args.userMatchFilter : undefined;
            resourceInputs["userObjectFilter"] = args ? args.userObjectFilter : undefined;
            resourceInputs["userSearchAttributes"] = args ? args.userSearchAttributes : undefined;
            resourceInputs["userSearchFilter"] = args ? args.userSearchFilter : undefined;
            resourceInputs["parentAkas"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(LdapDirectory.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LdapDirectory resources.
 */
export interface LdapDirectoryState {
    base?: pulumi.Input<string>;
    connectivityTestFilter?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    disabledGroupFilter?: pulumi.Input<string>;
    disabledUserFilter?: pulumi.Input<string>;
    distinguishedName?: pulumi.Input<string>;
    groupMemberOfAttribute?: pulumi.Input<string>;
    groupMembershipAttribute?: pulumi.Input<string>;
    groupObjectFilter?: pulumi.Input<string>;
    groupProfileIdTemplate?: pulumi.Input<string>;
    groupSearchFilter?: pulumi.Input<string>;
    groupSyncFilter?: pulumi.Input<string>;
    parent?: pulumi.Input<string>;
    parentAkas?: pulumi.Input<pulumi.Input<string>[]>;
    password?: pulumi.Input<string>;
    profileIdTemplate?: pulumi.Input<string>;
    rejectUnauthorized?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    title?: pulumi.Input<string>;
    tlsEnabled?: pulumi.Input<boolean>;
    tlsServerCertificate?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
    userCanonicalNameAttribute?: pulumi.Input<string>;
    userDisplayNameAttribute?: pulumi.Input<string>;
    userEmailAttribute?: pulumi.Input<string>;
    userFamilyNameAttribute?: pulumi.Input<string>;
    userGivenNameAttribute?: pulumi.Input<string>;
    userMatchFilter?: pulumi.Input<string>;
    userObjectFilter?: pulumi.Input<string>;
    userSearchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    userSearchFilter?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LdapDirectory resource.
 */
export interface LdapDirectoryArgs {
    base: pulumi.Input<string>;
    connectivityTestFilter?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    disabledGroupFilter?: pulumi.Input<string>;
    disabledUserFilter?: pulumi.Input<string>;
    distinguishedName: pulumi.Input<string>;
    groupMemberOfAttribute?: pulumi.Input<string>;
    groupMembershipAttribute?: pulumi.Input<string>;
    groupObjectFilter?: pulumi.Input<string>;
    groupProfileIdTemplate?: pulumi.Input<string>;
    groupSearchFilter?: pulumi.Input<string>;
    groupSyncFilter?: pulumi.Input<string>;
    parent: pulumi.Input<string>;
    password: pulumi.Input<string>;
    profileIdTemplate: pulumi.Input<string>;
    rejectUnauthorized: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    title: pulumi.Input<string>;
    tlsEnabled: pulumi.Input<boolean>;
    tlsServerCertificate?: pulumi.Input<string>;
    url: pulumi.Input<string>;
    userCanonicalNameAttribute?: pulumi.Input<string>;
    userDisplayNameAttribute?: pulumi.Input<string>;
    userEmailAttribute?: pulumi.Input<string>;
    userFamilyNameAttribute?: pulumi.Input<string>;
    userGivenNameAttribute?: pulumi.Input<string>;
    userMatchFilter?: pulumi.Input<string>;
    userObjectFilter?: pulumi.Input<string>;
    userSearchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    userSearchFilter?: pulumi.Input<string>;
}
