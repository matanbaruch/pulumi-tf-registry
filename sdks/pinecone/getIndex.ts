// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIndex(args: GetIndexArgs, opts?: pulumi.InvokeOptions): Promise<GetIndexResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pinecone:index/getIndex:getIndex", {
        "name": args.name,
        "spec": args.spec,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIndex.
 */
export interface GetIndexArgs {
    name: string;
    spec?: inputs.GetIndexSpec;
    status?: inputs.GetIndexStatus;
}

/**
 * A collection of values returned by getIndex.
 */
export interface GetIndexResult {
    readonly dimension: number;
    readonly host: string;
    readonly id: string;
    readonly metric: string;
    readonly name: string;
    readonly spec: outputs.GetIndexSpec;
    readonly status: outputs.GetIndexStatus;
}
export function getIndexOutput(args: GetIndexOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIndexResult> {
    return pulumi.output(args).apply((a: any) => getIndex(a, opts))
}

/**
 * A collection of arguments for invoking getIndex.
 */
export interface GetIndexOutputArgs {
    name: pulumi.Input<string>;
    spec?: pulumi.Input<inputs.GetIndexSpecArgs>;
    status?: pulumi.Input<inputs.GetIndexStatusArgs>;
}
