// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { ApplicationSpecArgs, ApplicationSpecState } from "./applicationSpec";
export type ApplicationSpec = import("./applicationSpec").ApplicationSpec;
export const ApplicationSpec: typeof import("./applicationSpec").ApplicationSpec = null as any;
utilities.lazyLoad(exports, ["ApplicationSpec"], () => require("./applicationSpec"));

export { CollectionArgs, CollectionState } from "./collection";
export type Collection = import("./collection").Collection;
export const Collection: typeof import("./collection").Collection = null as any;
utilities.lazyLoad(exports, ["Collection"], () => require("./collection"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));

export { RuleArgs, RuleState } from "./rule";
export type Rule = import("./rule").Rule;
export const Rule: typeof import("./rule").Rule = null as any;
utilities.lazyLoad(exports, ["Rule"], () => require("./rule"));


// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "prismacloud-waas:index/applicationSpec:ApplicationSpec":
                return new ApplicationSpec(name, <any>undefined, { urn })
            case "prismacloud-waas:index/collection:Collection":
                return new Collection(name, <any>undefined, { urn })
            case "prismacloud-waas:index/rule:Rule":
                return new Rule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("prismacloud-waas", "index/applicationSpec", _module)
pulumi.runtime.registerResourceModule("prismacloud-waas", "index/collection", _module)
pulumi.runtime.registerResourceModule("prismacloud-waas", "index/rule", _module)
pulumi.runtime.registerResourcePackage("prismacloud-waas", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:prismacloud-waas") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
