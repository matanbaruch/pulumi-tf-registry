// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApplicationSpec extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationSpec resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationSpecState, opts?: pulumi.CustomResourceOptions): ApplicationSpec {
        return new ApplicationSpec(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prismacloud-waas:index/applicationSpec:ApplicationSpec';

    /**
     * Returns true if the given object is an instance of ApplicationSpec.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationSpec {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationSpec.__pulumiType;
    }

    /**
     * APISpec is an API specification
     */
    public readonly apiSpec!: pulumi.Output<outputs.ApplicationSpecApiSpec>;
    /**
     * Unique ID for the app
     */
    public readonly appId!: pulumi.Output<string | undefined>;
    /**
     * Local File Inclusion protection configuration
     */
    public readonly attackTools!: pulumi.Output<outputs.ApplicationSpecAttackTools>;
    /**
     * Configuration for automatic application of virtual patches
     */
    public readonly autoApplyPatchesSpec!: pulumi.Output<outputs.ApplicationSpecAutoApplyPatchesSpec>;
    /**
     * Ban duration, in minutes
     */
    public readonly banDurationMinutes!: pulumi.Output<number>;
    /**
     * Represents app configuration related to HTTP Body
     */
    public readonly body!: pulumi.Output<outputs.ApplicationSpecBody>;
    /**
     * BotProtectionSpec is the bot protection configuration
     */
    public readonly botProtectionSpec!: pulumi.Output<outputs.ApplicationSpecBotProtectionSpec>;
    /**
     * Secret contains the plain and encrypted version of a value (the plain version is never stored in the DB)
     */
    public readonly certificate!: pulumi.Output<outputs.ApplicationSpecCertificate | undefined>;
    /**
     * Indicates whether Clickjacking protection is enabled. When enabled, WAAS modifies all response headers, setting the
     * X-Frame-Options response header value to SAMEORIGIN. The SAMEORIGIN directive only permits a page to be displayed in a
     * frame on the same origin as the page itself.
     */
    public readonly clickjackingEnabled!: pulumi.Output<boolean>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    public readonly cmdi!: pulumi.Output<outputs.ApplicationSpecCmdi>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    public readonly codeInjection!: pulumi.Output<outputs.ApplicationSpecCodeInjection>;
    /**
     * Indicates whether Cross-Site Request Forgery (CSRF) protection is enabled
     */
    public readonly csrfEnabled!: pulumi.Output<boolean>;
    /**
     * Custom block HTTP response and HTML page
     */
    public readonly customBlockResponseConfig!: pulumi.Output<outputs.ApplicationSpecCustomBlockResponseConfig>;
    /**
     * List of custom rules
     */
    public readonly customRules!: pulumi.Output<outputs.ApplicationSpecCustomRule[] | undefined>;
    /**
     * Indicates if event ID header should be attached to the response
     */
    public readonly disableEventIdHeader!: pulumi.Output<boolean>;
    /**
     * DoSConfig is a dos policy specification
     */
    public readonly dosConfig!: pulumi.Output<outputs.ApplicationSpecDosConfig>;
    /**
     * Configuration for inspecting HTTP headers
     */
    public readonly headerSpecs!: pulumi.Output<outputs.ApplicationSpecHeaderSpec[]>;
    /**
     * IntelGathering is the configuration for intelligence gathering protections
     */
    public readonly intelGathering!: pulumi.Output<outputs.ApplicationSpecIntelGathering>;
    /**
     * Local File Inclusion protection configuration
     */
    public readonly lfi!: pulumi.Output<outputs.ApplicationSpecLfi>;
    /**
     * Malformed Request protection configuration
     */
    public readonly malformedReq!: pulumi.Output<outputs.ApplicationSpecMalformedReq>;
    /**
     * MaliciousUploadConfig is the configuration for file upload protection
     */
    public readonly maliciousUpload!: pulumi.Output<outputs.ApplicationSpecMaliciousUpload>;
    /**
     * NetworkControls contains the network controls config (e.g., access controls for IPs and countries)
     */
    public readonly networkControls!: pulumi.Output<outputs.ApplicationSpecNetworkControls>;
    /**
     * RemoteHostForwardingConfig defines a remote host to forward requests to
     */
    public readonly remoteHostForwarding!: pulumi.Output<outputs.ApplicationSpecRemoteHostForwarding>;
    /**
     * Configuration for modifying HTTP response headers
     */
    public readonly responseHeaderSpecs!: pulumi.Output<outputs.ApplicationSpecResponseHeaderSpec[]>;
    /**
     * Name of Rule to which Application Spec belongs
     */
    public readonly ruleName!: pulumi.Output<string>;
    /**
     * Indicates if bans in this app are made by session cookie ID
     */
    public readonly sessionCookieBan!: pulumi.Output<boolean>;
    /**
     * Indicates if session cookies are enabled
     */
    public readonly sessionCookieEnabled!: pulumi.Output<boolean>;
    /**
     * Indicates the SameSite attribute of the session cookie is set
     */
    public readonly sessionCookieSameSite!: pulumi.Output<string>;
    /**
     * Indicates the Secure attribute of the session cookie is set
     */
    public readonly sessionCookieSecure!: pulumi.Output<boolean>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    public readonly shellshock!: pulumi.Output<outputs.ApplicationSpecShellshock>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    public readonly sqli!: pulumi.Output<outputs.ApplicationSpecSqli>;
    /**
     * TLSConfig holds the user TLS configuration and the certificate data
     */
    public readonly tlsConfig!: pulumi.Output<outputs.ApplicationSpecTlsConfig | undefined>;
    /**
     * the unique fingerprint of the Application Definition, used for optimistic locking
     */
    public readonly version!: pulumi.Output<string>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    public readonly xss!: pulumi.Output<outputs.ApplicationSpecXss>;

    /**
     * Create a ApplicationSpec resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationSpecArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationSpecArgs | ApplicationSpecState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationSpecState | undefined;
            resourceInputs["apiSpec"] = state ? state.apiSpec : undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["attackTools"] = state ? state.attackTools : undefined;
            resourceInputs["autoApplyPatchesSpec"] = state ? state.autoApplyPatchesSpec : undefined;
            resourceInputs["banDurationMinutes"] = state ? state.banDurationMinutes : undefined;
            resourceInputs["body"] = state ? state.body : undefined;
            resourceInputs["botProtectionSpec"] = state ? state.botProtectionSpec : undefined;
            resourceInputs["certificate"] = state ? state.certificate : undefined;
            resourceInputs["clickjackingEnabled"] = state ? state.clickjackingEnabled : undefined;
            resourceInputs["cmdi"] = state ? state.cmdi : undefined;
            resourceInputs["codeInjection"] = state ? state.codeInjection : undefined;
            resourceInputs["csrfEnabled"] = state ? state.csrfEnabled : undefined;
            resourceInputs["customBlockResponseConfig"] = state ? state.customBlockResponseConfig : undefined;
            resourceInputs["customRules"] = state ? state.customRules : undefined;
            resourceInputs["disableEventIdHeader"] = state ? state.disableEventIdHeader : undefined;
            resourceInputs["dosConfig"] = state ? state.dosConfig : undefined;
            resourceInputs["headerSpecs"] = state ? state.headerSpecs : undefined;
            resourceInputs["intelGathering"] = state ? state.intelGathering : undefined;
            resourceInputs["lfi"] = state ? state.lfi : undefined;
            resourceInputs["malformedReq"] = state ? state.malformedReq : undefined;
            resourceInputs["maliciousUpload"] = state ? state.maliciousUpload : undefined;
            resourceInputs["networkControls"] = state ? state.networkControls : undefined;
            resourceInputs["remoteHostForwarding"] = state ? state.remoteHostForwarding : undefined;
            resourceInputs["responseHeaderSpecs"] = state ? state.responseHeaderSpecs : undefined;
            resourceInputs["ruleName"] = state ? state.ruleName : undefined;
            resourceInputs["sessionCookieBan"] = state ? state.sessionCookieBan : undefined;
            resourceInputs["sessionCookieEnabled"] = state ? state.sessionCookieEnabled : undefined;
            resourceInputs["sessionCookieSameSite"] = state ? state.sessionCookieSameSite : undefined;
            resourceInputs["sessionCookieSecure"] = state ? state.sessionCookieSecure : undefined;
            resourceInputs["shellshock"] = state ? state.shellshock : undefined;
            resourceInputs["sqli"] = state ? state.sqli : undefined;
            resourceInputs["tlsConfig"] = state ? state.tlsConfig : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["xss"] = state ? state.xss : undefined;
        } else {
            const args = argsOrState as ApplicationSpecArgs | undefined;
            if ((!args || args.apiSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiSpec'");
            }
            if ((!args || args.attackTools === undefined) && !opts.urn) {
                throw new Error("Missing required property 'attackTools'");
            }
            if ((!args || args.autoApplyPatchesSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autoApplyPatchesSpec'");
            }
            if ((!args || args.body === undefined) && !opts.urn) {
                throw new Error("Missing required property 'body'");
            }
            if ((!args || args.botProtectionSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botProtectionSpec'");
            }
            if ((!args || args.cmdi === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cmdi'");
            }
            if ((!args || args.codeInjection === undefined) && !opts.urn) {
                throw new Error("Missing required property 'codeInjection'");
            }
            if ((!args || args.csrfEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'csrfEnabled'");
            }
            if ((!args || args.customBlockResponseConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customBlockResponseConfig'");
            }
            if ((!args || args.dosConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dosConfig'");
            }
            if ((!args || args.headerSpecs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'headerSpecs'");
            }
            if ((!args || args.intelGathering === undefined) && !opts.urn) {
                throw new Error("Missing required property 'intelGathering'");
            }
            if ((!args || args.lfi === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lfi'");
            }
            if ((!args || args.malformedReq === undefined) && !opts.urn) {
                throw new Error("Missing required property 'malformedReq'");
            }
            if ((!args || args.maliciousUpload === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maliciousUpload'");
            }
            if ((!args || args.networkControls === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkControls'");
            }
            if ((!args || args.remoteHostForwarding === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remoteHostForwarding'");
            }
            if ((!args || args.responseHeaderSpecs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'responseHeaderSpecs'");
            }
            if ((!args || args.ruleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            if ((!args || args.shellshock === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shellshock'");
            }
            if ((!args || args.sqli === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sqli'");
            }
            if ((!args || args.xss === undefined) && !opts.urn) {
                throw new Error("Missing required property 'xss'");
            }
            resourceInputs["apiSpec"] = args ? args.apiSpec : undefined;
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["attackTools"] = args ? args.attackTools : undefined;
            resourceInputs["autoApplyPatchesSpec"] = args ? args.autoApplyPatchesSpec : undefined;
            resourceInputs["banDurationMinutes"] = args ? args.banDurationMinutes : undefined;
            resourceInputs["body"] = args ? args.body : undefined;
            resourceInputs["botProtectionSpec"] = args ? args.botProtectionSpec : undefined;
            resourceInputs["certificate"] = args ? args.certificate : undefined;
            resourceInputs["clickjackingEnabled"] = args ? args.clickjackingEnabled : undefined;
            resourceInputs["cmdi"] = args ? args.cmdi : undefined;
            resourceInputs["codeInjection"] = args ? args.codeInjection : undefined;
            resourceInputs["csrfEnabled"] = args ? args.csrfEnabled : undefined;
            resourceInputs["customBlockResponseConfig"] = args ? args.customBlockResponseConfig : undefined;
            resourceInputs["customRules"] = args ? args.customRules : undefined;
            resourceInputs["disableEventIdHeader"] = args ? args.disableEventIdHeader : undefined;
            resourceInputs["dosConfig"] = args ? args.dosConfig : undefined;
            resourceInputs["headerSpecs"] = args ? args.headerSpecs : undefined;
            resourceInputs["intelGathering"] = args ? args.intelGathering : undefined;
            resourceInputs["lfi"] = args ? args.lfi : undefined;
            resourceInputs["malformedReq"] = args ? args.malformedReq : undefined;
            resourceInputs["maliciousUpload"] = args ? args.maliciousUpload : undefined;
            resourceInputs["networkControls"] = args ? args.networkControls : undefined;
            resourceInputs["remoteHostForwarding"] = args ? args.remoteHostForwarding : undefined;
            resourceInputs["responseHeaderSpecs"] = args ? args.responseHeaderSpecs : undefined;
            resourceInputs["ruleName"] = args ? args.ruleName : undefined;
            resourceInputs["sessionCookieBan"] = args ? args.sessionCookieBan : undefined;
            resourceInputs["sessionCookieEnabled"] = args ? args.sessionCookieEnabled : undefined;
            resourceInputs["sessionCookieSameSite"] = args ? args.sessionCookieSameSite : undefined;
            resourceInputs["sessionCookieSecure"] = args ? args.sessionCookieSecure : undefined;
            resourceInputs["shellshock"] = args ? args.shellshock : undefined;
            resourceInputs["sqli"] = args ? args.sqli : undefined;
            resourceInputs["tlsConfig"] = args ? args.tlsConfig : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["xss"] = args ? args.xss : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationSpec.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApplicationSpec resources.
 */
export interface ApplicationSpecState {
    /**
     * APISpec is an API specification
     */
    apiSpec?: pulumi.Input<inputs.ApplicationSpecApiSpec>;
    /**
     * Unique ID for the app
     */
    appId?: pulumi.Input<string>;
    /**
     * Local File Inclusion protection configuration
     */
    attackTools?: pulumi.Input<inputs.ApplicationSpecAttackTools>;
    /**
     * Configuration for automatic application of virtual patches
     */
    autoApplyPatchesSpec?: pulumi.Input<inputs.ApplicationSpecAutoApplyPatchesSpec>;
    /**
     * Ban duration, in minutes
     */
    banDurationMinutes?: pulumi.Input<number>;
    /**
     * Represents app configuration related to HTTP Body
     */
    body?: pulumi.Input<inputs.ApplicationSpecBody>;
    /**
     * BotProtectionSpec is the bot protection configuration
     */
    botProtectionSpec?: pulumi.Input<inputs.ApplicationSpecBotProtectionSpec>;
    /**
     * Secret contains the plain and encrypted version of a value (the plain version is never stored in the DB)
     */
    certificate?: pulumi.Input<inputs.ApplicationSpecCertificate>;
    /**
     * Indicates whether Clickjacking protection is enabled. When enabled, WAAS modifies all response headers, setting the
     * X-Frame-Options response header value to SAMEORIGIN. The SAMEORIGIN directive only permits a page to be displayed in a
     * frame on the same origin as the page itself.
     */
    clickjackingEnabled?: pulumi.Input<boolean>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    cmdi?: pulumi.Input<inputs.ApplicationSpecCmdi>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    codeInjection?: pulumi.Input<inputs.ApplicationSpecCodeInjection>;
    /**
     * Indicates whether Cross-Site Request Forgery (CSRF) protection is enabled
     */
    csrfEnabled?: pulumi.Input<boolean>;
    /**
     * Custom block HTTP response and HTML page
     */
    customBlockResponseConfig?: pulumi.Input<inputs.ApplicationSpecCustomBlockResponseConfig>;
    /**
     * List of custom rules
     */
    customRules?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecCustomRule>[]>;
    /**
     * Indicates if event ID header should be attached to the response
     */
    disableEventIdHeader?: pulumi.Input<boolean>;
    /**
     * DoSConfig is a dos policy specification
     */
    dosConfig?: pulumi.Input<inputs.ApplicationSpecDosConfig>;
    /**
     * Configuration for inspecting HTTP headers
     */
    headerSpecs?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecHeaderSpec>[]>;
    /**
     * IntelGathering is the configuration for intelligence gathering protections
     */
    intelGathering?: pulumi.Input<inputs.ApplicationSpecIntelGathering>;
    /**
     * Local File Inclusion protection configuration
     */
    lfi?: pulumi.Input<inputs.ApplicationSpecLfi>;
    /**
     * Malformed Request protection configuration
     */
    malformedReq?: pulumi.Input<inputs.ApplicationSpecMalformedReq>;
    /**
     * MaliciousUploadConfig is the configuration for file upload protection
     */
    maliciousUpload?: pulumi.Input<inputs.ApplicationSpecMaliciousUpload>;
    /**
     * NetworkControls contains the network controls config (e.g., access controls for IPs and countries)
     */
    networkControls?: pulumi.Input<inputs.ApplicationSpecNetworkControls>;
    /**
     * RemoteHostForwardingConfig defines a remote host to forward requests to
     */
    remoteHostForwarding?: pulumi.Input<inputs.ApplicationSpecRemoteHostForwarding>;
    /**
     * Configuration for modifying HTTP response headers
     */
    responseHeaderSpecs?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecResponseHeaderSpec>[]>;
    /**
     * Name of Rule to which Application Spec belongs
     */
    ruleName?: pulumi.Input<string>;
    /**
     * Indicates if bans in this app are made by session cookie ID
     */
    sessionCookieBan?: pulumi.Input<boolean>;
    /**
     * Indicates if session cookies are enabled
     */
    sessionCookieEnabled?: pulumi.Input<boolean>;
    /**
     * Indicates the SameSite attribute of the session cookie is set
     */
    sessionCookieSameSite?: pulumi.Input<string>;
    /**
     * Indicates the Secure attribute of the session cookie is set
     */
    sessionCookieSecure?: pulumi.Input<boolean>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    shellshock?: pulumi.Input<inputs.ApplicationSpecShellshock>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    sqli?: pulumi.Input<inputs.ApplicationSpecSqli>;
    /**
     * TLSConfig holds the user TLS configuration and the certificate data
     */
    tlsConfig?: pulumi.Input<inputs.ApplicationSpecTlsConfig>;
    /**
     * the unique fingerprint of the Application Definition, used for optimistic locking
     */
    version?: pulumi.Input<string>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    xss?: pulumi.Input<inputs.ApplicationSpecXss>;
}

/**
 * The set of arguments for constructing a ApplicationSpec resource.
 */
export interface ApplicationSpecArgs {
    /**
     * APISpec is an API specification
     */
    apiSpec: pulumi.Input<inputs.ApplicationSpecApiSpec>;
    /**
     * Unique ID for the app
     */
    appId?: pulumi.Input<string>;
    /**
     * Local File Inclusion protection configuration
     */
    attackTools: pulumi.Input<inputs.ApplicationSpecAttackTools>;
    /**
     * Configuration for automatic application of virtual patches
     */
    autoApplyPatchesSpec: pulumi.Input<inputs.ApplicationSpecAutoApplyPatchesSpec>;
    /**
     * Ban duration, in minutes
     */
    banDurationMinutes?: pulumi.Input<number>;
    /**
     * Represents app configuration related to HTTP Body
     */
    body: pulumi.Input<inputs.ApplicationSpecBody>;
    /**
     * BotProtectionSpec is the bot protection configuration
     */
    botProtectionSpec: pulumi.Input<inputs.ApplicationSpecBotProtectionSpec>;
    /**
     * Secret contains the plain and encrypted version of a value (the plain version is never stored in the DB)
     */
    certificate?: pulumi.Input<inputs.ApplicationSpecCertificate>;
    /**
     * Indicates whether Clickjacking protection is enabled. When enabled, WAAS modifies all response headers, setting the
     * X-Frame-Options response header value to SAMEORIGIN. The SAMEORIGIN directive only permits a page to be displayed in a
     * frame on the same origin as the page itself.
     */
    clickjackingEnabled?: pulumi.Input<boolean>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    cmdi: pulumi.Input<inputs.ApplicationSpecCmdi>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    codeInjection: pulumi.Input<inputs.ApplicationSpecCodeInjection>;
    /**
     * Indicates whether Cross-Site Request Forgery (CSRF) protection is enabled
     */
    csrfEnabled: pulumi.Input<boolean>;
    /**
     * Custom block HTTP response and HTML page
     */
    customBlockResponseConfig: pulumi.Input<inputs.ApplicationSpecCustomBlockResponseConfig>;
    /**
     * List of custom rules
     */
    customRules?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecCustomRule>[]>;
    /**
     * Indicates if event ID header should be attached to the response
     */
    disableEventIdHeader?: pulumi.Input<boolean>;
    /**
     * DoSConfig is a dos policy specification
     */
    dosConfig: pulumi.Input<inputs.ApplicationSpecDosConfig>;
    /**
     * Configuration for inspecting HTTP headers
     */
    headerSpecs: pulumi.Input<pulumi.Input<inputs.ApplicationSpecHeaderSpec>[]>;
    /**
     * IntelGathering is the configuration for intelligence gathering protections
     */
    intelGathering: pulumi.Input<inputs.ApplicationSpecIntelGathering>;
    /**
     * Local File Inclusion protection configuration
     */
    lfi: pulumi.Input<inputs.ApplicationSpecLfi>;
    /**
     * Malformed Request protection configuration
     */
    malformedReq: pulumi.Input<inputs.ApplicationSpecMalformedReq>;
    /**
     * MaliciousUploadConfig is the configuration for file upload protection
     */
    maliciousUpload: pulumi.Input<inputs.ApplicationSpecMaliciousUpload>;
    /**
     * NetworkControls contains the network controls config (e.g., access controls for IPs and countries)
     */
    networkControls: pulumi.Input<inputs.ApplicationSpecNetworkControls>;
    /**
     * RemoteHostForwardingConfig defines a remote host to forward requests to
     */
    remoteHostForwarding: pulumi.Input<inputs.ApplicationSpecRemoteHostForwarding>;
    /**
     * Configuration for modifying HTTP response headers
     */
    responseHeaderSpecs: pulumi.Input<pulumi.Input<inputs.ApplicationSpecResponseHeaderSpec>[]>;
    /**
     * Name of Rule to which Application Spec belongs
     */
    ruleName: pulumi.Input<string>;
    /**
     * Indicates if bans in this app are made by session cookie ID
     */
    sessionCookieBan?: pulumi.Input<boolean>;
    /**
     * Indicates if session cookies are enabled
     */
    sessionCookieEnabled?: pulumi.Input<boolean>;
    /**
     * Indicates the SameSite attribute of the session cookie is set
     */
    sessionCookieSameSite?: pulumi.Input<string>;
    /**
     * Indicates the Secure attribute of the session cookie is set
     */
    sessionCookieSecure?: pulumi.Input<boolean>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    shellshock: pulumi.Input<inputs.ApplicationSpecShellshock>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    sqli: pulumi.Input<inputs.ApplicationSpecSqli>;
    /**
     * TLSConfig holds the user TLS configuration and the certificate data
     */
    tlsConfig?: pulumi.Input<inputs.ApplicationSpecTlsConfig>;
    /**
     * the unique fingerprint of the Application Definition, used for optimistic locking
     */
    version?: pulumi.Input<string>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    xss: pulumi.Input<inputs.ApplicationSpecXss>;
}
