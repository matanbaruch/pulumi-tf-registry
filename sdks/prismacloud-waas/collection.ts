// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Collection extends pulumi.CustomResource {
    /**
     * Get an existing Collection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CollectionState, opts?: pulumi.CustomResourceOptions): Collection {
        return new Collection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prismacloud-waas:index/collection:Collection';

    /**
     * Returns true if the given object is an instance of Collection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Collection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Collection.__pulumiType;
    }

    /**
     * List of accountIDs
     */
    public readonly accountIds!: pulumi.Output<string[] | undefined>;
    /**
     * List of appIDs
     */
    public readonly appIds!: pulumi.Output<string[] | undefined>;
    /**
     * List of Kubernetes clusters
     */
    public readonly clusters!: pulumi.Output<string[] | undefined>;
    /**
     * Color code for the collection
     */
    public readonly color!: pulumi.Output<string>;
    /**
     * List of containers
     */
    public readonly containers!: pulumi.Output<string[] | undefined>;
    /**
     * Free-form text
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * List of functions
     */
    public readonly functions!: pulumi.Output<string[] | undefined>;
    /**
     * List of hosts
     */
    public readonly hosts!: pulumi.Output<string[] | undefined>;
    /**
     * List of images
     */
    public readonly images!: pulumi.Output<string[] | undefined>;
    /**
     * List of labels
     */
    public readonly labels!: pulumi.Output<string[] | undefined>;
    /**
     * Datetime when the collection was last modified
     */
    public readonly modified!: pulumi.Output<string>;
    /**
     * Collection name. Must be unique
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * List of Kubernetes namespaces
     */
    public readonly namespaces!: pulumi.Output<string[] | undefined>;
    /**
     * User who created or last modified the collection
     */
    public readonly owner!: pulumi.Output<string>;
    /**
     * Indicates whether this collection originates from Prisma Cloud
     */
    public readonly prisma!: pulumi.Output<boolean>;
    /**
     * Indicates the usage types required
     */
    public readonly requiredTypes!: pulumi.Output<string[]>;
    /**
     * Indicates the possible usage types the collection can support
     */
    public readonly supportedTypes!: pulumi.Output<string[]>;
    /**
     * Indicates whether this collection was created by the system (i.e., a non user) (true) or a real user (false)
     */
    public readonly system!: pulumi.Output<boolean>;

    /**
     * Create a Collection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CollectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CollectionArgs | CollectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CollectionState | undefined;
            resourceInputs["accountIds"] = state ? state.accountIds : undefined;
            resourceInputs["appIds"] = state ? state.appIds : undefined;
            resourceInputs["clusters"] = state ? state.clusters : undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["containers"] = state ? state.containers : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["functions"] = state ? state.functions : undefined;
            resourceInputs["hosts"] = state ? state.hosts : undefined;
            resourceInputs["images"] = state ? state.images : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["modified"] = state ? state.modified : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespaces"] = state ? state.namespaces : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["prisma"] = state ? state.prisma : undefined;
            resourceInputs["requiredTypes"] = state ? state.requiredTypes : undefined;
            resourceInputs["supportedTypes"] = state ? state.supportedTypes : undefined;
            resourceInputs["system"] = state ? state.system : undefined;
        } else {
            const args = argsOrState as CollectionArgs | undefined;
            if ((!args || args.requiredTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'requiredTypes'");
            }
            resourceInputs["accountIds"] = args ? args.accountIds : undefined;
            resourceInputs["appIds"] = args ? args.appIds : undefined;
            resourceInputs["clusters"] = args ? args.clusters : undefined;
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["containers"] = args ? args.containers : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["functions"] = args ? args.functions : undefined;
            resourceInputs["hosts"] = args ? args.hosts : undefined;
            resourceInputs["images"] = args ? args.images : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["modified"] = args ? args.modified : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespaces"] = args ? args.namespaces : undefined;
            resourceInputs["owner"] = args ? args.owner : undefined;
            resourceInputs["prisma"] = args ? args.prisma : undefined;
            resourceInputs["requiredTypes"] = args ? args.requiredTypes : undefined;
            resourceInputs["supportedTypes"] = args ? args.supportedTypes : undefined;
            resourceInputs["system"] = args ? args.system : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Collection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Collection resources.
 */
export interface CollectionState {
    /**
     * List of accountIDs
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of appIDs
     */
    appIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Kubernetes clusters
     */
    clusters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Color code for the collection
     */
    color?: pulumi.Input<string>;
    /**
     * List of containers
     */
    containers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Free-form text
     */
    description?: pulumi.Input<string>;
    /**
     * List of functions
     */
    functions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of hosts
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of images
     */
    images?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of labels
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Datetime when the collection was last modified
     */
    modified?: pulumi.Input<string>;
    /**
     * Collection name. Must be unique
     */
    name?: pulumi.Input<string>;
    /**
     * List of Kubernetes namespaces
     */
    namespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User who created or last modified the collection
     */
    owner?: pulumi.Input<string>;
    /**
     * Indicates whether this collection originates from Prisma Cloud
     */
    prisma?: pulumi.Input<boolean>;
    /**
     * Indicates the usage types required
     */
    requiredTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates the possible usage types the collection can support
     */
    supportedTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether this collection was created by the system (i.e., a non user) (true) or a real user (false)
     */
    system?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Collection resource.
 */
export interface CollectionArgs {
    /**
     * List of accountIDs
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of appIDs
     */
    appIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Kubernetes clusters
     */
    clusters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Color code for the collection
     */
    color?: pulumi.Input<string>;
    /**
     * List of containers
     */
    containers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Free-form text
     */
    description?: pulumi.Input<string>;
    /**
     * List of functions
     */
    functions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of hosts
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of images
     */
    images?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of labels
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Datetime when the collection was last modified
     */
    modified?: pulumi.Input<string>;
    /**
     * Collection name. Must be unique
     */
    name?: pulumi.Input<string>;
    /**
     * List of Kubernetes namespaces
     */
    namespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User who created or last modified the collection
     */
    owner?: pulumi.Input<string>;
    /**
     * Indicates whether this collection originates from Prisma Cloud
     */
    prisma?: pulumi.Input<boolean>;
    /**
     * Indicates the usage types required
     */
    requiredTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates the possible usage types the collection can support
     */
    supportedTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether this collection was created by the system (i.e., a non user) (true) or a real user (false)
     */
    system?: pulumi.Input<boolean>;
}
