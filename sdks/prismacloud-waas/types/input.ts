// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ApplicationSpecApiSpec {
    /**
     * Description of the app
     */
    description: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * The app's endpoints
     */
    endpoints?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecApiSpecEndpoint>[]>;
    /**
     * Effect is the effect applied when a protection is triggered
     */
    fallbackEffect?: pulumi.Input<string>;
    /**
     * Paths of the API endpoints
     */
    paths?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecApiSpecPath>[]>;
    /**
     * Effect is the effect applied when a protection is triggered
     */
    queryParamFallbackEffect?: pulumi.Input<string>;
}

export interface ApplicationSpecApiSpecEndpoint {
    /**
     * Base path for the endpoint
     */
    basePath?: pulumi.Input<string>;
    /**
     * Exposed port that the proxy is listening on
     */
    exposedPort?: pulumi.Input<number>;
    /**
     * Indicates if the proxy supports gRPC
     */
    grpc?: pulumi.Input<boolean>;
    /**
     * URL address (name or IP) of the endpoint's API specification (for example, petstore.swagger.io). The address can be prefixed with a wildcard (for example, *.swagger.io)
     */
    host?: pulumi.Input<string>;
    /**
     * Indicates if the proxy supports HTTP/2
     */
    http2?: pulumi.Input<boolean>;
    /**
     * Internal port that the application is listening on
     */
    internalPort?: pulumi.Input<number>;
    /**
     * Indicates if the connection is secured
     */
    tls?: pulumi.Input<boolean>;
}

export interface ApplicationSpecApiSpecPath {
    /**
     * Supported operations for the path (for example, PUT, GET, etc)
     */
    methods?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecApiSpecPathMethod>[]>;
    /**
     * Relative path to an endpoint, such as `/pet/{petId}`
     */
    path: pulumi.Input<string>;
}

export interface ApplicationSpecApiSpecPathMethod {
    /**
     * HTTP verb (for example, PUT, GET, etc)
     */
    method: pulumi.Input<string>;
    /**
     * parameters of the http request
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecApiSpecPathMethodParameter>[]>;
}

export interface ApplicationSpecApiSpecPathMethodParameter {
    /**
     * Indicates if an empty value is allowed
     */
    allowEmptyValue?: pulumi.Input<boolean>;
    /**
     * Indicates if multiple values of the specified type are allowed
     */
    array?: pulumi.Input<boolean>;
    /**
     * Indicates if arrays should generate separate parameters for each array item or object property
     */
    explode?: pulumi.Input<boolean>;
    /**
     * location of a parameter in the request
     */
    location: pulumi.Input<string>;
    /**
     * Maximum allowable value for a numeric parameter
     */
    max?: pulumi.Input<number>;
    /**
     * Minimum allowable value for a numeric parameter
     */
    min?: pulumi.Input<number>;
    /**
     * Name of the parameter
     */
    name: pulumi.Input<string>;
    /**
     * Indicates if the parameter is required
     */
    required?: pulumi.Input<boolean>;
    /**
     * Style is a param format style, defined by OpenAPI specification It describes how the parameter value will be serialized depending on the type of the parameter value. Ref: https://swagger.io/docs/specification/serialization/ https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#style-examples
     */
    style?: pulumi.Input<string>;
    /**
     * Type is the type of a parameter, defined by OpenAPI specification Ref: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
     */
    type: pulumi.Input<string>;
}

export interface ApplicationSpecAttackTools {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecAttackToolsExceptionField>[]>;
}

export interface ApplicationSpecAttackToolsExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface ApplicationSpecAutoApplyPatchesSpec {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
}

export interface ApplicationSpecBody {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    inspectionLimitExceededEffect?: pulumi.Input<string>;
    /**
     * InspectionSizeBytes represents the max amount of data to inspect in request body
     */
    inspectionSizeBytes?: pulumi.Input<number>;
    /**
     * Skip indicates that body inspection should be skipped
     */
    skip?: pulumi.Input<boolean>;
}

export interface ApplicationSpecBotProtectionSpec {
    /**
     * Indicates whether an interstitial page is served
     */
    interstitialPage?: pulumi.Input<boolean>;
    /**
     * JSInjectionSpec is the JavaScript injection configuration
     */
    jsInjectionSpec: pulumi.Input<inputs.ApplicationSpecBotProtectionSpecJsInjectionSpec>;
    /**
     * KnownBotProtectionsSpec is the known bot protections configuration
     */
    knownBotProtectionsSpec: pulumi.Input<inputs.ApplicationSpecBotProtectionSpecKnownBotProtectionsSpec>;
    /**
     * ReCAPTCHASpec is the reCAPTCHA configuration
     */
    reCaptchaSpec: pulumi.Input<inputs.ApplicationSpecBotProtectionSpecReCaptchaSpec>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    sessionValidation?: pulumi.Input<string>;
    /**
     * UnknownBotProtectionSpec is the unknown bot protection configuration
     */
    unknownBotProtectionSpec: pulumi.Input<inputs.ApplicationSpecBotProtectionSpecUnknownBotProtectionSpec>;
    /**
     * UnknownBotProtectionSpec is the unknown bot protection configuration
     */
    userDefinedBots: pulumi.Input<pulumi.Input<inputs.ApplicationSpecBotProtectionSpecUserDefinedBot>[]>;
}

export interface ApplicationSpecBotProtectionSpecJsInjectionSpec {
    /**
     * Indicates if JavaScript injection is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    timeoutEffect?: pulumi.Input<string>;
}

export interface ApplicationSpecBotProtectionSpecKnownBotProtectionsSpec {
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    archiving?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    businessAnalytics?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    careerSearch?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    contentFeedClients?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    educational?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    financial?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    mediaSearch?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    news?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    searchEngineCrawlers?: pulumi.Input<string>;
}

export interface ApplicationSpecBotProtectionSpecReCaptchaSpec {
    /**
     * Indicates if the reCAPTCHA page is served at the start of every new session
     */
    allSessions: pulumi.Input<boolean>;
    /**
     * Indicates if reCAPTCHA integration is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Secret contains the plain and encrypted version of a value (the plain version is never stored in the DB)
     */
    secretKey: pulumi.Input<inputs.ApplicationSpecBotProtectionSpecReCaptchaSpecSecretKey>;
    /**
     * site key to use when invoking the reCAPTCHA service
     */
    siteKey: pulumi.Input<string>;
    /**
     * Duration for which the indication of reCAPTCHA success is kept. Maximum value is 30 days * 24 = 720 hours
     */
    successExpirationHours: pulumi.Input<number>;
    /**
     * indicates whether the ReCaptcha is presented as a checkbox or is invisible
     */
    type: pulumi.Input<string>;
}

export interface ApplicationSpecBotProtectionSpecReCaptchaSpecSecretKey {
    /**
     * Encrypted value for the secret
     */
    encrypted?: pulumi.Input<string>;
    /**
     * Plain text value for the secret. Note: marshalling to JSON will convert to an encrypted value
     */
    plain?: pulumi.Input<string>;
}

export interface ApplicationSpecBotProtectionSpecUnknownBotProtectionSpec {
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    apiLibraries?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    botImpersonation?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    browserImpersonation?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    generic?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    httpLibraries?: pulumi.Input<string>;
    /**
     * RequestAnomalies is the request anomalies configuration
     */
    requestAnomalies: pulumi.Input<inputs.ApplicationSpecBotProtectionSpecUnknownBotProtectionSpecRequestAnomalies>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    webAutomationTools?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    webScrapers?: pulumi.Input<string>;
}

export interface ApplicationSpecBotProtectionSpecUnknownBotProtectionSpecRequestAnomalies {
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Threshold is the score threshold for which request anomaly violation is triggered
     */
    threshold?: pulumi.Input<number>;
}

export interface ApplicationSpecBotProtectionSpecUserDefinedBot {
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Header name which defines the bot
     */
    headerName: pulumi.Input<string>;
    /**
     * Header values corresponding to the header name. Can contain wildcards
     */
    headerValues: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * name for the bot
     */
    name: pulumi.Input<string>;
    /**
     * Subnets where the bot originates. Specify using network lists
     */
    subnets: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationSpecCertificate {
    /**
     * Encrypted value for the secret
     */
    encrypted?: pulumi.Input<string>;
    /**
     * Plain text value for the secret. Note: marshalling to JSON will convert to an encrypted value
     */
    plain?: pulumi.Input<string>;
}

export interface ApplicationSpecCmdi {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecCmdiExceptionField>[]>;
}

export interface ApplicationSpecCmdiExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface ApplicationSpecCodeInjection {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecCodeInjectionExceptionField>[]>;
}

export interface ApplicationSpecCodeInjectionExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface ApplicationSpecCustomBlockResponseConfig {
    /**
     * Custom HTML for the block response
     */
    body: pulumi.Input<string>;
    /**
     * Custom HTTP response code for the block response
     */
    code: pulumi.Input<number>;
    /**
     * Indicates if the custom block response is enabled
     */
    enabled: pulumi.Input<boolean>;
}

export interface ApplicationSpecCustomRule {
    /**
     * Action to perform if the custom rule applies
     */
    action: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Custom Rule is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Custom rule ID
     */
    id: pulumi.Input<number>;
}

export interface ApplicationSpecDosConfig {
    /**
     * specifies DoS requests rates (thresholds) at which to alert
     */
    alertRates: pulumi.Input<inputs.ApplicationSpecDosConfigAlertRates>;
    /**
     * specifies DoS requests rates (thresholds) at which to ban
     */
    banRates: pulumi.Input<inputs.ApplicationSpecDosConfigBanRates>;
    /**
     * indicates if DoS protection is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Network IPs to exclude from DoS tracking
     */
    excludedNetworkLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Conditions on which to match to track a request. The conditions are "OR"'d together during the check.
     */
    matchConditions?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecDosConfigMatchCondition>[]>;
    /**
     * Indicates if the custom session ID generated during bot protection flow is tracked
     */
    trackSession?: pulumi.Input<boolean>;
}

export interface ApplicationSpecDosConfigAlertRates {
    /**
     * Average request rate (requests / second) over 120 seconds
     */
    average?: pulumi.Input<number>;
    /**
     * Burst request rate (requests / second) over 5 seconds
     */
    burst?: pulumi.Input<number>;
}

export interface ApplicationSpecDosConfigBanRates {
    /**
     * Average request rate (requests / second) over 120 seconds
     */
    average?: pulumi.Input<number>;
    /**
     * Burst request rate (requests / second) over 5 seconds
     */
    burst?: pulumi.Input<number>;
}

export interface ApplicationSpecDosConfigMatchCondition {
    /**
     * File types for request matching
     */
    fileTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * HTTP methods for request matching
     */
    methods?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A range of HTTP status codes for response matching
     */
    responseCodeRanges?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecDosConfigMatchConditionResponseCodeRange>[]>;
}

export interface ApplicationSpecDosConfigMatchConditionResponseCodeRange {
    /**
     * End of the range. Can be omitted if using a single status code
     */
    end?: pulumi.Input<number>;
    /**
     * Start of the range. Can also be used alone for a single, non-range value
     */
    start: pulumi.Input<number>;
}

export interface ApplicationSpecHeaderSpec {
    /**
     * Indicates if the flow is to be allowed
     */
    allow: pulumi.Input<boolean>;
    /**
     * For allow flows, effect determines action for non-matching requests. For non-allow flows, effect determines type of action for matching requests
     */
    effect?: pulumi.Input<string>;
    /**
     * Name of key in header
     */
    name: pulumi.Input<string>;
    /**
     * Indicates if the header must be present
     */
    required?: pulumi.Input<boolean>;
    /**
     * Wildcard expressions that represent the header value to match
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationSpecIntelGathering {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    infoLeakageEffect?: pulumi.Input<string>;
    /**
     * Indicates if server fingerprints should be removed
     */
    removeFingerprintsEnabled: pulumi.Input<boolean>;
}

export interface ApplicationSpecLfi {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecLfiExceptionField>[]>;
}

export interface ApplicationSpecLfiExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface ApplicationSpecMalformedReq {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecMalformedReqExceptionField>[]>;
}

export interface ApplicationSpecMalformedReqExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface ApplicationSpecMaliciousUpload {
    /**
     * Allowed file extensions
     */
    allowedExtensions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allowed well-known file types
     */
    allowedFileTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
}

export interface ApplicationSpecNetworkControls {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    advancedProtectionEffect?: pulumi.Input<string>;
    /**
     * AccessControls contains the access controls config (e.g., denied/allowed sources)
     */
    countries: pulumi.Input<inputs.ApplicationSpecNetworkControlsCountries>;
    /**
     * Network lists for which requests completely bypass WAAS checks and protections
     */
    exceptionSubnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AccessControls contains the access controls config (e.g., denied/allowed sources)
     */
    subnets: pulumi.Input<inputs.ApplicationSpecNetworkControlsSubnets>;
}

export interface ApplicationSpecNetworkControlsCountries {
    /**
     * Alert lists the denied sources for which alerts are generated
     */
    alerts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AllowMode indicates allowlist (true) or denylist (false) mode
     */
    allowMode?: pulumi.Input<boolean>;
    /**
     * Allow lists the allowed sources
     */
    allows?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enabled indicates if access controls protection is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Effect is the effect applied when a protection is triggered
     */
    fallbackEffect?: pulumi.Input<string>;
    /**
     * Prevent lists the denied sources
     */
    prevents?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationSpecNetworkControlsSubnets {
    /**
     * Alert lists the denied sources for which alerts are generated
     */
    alerts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AllowMode indicates allowlist (true) or denylist (false) mode
     */
    allowMode?: pulumi.Input<boolean>;
    /**
     * Allow lists the allowed sources
     */
    allows?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enabled indicates if access controls protection is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Effect is the effect applied when a protection is triggered
     */
    fallbackEffect?: pulumi.Input<string>;
    /**
     * Prevent lists the denied sources
     */
    prevents?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationSpecRemoteHostForwarding {
    /**
     * Indicates if remote host forwarding is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Remote host to forward requests to
     */
    target?: pulumi.Input<string>;
}

export interface ApplicationSpecResponseHeaderSpec {
    /**
     * Header name (will be canonicalized when possible)
     */
    name: pulumi.Input<string>;
    /**
     * Indicates whether to override existing values rather than append
     */
    override: pulumi.Input<boolean>;
    /**
     * New header values
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationSpecShellshock {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecShellshockExceptionField>[]>;
}

export interface ApplicationSpecShellshockExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface ApplicationSpecSqli {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecSqliExceptionField>[]>;
}

export interface ApplicationSpecSqliExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface ApplicationSpecTlsConfig {
    /**
     * HSTSConfig is the HTTP Strict Transport Security configuration in order to enforce HSTS header see: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
     */
    hstsConfig: pulumi.Input<inputs.ApplicationSpecTlsConfigHstsConfig>;
    /**
     * Metadata is the certificate metadata
     */
    metadata: pulumi.Input<inputs.ApplicationSpecTlsConfigMetadata>;
    /**
     * MinTLSVersion is the minimum acceptable TLS version
     */
    minTlsVersion: pulumi.Input<string>;
}

export interface ApplicationSpecTlsConfigHstsConfig {
    /**
     * Enabled indicates if HSTS enforcement is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * IncludeSubdomains indicates if this rule applies to all of the site's subdomains as well
     */
    includeSubdomains: pulumi.Input<boolean>;
    /**
     * maxAgeSeconds is the time (in seconds) that the browser should remember that a site is only be accessed using HTTPS
     */
    maxAgeSeconds: pulumi.Input<number>;
    /**
     * Preload indicates if it should support preload
     */
    preload: pulumi.Input<boolean>;
}

export interface ApplicationSpecTlsConfigMetadata {
    /**
     * IssuerName is the certificate issuer common name
     */
    issuerName: pulumi.Input<string>;
    /**
     * NotAfter is the time the certificate is not valid (expiry time) in RFC3339 format
     */
    notAfter: pulumi.Input<string>;
    /**
     * SubjectName is the certificate subject common name
     */
    subjectName: pulumi.Input<string>;
}

export interface ApplicationSpecXss {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.ApplicationSpecXssExceptionField>[]>;
}

export interface ApplicationSpecXssExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface RuleApplicationsSpec {
    /**
     * APISpec is an API specification
     */
    apiSpec: pulumi.Input<inputs.RuleApplicationsSpecApiSpec>;
    /**
     * Unique ID for the app
     */
    appId?: pulumi.Input<string>;
    /**
     * Local File Inclusion protection configuration
     */
    attackTools: pulumi.Input<inputs.RuleApplicationsSpecAttackTools>;
    /**
     * Configuration for automatic application of virtual patches
     */
    autoApplyPatchesSpec: pulumi.Input<inputs.RuleApplicationsSpecAutoApplyPatchesSpec>;
    /**
     * Ban duration, in minutes
     */
    banDurationMinutes?: pulumi.Input<number>;
    /**
     * Represents app configuration related to HTTP Body
     */
    body: pulumi.Input<inputs.RuleApplicationsSpecBody>;
    /**
     * BotProtectionSpec is the bot protection configuration
     */
    botProtectionSpec: pulumi.Input<inputs.RuleApplicationsSpecBotProtectionSpec>;
    /**
     * Secret contains the plain and encrypted version of a value (the plain version is never stored in the DB)
     */
    certificate?: pulumi.Input<inputs.RuleApplicationsSpecCertificate>;
    /**
     * Indicates whether Clickjacking protection is enabled. When enabled, WAAS modifies all response headers, setting the X-Frame-Options response header value to SAMEORIGIN. The SAMEORIGIN directive only permits a page to be displayed in a frame on the same origin as the page itself.
     */
    clickjackingEnabled?: pulumi.Input<boolean>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    cmdi: pulumi.Input<inputs.RuleApplicationsSpecCmdi>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    codeInjection: pulumi.Input<inputs.RuleApplicationsSpecCodeInjection>;
    /**
     * Indicates whether Cross-Site Request Forgery (CSRF) protection is enabled
     */
    csrfEnabled: pulumi.Input<boolean>;
    /**
     * Custom block HTTP response and HTML page
     */
    customBlockResponseConfig: pulumi.Input<inputs.RuleApplicationsSpecCustomBlockResponseConfig>;
    /**
     * List of custom rules
     */
    customRules?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecCustomRule>[]>;
    /**
     * Indicates if event ID header should be attached to the response
     */
    disableEventIdHeader?: pulumi.Input<boolean>;
    /**
     * DoSConfig is a dos policy specification
     */
    dosConfig: pulumi.Input<inputs.RuleApplicationsSpecDosConfig>;
    /**
     * Configuration for inspecting HTTP headers
     */
    headerSpecs: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecHeaderSpec>[]>;
    /**
     * IntelGathering is the configuration for intelligence gathering protections
     */
    intelGathering: pulumi.Input<inputs.RuleApplicationsSpecIntelGathering>;
    /**
     * Local File Inclusion protection configuration
     */
    lfi: pulumi.Input<inputs.RuleApplicationsSpecLfi>;
    /**
     * Malformed Request protection configuration
     */
    malformedReq: pulumi.Input<inputs.RuleApplicationsSpecMalformedReq>;
    /**
     * MaliciousUploadConfig is the configuration for file upload protection
     */
    maliciousUpload: pulumi.Input<inputs.RuleApplicationsSpecMaliciousUpload>;
    /**
     * NetworkControls contains the network controls config (e.g., access controls for IPs and countries)
     */
    networkControls: pulumi.Input<inputs.RuleApplicationsSpecNetworkControls>;
    /**
     * RemoteHostForwardingConfig defines a remote host to forward requests to
     */
    remoteHostForwarding: pulumi.Input<inputs.RuleApplicationsSpecRemoteHostForwarding>;
    /**
     * Configuration for modifying HTTP response headers
     */
    responseHeaderSpecs: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecResponseHeaderSpec>[]>;
    /**
     * Name of Rule to which Application Spec belongs
     */
    ruleName: pulumi.Input<string>;
    /**
     * Indicates if bans in this app are made by session cookie ID
     */
    sessionCookieBan?: pulumi.Input<boolean>;
    /**
     * Indicates if session cookies are enabled
     */
    sessionCookieEnabled?: pulumi.Input<boolean>;
    /**
     * Indicates the SameSite attribute of the session cookie is set
     */
    sessionCookieSameSite?: pulumi.Input<string>;
    /**
     * Indicates the Secure attribute of the session cookie is set
     */
    sessionCookieSecure?: pulumi.Input<boolean>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    shellshock: pulumi.Input<inputs.RuleApplicationsSpecShellshock>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    sqli: pulumi.Input<inputs.RuleApplicationsSpecSqli>;
    /**
     * TLSConfig holds the user TLS configuration and the certificate data
     */
    tlsConfig?: pulumi.Input<inputs.RuleApplicationsSpecTlsConfig>;
    /**
     * the unique fingerprint of the Application Definition, used for optimistic locking
     */
    version?: pulumi.Input<string>;
    /**
     * ProtectionConfig represents a WAAS protection configuration
     */
    xss: pulumi.Input<inputs.RuleApplicationsSpecXss>;
}

export interface RuleApplicationsSpecApiSpec {
    /**
     * Description of the app
     */
    description: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * The app's endpoints
     */
    endpoints?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecApiSpecEndpoint>[]>;
    /**
     * Effect is the effect applied when a protection is triggered
     */
    fallbackEffect?: pulumi.Input<string>;
    /**
     * Paths of the API endpoints
     */
    paths?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecApiSpecPath>[]>;
    /**
     * Effect is the effect applied when a protection is triggered
     */
    queryParamFallbackEffect?: pulumi.Input<string>;
}

export interface RuleApplicationsSpecApiSpecEndpoint {
    /**
     * Base path for the endpoint
     */
    basePath?: pulumi.Input<string>;
    /**
     * Exposed port that the proxy is listening on
     */
    exposedPort?: pulumi.Input<number>;
    /**
     * Indicates if the proxy supports gRPC
     */
    grpc?: pulumi.Input<boolean>;
    /**
     * URL address (name or IP) of the endpoint's API specification (for example, petstore.swagger.io). The address can be prefixed with a wildcard (for example, *.swagger.io)
     */
    host?: pulumi.Input<string>;
    /**
     * Indicates if the proxy supports HTTP/2
     */
    http2?: pulumi.Input<boolean>;
    /**
     * Internal port that the application is listening on
     */
    internalPort?: pulumi.Input<number>;
    /**
     * Indicates if the connection is secured
     */
    tls?: pulumi.Input<boolean>;
}

export interface RuleApplicationsSpecApiSpecPath {
    /**
     * Supported operations for the path (for example, PUT, GET, etc)
     */
    methods?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecApiSpecPathMethod>[]>;
    /**
     * Relative path to an endpoint, such as `/pet/{petId}`
     */
    path: pulumi.Input<string>;
}

export interface RuleApplicationsSpecApiSpecPathMethod {
    /**
     * HTTP verb (for example, PUT, GET, etc)
     */
    method: pulumi.Input<string>;
    /**
     * parameters of the http request
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecApiSpecPathMethodParameter>[]>;
}

export interface RuleApplicationsSpecApiSpecPathMethodParameter {
    /**
     * Indicates if an empty value is allowed
     */
    allowEmptyValue?: pulumi.Input<boolean>;
    /**
     * Indicates if multiple values of the specified type are allowed
     */
    array?: pulumi.Input<boolean>;
    /**
     * Indicates if arrays should generate separate parameters for each array item or object property
     */
    explode?: pulumi.Input<boolean>;
    /**
     * location of a parameter in the request
     */
    location: pulumi.Input<string>;
    /**
     * Maximum allowable value for a numeric parameter
     */
    max?: pulumi.Input<number>;
    /**
     * Minimum allowable value for a numeric parameter
     */
    min?: pulumi.Input<number>;
    /**
     * Name of the parameter
     */
    name: pulumi.Input<string>;
    /**
     * Indicates if the parameter is required
     */
    required?: pulumi.Input<boolean>;
    /**
     * Style is a param format style, defined by OpenAPI specification It describes how the parameter value will be serialized depending on the type of the parameter value. Ref: https://swagger.io/docs/specification/serialization/ https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#style-examples
     */
    style?: pulumi.Input<string>;
    /**
     * Type is the type of a parameter, defined by OpenAPI specification Ref: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
     */
    type: pulumi.Input<string>;
}

export interface RuleApplicationsSpecAttackTools {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecAttackToolsExceptionField>[]>;
}

export interface RuleApplicationsSpecAttackToolsExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface RuleApplicationsSpecAutoApplyPatchesSpec {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
}

export interface RuleApplicationsSpecBody {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    inspectionLimitExceededEffect?: pulumi.Input<string>;
    /**
     * InspectionSizeBytes represents the max amount of data to inspect in request body
     */
    inspectionSizeBytes?: pulumi.Input<number>;
    /**
     * Skip indicates that body inspection should be skipped
     */
    skip?: pulumi.Input<boolean>;
}

export interface RuleApplicationsSpecBotProtectionSpec {
    /**
     * Indicates whether an interstitial page is served
     */
    interstitialPage?: pulumi.Input<boolean>;
    /**
     * JSInjectionSpec is the JavaScript injection configuration
     */
    jsInjectionSpec: pulumi.Input<inputs.RuleApplicationsSpecBotProtectionSpecJsInjectionSpec>;
    /**
     * KnownBotProtectionsSpec is the known bot protections configuration
     */
    knownBotProtectionsSpec: pulumi.Input<inputs.RuleApplicationsSpecBotProtectionSpecKnownBotProtectionsSpec>;
    /**
     * ReCAPTCHASpec is the reCAPTCHA configuration
     */
    reCaptchaSpec: pulumi.Input<inputs.RuleApplicationsSpecBotProtectionSpecReCaptchaSpec>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    sessionValidation?: pulumi.Input<string>;
    /**
     * UnknownBotProtectionSpec is the unknown bot protection configuration
     */
    unknownBotProtectionSpec: pulumi.Input<inputs.RuleApplicationsSpecBotProtectionSpecUnknownBotProtectionSpec>;
    /**
     * UnknownBotProtectionSpec is the unknown bot protection configuration
     */
    userDefinedBots: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecBotProtectionSpecUserDefinedBot>[]>;
}

export interface RuleApplicationsSpecBotProtectionSpecJsInjectionSpec {
    /**
     * Indicates if JavaScript injection is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    timeoutEffect?: pulumi.Input<string>;
}

export interface RuleApplicationsSpecBotProtectionSpecKnownBotProtectionsSpec {
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    archiving?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    businessAnalytics?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    careerSearch?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    contentFeedClients?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    educational?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    financial?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    mediaSearch?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    news?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    searchEngineCrawlers?: pulumi.Input<string>;
}

export interface RuleApplicationsSpecBotProtectionSpecReCaptchaSpec {
    /**
     * Indicates if the reCAPTCHA page is served at the start of every new session
     */
    allSessions: pulumi.Input<boolean>;
    /**
     * Indicates if reCAPTCHA integration is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Secret contains the plain and encrypted version of a value (the plain version is never stored in the DB)
     */
    secretKey: pulumi.Input<inputs.RuleApplicationsSpecBotProtectionSpecReCaptchaSpecSecretKey>;
    /**
     * site key to use when invoking the reCAPTCHA service
     */
    siteKey: pulumi.Input<string>;
    /**
     * Duration for which the indication of reCAPTCHA success is kept. Maximum value is 30 days * 24 = 720 hours
     */
    successExpirationHours: pulumi.Input<number>;
    /**
     * indicates whether the ReCaptcha is presented as a checkbox or is invisible
     */
    type: pulumi.Input<string>;
}

export interface RuleApplicationsSpecBotProtectionSpecReCaptchaSpecSecretKey {
    /**
     * Encrypted value for the secret
     */
    encrypted?: pulumi.Input<string>;
    /**
     * Plain text value for the secret. Note: marshalling to JSON will convert to an encrypted value
     */
    plain?: pulumi.Input<string>;
}

export interface RuleApplicationsSpecBotProtectionSpecUnknownBotProtectionSpec {
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    apiLibraries?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    botImpersonation?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    browserImpersonation?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    generic?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    httpLibraries?: pulumi.Input<string>;
    /**
     * RequestAnomalies is the request anomalies configuration
     */
    requestAnomalies: pulumi.Input<inputs.RuleApplicationsSpecBotProtectionSpecUnknownBotProtectionSpecRequestAnomalies>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    webAutomationTools?: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    webScrapers?: pulumi.Input<string>;
}

export interface RuleApplicationsSpecBotProtectionSpecUnknownBotProtectionSpecRequestAnomalies {
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Threshold is the score threshold for which request anomaly violation is triggered
     */
    threshold?: pulumi.Input<number>;
}

export interface RuleApplicationsSpecBotProtectionSpecUserDefinedBot {
    /**
     * Effect is the effect applied when a Bot Protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Header name which defines the bot
     */
    headerName: pulumi.Input<string>;
    /**
     * Header values corresponding to the header name. Can contain wildcards
     */
    headerValues: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * name for the bot
     */
    name: pulumi.Input<string>;
    /**
     * Subnets where the bot originates. Specify using network lists
     */
    subnets: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RuleApplicationsSpecCertificate {
    /**
     * Encrypted value for the secret
     */
    encrypted?: pulumi.Input<string>;
    /**
     * Plain text value for the secret. Note: marshalling to JSON will convert to an encrypted value
     */
    plain?: pulumi.Input<string>;
}

export interface RuleApplicationsSpecCmdi {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecCmdiExceptionField>[]>;
}

export interface RuleApplicationsSpecCmdiExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface RuleApplicationsSpecCodeInjection {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecCodeInjectionExceptionField>[]>;
}

export interface RuleApplicationsSpecCodeInjectionExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface RuleApplicationsSpecCustomBlockResponseConfig {
    /**
     * Custom HTML for the block response
     */
    body: pulumi.Input<string>;
    /**
     * Custom HTTP response code for the block response
     */
    code: pulumi.Input<number>;
    /**
     * Indicates if the custom block response is enabled
     */
    enabled: pulumi.Input<boolean>;
}

export interface RuleApplicationsSpecCustomRule {
    /**
     * Action to perform if the custom rule applies
     */
    action: pulumi.Input<string>;
    /**
     * Effect is the effect applied when a Custom Rule is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Custom rule ID
     */
    id: pulumi.Input<number>;
}

export interface RuleApplicationsSpecDosConfig {
    /**
     * specifies DoS requests rates (thresholds) at which to alert
     */
    alertRates: pulumi.Input<inputs.RuleApplicationsSpecDosConfigAlertRates>;
    /**
     * specifies DoS requests rates (thresholds) at which to ban
     */
    banRates: pulumi.Input<inputs.RuleApplicationsSpecDosConfigBanRates>;
    /**
     * indicates if DoS protection is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Network IPs to exclude from DoS tracking
     */
    excludedNetworkLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Conditions on which to match to track a request. The conditions are "OR"'d together during the check.
     */
    matchConditions?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecDosConfigMatchCondition>[]>;
    /**
     * Indicates if the custom session ID generated during bot protection flow is tracked
     */
    trackSession?: pulumi.Input<boolean>;
}

export interface RuleApplicationsSpecDosConfigAlertRates {
    /**
     * Average request rate (requests / second) over 120 seconds
     */
    average?: pulumi.Input<number>;
    /**
     * Burst request rate (requests / second) over 5 seconds
     */
    burst?: pulumi.Input<number>;
}

export interface RuleApplicationsSpecDosConfigBanRates {
    /**
     * Average request rate (requests / second) over 120 seconds
     */
    average?: pulumi.Input<number>;
    /**
     * Burst request rate (requests / second) over 5 seconds
     */
    burst?: pulumi.Input<number>;
}

export interface RuleApplicationsSpecDosConfigMatchCondition {
    /**
     * File types for request matching
     */
    fileTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * HTTP methods for request matching
     */
    methods?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A range of HTTP status codes for response matching
     */
    responseCodeRanges?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecDosConfigMatchConditionResponseCodeRange>[]>;
}

export interface RuleApplicationsSpecDosConfigMatchConditionResponseCodeRange {
    /**
     * End of the range. Can be omitted if using a single status code
     */
    end?: pulumi.Input<number>;
    /**
     * Start of the range. Can also be used alone for a single, non-range value
     */
    start: pulumi.Input<number>;
}

export interface RuleApplicationsSpecHeaderSpec {
    /**
     * Indicates if the flow is to be allowed
     */
    allow: pulumi.Input<boolean>;
    /**
     * For allow flows, effect determines action for non-matching requests. For non-allow flows, effect determines type of action for matching requests
     */
    effect?: pulumi.Input<string>;
    /**
     * Name of key in header
     */
    name: pulumi.Input<string>;
    /**
     * Indicates if the header must be present
     */
    required?: pulumi.Input<boolean>;
    /**
     * Wildcard expressions that represent the header value to match
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RuleApplicationsSpecIntelGathering {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    infoLeakageEffect?: pulumi.Input<string>;
    /**
     * Indicates if server fingerprints should be removed
     */
    removeFingerprintsEnabled: pulumi.Input<boolean>;
}

export interface RuleApplicationsSpecLfi {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecLfiExceptionField>[]>;
}

export interface RuleApplicationsSpecLfiExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface RuleApplicationsSpecMalformedReq {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecMalformedReqExceptionField>[]>;
}

export interface RuleApplicationsSpecMalformedReqExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface RuleApplicationsSpecMaliciousUpload {
    /**
     * Allowed file extensions
     */
    allowedExtensions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allowed well-known file types
     */
    allowedFileTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
}

export interface RuleApplicationsSpecNetworkControls {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    advancedProtectionEffect?: pulumi.Input<string>;
    /**
     * AccessControls contains the access controls config (e.g., denied/allowed sources)
     */
    countries: pulumi.Input<inputs.RuleApplicationsSpecNetworkControlsCountries>;
    /**
     * Network lists for which requests completely bypass WAAS checks and protections
     */
    exceptionSubnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AccessControls contains the access controls config (e.g., denied/allowed sources)
     */
    subnets: pulumi.Input<inputs.RuleApplicationsSpecNetworkControlsSubnets>;
}

export interface RuleApplicationsSpecNetworkControlsCountries {
    /**
     * Alert lists the denied sources for which alerts are generated
     */
    alerts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AllowMode indicates allowlist (true) or denylist (false) mode
     */
    allowMode?: pulumi.Input<boolean>;
    /**
     * Allow lists the allowed sources
     */
    allows?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enabled indicates if access controls protection is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Effect is the effect applied when a protection is triggered
     */
    fallbackEffect?: pulumi.Input<string>;
    /**
     * Prevent lists the denied sources
     */
    prevents?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RuleApplicationsSpecNetworkControlsSubnets {
    /**
     * Alert lists the denied sources for which alerts are generated
     */
    alerts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AllowMode indicates allowlist (true) or denylist (false) mode
     */
    allowMode?: pulumi.Input<boolean>;
    /**
     * Allow lists the allowed sources
     */
    allows?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enabled indicates if access controls protection is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Effect is the effect applied when a protection is triggered
     */
    fallbackEffect?: pulumi.Input<string>;
    /**
     * Prevent lists the denied sources
     */
    prevents?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RuleApplicationsSpecRemoteHostForwarding {
    /**
     * Indicates if remote host forwarding is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Remote host to forward requests to
     */
    target?: pulumi.Input<string>;
}

export interface RuleApplicationsSpecResponseHeaderSpec {
    /**
     * Header name (will be canonicalized when possible)
     */
    name: pulumi.Input<string>;
    /**
     * Indicates whether to override existing values rather than append
     */
    override: pulumi.Input<boolean>;
    /**
     * New header values
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RuleApplicationsSpecShellshock {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecShellshockExceptionField>[]>;
}

export interface RuleApplicationsSpecShellshockExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface RuleApplicationsSpecSqli {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecSqliExceptionField>[]>;
}

export interface RuleApplicationsSpecSqliExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface RuleApplicationsSpecTlsConfig {
    /**
     * HSTSConfig is the HTTP Strict Transport Security configuration in order to enforce HSTS header see: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
     */
    hstsConfig: pulumi.Input<inputs.RuleApplicationsSpecTlsConfigHstsConfig>;
    /**
     * Metadata is the certificate metadata
     */
    metadata: pulumi.Input<inputs.RuleApplicationsSpecTlsConfigMetadata>;
    /**
     * MinTLSVersion is the minimum acceptable TLS version
     */
    minTlsVersion: pulumi.Input<string>;
}

export interface RuleApplicationsSpecTlsConfigHstsConfig {
    /**
     * Enabled indicates if HSTS enforcement is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * IncludeSubdomains indicates if this rule applies to all of the site's subdomains as well
     */
    includeSubdomains: pulumi.Input<boolean>;
    /**
     * maxAgeSeconds is the time (in seconds) that the browser should remember that a site is only be accessed using HTTPS
     */
    maxAgeSeconds: pulumi.Input<number>;
    /**
     * Preload indicates if it should support preload
     */
    preload: pulumi.Input<boolean>;
}

export interface RuleApplicationsSpecTlsConfigMetadata {
    /**
     * IssuerName is the certificate issuer common name
     */
    issuerName: pulumi.Input<string>;
    /**
     * NotAfter is the time the certificate is not valid (expiry time) in RFC3339 format
     */
    notAfter: pulumi.Input<string>;
    /**
     * SubjectName is the certificate subject common name
     */
    subjectName: pulumi.Input<string>;
}

export interface RuleApplicationsSpecXss {
    /**
     * Effect is the effect applied when a protection is triggered
     */
    effect?: pulumi.Input<string>;
    /**
     * Exceptions
     */
    exceptionFields?: pulumi.Input<pulumi.Input<inputs.RuleApplicationsSpecXssExceptionField>[]>;
}

export interface RuleApplicationsSpecXssExceptionField {
    /**
     * Key name that when present triggers exception
     */
    key: pulumi.Input<string>;
    /**
     * Location indicates exception http field location
     */
    location: pulumi.Input<string>;
}

export interface RuleCollection {
    /**
     * Unique name of collection
     */
    name: pulumi.Input<string>;
}

export interface RuleTrafficMirroring {
    /**
     * Enabled indicates if traffic mirroring is enabled
     */
    enabled?: pulumi.Input<boolean>;
}
