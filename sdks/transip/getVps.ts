// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVps(args: GetVpsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("transip:index/getVps:getVps", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVps.
 */
export interface GetVpsArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getVps.
 */
export interface GetVpsResult {
    readonly availabilityZone: string;
    readonly cpus: number;
    readonly description: string;
    readonly diskSize: number;
    readonly id: string;
    readonly ipAddress: string;
    readonly ipv4Addresses: string[];
    readonly ipv6Addresses: string[];
    readonly isBlocked: boolean;
    readonly isCustomerLocked: boolean;
    readonly isLocked: boolean;
    readonly macAddress: string;
    readonly memorySize: number;
    readonly name: string;
    readonly operatingSystem: string;
    readonly productName: string;
    readonly status: string;
    readonly tags: string[];
}
export function getVpsOutput(args: GetVpsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpsResult> {
    return pulumi.output(args).apply((a: any) => getVps(a, opts))
}

/**
 * A collection of arguments for invoking getVps.
 */
export interface GetVpsOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
