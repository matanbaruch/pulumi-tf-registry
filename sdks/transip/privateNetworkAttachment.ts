// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PrivateNetworkAttachment extends pulumi.CustomResource {
    /**
     * Get an existing PrivateNetworkAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivateNetworkAttachmentState, opts?: pulumi.CustomResourceOptions): PrivateNetworkAttachment {
        return new PrivateNetworkAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'transip:index/privateNetworkAttachment:PrivateNetworkAttachment';

    /**
     * Returns true if the given object is an instance of PrivateNetworkAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrivateNetworkAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivateNetworkAttachment.__pulumiType;
    }

    /**
     * Name of the Private Network.
     */
    public readonly privateNetworkId!: pulumi.Output<string>;
    /**
     * VPN name the Private Network is attached to.
     */
    public readonly vpsId!: pulumi.Output<string>;

    /**
     * Create a PrivateNetworkAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivateNetworkAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivateNetworkAttachmentArgs | PrivateNetworkAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivateNetworkAttachmentState | undefined;
            resourceInputs["privateNetworkId"] = state ? state.privateNetworkId : undefined;
            resourceInputs["vpsId"] = state ? state.vpsId : undefined;
        } else {
            const args = argsOrState as PrivateNetworkAttachmentArgs | undefined;
            if ((!args || args.privateNetworkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateNetworkId'");
            }
            if ((!args || args.vpsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpsId'");
            }
            resourceInputs["privateNetworkId"] = args ? args.privateNetworkId : undefined;
            resourceInputs["vpsId"] = args ? args.vpsId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrivateNetworkAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PrivateNetworkAttachment resources.
 */
export interface PrivateNetworkAttachmentState {
    /**
     * Name of the Private Network.
     */
    privateNetworkId?: pulumi.Input<string>;
    /**
     * VPN name the Private Network is attached to.
     */
    vpsId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PrivateNetworkAttachment resource.
 */
export interface PrivateNetworkAttachmentArgs {
    /**
     * Name of the Private Network.
     */
    privateNetworkId: pulumi.Input<string>;
    /**
     * VPN name the Private Network is attached to.
     */
    vpsId: pulumi.Input<string>;
}
