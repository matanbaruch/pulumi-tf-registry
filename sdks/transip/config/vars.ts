// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("transip");

/**
 * Temporary access token used for authentication.
 */
export declare const accessToken: string | undefined;
Object.defineProperty(exports, "accessToken", {
    get() {
        return __config.get("accessToken");
    },
    enumerable: true,
});

/**
 * Name of the Transip account.
 */
export declare const accountName: string | undefined;
Object.defineProperty(exports, "accountName", {
    get() {
        return __config.get("accountName");
    },
    enumerable: true,
});

/**
 * Contents of the private key file to be used to authenticate.
 */
export declare const privateKey: string | undefined;
Object.defineProperty(exports, "privateKey", {
    get() {
        return __config.get("privateKey");
    },
    enumerable: true,
});

/**
 * Disable API write calls.
 */
export declare const readOnly: boolean | undefined;
Object.defineProperty(exports, "readOnly", {
    get() {
        return __config.getObject<boolean>("readOnly");
    },
    enumerable: true,
});

/**
 * Use API test mode.
 */
export declare const testMode: boolean | undefined;
Object.defineProperty(exports, "testMode", {
    get() {
        return __config.getObject<boolean>("testMode");
    },
    enumerable: true,
});

