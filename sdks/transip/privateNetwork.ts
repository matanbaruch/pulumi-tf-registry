// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PrivateNetwork extends pulumi.CustomResource {
    /**
     * Get an existing PrivateNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivateNetworkState, opts?: pulumi.CustomResourceOptions): PrivateNetwork {
        return new PrivateNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'transip:index/privateNetwork:PrivateNetwork';

    /**
     * Returns true if the given object is an instance of PrivateNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrivateNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivateNetwork.__pulumiType;
    }

    /**
     * The custom name that can be set by customer.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * If the Private Network is administratively blocked.
     */
    public /*out*/ readonly isBlocked!: pulumi.Output<string>;
    /**
     * When locked, another process is already working with this private network.
     */
    public /*out*/ readonly isLocked!: pulumi.Output<string>;
    /**
     * The unique private network name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The VPSes in this private network.
     */
    public /*out*/ readonly vpsNames!: pulumi.Output<string[]>;

    /**
     * Create a PrivateNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivateNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivateNetworkArgs | PrivateNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivateNetworkState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["isBlocked"] = state ? state.isBlocked : undefined;
            resourceInputs["isLocked"] = state ? state.isLocked : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["vpsNames"] = state ? state.vpsNames : undefined;
        } else {
            const args = argsOrState as PrivateNetworkArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["isBlocked"] = undefined /*out*/;
            resourceInputs["isLocked"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["vpsNames"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrivateNetwork.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PrivateNetwork resources.
 */
export interface PrivateNetworkState {
    /**
     * The custom name that can be set by customer.
     */
    description?: pulumi.Input<string>;
    /**
     * If the Private Network is administratively blocked.
     */
    isBlocked?: pulumi.Input<string>;
    /**
     * When locked, another process is already working with this private network.
     */
    isLocked?: pulumi.Input<string>;
    /**
     * The unique private network name
     */
    name?: pulumi.Input<string>;
    /**
     * The VPSes in this private network.
     */
    vpsNames?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a PrivateNetwork resource.
 */
export interface PrivateNetworkArgs {
    /**
     * The custom name that can be set by customer.
     */
    description: pulumi.Input<string>;
}
