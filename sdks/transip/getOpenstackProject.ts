// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOpenstackProject(args: GetOpenstackProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetOpenstackProjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("transip:index/getOpenstackProject:getOpenstackProject", {
        "blocked": args.blocked,
        "description": args.description,
        "id": args.id,
        "locked": args.locked,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpenstackProject.
 */
export interface GetOpenstackProjectArgs {
    blocked?: boolean;
    description?: string;
    id?: string;
    locked?: boolean;
    name: string;
}

/**
 * A collection of values returned by getOpenstackProject.
 */
export interface GetOpenstackProjectResult {
    readonly blocked?: boolean;
    readonly description?: string;
    readonly id: string;
    readonly locked?: boolean;
    readonly name: string;
}
export function getOpenstackProjectOutput(args: GetOpenstackProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpenstackProjectResult> {
    return pulumi.output(args).apply((a: any) => getOpenstackProject(a, opts))
}

/**
 * A collection of arguments for invoking getOpenstackProject.
 */
export interface GetOpenstackProjectOutputArgs {
    blocked?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    locked?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}
