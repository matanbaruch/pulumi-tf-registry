// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCustomImage(args?: GetCustomImageArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomImageResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudscale:index/getCustomImage:getCustomImage", {
        "firmwareType": args.firmwareType,
        "id": args.id,
        "name": args.name,
        "slug": args.slug,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCustomImage.
 */
export interface GetCustomImageArgs {
    firmwareType?: string;
    id?: string;
    name?: string;
    slug?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getCustomImage.
 */
export interface GetCustomImageResult {
    readonly checksums: {[key: string]: string};
    readonly firmwareType: string;
    readonly href: string;
    readonly id?: string;
    readonly name?: string;
    readonly sizeGb: number;
    readonly slug?: string;
    readonly tags?: {[key: string]: string};
    readonly userDataHandling: string;
    readonly zoneSlugs: string[];
}
export function getCustomImageOutput(args?: GetCustomImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomImageResult> {
    return pulumi.output(args).apply((a: any) => getCustomImage(a, opts))
}

/**
 * A collection of arguments for invoking getCustomImage.
 */
export interface GetCustomImageOutputArgs {
    firmwareType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    slug?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
