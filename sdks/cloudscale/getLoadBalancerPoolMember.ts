// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLoadBalancerPoolMember(args: GetLoadBalancerPoolMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetLoadBalancerPoolMemberResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudscale:index/getLoadBalancerPoolMember:getLoadBalancerPoolMember", {
        "enabled": args.enabled,
        "id": args.id,
        "monitorPort": args.monitorPort,
        "name": args.name,
        "poolUuid": args.poolUuid,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLoadBalancerPoolMember.
 */
export interface GetLoadBalancerPoolMemberArgs {
    enabled?: boolean;
    id?: string;
    monitorPort?: number;
    name?: string;
    poolUuid: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getLoadBalancerPoolMember.
 */
export interface GetLoadBalancerPoolMemberResult {
    readonly address: string;
    readonly enabled: boolean;
    readonly href: string;
    readonly id?: string;
    readonly monitorPort: number;
    readonly monitorStatus: string;
    readonly name?: string;
    readonly poolHref: string;
    readonly poolName: string;
    readonly poolUuid: string;
    readonly protocolPort: number;
    readonly subnetCidr: string;
    readonly subnetHref: string;
    readonly subnetUuid: string;
    readonly tags?: {[key: string]: string};
}
export function getLoadBalancerPoolMemberOutput(args: GetLoadBalancerPoolMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoadBalancerPoolMemberResult> {
    return pulumi.output(args).apply((a: any) => getLoadBalancerPoolMember(a, opts))
}

/**
 * A collection of arguments for invoking getLoadBalancerPoolMember.
 */
export interface GetLoadBalancerPoolMemberOutputArgs {
    enabled?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    monitorPort?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    poolUuid: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
