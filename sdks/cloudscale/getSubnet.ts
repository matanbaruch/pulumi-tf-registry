// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSubnet(args?: GetSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetSubnetResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudscale:index/getSubnet:getSubnet", {
        "cidr": args.cidr,
        "gatewayAddress": args.gatewayAddress,
        "id": args.id,
        "networkName": args.networkName,
        "networkUuid": args.networkUuid,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetArgs {
    cidr?: string;
    gatewayAddress?: string;
    id?: string;
    networkName?: string;
    networkUuid?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getSubnet.
 */
export interface GetSubnetResult {
    readonly cidr?: string;
    readonly dnsServers: string[];
    readonly gatewayAddress: string;
    readonly href: string;
    readonly id?: string;
    readonly networkHref: string;
    readonly networkName: string;
    readonly networkUuid: string;
    readonly tags?: {[key: string]: string};
}
export function getSubnetOutput(args?: GetSubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubnetResult> {
    return pulumi.output(args).apply((a: any) => getSubnet(a, opts))
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetOutputArgs {
    cidr?: pulumi.Input<string>;
    gatewayAddress?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    networkName?: pulumi.Input<string>;
    networkUuid?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
