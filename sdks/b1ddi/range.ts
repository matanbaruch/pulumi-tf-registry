// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Range extends pulumi.CustomResource {
    /**
     * Get an existing Range resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RangeState, opts?: pulumi.CustomResourceOptions): Range {
        return new Range(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'b1ddi:index/range:Range';

    /**
     * Returns true if the given object is an instance of Range.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Range {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Range.__pulumiType;
    }

    /**
     * The description for the range. May contain 0 to 1024 characters. Can include UTF-8.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Time when the object has been created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The resource identifier.
     */
    public readonly dhcpHost!: pulumi.Output<string | undefined>;
    /**
     * The list of DHCP options. May be either a specific option or a group of options.
     */
    public readonly dhcpOptions!: pulumi.Output<outputs.RangeDhcpOption[] | undefined>;
    /**
     * The end IP address of the range.
     */
    public readonly end!: pulumi.Output<string>;
    /**
     * The list of all exclusion ranges in the scope of the range.
     */
    public readonly exclusionRanges!: pulumi.Output<outputs.RangeExclusionRange[] | undefined>;
    /**
     * The list of the inheritance assigned hosts of the object.
     */
    public /*out*/ readonly inheritanceAssignedHosts!: pulumi.Output<outputs.RangeInheritanceAssignedHost[]>;
    /**
     * The resource identifier.
     */
    public readonly inheritanceParent!: pulumi.Output<string>;
    /**
     * The DHCP inheritance configuration for the range.
     */
    public readonly inheritanceSources!: pulumi.Output<outputs.RangeInheritanceSources | undefined>;
    /**
     * The name of the range. May contain 1 to 256 characters. Can include UTF-8.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The resource identifier.
     */
    public readonly parent!: pulumi.Output<string>;
    /**
     * The type of protocol (_ipv4_ or _ipv6_).
     */
    public /*out*/ readonly protocol!: pulumi.Output<string>;
    /**
     * The resource identifier.
     */
    public readonly space!: pulumi.Output<string>;
    /**
     * The start IP address of the range.
     */
    public readonly start!: pulumi.Output<string>;
    /**
     * The tags for the range in JSON format.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The utilization threshold settings for the range.
     */
    public readonly threshold!: pulumi.Output<outputs.RangeThreshold | undefined>;
    /**
     * Time when the object has been updated. Equals to _created_at_ if not updated after creation.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * The utilization statistics for the range.
     */
    public /*out*/ readonly utilizations!: pulumi.Output<outputs.RangeUtilization[]>;

    /**
     * Create a Range resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RangeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RangeArgs | RangeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RangeState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["dhcpHost"] = state ? state.dhcpHost : undefined;
            resourceInputs["dhcpOptions"] = state ? state.dhcpOptions : undefined;
            resourceInputs["end"] = state ? state.end : undefined;
            resourceInputs["exclusionRanges"] = state ? state.exclusionRanges : undefined;
            resourceInputs["inheritanceAssignedHosts"] = state ? state.inheritanceAssignedHosts : undefined;
            resourceInputs["inheritanceParent"] = state ? state.inheritanceParent : undefined;
            resourceInputs["inheritanceSources"] = state ? state.inheritanceSources : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["space"] = state ? state.space : undefined;
            resourceInputs["start"] = state ? state.start : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["threshold"] = state ? state.threshold : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["utilizations"] = state ? state.utilizations : undefined;
        } else {
            const args = argsOrState as RangeArgs | undefined;
            if ((!args || args.end === undefined) && !opts.urn) {
                throw new Error("Missing required property 'end'");
            }
            if ((!args || args.space === undefined) && !opts.urn) {
                throw new Error("Missing required property 'space'");
            }
            if ((!args || args.start === undefined) && !opts.urn) {
                throw new Error("Missing required property 'start'");
            }
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["dhcpHost"] = args ? args.dhcpHost : undefined;
            resourceInputs["dhcpOptions"] = args ? args.dhcpOptions : undefined;
            resourceInputs["end"] = args ? args.end : undefined;
            resourceInputs["exclusionRanges"] = args ? args.exclusionRanges : undefined;
            resourceInputs["inheritanceParent"] = args ? args.inheritanceParent : undefined;
            resourceInputs["inheritanceSources"] = args ? args.inheritanceSources : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["space"] = args ? args.space : undefined;
            resourceInputs["start"] = args ? args.start : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["threshold"] = args ? args.threshold : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["inheritanceAssignedHosts"] = undefined /*out*/;
            resourceInputs["protocol"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["utilizations"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Range.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Range resources.
 */
export interface RangeState {
    /**
     * The description for the range. May contain 0 to 1024 characters. Can include UTF-8.
     */
    comment?: pulumi.Input<string>;
    /**
     * Time when the object has been created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The resource identifier.
     */
    dhcpHost?: pulumi.Input<string>;
    /**
     * The list of DHCP options. May be either a specific option or a group of options.
     */
    dhcpOptions?: pulumi.Input<pulumi.Input<inputs.RangeDhcpOption>[]>;
    /**
     * The end IP address of the range.
     */
    end?: pulumi.Input<string>;
    /**
     * The list of all exclusion ranges in the scope of the range.
     */
    exclusionRanges?: pulumi.Input<pulumi.Input<inputs.RangeExclusionRange>[]>;
    /**
     * The list of the inheritance assigned hosts of the object.
     */
    inheritanceAssignedHosts?: pulumi.Input<pulumi.Input<inputs.RangeInheritanceAssignedHost>[]>;
    /**
     * The resource identifier.
     */
    inheritanceParent?: pulumi.Input<string>;
    /**
     * The DHCP inheritance configuration for the range.
     */
    inheritanceSources?: pulumi.Input<inputs.RangeInheritanceSources>;
    /**
     * The name of the range. May contain 1 to 256 characters. Can include UTF-8.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource identifier.
     */
    parent?: pulumi.Input<string>;
    /**
     * The type of protocol (_ipv4_ or _ipv6_).
     */
    protocol?: pulumi.Input<string>;
    /**
     * The resource identifier.
     */
    space?: pulumi.Input<string>;
    /**
     * The start IP address of the range.
     */
    start?: pulumi.Input<string>;
    /**
     * The tags for the range in JSON format.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The utilization threshold settings for the range.
     */
    threshold?: pulumi.Input<inputs.RangeThreshold>;
    /**
     * Time when the object has been updated. Equals to _created_at_ if not updated after creation.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The utilization statistics for the range.
     */
    utilizations?: pulumi.Input<pulumi.Input<inputs.RangeUtilization>[]>;
}

/**
 * The set of arguments for constructing a Range resource.
 */
export interface RangeArgs {
    /**
     * The description for the range. May contain 0 to 1024 characters. Can include UTF-8.
     */
    comment?: pulumi.Input<string>;
    /**
     * The resource identifier.
     */
    dhcpHost?: pulumi.Input<string>;
    /**
     * The list of DHCP options. May be either a specific option or a group of options.
     */
    dhcpOptions?: pulumi.Input<pulumi.Input<inputs.RangeDhcpOption>[]>;
    /**
     * The end IP address of the range.
     */
    end: pulumi.Input<string>;
    /**
     * The list of all exclusion ranges in the scope of the range.
     */
    exclusionRanges?: pulumi.Input<pulumi.Input<inputs.RangeExclusionRange>[]>;
    /**
     * The resource identifier.
     */
    inheritanceParent?: pulumi.Input<string>;
    /**
     * The DHCP inheritance configuration for the range.
     */
    inheritanceSources?: pulumi.Input<inputs.RangeInheritanceSources>;
    /**
     * The name of the range. May contain 1 to 256 characters. Can include UTF-8.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource identifier.
     */
    parent?: pulumi.Input<string>;
    /**
     * The resource identifier.
     */
    space: pulumi.Input<string>;
    /**
     * The start IP address of the range.
     */
    start: pulumi.Input<string>;
    /**
     * The tags for the range in JSON format.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The utilization threshold settings for the range.
     */
    threshold?: pulumi.Input<inputs.RangeThreshold>;
}
