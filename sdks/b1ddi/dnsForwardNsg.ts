// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DnsForwardNsg extends pulumi.CustomResource {
    /**
     * Get an existing DnsForwardNsg resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnsForwardNsgState, opts?: pulumi.CustomResourceOptions): DnsForwardNsg {
        return new DnsForwardNsg(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'b1ddi:index/dnsForwardNsg:DnsForwardNsg';

    /**
     * Returns true if the given object is an instance of DnsForwardNsg.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DnsForwardNsg {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DnsForwardNsg.__pulumiType;
    }

    /**
     * Optional. Comment for the object.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Optional. External DNS servers to forward to. Order is not significant.
     */
    public readonly externalForwarders!: pulumi.Output<outputs.DnsForwardNsgExternalForwarder[] | undefined>;
    /**
     * Optional. _true_ to only forward.
     */
    public readonly forwardersOnly!: pulumi.Output<boolean | undefined>;
    /**
     * The resource identifier.
     */
    public readonly hosts!: pulumi.Output<string[] | undefined>;
    /**
     * The resource identifier.
     */
    public readonly internalForwarders!: pulumi.Output<string[] | undefined>;
    /**
     * Name of the object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The resource identifier.
     */
    public readonly nsgs!: pulumi.Output<string[] | undefined>;
    /**
     * Tagging specifics.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a DnsForwardNsg resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DnsForwardNsgArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DnsForwardNsgArgs | DnsForwardNsgState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DnsForwardNsgState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["externalForwarders"] = state ? state.externalForwarders : undefined;
            resourceInputs["forwardersOnly"] = state ? state.forwardersOnly : undefined;
            resourceInputs["hosts"] = state ? state.hosts : undefined;
            resourceInputs["internalForwarders"] = state ? state.internalForwarders : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nsgs"] = state ? state.nsgs : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as DnsForwardNsgArgs | undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["externalForwarders"] = args ? args.externalForwarders : undefined;
            resourceInputs["forwardersOnly"] = args ? args.forwardersOnly : undefined;
            resourceInputs["hosts"] = args ? args.hosts : undefined;
            resourceInputs["internalForwarders"] = args ? args.internalForwarders : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nsgs"] = args ? args.nsgs : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DnsForwardNsg.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DnsForwardNsg resources.
 */
export interface DnsForwardNsgState {
    /**
     * Optional. Comment for the object.
     */
    comment?: pulumi.Input<string>;
    /**
     * Optional. External DNS servers to forward to. Order is not significant.
     */
    externalForwarders?: pulumi.Input<pulumi.Input<inputs.DnsForwardNsgExternalForwarder>[]>;
    /**
     * Optional. _true_ to only forward.
     */
    forwardersOnly?: pulumi.Input<boolean>;
    /**
     * The resource identifier.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource identifier.
     */
    internalForwarders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the object.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource identifier.
     */
    nsgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tagging specifics.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a DnsForwardNsg resource.
 */
export interface DnsForwardNsgArgs {
    /**
     * Optional. Comment for the object.
     */
    comment?: pulumi.Input<string>;
    /**
     * Optional. External DNS servers to forward to. Order is not significant.
     */
    externalForwarders?: pulumi.Input<pulumi.Input<inputs.DnsForwardNsgExternalForwarder>[]>;
    /**
     * Optional. _true_ to only forward.
     */
    forwardersOnly?: pulumi.Input<boolean>;
    /**
     * The resource identifier.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource identifier.
     */
    internalForwarders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the object.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource identifier.
     */
    nsgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tagging specifics.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
