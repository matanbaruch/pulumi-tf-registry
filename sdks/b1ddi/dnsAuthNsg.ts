// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DnsAuthNsg extends pulumi.CustomResource {
    /**
     * Get an existing DnsAuthNsg resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnsAuthNsgState, opts?: pulumi.CustomResourceOptions): DnsAuthNsg {
        return new DnsAuthNsg(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'b1ddi:index/dnsAuthNsg:DnsAuthNsg';

    /**
     * Returns true if the given object is an instance of DnsAuthNsg.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DnsAuthNsg {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DnsAuthNsg.__pulumiType;
    }

    /**
     * Optional. Comment for the object.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Optional. DNS primaries external to BloxOne DDI. Order is not significant.
     */
    public readonly externalPrimaries!: pulumi.Output<outputs.DnsAuthNsgExternalPrimary[] | undefined>;
    /**
     * DNS secondaries external to BloxOne DDI. Order is not significant.
     */
    public readonly externalSecondaries!: pulumi.Output<outputs.DnsAuthNsgExternalSecondary[] | undefined>;
    /**
     * Optional. BloxOne DDI hosts acting as internal secondaries. Order is not significant.
     */
    public readonly internalSecondaries!: pulumi.Output<outputs.DnsAuthNsgInternalSecondary[] | undefined>;
    /**
     * Name of the object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The resource identifier.
     */
    public readonly nsgs!: pulumi.Output<string[] | undefined>;
    /**
     * Tagging specifics.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a DnsAuthNsg resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DnsAuthNsgArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DnsAuthNsgArgs | DnsAuthNsgState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DnsAuthNsgState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["externalPrimaries"] = state ? state.externalPrimaries : undefined;
            resourceInputs["externalSecondaries"] = state ? state.externalSecondaries : undefined;
            resourceInputs["internalSecondaries"] = state ? state.internalSecondaries : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nsgs"] = state ? state.nsgs : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as DnsAuthNsgArgs | undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["externalPrimaries"] = args ? args.externalPrimaries : undefined;
            resourceInputs["externalSecondaries"] = args ? args.externalSecondaries : undefined;
            resourceInputs["internalSecondaries"] = args ? args.internalSecondaries : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nsgs"] = args ? args.nsgs : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DnsAuthNsg.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DnsAuthNsg resources.
 */
export interface DnsAuthNsgState {
    /**
     * Optional. Comment for the object.
     */
    comment?: pulumi.Input<string>;
    /**
     * Optional. DNS primaries external to BloxOne DDI. Order is not significant.
     */
    externalPrimaries?: pulumi.Input<pulumi.Input<inputs.DnsAuthNsgExternalPrimary>[]>;
    /**
     * DNS secondaries external to BloxOne DDI. Order is not significant.
     */
    externalSecondaries?: pulumi.Input<pulumi.Input<inputs.DnsAuthNsgExternalSecondary>[]>;
    /**
     * Optional. BloxOne DDI hosts acting as internal secondaries. Order is not significant.
     */
    internalSecondaries?: pulumi.Input<pulumi.Input<inputs.DnsAuthNsgInternalSecondary>[]>;
    /**
     * Name of the object.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource identifier.
     */
    nsgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tagging specifics.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a DnsAuthNsg resource.
 */
export interface DnsAuthNsgArgs {
    /**
     * Optional. Comment for the object.
     */
    comment?: pulumi.Input<string>;
    /**
     * Optional. DNS primaries external to BloxOne DDI. Order is not significant.
     */
    externalPrimaries?: pulumi.Input<pulumi.Input<inputs.DnsAuthNsgExternalPrimary>[]>;
    /**
     * DNS secondaries external to BloxOne DDI. Order is not significant.
     */
    externalSecondaries?: pulumi.Input<pulumi.Input<inputs.DnsAuthNsgExternalSecondary>[]>;
    /**
     * Optional. BloxOne DDI hosts acting as internal secondaries. Order is not significant.
     */
    internalSecondaries?: pulumi.Input<pulumi.Input<inputs.DnsAuthNsgInternalSecondary>[]>;
    /**
     * Name of the object.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource identifier.
     */
    nsgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tagging specifics.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
