// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EnvironmentsAzureCredential extends pulumi.CustomResource {
    /**
     * Get an existing EnvironmentsAzureCredential resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnvironmentsAzureCredentialState, opts?: pulumi.CustomResourceOptions): EnvironmentsAzureCredential {
        return new EnvironmentsAzureCredential(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cdp:index/environmentsAzureCredential:EnvironmentsAzureCredential';

    /**
     * Returns true if the given object is an instance of EnvironmentsAzureCredential.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnvironmentsAzureCredential {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnvironmentsAzureCredential.__pulumiType;
    }

    public readonly appBased!: pulumi.Output<outputs.EnvironmentsAzureCredentialAppBased>;
    /**
     * The name of the CDP credential.
     */
    public readonly credentialName!: pulumi.Output<string>;
    /**
     * The CRN of the credential.
     */
    public /*out*/ readonly crn!: pulumi.Output<string>;
    /**
     * A description for the credential.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The Azure subscription ID. Required for secret based credentials and should look like the following example:
     * a8d4457d-310v-41p6-sc53-14g8d733e514
     */
    public readonly subscriptionId!: pulumi.Output<string>;
    /**
     * The Azure AD tenant ID for the Azure subscription. Required for secret based credentials and should look like the
     * following example: b10u3481-2451-10ba-7sfd-9o2d1v60185d
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a EnvironmentsAzureCredential resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentsAzureCredentialArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnvironmentsAzureCredentialArgs | EnvironmentsAzureCredentialState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnvironmentsAzureCredentialState | undefined;
            resourceInputs["appBased"] = state ? state.appBased : undefined;
            resourceInputs["credentialName"] = state ? state.credentialName : undefined;
            resourceInputs["crn"] = state ? state.crn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as EnvironmentsAzureCredentialArgs | undefined;
            if ((!args || args.appBased === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appBased'");
            }
            if ((!args || args.credentialName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'credentialName'");
            }
            if ((!args || args.subscriptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionId'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["appBased"] = args ? args.appBased : undefined;
            resourceInputs["credentialName"] = args ? args.credentialName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["crn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EnvironmentsAzureCredential.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EnvironmentsAzureCredential resources.
 */
export interface EnvironmentsAzureCredentialState {
    appBased?: pulumi.Input<inputs.EnvironmentsAzureCredentialAppBased>;
    /**
     * The name of the CDP credential.
     */
    credentialName?: pulumi.Input<string>;
    /**
     * The CRN of the credential.
     */
    crn?: pulumi.Input<string>;
    /**
     * A description for the credential.
     */
    description?: pulumi.Input<string>;
    /**
     * The Azure subscription ID. Required for secret based credentials and should look like the following example:
     * a8d4457d-310v-41p6-sc53-14g8d733e514
     */
    subscriptionId?: pulumi.Input<string>;
    /**
     * The Azure AD tenant ID for the Azure subscription. Required for secret based credentials and should look like the
     * following example: b10u3481-2451-10ba-7sfd-9o2d1v60185d
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EnvironmentsAzureCredential resource.
 */
export interface EnvironmentsAzureCredentialArgs {
    appBased: pulumi.Input<inputs.EnvironmentsAzureCredentialAppBased>;
    /**
     * The name of the CDP credential.
     */
    credentialName: pulumi.Input<string>;
    /**
     * A description for the credential.
     */
    description?: pulumi.Input<string>;
    /**
     * The Azure subscription ID. Required for secret based credentials and should look like the following example:
     * a8d4457d-310v-41p6-sc53-14g8d733e514
     */
    subscriptionId: pulumi.Input<string>;
    /**
     * The Azure AD tenant ID for the Azure subscription. Required for secret based credentials and should look like the
     * following example: b10u3481-2451-10ba-7sfd-9o2d1v60185d
     */
    tenantId: pulumi.Input<string>;
}
