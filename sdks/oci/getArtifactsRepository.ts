// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getArtifactsRepository(args: GetArtifactsRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetArtifactsRepositoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getArtifactsRepository:getArtifactsRepository", {
        "repositoryId": args.repositoryId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getArtifactsRepository.
 */
export interface GetArtifactsRepositoryArgs {
    repositoryId: string;
}

/**
 * A collection of values returned by getArtifactsRepository.
 */
export interface GetArtifactsRepositoryResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isImmutable: boolean;
    readonly repositoryId: string;
    readonly repositoryType: string;
    readonly state: string;
    readonly timeCreated: string;
}
export function getArtifactsRepositoryOutput(args: GetArtifactsRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetArtifactsRepositoryResult> {
    return pulumi.output(args).apply((a: any) => getArtifactsRepository(a, opts))
}

/**
 * A collection of arguments for invoking getArtifactsRepository.
 */
export interface GetArtifactsRepositoryOutputArgs {
    repositoryId: pulumi.Input<string>;
}
