// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApigatewayApiContent(args: GetApigatewayApiContentArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayApiContentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getApigatewayApiContent:getApigatewayApiContent", {
        "apiId": args.apiId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayApiContent.
 */
export interface GetApigatewayApiContentArgs {
    apiId: string;
    id?: string;
}

/**
 * A collection of values returned by getApigatewayApiContent.
 */
export interface GetApigatewayApiContentResult {
    readonly apiId: string;
    readonly content: string;
    readonly id: string;
}
export function getApigatewayApiContentOutput(args: GetApigatewayApiContentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayApiContentResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayApiContent(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayApiContent.
 */
export interface GetApigatewayApiContentOutputArgs {
    apiId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
