// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLoadBalancerBackendSetHealth(args: GetLoadBalancerBackendSetHealthArgs, opts?: pulumi.InvokeOptions): Promise<GetLoadBalancerBackendSetHealthResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLoadBalancerBackendSetHealth:getLoadBalancerBackendSetHealth", {
        "backendSetName": args.backendSetName,
        "id": args.id,
        "loadBalancerId": args.loadBalancerId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLoadBalancerBackendSetHealth.
 */
export interface GetLoadBalancerBackendSetHealthArgs {
    backendSetName: string;
    id?: string;
    loadBalancerId: string;
}

/**
 * A collection of values returned by getLoadBalancerBackendSetHealth.
 */
export interface GetLoadBalancerBackendSetHealthResult {
    readonly backendSetName: string;
    readonly criticalStateBackendNames: string[];
    readonly id: string;
    readonly loadBalancerId: string;
    readonly status: string;
    readonly totalBackendCount: number;
    readonly unknownStateBackendNames: string[];
    readonly warningStateBackendNames: string[];
}
export function getLoadBalancerBackendSetHealthOutput(args: GetLoadBalancerBackendSetHealthOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoadBalancerBackendSetHealthResult> {
    return pulumi.output(args).apply((a: any) => getLoadBalancerBackendSetHealth(a, opts))
}

/**
 * A collection of arguments for invoking getLoadBalancerBackendSetHealth.
 */
export interface GetLoadBalancerBackendSetHealthOutputArgs {
    backendSetName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    loadBalancerId: pulumi.Input<string>;
}
