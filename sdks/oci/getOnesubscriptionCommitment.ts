// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOnesubscriptionCommitment(args: GetOnesubscriptionCommitmentArgs, opts?: pulumi.InvokeOptions): Promise<GetOnesubscriptionCommitmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOnesubscriptionCommitment:getOnesubscriptionCommitment", {
        "commitmentId": args.commitmentId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOnesubscriptionCommitment.
 */
export interface GetOnesubscriptionCommitmentArgs {
    commitmentId: string;
    id?: string;
}

/**
 * A collection of values returned by getOnesubscriptionCommitment.
 */
export interface GetOnesubscriptionCommitmentResult {
    readonly availableAmount: string;
    readonly commitmentId: string;
    readonly fundedAllocationValue: string;
    readonly id: string;
    readonly quantity: string;
    readonly subscribedServiceId: string;
    readonly timeEnd: string;
    readonly timeStart: string;
    readonly usedAmount: string;
}
export function getOnesubscriptionCommitmentOutput(args: GetOnesubscriptionCommitmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOnesubscriptionCommitmentResult> {
    return pulumi.output(args).apply((a: any) => getOnesubscriptionCommitment(a, opts))
}

/**
 * A collection of arguments for invoking getOnesubscriptionCommitment.
 */
export interface GetOnesubscriptionCommitmentOutputArgs {
    commitmentId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
