// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCoreSubnet(args: GetCoreSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreSubnetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreSubnet:getCoreSubnet", {
        "subnetId": args.subnetId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreSubnet.
 */
export interface GetCoreSubnetArgs {
    subnetId: string;
}

/**
 * A collection of values returned by getCoreSubnet.
 */
export interface GetCoreSubnetResult {
    readonly availabilityDomain: string;
    readonly cidrBlock: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly dhcpOptionsId: string;
    readonly displayName: string;
    readonly dnsLabel: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly ipv6cidrBlock: string;
    readonly ipv6cidrBlocks: string[];
    readonly ipv6virtualRouterIp: string;
    readonly prohibitInternetIngress: boolean;
    readonly prohibitPublicIpOnVnic: boolean;
    readonly routeTableId: string;
    readonly securityListIds: string[];
    readonly state: string;
    readonly subnetDomainName: string;
    readonly subnetId: string;
    readonly timeCreated: string;
    readonly vcnId: string;
    readonly virtualRouterIp: string;
    readonly virtualRouterMac: string;
}
export function getCoreSubnetOutput(args: GetCoreSubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreSubnetResult> {
    return pulumi.output(args).apply((a: any) => getCoreSubnet(a, opts))
}

/**
 * A collection of arguments for invoking getCoreSubnet.
 */
export interface GetCoreSubnetOutputArgs {
    subnetId: pulumi.Input<string>;
}
