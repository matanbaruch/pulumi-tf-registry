// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreCrossConnectGroup(args: GetCoreCrossConnectGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreCrossConnectGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreCrossConnectGroup:getCoreCrossConnectGroup", {
        "crossConnectGroupId": args.crossConnectGroupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreCrossConnectGroup.
 */
export interface GetCoreCrossConnectGroupArgs {
    crossConnectGroupId: string;
}

/**
 * A collection of values returned by getCoreCrossConnectGroup.
 */
export interface GetCoreCrossConnectGroupResult {
    readonly compartmentId: string;
    readonly crossConnectGroupId: string;
    readonly customerReferenceName: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly macsecProperties: outputs.GetCoreCrossConnectGroupMacsecProperty[];
    readonly ociLogicalDeviceName: string;
    readonly ociPhysicalDeviceName: string;
    readonly state: string;
    readonly timeCreated: string;
}
export function getCoreCrossConnectGroupOutput(args: GetCoreCrossConnectGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreCrossConnectGroupResult> {
    return pulumi.output(args).apply((a: any) => getCoreCrossConnectGroup(a, opts))
}

/**
 * A collection of arguments for invoking getCoreCrossConnectGroup.
 */
export interface GetCoreCrossConnectGroupOutputArgs {
    crossConnectGroupId: pulumi.Input<string>;
}
