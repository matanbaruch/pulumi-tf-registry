// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVbsInstVbsInstance(args: GetVbsInstVbsInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetVbsInstVbsInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getVbsInstVbsInstance:getVbsInstVbsInstance", {
        "vbsInstanceId": args.vbsInstanceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVbsInstVbsInstance.
 */
export interface GetVbsInstVbsInstanceArgs {
    vbsInstanceId: string;
}

/**
 * A collection of values returned by getVbsInstVbsInstance.
 */
export interface GetVbsInstVbsInstanceResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly idcsAccessToken: string;
    readonly isResourceUsageAgreementGranted: boolean;
    readonly lifecyleDetails: string;
    readonly name: string;
    readonly resourceCompartmentId: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly vbsAccessUrl: string;
    readonly vbsInstanceId: string;
}
export function getVbsInstVbsInstanceOutput(args: GetVbsInstVbsInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVbsInstVbsInstanceResult> {
    return pulumi.output(args).apply((a: any) => getVbsInstVbsInstance(a, opts))
}

/**
 * A collection of arguments for invoking getVbsInstVbsInstance.
 */
export interface GetVbsInstVbsInstanceOutputArgs {
    vbsInstanceId: pulumi.Input<string>;
}
