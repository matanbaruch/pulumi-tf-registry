// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeDiscoveryAnalytics(args: GetDataSafeDiscoveryAnalyticsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeDiscoveryAnalyticsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeDiscoveryAnalytics:getDataSafeDiscoveryAnalytics", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "groupBy": args.groupBy,
        "id": args.id,
        "isCommon": args.isCommon,
        "sensitiveDataModelId": args.sensitiveDataModelId,
        "sensitiveTypeId": args.sensitiveTypeId,
        "targetId": args.targetId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeDiscoveryAnalytics.
 */
export interface GetDataSafeDiscoveryAnalyticsArgs {
    compartmentId: string;
    compartmentIdInSubtree?: boolean;
    filters?: inputs.GetDataSafeDiscoveryAnalyticsFilter[];
    groupBy?: string;
    id?: string;
    isCommon?: boolean;
    sensitiveDataModelId?: string;
    sensitiveTypeId?: string;
    targetId?: string;
}

/**
 * A collection of values returned by getDataSafeDiscoveryAnalytics.
 */
export interface GetDataSafeDiscoveryAnalyticsResult {
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly discoveryAnalyticsCollections: outputs.GetDataSafeDiscoveryAnalyticsDiscoveryAnalyticsCollection[];
    readonly filters?: outputs.GetDataSafeDiscoveryAnalyticsFilter[];
    readonly groupBy?: string;
    readonly id: string;
    readonly isCommon?: boolean;
    readonly sensitiveDataModelId?: string;
    readonly sensitiveTypeId?: string;
    readonly targetId?: string;
}
export function getDataSafeDiscoveryAnalyticsOutput(args: GetDataSafeDiscoveryAnalyticsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeDiscoveryAnalyticsResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeDiscoveryAnalytics(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeDiscoveryAnalytics.
 */
export interface GetDataSafeDiscoveryAnalyticsOutputArgs {
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataSafeDiscoveryAnalyticsFilterArgs>[]>;
    groupBy?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isCommon?: pulumi.Input<boolean>;
    sensitiveDataModelId?: pulumi.Input<string>;
    sensitiveTypeId?: pulumi.Input<string>;
    targetId?: pulumi.Input<string>;
}
