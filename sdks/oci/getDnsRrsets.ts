// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDnsRrsets(args: GetDnsRrsetsArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsRrsetsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDnsRrsets:getDnsRrsets", {
        "domain": args.domain,
        "domainContains": args.domainContains,
        "filters": args.filters,
        "id": args.id,
        "rtype": args.rtype,
        "scope": args.scope,
        "viewId": args.viewId,
        "zoneNameOrId": args.zoneNameOrId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnsRrsets.
 */
export interface GetDnsRrsetsArgs {
    domain?: string;
    domainContains?: string;
    filters?: inputs.GetDnsRrsetsFilter[];
    id?: string;
    rtype?: string;
    scope?: string;
    viewId?: string;
    zoneNameOrId: string;
}

/**
 * A collection of values returned by getDnsRrsets.
 */
export interface GetDnsRrsetsResult {
    readonly domain?: string;
    readonly domainContains?: string;
    readonly filters?: outputs.GetDnsRrsetsFilter[];
    readonly id: string;
    readonly rrsets: outputs.GetDnsRrsetsRrset[];
    readonly rtype?: string;
    readonly scope?: string;
    readonly viewId?: string;
    readonly zoneNameOrId: string;
}
export function getDnsRrsetsOutput(args: GetDnsRrsetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDnsRrsetsResult> {
    return pulumi.output(args).apply((a: any) => getDnsRrsets(a, opts))
}

/**
 * A collection of arguments for invoking getDnsRrsets.
 */
export interface GetDnsRrsetsOutputArgs {
    domain?: pulumi.Input<string>;
    domainContains?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDnsRrsetsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    rtype?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    viewId?: pulumi.Input<string>;
    zoneNameOrId: pulumi.Input<string>;
}
