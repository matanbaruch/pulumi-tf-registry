// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMeteringComputationScheduledRun(args: GetMeteringComputationScheduledRunArgs, opts?: pulumi.InvokeOptions): Promise<GetMeteringComputationScheduledRunResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMeteringComputationScheduledRun:getMeteringComputationScheduledRun", {
        "id": args.id,
        "scheduledRunId": args.scheduledRunId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMeteringComputationScheduledRun.
 */
export interface GetMeteringComputationScheduledRunArgs {
    id?: string;
    scheduledRunId: string;
}

/**
 * A collection of values returned by getMeteringComputationScheduledRun.
 */
export interface GetMeteringComputationScheduledRunResult {
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly scheduleId: string;
    readonly scheduledRunId: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeFinished: string;
}
export function getMeteringComputationScheduledRunOutput(args: GetMeteringComputationScheduledRunOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMeteringComputationScheduledRunResult> {
    return pulumi.output(args).apply((a: any) => getMeteringComputationScheduledRun(a, opts))
}

/**
 * A collection of arguments for invoking getMeteringComputationScheduledRun.
 */
export interface GetMeteringComputationScheduledRunOutputArgs {
    id?: pulumi.Input<string>;
    scheduledRunId: pulumi.Input<string>;
}
