// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DevopsRepositoryProtectedBranchManagement extends pulumi.CustomResource {
    /**
     * Get an existing DevopsRepositoryProtectedBranchManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DevopsRepositoryProtectedBranchManagementState, opts?: pulumi.CustomResourceOptions): DevopsRepositoryProtectedBranchManagement {
        return new DevopsRepositoryProtectedBranchManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/devopsRepositoryProtectedBranchManagement:DevopsRepositoryProtectedBranchManagement';

    /**
     * Returns true if the given object is an instance of DevopsRepositoryProtectedBranchManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DevopsRepositoryProtectedBranchManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DevopsRepositoryProtectedBranchManagement.__pulumiType;
    }

    public readonly branchName!: pulumi.Output<string>;
    public /*out*/ readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly protectionLevels!: pulumi.Output<string[]>;
    public readonly repositoryId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DevopsRepositoryProtectedBranchManagementTimeouts | undefined>;

    /**
     * Create a DevopsRepositoryProtectedBranchManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DevopsRepositoryProtectedBranchManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DevopsRepositoryProtectedBranchManagementArgs | DevopsRepositoryProtectedBranchManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DevopsRepositoryProtectedBranchManagementState | undefined;
            resourceInputs["branchName"] = state ? state.branchName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["protectionLevels"] = state ? state.protectionLevels : undefined;
            resourceInputs["repositoryId"] = state ? state.repositoryId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DevopsRepositoryProtectedBranchManagementArgs | undefined;
            if ((!args || args.branchName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'branchName'");
            }
            if ((!args || args.repositoryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repositoryId'");
            }
            resourceInputs["branchName"] = args ? args.branchName : undefined;
            resourceInputs["protectionLevels"] = args ? args.protectionLevels : undefined;
            resourceInputs["repositoryId"] = args ? args.repositoryId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["freeformTags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DevopsRepositoryProtectedBranchManagement.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DevopsRepositoryProtectedBranchManagement resources.
 */
export interface DevopsRepositoryProtectedBranchManagementState {
    branchName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    protectionLevels?: pulumi.Input<pulumi.Input<string>[]>;
    repositoryId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DevopsRepositoryProtectedBranchManagementTimeouts>;
}

/**
 * The set of arguments for constructing a DevopsRepositoryProtectedBranchManagement resource.
 */
export interface DevopsRepositoryProtectedBranchManagementArgs {
    branchName: pulumi.Input<string>;
    protectionLevels?: pulumi.Input<pulumi.Input<string>[]>;
    repositoryId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DevopsRepositoryProtectedBranchManagementTimeouts>;
}
