// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApmConfigConfigs(args: GetApmConfigConfigsArgs, opts?: pulumi.InvokeOptions): Promise<GetApmConfigConfigsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getApmConfigConfigs:getApmConfigConfigs", {
        "apmDomainId": args.apmDomainId,
        "configType": args.configType,
        "definedTagEquals": args.definedTagEquals,
        "definedTagExists": args.definedTagExists,
        "displayName": args.displayName,
        "filters": args.filters,
        "freeformTagEquals": args.freeformTagEquals,
        "freeformTagExists": args.freeformTagExists,
        "id": args.id,
        "optionsGroup": args.optionsGroup,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApmConfigConfigs.
 */
export interface GetApmConfigConfigsArgs {
    apmDomainId: string;
    configType?: string;
    definedTagEquals?: string[];
    definedTagExists?: string[];
    displayName?: string;
    filters?: inputs.GetApmConfigConfigsFilter[];
    freeformTagEquals?: string[];
    freeformTagExists?: string[];
    id?: string;
    optionsGroup?: string;
}

/**
 * A collection of values returned by getApmConfigConfigs.
 */
export interface GetApmConfigConfigsResult {
    readonly apmDomainId: string;
    readonly configCollections: outputs.GetApmConfigConfigsConfigCollection[];
    readonly configType?: string;
    readonly definedTagEquals?: string[];
    readonly definedTagExists?: string[];
    readonly displayName?: string;
    readonly filters?: outputs.GetApmConfigConfigsFilter[];
    readonly freeformTagEquals?: string[];
    readonly freeformTagExists?: string[];
    readonly id: string;
    readonly optionsGroup?: string;
}
export function getApmConfigConfigsOutput(args: GetApmConfigConfigsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApmConfigConfigsResult> {
    return pulumi.output(args).apply((a: any) => getApmConfigConfigs(a, opts))
}

/**
 * A collection of arguments for invoking getApmConfigConfigs.
 */
export interface GetApmConfigConfigsOutputArgs {
    apmDomainId: pulumi.Input<string>;
    configType?: pulumi.Input<string>;
    definedTagEquals?: pulumi.Input<pulumi.Input<string>[]>;
    definedTagExists?: pulumi.Input<pulumi.Input<string>[]>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetApmConfigConfigsFilterArgs>[]>;
    freeformTagEquals?: pulumi.Input<pulumi.Input<string>[]>;
    freeformTagExists?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    optionsGroup?: pulumi.Input<string>;
}
