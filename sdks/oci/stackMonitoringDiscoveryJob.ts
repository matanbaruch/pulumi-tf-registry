// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class StackMonitoringDiscoveryJob extends pulumi.CustomResource {
    /**
     * Get an existing StackMonitoringDiscoveryJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StackMonitoringDiscoveryJobState, opts?: pulumi.CustomResourceOptions): StackMonitoringDiscoveryJob {
        return new StackMonitoringDiscoveryJob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/stackMonitoringDiscoveryJob:StackMonitoringDiscoveryJob';

    /**
     * Returns true if the given object is an instance of StackMonitoringDiscoveryJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StackMonitoringDiscoveryJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StackMonitoringDiscoveryJob.__pulumiType;
    }

    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly discoveryClient!: pulumi.Output<string>;
    public readonly discoveryDetails!: pulumi.Output<outputs.StackMonitoringDiscoveryJobDiscoveryDetails>;
    public readonly discoveryType!: pulumi.Output<string | undefined>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly shouldPropagateTagsToDiscoveredResources!: pulumi.Output<boolean>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly statusMessage!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly tenantId!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.StackMonitoringDiscoveryJobTimeouts | undefined>;
    public /*out*/ readonly userId!: pulumi.Output<string>;

    /**
     * Create a StackMonitoringDiscoveryJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StackMonitoringDiscoveryJobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StackMonitoringDiscoveryJobArgs | StackMonitoringDiscoveryJobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StackMonitoringDiscoveryJobState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["discoveryClient"] = state ? state.discoveryClient : undefined;
            resourceInputs["discoveryDetails"] = state ? state.discoveryDetails : undefined;
            resourceInputs["discoveryType"] = state ? state.discoveryType : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["shouldPropagateTagsToDiscoveredResources"] = state ? state.shouldPropagateTagsToDiscoveredResources : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["statusMessage"] = state ? state.statusMessage : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
        } else {
            const args = argsOrState as StackMonitoringDiscoveryJobArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.discoveryDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'discoveryDetails'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["discoveryClient"] = args ? args.discoveryClient : undefined;
            resourceInputs["discoveryDetails"] = args ? args.discoveryDetails : undefined;
            resourceInputs["discoveryType"] = args ? args.discoveryType : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["shouldPropagateTagsToDiscoveredResources"] = args ? args.shouldPropagateTagsToDiscoveredResources : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusMessage"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StackMonitoringDiscoveryJob.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StackMonitoringDiscoveryJob resources.
 */
export interface StackMonitoringDiscoveryJobState {
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    discoveryClient?: pulumi.Input<string>;
    discoveryDetails?: pulumi.Input<inputs.StackMonitoringDiscoveryJobDiscoveryDetails>;
    discoveryType?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    shouldPropagateTagsToDiscoveredResources?: pulumi.Input<boolean>;
    state?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    statusMessage?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenantId?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StackMonitoringDiscoveryJobTimeouts>;
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StackMonitoringDiscoveryJob resource.
 */
export interface StackMonitoringDiscoveryJobArgs {
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    discoveryClient?: pulumi.Input<string>;
    discoveryDetails: pulumi.Input<inputs.StackMonitoringDiscoveryJobDiscoveryDetails>;
    discoveryType?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    shouldPropagateTagsToDiscoveredResources?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.StackMonitoringDiscoveryJobTimeouts>;
}
