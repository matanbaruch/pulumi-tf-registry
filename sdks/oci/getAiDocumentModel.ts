// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAiDocumentModel(args: GetAiDocumentModelArgs, opts?: pulumi.InvokeOptions): Promise<GetAiDocumentModelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getAiDocumentModel:getAiDocumentModel", {
        "modelId": args.modelId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAiDocumentModel.
 */
export interface GetAiDocumentModelArgs {
    modelId: string;
}

/**
 * A collection of values returned by getAiDocumentModel.
 */
export interface GetAiDocumentModelResult {
    readonly compartmentId: string;
    readonly componentModels: outputs.GetAiDocumentModelComponentModel[];
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isComposedModel: boolean;
    readonly isQuickMode: boolean;
    readonly labels: string[];
    readonly lifecycleDetails: string;
    readonly maxTrainingTimeInHours: number;
    readonly metrics: outputs.GetAiDocumentModelMetric[];
    readonly modelId: string;
    readonly modelType: string;
    readonly modelVersion: string;
    readonly projectId: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly tenancyId: string;
    readonly testingDatasets: outputs.GetAiDocumentModelTestingDataset[];
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly trainedTimeInHours: number;
    readonly trainingDatasets: outputs.GetAiDocumentModelTrainingDataset[];
    readonly validationDatasets: outputs.GetAiDocumentModelValidationDataset[];
}
export function getAiDocumentModelOutput(args: GetAiDocumentModelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAiDocumentModelResult> {
    return pulumi.output(args).apply((a: any) => getAiDocumentModel(a, opts))
}

/**
 * A collection of arguments for invoking getAiDocumentModel.
 */
export interface GetAiDocumentModelOutputArgs {
    modelId: pulumi.Input<string>;
}
