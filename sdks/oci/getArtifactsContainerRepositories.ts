// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getArtifactsContainerRepositories(args: GetArtifactsContainerRepositoriesArgs, opts?: pulumi.InvokeOptions): Promise<GetArtifactsContainerRepositoriesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getArtifactsContainerRepositories:getArtifactsContainerRepositories", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "isPublic": args.isPublic,
        "repositoryId": args.repositoryId,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getArtifactsContainerRepositories.
 */
export interface GetArtifactsContainerRepositoriesArgs {
    compartmentId: string;
    compartmentIdInSubtree?: boolean;
    displayName?: string;
    filters?: inputs.GetArtifactsContainerRepositoriesFilter[];
    id?: string;
    isPublic?: boolean;
    repositoryId?: string;
    state?: string;
}

/**
 * A collection of values returned by getArtifactsContainerRepositories.
 */
export interface GetArtifactsContainerRepositoriesResult {
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly containerRepositoryCollections: outputs.GetArtifactsContainerRepositoriesContainerRepositoryCollection[];
    readonly displayName?: string;
    readonly filters?: outputs.GetArtifactsContainerRepositoriesFilter[];
    readonly id: string;
    readonly isPublic?: boolean;
    readonly repositoryId?: string;
    readonly state?: string;
}
export function getArtifactsContainerRepositoriesOutput(args: GetArtifactsContainerRepositoriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetArtifactsContainerRepositoriesResult> {
    return pulumi.output(args).apply((a: any) => getArtifactsContainerRepositories(a, opts))
}

/**
 * A collection of arguments for invoking getArtifactsContainerRepositories.
 */
export interface GetArtifactsContainerRepositoriesOutputArgs {
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetArtifactsContainerRepositoriesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    isPublic?: pulumi.Input<boolean>;
    repositoryId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
