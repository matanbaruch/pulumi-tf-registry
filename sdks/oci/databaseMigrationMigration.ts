// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatabaseMigrationMigration extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseMigrationMigration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseMigrationMigrationState, opts?: pulumi.CustomResourceOptions): DatabaseMigrationMigration {
        return new DatabaseMigrationMigration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/databaseMigrationMigration:DatabaseMigrationMigration';

    /**
     * Returns true if the given object is an instance of DatabaseMigrationMigration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseMigrationMigration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseMigrationMigration.__pulumiType;
    }

    public readonly advancedParameters!: pulumi.Output<outputs.DatabaseMigrationMigrationAdvancedParameter[] | undefined>;
    public readonly advisorSettings!: pulumi.Output<outputs.DatabaseMigrationMigrationAdvisorSettings | undefined>;
    public readonly bulkIncludeExcludeData!: pulumi.Output<string>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly dataTransferMediumDetails!: pulumi.Output<outputs.DatabaseMigrationMigrationDataTransferMediumDetails | undefined>;
    public readonly databaseCombination!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly excludeObjects!: pulumi.Output<outputs.DatabaseMigrationMigrationExcludeObject[] | undefined>;
    public /*out*/ readonly executingJobId!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly ggsDetails!: pulumi.Output<outputs.DatabaseMigrationMigrationGgsDetails | undefined>;
    public readonly hubDetails!: pulumi.Output<outputs.DatabaseMigrationMigrationHubDetails | undefined>;
    public readonly includeObjects!: pulumi.Output<outputs.DatabaseMigrationMigrationIncludeObject[] | undefined>;
    public readonly initialLoadSettings!: pulumi.Output<outputs.DatabaseMigrationMigrationInitialLoadSettings | undefined>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly sourceContainerDatabaseConnectionId!: pulumi.Output<string>;
    public readonly sourceDatabaseConnectionId!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public readonly targetDatabaseConnectionId!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeLastMigration!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DatabaseMigrationMigrationTimeouts | undefined>;
    public readonly type!: pulumi.Output<string>;
    public /*out*/ readonly waitAfter!: pulumi.Output<string>;

    /**
     * Create a DatabaseMigrationMigration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseMigrationMigrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseMigrationMigrationArgs | DatabaseMigrationMigrationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseMigrationMigrationState | undefined;
            resourceInputs["advancedParameters"] = state ? state.advancedParameters : undefined;
            resourceInputs["advisorSettings"] = state ? state.advisorSettings : undefined;
            resourceInputs["bulkIncludeExcludeData"] = state ? state.bulkIncludeExcludeData : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["dataTransferMediumDetails"] = state ? state.dataTransferMediumDetails : undefined;
            resourceInputs["databaseCombination"] = state ? state.databaseCombination : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["excludeObjects"] = state ? state.excludeObjects : undefined;
            resourceInputs["executingJobId"] = state ? state.executingJobId : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["ggsDetails"] = state ? state.ggsDetails : undefined;
            resourceInputs["hubDetails"] = state ? state.hubDetails : undefined;
            resourceInputs["includeObjects"] = state ? state.includeObjects : undefined;
            resourceInputs["initialLoadSettings"] = state ? state.initialLoadSettings : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["sourceContainerDatabaseConnectionId"] = state ? state.sourceContainerDatabaseConnectionId : undefined;
            resourceInputs["sourceDatabaseConnectionId"] = state ? state.sourceDatabaseConnectionId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["targetDatabaseConnectionId"] = state ? state.targetDatabaseConnectionId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeLastMigration"] = state ? state.timeLastMigration : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["waitAfter"] = state ? state.waitAfter : undefined;
        } else {
            const args = argsOrState as DatabaseMigrationMigrationArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.databaseCombination === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseCombination'");
            }
            if ((!args || args.sourceDatabaseConnectionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceDatabaseConnectionId'");
            }
            if ((!args || args.targetDatabaseConnectionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetDatabaseConnectionId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["advancedParameters"] = args ? args.advancedParameters : undefined;
            resourceInputs["advisorSettings"] = args ? args.advisorSettings : undefined;
            resourceInputs["bulkIncludeExcludeData"] = args ? args.bulkIncludeExcludeData : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["dataTransferMediumDetails"] = args ? args.dataTransferMediumDetails : undefined;
            resourceInputs["databaseCombination"] = args ? args.databaseCombination : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["excludeObjects"] = args ? args.excludeObjects : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["ggsDetails"] = args ? args.ggsDetails : undefined;
            resourceInputs["hubDetails"] = args ? args.hubDetails : undefined;
            resourceInputs["includeObjects"] = args ? args.includeObjects : undefined;
            resourceInputs["initialLoadSettings"] = args ? args.initialLoadSettings : undefined;
            resourceInputs["sourceContainerDatabaseConnectionId"] = args ? args.sourceContainerDatabaseConnectionId : undefined;
            resourceInputs["sourceDatabaseConnectionId"] = args ? args.sourceDatabaseConnectionId : undefined;
            resourceInputs["targetDatabaseConnectionId"] = args ? args.targetDatabaseConnectionId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["executingJobId"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeLastMigration"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["waitAfter"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseMigrationMigration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatabaseMigrationMigration resources.
 */
export interface DatabaseMigrationMigrationState {
    advancedParameters?: pulumi.Input<pulumi.Input<inputs.DatabaseMigrationMigrationAdvancedParameter>[]>;
    advisorSettings?: pulumi.Input<inputs.DatabaseMigrationMigrationAdvisorSettings>;
    bulkIncludeExcludeData?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    dataTransferMediumDetails?: pulumi.Input<inputs.DatabaseMigrationMigrationDataTransferMediumDetails>;
    databaseCombination?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    excludeObjects?: pulumi.Input<pulumi.Input<inputs.DatabaseMigrationMigrationExcludeObject>[]>;
    executingJobId?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ggsDetails?: pulumi.Input<inputs.DatabaseMigrationMigrationGgsDetails>;
    hubDetails?: pulumi.Input<inputs.DatabaseMigrationMigrationHubDetails>;
    includeObjects?: pulumi.Input<pulumi.Input<inputs.DatabaseMigrationMigrationIncludeObject>[]>;
    initialLoadSettings?: pulumi.Input<inputs.DatabaseMigrationMigrationInitialLoadSettings>;
    lifecycleDetails?: pulumi.Input<string>;
    sourceContainerDatabaseConnectionId?: pulumi.Input<string>;
    sourceDatabaseConnectionId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetDatabaseConnectionId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeLastMigration?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatabaseMigrationMigrationTimeouts>;
    type?: pulumi.Input<string>;
    waitAfter?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatabaseMigrationMigration resource.
 */
export interface DatabaseMigrationMigrationArgs {
    advancedParameters?: pulumi.Input<pulumi.Input<inputs.DatabaseMigrationMigrationAdvancedParameter>[]>;
    advisorSettings?: pulumi.Input<inputs.DatabaseMigrationMigrationAdvisorSettings>;
    bulkIncludeExcludeData?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    dataTransferMediumDetails?: pulumi.Input<inputs.DatabaseMigrationMigrationDataTransferMediumDetails>;
    databaseCombination: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    excludeObjects?: pulumi.Input<pulumi.Input<inputs.DatabaseMigrationMigrationExcludeObject>[]>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ggsDetails?: pulumi.Input<inputs.DatabaseMigrationMigrationGgsDetails>;
    hubDetails?: pulumi.Input<inputs.DatabaseMigrationMigrationHubDetails>;
    includeObjects?: pulumi.Input<pulumi.Input<inputs.DatabaseMigrationMigrationIncludeObject>[]>;
    initialLoadSettings?: pulumi.Input<inputs.DatabaseMigrationMigrationInitialLoadSettings>;
    sourceContainerDatabaseConnectionId?: pulumi.Input<string>;
    sourceDatabaseConnectionId: pulumi.Input<string>;
    targetDatabaseConnectionId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatabaseMigrationMigrationTimeouts>;
    type: pulumi.Input<string>;
}
