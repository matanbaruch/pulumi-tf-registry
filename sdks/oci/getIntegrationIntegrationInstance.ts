// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIntegrationIntegrationInstance(args: GetIntegrationIntegrationInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetIntegrationIntegrationInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIntegrationIntegrationInstance:getIntegrationIntegrationInstance", {
        "integrationInstanceId": args.integrationInstanceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIntegrationIntegrationInstance.
 */
export interface GetIntegrationIntegrationInstanceArgs {
    integrationInstanceId: string;
}

/**
 * A collection of values returned by getIntegrationIntegrationInstance.
 */
export interface GetIntegrationIntegrationInstanceResult {
    readonly alternateCustomEndpoints: outputs.GetIntegrationIntegrationInstanceAlternateCustomEndpoint[];
    readonly attachments: outputs.GetIntegrationIntegrationInstanceAttachment[];
    readonly compartmentId: string;
    readonly consumptionModel: string;
    readonly customEndpoints: outputs.GetIntegrationIntegrationInstanceCustomEndpoint[];
    readonly dataRetentionPeriod: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly domainId: string;
    readonly enableProcessAutomationTrigger: number;
    readonly extendDataRetentionTrigger: number;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly idcsAt: string;
    readonly idcsInfos: outputs.GetIntegrationIntegrationInstanceIdcsInfo[];
    readonly instanceUrl: string;
    readonly integrationInstanceId: string;
    readonly integrationInstanceType: string;
    readonly isByol: boolean;
    readonly isFileServerEnabled: boolean;
    readonly isVisualBuilderEnabled: boolean;
    readonly messagePacks: number;
    readonly networkEndpointDetails: outputs.GetIntegrationIntegrationInstanceNetworkEndpointDetail[];
    readonly privateEndpointOutboundConnections: outputs.GetIntegrationIntegrationInstancePrivateEndpointOutboundConnection[];
    readonly shape: string;
    readonly state: string;
    readonly stateMessage: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getIntegrationIntegrationInstanceOutput(args: GetIntegrationIntegrationInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIntegrationIntegrationInstanceResult> {
    return pulumi.output(args).apply((a: any) => getIntegrationIntegrationInstance(a, opts))
}

/**
 * A collection of arguments for invoking getIntegrationIntegrationInstance.
 */
export interface GetIntegrationIntegrationInstanceOutputArgs {
    integrationInstanceId: pulumi.Input<string>;
}
