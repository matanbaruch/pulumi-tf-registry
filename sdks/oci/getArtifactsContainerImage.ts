// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getArtifactsContainerImage(args: GetArtifactsContainerImageArgs, opts?: pulumi.InvokeOptions): Promise<GetArtifactsContainerImageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getArtifactsContainerImage:getArtifactsContainerImage", {
        "id": args.id,
        "imageId": args.imageId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getArtifactsContainerImage.
 */
export interface GetArtifactsContainerImageArgs {
    id?: string;
    imageId: string;
}

/**
 * A collection of values returned by getArtifactsContainerImage.
 */
export interface GetArtifactsContainerImageResult {
    readonly compartmentId: string;
    readonly createdBy: string;
    readonly definedTags: {[key: string]: string};
    readonly digest: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly imageId: string;
    readonly layers: outputs.GetArtifactsContainerImageLayer[];
    readonly layersSizeInBytes: string;
    readonly manifestSizeInBytes: number;
    readonly pullCount: string;
    readonly repositoryId: string;
    readonly repositoryName: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeLastPulled: string;
    readonly version: string;
    readonly versions: outputs.GetArtifactsContainerImageVersion[];
}
export function getArtifactsContainerImageOutput(args: GetArtifactsContainerImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetArtifactsContainerImageResult> {
    return pulumi.output(args).apply((a: any) => getArtifactsContainerImage(a, opts))
}

/**
 * A collection of arguments for invoking getArtifactsContainerImage.
 */
export interface GetArtifactsContainerImageOutputArgs {
    id?: pulumi.Input<string>;
    imageId: pulumi.Input<string>;
}
