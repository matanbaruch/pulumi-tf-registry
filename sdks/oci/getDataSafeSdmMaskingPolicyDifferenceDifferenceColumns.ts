// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeSdmMaskingPolicyDifferenceDifferenceColumns(args: GetDataSafeSdmMaskingPolicyDifferenceDifferenceColumnsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeSdmMaskingPolicyDifferenceDifferenceColumnsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeSdmMaskingPolicyDifferenceDifferenceColumns:getDataSafeSdmMaskingPolicyDifferenceDifferenceColumns", {
        "columnNames": args.columnNames,
        "differenceType": args.differenceType,
        "filters": args.filters,
        "id": args.id,
        "objects": args.objects,
        "plannedAction": args.plannedAction,
        "schemaNames": args.schemaNames,
        "sdmMaskingPolicyDifferenceId": args.sdmMaskingPolicyDifferenceId,
        "syncStatus": args.syncStatus,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeSdmMaskingPolicyDifferenceDifferenceColumns.
 */
export interface GetDataSafeSdmMaskingPolicyDifferenceDifferenceColumnsArgs {
    columnNames?: string[];
    differenceType?: string;
    filters?: inputs.GetDataSafeSdmMaskingPolicyDifferenceDifferenceColumnsFilter[];
    id?: string;
    objects?: string[];
    plannedAction?: string;
    schemaNames?: string[];
    sdmMaskingPolicyDifferenceId: string;
    syncStatus?: string;
}

/**
 * A collection of values returned by getDataSafeSdmMaskingPolicyDifferenceDifferenceColumns.
 */
export interface GetDataSafeSdmMaskingPolicyDifferenceDifferenceColumnsResult {
    readonly columnNames?: string[];
    readonly differenceType?: string;
    readonly filters?: outputs.GetDataSafeSdmMaskingPolicyDifferenceDifferenceColumnsFilter[];
    readonly id: string;
    readonly objects?: string[];
    readonly plannedAction?: string;
    readonly schemaNames?: string[];
    readonly sdmMaskingPolicyDifferenceColumnCollections: outputs.GetDataSafeSdmMaskingPolicyDifferenceDifferenceColumnsSdmMaskingPolicyDifferenceColumnCollection[];
    readonly sdmMaskingPolicyDifferenceId: string;
    readonly syncStatus?: string;
}
export function getDataSafeSdmMaskingPolicyDifferenceDifferenceColumnsOutput(args: GetDataSafeSdmMaskingPolicyDifferenceDifferenceColumnsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeSdmMaskingPolicyDifferenceDifferenceColumnsResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeSdmMaskingPolicyDifferenceDifferenceColumns(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeSdmMaskingPolicyDifferenceDifferenceColumns.
 */
export interface GetDataSafeSdmMaskingPolicyDifferenceDifferenceColumnsOutputArgs {
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    differenceType?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataSafeSdmMaskingPolicyDifferenceDifferenceColumnsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    objects?: pulumi.Input<pulumi.Input<string>[]>;
    plannedAction?: pulumi.Input<string>;
    schemaNames?: pulumi.Input<pulumi.Input<string>[]>;
    sdmMaskingPolicyDifferenceId: pulumi.Input<string>;
    syncStatus?: pulumi.Input<string>;
}
