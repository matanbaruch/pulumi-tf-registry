// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getContainerengineClusterOption(args: GetContainerengineClusterOptionArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerengineClusterOptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getContainerengineClusterOption:getContainerengineClusterOption", {
        "clusterOptionId": args.clusterOptionId,
        "compartmentId": args.compartmentId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContainerengineClusterOption.
 */
export interface GetContainerengineClusterOptionArgs {
    clusterOptionId: string;
    compartmentId?: string;
    id?: string;
}

/**
 * A collection of values returned by getContainerengineClusterOption.
 */
export interface GetContainerengineClusterOptionResult {
    readonly clusterOptionId: string;
    readonly clusterPodNetworkOptions: outputs.GetContainerengineClusterOptionClusterPodNetworkOption[];
    readonly compartmentId?: string;
    readonly id: string;
    readonly kubernetesVersions: string[];
}
export function getContainerengineClusterOptionOutput(args: GetContainerengineClusterOptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerengineClusterOptionResult> {
    return pulumi.output(args).apply((a: any) => getContainerengineClusterOption(a, opts))
}

/**
 * A collection of arguments for invoking getContainerengineClusterOption.
 */
export interface GetContainerengineClusterOptionOutputArgs {
    clusterOptionId: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
