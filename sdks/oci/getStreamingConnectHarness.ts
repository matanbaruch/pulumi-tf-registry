// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStreamingConnectHarness(args: GetStreamingConnectHarnessArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamingConnectHarnessResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getStreamingConnectHarness:getStreamingConnectHarness", {
        "connectHarnessId": args.connectHarnessId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStreamingConnectHarness.
 */
export interface GetStreamingConnectHarnessArgs {
    connectHarnessId: string;
}

/**
 * A collection of values returned by getStreamingConnectHarness.
 */
export interface GetStreamingConnectHarnessResult {
    readonly compartmentId: string;
    readonly connectHarnessId: string;
    readonly definedTags: {[key: string]: string};
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleStateDetails: string;
    readonly name: string;
    readonly state: string;
    readonly timeCreated: string;
}
export function getStreamingConnectHarnessOutput(args: GetStreamingConnectHarnessOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStreamingConnectHarnessResult> {
    return pulumi.output(args).apply((a: any) => getStreamingConnectHarness(a, opts))
}

/**
 * A collection of arguments for invoking getStreamingConnectHarness.
 */
export interface GetStreamingConnectHarnessOutputArgs {
    connectHarnessId: pulumi.Input<string>;
}
