// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDevopsProjectRepositorySetting(args: GetDevopsProjectRepositorySettingArgs, opts?: pulumi.InvokeOptions): Promise<GetDevopsProjectRepositorySettingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDevopsProjectRepositorySetting:getDevopsProjectRepositorySetting", {
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDevopsProjectRepositorySetting.
 */
export interface GetDevopsProjectRepositorySettingArgs {
    projectId: string;
}

/**
 * A collection of values returned by getDevopsProjectRepositorySetting.
 */
export interface GetDevopsProjectRepositorySettingResult {
    readonly approvalRules: outputs.GetDevopsProjectRepositorySettingApprovalRule[];
    readonly id: string;
    readonly mergeSettings: outputs.GetDevopsProjectRepositorySettingMergeSetting[];
    readonly projectId: string;
}
export function getDevopsProjectRepositorySettingOutput(args: GetDevopsProjectRepositorySettingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDevopsProjectRepositorySettingResult> {
    return pulumi.output(args).apply((a: any) => getDevopsProjectRepositorySetting(a, opts))
}

/**
 * A collection of arguments for invoking getDevopsProjectRepositorySetting.
 */
export interface GetDevopsProjectRepositorySettingOutputArgs {
    projectId: pulumi.Input<string>;
}
