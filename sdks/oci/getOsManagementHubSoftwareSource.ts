// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsManagementHubSoftwareSource(args: GetOsManagementHubSoftwareSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetOsManagementHubSoftwareSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsManagementHubSoftwareSource:getOsManagementHubSoftwareSource", {
        "softwareSourceId": args.softwareSourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsManagementHubSoftwareSource.
 */
export interface GetOsManagementHubSoftwareSourceArgs {
    softwareSourceId: string;
}

/**
 * A collection of values returned by getOsManagementHubSoftwareSource.
 */
export interface GetOsManagementHubSoftwareSourceResult {
    readonly archType: string;
    readonly availability: string;
    readonly availabilityAtOci: string;
    readonly checksumType: string;
    readonly compartmentId: string;
    readonly customSoftwareSourceFilters: outputs.GetOsManagementHubSoftwareSourceCustomSoftwareSourceFilter[];
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly gpgKeyFingerprint: string;
    readonly gpgKeyId: string;
    readonly gpgKeyUrl: string;
    readonly id: string;
    readonly isAutoResolveDependencies: boolean;
    readonly isAutomaticallyUpdated: boolean;
    readonly isCreatedFromPackageList: boolean;
    readonly isLatestContentOnly: boolean;
    readonly isMandatoryForAutonomousLinux: boolean;
    readonly originSoftwareSourceId: string;
    readonly osFamily: string;
    readonly packageCount: string;
    readonly packages: string[];
    readonly repoId: string;
    readonly size: number;
    readonly softwareSourceId: string;
    readonly softwareSourceType: string;
    readonly softwareSourceVersion: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly url: string;
    readonly vendorName: string;
    readonly vendorSoftwareSources: outputs.GetOsManagementHubSoftwareSourceVendorSoftwareSource[];
}
export function getOsManagementHubSoftwareSourceOutput(args: GetOsManagementHubSoftwareSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsManagementHubSoftwareSourceResult> {
    return pulumi.output(args).apply((a: any) => getOsManagementHubSoftwareSource(a, opts))
}

/**
 * A collection of arguments for invoking getOsManagementHubSoftwareSource.
 */
export interface GetOsManagementHubSoftwareSourceOutputArgs {
    softwareSourceId: pulumi.Input<string>;
}
