// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRecoveryProtectedDatabase(args: GetRecoveryProtectedDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetRecoveryProtectedDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getRecoveryProtectedDatabase:getRecoveryProtectedDatabase", {
        "protectedDatabaseId": args.protectedDatabaseId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRecoveryProtectedDatabase.
 */
export interface GetRecoveryProtectedDatabaseArgs {
    protectedDatabaseId: string;
}

/**
 * A collection of values returned by getRecoveryProtectedDatabase.
 */
export interface GetRecoveryProtectedDatabaseResult {
    readonly compartmentId: string;
    readonly databaseId: string;
    readonly databaseSize: string;
    readonly dbUniqueName: string;
    readonly definedTags: {[key: string]: string};
    readonly deletionSchedule: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly health: string;
    readonly healthDetails: string;
    readonly id: string;
    readonly isReadOnlyResource: boolean;
    readonly isRedoLogsShipped: boolean;
    readonly lifecycleDetails: string;
    readonly metrics: outputs.GetRecoveryProtectedDatabaseMetric[];
    readonly password: string;
    readonly policyLockedDateTime: string;
    readonly protectedDatabaseId: string;
    readonly protectionPolicyId: string;
    readonly recoveryServiceSubnets: outputs.GetRecoveryProtectedDatabaseRecoveryServiceSubnet[];
    readonly state: string;
    readonly subscriptionId: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly vpcUserName: string;
}
export function getRecoveryProtectedDatabaseOutput(args: GetRecoveryProtectedDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecoveryProtectedDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getRecoveryProtectedDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getRecoveryProtectedDatabase.
 */
export interface GetRecoveryProtectedDatabaseOutputArgs {
    protectedDatabaseId: pulumi.Input<string>;
}
