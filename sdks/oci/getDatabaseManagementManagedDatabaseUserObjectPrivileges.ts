// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementManagedDatabaseUserObjectPrivileges(args: GetDatabaseManagementManagedDatabaseUserObjectPrivilegesArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementManagedDatabaseUserObjectPrivilegesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementManagedDatabaseUserObjectPrivileges:getDatabaseManagementManagedDatabaseUserObjectPrivileges", {
        "filters": args.filters,
        "id": args.id,
        "managedDatabaseId": args.managedDatabaseId,
        "name": args.name,
        "opcNamedCredentialId": args.opcNamedCredentialId,
        "userName": args.userName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedDatabaseUserObjectPrivileges.
 */
export interface GetDatabaseManagementManagedDatabaseUserObjectPrivilegesArgs {
    filters?: inputs.GetDatabaseManagementManagedDatabaseUserObjectPrivilegesFilter[];
    id?: string;
    managedDatabaseId: string;
    name?: string;
    opcNamedCredentialId?: string;
    userName: string;
}

/**
 * A collection of values returned by getDatabaseManagementManagedDatabaseUserObjectPrivileges.
 */
export interface GetDatabaseManagementManagedDatabaseUserObjectPrivilegesResult {
    readonly filters?: outputs.GetDatabaseManagementManagedDatabaseUserObjectPrivilegesFilter[];
    readonly id: string;
    readonly managedDatabaseId: string;
    readonly name?: string;
    readonly objectPrivilegeCollections: outputs.GetDatabaseManagementManagedDatabaseUserObjectPrivilegesObjectPrivilegeCollection[];
    readonly opcNamedCredentialId?: string;
    readonly userName: string;
}
export function getDatabaseManagementManagedDatabaseUserObjectPrivilegesOutput(args: GetDatabaseManagementManagedDatabaseUserObjectPrivilegesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementManagedDatabaseUserObjectPrivilegesResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementManagedDatabaseUserObjectPrivileges(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedDatabaseUserObjectPrivileges.
 */
export interface GetDatabaseManagementManagedDatabaseUserObjectPrivilegesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseManagementManagedDatabaseUserObjectPrivilegesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    managedDatabaseId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    opcNamedCredentialId?: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}
