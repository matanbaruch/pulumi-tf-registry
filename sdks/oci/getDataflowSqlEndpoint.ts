// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataflowSqlEndpoint(args: GetDataflowSqlEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetDataflowSqlEndpointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataflowSqlEndpoint:getDataflowSqlEndpoint", {
        "sqlEndpointId": args.sqlEndpointId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataflowSqlEndpoint.
 */
export interface GetDataflowSqlEndpointArgs {
    sqlEndpointId: string;
}

/**
 * A collection of values returned by getDataflowSqlEndpoint.
 */
export interface GetDataflowSqlEndpointResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly driverShape: string;
    readonly driverShapeConfigs: outputs.GetDataflowSqlEndpointDriverShapeConfig[];
    readonly executorShape: string;
    readonly executorShapeConfigs: outputs.GetDataflowSqlEndpointExecutorShapeConfig[];
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly jdbcEndpointUrl: string;
    readonly lakeId: string;
    readonly lastAcceptedRequestToken: string;
    readonly maxExecutorCount: number;
    readonly metastoreId: string;
    readonly minExecutorCount: number;
    readonly networkConfigurations: outputs.GetDataflowSqlEndpointNetworkConfiguration[];
    readonly sparkAdvancedConfigurations: {[key: string]: string};
    readonly sqlEndpointId: string;
    readonly sqlEndpointVersion: string;
    readonly state: string;
    readonly stateMessage: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly warehouseBucketUri: string;
}
export function getDataflowSqlEndpointOutput(args: GetDataflowSqlEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataflowSqlEndpointResult> {
    return pulumi.output(args).apply((a: any) => getDataflowSqlEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getDataflowSqlEndpoint.
 */
export interface GetDataflowSqlEndpointOutputArgs {
    sqlEndpointId: pulumi.Input<string>;
}
