// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudGuardAdhocQueries(args: GetCloudGuardAdhocQueriesArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudGuardAdhocQueriesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCloudGuardAdhocQueries:getCloudGuardAdhocQueries", {
        "accessLevel": args.accessLevel,
        "adhocQueryStatus": args.adhocQueryStatus,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "id": args.id,
        "timeEndedFilterQueryParam": args.timeEndedFilterQueryParam,
        "timeStartedFilterQueryParam": args.timeStartedFilterQueryParam,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudGuardAdhocQueries.
 */
export interface GetCloudGuardAdhocQueriesArgs {
    accessLevel?: string;
    adhocQueryStatus?: string;
    compartmentId: string;
    compartmentIdInSubtree?: boolean;
    filters?: inputs.GetCloudGuardAdhocQueriesFilter[];
    id?: string;
    timeEndedFilterQueryParam?: string;
    timeStartedFilterQueryParam?: string;
}

/**
 * A collection of values returned by getCloudGuardAdhocQueries.
 */
export interface GetCloudGuardAdhocQueriesResult {
    readonly accessLevel?: string;
    readonly adhocQueryCollections: outputs.GetCloudGuardAdhocQueriesAdhocQueryCollection[];
    readonly adhocQueryStatus?: string;
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.GetCloudGuardAdhocQueriesFilter[];
    readonly id: string;
    readonly timeEndedFilterQueryParam?: string;
    readonly timeStartedFilterQueryParam?: string;
}
export function getCloudGuardAdhocQueriesOutput(args: GetCloudGuardAdhocQueriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudGuardAdhocQueriesResult> {
    return pulumi.output(args).apply((a: any) => getCloudGuardAdhocQueries(a, opts))
}

/**
 * A collection of arguments for invoking getCloudGuardAdhocQueries.
 */
export interface GetCloudGuardAdhocQueriesOutputArgs {
    accessLevel?: pulumi.Input<string>;
    adhocQueryStatus?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetCloudGuardAdhocQueriesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    timeEndedFilterQueryParam?: pulumi.Input<string>;
    timeStartedFilterQueryParam?: pulumi.Input<string>;
}
