// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRecoveryProtectedDatabaseFetchConfiguration(args: GetRecoveryProtectedDatabaseFetchConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetRecoveryProtectedDatabaseFetchConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getRecoveryProtectedDatabaseFetchConfiguration:getRecoveryProtectedDatabaseFetchConfiguration", {
        "base64EncodeContent": args.base64EncodeContent,
        "configurationType": args.configurationType,
        "id": args.id,
        "protectedDatabaseId": args.protectedDatabaseId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRecoveryProtectedDatabaseFetchConfiguration.
 */
export interface GetRecoveryProtectedDatabaseFetchConfigurationArgs {
    base64EncodeContent?: boolean;
    configurationType?: string;
    id?: string;
    protectedDatabaseId: string;
}

/**
 * A collection of values returned by getRecoveryProtectedDatabaseFetchConfiguration.
 */
export interface GetRecoveryProtectedDatabaseFetchConfigurationResult {
    readonly base64EncodeContent?: boolean;
    readonly configurationType?: string;
    readonly content: string;
    readonly id: string;
    readonly protectedDatabaseId: string;
}
export function getRecoveryProtectedDatabaseFetchConfigurationOutput(args: GetRecoveryProtectedDatabaseFetchConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecoveryProtectedDatabaseFetchConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getRecoveryProtectedDatabaseFetchConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getRecoveryProtectedDatabaseFetchConfiguration.
 */
export interface GetRecoveryProtectedDatabaseFetchConfigurationOutputArgs {
    base64EncodeContent?: pulumi.Input<boolean>;
    configurationType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    protectedDatabaseId: pulumi.Input<string>;
}
