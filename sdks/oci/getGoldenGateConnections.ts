// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGoldenGateConnections(args: GetGoldenGateConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetGoldenGateConnectionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getGoldenGateConnections:getGoldenGateConnections", {
        "assignableDeploymentId": args.assignableDeploymentId,
        "assignableDeploymentType": args.assignableDeploymentType,
        "assignedDeploymentId": args.assignedDeploymentId,
        "compartmentId": args.compartmentId,
        "connectionTypes": args.connectionTypes,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
        "technologyTypes": args.technologyTypes,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGoldenGateConnections.
 */
export interface GetGoldenGateConnectionsArgs {
    assignableDeploymentId?: string;
    assignableDeploymentType?: string;
    assignedDeploymentId?: string;
    compartmentId: string;
    connectionTypes?: string[];
    displayName?: string;
    filters?: inputs.GetGoldenGateConnectionsFilter[];
    id?: string;
    state?: string;
    technologyTypes?: string[];
}

/**
 * A collection of values returned by getGoldenGateConnections.
 */
export interface GetGoldenGateConnectionsResult {
    readonly assignableDeploymentId?: string;
    readonly assignableDeploymentType?: string;
    readonly assignedDeploymentId?: string;
    readonly compartmentId: string;
    readonly connectionCollections: outputs.GetGoldenGateConnectionsConnectionCollection[];
    readonly connectionTypes?: string[];
    readonly displayName?: string;
    readonly filters?: outputs.GetGoldenGateConnectionsFilter[];
    readonly id: string;
    readonly state?: string;
    readonly technologyTypes?: string[];
}
export function getGoldenGateConnectionsOutput(args: GetGoldenGateConnectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGoldenGateConnectionsResult> {
    return pulumi.output(args).apply((a: any) => getGoldenGateConnections(a, opts))
}

/**
 * A collection of arguments for invoking getGoldenGateConnections.
 */
export interface GetGoldenGateConnectionsOutputArgs {
    assignableDeploymentId?: pulumi.Input<string>;
    assignableDeploymentType?: pulumi.Input<string>;
    assignedDeploymentId?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    connectionTypes?: pulumi.Input<pulumi.Input<string>[]>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetGoldenGateConnectionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    technologyTypes?: pulumi.Input<pulumi.Input<string>[]>;
}
