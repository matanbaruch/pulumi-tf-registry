// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseAutonomousContainerPatches(args: GetDatabaseAutonomousContainerPatchesArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseAutonomousContainerPatchesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseAutonomousContainerPatches:getDatabaseAutonomousContainerPatches", {
        "autonomousContainerDatabaseId": args.autonomousContainerDatabaseId,
        "autonomousPatchType": args.autonomousPatchType,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseAutonomousContainerPatches.
 */
export interface GetDatabaseAutonomousContainerPatchesArgs {
    autonomousContainerDatabaseId: string;
    autonomousPatchType?: string;
    compartmentId: string;
    filters?: inputs.GetDatabaseAutonomousContainerPatchesFilter[];
    id?: string;
}

/**
 * A collection of values returned by getDatabaseAutonomousContainerPatches.
 */
export interface GetDatabaseAutonomousContainerPatchesResult {
    readonly autonomousContainerDatabaseId: string;
    readonly autonomousPatchType?: string;
    readonly autonomousPatches: outputs.GetDatabaseAutonomousContainerPatchesAutonomousPatch[];
    readonly compartmentId: string;
    readonly filters?: outputs.GetDatabaseAutonomousContainerPatchesFilter[];
    readonly id: string;
}
export function getDatabaseAutonomousContainerPatchesOutput(args: GetDatabaseAutonomousContainerPatchesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseAutonomousContainerPatchesResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseAutonomousContainerPatches(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseAutonomousContainerPatches.
 */
export interface GetDatabaseAutonomousContainerPatchesOutputArgs {
    autonomousContainerDatabaseId: pulumi.Input<string>;
    autonomousPatchType?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseAutonomousContainerPatchesFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
