// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetworkFirewallNetworkFirewallPolicyServiceList(args: GetNetworkFirewallNetworkFirewallPolicyServiceListArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkFirewallNetworkFirewallPolicyServiceListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getNetworkFirewallNetworkFirewallPolicyServiceList:getNetworkFirewallNetworkFirewallPolicyServiceList", {
        "name": args.name,
        "networkFirewallPolicyId": args.networkFirewallPolicyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkFirewallNetworkFirewallPolicyServiceList.
 */
export interface GetNetworkFirewallNetworkFirewallPolicyServiceListArgs {
    name: string;
    networkFirewallPolicyId: string;
}

/**
 * A collection of values returned by getNetworkFirewallNetworkFirewallPolicyServiceList.
 */
export interface GetNetworkFirewallNetworkFirewallPolicyServiceListResult {
    readonly id: string;
    readonly name: string;
    readonly networkFirewallPolicyId: string;
    readonly parentResourceId: string;
    readonly services: string[];
    readonly totalServices: number;
}
export function getNetworkFirewallNetworkFirewallPolicyServiceListOutput(args: GetNetworkFirewallNetworkFirewallPolicyServiceListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkFirewallNetworkFirewallPolicyServiceListResult> {
    return pulumi.output(args).apply((a: any) => getNetworkFirewallNetworkFirewallPolicyServiceList(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkFirewallNetworkFirewallPolicyServiceList.
 */
export interface GetNetworkFirewallNetworkFirewallPolicyServiceListOutputArgs {
    name: pulumi.Input<string>;
    networkFirewallPolicyId: pulumi.Input<string>;
}
