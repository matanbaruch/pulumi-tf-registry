// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectstorageBucket extends pulumi.CustomResource {
    /**
     * Get an existing ObjectstorageBucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectstorageBucketState, opts?: pulumi.CustomResourceOptions): ObjectstorageBucket {
        return new ObjectstorageBucket(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/objectstorageBucket:ObjectstorageBucket';

    /**
     * Returns true if the given object is an instance of ObjectstorageBucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectstorageBucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectstorageBucket.__pulumiType;
    }

    public readonly accessType!: pulumi.Output<string | undefined>;
    public /*out*/ readonly approximateCount!: pulumi.Output<string>;
    public /*out*/ readonly approximateSize!: pulumi.Output<string>;
    public readonly autoTiering!: pulumi.Output<string>;
    public /*out*/ readonly bucketId!: pulumi.Output<string>;
    public readonly compartmentId!: pulumi.Output<string>;
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly etag!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly isReadOnly!: pulumi.Output<boolean>;
    public readonly kmsKeyId!: pulumi.Output<string>;
    public readonly metadata!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly namespace!: pulumi.Output<string>;
    public readonly objectEventsEnabled!: pulumi.Output<boolean>;
    public /*out*/ readonly objectLifecyclePolicyEtag!: pulumi.Output<string>;
    public /*out*/ readonly replicationEnabled!: pulumi.Output<boolean>;
    public readonly retentionRules!: pulumi.Output<outputs.ObjectstorageBucketRetentionRule[] | undefined>;
    public readonly storageTier!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ObjectstorageBucketTimeouts | undefined>;
    public readonly versioning!: pulumi.Output<string>;

    /**
     * Create a ObjectstorageBucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectstorageBucketArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectstorageBucketArgs | ObjectstorageBucketState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectstorageBucketState | undefined;
            resourceInputs["accessType"] = state ? state.accessType : undefined;
            resourceInputs["approximateCount"] = state ? state.approximateCount : undefined;
            resourceInputs["approximateSize"] = state ? state.approximateSize : undefined;
            resourceInputs["autoTiering"] = state ? state.autoTiering : undefined;
            resourceInputs["bucketId"] = state ? state.bucketId : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isReadOnly"] = state ? state.isReadOnly : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["objectEventsEnabled"] = state ? state.objectEventsEnabled : undefined;
            resourceInputs["objectLifecyclePolicyEtag"] = state ? state.objectLifecyclePolicyEtag : undefined;
            resourceInputs["replicationEnabled"] = state ? state.replicationEnabled : undefined;
            resourceInputs["retentionRules"] = state ? state.retentionRules : undefined;
            resourceInputs["storageTier"] = state ? state.storageTier : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["versioning"] = state ? state.versioning : undefined;
        } else {
            const args = argsOrState as ObjectstorageBucketArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["accessType"] = args ? args.accessType : undefined;
            resourceInputs["autoTiering"] = args ? args.autoTiering : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["objectEventsEnabled"] = args ? args.objectEventsEnabled : undefined;
            resourceInputs["retentionRules"] = args ? args.retentionRules : undefined;
            resourceInputs["storageTier"] = args ? args.storageTier : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["versioning"] = args ? args.versioning : undefined;
            resourceInputs["approximateCount"] = undefined /*out*/;
            resourceInputs["approximateSize"] = undefined /*out*/;
            resourceInputs["bucketId"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["isReadOnly"] = undefined /*out*/;
            resourceInputs["objectLifecyclePolicyEtag"] = undefined /*out*/;
            resourceInputs["replicationEnabled"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectstorageBucket.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectstorageBucket resources.
 */
export interface ObjectstorageBucketState {
    accessType?: pulumi.Input<string>;
    approximateCount?: pulumi.Input<string>;
    approximateSize?: pulumi.Input<string>;
    autoTiering?: pulumi.Input<string>;
    bucketId?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    etag?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isReadOnly?: pulumi.Input<boolean>;
    kmsKeyId?: pulumi.Input<string>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    objectEventsEnabled?: pulumi.Input<boolean>;
    objectLifecyclePolicyEtag?: pulumi.Input<string>;
    replicationEnabled?: pulumi.Input<boolean>;
    retentionRules?: pulumi.Input<pulumi.Input<inputs.ObjectstorageBucketRetentionRule>[]>;
    storageTier?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ObjectstorageBucketTimeouts>;
    versioning?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectstorageBucket resource.
 */
export interface ObjectstorageBucketArgs {
    accessType?: pulumi.Input<string>;
    autoTiering?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    kmsKeyId?: pulumi.Input<string>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    objectEventsEnabled?: pulumi.Input<boolean>;
    retentionRules?: pulumi.Input<pulumi.Input<inputs.ObjectstorageBucketRetentionRule>[]>;
    storageTier?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ObjectstorageBucketTimeouts>;
    versioning?: pulumi.Input<string>;
}
