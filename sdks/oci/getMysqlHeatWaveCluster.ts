// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMysqlHeatWaveCluster(args: GetMysqlHeatWaveClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetMysqlHeatWaveClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMysqlHeatWaveCluster:getMysqlHeatWaveCluster", {
        "dbSystemId": args.dbSystemId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMysqlHeatWaveCluster.
 */
export interface GetMysqlHeatWaveClusterArgs {
    dbSystemId: string;
}

/**
 * A collection of values returned by getMysqlHeatWaveCluster.
 */
export interface GetMysqlHeatWaveClusterResult {
    readonly clusterNodes: outputs.GetMysqlHeatWaveClusterClusterNode[];
    readonly clusterSize: number;
    readonly dbSystemId: string;
    readonly id: string;
    readonly isLakehouseEnabled: boolean;
    readonly lifecycleDetails: string;
    readonly shapeName: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getMysqlHeatWaveClusterOutput(args: GetMysqlHeatWaveClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMysqlHeatWaveClusterResult> {
    return pulumi.output(args).apply((a: any) => getMysqlHeatWaveCluster(a, opts))
}

/**
 * A collection of arguments for invoking getMysqlHeatWaveCluster.
 */
export interface GetMysqlHeatWaveClusterOutputArgs {
    dbSystemId: pulumi.Input<string>;
}
