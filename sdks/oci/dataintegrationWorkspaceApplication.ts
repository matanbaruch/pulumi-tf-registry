// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataintegrationWorkspaceApplication extends pulumi.CustomResource {
    /**
     * Get an existing DataintegrationWorkspaceApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataintegrationWorkspaceApplicationState, opts?: pulumi.CustomResourceOptions): DataintegrationWorkspaceApplication {
        return new DataintegrationWorkspaceApplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/dataintegrationWorkspaceApplication:DataintegrationWorkspaceApplication';

    /**
     * Returns true if the given object is an instance of DataintegrationWorkspaceApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataintegrationWorkspaceApplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataintegrationWorkspaceApplication.__pulumiType;
    }

    public /*out*/ readonly applicationVersion!: pulumi.Output<number>;
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly dependentObjectMetadatas!: pulumi.Output<outputs.DataintegrationWorkspaceApplicationDependentObjectMetadata[]>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly identifier!: pulumi.Output<string>;
    public readonly key!: pulumi.Output<string>;
    public /*out*/ readonly keyMap!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly metadatas!: pulumi.Output<outputs.DataintegrationWorkspaceApplicationMetadata[]>;
    public readonly modelType!: pulumi.Output<string>;
    public readonly modelVersion!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly objectStatus!: pulumi.Output<number>;
    public /*out*/ readonly objectVersion!: pulumi.Output<number>;
    public /*out*/ readonly parentReves!: pulumi.Output<outputs.DataintegrationWorkspaceApplicationParentRef[]>;
    public /*out*/ readonly publishedObjectMetadatas!: pulumi.Output<outputs.DataintegrationWorkspaceApplicationPublishedObjectMetadata[]>;
    public readonly registryMetadata!: pulumi.Output<outputs.DataintegrationWorkspaceApplicationRegistryMetadata | undefined>;
    public readonly sourceApplicationInfo!: pulumi.Output<outputs.DataintegrationWorkspaceApplicationSourceApplicationInfo | undefined>;
    public readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timePatched!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DataintegrationWorkspaceApplicationTimeouts | undefined>;
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a DataintegrationWorkspaceApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataintegrationWorkspaceApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataintegrationWorkspaceApplicationArgs | DataintegrationWorkspaceApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataintegrationWorkspaceApplicationState | undefined;
            resourceInputs["applicationVersion"] = state ? state.applicationVersion : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["dependentObjectMetadatas"] = state ? state.dependentObjectMetadatas : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["identifier"] = state ? state.identifier : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["keyMap"] = state ? state.keyMap : undefined;
            resourceInputs["metadatas"] = state ? state.metadatas : undefined;
            resourceInputs["modelType"] = state ? state.modelType : undefined;
            resourceInputs["modelVersion"] = state ? state.modelVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectStatus"] = state ? state.objectStatus : undefined;
            resourceInputs["objectVersion"] = state ? state.objectVersion : undefined;
            resourceInputs["parentReves"] = state ? state.parentReves : undefined;
            resourceInputs["publishedObjectMetadatas"] = state ? state.publishedObjectMetadatas : undefined;
            resourceInputs["registryMetadata"] = state ? state.registryMetadata : undefined;
            resourceInputs["sourceApplicationInfo"] = state ? state.sourceApplicationInfo : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timePatched"] = state ? state.timePatched : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as DataintegrationWorkspaceApplicationArgs | undefined;
            if ((!args || args.identifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identifier'");
            }
            if ((!args || args.modelType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelType'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["identifier"] = args ? args.identifier : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["modelType"] = args ? args.modelType : undefined;
            resourceInputs["modelVersion"] = args ? args.modelVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectStatus"] = args ? args.objectStatus : undefined;
            resourceInputs["registryMetadata"] = args ? args.registryMetadata : undefined;
            resourceInputs["sourceApplicationInfo"] = args ? args.sourceApplicationInfo : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["applicationVersion"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["dependentObjectMetadatas"] = undefined /*out*/;
            resourceInputs["keyMap"] = undefined /*out*/;
            resourceInputs["metadatas"] = undefined /*out*/;
            resourceInputs["objectVersion"] = undefined /*out*/;
            resourceInputs["parentReves"] = undefined /*out*/;
            resourceInputs["publishedObjectMetadatas"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timePatched"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataintegrationWorkspaceApplication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataintegrationWorkspaceApplication resources.
 */
export interface DataintegrationWorkspaceApplicationState {
    applicationVersion?: pulumi.Input<number>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    dependentObjectMetadatas?: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationDependentObjectMetadata>[]>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    identifier?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    keyMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    metadatas?: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationMetadata>[]>;
    modelType?: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectStatus?: pulumi.Input<number>;
    objectVersion?: pulumi.Input<number>;
    parentReves?: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationParentRef>[]>;
    publishedObjectMetadatas?: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationPublishedObjectMetadata>[]>;
    registryMetadata?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationRegistryMetadata>;
    sourceApplicationInfo?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationSourceApplicationInfo>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timePatched?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationTimeouts>;
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataintegrationWorkspaceApplication resource.
 */
export interface DataintegrationWorkspaceApplicationArgs {
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    identifier: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    modelType: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectStatus?: pulumi.Input<number>;
    registryMetadata?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationRegistryMetadata>;
    sourceApplicationInfo?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationSourceApplicationInfo>;
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationTimeouts>;
    workspaceId: pulumi.Input<string>;
}
