// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseDbHomes(args: GetDatabaseDbHomesArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseDbHomesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseDbHomes:getDatabaseDbHomes", {
        "backupId": args.backupId,
        "compartmentId": args.compartmentId,
        "dbSystemId": args.dbSystemId,
        "dbVersion": args.dbVersion,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
        "vmClusterId": args.vmClusterId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseDbHomes.
 */
export interface GetDatabaseDbHomesArgs {
    backupId?: string;
    compartmentId: string;
    dbSystemId?: string;
    dbVersion?: string;
    displayName?: string;
    filters?: inputs.GetDatabaseDbHomesFilter[];
    id?: string;
    state?: string;
    vmClusterId?: string;
}

/**
 * A collection of values returned by getDatabaseDbHomes.
 */
export interface GetDatabaseDbHomesResult {
    readonly backupId?: string;
    readonly compartmentId: string;
    readonly dbHomes: outputs.GetDatabaseDbHomesDbHome[];
    readonly dbSystemId?: string;
    readonly dbVersion?: string;
    readonly displayName?: string;
    readonly filters?: outputs.GetDatabaseDbHomesFilter[];
    readonly id: string;
    readonly state?: string;
    readonly vmClusterId?: string;
}
export function getDatabaseDbHomesOutput(args: GetDatabaseDbHomesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseDbHomesResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseDbHomes(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseDbHomes.
 */
export interface GetDatabaseDbHomesOutputArgs {
    backupId?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    dbSystemId?: pulumi.Input<string>;
    dbVersion?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseDbHomesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    vmClusterId?: pulumi.Input<string>;
}
