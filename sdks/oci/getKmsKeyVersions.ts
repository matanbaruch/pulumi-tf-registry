// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKmsKeyVersions(args: GetKmsKeyVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetKmsKeyVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getKmsKeyVersions:getKmsKeyVersions", {
        "filters": args.filters,
        "id": args.id,
        "keyId": args.keyId,
        "managementEndpoint": args.managementEndpoint,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsKeyVersions.
 */
export interface GetKmsKeyVersionsArgs {
    filters?: inputs.GetKmsKeyVersionsFilter[];
    id?: string;
    keyId: string;
    managementEndpoint: string;
}

/**
 * A collection of values returned by getKmsKeyVersions.
 */
export interface GetKmsKeyVersionsResult {
    readonly filters?: outputs.GetKmsKeyVersionsFilter[];
    readonly id: string;
    readonly keyId: string;
    readonly keyVersions: outputs.GetKmsKeyVersionsKeyVersion[];
    readonly managementEndpoint: string;
}
export function getKmsKeyVersionsOutput(args: GetKmsKeyVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKmsKeyVersionsResult> {
    return pulumi.output(args).apply((a: any) => getKmsKeyVersions(a, opts))
}

/**
 * A collection of arguments for invoking getKmsKeyVersions.
 */
export interface GetKmsKeyVersionsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetKmsKeyVersionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    keyId: pulumi.Input<string>;
    managementEndpoint: pulumi.Input<string>;
}
