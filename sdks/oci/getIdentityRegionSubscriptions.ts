// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityRegionSubscriptions(args: GetIdentityRegionSubscriptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityRegionSubscriptionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityRegionSubscriptions:getIdentityRegionSubscriptions", {
        "filters": args.filters,
        "id": args.id,
        "tenancyId": args.tenancyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityRegionSubscriptions.
 */
export interface GetIdentityRegionSubscriptionsArgs {
    filters?: inputs.GetIdentityRegionSubscriptionsFilter[];
    id?: string;
    tenancyId: string;
}

/**
 * A collection of values returned by getIdentityRegionSubscriptions.
 */
export interface GetIdentityRegionSubscriptionsResult {
    readonly filters?: outputs.GetIdentityRegionSubscriptionsFilter[];
    readonly id: string;
    readonly regionSubscriptions: outputs.GetIdentityRegionSubscriptionsRegionSubscription[];
    readonly tenancyId: string;
}
export function getIdentityRegionSubscriptionsOutput(args: GetIdentityRegionSubscriptionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityRegionSubscriptionsResult> {
    return pulumi.output(args).apply((a: any) => getIdentityRegionSubscriptions(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityRegionSubscriptions.
 */
export interface GetIdentityRegionSubscriptionsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetIdentityRegionSubscriptionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    tenancyId: pulumi.Input<string>;
}
