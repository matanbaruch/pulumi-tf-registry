// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudGuardAdhocQuery(args: GetCloudGuardAdhocQueryArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudGuardAdhocQueryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCloudGuardAdhocQuery:getCloudGuardAdhocQuery", {
        "adhocQueryId": args.adhocQueryId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudGuardAdhocQuery.
 */
export interface GetCloudGuardAdhocQueryArgs {
    adhocQueryId: string;
}

/**
 * A collection of values returned by getCloudGuardAdhocQuery.
 */
export interface GetCloudGuardAdhocQueryResult {
    readonly adhocQueryDetails: outputs.GetCloudGuardAdhocQueryAdhocQueryDetail[];
    readonly adhocQueryId: string;
    readonly adhocQueryRegionalDetails: outputs.GetCloudGuardAdhocQueryAdhocQueryRegionalDetail[];
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly errorMessage: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly state: string;
    readonly status: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getCloudGuardAdhocQueryOutput(args: GetCloudGuardAdhocQueryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudGuardAdhocQueryResult> {
    return pulumi.output(args).apply((a: any) => getCloudGuardAdhocQuery(a, opts))
}

/**
 * A collection of arguments for invoking getCloudGuardAdhocQuery.
 */
export interface GetCloudGuardAdhocQueryOutputArgs {
    adhocQueryId: pulumi.Input<string>;
}
