// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFileStorageReplication(args: GetFileStorageReplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetFileStorageReplicationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getFileStorageReplication:getFileStorageReplication", {
        "replicationId": args.replicationId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFileStorageReplication.
 */
export interface GetFileStorageReplicationArgs {
    replicationId: string;
}

/**
 * A collection of values returned by getFileStorageReplication.
 */
export interface GetFileStorageReplicationResult {
    readonly availabilityDomain: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly deltaProgress: string;
    readonly deltaStatus: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lastSnapshotId: string;
    readonly lifecycleDetails: string;
    readonly recoveryPointTime: string;
    readonly replicationId: string;
    readonly replicationInterval: string;
    readonly replicationTargetId: string;
    readonly sourceId: string;
    readonly state: string;
    readonly targetId: string;
    readonly timeCreated: string;
}
export function getFileStorageReplicationOutput(args: GetFileStorageReplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFileStorageReplicationResult> {
    return pulumi.output(args).apply((a: any) => getFileStorageReplication(a, opts))
}

/**
 * A collection of arguments for invoking getFileStorageReplication.
 */
export interface GetFileStorageReplicationOutputArgs {
    replicationId: pulumi.Input<string>;
}
