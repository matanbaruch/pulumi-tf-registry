// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkFirewallNetworkFirewallPolicyTunnelInspectionRule(args: GetNetworkFirewallNetworkFirewallPolicyTunnelInspectionRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkFirewallNetworkFirewallPolicyTunnelInspectionRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getNetworkFirewallNetworkFirewallPolicyTunnelInspectionRule:getNetworkFirewallNetworkFirewallPolicyTunnelInspectionRule", {
        "networkFirewallPolicyId": args.networkFirewallPolicyId,
        "tunnelInspectionRuleName": args.tunnelInspectionRuleName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkFirewallNetworkFirewallPolicyTunnelInspectionRule.
 */
export interface GetNetworkFirewallNetworkFirewallPolicyTunnelInspectionRuleArgs {
    networkFirewallPolicyId: string;
    tunnelInspectionRuleName: string;
}

/**
 * A collection of values returned by getNetworkFirewallNetworkFirewallPolicyTunnelInspectionRule.
 */
export interface GetNetworkFirewallNetworkFirewallPolicyTunnelInspectionRuleResult {
    readonly action: string;
    readonly conditions: outputs.GetNetworkFirewallNetworkFirewallPolicyTunnelInspectionRuleCondition[];
    readonly id: string;
    readonly name: string;
    readonly networkFirewallPolicyId: string;
    readonly parentResourceId: string;
    readonly positions: outputs.GetNetworkFirewallNetworkFirewallPolicyTunnelInspectionRulePosition[];
    readonly priorityOrder: string;
    readonly profiles: outputs.GetNetworkFirewallNetworkFirewallPolicyTunnelInspectionRuleProfile[];
    readonly protocol: string;
    readonly tunnelInspectionRuleName: string;
}
export function getNetworkFirewallNetworkFirewallPolicyTunnelInspectionRuleOutput(args: GetNetworkFirewallNetworkFirewallPolicyTunnelInspectionRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkFirewallNetworkFirewallPolicyTunnelInspectionRuleResult> {
    return pulumi.output(args).apply((a: any) => getNetworkFirewallNetworkFirewallPolicyTunnelInspectionRule(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkFirewallNetworkFirewallPolicyTunnelInspectionRule.
 */
export interface GetNetworkFirewallNetworkFirewallPolicyTunnelInspectionRuleOutputArgs {
    networkFirewallPolicyId: pulumi.Input<string>;
    tunnelInspectionRuleName: pulumi.Input<string>;
}
