// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMonitoringAlarmSuppressions(args: GetMonitoringAlarmSuppressionsArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoringAlarmSuppressionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMonitoringAlarmSuppressions:getMonitoringAlarmSuppressions", {
        "alarmId": args.alarmId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonitoringAlarmSuppressions.
 */
export interface GetMonitoringAlarmSuppressionsArgs {
    alarmId: string;
    displayName?: string;
    filters?: inputs.GetMonitoringAlarmSuppressionsFilter[];
    id?: string;
    state?: string;
}

/**
 * A collection of values returned by getMonitoringAlarmSuppressions.
 */
export interface GetMonitoringAlarmSuppressionsResult {
    readonly alarmId: string;
    readonly alarmSuppressionCollections: outputs.GetMonitoringAlarmSuppressionsAlarmSuppressionCollection[];
    readonly displayName?: string;
    readonly filters?: outputs.GetMonitoringAlarmSuppressionsFilter[];
    readonly id: string;
    readonly state?: string;
}
export function getMonitoringAlarmSuppressionsOutput(args: GetMonitoringAlarmSuppressionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitoringAlarmSuppressionsResult> {
    return pulumi.output(args).apply((a: any) => getMonitoringAlarmSuppressions(a, opts))
}

/**
 * A collection of arguments for invoking getMonitoringAlarmSuppressions.
 */
export interface GetMonitoringAlarmSuppressionsOutputArgs {
    alarmId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetMonitoringAlarmSuppressionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
