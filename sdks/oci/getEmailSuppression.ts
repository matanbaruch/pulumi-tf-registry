// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEmailSuppression(args: GetEmailSuppressionArgs, opts?: pulumi.InvokeOptions): Promise<GetEmailSuppressionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getEmailSuppression:getEmailSuppression", {
        "suppressionId": args.suppressionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEmailSuppression.
 */
export interface GetEmailSuppressionArgs {
    suppressionId: string;
}

/**
 * A collection of values returned by getEmailSuppression.
 */
export interface GetEmailSuppressionResult {
    readonly compartmentId: string;
    readonly emailAddress: string;
    readonly errorDetail: string;
    readonly errorSource: string;
    readonly id: string;
    readonly messageId: string;
    readonly reason: string;
    readonly suppressionId: string;
    readonly timeCreated: string;
    readonly timeLastSuppressed: string;
}
export function getEmailSuppressionOutput(args: GetEmailSuppressionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmailSuppressionResult> {
    return pulumi.output(args).apply((a: any) => getEmailSuppression(a, opts))
}

/**
 * A collection of arguments for invoking getEmailSuppression.
 */
export interface GetEmailSuppressionOutputArgs {
    suppressionId: pulumi.Input<string>;
}
