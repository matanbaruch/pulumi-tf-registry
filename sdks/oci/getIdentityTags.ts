// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityTags(args: GetIdentityTagsArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityTagsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityTags:getIdentityTags", {
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
        "tagNamespaceId": args.tagNamespaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityTags.
 */
export interface GetIdentityTagsArgs {
    filters?: inputs.GetIdentityTagsFilter[];
    id?: string;
    state?: string;
    tagNamespaceId: string;
}

/**
 * A collection of values returned by getIdentityTags.
 */
export interface GetIdentityTagsResult {
    readonly filters?: outputs.GetIdentityTagsFilter[];
    readonly id: string;
    readonly state?: string;
    readonly tagNamespaceId: string;
    readonly tags: outputs.GetIdentityTagsTag[];
}
export function getIdentityTagsOutput(args: GetIdentityTagsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityTagsResult> {
    return pulumi.output(args).apply((a: any) => getIdentityTags(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityTags.
 */
export interface GetIdentityTagsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetIdentityTagsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tagNamespaceId: pulumi.Input<string>;
}
