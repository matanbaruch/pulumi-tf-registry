// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMeteringComputationCustomTables(args: GetMeteringComputationCustomTablesArgs, opts?: pulumi.InvokeOptions): Promise<GetMeteringComputationCustomTablesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMeteringComputationCustomTables:getMeteringComputationCustomTables", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "savedReportId": args.savedReportId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMeteringComputationCustomTables.
 */
export interface GetMeteringComputationCustomTablesArgs {
    compartmentId: string;
    filters?: inputs.GetMeteringComputationCustomTablesFilter[];
    id?: string;
    savedReportId: string;
}

/**
 * A collection of values returned by getMeteringComputationCustomTables.
 */
export interface GetMeteringComputationCustomTablesResult {
    readonly compartmentId: string;
    readonly customTableCollections: outputs.GetMeteringComputationCustomTablesCustomTableCollection[];
    readonly filters?: outputs.GetMeteringComputationCustomTablesFilter[];
    readonly id: string;
    readonly savedReportId: string;
}
export function getMeteringComputationCustomTablesOutput(args: GetMeteringComputationCustomTablesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMeteringComputationCustomTablesResult> {
    return pulumi.output(args).apply((a: any) => getMeteringComputationCustomTables(a, opts))
}

/**
 * A collection of arguments for invoking getMeteringComputationCustomTables.
 */
export interface GetMeteringComputationCustomTablesOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetMeteringComputationCustomTablesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    savedReportId: pulumi.Input<string>;
}
