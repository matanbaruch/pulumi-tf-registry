// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseCloudVmClusterIormConfig(args: GetDatabaseCloudVmClusterIormConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseCloudVmClusterIormConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseCloudVmClusterIormConfig:getDatabaseCloudVmClusterIormConfig", {
        "cloudVmClusterId": args.cloudVmClusterId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseCloudVmClusterIormConfig.
 */
export interface GetDatabaseCloudVmClusterIormConfigArgs {
    cloudVmClusterId: string;
}

/**
 * A collection of values returned by getDatabaseCloudVmClusterIormConfig.
 */
export interface GetDatabaseCloudVmClusterIormConfigResult {
    readonly cloudVmClusterId: string;
    readonly dbPlans: outputs.GetDatabaseCloudVmClusterIormConfigDbPlan[];
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly objective: string;
    readonly state: string;
}
export function getDatabaseCloudVmClusterIormConfigOutput(args: GetDatabaseCloudVmClusterIormConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseCloudVmClusterIormConfigResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseCloudVmClusterIormConfig(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseCloudVmClusterIormConfig.
 */
export interface GetDatabaseCloudVmClusterIormConfigOutputArgs {
    cloudVmClusterId: pulumi.Input<string>;
}
