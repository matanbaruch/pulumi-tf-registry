// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityDomainsMySupportAccount(args: GetIdentityDomainsMySupportAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityDomainsMySupportAccountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityDomainsMySupportAccount:getIdentityDomainsMySupportAccount", {
        "authorization": args.authorization,
        "idcsEndpoint": args.idcsEndpoint,
        "mySupportAccountId": args.mySupportAccountId,
        "resourceTypeSchemaVersion": args.resourceTypeSchemaVersion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityDomainsMySupportAccount.
 */
export interface GetIdentityDomainsMySupportAccountArgs {
    authorization?: string;
    idcsEndpoint: string;
    mySupportAccountId: string;
    resourceTypeSchemaVersion?: string;
}

/**
 * A collection of values returned by getIdentityDomainsMySupportAccount.
 */
export interface GetIdentityDomainsMySupportAccountResult {
    readonly authorization?: string;
    readonly compartmentOcid: string;
    readonly deleteInProgress: boolean;
    readonly domainOcid: string;
    readonly id: string;
    readonly idcsCreatedBies: outputs.GetIdentityDomainsMySupportAccountIdcsCreatedBy[];
    readonly idcsEndpoint: string;
    readonly idcsLastModifiedBies: outputs.GetIdentityDomainsMySupportAccountIdcsLastModifiedBy[];
    readonly idcsLastUpgradedInRelease: string;
    readonly idcsPreventedOperations: string[];
    readonly metas: outputs.GetIdentityDomainsMySupportAccountMeta[];
    readonly mySupportAccountId: string;
    readonly mySupportAccountProvider: string;
    readonly ocid: string;
    readonly resourceTypeSchemaVersion?: string;
    readonly schemas: string[];
    readonly tags: outputs.GetIdentityDomainsMySupportAccountTag[];
    readonly tenancyOcid: string;
    readonly token: string;
    readonly userId: string;
    readonly users: outputs.GetIdentityDomainsMySupportAccountUser[];
}
export function getIdentityDomainsMySupportAccountOutput(args: GetIdentityDomainsMySupportAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityDomainsMySupportAccountResult> {
    return pulumi.output(args).apply((a: any) => getIdentityDomainsMySupportAccount(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityDomainsMySupportAccount.
 */
export interface GetIdentityDomainsMySupportAccountOutputArgs {
    authorization?: pulumi.Input<string>;
    idcsEndpoint: pulumi.Input<string>;
    mySupportAccountId: pulumi.Input<string>;
    resourceTypeSchemaVersion?: pulumi.Input<string>;
}
