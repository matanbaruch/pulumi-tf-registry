// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getJmsJmsPlugin(args: GetJmsJmsPluginArgs, opts?: pulumi.InvokeOptions): Promise<GetJmsJmsPluginResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getJmsJmsPlugin:getJmsJmsPlugin", {
        "jmsPluginId": args.jmsPluginId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getJmsJmsPlugin.
 */
export interface GetJmsJmsPluginArgs {
    jmsPluginId: string;
}

/**
 * A collection of values returned by getJmsJmsPlugin.
 */
export interface GetJmsJmsPluginResult {
    readonly agentId: string;
    readonly agentType: string;
    readonly availabilityStatus: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly fleetId: string;
    readonly freeformTags: {[key: string]: string};
    readonly hostname: string;
    readonly id: string;
    readonly jmsPluginId: string;
    readonly osArchitecture: string;
    readonly osDistribution: string;
    readonly osFamily: string;
    readonly pluginVersion: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeLastSeen: string;
    readonly timeRegistered: string;
}
export function getJmsJmsPluginOutput(args: GetJmsJmsPluginOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJmsJmsPluginResult> {
    return pulumi.output(args).apply((a: any) => getJmsJmsPlugin(a, opts))
}

/**
 * A collection of arguments for invoking getJmsJmsPlugin.
 */
export interface GetJmsJmsPluginOutputArgs {
    jmsPluginId: pulumi.Input<string>;
}
