// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatascienceModels(args: GetDatascienceModelsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatascienceModelsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatascienceModels:getDatascienceModels", {
        "compartmentId": args.compartmentId,
        "createdBy": args.createdBy,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "modelVersionSetName": args.modelVersionSetName,
        "projectId": args.projectId,
        "state": args.state,
        "versionLabel": args.versionLabel,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatascienceModels.
 */
export interface GetDatascienceModelsArgs {
    compartmentId: string;
    createdBy?: string;
    displayName?: string;
    filters?: inputs.GetDatascienceModelsFilter[];
    id?: string;
    modelVersionSetName: string;
    projectId?: string;
    state?: string;
    versionLabel: string;
}

/**
 * A collection of values returned by getDatascienceModels.
 */
export interface GetDatascienceModelsResult {
    readonly compartmentId: string;
    readonly createdBy?: string;
    readonly displayName?: string;
    readonly filters?: outputs.GetDatascienceModelsFilter[];
    readonly id?: string;
    readonly modelVersionSetName: string;
    readonly models: outputs.GetDatascienceModelsModel[];
    readonly projectId?: string;
    readonly state?: string;
    readonly versionLabel: string;
}
export function getDatascienceModelsOutput(args: GetDatascienceModelsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatascienceModelsResult> {
    return pulumi.output(args).apply((a: any) => getDatascienceModels(a, opts))
}

/**
 * A collection of arguments for invoking getDatascienceModels.
 */
export interface GetDatascienceModelsOutputArgs {
    compartmentId: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatascienceModelsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    modelVersionSetName: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    versionLabel: pulumi.Input<string>;
}
