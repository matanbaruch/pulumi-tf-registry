// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApigatewayApiDeploymentSpecification(args: GetApigatewayApiDeploymentSpecificationArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayApiDeploymentSpecificationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getApigatewayApiDeploymentSpecification:getApigatewayApiDeploymentSpecification", {
        "apiId": args.apiId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayApiDeploymentSpecification.
 */
export interface GetApigatewayApiDeploymentSpecificationArgs {
    apiId: string;
    id?: string;
}

/**
 * A collection of values returned by getApigatewayApiDeploymentSpecification.
 */
export interface GetApigatewayApiDeploymentSpecificationResult {
    readonly apiId: string;
    readonly id: string;
    readonly loggingPolicies: outputs.GetApigatewayApiDeploymentSpecificationLoggingPolicy[];
    readonly requestPolicies: outputs.GetApigatewayApiDeploymentSpecificationRequestPolicy[];
    readonly routes: outputs.GetApigatewayApiDeploymentSpecificationRoute[];
}
export function getApigatewayApiDeploymentSpecificationOutput(args: GetApigatewayApiDeploymentSpecificationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayApiDeploymentSpecificationResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayApiDeploymentSpecification(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayApiDeploymentSpecification.
 */
export interface GetApigatewayApiDeploymentSpecificationOutputArgs {
    apiId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
