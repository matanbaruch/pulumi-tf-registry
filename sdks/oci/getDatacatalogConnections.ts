// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatacatalogConnections(args: GetDatacatalogConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacatalogConnectionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatacatalogConnections:getDatacatalogConnections", {
        "catalogId": args.catalogId,
        "createdById": args.createdById,
        "dataAssetKey": args.dataAssetKey,
        "displayName": args.displayName,
        "displayNameContains": args.displayNameContains,
        "externalKey": args.externalKey,
        "fields": args.fields,
        "filters": args.filters,
        "id": args.id,
        "isDefault": args.isDefault,
        "state": args.state,
        "timeCreated": args.timeCreated,
        "timeStatusUpdated": args.timeStatusUpdated,
        "timeUpdated": args.timeUpdated,
        "updatedById": args.updatedById,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacatalogConnections.
 */
export interface GetDatacatalogConnectionsArgs {
    catalogId: string;
    createdById?: string;
    dataAssetKey: string;
    displayName?: string;
    displayNameContains?: string;
    externalKey?: string;
    fields?: string[];
    filters?: inputs.GetDatacatalogConnectionsFilter[];
    id?: string;
    isDefault?: boolean;
    state?: string;
    timeCreated?: string;
    timeStatusUpdated?: string;
    timeUpdated?: string;
    updatedById?: string;
}

/**
 * A collection of values returned by getDatacatalogConnections.
 */
export interface GetDatacatalogConnectionsResult {
    readonly catalogId: string;
    readonly connectionCollections: outputs.GetDatacatalogConnectionsConnectionCollection[];
    readonly createdById?: string;
    readonly dataAssetKey: string;
    readonly displayName?: string;
    readonly displayNameContains?: string;
    readonly externalKey?: string;
    readonly fields?: string[];
    readonly filters?: outputs.GetDatacatalogConnectionsFilter[];
    readonly id: string;
    readonly isDefault?: boolean;
    readonly state?: string;
    readonly timeCreated?: string;
    readonly timeStatusUpdated?: string;
    readonly timeUpdated?: string;
    readonly updatedById?: string;
}
export function getDatacatalogConnectionsOutput(args: GetDatacatalogConnectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacatalogConnectionsResult> {
    return pulumi.output(args).apply((a: any) => getDatacatalogConnections(a, opts))
}

/**
 * A collection of arguments for invoking getDatacatalogConnections.
 */
export interface GetDatacatalogConnectionsOutputArgs {
    catalogId: pulumi.Input<string>;
    createdById?: pulumi.Input<string>;
    dataAssetKey: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    displayNameContains?: pulumi.Input<string>;
    externalKey?: pulumi.Input<string>;
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatacatalogConnectionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    isDefault?: pulumi.Input<boolean>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeStatusUpdated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    updatedById?: pulumi.Input<string>;
}
