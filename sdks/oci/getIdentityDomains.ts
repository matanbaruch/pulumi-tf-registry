// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityDomains(args: GetIdentityDomainsArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityDomainsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityDomains:getIdentityDomains", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "homeRegionUrl": args.homeRegionUrl,
        "id": args.id,
        "isHiddenOnLogin": args.isHiddenOnLogin,
        "licenseType": args.licenseType,
        "name": args.name,
        "state": args.state,
        "type": args.type,
        "url": args.url,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityDomains.
 */
export interface GetIdentityDomainsArgs {
    compartmentId: string;
    displayName?: string;
    filters?: inputs.GetIdentityDomainsFilter[];
    homeRegionUrl?: string;
    id?: string;
    isHiddenOnLogin?: boolean;
    licenseType?: string;
    name?: string;
    state?: string;
    type?: string;
    url?: string;
}

/**
 * A collection of values returned by getIdentityDomains.
 */
export interface GetIdentityDomainsResult {
    readonly compartmentId: string;
    readonly displayName?: string;
    readonly domains: outputs.GetIdentityDomainsDomain[];
    readonly filters?: outputs.GetIdentityDomainsFilter[];
    readonly homeRegionUrl?: string;
    readonly id: string;
    readonly isHiddenOnLogin?: boolean;
    readonly licenseType?: string;
    readonly name?: string;
    readonly state?: string;
    readonly type?: string;
    readonly url?: string;
}
export function getIdentityDomainsOutput(args: GetIdentityDomainsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityDomainsResult> {
    return pulumi.output(args).apply((a: any) => getIdentityDomains(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityDomains.
 */
export interface GetIdentityDomainsOutputArgs {
    compartmentId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetIdentityDomainsFilterArgs>[]>;
    homeRegionUrl?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isHiddenOnLogin?: pulumi.Input<boolean>;
    licenseType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}
