// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LoadBalancerLoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancerLoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadBalancerLoadBalancerState, opts?: pulumi.CustomResourceOptions): LoadBalancerLoadBalancer {
        return new LoadBalancerLoadBalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/loadBalancerLoadBalancer:LoadBalancerLoadBalancer';

    /**
     * Returns true if the given object is an instance of LoadBalancerLoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoadBalancerLoadBalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadBalancerLoadBalancer.__pulumiType;
    }

    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly ipAddressDetails!: pulumi.Output<outputs.LoadBalancerLoadBalancerIpAddressDetail[]>;
    /**
     * @deprecated Deprecated
     */
    public /*out*/ readonly ipAddresses!: pulumi.Output<string[]>;
    public readonly ipMode!: pulumi.Output<string>;
    public readonly isDeleteProtectionEnabled!: pulumi.Output<boolean>;
    public readonly isPrivate!: pulumi.Output<boolean>;
    public readonly isRequestIdEnabled!: pulumi.Output<boolean>;
    public readonly networkSecurityGroupIds!: pulumi.Output<string[] | undefined>;
    public readonly requestIdHeader!: pulumi.Output<string>;
    public readonly reservedIps!: pulumi.Output<outputs.LoadBalancerLoadBalancerReservedIp[] | undefined>;
    public readonly shape!: pulumi.Output<string>;
    public readonly shapeDetails!: pulumi.Output<outputs.LoadBalancerLoadBalancerShapeDetails | undefined>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly subnetIds!: pulumi.Output<string[]>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.LoadBalancerLoadBalancerTimeouts | undefined>;

    /**
     * Create a LoadBalancerLoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadBalancerLoadBalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoadBalancerLoadBalancerArgs | LoadBalancerLoadBalancerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoadBalancerLoadBalancerState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["ipAddressDetails"] = state ? state.ipAddressDetails : undefined;
            resourceInputs["ipAddresses"] = state ? state.ipAddresses : undefined;
            resourceInputs["ipMode"] = state ? state.ipMode : undefined;
            resourceInputs["isDeleteProtectionEnabled"] = state ? state.isDeleteProtectionEnabled : undefined;
            resourceInputs["isPrivate"] = state ? state.isPrivate : undefined;
            resourceInputs["isRequestIdEnabled"] = state ? state.isRequestIdEnabled : undefined;
            resourceInputs["networkSecurityGroupIds"] = state ? state.networkSecurityGroupIds : undefined;
            resourceInputs["requestIdHeader"] = state ? state.requestIdHeader : undefined;
            resourceInputs["reservedIps"] = state ? state.reservedIps : undefined;
            resourceInputs["shape"] = state ? state.shape : undefined;
            resourceInputs["shapeDetails"] = state ? state.shapeDetails : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as LoadBalancerLoadBalancerArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.shape === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shape'");
            }
            if ((!args || args.subnetIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetIds'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["ipMode"] = args ? args.ipMode : undefined;
            resourceInputs["isDeleteProtectionEnabled"] = args ? args.isDeleteProtectionEnabled : undefined;
            resourceInputs["isPrivate"] = args ? args.isPrivate : undefined;
            resourceInputs["isRequestIdEnabled"] = args ? args.isRequestIdEnabled : undefined;
            resourceInputs["networkSecurityGroupIds"] = args ? args.networkSecurityGroupIds : undefined;
            resourceInputs["requestIdHeader"] = args ? args.requestIdHeader : undefined;
            resourceInputs["reservedIps"] = args ? args.reservedIps : undefined;
            resourceInputs["shape"] = args ? args.shape : undefined;
            resourceInputs["shapeDetails"] = args ? args.shapeDetails : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["ipAddressDetails"] = undefined /*out*/;
            resourceInputs["ipAddresses"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LoadBalancerLoadBalancer.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LoadBalancerLoadBalancer resources.
 */
export interface LoadBalancerLoadBalancerState {
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ipAddressDetails?: pulumi.Input<pulumi.Input<inputs.LoadBalancerLoadBalancerIpAddressDetail>[]>;
    /**
     * @deprecated Deprecated
     */
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    ipMode?: pulumi.Input<string>;
    isDeleteProtectionEnabled?: pulumi.Input<boolean>;
    isPrivate?: pulumi.Input<boolean>;
    isRequestIdEnabled?: pulumi.Input<boolean>;
    networkSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    requestIdHeader?: pulumi.Input<string>;
    reservedIps?: pulumi.Input<pulumi.Input<inputs.LoadBalancerLoadBalancerReservedIp>[]>;
    shape?: pulumi.Input<string>;
    shapeDetails?: pulumi.Input<inputs.LoadBalancerLoadBalancerShapeDetails>;
    state?: pulumi.Input<string>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.LoadBalancerLoadBalancerTimeouts>;
}

/**
 * The set of arguments for constructing a LoadBalancerLoadBalancer resource.
 */
export interface LoadBalancerLoadBalancerArgs {
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ipMode?: pulumi.Input<string>;
    isDeleteProtectionEnabled?: pulumi.Input<boolean>;
    isPrivate?: pulumi.Input<boolean>;
    isRequestIdEnabled?: pulumi.Input<boolean>;
    networkSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    requestIdHeader?: pulumi.Input<string>;
    reservedIps?: pulumi.Input<pulumi.Input<inputs.LoadBalancerLoadBalancerReservedIp>[]>;
    shape: pulumi.Input<string>;
    shapeDetails?: pulumi.Input<inputs.LoadBalancerLoadBalancerShapeDetails>;
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.LoadBalancerLoadBalancerTimeouts>;
}
