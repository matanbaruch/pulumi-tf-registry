// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudGuardSecurityZone(args: GetCloudGuardSecurityZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudGuardSecurityZoneResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCloudGuardSecurityZone:getCloudGuardSecurityZone", {
        "securityZoneId": args.securityZoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudGuardSecurityZone.
 */
export interface GetCloudGuardSecurityZoneArgs {
    securityZoneId: string;
}

/**
 * A collection of values returned by getCloudGuardSecurityZone.
 */
export interface GetCloudGuardSecurityZoneResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly inheritedByCompartments: string[];
    readonly lifecycleDetails: string;
    readonly securityZoneId: string;
    readonly securityZoneRecipeId: string;
    readonly securityZoneTargetId: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getCloudGuardSecurityZoneOutput(args: GetCloudGuardSecurityZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudGuardSecurityZoneResult> {
    return pulumi.output(args).apply((a: any) => getCloudGuardSecurityZone(a, opts))
}

/**
 * A collection of arguments for invoking getCloudGuardSecurityZone.
 */
export interface GetCloudGuardSecurityZoneOutputArgs {
    securityZoneId: pulumi.Input<string>;
}
