// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogAnalyticsLogAnalyticsCategory(args: GetLogAnalyticsLogAnalyticsCategoryArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsLogAnalyticsCategoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLogAnalyticsLogAnalyticsCategory:getLogAnalyticsLogAnalyticsCategory", {
        "id": args.id,
        "name": args.name,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogAnalyticsLogAnalyticsCategory.
 */
export interface GetLogAnalyticsLogAnalyticsCategoryArgs {
    id?: string;
    name: string;
    namespace: string;
}

/**
 * A collection of values returned by getLogAnalyticsLogAnalyticsCategory.
 */
export interface GetLogAnalyticsLogAnalyticsCategoryResult {
    readonly description: string;
    readonly displayName: string;
    readonly id: string;
    readonly isSystem: boolean;
    readonly name: string;
    readonly namespace: string;
    readonly type: string;
}
export function getLogAnalyticsLogAnalyticsCategoryOutput(args: GetLogAnalyticsLogAnalyticsCategoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsLogAnalyticsCategoryResult> {
    return pulumi.output(args).apply((a: any) => getLogAnalyticsLogAnalyticsCategory(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsLogAnalyticsCategory.
 */
export interface GetLogAnalyticsLogAnalyticsCategoryOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
}
