// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataSafeMaskingPolicy extends pulumi.CustomResource {
    /**
     * Get an existing DataSafeMaskingPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataSafeMaskingPolicyState, opts?: pulumi.CustomResourceOptions): DataSafeMaskingPolicy {
        return new DataSafeMaskingPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/dataSafeMaskingPolicy:DataSafeMaskingPolicy';

    /**
     * Returns true if the given object is an instance of DataSafeMaskingPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataSafeMaskingPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataSafeMaskingPolicy.__pulumiType;
    }

    public readonly addMaskingColumnsFromSdmTrigger!: pulumi.Output<number | undefined>;
    public readonly columnSources!: pulumi.Output<outputs.DataSafeMaskingPolicyColumnSource[]>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly generateHealthReportTrigger!: pulumi.Output<number | undefined>;
    public readonly isDropTempTablesEnabled!: pulumi.Output<boolean>;
    public readonly isRedoLoggingEnabled!: pulumi.Output<boolean>;
    public readonly isRefreshStatsEnabled!: pulumi.Output<boolean>;
    public readonly parallelDegree!: pulumi.Output<string>;
    public readonly postMaskingScript!: pulumi.Output<string>;
    public readonly preMaskingScript!: pulumi.Output<string>;
    public readonly recompile!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DataSafeMaskingPolicyTimeouts | undefined>;

    /**
     * Create a DataSafeMaskingPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataSafeMaskingPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataSafeMaskingPolicyArgs | DataSafeMaskingPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataSafeMaskingPolicyState | undefined;
            resourceInputs["addMaskingColumnsFromSdmTrigger"] = state ? state.addMaskingColumnsFromSdmTrigger : undefined;
            resourceInputs["columnSources"] = state ? state.columnSources : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["generateHealthReportTrigger"] = state ? state.generateHealthReportTrigger : undefined;
            resourceInputs["isDropTempTablesEnabled"] = state ? state.isDropTempTablesEnabled : undefined;
            resourceInputs["isRedoLoggingEnabled"] = state ? state.isRedoLoggingEnabled : undefined;
            resourceInputs["isRefreshStatsEnabled"] = state ? state.isRefreshStatsEnabled : undefined;
            resourceInputs["parallelDegree"] = state ? state.parallelDegree : undefined;
            resourceInputs["postMaskingScript"] = state ? state.postMaskingScript : undefined;
            resourceInputs["preMaskingScript"] = state ? state.preMaskingScript : undefined;
            resourceInputs["recompile"] = state ? state.recompile : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DataSafeMaskingPolicyArgs | undefined;
            if ((!args || args.columnSources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'columnSources'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            resourceInputs["addMaskingColumnsFromSdmTrigger"] = args ? args.addMaskingColumnsFromSdmTrigger : undefined;
            resourceInputs["columnSources"] = args ? args.columnSources : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["generateHealthReportTrigger"] = args ? args.generateHealthReportTrigger : undefined;
            resourceInputs["isDropTempTablesEnabled"] = args ? args.isDropTempTablesEnabled : undefined;
            resourceInputs["isRedoLoggingEnabled"] = args ? args.isRedoLoggingEnabled : undefined;
            resourceInputs["isRefreshStatsEnabled"] = args ? args.isRefreshStatsEnabled : undefined;
            resourceInputs["parallelDegree"] = args ? args.parallelDegree : undefined;
            resourceInputs["postMaskingScript"] = args ? args.postMaskingScript : undefined;
            resourceInputs["preMaskingScript"] = args ? args.preMaskingScript : undefined;
            resourceInputs["recompile"] = args ? args.recompile : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataSafeMaskingPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataSafeMaskingPolicy resources.
 */
export interface DataSafeMaskingPolicyState {
    addMaskingColumnsFromSdmTrigger?: pulumi.Input<number>;
    columnSources?: pulumi.Input<pulumi.Input<inputs.DataSafeMaskingPolicyColumnSource>[]>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    generateHealthReportTrigger?: pulumi.Input<number>;
    isDropTempTablesEnabled?: pulumi.Input<boolean>;
    isRedoLoggingEnabled?: pulumi.Input<boolean>;
    isRefreshStatsEnabled?: pulumi.Input<boolean>;
    parallelDegree?: pulumi.Input<string>;
    postMaskingScript?: pulumi.Input<string>;
    preMaskingScript?: pulumi.Input<string>;
    recompile?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataSafeMaskingPolicyTimeouts>;
}

/**
 * The set of arguments for constructing a DataSafeMaskingPolicy resource.
 */
export interface DataSafeMaskingPolicyArgs {
    addMaskingColumnsFromSdmTrigger?: pulumi.Input<number>;
    columnSources: pulumi.Input<pulumi.Input<inputs.DataSafeMaskingPolicyColumnSource>[]>;
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    generateHealthReportTrigger?: pulumi.Input<number>;
    isDropTempTablesEnabled?: pulumi.Input<boolean>;
    isRedoLoggingEnabled?: pulumi.Input<boolean>;
    isRefreshStatsEnabled?: pulumi.Input<boolean>;
    parallelDegree?: pulumi.Input<string>;
    postMaskingScript?: pulumi.Input<string>;
    preMaskingScript?: pulumi.Input<string>;
    recompile?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataSafeMaskingPolicyTimeouts>;
}
