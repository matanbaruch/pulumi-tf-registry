// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBdsBdsInstanceMetastoreConfigs(args: GetBdsBdsInstanceMetastoreConfigsArgs, opts?: pulumi.InvokeOptions): Promise<GetBdsBdsInstanceMetastoreConfigsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getBdsBdsInstanceMetastoreConfigs:getBdsBdsInstanceMetastoreConfigs", {
        "bdsApiKeyId": args.bdsApiKeyId,
        "bdsInstanceId": args.bdsInstanceId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "metastoreId": args.metastoreId,
        "metastoreType": args.metastoreType,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBdsBdsInstanceMetastoreConfigs.
 */
export interface GetBdsBdsInstanceMetastoreConfigsArgs {
    bdsApiKeyId?: string;
    bdsInstanceId: string;
    displayName?: string;
    filters?: inputs.GetBdsBdsInstanceMetastoreConfigsFilter[];
    id?: string;
    metastoreId?: string;
    metastoreType?: string;
    state?: string;
}

/**
 * A collection of values returned by getBdsBdsInstanceMetastoreConfigs.
 */
export interface GetBdsBdsInstanceMetastoreConfigsResult {
    readonly bdsApiKeyId?: string;
    readonly bdsInstanceId: string;
    readonly bdsMetastoreConfigurations: outputs.GetBdsBdsInstanceMetastoreConfigsBdsMetastoreConfiguration[];
    readonly displayName?: string;
    readonly filters?: outputs.GetBdsBdsInstanceMetastoreConfigsFilter[];
    readonly id: string;
    readonly metastoreId?: string;
    readonly metastoreType?: string;
    readonly state?: string;
}
export function getBdsBdsInstanceMetastoreConfigsOutput(args: GetBdsBdsInstanceMetastoreConfigsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBdsBdsInstanceMetastoreConfigsResult> {
    return pulumi.output(args).apply((a: any) => getBdsBdsInstanceMetastoreConfigs(a, opts))
}

/**
 * A collection of arguments for invoking getBdsBdsInstanceMetastoreConfigs.
 */
export interface GetBdsBdsInstanceMetastoreConfigsOutputArgs {
    bdsApiKeyId?: pulumi.Input<string>;
    bdsInstanceId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetBdsBdsInstanceMetastoreConfigsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    metastoreId?: pulumi.Input<string>;
    metastoreType?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
