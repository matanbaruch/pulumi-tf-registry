// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStackMonitoringDiscoveryJobLogs(args: GetStackMonitoringDiscoveryJobLogsArgs, opts?: pulumi.InvokeOptions): Promise<GetStackMonitoringDiscoveryJobLogsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getStackMonitoringDiscoveryJobLogs:getStackMonitoringDiscoveryJobLogs", {
        "discoveryJobId": args.discoveryJobId,
        "filters": args.filters,
        "id": args.id,
        "logType": args.logType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStackMonitoringDiscoveryJobLogs.
 */
export interface GetStackMonitoringDiscoveryJobLogsArgs {
    discoveryJobId: string;
    filters?: inputs.GetStackMonitoringDiscoveryJobLogsFilter[];
    id?: string;
    logType?: string;
}

/**
 * A collection of values returned by getStackMonitoringDiscoveryJobLogs.
 */
export interface GetStackMonitoringDiscoveryJobLogsResult {
    readonly discoveryJobId: string;
    readonly discoveryJobLogCollections: outputs.GetStackMonitoringDiscoveryJobLogsDiscoveryJobLogCollection[];
    readonly filters?: outputs.GetStackMonitoringDiscoveryJobLogsFilter[];
    readonly id: string;
    readonly logType?: string;
}
export function getStackMonitoringDiscoveryJobLogsOutput(args: GetStackMonitoringDiscoveryJobLogsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStackMonitoringDiscoveryJobLogsResult> {
    return pulumi.output(args).apply((a: any) => getStackMonitoringDiscoveryJobLogs(a, opts))
}

/**
 * A collection of arguments for invoking getStackMonitoringDiscoveryJobLogs.
 */
export interface GetStackMonitoringDiscoveryJobLogsOutputArgs {
    discoveryJobId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetStackMonitoringDiscoveryJobLogsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    logType?: pulumi.Input<string>;
}
