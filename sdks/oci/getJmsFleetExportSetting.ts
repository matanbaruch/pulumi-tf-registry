// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getJmsFleetExportSetting(args: GetJmsFleetExportSettingArgs, opts?: pulumi.InvokeOptions): Promise<GetJmsFleetExportSettingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getJmsFleetExportSetting:getJmsFleetExportSetting", {
        "fleetId": args.fleetId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getJmsFleetExportSetting.
 */
export interface GetJmsFleetExportSettingArgs {
    fleetId: string;
    id?: string;
}

/**
 * A collection of values returned by getJmsFleetExportSetting.
 */
export interface GetJmsFleetExportSettingResult {
    readonly exportDuration: string;
    readonly exportFrequency: string;
    readonly exportResources: string;
    readonly exportSettingKey: string;
    readonly fleetId: string;
    readonly id: string;
    readonly isCrossRegionAcknowledged: boolean;
    readonly isEnabled: boolean;
    readonly targetBucketName: string;
    readonly targetBucketNamespace: string;
    readonly targetBucketRegion: string;
    readonly timeCreated: string;
    readonly timeLastModified: string;
}
export function getJmsFleetExportSettingOutput(args: GetJmsFleetExportSettingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJmsFleetExportSettingResult> {
    return pulumi.output(args).apply((a: any) => getJmsFleetExportSetting(a, opts))
}

/**
 * A collection of arguments for invoking getJmsFleetExportSetting.
 */
export interface GetJmsFleetExportSettingOutputArgs {
    fleetId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
