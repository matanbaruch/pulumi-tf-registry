// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsManagementHubErrata(args: GetOsManagementHubErrataArgs, opts?: pulumi.InvokeOptions): Promise<GetOsManagementHubErrataResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsManagementHubErrata:getOsManagementHubErrata", {
        "advisorySeverities": args.advisorySeverities,
        "advisoryTypes": args.advisoryTypes,
        "classificationTypes": args.classificationTypes,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "nameContains": args.nameContains,
        "names": args.names,
        "osFamily": args.osFamily,
        "timeIssueDateEnd": args.timeIssueDateEnd,
        "timeIssueDateStart": args.timeIssueDateStart,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsManagementHubErrata.
 */
export interface GetOsManagementHubErrataArgs {
    advisorySeverities?: string[];
    advisoryTypes?: string[];
    classificationTypes?: string[];
    compartmentId: string;
    filters?: inputs.GetOsManagementHubErrataFilter[];
    id?: string;
    nameContains?: string;
    names?: string[];
    osFamily?: string;
    timeIssueDateEnd?: string;
    timeIssueDateStart?: string;
}

/**
 * A collection of values returned by getOsManagementHubErrata.
 */
export interface GetOsManagementHubErrataResult {
    readonly advisorySeverities?: string[];
    readonly advisoryTypes?: string[];
    readonly classificationTypes?: string[];
    readonly compartmentId: string;
    readonly erratumCollections: outputs.GetOsManagementHubErrataErratumCollection[];
    readonly filters?: outputs.GetOsManagementHubErrataFilter[];
    readonly id: string;
    readonly nameContains?: string;
    readonly names?: string[];
    readonly osFamily?: string;
    readonly timeIssueDateEnd?: string;
    readonly timeIssueDateStart?: string;
}
export function getOsManagementHubErrataOutput(args: GetOsManagementHubErrataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsManagementHubErrataResult> {
    return pulumi.output(args).apply((a: any) => getOsManagementHubErrata(a, opts))
}

/**
 * A collection of arguments for invoking getOsManagementHubErrata.
 */
export interface GetOsManagementHubErrataOutputArgs {
    advisorySeverities?: pulumi.Input<pulumi.Input<string>[]>;
    advisoryTypes?: pulumi.Input<pulumi.Input<string>[]>;
    classificationTypes?: pulumi.Input<pulumi.Input<string>[]>;
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOsManagementHubErrataFilterArgs>[]>;
    id?: pulumi.Input<string>;
    nameContains?: pulumi.Input<string>;
    names?: pulumi.Input<pulumi.Input<string>[]>;
    osFamily?: pulumi.Input<string>;
    timeIssueDateEnd?: pulumi.Input<string>;
    timeIssueDateStart?: pulumi.Input<string>;
}
