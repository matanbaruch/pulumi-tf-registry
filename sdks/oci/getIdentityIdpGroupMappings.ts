// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityIdpGroupMappings(args: GetIdentityIdpGroupMappingsArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityIdpGroupMappingsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityIdpGroupMappings:getIdentityIdpGroupMappings", {
        "filters": args.filters,
        "id": args.id,
        "identityProviderId": args.identityProviderId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityIdpGroupMappings.
 */
export interface GetIdentityIdpGroupMappingsArgs {
    filters?: inputs.GetIdentityIdpGroupMappingsFilter[];
    id?: string;
    identityProviderId: string;
}

/**
 * A collection of values returned by getIdentityIdpGroupMappings.
 */
export interface GetIdentityIdpGroupMappingsResult {
    readonly filters?: outputs.GetIdentityIdpGroupMappingsFilter[];
    readonly id: string;
    readonly identityProviderId: string;
    readonly idpGroupMappings: outputs.GetIdentityIdpGroupMappingsIdpGroupMapping[];
}
export function getIdentityIdpGroupMappingsOutput(args: GetIdentityIdpGroupMappingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityIdpGroupMappingsResult> {
    return pulumi.output(args).apply((a: any) => getIdentityIdpGroupMappings(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityIdpGroupMappings.
 */
export interface GetIdentityIdpGroupMappingsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetIdentityIdpGroupMappingsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    identityProviderId: pulumi.Input<string>;
}
