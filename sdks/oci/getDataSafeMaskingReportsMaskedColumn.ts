// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeMaskingReportsMaskedColumn(args: GetDataSafeMaskingReportsMaskedColumnArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeMaskingReportsMaskedColumnResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeMaskingReportsMaskedColumn:getDataSafeMaskingReportsMaskedColumn", {
        "columnNames": args.columnNames,
        "id": args.id,
        "maskingColumnGroups": args.maskingColumnGroups,
        "maskingReportId": args.maskingReportId,
        "objectTypes": args.objectTypes,
        "objects": args.objects,
        "schemaNames": args.schemaNames,
        "sensitiveTypeId": args.sensitiveTypeId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeMaskingReportsMaskedColumn.
 */
export interface GetDataSafeMaskingReportsMaskedColumnArgs {
    columnNames?: string[];
    id?: string;
    maskingColumnGroups?: string[];
    maskingReportId: string;
    objectTypes?: string[];
    objects?: string[];
    schemaNames?: string[];
    sensitiveTypeId?: string;
}

/**
 * A collection of values returned by getDataSafeMaskingReportsMaskedColumn.
 */
export interface GetDataSafeMaskingReportsMaskedColumnResult {
    readonly columnNames?: string[];
    readonly id: string;
    readonly items: outputs.GetDataSafeMaskingReportsMaskedColumnItem[];
    readonly maskingColumnGroups?: string[];
    readonly maskingReportId: string;
    readonly objectTypes?: string[];
    readonly objects?: string[];
    readonly schemaNames?: string[];
    readonly sensitiveTypeId?: string;
}
export function getDataSafeMaskingReportsMaskedColumnOutput(args: GetDataSafeMaskingReportsMaskedColumnOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeMaskingReportsMaskedColumnResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeMaskingReportsMaskedColumn(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeMaskingReportsMaskedColumn.
 */
export interface GetDataSafeMaskingReportsMaskedColumnOutputArgs {
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    maskingColumnGroups?: pulumi.Input<pulumi.Input<string>[]>;
    maskingReportId: pulumi.Input<string>;
    objectTypes?: pulumi.Input<pulumi.Input<string>[]>;
    objects?: pulumi.Input<pulumi.Input<string>[]>;
    schemaNames?: pulumi.Input<pulumi.Input<string>[]>;
    sensitiveTypeId?: pulumi.Input<string>;
}
