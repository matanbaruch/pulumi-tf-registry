// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IdentityDomainsSetting extends pulumi.CustomResource {
    /**
     * Get an existing IdentityDomainsSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IdentityDomainsSettingState, opts?: pulumi.CustomResourceOptions): IdentityDomainsSetting {
        return new IdentityDomainsSetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/identityDomainsSetting:IdentityDomainsSetting';

    /**
     * Returns true if the given object is an instance of IdentityDomainsSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IdentityDomainsSetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IdentityDomainsSetting.__pulumiType;
    }

    public readonly accountAlwaysTrustScope!: pulumi.Output<boolean>;
    public readonly allowedDomains!: pulumi.Output<string[]>;
    public readonly allowedForgotPasswordFlowReturnUrls!: pulumi.Output<string[]>;
    public readonly allowedNotificationRedirectUrls!: pulumi.Output<string[]>;
    public readonly attributeSets!: pulumi.Output<string[] | undefined>;
    public readonly attributes!: pulumi.Output<string | undefined>;
    public readonly auditEventRetentionPeriod!: pulumi.Output<number>;
    public readonly authorization!: pulumi.Output<string | undefined>;
    public readonly certificateValidation!: pulumi.Output<outputs.IdentityDomainsSettingCertificateValidation | undefined>;
    public /*out*/ readonly cloudAccountName!: pulumi.Output<string>;
    public readonly cloudGateCorsSettings!: pulumi.Output<outputs.IdentityDomainsSettingCloudGateCorsSettings | undefined>;
    public readonly cloudMigrationCustomUrl!: pulumi.Output<string>;
    public readonly cloudMigrationUrlEnabled!: pulumi.Output<boolean>;
    public readonly companyNames!: pulumi.Output<outputs.IdentityDomainsSettingCompanyName[] | undefined>;
    public /*out*/ readonly compartmentOcid!: pulumi.Output<string>;
    public readonly contactEmails!: pulumi.Output<string[]>;
    public readonly csrAccess!: pulumi.Output<string>;
    public readonly customBranding!: pulumi.Output<boolean>;
    public readonly customCssLocation!: pulumi.Output<string>;
    public readonly customHtmlLocation!: pulumi.Output<string>;
    public readonly customTranslation!: pulumi.Output<string>;
    public /*out*/ readonly defaultCompanyNames!: pulumi.Output<outputs.IdentityDomainsSettingDefaultCompanyName[]>;
    public /*out*/ readonly defaultImages!: pulumi.Output<outputs.IdentityDomainsSettingDefaultImage[]>;
    public /*out*/ readonly defaultLoginTexts!: pulumi.Output<outputs.IdentityDomainsSettingDefaultLoginText[]>;
    public readonly defaultTrustScope!: pulumi.Output<string>;
    public /*out*/ readonly deleteInProgress!: pulumi.Output<boolean>;
    public readonly diagnosticLevel!: pulumi.Output<number>;
    public readonly diagnosticRecordForSearchIdentifiesReturnedResources!: pulumi.Output<boolean>;
    public /*out*/ readonly diagnosticTracingUpto!: pulumi.Output<string>;
    public /*out*/ readonly domainOcid!: pulumi.Output<string>;
    public readonly enableTermsOfUse!: pulumi.Output<boolean>;
    public readonly externalId!: pulumi.Output<string>;
    public readonly iamUpstSessionExpiry!: pulumi.Output<number>;
    public /*out*/ readonly idcsCreatedBies!: pulumi.Output<outputs.IdentityDomainsSettingIdcsCreatedBy[]>;
    public readonly idcsEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly idcsLastModifiedBies!: pulumi.Output<outputs.IdentityDomainsSettingIdcsLastModifiedBy[]>;
    public /*out*/ readonly idcsLastUpgradedInRelease!: pulumi.Output<string>;
    public /*out*/ readonly idcsPreventedOperations!: pulumi.Output<string[]>;
    public readonly images!: pulumi.Output<outputs.IdentityDomainsSettingImage[] | undefined>;
    public readonly isHostedPage!: pulumi.Output<boolean>;
    public readonly issuer!: pulumi.Output<string>;
    public readonly locale!: pulumi.Output<string>;
    public readonly loginTexts!: pulumi.Output<outputs.IdentityDomainsSettingLoginText[] | undefined>;
    public readonly maxNoOfAppCmvaToReturn!: pulumi.Output<number>;
    public readonly maxNoOfAppRoleMembersToReturn!: pulumi.Output<number>;
    public /*out*/ readonly metas!: pulumi.Output<outputs.IdentityDomainsSettingMeta[]>;
    public /*out*/ readonly migrationStatus!: pulumi.Output<string>;
    public readonly ocid!: pulumi.Output<string>;
    public /*out*/ readonly onPremisesProvisioning!: pulumi.Output<boolean>;
    public readonly preferredLanguage!: pulumi.Output<string>;
    public readonly prevIssuer!: pulumi.Output<string>;
    public readonly privacyPolicyUrl!: pulumi.Output<string>;
    public readonly purgeConfigs!: pulumi.Output<outputs.IdentityDomainsSettingPurgeConfig[] | undefined>;
    public readonly reAuthFactors!: pulumi.Output<string[]>;
    public readonly reAuthWhenChangingMyAuthenticationFactors!: pulumi.Output<boolean>;
    public readonly resourceTypeSchemaVersion!: pulumi.Output<string | undefined>;
    public readonly schemas!: pulumi.Output<string[]>;
    public readonly serviceAdminCannotListOtherUsers!: pulumi.Output<boolean>;
    public readonly settingId!: pulumi.Output<string>;
    public readonly signingCertPublicAccess!: pulumi.Output<boolean>;
    public readonly subMappingAttr!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.IdentityDomainsSettingTag[] | undefined>;
    public /*out*/ readonly tenancyOcid!: pulumi.Output<string>;
    public readonly tenantCustomClaims!: pulumi.Output<outputs.IdentityDomainsSettingTenantCustomClaim[] | undefined>;
    public readonly termsOfUseUrl!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.IdentityDomainsSettingTimeouts | undefined>;
    public readonly timezone!: pulumi.Output<string>;

    /**
     * Create a IdentityDomainsSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IdentityDomainsSettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IdentityDomainsSettingArgs | IdentityDomainsSettingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IdentityDomainsSettingState | undefined;
            resourceInputs["accountAlwaysTrustScope"] = state ? state.accountAlwaysTrustScope : undefined;
            resourceInputs["allowedDomains"] = state ? state.allowedDomains : undefined;
            resourceInputs["allowedForgotPasswordFlowReturnUrls"] = state ? state.allowedForgotPasswordFlowReturnUrls : undefined;
            resourceInputs["allowedNotificationRedirectUrls"] = state ? state.allowedNotificationRedirectUrls : undefined;
            resourceInputs["attributeSets"] = state ? state.attributeSets : undefined;
            resourceInputs["attributes"] = state ? state.attributes : undefined;
            resourceInputs["auditEventRetentionPeriod"] = state ? state.auditEventRetentionPeriod : undefined;
            resourceInputs["authorization"] = state ? state.authorization : undefined;
            resourceInputs["certificateValidation"] = state ? state.certificateValidation : undefined;
            resourceInputs["cloudAccountName"] = state ? state.cloudAccountName : undefined;
            resourceInputs["cloudGateCorsSettings"] = state ? state.cloudGateCorsSettings : undefined;
            resourceInputs["cloudMigrationCustomUrl"] = state ? state.cloudMigrationCustomUrl : undefined;
            resourceInputs["cloudMigrationUrlEnabled"] = state ? state.cloudMigrationUrlEnabled : undefined;
            resourceInputs["companyNames"] = state ? state.companyNames : undefined;
            resourceInputs["compartmentOcid"] = state ? state.compartmentOcid : undefined;
            resourceInputs["contactEmails"] = state ? state.contactEmails : undefined;
            resourceInputs["csrAccess"] = state ? state.csrAccess : undefined;
            resourceInputs["customBranding"] = state ? state.customBranding : undefined;
            resourceInputs["customCssLocation"] = state ? state.customCssLocation : undefined;
            resourceInputs["customHtmlLocation"] = state ? state.customHtmlLocation : undefined;
            resourceInputs["customTranslation"] = state ? state.customTranslation : undefined;
            resourceInputs["defaultCompanyNames"] = state ? state.defaultCompanyNames : undefined;
            resourceInputs["defaultImages"] = state ? state.defaultImages : undefined;
            resourceInputs["defaultLoginTexts"] = state ? state.defaultLoginTexts : undefined;
            resourceInputs["defaultTrustScope"] = state ? state.defaultTrustScope : undefined;
            resourceInputs["deleteInProgress"] = state ? state.deleteInProgress : undefined;
            resourceInputs["diagnosticLevel"] = state ? state.diagnosticLevel : undefined;
            resourceInputs["diagnosticRecordForSearchIdentifiesReturnedResources"] = state ? state.diagnosticRecordForSearchIdentifiesReturnedResources : undefined;
            resourceInputs["diagnosticTracingUpto"] = state ? state.diagnosticTracingUpto : undefined;
            resourceInputs["domainOcid"] = state ? state.domainOcid : undefined;
            resourceInputs["enableTermsOfUse"] = state ? state.enableTermsOfUse : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["iamUpstSessionExpiry"] = state ? state.iamUpstSessionExpiry : undefined;
            resourceInputs["idcsCreatedBies"] = state ? state.idcsCreatedBies : undefined;
            resourceInputs["idcsEndpoint"] = state ? state.idcsEndpoint : undefined;
            resourceInputs["idcsLastModifiedBies"] = state ? state.idcsLastModifiedBies : undefined;
            resourceInputs["idcsLastUpgradedInRelease"] = state ? state.idcsLastUpgradedInRelease : undefined;
            resourceInputs["idcsPreventedOperations"] = state ? state.idcsPreventedOperations : undefined;
            resourceInputs["images"] = state ? state.images : undefined;
            resourceInputs["isHostedPage"] = state ? state.isHostedPage : undefined;
            resourceInputs["issuer"] = state ? state.issuer : undefined;
            resourceInputs["locale"] = state ? state.locale : undefined;
            resourceInputs["loginTexts"] = state ? state.loginTexts : undefined;
            resourceInputs["maxNoOfAppCmvaToReturn"] = state ? state.maxNoOfAppCmvaToReturn : undefined;
            resourceInputs["maxNoOfAppRoleMembersToReturn"] = state ? state.maxNoOfAppRoleMembersToReturn : undefined;
            resourceInputs["metas"] = state ? state.metas : undefined;
            resourceInputs["migrationStatus"] = state ? state.migrationStatus : undefined;
            resourceInputs["ocid"] = state ? state.ocid : undefined;
            resourceInputs["onPremisesProvisioning"] = state ? state.onPremisesProvisioning : undefined;
            resourceInputs["preferredLanguage"] = state ? state.preferredLanguage : undefined;
            resourceInputs["prevIssuer"] = state ? state.prevIssuer : undefined;
            resourceInputs["privacyPolicyUrl"] = state ? state.privacyPolicyUrl : undefined;
            resourceInputs["purgeConfigs"] = state ? state.purgeConfigs : undefined;
            resourceInputs["reAuthFactors"] = state ? state.reAuthFactors : undefined;
            resourceInputs["reAuthWhenChangingMyAuthenticationFactors"] = state ? state.reAuthWhenChangingMyAuthenticationFactors : undefined;
            resourceInputs["resourceTypeSchemaVersion"] = state ? state.resourceTypeSchemaVersion : undefined;
            resourceInputs["schemas"] = state ? state.schemas : undefined;
            resourceInputs["serviceAdminCannotListOtherUsers"] = state ? state.serviceAdminCannotListOtherUsers : undefined;
            resourceInputs["settingId"] = state ? state.settingId : undefined;
            resourceInputs["signingCertPublicAccess"] = state ? state.signingCertPublicAccess : undefined;
            resourceInputs["subMappingAttr"] = state ? state.subMappingAttr : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenancyOcid"] = state ? state.tenancyOcid : undefined;
            resourceInputs["tenantCustomClaims"] = state ? state.tenantCustomClaims : undefined;
            resourceInputs["termsOfUseUrl"] = state ? state.termsOfUseUrl : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
        } else {
            const args = argsOrState as IdentityDomainsSettingArgs | undefined;
            if ((!args || args.csrAccess === undefined) && !opts.urn) {
                throw new Error("Missing required property 'csrAccess'");
            }
            if ((!args || args.idcsEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'idcsEndpoint'");
            }
            if ((!args || args.schemas === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schemas'");
            }
            if ((!args || args.settingId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'settingId'");
            }
            resourceInputs["accountAlwaysTrustScope"] = args ? args.accountAlwaysTrustScope : undefined;
            resourceInputs["allowedDomains"] = args ? args.allowedDomains : undefined;
            resourceInputs["allowedForgotPasswordFlowReturnUrls"] = args?.allowedForgotPasswordFlowReturnUrls ? pulumi.secret(args.allowedForgotPasswordFlowReturnUrls) : undefined;
            resourceInputs["allowedNotificationRedirectUrls"] = args ? args.allowedNotificationRedirectUrls : undefined;
            resourceInputs["attributeSets"] = args ? args.attributeSets : undefined;
            resourceInputs["attributes"] = args ? args.attributes : undefined;
            resourceInputs["auditEventRetentionPeriod"] = args ? args.auditEventRetentionPeriod : undefined;
            resourceInputs["authorization"] = args ? args.authorization : undefined;
            resourceInputs["certificateValidation"] = args ? args.certificateValidation : undefined;
            resourceInputs["cloudGateCorsSettings"] = args ? args.cloudGateCorsSettings : undefined;
            resourceInputs["cloudMigrationCustomUrl"] = args ? args.cloudMigrationCustomUrl : undefined;
            resourceInputs["cloudMigrationUrlEnabled"] = args ? args.cloudMigrationUrlEnabled : undefined;
            resourceInputs["companyNames"] = args ? args.companyNames : undefined;
            resourceInputs["contactEmails"] = args ? args.contactEmails : undefined;
            resourceInputs["csrAccess"] = args ? args.csrAccess : undefined;
            resourceInputs["customBranding"] = args ? args.customBranding : undefined;
            resourceInputs["customCssLocation"] = args ? args.customCssLocation : undefined;
            resourceInputs["customHtmlLocation"] = args ? args.customHtmlLocation : undefined;
            resourceInputs["customTranslation"] = args ? args.customTranslation : undefined;
            resourceInputs["defaultTrustScope"] = args ? args.defaultTrustScope : undefined;
            resourceInputs["diagnosticLevel"] = args ? args.diagnosticLevel : undefined;
            resourceInputs["diagnosticRecordForSearchIdentifiesReturnedResources"] = args ? args.diagnosticRecordForSearchIdentifiesReturnedResources : undefined;
            resourceInputs["enableTermsOfUse"] = args ? args.enableTermsOfUse : undefined;
            resourceInputs["externalId"] = args ? args.externalId : undefined;
            resourceInputs["iamUpstSessionExpiry"] = args ? args.iamUpstSessionExpiry : undefined;
            resourceInputs["idcsEndpoint"] = args ? args.idcsEndpoint : undefined;
            resourceInputs["images"] = args ? args.images : undefined;
            resourceInputs["isHostedPage"] = args ? args.isHostedPage : undefined;
            resourceInputs["issuer"] = args ? args.issuer : undefined;
            resourceInputs["locale"] = args ? args.locale : undefined;
            resourceInputs["loginTexts"] = args ? args.loginTexts : undefined;
            resourceInputs["maxNoOfAppCmvaToReturn"] = args ? args.maxNoOfAppCmvaToReturn : undefined;
            resourceInputs["maxNoOfAppRoleMembersToReturn"] = args ? args.maxNoOfAppRoleMembersToReturn : undefined;
            resourceInputs["ocid"] = args ? args.ocid : undefined;
            resourceInputs["preferredLanguage"] = args ? args.preferredLanguage : undefined;
            resourceInputs["prevIssuer"] = args ? args.prevIssuer : undefined;
            resourceInputs["privacyPolicyUrl"] = args ? args.privacyPolicyUrl : undefined;
            resourceInputs["purgeConfigs"] = args ? args.purgeConfigs : undefined;
            resourceInputs["reAuthFactors"] = args ? args.reAuthFactors : undefined;
            resourceInputs["reAuthWhenChangingMyAuthenticationFactors"] = args ? args.reAuthWhenChangingMyAuthenticationFactors : undefined;
            resourceInputs["resourceTypeSchemaVersion"] = args ? args.resourceTypeSchemaVersion : undefined;
            resourceInputs["schemas"] = args ? args.schemas : undefined;
            resourceInputs["serviceAdminCannotListOtherUsers"] = args ? args.serviceAdminCannotListOtherUsers : undefined;
            resourceInputs["settingId"] = args ? args.settingId : undefined;
            resourceInputs["signingCertPublicAccess"] = args ? args.signingCertPublicAccess : undefined;
            resourceInputs["subMappingAttr"] = args ? args.subMappingAttr : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantCustomClaims"] = args ? args.tenantCustomClaims : undefined;
            resourceInputs["termsOfUseUrl"] = args ? args.termsOfUseUrl : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["cloudAccountName"] = undefined /*out*/;
            resourceInputs["compartmentOcid"] = undefined /*out*/;
            resourceInputs["defaultCompanyNames"] = undefined /*out*/;
            resourceInputs["defaultImages"] = undefined /*out*/;
            resourceInputs["defaultLoginTexts"] = undefined /*out*/;
            resourceInputs["deleteInProgress"] = undefined /*out*/;
            resourceInputs["diagnosticTracingUpto"] = undefined /*out*/;
            resourceInputs["domainOcid"] = undefined /*out*/;
            resourceInputs["idcsCreatedBies"] = undefined /*out*/;
            resourceInputs["idcsLastModifiedBies"] = undefined /*out*/;
            resourceInputs["idcsLastUpgradedInRelease"] = undefined /*out*/;
            resourceInputs["idcsPreventedOperations"] = undefined /*out*/;
            resourceInputs["metas"] = undefined /*out*/;
            resourceInputs["migrationStatus"] = undefined /*out*/;
            resourceInputs["onPremisesProvisioning"] = undefined /*out*/;
            resourceInputs["tenancyOcid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["allowedForgotPasswordFlowReturnUrls"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(IdentityDomainsSetting.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IdentityDomainsSetting resources.
 */
export interface IdentityDomainsSettingState {
    accountAlwaysTrustScope?: pulumi.Input<boolean>;
    allowedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    allowedForgotPasswordFlowReturnUrls?: pulumi.Input<pulumi.Input<string>[]>;
    allowedNotificationRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    attributeSets?: pulumi.Input<pulumi.Input<string>[]>;
    attributes?: pulumi.Input<string>;
    auditEventRetentionPeriod?: pulumi.Input<number>;
    authorization?: pulumi.Input<string>;
    certificateValidation?: pulumi.Input<inputs.IdentityDomainsSettingCertificateValidation>;
    cloudAccountName?: pulumi.Input<string>;
    cloudGateCorsSettings?: pulumi.Input<inputs.IdentityDomainsSettingCloudGateCorsSettings>;
    cloudMigrationCustomUrl?: pulumi.Input<string>;
    cloudMigrationUrlEnabled?: pulumi.Input<boolean>;
    companyNames?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingCompanyName>[]>;
    compartmentOcid?: pulumi.Input<string>;
    contactEmails?: pulumi.Input<pulumi.Input<string>[]>;
    csrAccess?: pulumi.Input<string>;
    customBranding?: pulumi.Input<boolean>;
    customCssLocation?: pulumi.Input<string>;
    customHtmlLocation?: pulumi.Input<string>;
    customTranslation?: pulumi.Input<string>;
    defaultCompanyNames?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingDefaultCompanyName>[]>;
    defaultImages?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingDefaultImage>[]>;
    defaultLoginTexts?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingDefaultLoginText>[]>;
    defaultTrustScope?: pulumi.Input<string>;
    deleteInProgress?: pulumi.Input<boolean>;
    diagnosticLevel?: pulumi.Input<number>;
    diagnosticRecordForSearchIdentifiesReturnedResources?: pulumi.Input<boolean>;
    diagnosticTracingUpto?: pulumi.Input<string>;
    domainOcid?: pulumi.Input<string>;
    enableTermsOfUse?: pulumi.Input<boolean>;
    externalId?: pulumi.Input<string>;
    iamUpstSessionExpiry?: pulumi.Input<number>;
    idcsCreatedBies?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingIdcsCreatedBy>[]>;
    idcsEndpoint?: pulumi.Input<string>;
    idcsLastModifiedBies?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingIdcsLastModifiedBy>[]>;
    idcsLastUpgradedInRelease?: pulumi.Input<string>;
    idcsPreventedOperations?: pulumi.Input<pulumi.Input<string>[]>;
    images?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingImage>[]>;
    isHostedPage?: pulumi.Input<boolean>;
    issuer?: pulumi.Input<string>;
    locale?: pulumi.Input<string>;
    loginTexts?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingLoginText>[]>;
    maxNoOfAppCmvaToReturn?: pulumi.Input<number>;
    maxNoOfAppRoleMembersToReturn?: pulumi.Input<number>;
    metas?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingMeta>[]>;
    migrationStatus?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    onPremisesProvisioning?: pulumi.Input<boolean>;
    preferredLanguage?: pulumi.Input<string>;
    prevIssuer?: pulumi.Input<string>;
    privacyPolicyUrl?: pulumi.Input<string>;
    purgeConfigs?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingPurgeConfig>[]>;
    reAuthFactors?: pulumi.Input<pulumi.Input<string>[]>;
    reAuthWhenChangingMyAuthenticationFactors?: pulumi.Input<boolean>;
    resourceTypeSchemaVersion?: pulumi.Input<string>;
    schemas?: pulumi.Input<pulumi.Input<string>[]>;
    serviceAdminCannotListOtherUsers?: pulumi.Input<boolean>;
    settingId?: pulumi.Input<string>;
    signingCertPublicAccess?: pulumi.Input<boolean>;
    subMappingAttr?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingTag>[]>;
    tenancyOcid?: pulumi.Input<string>;
    tenantCustomClaims?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingTenantCustomClaim>[]>;
    termsOfUseUrl?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.IdentityDomainsSettingTimeouts>;
    timezone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IdentityDomainsSetting resource.
 */
export interface IdentityDomainsSettingArgs {
    accountAlwaysTrustScope?: pulumi.Input<boolean>;
    allowedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    allowedForgotPasswordFlowReturnUrls?: pulumi.Input<pulumi.Input<string>[]>;
    allowedNotificationRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    attributeSets?: pulumi.Input<pulumi.Input<string>[]>;
    attributes?: pulumi.Input<string>;
    auditEventRetentionPeriod?: pulumi.Input<number>;
    authorization?: pulumi.Input<string>;
    certificateValidation?: pulumi.Input<inputs.IdentityDomainsSettingCertificateValidation>;
    cloudGateCorsSettings?: pulumi.Input<inputs.IdentityDomainsSettingCloudGateCorsSettings>;
    cloudMigrationCustomUrl?: pulumi.Input<string>;
    cloudMigrationUrlEnabled?: pulumi.Input<boolean>;
    companyNames?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingCompanyName>[]>;
    contactEmails?: pulumi.Input<pulumi.Input<string>[]>;
    csrAccess: pulumi.Input<string>;
    customBranding?: pulumi.Input<boolean>;
    customCssLocation?: pulumi.Input<string>;
    customHtmlLocation?: pulumi.Input<string>;
    customTranslation?: pulumi.Input<string>;
    defaultTrustScope?: pulumi.Input<string>;
    diagnosticLevel?: pulumi.Input<number>;
    diagnosticRecordForSearchIdentifiesReturnedResources?: pulumi.Input<boolean>;
    enableTermsOfUse?: pulumi.Input<boolean>;
    externalId?: pulumi.Input<string>;
    iamUpstSessionExpiry?: pulumi.Input<number>;
    idcsEndpoint: pulumi.Input<string>;
    images?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingImage>[]>;
    isHostedPage?: pulumi.Input<boolean>;
    issuer?: pulumi.Input<string>;
    locale?: pulumi.Input<string>;
    loginTexts?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingLoginText>[]>;
    maxNoOfAppCmvaToReturn?: pulumi.Input<number>;
    maxNoOfAppRoleMembersToReturn?: pulumi.Input<number>;
    ocid?: pulumi.Input<string>;
    preferredLanguage?: pulumi.Input<string>;
    prevIssuer?: pulumi.Input<string>;
    privacyPolicyUrl?: pulumi.Input<string>;
    purgeConfigs?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingPurgeConfig>[]>;
    reAuthFactors?: pulumi.Input<pulumi.Input<string>[]>;
    reAuthWhenChangingMyAuthenticationFactors?: pulumi.Input<boolean>;
    resourceTypeSchemaVersion?: pulumi.Input<string>;
    schemas: pulumi.Input<pulumi.Input<string>[]>;
    serviceAdminCannotListOtherUsers?: pulumi.Input<boolean>;
    settingId: pulumi.Input<string>;
    signingCertPublicAccess?: pulumi.Input<boolean>;
    subMappingAttr?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingTag>[]>;
    tenantCustomClaims?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsSettingTenantCustomClaim>[]>;
    termsOfUseUrl?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.IdentityDomainsSettingTimeouts>;
    timezone?: pulumi.Input<string>;
}
