// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOpsiExadataInsights(args?: GetOpsiExadataInsightsArgs, opts?: pulumi.InvokeOptions): Promise<GetOpsiExadataInsightsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOpsiExadataInsights:getOpsiExadataInsights", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "enterpriseManagerBridgeId": args.enterpriseManagerBridgeId,
        "exadataTypes": args.exadataTypes,
        "filters": args.filters,
        "id": args.id,
        "states": args.states,
        "statuses": args.statuses,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpsiExadataInsights.
 */
export interface GetOpsiExadataInsightsArgs {
    compartmentId?: string;
    compartmentIdInSubtree?: boolean;
    enterpriseManagerBridgeId?: string;
    exadataTypes?: string[];
    filters?: inputs.GetOpsiExadataInsightsFilter[];
    id?: string;
    states?: string[];
    statuses?: string[];
}

/**
 * A collection of values returned by getOpsiExadataInsights.
 */
export interface GetOpsiExadataInsightsResult {
    readonly compartmentId?: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly enterpriseManagerBridgeId?: string;
    readonly exadataInsightSummaryCollections: outputs.GetOpsiExadataInsightsExadataInsightSummaryCollection[];
    readonly exadataTypes?: string[];
    readonly filters?: outputs.GetOpsiExadataInsightsFilter[];
    readonly id?: string;
    readonly states?: string[];
    readonly statuses?: string[];
}
export function getOpsiExadataInsightsOutput(args?: GetOpsiExadataInsightsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpsiExadataInsightsResult> {
    return pulumi.output(args).apply((a: any) => getOpsiExadataInsights(a, opts))
}

/**
 * A collection of arguments for invoking getOpsiExadataInsights.
 */
export interface GetOpsiExadataInsightsOutputArgs {
    compartmentId?: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    enterpriseManagerBridgeId?: pulumi.Input<string>;
    exadataTypes?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOpsiExadataInsightsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    states?: pulumi.Input<pulumi.Input<string>[]>;
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
}
