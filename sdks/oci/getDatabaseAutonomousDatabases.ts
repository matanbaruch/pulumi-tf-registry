// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseAutonomousDatabases(args: GetDatabaseAutonomousDatabasesArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseAutonomousDatabasesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseAutonomousDatabases:getDatabaseAutonomousDatabases", {
        "autonomousContainerDatabaseId": args.autonomousContainerDatabaseId,
        "compartmentId": args.compartmentId,
        "dbVersion": args.dbVersion,
        "dbWorkload": args.dbWorkload,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "infrastructureType": args.infrastructureType,
        "isDataGuardEnabled": args.isDataGuardEnabled,
        "isFreeTier": args.isFreeTier,
        "isRefreshableClone": args.isRefreshableClone,
        "isResourcePoolLeader": args.isResourcePoolLeader,
        "resourcePoolLeaderId": args.resourcePoolLeaderId,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseAutonomousDatabases.
 */
export interface GetDatabaseAutonomousDatabasesArgs {
    autonomousContainerDatabaseId?: string;
    compartmentId: string;
    dbVersion?: string;
    dbWorkload?: string;
    displayName?: string;
    filters?: inputs.GetDatabaseAutonomousDatabasesFilter[];
    id?: string;
    infrastructureType?: string;
    isDataGuardEnabled?: boolean;
    isFreeTier?: boolean;
    isRefreshableClone?: boolean;
    isResourcePoolLeader?: boolean;
    resourcePoolLeaderId?: string;
    state?: string;
}

/**
 * A collection of values returned by getDatabaseAutonomousDatabases.
 */
export interface GetDatabaseAutonomousDatabasesResult {
    readonly autonomousContainerDatabaseId?: string;
    readonly autonomousDatabases: outputs.GetDatabaseAutonomousDatabasesAutonomousDatabase[];
    readonly compartmentId: string;
    readonly dbVersion?: string;
    readonly dbWorkload?: string;
    readonly displayName?: string;
    readonly filters?: outputs.GetDatabaseAutonomousDatabasesFilter[];
    readonly id: string;
    readonly infrastructureType?: string;
    readonly isDataGuardEnabled?: boolean;
    readonly isFreeTier?: boolean;
    readonly isRefreshableClone?: boolean;
    readonly isResourcePoolLeader?: boolean;
    readonly resourcePoolLeaderId?: string;
    readonly state?: string;
}
export function getDatabaseAutonomousDatabasesOutput(args: GetDatabaseAutonomousDatabasesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseAutonomousDatabasesResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseAutonomousDatabases(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseAutonomousDatabases.
 */
export interface GetDatabaseAutonomousDatabasesOutputArgs {
    autonomousContainerDatabaseId?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    dbVersion?: pulumi.Input<string>;
    dbWorkload?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseAutonomousDatabasesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    infrastructureType?: pulumi.Input<string>;
    isDataGuardEnabled?: pulumi.Input<boolean>;
    isFreeTier?: pulumi.Input<boolean>;
    isRefreshableClone?: pulumi.Input<boolean>;
    isResourcePoolLeader?: pulumi.Input<boolean>;
    resourcePoolLeaderId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
