// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreCpeDeviceShape(args: GetCoreCpeDeviceShapeArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreCpeDeviceShapeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreCpeDeviceShape:getCoreCpeDeviceShape", {
        "cpeDeviceShapeId": args.cpeDeviceShapeId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreCpeDeviceShape.
 */
export interface GetCoreCpeDeviceShapeArgs {
    cpeDeviceShapeId: string;
    id?: string;
}

/**
 * A collection of values returned by getCoreCpeDeviceShape.
 */
export interface GetCoreCpeDeviceShapeResult {
    readonly cpeDeviceInfos: outputs.GetCoreCpeDeviceShapeCpeDeviceInfo[];
    readonly cpeDeviceShapeId: string;
    readonly id: string;
    readonly parameters: outputs.GetCoreCpeDeviceShapeParameter[];
    readonly template: string;
}
export function getCoreCpeDeviceShapeOutput(args: GetCoreCpeDeviceShapeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreCpeDeviceShapeResult> {
    return pulumi.output(args).apply((a: any) => getCoreCpeDeviceShape(a, opts))
}

/**
 * A collection of arguments for invoking getCoreCpeDeviceShape.
 */
export interface GetCoreCpeDeviceShapeOutputArgs {
    cpeDeviceShapeId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
