// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUsageProxySubscriptionRedemptions(args: GetUsageProxySubscriptionRedemptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetUsageProxySubscriptionRedemptionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getUsageProxySubscriptionRedemptions:getUsageProxySubscriptionRedemptions", {
        "filters": args.filters,
        "id": args.id,
        "subscriptionId": args.subscriptionId,
        "tenancyId": args.tenancyId,
        "timeRedeemedGreaterThanOrEqualTo": args.timeRedeemedGreaterThanOrEqualTo,
        "timeRedeemedLessThan": args.timeRedeemedLessThan,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUsageProxySubscriptionRedemptions.
 */
export interface GetUsageProxySubscriptionRedemptionsArgs {
    filters?: inputs.GetUsageProxySubscriptionRedemptionsFilter[];
    id?: string;
    subscriptionId: string;
    tenancyId: string;
    timeRedeemedGreaterThanOrEqualTo?: string;
    timeRedeemedLessThan?: string;
}

/**
 * A collection of values returned by getUsageProxySubscriptionRedemptions.
 */
export interface GetUsageProxySubscriptionRedemptionsResult {
    readonly filters?: outputs.GetUsageProxySubscriptionRedemptionsFilter[];
    readonly id: string;
    readonly redemptionCollections: outputs.GetUsageProxySubscriptionRedemptionsRedemptionCollection[];
    readonly subscriptionId: string;
    readonly tenancyId: string;
    readonly timeRedeemedGreaterThanOrEqualTo?: string;
    readonly timeRedeemedLessThan?: string;
}
export function getUsageProxySubscriptionRedemptionsOutput(args: GetUsageProxySubscriptionRedemptionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUsageProxySubscriptionRedemptionsResult> {
    return pulumi.output(args).apply((a: any) => getUsageProxySubscriptionRedemptions(a, opts))
}

/**
 * A collection of arguments for invoking getUsageProxySubscriptionRedemptions.
 */
export interface GetUsageProxySubscriptionRedemptionsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetUsageProxySubscriptionRedemptionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    subscriptionId: pulumi.Input<string>;
    tenancyId: pulumi.Input<string>;
    timeRedeemedGreaterThanOrEqualTo?: pulumi.Input<string>;
    timeRedeemedLessThan?: pulumi.Input<string>;
}
