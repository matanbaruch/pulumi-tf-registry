// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCoreCrossConnectStatus(args: GetCoreCrossConnectStatusArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreCrossConnectStatusResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreCrossConnectStatus:getCoreCrossConnectStatus", {
        "crossConnectId": args.crossConnectId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreCrossConnectStatus.
 */
export interface GetCoreCrossConnectStatusArgs {
    crossConnectId: string;
    id?: string;
}

/**
 * A collection of values returned by getCoreCrossConnectStatus.
 */
export interface GetCoreCrossConnectStatusResult {
    readonly crossConnectId: string;
    readonly encryptionStatus: string;
    readonly id: string;
    readonly interfaceState: string;
    readonly lightLevelIndBm: number;
    readonly lightLevelIndicator: string;
}
export function getCoreCrossConnectStatusOutput(args: GetCoreCrossConnectStatusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreCrossConnectStatusResult> {
    return pulumi.output(args).apply((a: any) => getCoreCrossConnectStatus(a, opts))
}

/**
 * A collection of arguments for invoking getCoreCrossConnectStatus.
 */
export interface GetCoreCrossConnectStatusOutputArgs {
    crossConnectId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
