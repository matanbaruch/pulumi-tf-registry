// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeDataSafeConfiguration(args: GetDataSafeDataSafeConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeDataSafeConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeDataSafeConfiguration:getDataSafeDataSafeConfiguration", {
        "compartmentId": args.compartmentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeDataSafeConfiguration.
 */
export interface GetDataSafeDataSafeConfigurationArgs {
    compartmentId: string;
}

/**
 * A collection of values returned by getDataSafeDataSafeConfiguration.
 */
export interface GetDataSafeDataSafeConfigurationResult {
    readonly compartmentId: string;
    readonly dataSafeNatGatewayIpAddress: string;
    readonly definedTags: {[key: string]: string};
    readonly freeformTags: {[key: string]: string};
    readonly globalSettings: outputs.GetDataSafeDataSafeConfigurationGlobalSetting[];
    readonly id: string;
    readonly isEnabled: boolean;
    readonly state: string;
    readonly timeEnabled: string;
    readonly url: string;
}
export function getDataSafeDataSafeConfigurationOutput(args: GetDataSafeDataSafeConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeDataSafeConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeDataSafeConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeDataSafeConfiguration.
 */
export interface GetDataSafeDataSafeConfigurationOutputArgs {
    compartmentId: pulumi.Input<string>;
}
