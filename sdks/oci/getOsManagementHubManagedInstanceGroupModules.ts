// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsManagementHubManagedInstanceGroupModules(args: GetOsManagementHubManagedInstanceGroupModulesArgs, opts?: pulumi.InvokeOptions): Promise<GetOsManagementHubManagedInstanceGroupModulesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsManagementHubManagedInstanceGroupModules:getOsManagementHubManagedInstanceGroupModules", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "managedInstanceGroupId": args.managedInstanceGroupId,
        "name": args.name,
        "nameContains": args.nameContains,
        "streamName": args.streamName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsManagementHubManagedInstanceGroupModules.
 */
export interface GetOsManagementHubManagedInstanceGroupModulesArgs {
    compartmentId?: string;
    filters?: inputs.GetOsManagementHubManagedInstanceGroupModulesFilter[];
    id?: string;
    managedInstanceGroupId: string;
    name?: string;
    nameContains?: string;
    streamName?: string;
}

/**
 * A collection of values returned by getOsManagementHubManagedInstanceGroupModules.
 */
export interface GetOsManagementHubManagedInstanceGroupModulesResult {
    readonly compartmentId?: string;
    readonly filters?: outputs.GetOsManagementHubManagedInstanceGroupModulesFilter[];
    readonly id: string;
    readonly managedInstanceGroupId: string;
    readonly managedInstanceGroupModuleCollections: outputs.GetOsManagementHubManagedInstanceGroupModulesManagedInstanceGroupModuleCollection[];
    readonly name?: string;
    readonly nameContains?: string;
    readonly streamName?: string;
}
export function getOsManagementHubManagedInstanceGroupModulesOutput(args: GetOsManagementHubManagedInstanceGroupModulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsManagementHubManagedInstanceGroupModulesResult> {
    return pulumi.output(args).apply((a: any) => getOsManagementHubManagedInstanceGroupModules(a, opts))
}

/**
 * A collection of arguments for invoking getOsManagementHubManagedInstanceGroupModules.
 */
export interface GetOsManagementHubManagedInstanceGroupModulesOutputArgs {
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOsManagementHubManagedInstanceGroupModulesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    managedInstanceGroupId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameContains?: pulumi.Input<string>;
    streamName?: pulumi.Input<string>;
}
