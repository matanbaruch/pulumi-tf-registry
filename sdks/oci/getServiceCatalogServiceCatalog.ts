// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getServiceCatalogServiceCatalog(args: GetServiceCatalogServiceCatalogArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceCatalogServiceCatalogResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getServiceCatalogServiceCatalog:getServiceCatalogServiceCatalog", {
        "serviceCatalogId": args.serviceCatalogId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceCatalogServiceCatalog.
 */
export interface GetServiceCatalogServiceCatalogArgs {
    serviceCatalogId: string;
}

/**
 * A collection of values returned by getServiceCatalogServiceCatalog.
 */
export interface GetServiceCatalogServiceCatalogResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly serviceCatalogId: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getServiceCatalogServiceCatalogOutput(args: GetServiceCatalogServiceCatalogOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceCatalogServiceCatalogResult> {
    return pulumi.output(args).apply((a: any) => getServiceCatalogServiceCatalog(a, opts))
}

/**
 * A collection of arguments for invoking getServiceCatalogServiceCatalog.
 */
export interface GetServiceCatalogServiceCatalogOutputArgs {
    serviceCatalogId: pulumi.Input<string>;
}
