// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudMigrationsReplicationSchedule(args: GetCloudMigrationsReplicationScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudMigrationsReplicationScheduleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCloudMigrationsReplicationSchedule:getCloudMigrationsReplicationSchedule", {
        "replicationScheduleId": args.replicationScheduleId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudMigrationsReplicationSchedule.
 */
export interface GetCloudMigrationsReplicationScheduleArgs {
    replicationScheduleId: string;
}

/**
 * A collection of values returned by getCloudMigrationsReplicationSchedule.
 */
export interface GetCloudMigrationsReplicationScheduleResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly executionRecurrences: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly replicationScheduleId: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getCloudMigrationsReplicationScheduleOutput(args: GetCloudMigrationsReplicationScheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudMigrationsReplicationScheduleResult> {
    return pulumi.output(args).apply((a: any) => getCloudMigrationsReplicationSchedule(a, opts))
}

/**
 * A collection of arguments for invoking getCloudMigrationsReplicationSchedule.
 */
export interface GetCloudMigrationsReplicationScheduleOutputArgs {
    replicationScheduleId: pulumi.Input<string>;
}
