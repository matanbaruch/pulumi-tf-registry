// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseGiVersions(args: GetDatabaseGiVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseGiVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseGiVersions:getDatabaseGiVersions", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "shape": args.shape,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseGiVersions.
 */
export interface GetDatabaseGiVersionsArgs {
    availabilityDomain?: string;
    compartmentId: string;
    filters?: inputs.GetDatabaseGiVersionsFilter[];
    id?: string;
    shape?: string;
}

/**
 * A collection of values returned by getDatabaseGiVersions.
 */
export interface GetDatabaseGiVersionsResult {
    readonly availabilityDomain?: string;
    readonly compartmentId: string;
    readonly filters?: outputs.GetDatabaseGiVersionsFilter[];
    readonly giVersions: outputs.GetDatabaseGiVersionsGiVersion[];
    readonly id: string;
    readonly shape?: string;
}
export function getDatabaseGiVersionsOutput(args: GetDatabaseGiVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseGiVersionsResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseGiVersions(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseGiVersions.
 */
export interface GetDatabaseGiVersionsOutputArgs {
    availabilityDomain?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseGiVersionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    shape?: pulumi.Input<string>;
}
