// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOpensearchOpensearchVersions(args: GetOpensearchOpensearchVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetOpensearchOpensearchVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOpensearchOpensearchVersions:getOpensearchOpensearchVersions", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpensearchOpensearchVersions.
 */
export interface GetOpensearchOpensearchVersionsArgs {
    compartmentId: string;
    filters?: inputs.GetOpensearchOpensearchVersionsFilter[];
    id?: string;
}

/**
 * A collection of values returned by getOpensearchOpensearchVersions.
 */
export interface GetOpensearchOpensearchVersionsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.GetOpensearchOpensearchVersionsFilter[];
    readonly id: string;
    readonly opensearchVersionsCollections: outputs.GetOpensearchOpensearchVersionsOpensearchVersionsCollection[];
}
export function getOpensearchOpensearchVersionsOutput(args: GetOpensearchOpensearchVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpensearchOpensearchVersionsResult> {
    return pulumi.output(args).apply((a: any) => getOpensearchOpensearchVersions(a, opts))
}

/**
 * A collection of arguments for invoking getOpensearchOpensearchVersions.
 */
export interface GetOpensearchOpensearchVersionsOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOpensearchOpensearchVersionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
