// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKmsVaults(args: GetKmsVaultsArgs, opts?: pulumi.InvokeOptions): Promise<GetKmsVaultsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getKmsVaults:getKmsVaults", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsVaults.
 */
export interface GetKmsVaultsArgs {
    compartmentId: string;
    filters?: inputs.GetKmsVaultsFilter[];
    id?: string;
}

/**
 * A collection of values returned by getKmsVaults.
 */
export interface GetKmsVaultsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.GetKmsVaultsFilter[];
    readonly id: string;
    readonly vaults: outputs.GetKmsVaultsVault[];
}
export function getKmsVaultsOutput(args: GetKmsVaultsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKmsVaultsResult> {
    return pulumi.output(args).apply((a: any) => getKmsVaults(a, opts))
}

/**
 * A collection of arguments for invoking getKmsVaults.
 */
export interface GetKmsVaultsOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetKmsVaultsFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
