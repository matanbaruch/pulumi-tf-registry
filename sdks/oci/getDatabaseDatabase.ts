// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseDatabase(args: GetDatabaseDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseDatabase:getDatabaseDatabase", {
        "databaseId": args.databaseId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseDatabase.
 */
export interface GetDatabaseDatabaseArgs {
    databaseId: string;
}

/**
 * A collection of values returned by getDatabaseDatabase.
 */
export interface GetDatabaseDatabaseResult {
    readonly characterSet: string;
    readonly compartmentId: string;
    readonly connectionStrings: outputs.GetDatabaseDatabaseConnectionString[];
    readonly databaseId: string;
    readonly databaseManagementConfigs: outputs.GetDatabaseDatabaseDatabaseManagementConfig[];
    readonly databaseSoftwareImageId: string;
    readonly databases: outputs.GetDatabaseDatabaseDatabase[];
    readonly dbBackupConfigs: outputs.GetDatabaseDatabaseDbBackupConfig[];
    readonly dbHomeId: string;
    readonly dbName: string;
    readonly dbSystemId: string;
    readonly dbUniqueName: string;
    readonly dbVersion: string;
    readonly dbWorkload: string;
    readonly definedTags: {[key: string]: string};
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isCdb: boolean;
    readonly keyStoreId: string;
    readonly keyStoreWalletName: string;
    readonly kmsKeyId: string;
    readonly kmsKeyMigration: boolean;
    readonly kmsKeyRotation: number;
    readonly kmsKeyVersionId: string;
    readonly lastBackupDurationInSeconds: number;
    readonly lastBackupTimestamp: string;
    readonly lastFailedBackupTimestamp: string;
    readonly lifecycleDetails: string;
    readonly ncharacterSet: string;
    readonly pdbName: string;
    readonly sidPrefix: string;
    readonly source: string;
    readonly sourceDatabasePointInTimeRecoveryTimestamp: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly vaultId: string;
    readonly vmClusterId: string;
}
export function getDatabaseDatabaseOutput(args: GetDatabaseDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseDatabase.
 */
export interface GetDatabaseDatabaseOutputArgs {
    databaseId: pulumi.Input<string>;
}
