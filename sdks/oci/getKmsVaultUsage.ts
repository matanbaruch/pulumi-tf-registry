// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKmsVaultUsage(args: GetKmsVaultUsageArgs, opts?: pulumi.InvokeOptions): Promise<GetKmsVaultUsageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getKmsVaultUsage:getKmsVaultUsage", {
        "id": args.id,
        "vaultId": args.vaultId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsVaultUsage.
 */
export interface GetKmsVaultUsageArgs {
    id?: string;
    vaultId: string;
}

/**
 * A collection of values returned by getKmsVaultUsage.
 */
export interface GetKmsVaultUsageResult {
    readonly id: string;
    readonly keyCount: number;
    readonly keyVersionCount: number;
    readonly softwareKeyCount: number;
    readonly softwareKeyVersionCount: number;
    readonly vaultId: string;
}
export function getKmsVaultUsageOutput(args: GetKmsVaultUsageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKmsVaultUsageResult> {
    return pulumi.output(args).apply((a: any) => getKmsVaultUsage(a, opts))
}

/**
 * A collection of arguments for invoking getKmsVaultUsage.
 */
export interface GetKmsVaultUsageOutputArgs {
    id?: pulumi.Input<string>;
    vaultId: pulumi.Input<string>;
}
