// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeAuditPolicy(args: GetDataSafeAuditPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeAuditPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeAuditPolicy:getDataSafeAuditPolicy", {
        "auditPolicyId": args.auditPolicyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeAuditPolicy.
 */
export interface GetDataSafeAuditPolicyArgs {
    auditPolicyId: string;
}

/**
 * A collection of values returned by getDataSafeAuditPolicy.
 */
export interface GetDataSafeAuditPolicyResult {
    readonly auditConditions: outputs.GetDataSafeAuditPolicyAuditCondition[];
    readonly auditPolicyId: string;
    readonly auditSpecifications: outputs.GetDataSafeAuditPolicyAuditSpecification[];
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isDataSafeServiceAccountExcluded: boolean;
    readonly lifecycleDetails: string;
    readonly provisionTrigger: number;
    readonly retrieveFromTargetTrigger: number;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly targetId: string;
    readonly timeCreated: string;
    readonly timeLastProvisioned: string;
    readonly timeLastRetrieved: string;
    readonly timeUpdated: string;
}
export function getDataSafeAuditPolicyOutput(args: GetDataSafeAuditPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeAuditPolicyResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeAuditPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeAuditPolicy.
 */
export interface GetDataSafeAuditPolicyOutputArgs {
    auditPolicyId: pulumi.Input<string>;
}
