// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogAnalyticsLogAnalyticsLogGroup(args: GetLogAnalyticsLogAnalyticsLogGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsLogAnalyticsLogGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLogAnalyticsLogAnalyticsLogGroup:getLogAnalyticsLogAnalyticsLogGroup", {
        "logAnalyticsLogGroupId": args.logAnalyticsLogGroupId,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogAnalyticsLogAnalyticsLogGroup.
 */
export interface GetLogAnalyticsLogAnalyticsLogGroupArgs {
    logAnalyticsLogGroupId: string;
    namespace: string;
}

/**
 * A collection of values returned by getLogAnalyticsLogAnalyticsLogGroup.
 */
export interface GetLogAnalyticsLogAnalyticsLogGroupResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly logAnalyticsLogGroupId: string;
    readonly namespace: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getLogAnalyticsLogAnalyticsLogGroupOutput(args: GetLogAnalyticsLogAnalyticsLogGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsLogAnalyticsLogGroupResult> {
    return pulumi.output(args).apply((a: any) => getLogAnalyticsLogAnalyticsLogGroup(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsLogAnalyticsLogGroup.
 */
export interface GetLogAnalyticsLogAnalyticsLogGroupOutputArgs {
    logAnalyticsLogGroupId: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
}
