// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabasePluggableDatabase(args: GetDatabasePluggableDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabasePluggableDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabasePluggableDatabase:getDatabasePluggableDatabase", {
        "pluggableDatabaseId": args.pluggableDatabaseId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabasePluggableDatabase.
 */
export interface GetDatabasePluggableDatabaseArgs {
    pluggableDatabaseId: string;
}

/**
 * A collection of values returned by getDatabasePluggableDatabase.
 */
export interface GetDatabasePluggableDatabaseResult {
    readonly compartmentId: string;
    readonly connectionStrings: outputs.GetDatabasePluggableDatabaseConnectionString[];
    readonly containerDatabaseAdminPassword: string;
    readonly containerDatabaseId: string;
    readonly convertToRegularTrigger: number;
    readonly definedTags: {[key: string]: string};
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isRestricted: boolean;
    readonly lifecycleDetails: string;
    readonly openMode: string;
    readonly pdbAdminPassword: string;
    readonly pdbCreationTypeDetails: outputs.GetDatabasePluggableDatabasePdbCreationTypeDetail[];
    readonly pdbName: string;
    readonly pdbNodeLevelDetails: outputs.GetDatabasePluggableDatabasePdbNodeLevelDetail[];
    readonly pluggableDatabaseId: string;
    readonly pluggableDatabaseManagementConfigs: outputs.GetDatabasePluggableDatabasePluggableDatabaseManagementConfig[];
    readonly refreshTrigger: number;
    readonly refreshableCloneConfigs: outputs.GetDatabasePluggableDatabaseRefreshableCloneConfig[];
    readonly rotateKeyTrigger: number;
    readonly shouldCreatePdbBackup: boolean;
    readonly shouldPdbAdminAccountBeLocked: boolean;
    readonly state: string;
    readonly tdeWalletPassword: string;
    readonly timeCreated: string;
}
export function getDatabasePluggableDatabaseOutput(args: GetDatabasePluggableDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabasePluggableDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getDatabasePluggableDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getDatabasePluggableDatabase.
 */
export interface GetDatabasePluggableDatabaseOutputArgs {
    pluggableDatabaseId: pulumi.Input<string>;
}
