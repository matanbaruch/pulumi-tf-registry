// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVisualBuilderVbInstance(args: GetVisualBuilderVbInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetVisualBuilderVbInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getVisualBuilderVbInstance:getVisualBuilderVbInstance", {
        "vbInstanceId": args.vbInstanceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVisualBuilderVbInstance.
 */
export interface GetVisualBuilderVbInstanceArgs {
    vbInstanceId: string;
}

/**
 * A collection of values returned by getVisualBuilderVbInstance.
 */
export interface GetVisualBuilderVbInstanceResult {
    readonly alternateCustomEndpoints: outputs.GetVisualBuilderVbInstanceAlternateCustomEndpoint[];
    readonly attachments: outputs.GetVisualBuilderVbInstanceAttachment[];
    readonly compartmentId: string;
    readonly consumptionModel: string;
    readonly customEndpoints: outputs.GetVisualBuilderVbInstanceCustomEndpoint[];
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly idcsInfos: outputs.GetVisualBuilderVbInstanceIdcsInfo[];
    readonly idcsOpenId: string;
    readonly instanceUrl: string;
    readonly isVisualBuilderEnabled: boolean;
    readonly managementNatGatewayIp: string;
    readonly managementVcnId: string;
    readonly nodeCount: number;
    readonly serviceNatGatewayIp: string;
    readonly serviceVcnId: string;
    readonly state: string;
    readonly stateMessage: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly vbInstanceId: string;
}
export function getVisualBuilderVbInstanceOutput(args: GetVisualBuilderVbInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVisualBuilderVbInstanceResult> {
    return pulumi.output(args).apply((a: any) => getVisualBuilderVbInstance(a, opts))
}

/**
 * A collection of arguments for invoking getVisualBuilderVbInstance.
 */
export interface GetVisualBuilderVbInstanceOutputArgs {
    vbInstanceId: pulumi.Input<string>;
}
