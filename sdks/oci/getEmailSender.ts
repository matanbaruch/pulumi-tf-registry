// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEmailSender(args: GetEmailSenderArgs, opts?: pulumi.InvokeOptions): Promise<GetEmailSenderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getEmailSender:getEmailSender", {
        "senderId": args.senderId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEmailSender.
 */
export interface GetEmailSenderArgs {
    senderId: string;
}

/**
 * A collection of values returned by getEmailSender.
 */
export interface GetEmailSenderResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly emailAddress: string;
    readonly emailDomainId: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isSpf: boolean;
    readonly senderId: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
}
export function getEmailSenderOutput(args: GetEmailSenderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmailSenderResult> {
    return pulumi.output(args).apply((a: any) => getEmailSender(a, opts))
}

/**
 * A collection of arguments for invoking getEmailSender.
 */
export interface GetEmailSenderOutputArgs {
    senderId: pulumi.Input<string>;
}
