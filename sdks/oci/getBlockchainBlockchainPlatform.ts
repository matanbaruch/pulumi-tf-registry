// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBlockchainBlockchainPlatform(args: GetBlockchainBlockchainPlatformArgs, opts?: pulumi.InvokeOptions): Promise<GetBlockchainBlockchainPlatformResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getBlockchainBlockchainPlatform:getBlockchainBlockchainPlatform", {
        "blockchainPlatformId": args.blockchainPlatformId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlockchainBlockchainPlatform.
 */
export interface GetBlockchainBlockchainPlatformArgs {
    blockchainPlatformId: string;
}

/**
 * A collection of values returned by getBlockchainBlockchainPlatform.
 */
export interface GetBlockchainBlockchainPlatformResult {
    readonly blockchainPlatformId: string;
    readonly caCertArchiveText: string;
    readonly compartmentId: string;
    readonly componentDetails: outputs.GetBlockchainBlockchainPlatformComponentDetail[];
    readonly computeShape: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly federatedUserId: string;
    readonly freeformTags: {[key: string]: string};
    readonly hostOcpuUtilizationInfos: outputs.GetBlockchainBlockchainPlatformHostOcpuUtilizationInfo[];
    readonly id: string;
    readonly idcsAccessToken: string;
    readonly isByol: boolean;
    readonly isMultiAd: boolean;
    readonly lifecycleDetails: string;
    readonly loadBalancerShape: string;
    readonly platformRole: string;
    readonly platformShapeType: string;
    readonly platformVersion: string;
    readonly replicas: outputs.GetBlockchainBlockchainPlatformReplica[];
    readonly serviceEndpoint: string;
    readonly serviceVersion: string;
    readonly state: string;
    readonly storageSizeInTbs: number;
    readonly storageUsedInTbs: number;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly totalOcpuCapacity: number;
}
export function getBlockchainBlockchainPlatformOutput(args: GetBlockchainBlockchainPlatformOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlockchainBlockchainPlatformResult> {
    return pulumi.output(args).apply((a: any) => getBlockchainBlockchainPlatform(a, opts))
}

/**
 * A collection of arguments for invoking getBlockchainBlockchainPlatform.
 */
export interface GetBlockchainBlockchainPlatformOutputArgs {
    blockchainPlatformId: pulumi.Input<string>;
}
