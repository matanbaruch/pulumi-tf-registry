// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGenerativeAiDedicatedAiClusters(args: GetGenerativeAiDedicatedAiClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetGenerativeAiDedicatedAiClustersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getGenerativeAiDedicatedAiClusters:getGenerativeAiDedicatedAiClusters", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGenerativeAiDedicatedAiClusters.
 */
export interface GetGenerativeAiDedicatedAiClustersArgs {
    compartmentId: string;
    displayName?: string;
    filters?: inputs.GetGenerativeAiDedicatedAiClustersFilter[];
    id?: string;
    state?: string;
}

/**
 * A collection of values returned by getGenerativeAiDedicatedAiClusters.
 */
export interface GetGenerativeAiDedicatedAiClustersResult {
    readonly compartmentId: string;
    readonly dedicatedAiClusterCollections: outputs.GetGenerativeAiDedicatedAiClustersDedicatedAiClusterCollection[];
    readonly displayName?: string;
    readonly filters?: outputs.GetGenerativeAiDedicatedAiClustersFilter[];
    readonly id?: string;
    readonly state?: string;
}
export function getGenerativeAiDedicatedAiClustersOutput(args: GetGenerativeAiDedicatedAiClustersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGenerativeAiDedicatedAiClustersResult> {
    return pulumi.output(args).apply((a: any) => getGenerativeAiDedicatedAiClusters(a, opts))
}

/**
 * A collection of arguments for invoking getGenerativeAiDedicatedAiClusters.
 */
export interface GetGenerativeAiDedicatedAiClustersOutputArgs {
    compartmentId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetGenerativeAiDedicatedAiClustersFilterArgs>[]>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
