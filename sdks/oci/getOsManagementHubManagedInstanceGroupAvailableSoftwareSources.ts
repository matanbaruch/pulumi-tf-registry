// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsManagementHubManagedInstanceGroupAvailableSoftwareSources(args: GetOsManagementHubManagedInstanceGroupAvailableSoftwareSourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetOsManagementHubManagedInstanceGroupAvailableSoftwareSourcesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsManagementHubManagedInstanceGroupAvailableSoftwareSources:getOsManagementHubManagedInstanceGroupAvailableSoftwareSources", {
        "compartmentId": args.compartmentId,
        "displayNameContains": args.displayNameContains,
        "displayNames": args.displayNames,
        "filters": args.filters,
        "id": args.id,
        "managedInstanceGroupId": args.managedInstanceGroupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsManagementHubManagedInstanceGroupAvailableSoftwareSources.
 */
export interface GetOsManagementHubManagedInstanceGroupAvailableSoftwareSourcesArgs {
    compartmentId?: string;
    displayNameContains?: string;
    displayNames?: string[];
    filters?: inputs.GetOsManagementHubManagedInstanceGroupAvailableSoftwareSourcesFilter[];
    id?: string;
    managedInstanceGroupId: string;
}

/**
 * A collection of values returned by getOsManagementHubManagedInstanceGroupAvailableSoftwareSources.
 */
export interface GetOsManagementHubManagedInstanceGroupAvailableSoftwareSourcesResult {
    readonly availableSoftwareSourceCollections: outputs.GetOsManagementHubManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection[];
    readonly compartmentId?: string;
    readonly displayNameContains?: string;
    readonly displayNames?: string[];
    readonly filters?: outputs.GetOsManagementHubManagedInstanceGroupAvailableSoftwareSourcesFilter[];
    readonly id: string;
    readonly managedInstanceGroupId: string;
}
export function getOsManagementHubManagedInstanceGroupAvailableSoftwareSourcesOutput(args: GetOsManagementHubManagedInstanceGroupAvailableSoftwareSourcesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsManagementHubManagedInstanceGroupAvailableSoftwareSourcesResult> {
    return pulumi.output(args).apply((a: any) => getOsManagementHubManagedInstanceGroupAvailableSoftwareSources(a, opts))
}

/**
 * A collection of arguments for invoking getOsManagementHubManagedInstanceGroupAvailableSoftwareSources.
 */
export interface GetOsManagementHubManagedInstanceGroupAvailableSoftwareSourcesOutputArgs {
    compartmentId?: pulumi.Input<string>;
    displayNameContains?: pulumi.Input<string>;
    displayNames?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOsManagementHubManagedInstanceGroupAvailableSoftwareSourcesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    managedInstanceGroupId: pulumi.Input<string>;
}
