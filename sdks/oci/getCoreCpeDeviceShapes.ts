// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreCpeDeviceShapes(args?: GetCoreCpeDeviceShapesArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreCpeDeviceShapesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreCpeDeviceShapes:getCoreCpeDeviceShapes", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreCpeDeviceShapes.
 */
export interface GetCoreCpeDeviceShapesArgs {
    filters?: inputs.GetCoreCpeDeviceShapesFilter[];
    id?: string;
}

/**
 * A collection of values returned by getCoreCpeDeviceShapes.
 */
export interface GetCoreCpeDeviceShapesResult {
    readonly cpeDeviceShapes: outputs.GetCoreCpeDeviceShapesCpeDeviceShape[];
    readonly filters?: outputs.GetCoreCpeDeviceShapesFilter[];
    readonly id: string;
}
export function getCoreCpeDeviceShapesOutput(args?: GetCoreCpeDeviceShapesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreCpeDeviceShapesResult> {
    return pulumi.output(args).apply((a: any) => getCoreCpeDeviceShapes(a, opts))
}

/**
 * A collection of arguments for invoking getCoreCpeDeviceShapes.
 */
export interface GetCoreCpeDeviceShapesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetCoreCpeDeviceShapesFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
