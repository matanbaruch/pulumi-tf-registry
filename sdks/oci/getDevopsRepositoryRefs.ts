// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDevopsRepositoryRefs(args: GetDevopsRepositoryRefsArgs, opts?: pulumi.InvokeOptions): Promise<GetDevopsRepositoryRefsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDevopsRepositoryRefs:getDevopsRepositoryRefs", {
        "commitId": args.commitId,
        "filters": args.filters,
        "id": args.id,
        "refName": args.refName,
        "refType": args.refType,
        "repositoryId": args.repositoryId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDevopsRepositoryRefs.
 */
export interface GetDevopsRepositoryRefsArgs {
    commitId?: string;
    filters?: inputs.GetDevopsRepositoryRefsFilter[];
    id?: string;
    refName?: string;
    refType?: string;
    repositoryId: string;
}

/**
 * A collection of values returned by getDevopsRepositoryRefs.
 */
export interface GetDevopsRepositoryRefsResult {
    readonly commitId?: string;
    readonly filters?: outputs.GetDevopsRepositoryRefsFilter[];
    readonly id: string;
    readonly refName?: string;
    readonly refType?: string;
    readonly repositoryId: string;
    readonly repositoryRefCollections: outputs.GetDevopsRepositoryRefsRepositoryRefCollection[];
}
export function getDevopsRepositoryRefsOutput(args: GetDevopsRepositoryRefsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDevopsRepositoryRefsResult> {
    return pulumi.output(args).apply((a: any) => getDevopsRepositoryRefs(a, opts))
}

/**
 * A collection of arguments for invoking getDevopsRepositoryRefs.
 */
export interface GetDevopsRepositoryRefsOutputArgs {
    commitId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDevopsRepositoryRefsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    refName?: pulumi.Input<string>;
    refType?: pulumi.Input<string>;
    repositoryId: pulumi.Input<string>;
}
