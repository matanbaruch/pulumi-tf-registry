// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCoreNatGateway(args: GetCoreNatGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreNatGatewayResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreNatGateway:getCoreNatGateway", {
        "natGatewayId": args.natGatewayId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreNatGateway.
 */
export interface GetCoreNatGatewayArgs {
    natGatewayId: string;
}

/**
 * A collection of values returned by getCoreNatGateway.
 */
export interface GetCoreNatGatewayResult {
    readonly blockTraffic: boolean;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly natGatewayId: string;
    readonly natIp: string;
    readonly publicIpId: string;
    readonly routeTableId: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly vcnId: string;
}
export function getCoreNatGatewayOutput(args: GetCoreNatGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreNatGatewayResult> {
    return pulumi.output(args).apply((a: any) => getCoreNatGateway(a, opts))
}

/**
 * A collection of arguments for invoking getCoreNatGateway.
 */
export interface GetCoreNatGatewayOutputArgs {
    natGatewayId: pulumi.Input<string>;
}
