// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCertificatesManagementCertificateAuthorityVersion(args: GetCertificatesManagementCertificateAuthorityVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificatesManagementCertificateAuthorityVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCertificatesManagementCertificateAuthorityVersion:getCertificatesManagementCertificateAuthorityVersion", {
        "certificateAuthorityId": args.certificateAuthorityId,
        "certificateAuthorityVersionNumber": args.certificateAuthorityVersionNumber,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCertificatesManagementCertificateAuthorityVersion.
 */
export interface GetCertificatesManagementCertificateAuthorityVersionArgs {
    certificateAuthorityId: string;
    certificateAuthorityVersionNumber: string;
    id?: string;
}

/**
 * A collection of values returned by getCertificatesManagementCertificateAuthorityVersion.
 */
export interface GetCertificatesManagementCertificateAuthorityVersionResult {
    readonly certificateAuthorityId: string;
    readonly certificateAuthorityVersionNumber: string;
    readonly id: string;
    readonly issuerCaVersionNumber: string;
    readonly revocationStatuses: outputs.GetCertificatesManagementCertificateAuthorityVersionRevocationStatus[];
    readonly serialNumber: string;
    readonly stages: string[];
    readonly subjectAlternativeNames: outputs.GetCertificatesManagementCertificateAuthorityVersionSubjectAlternativeName[];
    readonly timeCreated: string;
    readonly timeOfDeletion: string;
    readonly validities: outputs.GetCertificatesManagementCertificateAuthorityVersionValidity[];
    readonly versionName: string;
    readonly versionNumber: string;
}
export function getCertificatesManagementCertificateAuthorityVersionOutput(args: GetCertificatesManagementCertificateAuthorityVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificatesManagementCertificateAuthorityVersionResult> {
    return pulumi.output(args).apply((a: any) => getCertificatesManagementCertificateAuthorityVersion(a, opts))
}

/**
 * A collection of arguments for invoking getCertificatesManagementCertificateAuthorityVersion.
 */
export interface GetCertificatesManagementCertificateAuthorityVersionOutputArgs {
    certificateAuthorityId: pulumi.Input<string>;
    certificateAuthorityVersionNumber: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
