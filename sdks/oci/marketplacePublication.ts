// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MarketplacePublication extends pulumi.CustomResource {
    /**
     * Get an existing MarketplacePublication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MarketplacePublicationState, opts?: pulumi.CustomResourceOptions): MarketplacePublication {
        return new MarketplacePublication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/marketplacePublication:MarketplacePublication';

    /**
     * Returns true if the given object is an instance of MarketplacePublication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MarketplacePublication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MarketplacePublication.__pulumiType;
    }

    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly icons!: pulumi.Output<outputs.MarketplacePublicationIcon[]>;
    public readonly isAgreementAcknowledged!: pulumi.Output<boolean>;
    public readonly listingType!: pulumi.Output<string>;
    public readonly longDescription!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly packageDetails!: pulumi.Output<outputs.MarketplacePublicationPackageDetails>;
    public /*out*/ readonly packageType!: pulumi.Output<string>;
    public readonly shortDescription!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly supportContacts!: pulumi.Output<outputs.MarketplacePublicationSupportContact[]>;
    public /*out*/ readonly supportedOperatingSystems!: pulumi.Output<outputs.MarketplacePublicationSupportedOperatingSystem[]>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.MarketplacePublicationTimeouts | undefined>;

    /**
     * Create a MarketplacePublication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MarketplacePublicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MarketplacePublicationArgs | MarketplacePublicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MarketplacePublicationState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["icons"] = state ? state.icons : undefined;
            resourceInputs["isAgreementAcknowledged"] = state ? state.isAgreementAcknowledged : undefined;
            resourceInputs["listingType"] = state ? state.listingType : undefined;
            resourceInputs["longDescription"] = state ? state.longDescription : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["packageDetails"] = state ? state.packageDetails : undefined;
            resourceInputs["packageType"] = state ? state.packageType : undefined;
            resourceInputs["shortDescription"] = state ? state.shortDescription : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["supportContacts"] = state ? state.supportContacts : undefined;
            resourceInputs["supportedOperatingSystems"] = state ? state.supportedOperatingSystems : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as MarketplacePublicationArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.isAgreementAcknowledged === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isAgreementAcknowledged'");
            }
            if ((!args || args.listingType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listingType'");
            }
            if ((!args || args.packageDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'packageDetails'");
            }
            if ((!args || args.shortDescription === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shortDescription'");
            }
            if ((!args || args.supportContacts === undefined) && !opts.urn) {
                throw new Error("Missing required property 'supportContacts'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isAgreementAcknowledged"] = args ? args.isAgreementAcknowledged : undefined;
            resourceInputs["listingType"] = args ? args.listingType : undefined;
            resourceInputs["longDescription"] = args ? args.longDescription : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["packageDetails"] = args ? args.packageDetails : undefined;
            resourceInputs["shortDescription"] = args ? args.shortDescription : undefined;
            resourceInputs["supportContacts"] = args ? args.supportContacts : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["icons"] = undefined /*out*/;
            resourceInputs["packageType"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["supportedOperatingSystems"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MarketplacePublication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MarketplacePublication resources.
 */
export interface MarketplacePublicationState {
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    icons?: pulumi.Input<pulumi.Input<inputs.MarketplacePublicationIcon>[]>;
    isAgreementAcknowledged?: pulumi.Input<boolean>;
    listingType?: pulumi.Input<string>;
    longDescription?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    packageDetails?: pulumi.Input<inputs.MarketplacePublicationPackageDetails>;
    packageType?: pulumi.Input<string>;
    shortDescription?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    supportContacts?: pulumi.Input<pulumi.Input<inputs.MarketplacePublicationSupportContact>[]>;
    supportedOperatingSystems?: pulumi.Input<pulumi.Input<inputs.MarketplacePublicationSupportedOperatingSystem>[]>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MarketplacePublicationTimeouts>;
}

/**
 * The set of arguments for constructing a MarketplacePublication resource.
 */
export interface MarketplacePublicationArgs {
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isAgreementAcknowledged: pulumi.Input<boolean>;
    listingType: pulumi.Input<string>;
    longDescription?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    packageDetails: pulumi.Input<inputs.MarketplacePublicationPackageDetails>;
    shortDescription: pulumi.Input<string>;
    supportContacts: pulumi.Input<pulumi.Input<inputs.MarketplacePublicationSupportContact>[]>;
    timeouts?: pulumi.Input<inputs.MarketplacePublicationTimeouts>;
}
