// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getArtifactsContainerRepository(args: GetArtifactsContainerRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetArtifactsContainerRepositoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getArtifactsContainerRepository:getArtifactsContainerRepository", {
        "repositoryId": args.repositoryId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getArtifactsContainerRepository.
 */
export interface GetArtifactsContainerRepositoryArgs {
    repositoryId: string;
}

/**
 * A collection of values returned by getArtifactsContainerRepository.
 */
export interface GetArtifactsContainerRepositoryResult {
    readonly billableSizeInGbs: string;
    readonly compartmentId: string;
    readonly createdBy: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly imageCount: number;
    readonly isImmutable: boolean;
    readonly isPublic: boolean;
    readonly layerCount: number;
    readonly layersSizeInBytes: string;
    readonly namespace: string;
    readonly readmes: outputs.GetArtifactsContainerRepositoryReadme[];
    readonly repositoryId: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeLastPushed: string;
}
export function getArtifactsContainerRepositoryOutput(args: GetArtifactsContainerRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetArtifactsContainerRepositoryResult> {
    return pulumi.output(args).apply((a: any) => getArtifactsContainerRepository(a, opts))
}

/**
 * A collection of arguments for invoking getArtifactsContainerRepository.
 */
export interface GetArtifactsContainerRepositoryOutputArgs {
    repositoryId: pulumi.Input<string>;
}
