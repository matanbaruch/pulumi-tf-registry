// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatabaseExadataInfrastructureCompute extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseExadataInfrastructureCompute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseExadataInfrastructureComputeState, opts?: pulumi.CustomResourceOptions): DatabaseExadataInfrastructureCompute {
        return new DatabaseExadataInfrastructureCompute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/databaseExadataInfrastructureCompute:DatabaseExadataInfrastructureCompute';

    /**
     * Returns true if the given object is an instance of DatabaseExadataInfrastructureCompute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseExadataInfrastructureCompute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseExadataInfrastructureCompute.__pulumiType;
    }

    public /*out*/ readonly activatedStorageCount!: pulumi.Output<number>;
    public readonly activationFile!: pulumi.Output<string | undefined>;
    public /*out*/ readonly additionalComputeCount!: pulumi.Output<number>;
    public readonly additionalComputeCountComputeManagedResource!: pulumi.Output<number | undefined>;
    public /*out*/ readonly additionalComputeSystemModel!: pulumi.Output<string>;
    public readonly additionalComputeSystemModelComputeManagedResource!: pulumi.Output<string | undefined>;
    public /*out*/ readonly additionalStorageCount!: pulumi.Output<number>;
    public /*out*/ readonly adminNetworkCidr!: pulumi.Output<string>;
    public /*out*/ readonly cloudControlPlaneServer1!: pulumi.Output<string>;
    public /*out*/ readonly cloudControlPlaneServer2!: pulumi.Output<string>;
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    public /*out*/ readonly computeCount!: pulumi.Output<number>;
    public /*out*/ readonly contacts!: pulumi.Output<outputs.DatabaseExadataInfrastructureComputeContact[]>;
    public /*out*/ readonly corporateProxy!: pulumi.Output<string>;
    public /*out*/ readonly cpusEnabled!: pulumi.Output<number>;
    public /*out*/ readonly createAsync!: pulumi.Output<boolean>;
    public /*out*/ readonly csiNumber!: pulumi.Output<string>;
    public /*out*/ readonly dataStorageSizeInTbs!: pulumi.Output<number>;
    public /*out*/ readonly dbNodeStorageSizeInGbs!: pulumi.Output<number>;
    public /*out*/ readonly dbServerVersion!: pulumi.Output<string>;
    public /*out*/ readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    public /*out*/ readonly dnsServers!: pulumi.Output<string[]>;
    public readonly exadataInfrastructureId!: pulumi.Output<string>;
    public /*out*/ readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly gateway!: pulumi.Output<string>;
    public /*out*/ readonly infiniBandNetworkCidr!: pulumi.Output<string>;
    public /*out*/ readonly isCpsOfflineReportEnabled!: pulumi.Output<boolean>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public /*out*/ readonly maintenanceSloStatus!: pulumi.Output<string>;
    public /*out*/ readonly maintenanceWindows!: pulumi.Output<outputs.DatabaseExadataInfrastructureComputeMaintenanceWindow[]>;
    public /*out*/ readonly maxCpuCount!: pulumi.Output<number>;
    public /*out*/ readonly maxDataStorageInTbs!: pulumi.Output<number>;
    public /*out*/ readonly maxDbNodeStorageInGbs!: pulumi.Output<number>;
    public /*out*/ readonly maxMemoryInGbs!: pulumi.Output<number>;
    public /*out*/ readonly memorySizeInGbs!: pulumi.Output<number>;
    public /*out*/ readonly monthlyDbServerVersion!: pulumi.Output<string>;
    public /*out*/ readonly netmask!: pulumi.Output<string>;
    public /*out*/ readonly ntpServers!: pulumi.Output<string[]>;
    public /*out*/ readonly shape!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly storageCount!: pulumi.Output<number>;
    public /*out*/ readonly storageServerVersion!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeZone!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DatabaseExadataInfrastructureComputeTimeouts | undefined>;

    /**
     * Create a DatabaseExadataInfrastructureCompute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseExadataInfrastructureComputeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseExadataInfrastructureComputeArgs | DatabaseExadataInfrastructureComputeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseExadataInfrastructureComputeState | undefined;
            resourceInputs["activatedStorageCount"] = state ? state.activatedStorageCount : undefined;
            resourceInputs["activationFile"] = state ? state.activationFile : undefined;
            resourceInputs["additionalComputeCount"] = state ? state.additionalComputeCount : undefined;
            resourceInputs["additionalComputeCountComputeManagedResource"] = state ? state.additionalComputeCountComputeManagedResource : undefined;
            resourceInputs["additionalComputeSystemModel"] = state ? state.additionalComputeSystemModel : undefined;
            resourceInputs["additionalComputeSystemModelComputeManagedResource"] = state ? state.additionalComputeSystemModelComputeManagedResource : undefined;
            resourceInputs["additionalStorageCount"] = state ? state.additionalStorageCount : undefined;
            resourceInputs["adminNetworkCidr"] = state ? state.adminNetworkCidr : undefined;
            resourceInputs["cloudControlPlaneServer1"] = state ? state.cloudControlPlaneServer1 : undefined;
            resourceInputs["cloudControlPlaneServer2"] = state ? state.cloudControlPlaneServer2 : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["computeCount"] = state ? state.computeCount : undefined;
            resourceInputs["contacts"] = state ? state.contacts : undefined;
            resourceInputs["corporateProxy"] = state ? state.corporateProxy : undefined;
            resourceInputs["cpusEnabled"] = state ? state.cpusEnabled : undefined;
            resourceInputs["createAsync"] = state ? state.createAsync : undefined;
            resourceInputs["csiNumber"] = state ? state.csiNumber : undefined;
            resourceInputs["dataStorageSizeInTbs"] = state ? state.dataStorageSizeInTbs : undefined;
            resourceInputs["dbNodeStorageSizeInGbs"] = state ? state.dbNodeStorageSizeInGbs : undefined;
            resourceInputs["dbServerVersion"] = state ? state.dbServerVersion : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["dnsServers"] = state ? state.dnsServers : undefined;
            resourceInputs["exadataInfrastructureId"] = state ? state.exadataInfrastructureId : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["gateway"] = state ? state.gateway : undefined;
            resourceInputs["infiniBandNetworkCidr"] = state ? state.infiniBandNetworkCidr : undefined;
            resourceInputs["isCpsOfflineReportEnabled"] = state ? state.isCpsOfflineReportEnabled : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["maintenanceSloStatus"] = state ? state.maintenanceSloStatus : undefined;
            resourceInputs["maintenanceWindows"] = state ? state.maintenanceWindows : undefined;
            resourceInputs["maxCpuCount"] = state ? state.maxCpuCount : undefined;
            resourceInputs["maxDataStorageInTbs"] = state ? state.maxDataStorageInTbs : undefined;
            resourceInputs["maxDbNodeStorageInGbs"] = state ? state.maxDbNodeStorageInGbs : undefined;
            resourceInputs["maxMemoryInGbs"] = state ? state.maxMemoryInGbs : undefined;
            resourceInputs["memorySizeInGbs"] = state ? state.memorySizeInGbs : undefined;
            resourceInputs["monthlyDbServerVersion"] = state ? state.monthlyDbServerVersion : undefined;
            resourceInputs["netmask"] = state ? state.netmask : undefined;
            resourceInputs["ntpServers"] = state ? state.ntpServers : undefined;
            resourceInputs["shape"] = state ? state.shape : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["storageCount"] = state ? state.storageCount : undefined;
            resourceInputs["storageServerVersion"] = state ? state.storageServerVersion : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeZone"] = state ? state.timeZone : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DatabaseExadataInfrastructureComputeArgs | undefined;
            if ((!args || args.exadataInfrastructureId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'exadataInfrastructureId'");
            }
            resourceInputs["activationFile"] = args ? args.activationFile : undefined;
            resourceInputs["additionalComputeCountComputeManagedResource"] = args ? args.additionalComputeCountComputeManagedResource : undefined;
            resourceInputs["additionalComputeSystemModelComputeManagedResource"] = args ? args.additionalComputeSystemModelComputeManagedResource : undefined;
            resourceInputs["exadataInfrastructureId"] = args ? args.exadataInfrastructureId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["activatedStorageCount"] = undefined /*out*/;
            resourceInputs["additionalComputeCount"] = undefined /*out*/;
            resourceInputs["additionalComputeSystemModel"] = undefined /*out*/;
            resourceInputs["additionalStorageCount"] = undefined /*out*/;
            resourceInputs["adminNetworkCidr"] = undefined /*out*/;
            resourceInputs["cloudControlPlaneServer1"] = undefined /*out*/;
            resourceInputs["cloudControlPlaneServer2"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["computeCount"] = undefined /*out*/;
            resourceInputs["contacts"] = undefined /*out*/;
            resourceInputs["corporateProxy"] = undefined /*out*/;
            resourceInputs["cpusEnabled"] = undefined /*out*/;
            resourceInputs["createAsync"] = undefined /*out*/;
            resourceInputs["csiNumber"] = undefined /*out*/;
            resourceInputs["dataStorageSizeInTbs"] = undefined /*out*/;
            resourceInputs["dbNodeStorageSizeInGbs"] = undefined /*out*/;
            resourceInputs["dbServerVersion"] = undefined /*out*/;
            resourceInputs["definedTags"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["dnsServers"] = undefined /*out*/;
            resourceInputs["freeformTags"] = undefined /*out*/;
            resourceInputs["gateway"] = undefined /*out*/;
            resourceInputs["infiniBandNetworkCidr"] = undefined /*out*/;
            resourceInputs["isCpsOfflineReportEnabled"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["maintenanceSloStatus"] = undefined /*out*/;
            resourceInputs["maintenanceWindows"] = undefined /*out*/;
            resourceInputs["maxCpuCount"] = undefined /*out*/;
            resourceInputs["maxDataStorageInTbs"] = undefined /*out*/;
            resourceInputs["maxDbNodeStorageInGbs"] = undefined /*out*/;
            resourceInputs["maxMemoryInGbs"] = undefined /*out*/;
            resourceInputs["memorySizeInGbs"] = undefined /*out*/;
            resourceInputs["monthlyDbServerVersion"] = undefined /*out*/;
            resourceInputs["netmask"] = undefined /*out*/;
            resourceInputs["ntpServers"] = undefined /*out*/;
            resourceInputs["shape"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["storageCount"] = undefined /*out*/;
            resourceInputs["storageServerVersion"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeZone"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseExadataInfrastructureCompute.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatabaseExadataInfrastructureCompute resources.
 */
export interface DatabaseExadataInfrastructureComputeState {
    activatedStorageCount?: pulumi.Input<number>;
    activationFile?: pulumi.Input<string>;
    additionalComputeCount?: pulumi.Input<number>;
    additionalComputeCountComputeManagedResource?: pulumi.Input<number>;
    additionalComputeSystemModel?: pulumi.Input<string>;
    additionalComputeSystemModelComputeManagedResource?: pulumi.Input<string>;
    additionalStorageCount?: pulumi.Input<number>;
    adminNetworkCidr?: pulumi.Input<string>;
    cloudControlPlaneServer1?: pulumi.Input<string>;
    cloudControlPlaneServer2?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    computeCount?: pulumi.Input<number>;
    contacts?: pulumi.Input<pulumi.Input<inputs.DatabaseExadataInfrastructureComputeContact>[]>;
    corporateProxy?: pulumi.Input<string>;
    cpusEnabled?: pulumi.Input<number>;
    createAsync?: pulumi.Input<boolean>;
    csiNumber?: pulumi.Input<string>;
    dataStorageSizeInTbs?: pulumi.Input<number>;
    dbNodeStorageSizeInGbs?: pulumi.Input<number>;
    dbServerVersion?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    exadataInfrastructureId?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    gateway?: pulumi.Input<string>;
    infiniBandNetworkCidr?: pulumi.Input<string>;
    isCpsOfflineReportEnabled?: pulumi.Input<boolean>;
    lifecycleDetails?: pulumi.Input<string>;
    maintenanceSloStatus?: pulumi.Input<string>;
    maintenanceWindows?: pulumi.Input<pulumi.Input<inputs.DatabaseExadataInfrastructureComputeMaintenanceWindow>[]>;
    maxCpuCount?: pulumi.Input<number>;
    maxDataStorageInTbs?: pulumi.Input<number>;
    maxDbNodeStorageInGbs?: pulumi.Input<number>;
    maxMemoryInGbs?: pulumi.Input<number>;
    memorySizeInGbs?: pulumi.Input<number>;
    monthlyDbServerVersion?: pulumi.Input<string>;
    netmask?: pulumi.Input<string>;
    ntpServers?: pulumi.Input<pulumi.Input<string>[]>;
    shape?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    storageCount?: pulumi.Input<number>;
    storageServerVersion?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeZone?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatabaseExadataInfrastructureComputeTimeouts>;
}

/**
 * The set of arguments for constructing a DatabaseExadataInfrastructureCompute resource.
 */
export interface DatabaseExadataInfrastructureComputeArgs {
    activationFile?: pulumi.Input<string>;
    additionalComputeCountComputeManagedResource?: pulumi.Input<number>;
    additionalComputeSystemModelComputeManagedResource?: pulumi.Input<string>;
    exadataInfrastructureId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatabaseExadataInfrastructureComputeTimeouts>;
}
