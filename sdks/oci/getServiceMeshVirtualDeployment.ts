// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceMeshVirtualDeployment(args: GetServiceMeshVirtualDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceMeshVirtualDeploymentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getServiceMeshVirtualDeployment:getServiceMeshVirtualDeployment", {
        "virtualDeploymentId": args.virtualDeploymentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceMeshVirtualDeployment.
 */
export interface GetServiceMeshVirtualDeploymentArgs {
    virtualDeploymentId: string;
}

/**
 * A collection of values returned by getServiceMeshVirtualDeployment.
 */
export interface GetServiceMeshVirtualDeploymentResult {
    readonly accessLoggings: outputs.GetServiceMeshVirtualDeploymentAccessLogging[];
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly listeners: outputs.GetServiceMeshVirtualDeploymentListener[];
    readonly name: string;
    readonly serviceDiscoveries: outputs.GetServiceMeshVirtualDeploymentServiceDiscovery[];
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly virtualDeploymentId: string;
    readonly virtualServiceId: string;
}
export function getServiceMeshVirtualDeploymentOutput(args: GetServiceMeshVirtualDeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceMeshVirtualDeploymentResult> {
    return pulumi.output(args).apply((a: any) => getServiceMeshVirtualDeployment(a, opts))
}

/**
 * A collection of arguments for invoking getServiceMeshVirtualDeployment.
 */
export interface GetServiceMeshVirtualDeploymentOutputArgs {
    virtualDeploymentId: pulumi.Input<string>;
}
