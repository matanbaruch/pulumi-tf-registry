// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataSafeAuditTrail extends pulumi.CustomResource {
    /**
     * Get an existing DataSafeAuditTrail resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataSafeAuditTrailState, opts?: pulumi.CustomResourceOptions): DataSafeAuditTrail {
        return new DataSafeAuditTrail(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/dataSafeAuditTrail:DataSafeAuditTrail';

    /**
     * Returns true if the given object is an instance of DataSafeAuditTrail.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataSafeAuditTrail {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataSafeAuditTrail.__pulumiType;
    }

    public /*out*/ readonly auditCollectionStartTime!: pulumi.Output<string>;
    public /*out*/ readonly auditProfileId!: pulumi.Output<string>;
    public readonly auditTrailId!: pulumi.Output<string>;
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly isAutoPurgeEnabled!: pulumi.Output<boolean>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public /*out*/ readonly peerTargetDatabaseKey!: pulumi.Output<number>;
    public /*out*/ readonly purgeJobDetails!: pulumi.Output<string>;
    public /*out*/ readonly purgeJobStatus!: pulumi.Output<string>;
    public /*out*/ readonly purgeJobTime!: pulumi.Output<string>;
    public readonly resumeTrigger!: pulumi.Output<number | undefined>;
    public readonly state!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly targetId!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeLastCollected!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DataSafeAuditTrailTimeouts | undefined>;
    public /*out*/ readonly trailLocation!: pulumi.Output<string>;
    public /*out*/ readonly trailSource!: pulumi.Output<string>;
    public /*out*/ readonly workRequestId!: pulumi.Output<string>;

    /**
     * Create a DataSafeAuditTrail resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataSafeAuditTrailArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataSafeAuditTrailArgs | DataSafeAuditTrailState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataSafeAuditTrailState | undefined;
            resourceInputs["auditCollectionStartTime"] = state ? state.auditCollectionStartTime : undefined;
            resourceInputs["auditProfileId"] = state ? state.auditProfileId : undefined;
            resourceInputs["auditTrailId"] = state ? state.auditTrailId : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isAutoPurgeEnabled"] = state ? state.isAutoPurgeEnabled : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["peerTargetDatabaseKey"] = state ? state.peerTargetDatabaseKey : undefined;
            resourceInputs["purgeJobDetails"] = state ? state.purgeJobDetails : undefined;
            resourceInputs["purgeJobStatus"] = state ? state.purgeJobStatus : undefined;
            resourceInputs["purgeJobTime"] = state ? state.purgeJobTime : undefined;
            resourceInputs["resumeTrigger"] = state ? state.resumeTrigger : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["targetId"] = state ? state.targetId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeLastCollected"] = state ? state.timeLastCollected : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["trailLocation"] = state ? state.trailLocation : undefined;
            resourceInputs["trailSource"] = state ? state.trailSource : undefined;
            resourceInputs["workRequestId"] = state ? state.workRequestId : undefined;
        } else {
            const args = argsOrState as DataSafeAuditTrailArgs | undefined;
            if ((!args || args.auditTrailId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'auditTrailId'");
            }
            resourceInputs["auditTrailId"] = args ? args.auditTrailId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isAutoPurgeEnabled"] = args ? args.isAutoPurgeEnabled : undefined;
            resourceInputs["resumeTrigger"] = args ? args.resumeTrigger : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["auditCollectionStartTime"] = undefined /*out*/;
            resourceInputs["auditProfileId"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["peerTargetDatabaseKey"] = undefined /*out*/;
            resourceInputs["purgeJobDetails"] = undefined /*out*/;
            resourceInputs["purgeJobStatus"] = undefined /*out*/;
            resourceInputs["purgeJobTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["targetId"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeLastCollected"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["trailLocation"] = undefined /*out*/;
            resourceInputs["trailSource"] = undefined /*out*/;
            resourceInputs["workRequestId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataSafeAuditTrail.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataSafeAuditTrail resources.
 */
export interface DataSafeAuditTrailState {
    auditCollectionStartTime?: pulumi.Input<string>;
    auditProfileId?: pulumi.Input<string>;
    auditTrailId?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isAutoPurgeEnabled?: pulumi.Input<boolean>;
    lifecycleDetails?: pulumi.Input<string>;
    peerTargetDatabaseKey?: pulumi.Input<number>;
    purgeJobDetails?: pulumi.Input<string>;
    purgeJobStatus?: pulumi.Input<string>;
    purgeJobTime?: pulumi.Input<string>;
    resumeTrigger?: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeLastCollected?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataSafeAuditTrailTimeouts>;
    trailLocation?: pulumi.Input<string>;
    trailSource?: pulumi.Input<string>;
    workRequestId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataSafeAuditTrail resource.
 */
export interface DataSafeAuditTrailArgs {
    auditTrailId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isAutoPurgeEnabled?: pulumi.Input<boolean>;
    resumeTrigger?: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataSafeAuditTrailTimeouts>;
}
