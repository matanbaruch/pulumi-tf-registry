// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudMigrationsTargetAsset extends pulumi.CustomResource {
    /**
     * Get an existing CloudMigrationsTargetAsset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudMigrationsTargetAssetState, opts?: pulumi.CustomResourceOptions): CloudMigrationsTargetAsset {
        return new CloudMigrationsTargetAsset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/cloudMigrationsTargetAsset:CloudMigrationsTargetAsset';

    /**
     * Returns true if the given object is an instance of CloudMigrationsTargetAsset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudMigrationsTargetAsset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudMigrationsTargetAsset.__pulumiType;
    }

    public readonly blockVolumesPerformance!: pulumi.Output<number>;
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    public /*out*/ readonly compatibilityMessages!: pulumi.Output<outputs.CloudMigrationsTargetAssetCompatibilityMessage[]>;
    public /*out*/ readonly createdResourceId!: pulumi.Output<string>;
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    public /*out*/ readonly estimatedCosts!: pulumi.Output<outputs.CloudMigrationsTargetAssetEstimatedCost[]>;
    public readonly isExcludedFromExecution!: pulumi.Output<boolean>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public /*out*/ readonly migrationAssets!: pulumi.Output<outputs.CloudMigrationsTargetAssetMigrationAsset[]>;
    public readonly migrationPlanId!: pulumi.Output<string>;
    public readonly msLicense!: pulumi.Output<string>;
    public readonly preferredShapeType!: pulumi.Output<string>;
    public /*out*/ readonly recommendedSpecs!: pulumi.Output<outputs.CloudMigrationsTargetAssetRecommendedSpec[]>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly testSpecs!: pulumi.Output<outputs.CloudMigrationsTargetAssetTestSpec[]>;
    public /*out*/ readonly timeAssessed!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CloudMigrationsTargetAssetTimeouts | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly userSpec!: pulumi.Output<outputs.CloudMigrationsTargetAssetUserSpec>;

    /**
     * Create a CloudMigrationsTargetAsset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudMigrationsTargetAssetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudMigrationsTargetAssetArgs | CloudMigrationsTargetAssetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudMigrationsTargetAssetState | undefined;
            resourceInputs["blockVolumesPerformance"] = state ? state.blockVolumesPerformance : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["compatibilityMessages"] = state ? state.compatibilityMessages : undefined;
            resourceInputs["createdResourceId"] = state ? state.createdResourceId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["estimatedCosts"] = state ? state.estimatedCosts : undefined;
            resourceInputs["isExcludedFromExecution"] = state ? state.isExcludedFromExecution : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["migrationAssets"] = state ? state.migrationAssets : undefined;
            resourceInputs["migrationPlanId"] = state ? state.migrationPlanId : undefined;
            resourceInputs["msLicense"] = state ? state.msLicense : undefined;
            resourceInputs["preferredShapeType"] = state ? state.preferredShapeType : undefined;
            resourceInputs["recommendedSpecs"] = state ? state.recommendedSpecs : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["testSpecs"] = state ? state.testSpecs : undefined;
            resourceInputs["timeAssessed"] = state ? state.timeAssessed : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["userSpec"] = state ? state.userSpec : undefined;
        } else {
            const args = argsOrState as CloudMigrationsTargetAssetArgs | undefined;
            if ((!args || args.isExcludedFromExecution === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isExcludedFromExecution'");
            }
            if ((!args || args.migrationPlanId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'migrationPlanId'");
            }
            if ((!args || args.preferredShapeType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'preferredShapeType'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            if ((!args || args.userSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userSpec'");
            }
            resourceInputs["blockVolumesPerformance"] = args ? args.blockVolumesPerformance : undefined;
            resourceInputs["isExcludedFromExecution"] = args ? args.isExcludedFromExecution : undefined;
            resourceInputs["migrationPlanId"] = args ? args.migrationPlanId : undefined;
            resourceInputs["msLicense"] = args ? args.msLicense : undefined;
            resourceInputs["preferredShapeType"] = args ? args.preferredShapeType : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["userSpec"] = args ? args.userSpec : undefined;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["compatibilityMessages"] = undefined /*out*/;
            resourceInputs["createdResourceId"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["estimatedCosts"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["migrationAssets"] = undefined /*out*/;
            resourceInputs["recommendedSpecs"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["testSpecs"] = undefined /*out*/;
            resourceInputs["timeAssessed"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudMigrationsTargetAsset.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudMigrationsTargetAsset resources.
 */
export interface CloudMigrationsTargetAssetState {
    blockVolumesPerformance?: pulumi.Input<number>;
    compartmentId?: pulumi.Input<string>;
    compatibilityMessages?: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetCompatibilityMessage>[]>;
    createdResourceId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    estimatedCosts?: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetEstimatedCost>[]>;
    isExcludedFromExecution?: pulumi.Input<boolean>;
    lifecycleDetails?: pulumi.Input<string>;
    migrationAssets?: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetMigrationAsset>[]>;
    migrationPlanId?: pulumi.Input<string>;
    msLicense?: pulumi.Input<string>;
    preferredShapeType?: pulumi.Input<string>;
    recommendedSpecs?: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetRecommendedSpec>[]>;
    state?: pulumi.Input<string>;
    testSpecs?: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetTestSpec>[]>;
    timeAssessed?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CloudMigrationsTargetAssetTimeouts>;
    type?: pulumi.Input<string>;
    userSpec?: pulumi.Input<inputs.CloudMigrationsTargetAssetUserSpec>;
}

/**
 * The set of arguments for constructing a CloudMigrationsTargetAsset resource.
 */
export interface CloudMigrationsTargetAssetArgs {
    blockVolumesPerformance?: pulumi.Input<number>;
    isExcludedFromExecution: pulumi.Input<boolean>;
    migrationPlanId: pulumi.Input<string>;
    msLicense?: pulumi.Input<string>;
    preferredShapeType: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CloudMigrationsTargetAssetTimeouts>;
    type: pulumi.Input<string>;
    userSpec: pulumi.Input<inputs.CloudMigrationsTargetAssetUserSpec>;
}
