// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getJmsSummarizeResourceInventory(args?: GetJmsSummarizeResourceInventoryArgs, opts?: pulumi.InvokeOptions): Promise<GetJmsSummarizeResourceInventoryResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getJmsSummarizeResourceInventory:getJmsSummarizeResourceInventory", {
        "compartmentId": args.compartmentId,
        "id": args.id,
        "timeEnd": args.timeEnd,
        "timeStart": args.timeStart,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getJmsSummarizeResourceInventory.
 */
export interface GetJmsSummarizeResourceInventoryArgs {
    compartmentId?: string;
    id?: string;
    timeEnd?: string;
    timeStart?: string;
}

/**
 * A collection of values returned by getJmsSummarizeResourceInventory.
 */
export interface GetJmsSummarizeResourceInventoryResult {
    readonly activeFleetCount: number;
    readonly applicationCount: number;
    readonly compartmentId?: string;
    readonly id: string;
    readonly installationCount: number;
    readonly jreCount: number;
    readonly managedInstanceCount: number;
    readonly timeEnd?: string;
    readonly timeStart?: string;
}
export function getJmsSummarizeResourceInventoryOutput(args?: GetJmsSummarizeResourceInventoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJmsSummarizeResourceInventoryResult> {
    return pulumi.output(args).apply((a: any) => getJmsSummarizeResourceInventory(a, opts))
}

/**
 * A collection of arguments for invoking getJmsSummarizeResourceInventory.
 */
export interface GetJmsSummarizeResourceInventoryOutputArgs {
    compartmentId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    timeEnd?: pulumi.Input<string>;
    timeStart?: pulumi.Input<string>;
}
