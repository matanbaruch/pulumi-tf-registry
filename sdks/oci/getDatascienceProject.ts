// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatascienceProject(args: GetDatascienceProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetDatascienceProjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatascienceProject:getDatascienceProject", {
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatascienceProject.
 */
export interface GetDatascienceProjectArgs {
    projectId: string;
}

/**
 * A collection of values returned by getDatascienceProject.
 */
export interface GetDatascienceProjectResult {
    readonly compartmentId: string;
    readonly createdBy: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly projectId: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
}
export function getDatascienceProjectOutput(args: GetDatascienceProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatascienceProjectResult> {
    return pulumi.output(args).apply((a: any) => getDatascienceProject(a, opts))
}

/**
 * A collection of arguments for invoking getDatascienceProject.
 */
export interface GetDatascienceProjectOutputArgs {
    projectId: pulumi.Input<string>;
}
