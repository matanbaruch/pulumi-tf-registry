// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatabaseManagementManagedDatabasePreferredCredential(args: GetDatabaseManagementManagedDatabasePreferredCredentialArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementManagedDatabasePreferredCredentialResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementManagedDatabasePreferredCredential:getDatabaseManagementManagedDatabasePreferredCredential", {
        "credentialName": args.credentialName,
        "id": args.id,
        "managedDatabaseId": args.managedDatabaseId,
        "namedCredentialId": args.namedCredentialId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedDatabasePreferredCredential.
 */
export interface GetDatabaseManagementManagedDatabasePreferredCredentialArgs {
    credentialName: string;
    id?: string;
    managedDatabaseId: string;
    namedCredentialId?: string;
}

/**
 * A collection of values returned by getDatabaseManagementManagedDatabasePreferredCredential.
 */
export interface GetDatabaseManagementManagedDatabasePreferredCredentialResult {
    readonly credentialName: string;
    readonly id: string;
    readonly isAccessible: boolean;
    readonly managedDatabaseId: string;
    readonly namedCredentialId: string;
    readonly passwordSecretId: string;
    readonly role: string;
    readonly status: string;
    readonly type: string;
    readonly userName: string;
}
export function getDatabaseManagementManagedDatabasePreferredCredentialOutput(args: GetDatabaseManagementManagedDatabasePreferredCredentialOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementManagedDatabasePreferredCredentialResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementManagedDatabasePreferredCredential(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedDatabasePreferredCredential.
 */
export interface GetDatabaseManagementManagedDatabasePreferredCredentialOutputArgs {
    credentialName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    managedDatabaseId: pulumi.Input<string>;
    namedCredentialId?: pulumi.Input<string>;
}
