// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOpsiNewsReport(args: GetOpsiNewsReportArgs, opts?: pulumi.InvokeOptions): Promise<GetOpsiNewsReportResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOpsiNewsReport:getOpsiNewsReport", {
        "newsReportId": args.newsReportId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpsiNewsReport.
 */
export interface GetOpsiNewsReportArgs {
    newsReportId: string;
}

/**
 * A collection of values returned by getOpsiNewsReport.
 */
export interface GetOpsiNewsReportResult {
    readonly areChildCompartmentsIncluded: boolean;
    readonly compartmentId: string;
    readonly contentTypes: outputs.GetOpsiNewsReportContentType[];
    readonly dayOfWeek: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly locale: string;
    readonly name: string;
    readonly newsFrequency: string;
    readonly newsReportId: string;
    readonly onsTopicId: string;
    readonly state: string;
    readonly status: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getOpsiNewsReportOutput(args: GetOpsiNewsReportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpsiNewsReportResult> {
    return pulumi.output(args).apply((a: any) => getOpsiNewsReport(a, opts))
}

/**
 * A collection of arguments for invoking getOpsiNewsReport.
 */
export interface GetOpsiNewsReportOutputArgs {
    newsReportId: pulumi.Input<string>;
}
