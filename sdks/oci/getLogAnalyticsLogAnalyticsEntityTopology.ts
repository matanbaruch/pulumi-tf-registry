// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLogAnalyticsLogAnalyticsEntityTopology(args: GetLogAnalyticsLogAnalyticsEntityTopologyArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsLogAnalyticsEntityTopologyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLogAnalyticsLogAnalyticsEntityTopology:getLogAnalyticsLogAnalyticsEntityTopology", {
        "id": args.id,
        "logAnalyticsEntityId": args.logAnalyticsEntityId,
        "metadataEquals": args.metadataEquals,
        "namespace": args.namespace,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogAnalyticsLogAnalyticsEntityTopology.
 */
export interface GetLogAnalyticsLogAnalyticsEntityTopologyArgs {
    id?: string;
    logAnalyticsEntityId: string;
    metadataEquals?: string[];
    namespace: string;
    state?: string;
}

/**
 * A collection of values returned by getLogAnalyticsLogAnalyticsEntityTopology.
 */
export interface GetLogAnalyticsLogAnalyticsEntityTopologyResult {
    readonly id: string;
    readonly items: outputs.GetLogAnalyticsLogAnalyticsEntityTopologyItem[];
    readonly logAnalyticsEntityId: string;
    readonly metadataEquals?: string[];
    readonly namespace: string;
    readonly state?: string;
}
export function getLogAnalyticsLogAnalyticsEntityTopologyOutput(args: GetLogAnalyticsLogAnalyticsEntityTopologyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsLogAnalyticsEntityTopologyResult> {
    return pulumi.output(args).apply((a: any) => getLogAnalyticsLogAnalyticsEntityTopology(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsLogAnalyticsEntityTopology.
 */
export interface GetLogAnalyticsLogAnalyticsEntityTopologyOutputArgs {
    id?: pulumi.Input<string>;
    logAnalyticsEntityId: pulumi.Input<string>;
    metadataEquals?: pulumi.Input<pulumi.Input<string>[]>;
    namespace: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
