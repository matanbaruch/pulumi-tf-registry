// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLoadBalancerSslCipherSuite(args: GetLoadBalancerSslCipherSuiteArgs, opts?: pulumi.InvokeOptions): Promise<GetLoadBalancerSslCipherSuiteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLoadBalancerSslCipherSuite:getLoadBalancerSslCipherSuite", {
        "loadBalancerId": args.loadBalancerId,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLoadBalancerSslCipherSuite.
 */
export interface GetLoadBalancerSslCipherSuiteArgs {
    loadBalancerId: string;
    name: string;
}

/**
 * A collection of values returned by getLoadBalancerSslCipherSuite.
 */
export interface GetLoadBalancerSslCipherSuiteResult {
    readonly ciphers: string[];
    readonly id: string;
    readonly loadBalancerId: string;
    readonly name: string;
    readonly state: string;
}
export function getLoadBalancerSslCipherSuiteOutput(args: GetLoadBalancerSslCipherSuiteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoadBalancerSslCipherSuiteResult> {
    return pulumi.output(args).apply((a: any) => getLoadBalancerSslCipherSuite(a, opts))
}

/**
 * A collection of arguments for invoking getLoadBalancerSslCipherSuite.
 */
export interface GetLoadBalancerSslCipherSuiteOutputArgs {
    loadBalancerId: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
