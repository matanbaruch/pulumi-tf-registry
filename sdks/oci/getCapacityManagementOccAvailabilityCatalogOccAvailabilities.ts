// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCapacityManagementOccAvailabilityCatalogOccAvailabilities(args: GetCapacityManagementOccAvailabilityCatalogOccAvailabilitiesArgs, opts?: pulumi.InvokeOptions): Promise<GetCapacityManagementOccAvailabilityCatalogOccAvailabilitiesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCapacityManagementOccAvailabilityCatalogOccAvailabilities:getCapacityManagementOccAvailabilityCatalogOccAvailabilities", {
        "dateExpectedCapacityHandover": args.dateExpectedCapacityHandover,
        "filters": args.filters,
        "id": args.id,
        "occAvailabilityCatalogId": args.occAvailabilityCatalogId,
        "resourceName": args.resourceName,
        "resourceType": args.resourceType,
        "workloadType": args.workloadType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCapacityManagementOccAvailabilityCatalogOccAvailabilities.
 */
export interface GetCapacityManagementOccAvailabilityCatalogOccAvailabilitiesArgs {
    dateExpectedCapacityHandover?: string;
    filters?: inputs.GetCapacityManagementOccAvailabilityCatalogOccAvailabilitiesFilter[];
    id?: string;
    occAvailabilityCatalogId: string;
    resourceName?: string;
    resourceType?: string;
    workloadType?: string;
}

/**
 * A collection of values returned by getCapacityManagementOccAvailabilityCatalogOccAvailabilities.
 */
export interface GetCapacityManagementOccAvailabilityCatalogOccAvailabilitiesResult {
    readonly dateExpectedCapacityHandover?: string;
    readonly filters?: outputs.GetCapacityManagementOccAvailabilityCatalogOccAvailabilitiesFilter[];
    readonly id: string;
    readonly occAvailabilityCatalogId: string;
    readonly occAvailabilityCollections: outputs.GetCapacityManagementOccAvailabilityCatalogOccAvailabilitiesOccAvailabilityCollection[];
    readonly resourceName?: string;
    readonly resourceType?: string;
    readonly workloadType?: string;
}
export function getCapacityManagementOccAvailabilityCatalogOccAvailabilitiesOutput(args: GetCapacityManagementOccAvailabilityCatalogOccAvailabilitiesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCapacityManagementOccAvailabilityCatalogOccAvailabilitiesResult> {
    return pulumi.output(args).apply((a: any) => getCapacityManagementOccAvailabilityCatalogOccAvailabilities(a, opts))
}

/**
 * A collection of arguments for invoking getCapacityManagementOccAvailabilityCatalogOccAvailabilities.
 */
export interface GetCapacityManagementOccAvailabilityCatalogOccAvailabilitiesOutputArgs {
    dateExpectedCapacityHandover?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetCapacityManagementOccAvailabilityCatalogOccAvailabilitiesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    occAvailabilityCatalogId: pulumi.Input<string>;
    resourceName?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    workloadType?: pulumi.Input<string>;
}
