// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreImageShapes(args: GetCoreImageShapesArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreImageShapesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreImageShapes:getCoreImageShapes", {
        "filters": args.filters,
        "id": args.id,
        "imageId": args.imageId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreImageShapes.
 */
export interface GetCoreImageShapesArgs {
    filters?: inputs.GetCoreImageShapesFilter[];
    id?: string;
    imageId: string;
}

/**
 * A collection of values returned by getCoreImageShapes.
 */
export interface GetCoreImageShapesResult {
    readonly filters?: outputs.GetCoreImageShapesFilter[];
    readonly id: string;
    readonly imageId: string;
    readonly imageShapeCompatibilities: outputs.GetCoreImageShapesImageShapeCompatibility[];
}
export function getCoreImageShapesOutput(args: GetCoreImageShapesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreImageShapesResult> {
    return pulumi.output(args).apply((a: any) => getCoreImageShapes(a, opts))
}

/**
 * A collection of arguments for invoking getCoreImageShapes.
 */
export interface GetCoreImageShapesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetCoreImageShapesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    imageId: pulumi.Input<string>;
}
