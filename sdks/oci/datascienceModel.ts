// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatascienceModel extends pulumi.CustomResource {
    /**
     * Get an existing DatascienceModel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatascienceModelState, opts?: pulumi.CustomResourceOptions): DatascienceModel {
        return new DatascienceModel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/datascienceModel:DatascienceModel';

    /**
     * Returns true if the given object is an instance of DatascienceModel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatascienceModel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatascienceModel.__pulumiType;
    }

    public readonly artifactContentDisposition!: pulumi.Output<string>;
    public readonly artifactContentLength!: pulumi.Output<string>;
    public /*out*/ readonly artifactContentMd5!: pulumi.Output<string>;
    public /*out*/ readonly artifactLastModified!: pulumi.Output<string>;
    public readonly compartmentId!: pulumi.Output<string>;
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    public readonly customMetadataLists!: pulumi.Output<outputs.DatascienceModelCustomMetadataList[] | undefined>;
    public readonly definedMetadataLists!: pulumi.Output<outputs.DatascienceModelDefinedMetadataList[] | undefined>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public /*out*/ readonly emptyModel!: pulumi.Output<boolean>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly inputSchema!: pulumi.Output<string>;
    public readonly modelArtifact!: pulumi.Output<string>;
    public readonly outputSchema!: pulumi.Output<string>;
    public readonly projectId!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DatascienceModelTimeouts | undefined>;

    /**
     * Create a DatascienceModel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatascienceModelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatascienceModelArgs | DatascienceModelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatascienceModelState | undefined;
            resourceInputs["artifactContentDisposition"] = state ? state.artifactContentDisposition : undefined;
            resourceInputs["artifactContentLength"] = state ? state.artifactContentLength : undefined;
            resourceInputs["artifactContentMd5"] = state ? state.artifactContentMd5 : undefined;
            resourceInputs["artifactLastModified"] = state ? state.artifactLastModified : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["customMetadataLists"] = state ? state.customMetadataLists : undefined;
            resourceInputs["definedMetadataLists"] = state ? state.definedMetadataLists : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["emptyModel"] = state ? state.emptyModel : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["inputSchema"] = state ? state.inputSchema : undefined;
            resourceInputs["modelArtifact"] = state ? state.modelArtifact : undefined;
            resourceInputs["outputSchema"] = state ? state.outputSchema : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DatascienceModelArgs | undefined;
            if ((!args || args.artifactContentLength === undefined) && !opts.urn) {
                throw new Error("Missing required property 'artifactContentLength'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.modelArtifact === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelArtifact'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["artifactContentDisposition"] = args ? args.artifactContentDisposition : undefined;
            resourceInputs["artifactContentLength"] = args ? args.artifactContentLength : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["customMetadataLists"] = args ? args.customMetadataLists : undefined;
            resourceInputs["definedMetadataLists"] = args ? args.definedMetadataLists : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["inputSchema"] = args ? args.inputSchema : undefined;
            resourceInputs["modelArtifact"] = args ? args.modelArtifact : undefined;
            resourceInputs["outputSchema"] = args ? args.outputSchema : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["artifactContentMd5"] = undefined /*out*/;
            resourceInputs["artifactLastModified"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["emptyModel"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatascienceModel.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatascienceModel resources.
 */
export interface DatascienceModelState {
    artifactContentDisposition?: pulumi.Input<string>;
    artifactContentLength?: pulumi.Input<string>;
    artifactContentMd5?: pulumi.Input<string>;
    artifactLastModified?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    customMetadataLists?: pulumi.Input<pulumi.Input<inputs.DatascienceModelCustomMetadataList>[]>;
    definedMetadataLists?: pulumi.Input<pulumi.Input<inputs.DatascienceModelDefinedMetadataList>[]>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    emptyModel?: pulumi.Input<boolean>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    inputSchema?: pulumi.Input<string>;
    modelArtifact?: pulumi.Input<string>;
    outputSchema?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatascienceModelTimeouts>;
}

/**
 * The set of arguments for constructing a DatascienceModel resource.
 */
export interface DatascienceModelArgs {
    artifactContentDisposition?: pulumi.Input<string>;
    artifactContentLength: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    customMetadataLists?: pulumi.Input<pulumi.Input<inputs.DatascienceModelCustomMetadataList>[]>;
    definedMetadataLists?: pulumi.Input<pulumi.Input<inputs.DatascienceModelDefinedMetadataList>[]>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    inputSchema?: pulumi.Input<string>;
    modelArtifact: pulumi.Input<string>;
    outputSchema?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatascienceModelTimeouts>;
}
