// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLogAnalyticsNamespaceEffectiveProperties(args: GetLogAnalyticsNamespaceEffectivePropertiesArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsNamespaceEffectivePropertiesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLogAnalyticsNamespaceEffectiveProperties:getLogAnalyticsNamespaceEffectiveProperties", {
        "agentId": args.agentId,
        "entityId": args.entityId,
        "filters": args.filters,
        "id": args.id,
        "isIncludePatterns": args.isIncludePatterns,
        "name": args.name,
        "namespace": args.namespace,
        "patternId": args.patternId,
        "sourceName": args.sourceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespaceEffectiveProperties.
 */
export interface GetLogAnalyticsNamespaceEffectivePropertiesArgs {
    agentId?: string;
    entityId?: string;
    filters?: inputs.GetLogAnalyticsNamespaceEffectivePropertiesFilter[];
    id?: string;
    isIncludePatterns?: boolean;
    name?: string;
    namespace: string;
    patternId?: number;
    sourceName?: string;
}

/**
 * A collection of values returned by getLogAnalyticsNamespaceEffectiveProperties.
 */
export interface GetLogAnalyticsNamespaceEffectivePropertiesResult {
    readonly agentId?: string;
    readonly effectivePropertyCollections: outputs.GetLogAnalyticsNamespaceEffectivePropertiesEffectivePropertyCollection[];
    readonly entityId?: string;
    readonly filters?: outputs.GetLogAnalyticsNamespaceEffectivePropertiesFilter[];
    readonly id: string;
    readonly isIncludePatterns?: boolean;
    readonly name?: string;
    readonly namespace: string;
    readonly patternId?: number;
    readonly sourceName?: string;
}
export function getLogAnalyticsNamespaceEffectivePropertiesOutput(args: GetLogAnalyticsNamespaceEffectivePropertiesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsNamespaceEffectivePropertiesResult> {
    return pulumi.output(args).apply((a: any) => getLogAnalyticsNamespaceEffectiveProperties(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespaceEffectiveProperties.
 */
export interface GetLogAnalyticsNamespaceEffectivePropertiesOutputArgs {
    agentId?: pulumi.Input<string>;
    entityId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetLogAnalyticsNamespaceEffectivePropertiesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    isIncludePatterns?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    patternId?: pulumi.Input<number>;
    sourceName?: pulumi.Input<string>;
}
