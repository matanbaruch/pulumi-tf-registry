// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityDomainsMyAuthToken(args: GetIdentityDomainsMyAuthTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityDomainsMyAuthTokenResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityDomainsMyAuthToken:getIdentityDomainsMyAuthToken", {
        "authorization": args.authorization,
        "idcsEndpoint": args.idcsEndpoint,
        "myAuthTokenId": args.myAuthTokenId,
        "resourceTypeSchemaVersion": args.resourceTypeSchemaVersion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityDomainsMyAuthToken.
 */
export interface GetIdentityDomainsMyAuthTokenArgs {
    authorization?: string;
    idcsEndpoint: string;
    myAuthTokenId: string;
    resourceTypeSchemaVersion?: string;
}

/**
 * A collection of values returned by getIdentityDomainsMyAuthToken.
 */
export interface GetIdentityDomainsMyAuthTokenResult {
    readonly authorization?: string;
    readonly compartmentOcid: string;
    readonly deleteInProgress: boolean;
    readonly description: string;
    readonly domainOcid: string;
    readonly expiresOn: string;
    readonly id: string;
    readonly idcsCreatedBies: outputs.GetIdentityDomainsMyAuthTokenIdcsCreatedBy[];
    readonly idcsEndpoint: string;
    readonly idcsLastModifiedBies: outputs.GetIdentityDomainsMyAuthTokenIdcsLastModifiedBy[];
    readonly idcsLastUpgradedInRelease: string;
    readonly idcsPreventedOperations: string[];
    readonly metas: outputs.GetIdentityDomainsMyAuthTokenMeta[];
    readonly myAuthTokenId: string;
    readonly ocid: string;
    readonly resourceTypeSchemaVersion?: string;
    readonly schemas: string[];
    readonly status: string;
    readonly tags: outputs.GetIdentityDomainsMyAuthTokenTag[];
    readonly tenancyOcid: string;
    readonly users: outputs.GetIdentityDomainsMyAuthTokenUser[];
}
export function getIdentityDomainsMyAuthTokenOutput(args: GetIdentityDomainsMyAuthTokenOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityDomainsMyAuthTokenResult> {
    return pulumi.output(args).apply((a: any) => getIdentityDomainsMyAuthToken(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityDomainsMyAuthToken.
 */
export interface GetIdentityDomainsMyAuthTokenOutputArgs {
    authorization?: pulumi.Input<string>;
    idcsEndpoint: pulumi.Input<string>;
    myAuthTokenId: pulumi.Input<string>;
    resourceTypeSchemaVersion?: pulumi.Input<string>;
}
