// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRecoveryProtectionPolicy(args: GetRecoveryProtectionPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetRecoveryProtectionPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getRecoveryProtectionPolicy:getRecoveryProtectionPolicy", {
        "protectionPolicyId": args.protectionPolicyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRecoveryProtectionPolicy.
 */
export interface GetRecoveryProtectionPolicyArgs {
    protectionPolicyId: string;
}

/**
 * A collection of values returned by getRecoveryProtectionPolicy.
 */
export interface GetRecoveryProtectionPolicyResult {
    readonly backupRetentionPeriodInDays: number;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isPredefinedPolicy: boolean;
    readonly lifecycleDetails: string;
    readonly mustEnforceCloudLocality: boolean;
    readonly policyLockedDateTime: string;
    readonly protectionPolicyId: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getRecoveryProtectionPolicyOutput(args: GetRecoveryProtectionPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecoveryProtectionPolicyResult> {
    return pulumi.output(args).apply((a: any) => getRecoveryProtectionPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getRecoveryProtectionPolicy.
 */
export interface GetRecoveryProtectionPolicyOutputArgs {
    protectionPolicyId: pulumi.Input<string>;
}
