// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFunctionsFunctions(args: GetFunctionsFunctionsArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionsFunctionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getFunctionsFunctions:getFunctionsFunctions", {
        "applicationId": args.applicationId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFunctionsFunctions.
 */
export interface GetFunctionsFunctionsArgs {
    applicationId: string;
    displayName?: string;
    filters?: inputs.GetFunctionsFunctionsFilter[];
    id?: string;
    state?: string;
}

/**
 * A collection of values returned by getFunctionsFunctions.
 */
export interface GetFunctionsFunctionsResult {
    readonly applicationId: string;
    readonly displayName?: string;
    readonly filters?: outputs.GetFunctionsFunctionsFilter[];
    readonly functions: outputs.GetFunctionsFunctionsFunction[];
    readonly id?: string;
    readonly state?: string;
}
export function getFunctionsFunctionsOutput(args: GetFunctionsFunctionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFunctionsFunctionsResult> {
    return pulumi.output(args).apply((a: any) => getFunctionsFunctions(a, opts))
}

/**
 * A collection of arguments for invoking getFunctionsFunctions.
 */
export interface GetFunctionsFunctionsOutputArgs {
    applicationId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetFunctionsFunctionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
