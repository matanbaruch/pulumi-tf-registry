// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMeteringComputationUsageCarbonEmissionsConfig(args: GetMeteringComputationUsageCarbonEmissionsConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetMeteringComputationUsageCarbonEmissionsConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMeteringComputationUsageCarbonEmissionsConfig:getMeteringComputationUsageCarbonEmissionsConfig", {
        "id": args.id,
        "tenantId": args.tenantId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMeteringComputationUsageCarbonEmissionsConfig.
 */
export interface GetMeteringComputationUsageCarbonEmissionsConfigArgs {
    id?: string;
    tenantId: string;
}

/**
 * A collection of values returned by getMeteringComputationUsageCarbonEmissionsConfig.
 */
export interface GetMeteringComputationUsageCarbonEmissionsConfigResult {
    readonly id: string;
    readonly items: outputs.GetMeteringComputationUsageCarbonEmissionsConfigItem[];
    readonly tenantId: string;
}
export function getMeteringComputationUsageCarbonEmissionsConfigOutput(args: GetMeteringComputationUsageCarbonEmissionsConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMeteringComputationUsageCarbonEmissionsConfigResult> {
    return pulumi.output(args).apply((a: any) => getMeteringComputationUsageCarbonEmissionsConfig(a, opts))
}

/**
 * A collection of arguments for invoking getMeteringComputationUsageCarbonEmissionsConfig.
 */
export interface GetMeteringComputationUsageCarbonEmissionsConfigOutputArgs {
    id?: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}
