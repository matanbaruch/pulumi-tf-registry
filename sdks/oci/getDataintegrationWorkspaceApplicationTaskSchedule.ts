// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataintegrationWorkspaceApplicationTaskSchedule(args: GetDataintegrationWorkspaceApplicationTaskScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetDataintegrationWorkspaceApplicationTaskScheduleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataintegrationWorkspaceApplicationTaskSchedule:getDataintegrationWorkspaceApplicationTaskSchedule", {
        "applicationKey": args.applicationKey,
        "taskScheduleKey": args.taskScheduleKey,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataintegrationWorkspaceApplicationTaskSchedule.
 */
export interface GetDataintegrationWorkspaceApplicationTaskScheduleArgs {
    applicationKey: string;
    taskScheduleKey: string;
    workspaceId: string;
}

/**
 * A collection of values returned by getDataintegrationWorkspaceApplicationTaskSchedule.
 */
export interface GetDataintegrationWorkspaceApplicationTaskScheduleResult {
    readonly applicationKey: string;
    readonly authMode: string;
    readonly configProviderDelegate: string;
    readonly description: string;
    readonly endTimeMillis: string;
    readonly expectedDuration: number;
    readonly expectedDurationUnit: string;
    readonly id: string;
    readonly identifier: string;
    readonly isBackfillEnabled: boolean;
    readonly isConcurrentAllowed: boolean;
    readonly isEnabled: boolean;
    readonly key: string;
    readonly lastRunDetails: outputs.GetDataintegrationWorkspaceApplicationTaskScheduleLastRunDetail[];
    readonly metadatas: outputs.GetDataintegrationWorkspaceApplicationTaskScheduleMetadata[];
    readonly modelType: string;
    readonly modelVersion: string;
    readonly name: string;
    readonly nextRunTimeMillis: string;
    readonly numberOfRetries: number;
    readonly objectStatus: number;
    readonly objectVersion: number;
    readonly parentReves: outputs.GetDataintegrationWorkspaceApplicationTaskScheduleParentRef[];
    readonly registryMetadatas: outputs.GetDataintegrationWorkspaceApplicationTaskScheduleRegistryMetadata[];
    readonly retryAttempts: number;
    readonly retryDelay: number;
    readonly retryDelayUnit: string;
    readonly scheduleReves: outputs.GetDataintegrationWorkspaceApplicationTaskScheduleScheduleRef[];
    readonly startTimeMillis: string;
    readonly taskScheduleKey: string;
    readonly workspaceId: string;
}
export function getDataintegrationWorkspaceApplicationTaskScheduleOutput(args: GetDataintegrationWorkspaceApplicationTaskScheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataintegrationWorkspaceApplicationTaskScheduleResult> {
    return pulumi.output(args).apply((a: any) => getDataintegrationWorkspaceApplicationTaskSchedule(a, opts))
}

/**
 * A collection of arguments for invoking getDataintegrationWorkspaceApplicationTaskSchedule.
 */
export interface GetDataintegrationWorkspaceApplicationTaskScheduleOutputArgs {
    applicationKey: pulumi.Input<string>;
    taskScheduleKey: pulumi.Input<string>;
    workspaceId: pulumi.Input<string>;
}
