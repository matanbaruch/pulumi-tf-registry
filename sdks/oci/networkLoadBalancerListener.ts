// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetworkLoadBalancerListener extends pulumi.CustomResource {
    /**
     * Get an existing NetworkLoadBalancerListener resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkLoadBalancerListenerState, opts?: pulumi.CustomResourceOptions): NetworkLoadBalancerListener {
        return new NetworkLoadBalancerListener(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/networkLoadBalancerListener:NetworkLoadBalancerListener';

    /**
     * Returns true if the given object is an instance of NetworkLoadBalancerListener.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkLoadBalancerListener {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkLoadBalancerListener.__pulumiType;
    }

    public readonly defaultBackendSetName!: pulumi.Output<string>;
    public readonly ipVersion!: pulumi.Output<string>;
    public readonly isPpv2enabled!: pulumi.Output<boolean>;
    public readonly name!: pulumi.Output<string>;
    public readonly networkLoadBalancerId!: pulumi.Output<string>;
    public readonly port!: pulumi.Output<number>;
    public readonly protocol!: pulumi.Output<string>;
    public readonly tcpIdleTimeout!: pulumi.Output<number>;
    public readonly timeouts!: pulumi.Output<outputs.NetworkLoadBalancerListenerTimeouts | undefined>;
    public readonly udpIdleTimeout!: pulumi.Output<number>;

    /**
     * Create a NetworkLoadBalancerListener resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkLoadBalancerListenerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkLoadBalancerListenerArgs | NetworkLoadBalancerListenerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkLoadBalancerListenerState | undefined;
            resourceInputs["defaultBackendSetName"] = state ? state.defaultBackendSetName : undefined;
            resourceInputs["ipVersion"] = state ? state.ipVersion : undefined;
            resourceInputs["isPpv2enabled"] = state ? state.isPpv2enabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkLoadBalancerId"] = state ? state.networkLoadBalancerId : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["tcpIdleTimeout"] = state ? state.tcpIdleTimeout : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["udpIdleTimeout"] = state ? state.udpIdleTimeout : undefined;
        } else {
            const args = argsOrState as NetworkLoadBalancerListenerArgs | undefined;
            if ((!args || args.defaultBackendSetName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultBackendSetName'");
            }
            if ((!args || args.networkLoadBalancerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkLoadBalancerId'");
            }
            if ((!args || args.port === undefined) && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["defaultBackendSetName"] = args ? args.defaultBackendSetName : undefined;
            resourceInputs["ipVersion"] = args ? args.ipVersion : undefined;
            resourceInputs["isPpv2enabled"] = args ? args.isPpv2enabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkLoadBalancerId"] = args ? args.networkLoadBalancerId : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["tcpIdleTimeout"] = args ? args.tcpIdleTimeout : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["udpIdleTimeout"] = args ? args.udpIdleTimeout : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkLoadBalancerListener.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworkLoadBalancerListener resources.
 */
export interface NetworkLoadBalancerListenerState {
    defaultBackendSetName?: pulumi.Input<string>;
    ipVersion?: pulumi.Input<string>;
    isPpv2enabled?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    networkLoadBalancerId?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    tcpIdleTimeout?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.NetworkLoadBalancerListenerTimeouts>;
    udpIdleTimeout?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a NetworkLoadBalancerListener resource.
 */
export interface NetworkLoadBalancerListenerArgs {
    defaultBackendSetName: pulumi.Input<string>;
    ipVersion?: pulumi.Input<string>;
    isPpv2enabled?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    networkLoadBalancerId: pulumi.Input<string>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    tcpIdleTimeout?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.NetworkLoadBalancerListenerTimeouts>;
    udpIdleTimeout?: pulumi.Input<number>;
}
