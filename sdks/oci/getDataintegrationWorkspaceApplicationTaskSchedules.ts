// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataintegrationWorkspaceApplicationTaskSchedules(args: GetDataintegrationWorkspaceApplicationTaskSchedulesArgs, opts?: pulumi.InvokeOptions): Promise<GetDataintegrationWorkspaceApplicationTaskSchedulesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataintegrationWorkspaceApplicationTaskSchedules:getDataintegrationWorkspaceApplicationTaskSchedules", {
        "applicationKey": args.applicationKey,
        "filters": args.filters,
        "id": args.id,
        "identifiers": args.identifiers,
        "isEnabled": args.isEnabled,
        "keys": args.keys,
        "name": args.name,
        "types": args.types,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataintegrationWorkspaceApplicationTaskSchedules.
 */
export interface GetDataintegrationWorkspaceApplicationTaskSchedulesArgs {
    applicationKey: string;
    filters?: inputs.GetDataintegrationWorkspaceApplicationTaskSchedulesFilter[];
    id?: string;
    identifiers?: string[];
    isEnabled?: boolean;
    keys?: string[];
    name?: string;
    types?: string[];
    workspaceId: string;
}

/**
 * A collection of values returned by getDataintegrationWorkspaceApplicationTaskSchedules.
 */
export interface GetDataintegrationWorkspaceApplicationTaskSchedulesResult {
    readonly applicationKey: string;
    readonly filters?: outputs.GetDataintegrationWorkspaceApplicationTaskSchedulesFilter[];
    readonly id: string;
    readonly identifiers?: string[];
    readonly isEnabled?: boolean;
    readonly keys?: string[];
    readonly name?: string;
    readonly taskScheduleSummaryCollections: outputs.GetDataintegrationWorkspaceApplicationTaskSchedulesTaskScheduleSummaryCollection[];
    readonly types?: string[];
    readonly workspaceId: string;
}
export function getDataintegrationWorkspaceApplicationTaskSchedulesOutput(args: GetDataintegrationWorkspaceApplicationTaskSchedulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataintegrationWorkspaceApplicationTaskSchedulesResult> {
    return pulumi.output(args).apply((a: any) => getDataintegrationWorkspaceApplicationTaskSchedules(a, opts))
}

/**
 * A collection of arguments for invoking getDataintegrationWorkspaceApplicationTaskSchedules.
 */
export interface GetDataintegrationWorkspaceApplicationTaskSchedulesOutputArgs {
    applicationKey: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataintegrationWorkspaceApplicationTaskSchedulesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    identifiers?: pulumi.Input<pulumi.Input<string>[]>;
    isEnabled?: pulumi.Input<boolean>;
    keys?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    types?: pulumi.Input<pulumi.Input<string>[]>;
    workspaceId: pulumi.Input<string>;
}
