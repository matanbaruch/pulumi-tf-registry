// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOperatorAccessControlOperatorAction(args: GetOperatorAccessControlOperatorActionArgs, opts?: pulumi.InvokeOptions): Promise<GetOperatorAccessControlOperatorActionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOperatorAccessControlOperatorAction:getOperatorAccessControlOperatorAction", {
        "id": args.id,
        "operatorActionId": args.operatorActionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOperatorAccessControlOperatorAction.
 */
export interface GetOperatorAccessControlOperatorActionArgs {
    id?: string;
    operatorActionId: string;
}

/**
 * A collection of values returned by getOperatorAccessControlOperatorAction.
 */
export interface GetOperatorAccessControlOperatorActionResult {
    readonly component: string;
    readonly customerDisplayName: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly operatorActionId: string;
    readonly properties: outputs.GetOperatorAccessControlOperatorActionProperty[];
    readonly resourceType: string;
}
export function getOperatorAccessControlOperatorActionOutput(args: GetOperatorAccessControlOperatorActionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOperatorAccessControlOperatorActionResult> {
    return pulumi.output(args).apply((a: any) => getOperatorAccessControlOperatorAction(a, opts))
}

/**
 * A collection of arguments for invoking getOperatorAccessControlOperatorAction.
 */
export interface GetOperatorAccessControlOperatorActionOutputArgs {
    id?: pulumi.Input<string>;
    operatorActionId: pulumi.Input<string>;
}
