// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDelegateAccessControlDelegationControl(args: GetDelegateAccessControlDelegationControlArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegateAccessControlDelegationControlResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDelegateAccessControlDelegationControl:getDelegateAccessControlDelegationControl", {
        "delegationControlId": args.delegationControlId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDelegateAccessControlDelegationControl.
 */
export interface GetDelegateAccessControlDelegationControlArgs {
    delegationControlId: string;
}

/**
 * A collection of values returned by getDelegateAccessControlDelegationControl.
 */
export interface GetDelegateAccessControlDelegationControlResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly delegationControlId: string;
    readonly delegationSubscriptionIds: string[];
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isAutoApproveDuringMaintenance: boolean;
    readonly lifecycleStateDetails: string;
    readonly notificationMessageFormat: string;
    readonly notificationTopicId: string;
    readonly numApprovalsRequired: number;
    readonly preApprovedServiceProviderActionNames: string[];
    readonly resourceIds: string[];
    readonly resourceType: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeDeleted: string;
    readonly timeUpdated: string;
    readonly vaultId: string;
    readonly vaultKeyId: string;
}
export function getDelegateAccessControlDelegationControlOutput(args: GetDelegateAccessControlDelegationControlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDelegateAccessControlDelegationControlResult> {
    return pulumi.output(args).apply((a: any) => getDelegateAccessControlDelegationControl(a, opts))
}

/**
 * A collection of arguments for invoking getDelegateAccessControlDelegationControl.
 */
export interface GetDelegateAccessControlDelegationControlOutputArgs {
    delegationControlId: pulumi.Input<string>;
}
