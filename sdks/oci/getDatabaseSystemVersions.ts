// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseSystemVersions(args: GetDatabaseSystemVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseSystemVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseSystemVersions:getDatabaseSystemVersions", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "giVersion": args.giVersion,
        "id": args.id,
        "shape": args.shape,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseSystemVersions.
 */
export interface GetDatabaseSystemVersionsArgs {
    compartmentId: string;
    filters?: inputs.GetDatabaseSystemVersionsFilter[];
    giVersion: string;
    id?: string;
    shape: string;
}

/**
 * A collection of values returned by getDatabaseSystemVersions.
 */
export interface GetDatabaseSystemVersionsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.GetDatabaseSystemVersionsFilter[];
    readonly giVersion: string;
    readonly id: string;
    readonly shape: string;
    readonly systemVersionCollections: outputs.GetDatabaseSystemVersionsSystemVersionCollection[];
}
export function getDatabaseSystemVersionsOutput(args: GetDatabaseSystemVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseSystemVersionsResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseSystemVersions(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseSystemVersions.
 */
export interface GetDatabaseSystemVersionsOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseSystemVersionsFilterArgs>[]>;
    giVersion: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    shape: pulumi.Input<string>;
}
