// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IntegrationIntegrationInstance extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationIntegrationInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationIntegrationInstanceState, opts?: pulumi.CustomResourceOptions): IntegrationIntegrationInstance {
        return new IntegrationIntegrationInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/integrationIntegrationInstance:IntegrationIntegrationInstance';

    /**
     * Returns true if the given object is an instance of IntegrationIntegrationInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationIntegrationInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationIntegrationInstance.__pulumiType;
    }

    public readonly alternateCustomEndpoints!: pulumi.Output<outputs.IntegrationIntegrationInstanceAlternateCustomEndpoint[] | undefined>;
    public /*out*/ readonly attachments!: pulumi.Output<outputs.IntegrationIntegrationInstanceAttachment[]>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly consumptionModel!: pulumi.Output<string>;
    public readonly customEndpoint!: pulumi.Output<outputs.IntegrationIntegrationInstanceCustomEndpoint | undefined>;
    public /*out*/ readonly dataRetentionPeriod!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly domainId!: pulumi.Output<string | undefined>;
    public readonly enableProcessAutomationTrigger!: pulumi.Output<number | undefined>;
    public readonly extendDataRetentionTrigger!: pulumi.Output<number | undefined>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly idcsAt!: pulumi.Output<string | undefined>;
    public /*out*/ readonly idcsInfos!: pulumi.Output<outputs.IntegrationIntegrationInstanceIdcsInfo[]>;
    public /*out*/ readonly instanceUrl!: pulumi.Output<string>;
    public readonly integrationInstanceType!: pulumi.Output<string>;
    public readonly isByol!: pulumi.Output<boolean>;
    public readonly isFileServerEnabled!: pulumi.Output<boolean>;
    public readonly isVisualBuilderEnabled!: pulumi.Output<boolean>;
    public readonly messagePacks!: pulumi.Output<number>;
    public readonly networkEndpointDetails!: pulumi.Output<outputs.IntegrationIntegrationInstanceNetworkEndpointDetails | undefined>;
    public /*out*/ readonly privateEndpointOutboundConnections!: pulumi.Output<outputs.IntegrationIntegrationInstancePrivateEndpointOutboundConnection[]>;
    public readonly shape!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string>;
    public /*out*/ readonly stateMessage!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.IntegrationIntegrationInstanceTimeouts | undefined>;

    /**
     * Create a IntegrationIntegrationInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationIntegrationInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationIntegrationInstanceArgs | IntegrationIntegrationInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationIntegrationInstanceState | undefined;
            resourceInputs["alternateCustomEndpoints"] = state ? state.alternateCustomEndpoints : undefined;
            resourceInputs["attachments"] = state ? state.attachments : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["consumptionModel"] = state ? state.consumptionModel : undefined;
            resourceInputs["customEndpoint"] = state ? state.customEndpoint : undefined;
            resourceInputs["dataRetentionPeriod"] = state ? state.dataRetentionPeriod : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["domainId"] = state ? state.domainId : undefined;
            resourceInputs["enableProcessAutomationTrigger"] = state ? state.enableProcessAutomationTrigger : undefined;
            resourceInputs["extendDataRetentionTrigger"] = state ? state.extendDataRetentionTrigger : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["idcsAt"] = state ? state.idcsAt : undefined;
            resourceInputs["idcsInfos"] = state ? state.idcsInfos : undefined;
            resourceInputs["instanceUrl"] = state ? state.instanceUrl : undefined;
            resourceInputs["integrationInstanceType"] = state ? state.integrationInstanceType : undefined;
            resourceInputs["isByol"] = state ? state.isByol : undefined;
            resourceInputs["isFileServerEnabled"] = state ? state.isFileServerEnabled : undefined;
            resourceInputs["isVisualBuilderEnabled"] = state ? state.isVisualBuilderEnabled : undefined;
            resourceInputs["messagePacks"] = state ? state.messagePacks : undefined;
            resourceInputs["networkEndpointDetails"] = state ? state.networkEndpointDetails : undefined;
            resourceInputs["privateEndpointOutboundConnections"] = state ? state.privateEndpointOutboundConnections : undefined;
            resourceInputs["shape"] = state ? state.shape : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateMessage"] = state ? state.stateMessage : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as IntegrationIntegrationInstanceArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.integrationInstanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationInstanceType'");
            }
            if ((!args || args.isByol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isByol'");
            }
            if ((!args || args.messagePacks === undefined) && !opts.urn) {
                throw new Error("Missing required property 'messagePacks'");
            }
            resourceInputs["alternateCustomEndpoints"] = args ? args.alternateCustomEndpoints : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["consumptionModel"] = args ? args.consumptionModel : undefined;
            resourceInputs["customEndpoint"] = args ? args.customEndpoint : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["domainId"] = args ? args.domainId : undefined;
            resourceInputs["enableProcessAutomationTrigger"] = args ? args.enableProcessAutomationTrigger : undefined;
            resourceInputs["extendDataRetentionTrigger"] = args ? args.extendDataRetentionTrigger : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["idcsAt"] = args?.idcsAt ? pulumi.secret(args.idcsAt) : undefined;
            resourceInputs["integrationInstanceType"] = args ? args.integrationInstanceType : undefined;
            resourceInputs["isByol"] = args ? args.isByol : undefined;
            resourceInputs["isFileServerEnabled"] = args ? args.isFileServerEnabled : undefined;
            resourceInputs["isVisualBuilderEnabled"] = args ? args.isVisualBuilderEnabled : undefined;
            resourceInputs["messagePacks"] = args ? args.messagePacks : undefined;
            resourceInputs["networkEndpointDetails"] = args ? args.networkEndpointDetails : undefined;
            resourceInputs["shape"] = args ? args.shape : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["attachments"] = undefined /*out*/;
            resourceInputs["dataRetentionPeriod"] = undefined /*out*/;
            resourceInputs["idcsInfos"] = undefined /*out*/;
            resourceInputs["instanceUrl"] = undefined /*out*/;
            resourceInputs["privateEndpointOutboundConnections"] = undefined /*out*/;
            resourceInputs["stateMessage"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["idcsAt"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(IntegrationIntegrationInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IntegrationIntegrationInstance resources.
 */
export interface IntegrationIntegrationInstanceState {
    alternateCustomEndpoints?: pulumi.Input<pulumi.Input<inputs.IntegrationIntegrationInstanceAlternateCustomEndpoint>[]>;
    attachments?: pulumi.Input<pulumi.Input<inputs.IntegrationIntegrationInstanceAttachment>[]>;
    compartmentId?: pulumi.Input<string>;
    consumptionModel?: pulumi.Input<string>;
    customEndpoint?: pulumi.Input<inputs.IntegrationIntegrationInstanceCustomEndpoint>;
    dataRetentionPeriod?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    domainId?: pulumi.Input<string>;
    enableProcessAutomationTrigger?: pulumi.Input<number>;
    extendDataRetentionTrigger?: pulumi.Input<number>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    idcsAt?: pulumi.Input<string>;
    idcsInfos?: pulumi.Input<pulumi.Input<inputs.IntegrationIntegrationInstanceIdcsInfo>[]>;
    instanceUrl?: pulumi.Input<string>;
    integrationInstanceType?: pulumi.Input<string>;
    isByol?: pulumi.Input<boolean>;
    isFileServerEnabled?: pulumi.Input<boolean>;
    isVisualBuilderEnabled?: pulumi.Input<boolean>;
    messagePacks?: pulumi.Input<number>;
    networkEndpointDetails?: pulumi.Input<inputs.IntegrationIntegrationInstanceNetworkEndpointDetails>;
    privateEndpointOutboundConnections?: pulumi.Input<pulumi.Input<inputs.IntegrationIntegrationInstancePrivateEndpointOutboundConnection>[]>;
    shape?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    stateMessage?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.IntegrationIntegrationInstanceTimeouts>;
}

/**
 * The set of arguments for constructing a IntegrationIntegrationInstance resource.
 */
export interface IntegrationIntegrationInstanceArgs {
    alternateCustomEndpoints?: pulumi.Input<pulumi.Input<inputs.IntegrationIntegrationInstanceAlternateCustomEndpoint>[]>;
    compartmentId: pulumi.Input<string>;
    consumptionModel?: pulumi.Input<string>;
    customEndpoint?: pulumi.Input<inputs.IntegrationIntegrationInstanceCustomEndpoint>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    domainId?: pulumi.Input<string>;
    enableProcessAutomationTrigger?: pulumi.Input<number>;
    extendDataRetentionTrigger?: pulumi.Input<number>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    idcsAt?: pulumi.Input<string>;
    integrationInstanceType: pulumi.Input<string>;
    isByol: pulumi.Input<boolean>;
    isFileServerEnabled?: pulumi.Input<boolean>;
    isVisualBuilderEnabled?: pulumi.Input<boolean>;
    messagePacks: pulumi.Input<number>;
    networkEndpointDetails?: pulumi.Input<inputs.IntegrationIntegrationInstanceNetworkEndpointDetails>;
    shape?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.IntegrationIntegrationInstanceTimeouts>;
}
