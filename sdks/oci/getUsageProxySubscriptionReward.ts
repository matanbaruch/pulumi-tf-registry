// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUsageProxySubscriptionReward(args: GetUsageProxySubscriptionRewardArgs, opts?: pulumi.InvokeOptions): Promise<GetUsageProxySubscriptionRewardResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getUsageProxySubscriptionReward:getUsageProxySubscriptionReward", {
        "id": args.id,
        "subscriptionId": args.subscriptionId,
        "tenancyId": args.tenancyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUsageProxySubscriptionReward.
 */
export interface GetUsageProxySubscriptionRewardArgs {
    id?: string;
    subscriptionId: string;
    tenancyId: string;
}

/**
 * A collection of values returned by getUsageProxySubscriptionReward.
 */
export interface GetUsageProxySubscriptionRewardResult {
    readonly id: string;
    readonly items: outputs.GetUsageProxySubscriptionRewardItem[];
    readonly subscriptionId: string;
    readonly summaries: outputs.GetUsageProxySubscriptionRewardSummary[];
    readonly tenancyId: string;
}
export function getUsageProxySubscriptionRewardOutput(args: GetUsageProxySubscriptionRewardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUsageProxySubscriptionRewardResult> {
    return pulumi.output(args).apply((a: any) => getUsageProxySubscriptionReward(a, opts))
}

/**
 * A collection of arguments for invoking getUsageProxySubscriptionReward.
 */
export interface GetUsageProxySubscriptionRewardOutputArgs {
    id?: pulumi.Input<string>;
    subscriptionId: pulumi.Input<string>;
    tenancyId: pulumi.Input<string>;
}
