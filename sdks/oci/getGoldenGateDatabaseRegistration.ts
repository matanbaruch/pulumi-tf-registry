// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGoldenGateDatabaseRegistration(args: GetGoldenGateDatabaseRegistrationArgs, opts?: pulumi.InvokeOptions): Promise<GetGoldenGateDatabaseRegistrationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getGoldenGateDatabaseRegistration:getGoldenGateDatabaseRegistration", {
        "databaseRegistrationId": args.databaseRegistrationId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGoldenGateDatabaseRegistration.
 */
export interface GetGoldenGateDatabaseRegistrationArgs {
    databaseRegistrationId: string;
}

/**
 * A collection of values returned by getGoldenGateDatabaseRegistration.
 */
export interface GetGoldenGateDatabaseRegistrationResult {
    readonly aliasName: string;
    readonly compartmentId: string;
    readonly connectionString: string;
    readonly databaseId: string;
    readonly databaseRegistrationId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly fqdn: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly ipAddress: string;
    readonly keyId: string;
    readonly lifecycleDetails: string;
    readonly password: string;
    readonly rcePrivateIp: string;
    readonly secretCompartmentId: string;
    readonly secretId: string;
    readonly sessionMode: string;
    readonly state: string;
    readonly subnetId: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly username: string;
    readonly vaultId: string;
    readonly wallet: string;
}
export function getGoldenGateDatabaseRegistrationOutput(args: GetGoldenGateDatabaseRegistrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGoldenGateDatabaseRegistrationResult> {
    return pulumi.output(args).apply((a: any) => getGoldenGateDatabaseRegistration(a, opts))
}

/**
 * A collection of arguments for invoking getGoldenGateDatabaseRegistration.
 */
export interface GetGoldenGateDatabaseRegistrationOutputArgs {
    databaseRegistrationId: pulumi.Input<string>;
}
