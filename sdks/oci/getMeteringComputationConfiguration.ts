// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMeteringComputationConfiguration(args: GetMeteringComputationConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetMeteringComputationConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMeteringComputationConfiguration:getMeteringComputationConfiguration", {
        "id": args.id,
        "tenantId": args.tenantId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMeteringComputationConfiguration.
 */
export interface GetMeteringComputationConfigurationArgs {
    id?: string;
    tenantId: string;
}

/**
 * A collection of values returned by getMeteringComputationConfiguration.
 */
export interface GetMeteringComputationConfigurationResult {
    readonly id: string;
    readonly items: outputs.GetMeteringComputationConfigurationItem[];
    readonly tenantId: string;
}
export function getMeteringComputationConfigurationOutput(args: GetMeteringComputationConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMeteringComputationConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getMeteringComputationConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getMeteringComputationConfiguration.
 */
export interface GetMeteringComputationConfigurationOutputArgs {
    id?: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}
