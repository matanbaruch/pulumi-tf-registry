// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeSecurityAssessmentFindingAnalytics(args: GetDataSafeSecurityAssessmentFindingAnalyticsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeSecurityAssessmentFindingAnalyticsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeSecurityAssessmentFindingAnalytics:getDataSafeSecurityAssessmentFindingAnalytics", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "findingKey": args.findingKey,
        "groupBy": args.groupBy,
        "id": args.id,
        "isTopFinding": args.isTopFinding,
        "severity": args.severity,
        "topFindingStatus": args.topFindingStatus,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeSecurityAssessmentFindingAnalytics.
 */
export interface GetDataSafeSecurityAssessmentFindingAnalyticsArgs {
    accessLevel?: string;
    compartmentId: string;
    compartmentIdInSubtree?: boolean;
    filters?: inputs.GetDataSafeSecurityAssessmentFindingAnalyticsFilter[];
    findingKey?: string;
    groupBy?: string;
    id?: string;
    isTopFinding?: boolean;
    severity?: string;
    topFindingStatus?: string;
}

/**
 * A collection of values returned by getDataSafeSecurityAssessmentFindingAnalytics.
 */
export interface GetDataSafeSecurityAssessmentFindingAnalyticsResult {
    readonly accessLevel?: string;
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.GetDataSafeSecurityAssessmentFindingAnalyticsFilter[];
    readonly findingAnalyticsCollections: outputs.GetDataSafeSecurityAssessmentFindingAnalyticsFindingAnalyticsCollection[];
    readonly findingKey?: string;
    readonly groupBy?: string;
    readonly id: string;
    readonly isTopFinding?: boolean;
    readonly severity?: string;
    readonly topFindingStatus?: string;
}
export function getDataSafeSecurityAssessmentFindingAnalyticsOutput(args: GetDataSafeSecurityAssessmentFindingAnalyticsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeSecurityAssessmentFindingAnalyticsResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeSecurityAssessmentFindingAnalytics(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeSecurityAssessmentFindingAnalytics.
 */
export interface GetDataSafeSecurityAssessmentFindingAnalyticsOutputArgs {
    accessLevel?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataSafeSecurityAssessmentFindingAnalyticsFilterArgs>[]>;
    findingKey?: pulumi.Input<string>;
    groupBy?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isTopFinding?: pulumi.Input<boolean>;
    severity?: pulumi.Input<string>;
    topFindingStatus?: pulumi.Input<string>;
}
