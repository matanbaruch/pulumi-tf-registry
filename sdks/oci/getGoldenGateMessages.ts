// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGoldenGateMessages(args: GetGoldenGateMessagesArgs, opts?: pulumi.InvokeOptions): Promise<GetGoldenGateMessagesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getGoldenGateMessages:getGoldenGateMessages", {
        "deploymentId": args.deploymentId,
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGoldenGateMessages.
 */
export interface GetGoldenGateMessagesArgs {
    deploymentId: string;
    filters?: inputs.GetGoldenGateMessagesFilter[];
    id?: string;
}

/**
 * A collection of values returned by getGoldenGateMessages.
 */
export interface GetGoldenGateMessagesResult {
    readonly deploymentId: string;
    readonly deploymentMessagesCollections: outputs.GetGoldenGateMessagesDeploymentMessagesCollection[];
    readonly filters?: outputs.GetGoldenGateMessagesFilter[];
    readonly id: string;
}
export function getGoldenGateMessagesOutput(args: GetGoldenGateMessagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGoldenGateMessagesResult> {
    return pulumi.output(args).apply((a: any) => getGoldenGateMessages(a, opts))
}

/**
 * A collection of arguments for invoking getGoldenGateMessages.
 */
export interface GetGoldenGateMessagesOutputArgs {
    deploymentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetGoldenGateMessagesFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
