// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkLoadBalancerNetworkLoadBalancer(args: GetNetworkLoadBalancerNetworkLoadBalancerArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkLoadBalancerNetworkLoadBalancerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getNetworkLoadBalancerNetworkLoadBalancer:getNetworkLoadBalancerNetworkLoadBalancer", {
        "networkLoadBalancerId": args.networkLoadBalancerId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkLoadBalancerNetworkLoadBalancer.
 */
export interface GetNetworkLoadBalancerNetworkLoadBalancerArgs {
    networkLoadBalancerId: string;
}

/**
 * A collection of values returned by getNetworkLoadBalancerNetworkLoadBalancer.
 */
export interface GetNetworkLoadBalancerNetworkLoadBalancerResult {
    readonly assignedIpv6: string;
    readonly assignedPrivateIpv4: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly ipAddresses: outputs.GetNetworkLoadBalancerNetworkLoadBalancerIpAddress[];
    readonly isPreserveSourceDestination: boolean;
    readonly isPrivate: boolean;
    readonly isSymmetricHashEnabled: boolean;
    readonly lifecycleDetails: string;
    readonly networkLoadBalancerId: string;
    readonly networkSecurityGroupIds: string[];
    readonly nlbIpVersion: string;
    readonly reservedIps: outputs.GetNetworkLoadBalancerNetworkLoadBalancerReservedIp[];
    readonly state: string;
    readonly subnetId: string;
    readonly subnetIpv6cidr: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getNetworkLoadBalancerNetworkLoadBalancerOutput(args: GetNetworkLoadBalancerNetworkLoadBalancerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkLoadBalancerNetworkLoadBalancerResult> {
    return pulumi.output(args).apply((a: any) => getNetworkLoadBalancerNetworkLoadBalancer(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkLoadBalancerNetworkLoadBalancer.
 */
export interface GetNetworkLoadBalancerNetworkLoadBalancerOutputArgs {
    networkLoadBalancerId: pulumi.Input<string>;
}
