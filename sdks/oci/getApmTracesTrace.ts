// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApmTracesTrace(args: GetApmTracesTraceArgs, opts?: pulumi.InvokeOptions): Promise<GetApmTracesTraceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getApmTracesTrace:getApmTracesTrace", {
        "apmDomainId": args.apmDomainId,
        "id": args.id,
        "timeTraceStartedGreaterThanOrEqualTo": args.timeTraceStartedGreaterThanOrEqualTo,
        "timeTraceStartedLessThan": args.timeTraceStartedLessThan,
        "traceKey": args.traceKey,
        "traceNamespace": args.traceNamespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApmTracesTrace.
 */
export interface GetApmTracesTraceArgs {
    apmDomainId: string;
    id?: string;
    timeTraceStartedGreaterThanOrEqualTo?: string;
    timeTraceStartedLessThan?: string;
    traceKey: string;
    traceNamespace?: string;
}

/**
 * A collection of values returned by getApmTracesTrace.
 */
export interface GetApmTracesTraceResult {
    readonly apmDomainId: string;
    readonly errorSpanCount: number;
    readonly id: string;
    readonly isFault: boolean;
    readonly key: string;
    readonly rootSpanDurationInMs: number;
    readonly rootSpanOperationName: string;
    readonly rootSpanServiceName: string;
    readonly serviceSummaries: outputs.GetApmTracesTraceServiceSummary[];
    readonly sourceName: string;
    readonly spanCount: number;
    readonly spanSummaries: outputs.GetApmTracesTraceSpanSummary[];
    readonly spans: outputs.GetApmTracesTraceSpan[];
    readonly timeEarliestSpanStarted: string;
    readonly timeLatestSpanEnded: string;
    readonly timeRootSpanEnded: string;
    readonly timeRootSpanStarted: string;
    readonly timeTraceStartedGreaterThanOrEqualTo?: string;
    readonly timeTraceStartedLessThan?: string;
    readonly traceDurationInMs: number;
    readonly traceErrorCode: string;
    readonly traceErrorType: string;
    readonly traceKey: string;
    readonly traceNamespace?: string;
    readonly traceStatus: string;
}
export function getApmTracesTraceOutput(args: GetApmTracesTraceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApmTracesTraceResult> {
    return pulumi.output(args).apply((a: any) => getApmTracesTrace(a, opts))
}

/**
 * A collection of arguments for invoking getApmTracesTrace.
 */
export interface GetApmTracesTraceOutputArgs {
    apmDomainId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    timeTraceStartedGreaterThanOrEqualTo?: pulumi.Input<string>;
    timeTraceStartedLessThan?: pulumi.Input<string>;
    traceKey: pulumi.Input<string>;
    traceNamespace?: pulumi.Input<string>;
}
