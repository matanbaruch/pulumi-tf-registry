// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDevopsRepositorySetting(args: GetDevopsRepositorySettingArgs, opts?: pulumi.InvokeOptions): Promise<GetDevopsRepositorySettingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDevopsRepositorySetting:getDevopsRepositorySetting", {
        "repositoryId": args.repositoryId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDevopsRepositorySetting.
 */
export interface GetDevopsRepositorySettingArgs {
    repositoryId: string;
}

/**
 * A collection of values returned by getDevopsRepositorySetting.
 */
export interface GetDevopsRepositorySettingResult {
    readonly approvalRules: outputs.GetDevopsRepositorySettingApprovalRule[];
    readonly id: string;
    readonly mergeChecks: outputs.GetDevopsRepositorySettingMergeCheck[];
    readonly mergeSettings: outputs.GetDevopsRepositorySettingMergeSetting[];
    readonly repositoryId: string;
}
export function getDevopsRepositorySettingOutput(args: GetDevopsRepositorySettingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDevopsRepositorySettingResult> {
    return pulumi.output(args).apply((a: any) => getDevopsRepositorySetting(a, opts))
}

/**
 * A collection of arguments for invoking getDevopsRepositorySetting.
 */
export interface GetDevopsRepositorySettingOutputArgs {
    repositoryId: pulumi.Input<string>;
}
