// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCoreAppCatalogListing(args: GetCoreAppCatalogListingArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreAppCatalogListingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreAppCatalogListing:getCoreAppCatalogListing", {
        "id": args.id,
        "listingId": args.listingId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreAppCatalogListing.
 */
export interface GetCoreAppCatalogListingArgs {
    id?: string;
    listingId: string;
}

/**
 * A collection of values returned by getCoreAppCatalogListing.
 */
export interface GetCoreAppCatalogListingResult {
    readonly contactUrl: string;
    readonly description: string;
    readonly displayName: string;
    readonly id: string;
    readonly listingId: string;
    readonly publisherLogoUrl: string;
    readonly publisherName: string;
    readonly summary: string;
    readonly timePublished: string;
}
export function getCoreAppCatalogListingOutput(args: GetCoreAppCatalogListingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreAppCatalogListingResult> {
    return pulumi.output(args).apply((a: any) => getCoreAppCatalogListing(a, opts))
}

/**
 * A collection of arguments for invoking getCoreAppCatalogListing.
 */
export interface GetCoreAppCatalogListingOutputArgs {
    id?: pulumi.Input<string>;
    listingId: pulumi.Input<string>;
}
