// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatabaseApplicationVip(args: GetDatabaseApplicationVipArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseApplicationVipResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseApplicationVip:getDatabaseApplicationVip", {
        "applicationVipId": args.applicationVipId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseApplicationVip.
 */
export interface GetDatabaseApplicationVipArgs {
    applicationVipId: string;
}

/**
 * A collection of values returned by getDatabaseApplicationVip.
 */
export interface GetDatabaseApplicationVipResult {
    readonly applicationVipId: string;
    readonly cloudVmClusterId: string;
    readonly compartmentId: string;
    readonly dbNodeId: string;
    readonly definedTags: {[key: string]: string};
    readonly freeformTags: {[key: string]: string};
    readonly hostnameLabel: string;
    readonly id: string;
    readonly ipAddress: string;
    readonly lifecycleDetails: string;
    readonly state: string;
    readonly subnetId: string;
    readonly timeAssigned: string;
}
export function getDatabaseApplicationVipOutput(args: GetDatabaseApplicationVipOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseApplicationVipResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseApplicationVip(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseApplicationVip.
 */
export interface GetDatabaseApplicationVipOutputArgs {
    applicationVipId: pulumi.Input<string>;
}
