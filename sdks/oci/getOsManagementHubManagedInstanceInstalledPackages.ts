// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsManagementHubManagedInstanceInstalledPackages(args: GetOsManagementHubManagedInstanceInstalledPackagesArgs, opts?: pulumi.InvokeOptions): Promise<GetOsManagementHubManagedInstanceInstalledPackagesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsManagementHubManagedInstanceInstalledPackages:getOsManagementHubManagedInstanceInstalledPackages", {
        "compartmentId": args.compartmentId,
        "displayNameContains": args.displayNameContains,
        "displayNames": args.displayNames,
        "filters": args.filters,
        "id": args.id,
        "managedInstanceId": args.managedInstanceId,
        "timeInstallDateEnd": args.timeInstallDateEnd,
        "timeInstallDateStart": args.timeInstallDateStart,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsManagementHubManagedInstanceInstalledPackages.
 */
export interface GetOsManagementHubManagedInstanceInstalledPackagesArgs {
    compartmentId?: string;
    displayNameContains?: string;
    displayNames?: string[];
    filters?: inputs.GetOsManagementHubManagedInstanceInstalledPackagesFilter[];
    id?: string;
    managedInstanceId: string;
    timeInstallDateEnd?: string;
    timeInstallDateStart?: string;
}

/**
 * A collection of values returned by getOsManagementHubManagedInstanceInstalledPackages.
 */
export interface GetOsManagementHubManagedInstanceInstalledPackagesResult {
    readonly compartmentId?: string;
    readonly displayNameContains?: string;
    readonly displayNames?: string[];
    readonly filters?: outputs.GetOsManagementHubManagedInstanceInstalledPackagesFilter[];
    readonly id: string;
    readonly installedPackageCollections: outputs.GetOsManagementHubManagedInstanceInstalledPackagesInstalledPackageCollection[];
    readonly managedInstanceId: string;
    readonly timeInstallDateEnd?: string;
    readonly timeInstallDateStart?: string;
}
export function getOsManagementHubManagedInstanceInstalledPackagesOutput(args: GetOsManagementHubManagedInstanceInstalledPackagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsManagementHubManagedInstanceInstalledPackagesResult> {
    return pulumi.output(args).apply((a: any) => getOsManagementHubManagedInstanceInstalledPackages(a, opts))
}

/**
 * A collection of arguments for invoking getOsManagementHubManagedInstanceInstalledPackages.
 */
export interface GetOsManagementHubManagedInstanceInstalledPackagesOutputArgs {
    compartmentId?: pulumi.Input<string>;
    displayNameContains?: pulumi.Input<string>;
    displayNames?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOsManagementHubManagedInstanceInstalledPackagesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    managedInstanceId: pulumi.Input<string>;
    timeInstallDateEnd?: pulumi.Input<string>;
    timeInstallDateStart?: pulumi.Input<string>;
}
