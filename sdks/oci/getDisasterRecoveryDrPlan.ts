// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDisasterRecoveryDrPlan(args: GetDisasterRecoveryDrPlanArgs, opts?: pulumi.InvokeOptions): Promise<GetDisasterRecoveryDrPlanResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDisasterRecoveryDrPlan:getDisasterRecoveryDrPlan", {
        "drPlanId": args.drPlanId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDisasterRecoveryDrPlan.
 */
export interface GetDisasterRecoveryDrPlanArgs {
    drPlanId: string;
}

/**
 * A collection of values returned by getDisasterRecoveryDrPlan.
 */
export interface GetDisasterRecoveryDrPlanResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly drPlanId: string;
    readonly drProtectionGroupId: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifeCycleDetails: string;
    readonly peerDrProtectionGroupId: string;
    readonly peerRegion: string;
    readonly planGroups: outputs.GetDisasterRecoveryDrPlanPlanGroup[];
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly type: string;
}
export function getDisasterRecoveryDrPlanOutput(args: GetDisasterRecoveryDrPlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDisasterRecoveryDrPlanResult> {
    return pulumi.output(args).apply((a: any) => getDisasterRecoveryDrPlan(a, opts))
}

/**
 * A collection of arguments for invoking getDisasterRecoveryDrPlan.
 */
export interface GetDisasterRecoveryDrPlanOutputArgs {
    drPlanId: pulumi.Input<string>;
}
