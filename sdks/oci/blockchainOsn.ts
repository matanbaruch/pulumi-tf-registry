// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BlockchainOsn extends pulumi.CustomResource {
    /**
     * Get an existing BlockchainOsn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BlockchainOsnState, opts?: pulumi.CustomResourceOptions): BlockchainOsn {
        return new BlockchainOsn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/blockchainOsn:BlockchainOsn';

    /**
     * Returns true if the given object is an instance of BlockchainOsn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BlockchainOsn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BlockchainOsn.__pulumiType;
    }

    public readonly ad!: pulumi.Output<string>;
    public readonly blockchainPlatformId!: pulumi.Output<string>;
    public readonly ocpuAllocationParam!: pulumi.Output<outputs.BlockchainOsnOcpuAllocationParam | undefined>;
    public /*out*/ readonly osnKey!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.BlockchainOsnTimeouts | undefined>;

    /**
     * Create a BlockchainOsn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BlockchainOsnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BlockchainOsnArgs | BlockchainOsnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BlockchainOsnState | undefined;
            resourceInputs["ad"] = state ? state.ad : undefined;
            resourceInputs["blockchainPlatformId"] = state ? state.blockchainPlatformId : undefined;
            resourceInputs["ocpuAllocationParam"] = state ? state.ocpuAllocationParam : undefined;
            resourceInputs["osnKey"] = state ? state.osnKey : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as BlockchainOsnArgs | undefined;
            if ((!args || args.ad === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ad'");
            }
            if ((!args || args.blockchainPlatformId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'blockchainPlatformId'");
            }
            resourceInputs["ad"] = args ? args.ad : undefined;
            resourceInputs["blockchainPlatformId"] = args ? args.blockchainPlatformId : undefined;
            resourceInputs["ocpuAllocationParam"] = args ? args.ocpuAllocationParam : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["osnKey"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BlockchainOsn.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BlockchainOsn resources.
 */
export interface BlockchainOsnState {
    ad?: pulumi.Input<string>;
    blockchainPlatformId?: pulumi.Input<string>;
    ocpuAllocationParam?: pulumi.Input<inputs.BlockchainOsnOcpuAllocationParam>;
    osnKey?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.BlockchainOsnTimeouts>;
}

/**
 * The set of arguments for constructing a BlockchainOsn resource.
 */
export interface BlockchainOsnArgs {
    ad: pulumi.Input<string>;
    blockchainPlatformId: pulumi.Input<string>;
    ocpuAllocationParam?: pulumi.Input<inputs.BlockchainOsnOcpuAllocationParam>;
    timeouts?: pulumi.Input<inputs.BlockchainOsnTimeouts>;
}
