// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOperatorAccessControlAccessRequest(args: GetOperatorAccessControlAccessRequestArgs, opts?: pulumi.InvokeOptions): Promise<GetOperatorAccessControlAccessRequestResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOperatorAccessControlAccessRequest:getOperatorAccessControlAccessRequest", {
        "accessRequestId": args.accessRequestId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOperatorAccessControlAccessRequest.
 */
export interface GetOperatorAccessControlAccessRequestArgs {
    accessRequestId: string;
    id?: string;
}

/**
 * A collection of values returned by getOperatorAccessControlAccessRequest.
 */
export interface GetOperatorAccessControlAccessRequestResult {
    readonly accessReasonSummary: string;
    readonly accessRequestId: string;
    readonly actionRequestsLists: string[];
    readonly approverComment: string;
    readonly approverDetails: outputs.GetOperatorAccessControlAccessRequestApproverDetail[];
    readonly auditTypes: string[];
    readonly closureComment: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly duration: number;
    readonly extendDuration: number;
    readonly extensionApproverDetails: outputs.GetOperatorAccessControlAccessRequestExtensionApproverDetail[];
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isAutoApproved: boolean;
    readonly isValidateAssignment: boolean;
    readonly lifecycleDetails: string;
    readonly numberOfApprovers: number;
    readonly numberOfApproversRequired: number;
    readonly numberOfExtensionApprovers: number;
    readonly opctlAdditionalMessage: string;
    readonly opctlId: string;
    readonly opctlName: string;
    readonly operatorId: string;
    readonly reason: string;
    readonly requestId: string;
    readonly resourceId: string;
    readonly resourceName: string;
    readonly resourceType: string;
    readonly severity: string;
    readonly state: string;
    readonly subResourceLists: string[];
    readonly systemMessage: string;
    readonly timeOfCreation: string;
    readonly timeOfModification: string;
    readonly timeOfUserCreation: string;
    readonly timeRequestedForFutureAccess: string;
    readonly userId: string;
    readonly workflowIds: string[];
}
export function getOperatorAccessControlAccessRequestOutput(args: GetOperatorAccessControlAccessRequestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOperatorAccessControlAccessRequestResult> {
    return pulumi.output(args).apply((a: any) => getOperatorAccessControlAccessRequest(a, opts))
}

/**
 * A collection of arguments for invoking getOperatorAccessControlAccessRequest.
 */
export interface GetOperatorAccessControlAccessRequestOutputArgs {
    accessRequestId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
