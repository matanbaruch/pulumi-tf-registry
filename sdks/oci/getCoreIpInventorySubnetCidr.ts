// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreIpInventorySubnetCidr(args: GetCoreIpInventorySubnetCidrArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreIpInventorySubnetCidrResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreIpInventorySubnetCidr:getCoreIpInventorySubnetCidr", {
        "id": args.id,
        "subnetId": args.subnetId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreIpInventorySubnetCidr.
 */
export interface GetCoreIpInventorySubnetCidrArgs {
    id?: string;
    subnetId: string;
}

/**
 * A collection of values returned by getCoreIpInventorySubnetCidr.
 */
export interface GetCoreIpInventorySubnetCidrResult {
    readonly compartmentId: string;
    readonly id: string;
    readonly ipInventoryCidrUtilizationSummaries: outputs.GetCoreIpInventorySubnetCidrIpInventoryCidrUtilizationSummary[];
    readonly ipInventorySubnetCidrCount: number;
    readonly lastUpdatedTimestamp: string;
    readonly message: string;
    readonly subnetId: string;
}
export function getCoreIpInventorySubnetCidrOutput(args: GetCoreIpInventorySubnetCidrOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreIpInventorySubnetCidrResult> {
    return pulumi.output(args).apply((a: any) => getCoreIpInventorySubnetCidr(a, opts))
}

/**
 * A collection of arguments for invoking getCoreIpInventorySubnetCidr.
 */
export interface GetCoreIpInventorySubnetCidrOutputArgs {
    id?: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}
