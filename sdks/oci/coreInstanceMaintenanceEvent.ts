// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CoreInstanceMaintenanceEvent extends pulumi.CustomResource {
    /**
     * Get an existing CoreInstanceMaintenanceEvent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CoreInstanceMaintenanceEventState, opts?: pulumi.CustomResourceOptions): CoreInstanceMaintenanceEvent {
        return new CoreInstanceMaintenanceEvent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/coreInstanceMaintenanceEvent:CoreInstanceMaintenanceEvent';

    /**
     * Returns true if the given object is an instance of CoreInstanceMaintenanceEvent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CoreInstanceMaintenanceEvent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CoreInstanceMaintenanceEvent.__pulumiType;
    }

    public /*out*/ readonly additionalDetails!: pulumi.Output<{[key: string]: string}>;
    public readonly alternativeResolutionAction!: pulumi.Output<string>;
    public /*out*/ readonly alternativeResolutionActions!: pulumi.Output<string[]>;
    public readonly canDeleteLocalStorage!: pulumi.Output<boolean>;
    public /*out*/ readonly canReschedule!: pulumi.Output<boolean>;
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    public /*out*/ readonly correlationToken!: pulumi.Output<string>;
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public /*out*/ readonly estimatedDuration!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly instanceAction!: pulumi.Output<string>;
    public /*out*/ readonly instanceId!: pulumi.Output<string>;
    public readonly instanceMaintenanceEventId!: pulumi.Output<string>;
    public /*out*/ readonly maintenanceCategory!: pulumi.Output<string>;
    public /*out*/ readonly maintenanceReason!: pulumi.Output<string>;
    public /*out*/ readonly startWindowDuration!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeFinished!: pulumi.Output<string>;
    public /*out*/ readonly timeHardDueDate!: pulumi.Output<string>;
    public /*out*/ readonly timeStarted!: pulumi.Output<string>;
    public readonly timeWindowStart!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CoreInstanceMaintenanceEventTimeouts | undefined>;

    /**
     * Create a CoreInstanceMaintenanceEvent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CoreInstanceMaintenanceEventArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CoreInstanceMaintenanceEventArgs | CoreInstanceMaintenanceEventState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CoreInstanceMaintenanceEventState | undefined;
            resourceInputs["additionalDetails"] = state ? state.additionalDetails : undefined;
            resourceInputs["alternativeResolutionAction"] = state ? state.alternativeResolutionAction : undefined;
            resourceInputs["alternativeResolutionActions"] = state ? state.alternativeResolutionActions : undefined;
            resourceInputs["canDeleteLocalStorage"] = state ? state.canDeleteLocalStorage : undefined;
            resourceInputs["canReschedule"] = state ? state.canReschedule : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["correlationToken"] = state ? state.correlationToken : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["estimatedDuration"] = state ? state.estimatedDuration : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["instanceAction"] = state ? state.instanceAction : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["instanceMaintenanceEventId"] = state ? state.instanceMaintenanceEventId : undefined;
            resourceInputs["maintenanceCategory"] = state ? state.maintenanceCategory : undefined;
            resourceInputs["maintenanceReason"] = state ? state.maintenanceReason : undefined;
            resourceInputs["startWindowDuration"] = state ? state.startWindowDuration : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeFinished"] = state ? state.timeFinished : undefined;
            resourceInputs["timeHardDueDate"] = state ? state.timeHardDueDate : undefined;
            resourceInputs["timeStarted"] = state ? state.timeStarted : undefined;
            resourceInputs["timeWindowStart"] = state ? state.timeWindowStart : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CoreInstanceMaintenanceEventArgs | undefined;
            if ((!args || args.instanceMaintenanceEventId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceMaintenanceEventId'");
            }
            resourceInputs["alternativeResolutionAction"] = args ? args.alternativeResolutionAction : undefined;
            resourceInputs["canDeleteLocalStorage"] = args ? args.canDeleteLocalStorage : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["instanceMaintenanceEventId"] = args ? args.instanceMaintenanceEventId : undefined;
            resourceInputs["timeWindowStart"] = args ? args.timeWindowStart : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["additionalDetails"] = undefined /*out*/;
            resourceInputs["alternativeResolutionActions"] = undefined /*out*/;
            resourceInputs["canReschedule"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["correlationToken"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["estimatedDuration"] = undefined /*out*/;
            resourceInputs["instanceAction"] = undefined /*out*/;
            resourceInputs["instanceId"] = undefined /*out*/;
            resourceInputs["maintenanceCategory"] = undefined /*out*/;
            resourceInputs["maintenanceReason"] = undefined /*out*/;
            resourceInputs["startWindowDuration"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeFinished"] = undefined /*out*/;
            resourceInputs["timeHardDueDate"] = undefined /*out*/;
            resourceInputs["timeStarted"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CoreInstanceMaintenanceEvent.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CoreInstanceMaintenanceEvent resources.
 */
export interface CoreInstanceMaintenanceEventState {
    additionalDetails?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    alternativeResolutionAction?: pulumi.Input<string>;
    alternativeResolutionActions?: pulumi.Input<pulumi.Input<string>[]>;
    canDeleteLocalStorage?: pulumi.Input<boolean>;
    canReschedule?: pulumi.Input<boolean>;
    compartmentId?: pulumi.Input<string>;
    correlationToken?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    estimatedDuration?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceAction?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    instanceMaintenanceEventId?: pulumi.Input<string>;
    maintenanceCategory?: pulumi.Input<string>;
    maintenanceReason?: pulumi.Input<string>;
    startWindowDuration?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeFinished?: pulumi.Input<string>;
    timeHardDueDate?: pulumi.Input<string>;
    timeStarted?: pulumi.Input<string>;
    timeWindowStart?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CoreInstanceMaintenanceEventTimeouts>;
}

/**
 * The set of arguments for constructing a CoreInstanceMaintenanceEvent resource.
 */
export interface CoreInstanceMaintenanceEventArgs {
    alternativeResolutionAction?: pulumi.Input<string>;
    canDeleteLocalStorage?: pulumi.Input<boolean>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceMaintenanceEventId: pulumi.Input<string>;
    timeWindowStart?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CoreInstanceMaintenanceEventTimeouts>;
}
