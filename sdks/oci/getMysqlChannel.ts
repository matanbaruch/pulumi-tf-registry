// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMysqlChannel(args: GetMysqlChannelArgs, opts?: pulumi.InvokeOptions): Promise<GetMysqlChannelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMysqlChannel:getMysqlChannel", {
        "channelId": args.channelId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMysqlChannel.
 */
export interface GetMysqlChannelArgs {
    channelId: string;
}

/**
 * A collection of values returned by getMysqlChannel.
 */
export interface GetMysqlChannelResult {
    readonly channelId: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isEnabled: boolean;
    readonly lifecycleDetails: string;
    readonly sources: outputs.GetMysqlChannelSource[];
    readonly state: string;
    readonly targets: outputs.GetMysqlChannelTarget[];
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getMysqlChannelOutput(args: GetMysqlChannelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMysqlChannelResult> {
    return pulumi.output(args).apply((a: any) => getMysqlChannel(a, opts))
}

/**
 * A collection of arguments for invoking getMysqlChannel.
 */
export interface GetMysqlChannelOutputArgs {
    channelId: pulumi.Input<string>;
}
