// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOpsiHostInsights(args?: GetOpsiHostInsightsArgs, opts?: pulumi.InvokeOptions): Promise<GetOpsiHostInsightsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOpsiHostInsights:getOpsiHostInsights", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "enterpriseManagerBridgeId": args.enterpriseManagerBridgeId,
        "exadataInsightId": args.exadataInsightId,
        "filters": args.filters,
        "hostTypes": args.hostTypes,
        "id": args.id,
        "states": args.states,
        "statuses": args.statuses,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpsiHostInsights.
 */
export interface GetOpsiHostInsightsArgs {
    compartmentId?: string;
    compartmentIdInSubtree?: boolean;
    enterpriseManagerBridgeId?: string;
    exadataInsightId?: string;
    filters?: inputs.GetOpsiHostInsightsFilter[];
    hostTypes?: string[];
    id?: string;
    states?: string[];
    statuses?: string[];
}

/**
 * A collection of values returned by getOpsiHostInsights.
 */
export interface GetOpsiHostInsightsResult {
    readonly compartmentId?: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly enterpriseManagerBridgeId?: string;
    readonly exadataInsightId?: string;
    readonly filters?: outputs.GetOpsiHostInsightsFilter[];
    readonly hostInsightSummaryCollections: outputs.GetOpsiHostInsightsHostInsightSummaryCollection[];
    readonly hostTypes?: string[];
    readonly id?: string;
    readonly states?: string[];
    readonly statuses?: string[];
}
export function getOpsiHostInsightsOutput(args?: GetOpsiHostInsightsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpsiHostInsightsResult> {
    return pulumi.output(args).apply((a: any) => getOpsiHostInsights(a, opts))
}

/**
 * A collection of arguments for invoking getOpsiHostInsights.
 */
export interface GetOpsiHostInsightsOutputArgs {
    compartmentId?: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    enterpriseManagerBridgeId?: pulumi.Input<string>;
    exadataInsightId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOpsiHostInsightsFilterArgs>[]>;
    hostTypes?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    states?: pulumi.Input<pulumi.Input<string>[]>;
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
}
