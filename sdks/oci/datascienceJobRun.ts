// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatascienceJobRun extends pulumi.CustomResource {
    /**
     * Get an existing DatascienceJobRun resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatascienceJobRunState, opts?: pulumi.CustomResourceOptions): DatascienceJobRun {
        return new DatascienceJobRun(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/datascienceJobRun:DatascienceJobRun';

    /**
     * Returns true if the given object is an instance of DatascienceJobRun.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatascienceJobRun {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatascienceJobRun.__pulumiType;
    }

    public readonly asynchronous!: pulumi.Output<boolean | undefined>;
    public readonly compartmentId!: pulumi.Output<string>;
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly jobConfigurationOverrideDetails!: pulumi.Output<outputs.DatascienceJobRunJobConfigurationOverrideDetails | undefined>;
    public readonly jobEnvironmentConfigurationOverrideDetails!: pulumi.Output<outputs.DatascienceJobRunJobEnvironmentConfigurationOverrideDetails | undefined>;
    public readonly jobId!: pulumi.Output<string>;
    public /*out*/ readonly jobInfrastructureConfigurationDetails!: pulumi.Output<outputs.DatascienceJobRunJobInfrastructureConfigurationDetail[]>;
    public readonly jobLogConfigurationOverrideDetails!: pulumi.Output<outputs.DatascienceJobRunJobLogConfigurationOverrideDetails | undefined>;
    public /*out*/ readonly jobStorageMountConfigurationDetailsLists!: pulumi.Output<outputs.DatascienceJobRunJobStorageMountConfigurationDetailsList[]>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public /*out*/ readonly logDetails!: pulumi.Output<outputs.DatascienceJobRunLogDetail[]>;
    public readonly opcParentRptUrl!: pulumi.Output<string | undefined>;
    public readonly projectId!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeAccepted!: pulumi.Output<string>;
    public /*out*/ readonly timeFinished!: pulumi.Output<string>;
    public /*out*/ readonly timeStarted!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DatascienceJobRunTimeouts | undefined>;

    /**
     * Create a DatascienceJobRun resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatascienceJobRunArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatascienceJobRunArgs | DatascienceJobRunState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatascienceJobRunState | undefined;
            resourceInputs["asynchronous"] = state ? state.asynchronous : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["jobConfigurationOverrideDetails"] = state ? state.jobConfigurationOverrideDetails : undefined;
            resourceInputs["jobEnvironmentConfigurationOverrideDetails"] = state ? state.jobEnvironmentConfigurationOverrideDetails : undefined;
            resourceInputs["jobId"] = state ? state.jobId : undefined;
            resourceInputs["jobInfrastructureConfigurationDetails"] = state ? state.jobInfrastructureConfigurationDetails : undefined;
            resourceInputs["jobLogConfigurationOverrideDetails"] = state ? state.jobLogConfigurationOverrideDetails : undefined;
            resourceInputs["jobStorageMountConfigurationDetailsLists"] = state ? state.jobStorageMountConfigurationDetailsLists : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["logDetails"] = state ? state.logDetails : undefined;
            resourceInputs["opcParentRptUrl"] = state ? state.opcParentRptUrl : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeAccepted"] = state ? state.timeAccepted : undefined;
            resourceInputs["timeFinished"] = state ? state.timeFinished : undefined;
            resourceInputs["timeStarted"] = state ? state.timeStarted : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DatascienceJobRunArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.jobId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobId'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["asynchronous"] = args ? args.asynchronous : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["jobConfigurationOverrideDetails"] = args ? args.jobConfigurationOverrideDetails : undefined;
            resourceInputs["jobEnvironmentConfigurationOverrideDetails"] = args ? args.jobEnvironmentConfigurationOverrideDetails : undefined;
            resourceInputs["jobId"] = args ? args.jobId : undefined;
            resourceInputs["jobLogConfigurationOverrideDetails"] = args ? args.jobLogConfigurationOverrideDetails : undefined;
            resourceInputs["opcParentRptUrl"] = args ? args.opcParentRptUrl : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["jobInfrastructureConfigurationDetails"] = undefined /*out*/;
            resourceInputs["jobStorageMountConfigurationDetailsLists"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["logDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeAccepted"] = undefined /*out*/;
            resourceInputs["timeFinished"] = undefined /*out*/;
            resourceInputs["timeStarted"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatascienceJobRun.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatascienceJobRun resources.
 */
export interface DatascienceJobRunState {
    asynchronous?: pulumi.Input<boolean>;
    compartmentId?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    jobConfigurationOverrideDetails?: pulumi.Input<inputs.DatascienceJobRunJobConfigurationOverrideDetails>;
    jobEnvironmentConfigurationOverrideDetails?: pulumi.Input<inputs.DatascienceJobRunJobEnvironmentConfigurationOverrideDetails>;
    jobId?: pulumi.Input<string>;
    jobInfrastructureConfigurationDetails?: pulumi.Input<pulumi.Input<inputs.DatascienceJobRunJobInfrastructureConfigurationDetail>[]>;
    jobLogConfigurationOverrideDetails?: pulumi.Input<inputs.DatascienceJobRunJobLogConfigurationOverrideDetails>;
    jobStorageMountConfigurationDetailsLists?: pulumi.Input<pulumi.Input<inputs.DatascienceJobRunJobStorageMountConfigurationDetailsList>[]>;
    lifecycleDetails?: pulumi.Input<string>;
    logDetails?: pulumi.Input<pulumi.Input<inputs.DatascienceJobRunLogDetail>[]>;
    opcParentRptUrl?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeAccepted?: pulumi.Input<string>;
    timeFinished?: pulumi.Input<string>;
    timeStarted?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatascienceJobRunTimeouts>;
}

/**
 * The set of arguments for constructing a DatascienceJobRun resource.
 */
export interface DatascienceJobRunArgs {
    asynchronous?: pulumi.Input<boolean>;
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    jobConfigurationOverrideDetails?: pulumi.Input<inputs.DatascienceJobRunJobConfigurationOverrideDetails>;
    jobEnvironmentConfigurationOverrideDetails?: pulumi.Input<inputs.DatascienceJobRunJobEnvironmentConfigurationOverrideDetails>;
    jobId: pulumi.Input<string>;
    jobLogConfigurationOverrideDetails?: pulumi.Input<inputs.DatascienceJobRunJobLogConfigurationOverrideDetails>;
    opcParentRptUrl?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatascienceJobRunTimeouts>;
}
