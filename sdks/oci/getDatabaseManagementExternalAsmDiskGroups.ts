// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementExternalAsmDiskGroups(args: GetDatabaseManagementExternalAsmDiskGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementExternalAsmDiskGroupsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementExternalAsmDiskGroups:getDatabaseManagementExternalAsmDiskGroups", {
        "externalAsmId": args.externalAsmId,
        "filters": args.filters,
        "id": args.id,
        "opcNamedCredentialId": args.opcNamedCredentialId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementExternalAsmDiskGroups.
 */
export interface GetDatabaseManagementExternalAsmDiskGroupsArgs {
    externalAsmId: string;
    filters?: inputs.GetDatabaseManagementExternalAsmDiskGroupsFilter[];
    id?: string;
    opcNamedCredentialId?: string;
}

/**
 * A collection of values returned by getDatabaseManagementExternalAsmDiskGroups.
 */
export interface GetDatabaseManagementExternalAsmDiskGroupsResult {
    readonly externalAsmDiskGroupCollections: outputs.GetDatabaseManagementExternalAsmDiskGroupsExternalAsmDiskGroupCollection[];
    readonly externalAsmId: string;
    readonly filters?: outputs.GetDatabaseManagementExternalAsmDiskGroupsFilter[];
    readonly id: string;
    readonly opcNamedCredentialId?: string;
}
export function getDatabaseManagementExternalAsmDiskGroupsOutput(args: GetDatabaseManagementExternalAsmDiskGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementExternalAsmDiskGroupsResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementExternalAsmDiskGroups(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementExternalAsmDiskGroups.
 */
export interface GetDatabaseManagementExternalAsmDiskGroupsOutputArgs {
    externalAsmId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseManagementExternalAsmDiskGroupsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    opcNamedCredentialId?: pulumi.Input<string>;
}
