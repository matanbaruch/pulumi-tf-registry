// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDevopsRepositoryCommit(args: GetDevopsRepositoryCommitArgs, opts?: pulumi.InvokeOptions): Promise<GetDevopsRepositoryCommitResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDevopsRepositoryCommit:getDevopsRepositoryCommit", {
        "commitId": args.commitId,
        "id": args.id,
        "repositoryId": args.repositoryId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDevopsRepositoryCommit.
 */
export interface GetDevopsRepositoryCommitArgs {
    commitId: string;
    id?: string;
    repositoryId: string;
}

/**
 * A collection of values returned by getDevopsRepositoryCommit.
 */
export interface GetDevopsRepositoryCommitResult {
    readonly authorEmail: string;
    readonly authorName: string;
    readonly commitId: string;
    readonly commitMessage: string;
    readonly committerEmail: string;
    readonly committerName: string;
    readonly id: string;
    readonly parentCommitIds: string[];
    readonly repositoryId: string;
    readonly timeCreated: string;
    readonly treeId: string;
}
export function getDevopsRepositoryCommitOutput(args: GetDevopsRepositoryCommitOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDevopsRepositoryCommitResult> {
    return pulumi.output(args).apply((a: any) => getDevopsRepositoryCommit(a, opts))
}

/**
 * A collection of arguments for invoking getDevopsRepositoryCommit.
 */
export interface GetDevopsRepositoryCommitOutputArgs {
    commitId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    repositoryId: pulumi.Input<string>;
}
