// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudGuardDataSourceEvents(args: GetCloudGuardDataSourceEventsArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudGuardDataSourceEventsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCloudGuardDataSourceEvents:getCloudGuardDataSourceEvents", {
        "dataSourceId": args.dataSourceId,
        "filters": args.filters,
        "id": args.id,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudGuardDataSourceEvents.
 */
export interface GetCloudGuardDataSourceEventsArgs {
    dataSourceId: string;
    filters?: inputs.GetCloudGuardDataSourceEventsFilter[];
    id?: string;
    region?: string;
}

/**
 * A collection of values returned by getCloudGuardDataSourceEvents.
 */
export interface GetCloudGuardDataSourceEventsResult {
    readonly dataSourceEventCollections: outputs.GetCloudGuardDataSourceEventsDataSourceEventCollection[];
    readonly dataSourceId: string;
    readonly filters?: outputs.GetCloudGuardDataSourceEventsFilter[];
    readonly id: string;
    readonly region?: string;
}
export function getCloudGuardDataSourceEventsOutput(args: GetCloudGuardDataSourceEventsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudGuardDataSourceEventsResult> {
    return pulumi.output(args).apply((a: any) => getCloudGuardDataSourceEvents(a, opts))
}

/**
 * A collection of arguments for invoking getCloudGuardDataSourceEvents.
 */
export interface GetCloudGuardDataSourceEventsOutputArgs {
    dataSourceId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetCloudGuardDataSourceEventsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
