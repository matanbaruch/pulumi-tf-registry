// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBlockchainPeers(args: GetBlockchainPeersArgs, opts?: pulumi.InvokeOptions): Promise<GetBlockchainPeersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getBlockchainPeers:getBlockchainPeers", {
        "blockchainPlatformId": args.blockchainPlatformId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlockchainPeers.
 */
export interface GetBlockchainPeersArgs {
    blockchainPlatformId: string;
    displayName?: string;
    filters?: inputs.GetBlockchainPeersFilter[];
    id?: string;
}

/**
 * A collection of values returned by getBlockchainPeers.
 */
export interface GetBlockchainPeersResult {
    readonly blockchainPlatformId: string;
    readonly displayName?: string;
    readonly filters?: outputs.GetBlockchainPeersFilter[];
    readonly id: string;
    readonly peerCollections: outputs.GetBlockchainPeersPeerCollection[];
}
export function getBlockchainPeersOutput(args: GetBlockchainPeersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlockchainPeersResult> {
    return pulumi.output(args).apply((a: any) => getBlockchainPeers(a, opts))
}

/**
 * A collection of arguments for invoking getBlockchainPeers.
 */
export interface GetBlockchainPeersOutputArgs {
    blockchainPlatformId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetBlockchainPeersFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
