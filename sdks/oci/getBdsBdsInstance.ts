// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBdsBdsInstance(args: GetBdsBdsInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetBdsBdsInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getBdsBdsInstance:getBdsBdsInstance", {
        "bdsInstanceId": args.bdsInstanceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBdsBdsInstance.
 */
export interface GetBdsBdsInstanceArgs {
    bdsInstanceId: string;
}

/**
 * A collection of values returned by getBdsBdsInstance.
 */
export interface GetBdsBdsInstanceResult {
    readonly bdsInstanceId: string;
    readonly bootstrapScriptUrl: string;
    readonly cloudSqlDetails: outputs.GetBdsBdsInstanceCloudSqlDetail[];
    readonly clusterAdminPassword: string;
    readonly clusterDetails: outputs.GetBdsBdsInstanceClusterDetail[];
    readonly clusterProfile: string;
    readonly clusterPublicKey: string;
    readonly clusterVersion: string;
    readonly compartmentId: string;
    readonly computeOnlyWorkerNodes: outputs.GetBdsBdsInstanceComputeOnlyWorkerNode[];
    readonly createdBy: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly edgeNodes: outputs.GetBdsBdsInstanceEdgeNode[];
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly ignoreExistingNodesShapes: string[];
    readonly isCloudSqlConfigured: boolean;
    readonly isForceStopJobs: boolean;
    readonly isHighAvailability: boolean;
    readonly isKafkaConfigured: boolean;
    readonly isSecure: boolean;
    readonly kafkaBrokerNodes: outputs.GetBdsBdsInstanceKafkaBrokerNode[];
    readonly kerberosRealmName: string;
    readonly kmsKeyId: string;
    readonly masterNodes: outputs.GetBdsBdsInstanceMasterNode[];
    readonly networkConfigs: outputs.GetBdsBdsInstanceNetworkConfig[];
    readonly nodes: outputs.GetBdsBdsInstanceNode[];
    readonly numberOfNodes: number;
    readonly numberOfNodesRequiringMaintenanceReboot: number;
    readonly osPatchVersion: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly utilNodes: outputs.GetBdsBdsInstanceUtilNode[];
    readonly workerNodes: outputs.GetBdsBdsInstanceWorkerNode[];
}
export function getBdsBdsInstanceOutput(args: GetBdsBdsInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBdsBdsInstanceResult> {
    return pulumi.output(args).apply((a: any) => getBdsBdsInstance(a, opts))
}

/**
 * A collection of arguments for invoking getBdsBdsInstance.
 */
export interface GetBdsBdsInstanceOutputArgs {
    bdsInstanceId: pulumi.Input<string>;
}
