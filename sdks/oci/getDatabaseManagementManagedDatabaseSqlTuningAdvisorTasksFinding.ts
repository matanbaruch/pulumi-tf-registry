// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFinding(args: GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFindingArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFindingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFinding:getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFinding", {
        "beginExecId": args.beginExecId,
        "endExecId": args.endExecId,
        "findingFilter": args.findingFilter,
        "id": args.id,
        "indexHashFilter": args.indexHashFilter,
        "managedDatabaseId": args.managedDatabaseId,
        "searchPeriod": args.searchPeriod,
        "sqlTuningAdvisorTaskId": args.sqlTuningAdvisorTaskId,
        "statsHashFilter": args.statsHashFilter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFinding.
 */
export interface GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFindingArgs {
    beginExecId?: string;
    endExecId?: string;
    findingFilter?: string;
    id?: string;
    indexHashFilter?: string;
    managedDatabaseId: string;
    searchPeriod?: string;
    sqlTuningAdvisorTaskId: string;
    statsHashFilter?: string;
}

/**
 * A collection of values returned by getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFinding.
 */
export interface GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFindingResult {
    readonly beginExecId?: string;
    readonly endExecId?: string;
    readonly findingFilter?: string;
    readonly id: string;
    readonly indexHashFilter?: string;
    readonly items: outputs.GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFindingItem[];
    readonly managedDatabaseId: string;
    readonly searchPeriod?: string;
    readonly sqlTuningAdvisorTaskId: string;
    readonly statsHashFilter?: string;
}
export function getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFindingOutput(args: GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFindingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFindingResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFinding(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFinding.
 */
export interface GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFindingOutputArgs {
    beginExecId?: pulumi.Input<string>;
    endExecId?: pulumi.Input<string>;
    findingFilter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    indexHashFilter?: pulumi.Input<string>;
    managedDatabaseId: pulumi.Input<string>;
    searchPeriod?: pulumi.Input<string>;
    sqlTuningAdvisorTaskId: pulumi.Input<string>;
    statsHashFilter?: pulumi.Input<string>;
}
