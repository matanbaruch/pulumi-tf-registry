// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatabaseAutonomousDatabaseRegionalWalletManagement extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseAutonomousDatabaseRegionalWalletManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseAutonomousDatabaseRegionalWalletManagementState, opts?: pulumi.CustomResourceOptions): DatabaseAutonomousDatabaseRegionalWalletManagement {
        return new DatabaseAutonomousDatabaseRegionalWalletManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/databaseAutonomousDatabaseRegionalWalletManagement:DatabaseAutonomousDatabaseRegionalWalletManagement';

    /**
     * Returns true if the given object is an instance of DatabaseAutonomousDatabaseRegionalWalletManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseAutonomousDatabaseRegionalWalletManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseAutonomousDatabaseRegionalWalletManagement.__pulumiType;
    }

    public readonly gracePeriod!: pulumi.Output<number>;
    public readonly shouldRotate!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeRotated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DatabaseAutonomousDatabaseRegionalWalletManagementTimeouts | undefined>;

    /**
     * Create a DatabaseAutonomousDatabaseRegionalWalletManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DatabaseAutonomousDatabaseRegionalWalletManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseAutonomousDatabaseRegionalWalletManagementArgs | DatabaseAutonomousDatabaseRegionalWalletManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseAutonomousDatabaseRegionalWalletManagementState | undefined;
            resourceInputs["gracePeriod"] = state ? state.gracePeriod : undefined;
            resourceInputs["shouldRotate"] = state ? state.shouldRotate : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeRotated"] = state ? state.timeRotated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DatabaseAutonomousDatabaseRegionalWalletManagementArgs | undefined;
            resourceInputs["gracePeriod"] = args ? args.gracePeriod : undefined;
            resourceInputs["shouldRotate"] = args ? args.shouldRotate : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeRotated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseAutonomousDatabaseRegionalWalletManagement.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatabaseAutonomousDatabaseRegionalWalletManagement resources.
 */
export interface DatabaseAutonomousDatabaseRegionalWalletManagementState {
    gracePeriod?: pulumi.Input<number>;
    shouldRotate?: pulumi.Input<boolean>;
    state?: pulumi.Input<string>;
    timeRotated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatabaseAutonomousDatabaseRegionalWalletManagementTimeouts>;
}

/**
 * The set of arguments for constructing a DatabaseAutonomousDatabaseRegionalWalletManagement resource.
 */
export interface DatabaseAutonomousDatabaseRegionalWalletManagementArgs {
    gracePeriod?: pulumi.Input<number>;
    shouldRotate?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.DatabaseAutonomousDatabaseRegionalWalletManagementTimeouts>;
}
