// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDnsSteeringPolicies(args: GetDnsSteeringPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsSteeringPoliciesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDnsSteeringPolicies:getDnsSteeringPolicies", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "displayNameContains": args.displayNameContains,
        "filters": args.filters,
        "healthCheckMonitorId": args.healthCheckMonitorId,
        "id": args.id,
        "state": args.state,
        "template": args.template,
        "timeCreatedGreaterThanOrEqualTo": args.timeCreatedGreaterThanOrEqualTo,
        "timeCreatedLessThan": args.timeCreatedLessThan,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnsSteeringPolicies.
 */
export interface GetDnsSteeringPoliciesArgs {
    compartmentId: string;
    displayName?: string;
    displayNameContains?: string;
    filters?: inputs.GetDnsSteeringPoliciesFilter[];
    healthCheckMonitorId?: string;
    id?: string;
    state?: string;
    template?: string;
    timeCreatedGreaterThanOrEqualTo?: string;
    timeCreatedLessThan?: string;
}

/**
 * A collection of values returned by getDnsSteeringPolicies.
 */
export interface GetDnsSteeringPoliciesResult {
    readonly compartmentId: string;
    readonly displayName?: string;
    readonly displayNameContains?: string;
    readonly filters?: outputs.GetDnsSteeringPoliciesFilter[];
    readonly healthCheckMonitorId?: string;
    readonly id?: string;
    readonly state?: string;
    readonly steeringPolicies: outputs.GetDnsSteeringPoliciesSteeringPolicy[];
    readonly template?: string;
    readonly timeCreatedGreaterThanOrEqualTo?: string;
    readonly timeCreatedLessThan?: string;
}
export function getDnsSteeringPoliciesOutput(args: GetDnsSteeringPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDnsSteeringPoliciesResult> {
    return pulumi.output(args).apply((a: any) => getDnsSteeringPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getDnsSteeringPolicies.
 */
export interface GetDnsSteeringPoliciesOutputArgs {
    compartmentId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    displayNameContains?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDnsSteeringPoliciesFilterArgs>[]>;
    healthCheckMonitorId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    template?: pulumi.Input<string>;
    timeCreatedGreaterThanOrEqualTo?: pulumi.Input<string>;
    timeCreatedLessThan?: pulumi.Input<string>;
}
