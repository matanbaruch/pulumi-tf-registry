// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseDbNodeConsoleHistories(args: GetDatabaseDbNodeConsoleHistoriesArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseDbNodeConsoleHistoriesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseDbNodeConsoleHistories:getDatabaseDbNodeConsoleHistories", {
        "dbNodeId": args.dbNodeId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseDbNodeConsoleHistories.
 */
export interface GetDatabaseDbNodeConsoleHistoriesArgs {
    dbNodeId: string;
    displayName?: string;
    filters?: inputs.GetDatabaseDbNodeConsoleHistoriesFilter[];
    id?: string;
    state?: string;
}

/**
 * A collection of values returned by getDatabaseDbNodeConsoleHistories.
 */
export interface GetDatabaseDbNodeConsoleHistoriesResult {
    readonly consoleHistoryCollections: outputs.GetDatabaseDbNodeConsoleHistoriesConsoleHistoryCollection[];
    readonly dbNodeId: string;
    readonly displayName?: string;
    readonly filters?: outputs.GetDatabaseDbNodeConsoleHistoriesFilter[];
    readonly id: string;
    readonly state?: string;
}
export function getDatabaseDbNodeConsoleHistoriesOutput(args: GetDatabaseDbNodeConsoleHistoriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseDbNodeConsoleHistoriesResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseDbNodeConsoleHistories(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseDbNodeConsoleHistories.
 */
export interface GetDatabaseDbNodeConsoleHistoriesOutputArgs {
    dbNodeId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseDbNodeConsoleHistoriesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
