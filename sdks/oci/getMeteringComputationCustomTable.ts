// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMeteringComputationCustomTable(args: GetMeteringComputationCustomTableArgs, opts?: pulumi.InvokeOptions): Promise<GetMeteringComputationCustomTableResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMeteringComputationCustomTable:getMeteringComputationCustomTable", {
        "customTableId": args.customTableId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMeteringComputationCustomTable.
 */
export interface GetMeteringComputationCustomTableArgs {
    customTableId: string;
}

/**
 * A collection of values returned by getMeteringComputationCustomTable.
 */
export interface GetMeteringComputationCustomTableResult {
    readonly compartmentId: string;
    readonly customTableId: string;
    readonly id: string;
    readonly savedCustomTables: outputs.GetMeteringComputationCustomTableSavedCustomTable[];
    readonly savedReportId: string;
}
export function getMeteringComputationCustomTableOutput(args: GetMeteringComputationCustomTableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMeteringComputationCustomTableResult> {
    return pulumi.output(args).apply((a: any) => getMeteringComputationCustomTable(a, opts))
}

/**
 * A collection of arguments for invoking getMeteringComputationCustomTable.
 */
export interface GetMeteringComputationCustomTableOutputArgs {
    customTableId: pulumi.Input<string>;
}
