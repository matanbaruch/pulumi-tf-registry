// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDevopsRepositoryMirrorrecord(args: GetDevopsRepositoryMirrorrecordArgs, opts?: pulumi.InvokeOptions): Promise<GetDevopsRepositoryMirrorrecordResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDevopsRepositoryMirrorrecord:getDevopsRepositoryMirrorrecord", {
        "id": args.id,
        "mirrorRecordType": args.mirrorRecordType,
        "repositoryId": args.repositoryId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDevopsRepositoryMirrorrecord.
 */
export interface GetDevopsRepositoryMirrorrecordArgs {
    id?: string;
    mirrorRecordType: string;
    repositoryId: string;
}

/**
 * A collection of values returned by getDevopsRepositoryMirrorrecord.
 */
export interface GetDevopsRepositoryMirrorrecordResult {
    readonly endTime: string;
    readonly enqueueTime: string;
    readonly id: string;
    readonly mirrorRecordType: string;
    readonly mirrorStatus: string;
    readonly repositoryId: string;
    readonly startTime: string;
    readonly workRequestId: string;
}
export function getDevopsRepositoryMirrorrecordOutput(args: GetDevopsRepositoryMirrorrecordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDevopsRepositoryMirrorrecordResult> {
    return pulumi.output(args).apply((a: any) => getDevopsRepositoryMirrorrecord(a, opts))
}

/**
 * A collection of arguments for invoking getDevopsRepositoryMirrorrecord.
 */
export interface GetDevopsRepositoryMirrorrecordOutputArgs {
    id?: pulumi.Input<string>;
    mirrorRecordType: pulumi.Input<string>;
    repositoryId: pulumi.Input<string>;
}
