// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getClusterPlacementGroupsClusterPlacementGroup(args: GetClusterPlacementGroupsClusterPlacementGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterPlacementGroupsClusterPlacementGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getClusterPlacementGroupsClusterPlacementGroup:getClusterPlacementGroupsClusterPlacementGroup", {
        "clusterPlacementGroupId": args.clusterPlacementGroupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getClusterPlacementGroupsClusterPlacementGroup.
 */
export interface GetClusterPlacementGroupsClusterPlacementGroupArgs {
    clusterPlacementGroupId: string;
}

/**
 * A collection of values returned by getClusterPlacementGroupsClusterPlacementGroup.
 */
export interface GetClusterPlacementGroupsClusterPlacementGroupResult {
    readonly availabilityDomain: string;
    readonly capabilities: outputs.GetClusterPlacementGroupsClusterPlacementGroupCapability[];
    readonly clusterPlacementGroupId: string;
    readonly clusterPlacementGroupType: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly name: string;
    readonly opcDryRun: boolean;
    readonly placementInstructions: outputs.GetClusterPlacementGroupsClusterPlacementGroupPlacementInstruction[];
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getClusterPlacementGroupsClusterPlacementGroupOutput(args: GetClusterPlacementGroupsClusterPlacementGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterPlacementGroupsClusterPlacementGroupResult> {
    return pulumi.output(args).apply((a: any) => getClusterPlacementGroupsClusterPlacementGroup(a, opts))
}

/**
 * A collection of arguments for invoking getClusterPlacementGroupsClusterPlacementGroup.
 */
export interface GetClusterPlacementGroupsClusterPlacementGroupOutputArgs {
    clusterPlacementGroupId: pulumi.Input<string>;
}
