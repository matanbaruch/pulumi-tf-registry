// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class KmsGeneratedKey extends pulumi.CustomResource {
    /**
     * Get an existing KmsGeneratedKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KmsGeneratedKeyState, opts?: pulumi.CustomResourceOptions): KmsGeneratedKey {
        return new KmsGeneratedKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/kmsGeneratedKey:KmsGeneratedKey';

    /**
     * Returns true if the given object is an instance of KmsGeneratedKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KmsGeneratedKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KmsGeneratedKey.__pulumiType;
    }

    public readonly associatedData!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly ciphertext!: pulumi.Output<string>;
    public readonly cryptoEndpoint!: pulumi.Output<string>;
    public readonly includePlaintextKey!: pulumi.Output<boolean>;
    public readonly keyId!: pulumi.Output<string>;
    public readonly keyShape!: pulumi.Output<outputs.KmsGeneratedKeyKeyShape>;
    public readonly loggingContext!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly plaintext!: pulumi.Output<string>;
    public /*out*/ readonly plaintextChecksum!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.KmsGeneratedKeyTimeouts | undefined>;

    /**
     * Create a KmsGeneratedKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KmsGeneratedKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KmsGeneratedKeyArgs | KmsGeneratedKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KmsGeneratedKeyState | undefined;
            resourceInputs["associatedData"] = state ? state.associatedData : undefined;
            resourceInputs["ciphertext"] = state ? state.ciphertext : undefined;
            resourceInputs["cryptoEndpoint"] = state ? state.cryptoEndpoint : undefined;
            resourceInputs["includePlaintextKey"] = state ? state.includePlaintextKey : undefined;
            resourceInputs["keyId"] = state ? state.keyId : undefined;
            resourceInputs["keyShape"] = state ? state.keyShape : undefined;
            resourceInputs["loggingContext"] = state ? state.loggingContext : undefined;
            resourceInputs["plaintext"] = state ? state.plaintext : undefined;
            resourceInputs["plaintextChecksum"] = state ? state.plaintextChecksum : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as KmsGeneratedKeyArgs | undefined;
            if ((!args || args.cryptoEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cryptoEndpoint'");
            }
            if ((!args || args.includePlaintextKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'includePlaintextKey'");
            }
            if ((!args || args.keyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyId'");
            }
            if ((!args || args.keyShape === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyShape'");
            }
            resourceInputs["associatedData"] = args ? args.associatedData : undefined;
            resourceInputs["cryptoEndpoint"] = args ? args.cryptoEndpoint : undefined;
            resourceInputs["includePlaintextKey"] = args ? args.includePlaintextKey : undefined;
            resourceInputs["keyId"] = args ? args.keyId : undefined;
            resourceInputs["keyShape"] = args ? args.keyShape : undefined;
            resourceInputs["loggingContext"] = args ? args.loggingContext : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["ciphertext"] = undefined /*out*/;
            resourceInputs["plaintext"] = undefined /*out*/;
            resourceInputs["plaintextChecksum"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KmsGeneratedKey.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering KmsGeneratedKey resources.
 */
export interface KmsGeneratedKeyState {
    associatedData?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ciphertext?: pulumi.Input<string>;
    cryptoEndpoint?: pulumi.Input<string>;
    includePlaintextKey?: pulumi.Input<boolean>;
    keyId?: pulumi.Input<string>;
    keyShape?: pulumi.Input<inputs.KmsGeneratedKeyKeyShape>;
    loggingContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    plaintext?: pulumi.Input<string>;
    plaintextChecksum?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.KmsGeneratedKeyTimeouts>;
}

/**
 * The set of arguments for constructing a KmsGeneratedKey resource.
 */
export interface KmsGeneratedKeyArgs {
    associatedData?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    cryptoEndpoint: pulumi.Input<string>;
    includePlaintextKey: pulumi.Input<boolean>;
    keyId: pulumi.Input<string>;
    keyShape: pulumi.Input<inputs.KmsGeneratedKeyKeyShape>;
    loggingContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.KmsGeneratedKeyTimeouts>;
}
