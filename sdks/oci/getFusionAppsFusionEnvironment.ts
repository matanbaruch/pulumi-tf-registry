// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFusionAppsFusionEnvironment(args: GetFusionAppsFusionEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetFusionAppsFusionEnvironmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getFusionAppsFusionEnvironment:getFusionAppsFusionEnvironment", {
        "fusionEnvironmentId": args.fusionEnvironmentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFusionAppsFusionEnvironment.
 */
export interface GetFusionAppsFusionEnvironmentArgs {
    fusionEnvironmentId: string;
}

/**
 * A collection of values returned by getFusionAppsFusionEnvironment.
 */
export interface GetFusionAppsFusionEnvironmentResult {
    readonly additionalLanguagePacks: string[];
    readonly appliedPatchBundles: string[];
    readonly compartmentId: string;
    readonly createFusionEnvironmentAdminUserDetails: outputs.GetFusionAppsFusionEnvironmentCreateFusionEnvironmentAdminUserDetail[];
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly dnsPrefix: string;
    readonly domainId: string;
    readonly freeformTags: {[key: string]: string};
    readonly fusionEnvironmentFamilyId: string;
    readonly fusionEnvironmentId: string;
    readonly fusionEnvironmentType: string;
    readonly id: string;
    readonly idcsDomainUrl: string;
    readonly isBreakGlassEnabled: boolean;
    readonly kmsKeyId: string;
    readonly kmsKeyInfos: outputs.GetFusionAppsFusionEnvironmentKmsKeyInfo[];
    readonly lifecycleDetails: string;
    readonly lockboxId: string;
    readonly maintenancePolicies: outputs.GetFusionAppsFusionEnvironmentMaintenancePolicy[];
    readonly publicUrl: string;
    readonly refreshes: outputs.GetFusionAppsFusionEnvironmentRefresh[];
    readonly rules: outputs.GetFusionAppsFusionEnvironmentRule[];
    readonly state: string;
    readonly subscriptionIds: string[];
    readonly systemName: string;
    readonly timeCreated: string;
    readonly timeUpcomingMaintenance: string;
    readonly timeUpdated: string;
    readonly version: string;
}
export function getFusionAppsFusionEnvironmentOutput(args: GetFusionAppsFusionEnvironmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFusionAppsFusionEnvironmentResult> {
    return pulumi.output(args).apply((a: any) => getFusionAppsFusionEnvironment(a, opts))
}

/**
 * A collection of arguments for invoking getFusionAppsFusionEnvironment.
 */
export interface GetFusionAppsFusionEnvironmentOutputArgs {
    fusionEnvironmentId: pulumi.Input<string>;
}
