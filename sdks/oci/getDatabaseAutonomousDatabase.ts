// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseAutonomousDatabase(args: GetDatabaseAutonomousDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseAutonomousDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseAutonomousDatabase:getDatabaseAutonomousDatabase", {
        "autonomousDatabaseId": args.autonomousDatabaseId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseAutonomousDatabase.
 */
export interface GetDatabaseAutonomousDatabaseArgs {
    autonomousDatabaseId: string;
}

/**
 * A collection of values returned by getDatabaseAutonomousDatabase.
 */
export interface GetDatabaseAutonomousDatabaseResult {
    readonly actualUsedDataStorageSizeInTbs: number;
    readonly adminPassword: string;
    readonly allocatedStorageSizeInTbs: number;
    readonly apexDetails: outputs.GetDatabaseAutonomousDatabaseApexDetail[];
    readonly arePrimaryWhitelistedIpsUsed: boolean;
    readonly autoRefreshFrequencyInSeconds: number;
    readonly autoRefreshPointLagInSeconds: number;
    readonly autonomousContainerDatabaseId: string;
    readonly autonomousDatabaseBackupId: string;
    readonly autonomousDatabaseId: string;
    readonly autonomousMaintenanceScheduleType: string;
    readonly availabilityDomain: string;
    readonly availableUpgradeVersions: string[];
    readonly backupConfigs: outputs.GetDatabaseAutonomousDatabaseBackupConfig[];
    readonly backupRetentionPeriodInDays: number;
    readonly byolComputeCountLimit: number;
    readonly characterSet: string;
    readonly cloneType: string;
    readonly clusterPlacementGroupId: string;
    readonly compartmentId: string;
    readonly computeCount: number;
    readonly computeModel: string;
    readonly connectionStrings: outputs.GetDatabaseAutonomousDatabaseConnectionString[];
    readonly connectionUrls: outputs.GetDatabaseAutonomousDatabaseConnectionUrl[];
    readonly cpuCoreCount: number;
    readonly customerContacts: outputs.GetDatabaseAutonomousDatabaseCustomerContact[];
    readonly dataSafeStatus: string;
    readonly dataStorageSizeInGb: number;
    readonly dataStorageSizeInTbs: number;
    readonly databaseEdition: string;
    readonly databaseManagementStatus: string;
    readonly dataguardRegionType: string;
    readonly dbName: string;
    readonly dbToolsDetails: outputs.GetDatabaseAutonomousDatabaseDbToolsDetail[];
    readonly dbVersion: string;
    readonly dbWorkload: string;
    readonly definedTags: {[key: string]: string};
    readonly disasterRecoveryRegionType: string;
    readonly disasterRecoveryType: string;
    readonly displayName: string;
    readonly failedDataRecoveryInSeconds: number;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly inMemoryAreaInGbs: number;
    readonly inMemoryPercentage: number;
    readonly infrastructureType: string;
    readonly isAccessControlEnabled: boolean;
    readonly isAutoScalingEnabled: boolean;
    readonly isAutoScalingForStorageEnabled: boolean;
    readonly isDataGuardEnabled: boolean;
    readonly isDedicated: boolean;
    readonly isDevTier: boolean;
    readonly isFreeTier: boolean;
    readonly isLocalDataGuardEnabled: boolean;
    readonly isMtlsConnectionRequired: boolean;
    readonly isPreview: boolean;
    readonly isPreviewVersionWithServiceTermsAccepted: boolean;
    readonly isReconnectCloneEnabled: boolean;
    readonly isRefreshableClone: boolean;
    readonly isRemoteDataGuardEnabled: boolean;
    readonly isReplicateAutomaticBackups: boolean;
    /**
     * @deprecated Deprecated
     */
    readonly isShrinkOnly: boolean;
    readonly keyHistoryEntries: outputs.GetDatabaseAutonomousDatabaseKeyHistoryEntry[];
    readonly keyStoreId: string;
    readonly keyStoreWalletName: string;
    readonly kmsKeyId: string;
    readonly kmsKeyLifecycleDetails: string;
    readonly kmsKeyVersionId: string;
    readonly licenseModel: string;
    readonly lifecycleDetails: string;
    readonly localAdgAutoFailoverMaxDataLossLimit: number;
    readonly localDisasterRecoveryType: string;
    readonly localStandbyDbs: outputs.GetDatabaseAutonomousDatabaseLocalStandbyDb[];
    readonly longTermBackupSchedules: outputs.GetDatabaseAutonomousDatabaseLongTermBackupSchedule[];
    readonly maxCpuCoreCount: number;
    readonly memoryPerOracleComputeUnitInGbs: number;
    readonly ncharacterSet: string;
    readonly netServicesArchitecture: string;
    readonly nextLongTermBackupTimeStamp: string;
    readonly nsgIds: string[];
    readonly ocpuCount: number;
    readonly openMode: string;
    readonly operationsInsightsStatus: string;
    readonly peerDbIds: string[];
    readonly permissionLevel: string;
    readonly privateEndpoint: string;
    readonly privateEndpointIp: string;
    readonly privateEndpointLabel: string;
    readonly provisionableCpuses: number[];
    readonly publicConnectionUrls: outputs.GetDatabaseAutonomousDatabasePublicConnectionUrl[];
    readonly publicEndpoint: string;
    readonly refreshableMode: string;
    readonly refreshableStatus: string;
    readonly remoteDisasterRecoveryConfigurations: outputs.GetDatabaseAutonomousDatabaseRemoteDisasterRecoveryConfiguration[];
    readonly remoteDisasterRecoveryType: string;
    readonly resourcePoolLeaderId: string;
    readonly resourcePoolSummaries: outputs.GetDatabaseAutonomousDatabaseResourcePoolSummary[];
    readonly role: string;
    readonly rotateKeyTrigger: boolean;
    readonly scheduledOperations: outputs.GetDatabaseAutonomousDatabaseScheduledOperation[];
    readonly secretId: string;
    readonly secretVersionNumber: number;
    readonly serviceConsoleUrl: string;
    readonly shrinkAdbTrigger: number;
    readonly source: string;
    readonly sourceId: string;
    readonly standbyDbs: outputs.GetDatabaseAutonomousDatabaseStandbyDb[];
    readonly standbyWhitelistedIps: string[];
    readonly state: string;
    readonly subnetId: string;
    readonly subscriptionId: string;
    readonly supportedRegionsToCloneTos: string[];
    readonly switchoverTo: string;
    readonly switchoverToRemotePeerId: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeDataGuardRoleChanged: string;
    readonly timeDeletionOfFreeAutonomousDatabase: string;
    readonly timeDisasterRecoveryRoleChanged: string;
    readonly timeLocalDataGuardEnabled: string;
    readonly timeMaintenanceBegin: string;
    readonly timeMaintenanceEnd: string;
    readonly timeOfAutoRefreshStart: string;
    readonly timeOfJoiningResourcePool: string;
    readonly timeOfLastFailover: string;
    readonly timeOfLastRefresh: string;
    readonly timeOfLastRefreshPoint: string;
    readonly timeOfLastSwitchover: string;
    readonly timeOfNextRefresh: string;
    readonly timeReclamationOfFreeAutonomousDatabase: string;
    readonly timeUntilReconnectCloneEnabled: string;
    readonly timestamp: string;
    readonly totalBackupStorageSizeInGbs: number;
    readonly useLatestAvailableBackupTimeStamp: boolean;
    readonly usedDataStorageSizeInGbs: number;
    readonly usedDataStorageSizeInTbs: number;
    readonly vaultId: string;
    readonly whitelistedIps: string[];
}
export function getDatabaseAutonomousDatabaseOutput(args: GetDatabaseAutonomousDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseAutonomousDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseAutonomousDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseAutonomousDatabase.
 */
export interface GetDatabaseAutonomousDatabaseOutputArgs {
    autonomousDatabaseId: pulumi.Input<string>;
}
