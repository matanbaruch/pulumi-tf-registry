// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBastionBastion(args: GetBastionBastionArgs, opts?: pulumi.InvokeOptions): Promise<GetBastionBastionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getBastionBastion:getBastionBastion", {
        "bastionId": args.bastionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBastionBastion.
 */
export interface GetBastionBastionArgs {
    bastionId: string;
}

/**
 * A collection of values returned by getBastionBastion.
 */
export interface GetBastionBastionResult {
    readonly bastionId: string;
    readonly bastionType: string;
    readonly clientCidrBlockAllowLists: string[];
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly dnsProxyStatus: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly maxSessionTtlInSeconds: number;
    readonly maxSessionsAllowed: number;
    readonly name: string;
    readonly phoneBookEntry: string;
    readonly privateEndpointIpAddress: string;
    readonly state: string;
    readonly staticJumpHostIpAddresses: string[];
    readonly systemTags: {[key: string]: string};
    readonly targetSubnetId: string;
    readonly targetVcnId: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getBastionBastionOutput(args: GetBastionBastionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBastionBastionResult> {
    return pulumi.output(args).apply((a: any) => getBastionBastion(a, opts))
}

/**
 * A collection of arguments for invoking getBastionBastion.
 */
export interface GetBastionBastionOutputArgs {
    bastionId: pulumi.Input<string>;
}
