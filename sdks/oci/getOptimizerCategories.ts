// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOptimizerCategories(args: GetOptimizerCategoriesArgs, opts?: pulumi.InvokeOptions): Promise<GetOptimizerCategoriesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOptimizerCategories:getOptimizerCategories", {
        "childTenancyIds": args.childTenancyIds,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "id": args.id,
        "includeOrganization": args.includeOrganization,
        "name": args.name,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOptimizerCategories.
 */
export interface GetOptimizerCategoriesArgs {
    childTenancyIds?: string[];
    compartmentId: string;
    compartmentIdInSubtree: boolean;
    filters?: inputs.GetOptimizerCategoriesFilter[];
    id?: string;
    includeOrganization?: boolean;
    name?: string;
    state?: string;
}

/**
 * A collection of values returned by getOptimizerCategories.
 */
export interface GetOptimizerCategoriesResult {
    readonly categoryCollections: outputs.GetOptimizerCategoriesCategoryCollection[];
    readonly childTenancyIds?: string[];
    readonly compartmentId: string;
    readonly compartmentIdInSubtree: boolean;
    readonly filters?: outputs.GetOptimizerCategoriesFilter[];
    readonly id: string;
    readonly includeOrganization?: boolean;
    readonly name?: string;
    readonly state?: string;
}
export function getOptimizerCategoriesOutput(args: GetOptimizerCategoriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOptimizerCategoriesResult> {
    return pulumi.output(args).apply((a: any) => getOptimizerCategories(a, opts))
}

/**
 * A collection of arguments for invoking getOptimizerCategories.
 */
export interface GetOptimizerCategoriesOutputArgs {
    childTenancyIds?: pulumi.Input<pulumi.Input<string>[]>;
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOptimizerCategoriesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    includeOrganization?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
