// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMediaServicesMediaWorkflowTaskDeclaration(args?: GetMediaServicesMediaWorkflowTaskDeclarationArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaServicesMediaWorkflowTaskDeclarationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMediaServicesMediaWorkflowTaskDeclaration:getMediaServicesMediaWorkflowTaskDeclaration", {
        "compartmentId": args.compartmentId,
        "id": args.id,
        "isCurrent": args.isCurrent,
        "name": args.name,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMediaServicesMediaWorkflowTaskDeclaration.
 */
export interface GetMediaServicesMediaWorkflowTaskDeclarationArgs {
    compartmentId?: string;
    id?: string;
    isCurrent?: boolean;
    name?: string;
    version?: number;
}

/**
 * A collection of values returned by getMediaServicesMediaWorkflowTaskDeclaration.
 */
export interface GetMediaServicesMediaWorkflowTaskDeclarationResult {
    readonly compartmentId?: string;
    readonly id: string;
    readonly isCurrent?: boolean;
    readonly items: outputs.GetMediaServicesMediaWorkflowTaskDeclarationItem[];
    readonly name?: string;
    readonly version?: number;
}
export function getMediaServicesMediaWorkflowTaskDeclarationOutput(args?: GetMediaServicesMediaWorkflowTaskDeclarationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediaServicesMediaWorkflowTaskDeclarationResult> {
    return pulumi.output(args).apply((a: any) => getMediaServicesMediaWorkflowTaskDeclaration(a, opts))
}

/**
 * A collection of arguments for invoking getMediaServicesMediaWorkflowTaskDeclaration.
 */
export interface GetMediaServicesMediaWorkflowTaskDeclarationOutputArgs {
    compartmentId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isCurrent?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    version?: pulumi.Input<number>;
}
