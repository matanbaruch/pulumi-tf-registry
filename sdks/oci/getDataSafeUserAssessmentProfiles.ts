// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeUserAssessmentProfiles(args: GetDataSafeUserAssessmentProfilesArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeUserAssessmentProfilesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeUserAssessmentProfiles:getDataSafeUserAssessmentProfiles", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "failedLoginAttemptsGreaterThanOrEqual": args.failedLoginAttemptsGreaterThanOrEqual,
        "failedLoginAttemptsLessThan": args.failedLoginAttemptsLessThan,
        "filters": args.filters,
        "id": args.id,
        "inactiveAccountTimeGreaterThanOrEqual": args.inactiveAccountTimeGreaterThanOrEqual,
        "inactiveAccountTimeLessThan": args.inactiveAccountTimeLessThan,
        "isUserCreated": args.isUserCreated,
        "passwordLockTimeGreaterThanOrEqual": args.passwordLockTimeGreaterThanOrEqual,
        "passwordLockTimeLessThan": args.passwordLockTimeLessThan,
        "passwordVerificationFunction": args.passwordVerificationFunction,
        "profileName": args.profileName,
        "sessionsPerUserGreaterThanOrEqual": args.sessionsPerUserGreaterThanOrEqual,
        "sessionsPerUserLessThan": args.sessionsPerUserLessThan,
        "targetId": args.targetId,
        "userAssessmentId": args.userAssessmentId,
        "userCountGreaterThanOrEqual": args.userCountGreaterThanOrEqual,
        "userCountLessThan": args.userCountLessThan,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeUserAssessmentProfiles.
 */
export interface GetDataSafeUserAssessmentProfilesArgs {
    accessLevel?: string;
    compartmentId: string;
    compartmentIdInSubtree?: boolean;
    failedLoginAttemptsGreaterThanOrEqual?: string;
    failedLoginAttemptsLessThan?: string;
    filters?: inputs.GetDataSafeUserAssessmentProfilesFilter[];
    id?: string;
    inactiveAccountTimeGreaterThanOrEqual?: string;
    inactiveAccountTimeLessThan?: string;
    isUserCreated?: boolean;
    passwordLockTimeGreaterThanOrEqual?: string;
    passwordLockTimeLessThan?: string;
    passwordVerificationFunction?: string;
    profileName?: string;
    sessionsPerUserGreaterThanOrEqual?: string;
    sessionsPerUserLessThan?: string;
    targetId?: string;
    userAssessmentId: string;
    userCountGreaterThanOrEqual?: string;
    userCountLessThan?: string;
}

/**
 * A collection of values returned by getDataSafeUserAssessmentProfiles.
 */
export interface GetDataSafeUserAssessmentProfilesResult {
    readonly accessLevel?: string;
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly failedLoginAttemptsGreaterThanOrEqual?: string;
    readonly failedLoginAttemptsLessThan?: string;
    readonly filters?: outputs.GetDataSafeUserAssessmentProfilesFilter[];
    readonly id: string;
    readonly inactiveAccountTimeGreaterThanOrEqual?: string;
    readonly inactiveAccountTimeLessThan?: string;
    readonly isUserCreated?: boolean;
    readonly passwordLockTimeGreaterThanOrEqual?: string;
    readonly passwordLockTimeLessThan?: string;
    readonly passwordVerificationFunction?: string;
    readonly profileName?: string;
    readonly profiles: outputs.GetDataSafeUserAssessmentProfilesProfile[];
    readonly sessionsPerUserGreaterThanOrEqual?: string;
    readonly sessionsPerUserLessThan?: string;
    readonly targetId?: string;
    readonly userAssessmentId: string;
    readonly userCountGreaterThanOrEqual?: string;
    readonly userCountLessThan?: string;
}
export function getDataSafeUserAssessmentProfilesOutput(args: GetDataSafeUserAssessmentProfilesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeUserAssessmentProfilesResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeUserAssessmentProfiles(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeUserAssessmentProfiles.
 */
export interface GetDataSafeUserAssessmentProfilesOutputArgs {
    accessLevel?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    failedLoginAttemptsGreaterThanOrEqual?: pulumi.Input<string>;
    failedLoginAttemptsLessThan?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataSafeUserAssessmentProfilesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    inactiveAccountTimeGreaterThanOrEqual?: pulumi.Input<string>;
    inactiveAccountTimeLessThan?: pulumi.Input<string>;
    isUserCreated?: pulumi.Input<boolean>;
    passwordLockTimeGreaterThanOrEqual?: pulumi.Input<string>;
    passwordLockTimeLessThan?: pulumi.Input<string>;
    passwordVerificationFunction?: pulumi.Input<string>;
    profileName?: pulumi.Input<string>;
    sessionsPerUserGreaterThanOrEqual?: pulumi.Input<string>;
    sessionsPerUserLessThan?: pulumi.Input<string>;
    targetId?: pulumi.Input<string>;
    userAssessmentId: pulumi.Input<string>;
    userCountGreaterThanOrEqual?: pulumi.Input<string>;
    userCountLessThan?: pulumi.Input<string>;
}
