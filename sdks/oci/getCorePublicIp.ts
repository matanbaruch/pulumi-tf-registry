// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCorePublicIp(args?: GetCorePublicIpArgs, opts?: pulumi.InvokeOptions): Promise<GetCorePublicIpResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCorePublicIp:getCorePublicIp", {
        "id": args.id,
        "ipAddress": args.ipAddress,
        "privateIpId": args.privateIpId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCorePublicIp.
 */
export interface GetCorePublicIpArgs {
    id?: string;
    ipAddress?: string;
    privateIpId?: string;
    timeouts?: inputs.GetCorePublicIpTimeouts;
}

/**
 * A collection of values returned by getCorePublicIp.
 */
export interface GetCorePublicIpResult {
    readonly assignedEntityId: string;
    readonly assignedEntityType: string;
    readonly availabilityDomain: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly ipAddress: string;
    readonly lifetime: string;
    readonly privateIpId: string;
    readonly publicIpPoolId: string;
    readonly scope: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeouts?: outputs.GetCorePublicIpTimeouts;
}
export function getCorePublicIpOutput(args?: GetCorePublicIpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCorePublicIpResult> {
    return pulumi.output(args).apply((a: any) => getCorePublicIp(a, opts))
}

/**
 * A collection of arguments for invoking getCorePublicIp.
 */
export interface GetCorePublicIpOutputArgs {
    id?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    privateIpId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetCorePublicIpTimeoutsArgs>;
}
