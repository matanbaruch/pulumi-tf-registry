// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityNetworkSource(args: GetIdentityNetworkSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityNetworkSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityNetworkSource:getIdentityNetworkSource", {
        "networkSourceId": args.networkSourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityNetworkSource.
 */
export interface GetIdentityNetworkSourceArgs {
    networkSourceId: string;
}

/**
 * A collection of values returned by getIdentityNetworkSource.
 */
export interface GetIdentityNetworkSourceResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly inactiveState: string;
    readonly name: string;
    readonly networkSourceId: string;
    readonly publicSourceLists: string[];
    readonly services: string[];
    readonly state: string;
    readonly timeCreated: string;
    readonly virtualSourceLists: outputs.GetIdentityNetworkSourceVirtualSourceList[];
}
export function getIdentityNetworkSourceOutput(args: GetIdentityNetworkSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityNetworkSourceResult> {
    return pulumi.output(args).apply((a: any) => getIdentityNetworkSource(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityNetworkSource.
 */
export interface GetIdentityNetworkSourceOutputArgs {
    networkSourceId: pulumi.Input<string>;
}
