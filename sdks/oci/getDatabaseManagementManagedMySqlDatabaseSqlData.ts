// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementManagedMySqlDatabaseSqlData(args: GetDatabaseManagementManagedMySqlDatabaseSqlDataArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementManagedMySqlDatabaseSqlDataResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementManagedMySqlDatabaseSqlData:getDatabaseManagementManagedMySqlDatabaseSqlData", {
        "endTime": args.endTime,
        "filterColumn": args.filterColumn,
        "filters": args.filters,
        "id": args.id,
        "managedMySqlDatabaseId": args.managedMySqlDatabaseId,
        "startTime": args.startTime,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedMySqlDatabaseSqlData.
 */
export interface GetDatabaseManagementManagedMySqlDatabaseSqlDataArgs {
    endTime: string;
    filterColumn?: string;
    filters?: inputs.GetDatabaseManagementManagedMySqlDatabaseSqlDataFilter[];
    id?: string;
    managedMySqlDatabaseId: string;
    startTime: string;
}

/**
 * A collection of values returned by getDatabaseManagementManagedMySqlDatabaseSqlData.
 */
export interface GetDatabaseManagementManagedMySqlDatabaseSqlDataResult {
    readonly endTime: string;
    readonly filterColumn?: string;
    readonly filters?: outputs.GetDatabaseManagementManagedMySqlDatabaseSqlDataFilter[];
    readonly id: string;
    readonly managedMySqlDatabaseId: string;
    readonly mySqlDataCollections: outputs.GetDatabaseManagementManagedMySqlDatabaseSqlDataMySqlDataCollection[];
    readonly startTime: string;
}
export function getDatabaseManagementManagedMySqlDatabaseSqlDataOutput(args: GetDatabaseManagementManagedMySqlDatabaseSqlDataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementManagedMySqlDatabaseSqlDataResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementManagedMySqlDatabaseSqlData(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedMySqlDatabaseSqlData.
 */
export interface GetDatabaseManagementManagedMySqlDatabaseSqlDataOutputArgs {
    endTime: pulumi.Input<string>;
    filterColumn?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseManagementManagedMySqlDatabaseSqlDataFilterArgs>[]>;
    id?: pulumi.Input<string>;
    managedMySqlDatabaseId: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
}
