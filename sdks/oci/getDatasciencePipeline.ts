// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatasciencePipeline(args: GetDatasciencePipelineArgs, opts?: pulumi.InvokeOptions): Promise<GetDatasciencePipelineResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatasciencePipeline:getDatasciencePipeline", {
        "pipelineId": args.pipelineId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatasciencePipeline.
 */
export interface GetDatasciencePipelineArgs {
    pipelineId: string;
}

/**
 * A collection of values returned by getDatasciencePipeline.
 */
export interface GetDatasciencePipelineResult {
    readonly compartmentId: string;
    readonly configurationDetails: outputs.GetDatasciencePipelineConfigurationDetail[];
    readonly createdBy: string;
    readonly definedTags: {[key: string]: string};
    readonly deleteRelatedPipelineRuns: boolean;
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly infrastructureConfigurationDetails: outputs.GetDatasciencePipelineInfrastructureConfigurationDetail[];
    readonly lifecycleDetails: string;
    readonly logConfigurationDetails: outputs.GetDatasciencePipelineLogConfigurationDetail[];
    readonly pipelineId: string;
    readonly projectId: string;
    readonly state: string;
    readonly stepArtifacts: outputs.GetDatasciencePipelineStepArtifact[];
    readonly stepDetails: outputs.GetDatasciencePipelineStepDetail[];
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getDatasciencePipelineOutput(args: GetDatasciencePipelineOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatasciencePipelineResult> {
    return pulumi.output(args).apply((a: any) => getDatasciencePipeline(a, opts))
}

/**
 * A collection of arguments for invoking getDatasciencePipeline.
 */
export interface GetDatasciencePipelineOutputArgs {
    pipelineId: pulumi.Input<string>;
}
