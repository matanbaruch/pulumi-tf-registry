// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityUser(args: GetIdentityUserArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityUser:getIdentityUser", {
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityUser.
 */
export interface GetIdentityUserArgs {
    userId: string;
}

/**
 * A collection of values returned by getIdentityUser.
 */
export interface GetIdentityUserResult {
    readonly capabilities: outputs.GetIdentityUserCapability[];
    readonly compartmentId: string;
    readonly dbUserName: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly email: string;
    readonly emailVerified: boolean;
    readonly externalIdentifier: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly identityProviderId: string;
    readonly inactiveState: string;
    readonly lastSuccessfulLoginTime: string;
    readonly name: string;
    readonly previousSuccessfulLoginTime: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly userId: string;
}
export function getIdentityUserOutput(args: GetIdentityUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityUserResult> {
    return pulumi.output(args).apply((a: any) => getIdentityUser(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityUser.
 */
export interface GetIdentityUserOutputArgs {
    userId: pulumi.Input<string>;
}
