// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDelegateAccessControlServiceProviders(args: GetDelegateAccessControlServiceProvidersArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegateAccessControlServiceProvidersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDelegateAccessControlServiceProviders:getDelegateAccessControlServiceProviders", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "serviceProviderType": args.serviceProviderType,
        "state": args.state,
        "supportedResourceType": args.supportedResourceType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDelegateAccessControlServiceProviders.
 */
export interface GetDelegateAccessControlServiceProvidersArgs {
    compartmentId: string;
    filters?: inputs.GetDelegateAccessControlServiceProvidersFilter[];
    id?: string;
    name?: string;
    serviceProviderType?: string;
    state?: string;
    supportedResourceType?: string;
}

/**
 * A collection of values returned by getDelegateAccessControlServiceProviders.
 */
export interface GetDelegateAccessControlServiceProvidersResult {
    readonly compartmentId: string;
    readonly filters?: outputs.GetDelegateAccessControlServiceProvidersFilter[];
    readonly id: string;
    readonly name?: string;
    readonly serviceProviderSummaryCollections: outputs.GetDelegateAccessControlServiceProvidersServiceProviderSummaryCollection[];
    readonly serviceProviderType?: string;
    readonly state?: string;
    readonly supportedResourceType?: string;
}
export function getDelegateAccessControlServiceProvidersOutput(args: GetDelegateAccessControlServiceProvidersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDelegateAccessControlServiceProvidersResult> {
    return pulumi.output(args).apply((a: any) => getDelegateAccessControlServiceProviders(a, opts))
}

/**
 * A collection of arguments for invoking getDelegateAccessControlServiceProviders.
 */
export interface GetDelegateAccessControlServiceProvidersOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDelegateAccessControlServiceProvidersFilterArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    serviceProviderType?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    supportedResourceType?: pulumi.Input<string>;
}
