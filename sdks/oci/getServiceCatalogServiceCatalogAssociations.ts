// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceCatalogServiceCatalogAssociations(args?: GetServiceCatalogServiceCatalogAssociationsArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceCatalogServiceCatalogAssociationsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getServiceCatalogServiceCatalogAssociations:getServiceCatalogServiceCatalogAssociations", {
        "entityId": args.entityId,
        "entityType": args.entityType,
        "filters": args.filters,
        "id": args.id,
        "serviceCatalogAssociationId": args.serviceCatalogAssociationId,
        "serviceCatalogId": args.serviceCatalogId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceCatalogServiceCatalogAssociations.
 */
export interface GetServiceCatalogServiceCatalogAssociationsArgs {
    entityId?: string;
    entityType?: string;
    filters?: inputs.GetServiceCatalogServiceCatalogAssociationsFilter[];
    id?: string;
    serviceCatalogAssociationId?: string;
    serviceCatalogId?: string;
}

/**
 * A collection of values returned by getServiceCatalogServiceCatalogAssociations.
 */
export interface GetServiceCatalogServiceCatalogAssociationsResult {
    readonly entityId?: string;
    readonly entityType?: string;
    readonly filters?: outputs.GetServiceCatalogServiceCatalogAssociationsFilter[];
    readonly id: string;
    readonly serviceCatalogAssociationCollections: outputs.GetServiceCatalogServiceCatalogAssociationsServiceCatalogAssociationCollection[];
    readonly serviceCatalogAssociationId?: string;
    readonly serviceCatalogId?: string;
}
export function getServiceCatalogServiceCatalogAssociationsOutput(args?: GetServiceCatalogServiceCatalogAssociationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceCatalogServiceCatalogAssociationsResult> {
    return pulumi.output(args).apply((a: any) => getServiceCatalogServiceCatalogAssociations(a, opts))
}

/**
 * A collection of arguments for invoking getServiceCatalogServiceCatalogAssociations.
 */
export interface GetServiceCatalogServiceCatalogAssociationsOutputArgs {
    entityId?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetServiceCatalogServiceCatalogAssociationsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    serviceCatalogAssociationId?: pulumi.Input<string>;
    serviceCatalogId?: pulumi.Input<string>;
}
