// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreInstanceConfiguration(args: GetCoreInstanceConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreInstanceConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreInstanceConfiguration:getCoreInstanceConfiguration", {
        "instanceConfigurationId": args.instanceConfigurationId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreInstanceConfiguration.
 */
export interface GetCoreInstanceConfigurationArgs {
    instanceConfigurationId: string;
}

/**
 * A collection of values returned by getCoreInstanceConfiguration.
 */
export interface GetCoreInstanceConfigurationResult {
    readonly compartmentId: string;
    readonly deferredFields: string[];
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly instanceConfigurationId: string;
    readonly instanceDetails: outputs.GetCoreInstanceConfigurationInstanceDetail[];
    readonly instanceId: string;
    readonly source: string;
    readonly timeCreated: string;
}
export function getCoreInstanceConfigurationOutput(args: GetCoreInstanceConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreInstanceConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getCoreInstanceConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getCoreInstanceConfiguration.
 */
export interface GetCoreInstanceConfigurationOutputArgs {
    instanceConfigurationId: pulumi.Input<string>;
}
