// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getContainerengineAddon(args: GetContainerengineAddonArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerengineAddonResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getContainerengineAddon:getContainerengineAddon", {
        "addonName": args.addonName,
        "clusterId": args.clusterId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContainerengineAddon.
 */
export interface GetContainerengineAddonArgs {
    addonName: string;
    clusterId: string;
}

/**
 * A collection of values returned by getContainerengineAddon.
 */
export interface GetContainerengineAddonResult {
    readonly addonErrors: outputs.GetContainerengineAddonAddonError[];
    readonly addonName: string;
    readonly clusterId: string;
    readonly configurations: outputs.GetContainerengineAddonConfiguration[];
    readonly currentInstalledVersion: string;
    readonly id: string;
    readonly removeAddonResourcesOnDelete: boolean;
    readonly state: string;
    readonly timeCreated: string;
    readonly version: string;
}
export function getContainerengineAddonOutput(args: GetContainerengineAddonOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerengineAddonResult> {
    return pulumi.output(args).apply((a: any) => getContainerengineAddon(a, opts))
}

/**
 * A collection of arguments for invoking getContainerengineAddon.
 */
export interface GetContainerengineAddonOutputArgs {
    addonName: pulumi.Input<string>;
    clusterId: pulumi.Input<string>;
}
