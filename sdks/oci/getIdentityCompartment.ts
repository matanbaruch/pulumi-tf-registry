// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIdentityCompartment(args: GetIdentityCompartmentArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityCompartmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityCompartment:getIdentityCompartment", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityCompartment.
 */
export interface GetIdentityCompartmentArgs {
    id: string;
}

/**
 * A collection of values returned by getIdentityCompartment.
 */
export interface GetIdentityCompartmentResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly inactiveState: string;
    readonly isAccessible: boolean;
    readonly name: string;
    readonly state: string;
    readonly timeCreated: string;
}
export function getIdentityCompartmentOutput(args: GetIdentityCompartmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityCompartmentResult> {
    return pulumi.output(args).apply((a: any) => getIdentityCompartment(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityCompartment.
 */
export interface GetIdentityCompartmentOutputArgs {
    id: pulumi.Input<string>;
}
