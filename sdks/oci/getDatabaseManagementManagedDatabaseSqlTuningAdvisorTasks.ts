// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasks(args: GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasks:getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasks", {
        "filters": args.filters,
        "id": args.id,
        "managedDatabaseId": args.managedDatabaseId,
        "name": args.name,
        "opcNamedCredentialId": args.opcNamedCredentialId,
        "status": args.status,
        "timeGreaterThanOrEqualTo": args.timeGreaterThanOrEqualTo,
        "timeLessThanOrEqualTo": args.timeLessThanOrEqualTo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasks.
 */
export interface GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksArgs {
    filters?: inputs.GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFilter[];
    id?: string;
    managedDatabaseId: string;
    name?: string;
    opcNamedCredentialId?: string;
    status?: string;
    timeGreaterThanOrEqualTo?: string;
    timeLessThanOrEqualTo?: string;
}

/**
 * A collection of values returned by getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasks.
 */
export interface GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksResult {
    readonly filters?: outputs.GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFilter[];
    readonly id: string;
    readonly managedDatabaseId: string;
    readonly name?: string;
    readonly opcNamedCredentialId?: string;
    readonly sqlTuningAdvisorTaskCollections: outputs.GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksSqlTuningAdvisorTaskCollection[];
    readonly status?: string;
    readonly timeGreaterThanOrEqualTo?: string;
    readonly timeLessThanOrEqualTo?: string;
}
export function getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksOutput(args: GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasks(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedDatabaseSqlTuningAdvisorTasks.
 */
export interface GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFilterArgs>[]>;
    id?: pulumi.Input<string>;
    managedDatabaseId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    opcNamedCredentialId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeGreaterThanOrEqualTo?: pulumi.Input<string>;
    timeLessThanOrEqualTo?: pulumi.Input<string>;
}
