// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOpensearchOpensearchCluster(args: GetOpensearchOpensearchClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetOpensearchOpensearchClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOpensearchOpensearchCluster:getOpensearchOpensearchCluster", {
        "opensearchClusterId": args.opensearchClusterId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpensearchOpensearchCluster.
 */
export interface GetOpensearchOpensearchClusterArgs {
    opensearchClusterId: string;
}

/**
 * A collection of values returned by getOpensearchOpensearchCluster.
 */
export interface GetOpensearchOpensearchClusterResult {
    readonly availabilityDomains: string[];
    readonly compartmentId: string;
    readonly dataNodeCount: number;
    readonly dataNodeHostBareMetalShape: string;
    readonly dataNodeHostMemoryGb: number;
    readonly dataNodeHostOcpuCount: number;
    readonly dataNodeHostType: string;
    readonly dataNodeStorageGb: number;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly fqdn: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly masterNodeCount: number;
    readonly masterNodeHostBareMetalShape: string;
    readonly masterNodeHostMemoryGb: number;
    readonly masterNodeHostOcpuCount: number;
    readonly masterNodeHostType: string;
    readonly opendashboardFqdn: string;
    readonly opendashboardNodeCount: number;
    readonly opendashboardNodeHostMemoryGb: number;
    readonly opendashboardNodeHostOcpuCount: number;
    readonly opendashboardPrivateIp: string;
    readonly opensearchClusterId: string;
    readonly opensearchFqdn: string;
    readonly opensearchPrivateIp: string;
    readonly securityMasterUserName: string;
    readonly securityMasterUserPasswordHash: string;
    readonly securityMode: string;
    readonly softwareVersion: string;
    readonly state: string;
    readonly subnetCompartmentId: string;
    readonly subnetId: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeDeleted: string;
    readonly timeUpdated: string;
    readonly totalStorageGb: number;
    readonly vcnCompartmentId: string;
    readonly vcnId: string;
}
export function getOpensearchOpensearchClusterOutput(args: GetOpensearchOpensearchClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpensearchOpensearchClusterResult> {
    return pulumi.output(args).apply((a: any) => getOpensearchOpensearchCluster(a, opts))
}

/**
 * A collection of arguments for invoking getOpensearchOpensearchCluster.
 */
export interface GetOpensearchOpensearchClusterOutputArgs {
    opensearchClusterId: pulumi.Input<string>;
}
