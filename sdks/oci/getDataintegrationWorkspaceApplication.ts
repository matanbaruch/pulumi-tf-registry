// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataintegrationWorkspaceApplication(args: GetDataintegrationWorkspaceApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetDataintegrationWorkspaceApplicationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataintegrationWorkspaceApplication:getDataintegrationWorkspaceApplication", {
        "applicationKey": args.applicationKey,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataintegrationWorkspaceApplication.
 */
export interface GetDataintegrationWorkspaceApplicationArgs {
    applicationKey: string;
    workspaceId: string;
}

/**
 * A collection of values returned by getDataintegrationWorkspaceApplication.
 */
export interface GetDataintegrationWorkspaceApplicationResult {
    readonly applicationKey: string;
    readonly applicationVersion: number;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly dependentObjectMetadatas: outputs.GetDataintegrationWorkspaceApplicationDependentObjectMetadata[];
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly identifier: string;
    readonly key: string;
    readonly keyMap: {[key: string]: string};
    readonly metadatas: outputs.GetDataintegrationWorkspaceApplicationMetadata[];
    readonly modelType: string;
    readonly modelVersion: string;
    readonly name: string;
    readonly objectStatus: number;
    readonly objectVersion: number;
    readonly parentReves: outputs.GetDataintegrationWorkspaceApplicationParentRef[];
    readonly publishedObjectMetadatas: outputs.GetDataintegrationWorkspaceApplicationPublishedObjectMetadata[];
    readonly registryMetadatas: outputs.GetDataintegrationWorkspaceApplicationRegistryMetadata[];
    readonly sourceApplicationInfos: outputs.GetDataintegrationWorkspaceApplicationSourceApplicationInfo[];
    readonly state: string;
    readonly timeCreated: string;
    readonly timePatched: string;
    readonly timeUpdated: string;
    readonly workspaceId: string;
}
export function getDataintegrationWorkspaceApplicationOutput(args: GetDataintegrationWorkspaceApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataintegrationWorkspaceApplicationResult> {
    return pulumi.output(args).apply((a: any) => getDataintegrationWorkspaceApplication(a, opts))
}

/**
 * A collection of arguments for invoking getDataintegrationWorkspaceApplication.
 */
export interface GetDataintegrationWorkspaceApplicationOutputArgs {
    applicationKey: pulumi.Input<string>;
    workspaceId: pulumi.Input<string>;
}
