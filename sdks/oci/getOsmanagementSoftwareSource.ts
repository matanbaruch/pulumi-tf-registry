// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsmanagementSoftwareSource(args: GetOsmanagementSoftwareSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetOsmanagementSoftwareSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsmanagementSoftwareSource:getOsmanagementSoftwareSource", {
        "softwareSourceId": args.softwareSourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsmanagementSoftwareSource.
 */
export interface GetOsmanagementSoftwareSourceArgs {
    softwareSourceId: string;
}

/**
 * A collection of values returned by getOsmanagementSoftwareSource.
 */
export interface GetOsmanagementSoftwareSourceResult {
    readonly archType: string;
    readonly associatedManagedInstances: outputs.GetOsmanagementSoftwareSourceAssociatedManagedInstance[];
    readonly checksumType: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly gpgKeyFingerprint: string;
    readonly gpgKeyId: string;
    readonly gpgKeyUrl: string;
    readonly id: string;
    readonly maintainerEmail: string;
    readonly maintainerName: string;
    readonly maintainerPhone: string;
    readonly packages: number;
    readonly parentId: string;
    readonly parentName: string;
    readonly repoType: string;
    readonly softwareSourceId: string;
    readonly state: string;
    readonly status: string;
    readonly url: string;
}
export function getOsmanagementSoftwareSourceOutput(args: GetOsmanagementSoftwareSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsmanagementSoftwareSourceResult> {
    return pulumi.output(args).apply((a: any) => getOsmanagementSoftwareSource(a, opts))
}

/**
 * A collection of arguments for invoking getOsmanagementSoftwareSource.
 */
export interface GetOsmanagementSoftwareSourceOutputArgs {
    softwareSourceId: pulumi.Input<string>;
}
