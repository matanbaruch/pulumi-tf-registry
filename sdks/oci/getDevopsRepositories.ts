// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDevopsRepositories(args?: GetDevopsRepositoriesArgs, opts?: pulumi.InvokeOptions): Promise<GetDevopsRepositoriesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDevopsRepositories:getDevopsRepositories", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "projectId": args.projectId,
        "repositoryId": args.repositoryId,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDevopsRepositories.
 */
export interface GetDevopsRepositoriesArgs {
    compartmentId?: string;
    filters?: inputs.GetDevopsRepositoriesFilter[];
    id?: string;
    name?: string;
    projectId?: string;
    repositoryId?: string;
    state?: string;
}

/**
 * A collection of values returned by getDevopsRepositories.
 */
export interface GetDevopsRepositoriesResult {
    readonly compartmentId?: string;
    readonly filters?: outputs.GetDevopsRepositoriesFilter[];
    readonly id: string;
    readonly name?: string;
    readonly projectId?: string;
    readonly repositoryCollections: outputs.GetDevopsRepositoriesRepositoryCollection[];
    readonly repositoryId?: string;
    readonly state?: string;
}
export function getDevopsRepositoriesOutput(args?: GetDevopsRepositoriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDevopsRepositoriesResult> {
    return pulumi.output(args).apply((a: any) => getDevopsRepositories(a, opts))
}

/**
 * A collection of arguments for invoking getDevopsRepositories.
 */
export interface GetDevopsRepositoriesOutputArgs {
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDevopsRepositoriesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    repositoryId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
