// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDelegateAccessControlDelegationControls(args: GetDelegateAccessControlDelegationControlsArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegateAccessControlDelegationControlsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDelegateAccessControlDelegationControls:getDelegateAccessControlDelegationControls", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "resourceId": args.resourceId,
        "resourceType": args.resourceType,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDelegateAccessControlDelegationControls.
 */
export interface GetDelegateAccessControlDelegationControlsArgs {
    compartmentId: string;
    displayName?: string;
    filters?: inputs.GetDelegateAccessControlDelegationControlsFilter[];
    id?: string;
    resourceId?: string;
    resourceType?: string;
    state?: string;
}

/**
 * A collection of values returned by getDelegateAccessControlDelegationControls.
 */
export interface GetDelegateAccessControlDelegationControlsResult {
    readonly compartmentId: string;
    readonly delegationControlSummaryCollections: outputs.GetDelegateAccessControlDelegationControlsDelegationControlSummaryCollection[];
    readonly displayName?: string;
    readonly filters?: outputs.GetDelegateAccessControlDelegationControlsFilter[];
    readonly id: string;
    readonly resourceId?: string;
    readonly resourceType?: string;
    readonly state?: string;
}
export function getDelegateAccessControlDelegationControlsOutput(args: GetDelegateAccessControlDelegationControlsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDelegateAccessControlDelegationControlsResult> {
    return pulumi.output(args).apply((a: any) => getDelegateAccessControlDelegationControls(a, opts))
}

/**
 * A collection of arguments for invoking getDelegateAccessControlDelegationControls.
 */
export interface GetDelegateAccessControlDelegationControlsOutputArgs {
    compartmentId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDelegateAccessControlDelegationControlsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
