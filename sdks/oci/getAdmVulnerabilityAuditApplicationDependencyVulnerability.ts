// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAdmVulnerabilityAuditApplicationDependencyVulnerability(args: GetAdmVulnerabilityAuditApplicationDependencyVulnerabilityArgs, opts?: pulumi.InvokeOptions): Promise<GetAdmVulnerabilityAuditApplicationDependencyVulnerabilityResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getAdmVulnerabilityAuditApplicationDependencyVulnerability:getAdmVulnerabilityAuditApplicationDependencyVulnerability", {
        "cvssV2greaterThanOrEqual": args.cvssV2greaterThanOrEqual,
        "cvssV3greaterThanOrEqual": args.cvssV3greaterThanOrEqual,
        "depth": args.depth,
        "gav": args.gav,
        "id": args.id,
        "purl": args.purl,
        "rootNodeId": args.rootNodeId,
        "severityGreaterThanOrEqual": args.severityGreaterThanOrEqual,
        "sortBy": args.sortBy,
        "vulnerabilityAuditId": args.vulnerabilityAuditId,
        "vulnerabilityId": args.vulnerabilityId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAdmVulnerabilityAuditApplicationDependencyVulnerability.
 */
export interface GetAdmVulnerabilityAuditApplicationDependencyVulnerabilityArgs {
    cvssV2greaterThanOrEqual?: number;
    cvssV3greaterThanOrEqual?: number;
    depth?: number;
    gav?: string;
    id?: string;
    purl?: string;
    rootNodeId?: string;
    severityGreaterThanOrEqual?: string;
    sortBy?: string;
    vulnerabilityAuditId: string;
    vulnerabilityId?: string;
}

/**
 * A collection of values returned by getAdmVulnerabilityAuditApplicationDependencyVulnerability.
 */
export interface GetAdmVulnerabilityAuditApplicationDependencyVulnerabilityResult {
    readonly cvssV2greaterThanOrEqual?: number;
    readonly cvssV3greaterThanOrEqual?: number;
    readonly depth?: number;
    readonly gav?: string;
    readonly id: string;
    readonly items: outputs.GetAdmVulnerabilityAuditApplicationDependencyVulnerabilityItem[];
    readonly purl?: string;
    readonly rootNodeId?: string;
    readonly severityGreaterThanOrEqual?: string;
    readonly sortBy?: string;
    readonly vulnerabilityAuditId: string;
    readonly vulnerabilityId?: string;
}
export function getAdmVulnerabilityAuditApplicationDependencyVulnerabilityOutput(args: GetAdmVulnerabilityAuditApplicationDependencyVulnerabilityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAdmVulnerabilityAuditApplicationDependencyVulnerabilityResult> {
    return pulumi.output(args).apply((a: any) => getAdmVulnerabilityAuditApplicationDependencyVulnerability(a, opts))
}

/**
 * A collection of arguments for invoking getAdmVulnerabilityAuditApplicationDependencyVulnerability.
 */
export interface GetAdmVulnerabilityAuditApplicationDependencyVulnerabilityOutputArgs {
    cvssV2greaterThanOrEqual?: pulumi.Input<number>;
    cvssV3greaterThanOrEqual?: pulumi.Input<number>;
    depth?: pulumi.Input<number>;
    gav?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    purl?: pulumi.Input<string>;
    rootNodeId?: pulumi.Input<string>;
    severityGreaterThanOrEqual?: pulumi.Input<string>;
    sortBy?: pulumi.Input<string>;
    vulnerabilityAuditId: pulumi.Input<string>;
    vulnerabilityId?: pulumi.Input<string>;
}
