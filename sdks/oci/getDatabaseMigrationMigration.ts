// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseMigrationMigration(args: GetDatabaseMigrationMigrationArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseMigrationMigrationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseMigrationMigration:getDatabaseMigrationMigration", {
        "migrationId": args.migrationId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseMigrationMigration.
 */
export interface GetDatabaseMigrationMigrationArgs {
    migrationId: string;
}

/**
 * A collection of values returned by getDatabaseMigrationMigration.
 */
export interface GetDatabaseMigrationMigrationResult {
    readonly advancedParameters: outputs.GetDatabaseMigrationMigrationAdvancedParameter[];
    readonly advisorSettings: outputs.GetDatabaseMigrationMigrationAdvisorSetting[];
    readonly bulkIncludeExcludeData: string;
    readonly compartmentId: string;
    readonly dataTransferMediumDetails: outputs.GetDatabaseMigrationMigrationDataTransferMediumDetail[];
    readonly databaseCombination: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly excludeObjects: outputs.GetDatabaseMigrationMigrationExcludeObject[];
    readonly executingJobId: string;
    readonly freeformTags: {[key: string]: string};
    readonly ggsDetails: outputs.GetDatabaseMigrationMigrationGgsDetail[];
    readonly hubDetails: outputs.GetDatabaseMigrationMigrationHubDetail[];
    readonly id: string;
    readonly includeObjects: outputs.GetDatabaseMigrationMigrationIncludeObject[];
    readonly initialLoadSettings: outputs.GetDatabaseMigrationMigrationInitialLoadSetting[];
    readonly lifecycleDetails: string;
    readonly migrationId: string;
    readonly sourceContainerDatabaseConnectionId: string;
    readonly sourceDatabaseConnectionId: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly targetDatabaseConnectionId: string;
    readonly timeCreated: string;
    readonly timeLastMigration: string;
    readonly timeUpdated: string;
    readonly type: string;
    readonly waitAfter: string;
}
export function getDatabaseMigrationMigrationOutput(args: GetDatabaseMigrationMigrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseMigrationMigrationResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseMigrationMigration(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseMigrationMigration.
 */
export interface GetDatabaseMigrationMigrationOutputArgs {
    migrationId: pulumi.Input<string>;
}
