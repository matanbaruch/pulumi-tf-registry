// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLoggingLogSavedSearch(args: GetLoggingLogSavedSearchArgs, opts?: pulumi.InvokeOptions): Promise<GetLoggingLogSavedSearchResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLoggingLogSavedSearch:getLoggingLogSavedSearch", {
        "logSavedSearchId": args.logSavedSearchId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLoggingLogSavedSearch.
 */
export interface GetLoggingLogSavedSearchArgs {
    logSavedSearchId: string;
}

/**
 * A collection of values returned by getLoggingLogSavedSearch.
 */
export interface GetLoggingLogSavedSearchResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly logSavedSearchId: string;
    readonly name: string;
    readonly query: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeLastModified: string;
}
export function getLoggingLogSavedSearchOutput(args: GetLoggingLogSavedSearchOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoggingLogSavedSearchResult> {
    return pulumi.output(args).apply((a: any) => getLoggingLogSavedSearch(a, opts))
}

/**
 * A collection of arguments for invoking getLoggingLogSavedSearch.
 */
export interface GetLoggingLogSavedSearchOutputArgs {
    logSavedSearchId: pulumi.Input<string>;
}
