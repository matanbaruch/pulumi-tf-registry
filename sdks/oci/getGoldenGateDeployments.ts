// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGoldenGateDeployments(args: GetGoldenGateDeploymentsArgs, opts?: pulumi.InvokeOptions): Promise<GetGoldenGateDeploymentsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getGoldenGateDeployments:getGoldenGateDeployments", {
        "assignableConnectionId": args.assignableConnectionId,
        "assignedConnectionId": args.assignedConnectionId,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "fqdn": args.fqdn,
        "id": args.id,
        "lifecycleSubState": args.lifecycleSubState,
        "state": args.state,
        "supportedConnectionType": args.supportedConnectionType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGoldenGateDeployments.
 */
export interface GetGoldenGateDeploymentsArgs {
    assignableConnectionId?: string;
    assignedConnectionId?: string;
    compartmentId: string;
    displayName?: string;
    filters?: inputs.GetGoldenGateDeploymentsFilter[];
    fqdn?: string;
    id?: string;
    lifecycleSubState?: string;
    state?: string;
    supportedConnectionType?: string;
}

/**
 * A collection of values returned by getGoldenGateDeployments.
 */
export interface GetGoldenGateDeploymentsResult {
    readonly assignableConnectionId?: string;
    readonly assignedConnectionId?: string;
    readonly compartmentId: string;
    readonly deploymentCollections: outputs.GetGoldenGateDeploymentsDeploymentCollection[];
    readonly displayName?: string;
    readonly filters?: outputs.GetGoldenGateDeploymentsFilter[];
    readonly fqdn?: string;
    readonly id: string;
    readonly lifecycleSubState?: string;
    readonly state?: string;
    readonly supportedConnectionType?: string;
}
export function getGoldenGateDeploymentsOutput(args: GetGoldenGateDeploymentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGoldenGateDeploymentsResult> {
    return pulumi.output(args).apply((a: any) => getGoldenGateDeployments(a, opts))
}

/**
 * A collection of arguments for invoking getGoldenGateDeployments.
 */
export interface GetGoldenGateDeploymentsOutputArgs {
    assignableConnectionId?: pulumi.Input<string>;
    assignedConnectionId?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetGoldenGateDeploymentsFilterArgs>[]>;
    fqdn?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    lifecycleSubState?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    supportedConnectionType?: pulumi.Input<string>;
}
