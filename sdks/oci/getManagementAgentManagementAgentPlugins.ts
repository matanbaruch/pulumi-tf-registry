// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getManagementAgentManagementAgentPlugins(args: GetManagementAgentManagementAgentPluginsArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementAgentManagementAgentPluginsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getManagementAgentManagementAgentPlugins:getManagementAgentManagementAgentPlugins", {
        "agentId": args.agentId,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "platformTypes": args.platformTypes,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagementAgentManagementAgentPlugins.
 */
export interface GetManagementAgentManagementAgentPluginsArgs {
    agentId?: string;
    compartmentId: string;
    displayName?: string;
    filters?: inputs.GetManagementAgentManagementAgentPluginsFilter[];
    id?: string;
    platformTypes?: string[];
    state?: string;
}

/**
 * A collection of values returned by getManagementAgentManagementAgentPlugins.
 */
export interface GetManagementAgentManagementAgentPluginsResult {
    readonly agentId?: string;
    readonly compartmentId: string;
    readonly displayName?: string;
    readonly filters?: outputs.GetManagementAgentManagementAgentPluginsFilter[];
    readonly id: string;
    readonly managementAgentPlugins: outputs.GetManagementAgentManagementAgentPluginsManagementAgentPlugin[];
    readonly platformTypes?: string[];
    readonly state?: string;
}
export function getManagementAgentManagementAgentPluginsOutput(args: GetManagementAgentManagementAgentPluginsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementAgentManagementAgentPluginsResult> {
    return pulumi.output(args).apply((a: any) => getManagementAgentManagementAgentPlugins(a, opts))
}

/**
 * A collection of arguments for invoking getManagementAgentManagementAgentPlugins.
 */
export interface GetManagementAgentManagementAgentPluginsOutputArgs {
    agentId?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetManagementAgentManagementAgentPluginsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    platformTypes?: pulumi.Input<pulumi.Input<string>[]>;
    state?: pulumi.Input<string>;
}
