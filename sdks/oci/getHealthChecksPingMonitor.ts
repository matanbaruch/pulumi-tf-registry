// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getHealthChecksPingMonitor(args: GetHealthChecksPingMonitorArgs, opts?: pulumi.InvokeOptions): Promise<GetHealthChecksPingMonitorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getHealthChecksPingMonitor:getHealthChecksPingMonitor", {
        "monitorId": args.monitorId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHealthChecksPingMonitor.
 */
export interface GetHealthChecksPingMonitorArgs {
    monitorId: string;
}

/**
 * A collection of values returned by getHealthChecksPingMonitor.
 */
export interface GetHealthChecksPingMonitorResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly homeRegion: string;
    readonly id: string;
    readonly intervalInSeconds: number;
    readonly isEnabled: boolean;
    readonly monitorId: string;
    readonly port: number;
    readonly protocol: string;
    readonly resultsUrl: string;
    readonly targets: string[];
    readonly timeCreated: string;
    readonly timeoutInSeconds: number;
    readonly vantagePointNames: string[];
}
export function getHealthChecksPingMonitorOutput(args: GetHealthChecksPingMonitorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHealthChecksPingMonitorResult> {
    return pulumi.output(args).apply((a: any) => getHealthChecksPingMonitor(a, opts))
}

/**
 * A collection of arguments for invoking getHealthChecksPingMonitor.
 */
export interface GetHealthChecksPingMonitorOutputArgs {
    monitorId: pulumi.Input<string>;
}
