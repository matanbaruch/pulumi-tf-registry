// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDnsSteeringPolicy(args: GetDnsSteeringPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsSteeringPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDnsSteeringPolicy:getDnsSteeringPolicy", {
        "steeringPolicyId": args.steeringPolicyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnsSteeringPolicy.
 */
export interface GetDnsSteeringPolicyArgs {
    steeringPolicyId: string;
}

/**
 * A collection of values returned by getDnsSteeringPolicy.
 */
export interface GetDnsSteeringPolicyResult {
    readonly answers: outputs.GetDnsSteeringPolicyAnswer[];
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly healthCheckMonitorId: string;
    readonly id: string;
    readonly rules: outputs.GetDnsSteeringPolicyRule[];
    readonly self: string;
    readonly state: string;
    readonly steeringPolicyId: string;
    readonly template: string;
    readonly timeCreated: string;
    readonly ttl: number;
}
export function getDnsSteeringPolicyOutput(args: GetDnsSteeringPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDnsSteeringPolicyResult> {
    return pulumi.output(args).apply((a: any) => getDnsSteeringPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getDnsSteeringPolicy.
 */
export interface GetDnsSteeringPolicyOutputArgs {
    steeringPolicyId: pulumi.Input<string>;
}
