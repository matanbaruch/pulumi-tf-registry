// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCorePublicIps(args: GetCorePublicIpsArgs, opts?: pulumi.InvokeOptions): Promise<GetCorePublicIpsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCorePublicIps:getCorePublicIps", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "lifetime": args.lifetime,
        "publicIpPoolId": args.publicIpPoolId,
        "scope": args.scope,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCorePublicIps.
 */
export interface GetCorePublicIpsArgs {
    availabilityDomain?: string;
    compartmentId: string;
    filters?: inputs.GetCorePublicIpsFilter[];
    id?: string;
    lifetime?: string;
    publicIpPoolId?: string;
    scope: string;
}

/**
 * A collection of values returned by getCorePublicIps.
 */
export interface GetCorePublicIpsResult {
    readonly availabilityDomain?: string;
    readonly compartmentId: string;
    readonly filters?: outputs.GetCorePublicIpsFilter[];
    readonly id: string;
    readonly lifetime?: string;
    readonly publicIpPoolId?: string;
    readonly publicIps: outputs.GetCorePublicIpsPublicIp[];
    readonly scope: string;
}
export function getCorePublicIpsOutput(args: GetCorePublicIpsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCorePublicIpsResult> {
    return pulumi.output(args).apply((a: any) => getCorePublicIps(a, opts))
}

/**
 * A collection of arguments for invoking getCorePublicIps.
 */
export interface GetCorePublicIpsOutputArgs {
    availabilityDomain?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetCorePublicIpsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    lifetime?: pulumi.Input<string>;
    publicIpPoolId?: pulumi.Input<string>;
    scope: pulumi.Input<string>;
}
