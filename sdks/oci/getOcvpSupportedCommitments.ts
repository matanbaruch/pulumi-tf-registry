// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOcvpSupportedCommitments(args: GetOcvpSupportedCommitmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetOcvpSupportedCommitmentsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOcvpSupportedCommitments:getOcvpSupportedCommitments", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "hostShapeName": args.hostShapeName,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOcvpSupportedCommitments.
 */
export interface GetOcvpSupportedCommitmentsArgs {
    compartmentId: string;
    filters?: inputs.GetOcvpSupportedCommitmentsFilter[];
    hostShapeName?: string;
    id?: string;
}

/**
 * A collection of values returned by getOcvpSupportedCommitments.
 */
export interface GetOcvpSupportedCommitmentsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.GetOcvpSupportedCommitmentsFilter[];
    readonly hostShapeName?: string;
    readonly id: string;
    readonly items: outputs.GetOcvpSupportedCommitmentsItem[];
}
export function getOcvpSupportedCommitmentsOutput(args: GetOcvpSupportedCommitmentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOcvpSupportedCommitmentsResult> {
    return pulumi.output(args).apply((a: any) => getOcvpSupportedCommitments(a, opts))
}

/**
 * A collection of arguments for invoking getOcvpSupportedCommitments.
 */
export interface GetOcvpSupportedCommitmentsOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOcvpSupportedCommitmentsFilterArgs>[]>;
    hostShapeName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
