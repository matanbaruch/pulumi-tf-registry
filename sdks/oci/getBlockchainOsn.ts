// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBlockchainOsn(args: GetBlockchainOsnArgs, opts?: pulumi.InvokeOptions): Promise<GetBlockchainOsnResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getBlockchainOsn:getBlockchainOsn", {
        "blockchainPlatformId": args.blockchainPlatformId,
        "osnId": args.osnId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlockchainOsn.
 */
export interface GetBlockchainOsnArgs {
    blockchainPlatformId: string;
    osnId: string;
}

/**
 * A collection of values returned by getBlockchainOsn.
 */
export interface GetBlockchainOsnResult {
    readonly ad: string;
    readonly blockchainPlatformId: string;
    readonly id: string;
    readonly ocpuAllocationParams: outputs.GetBlockchainOsnOcpuAllocationParam[];
    readonly osnId: string;
    readonly osnKey: string;
    readonly state: string;
}
export function getBlockchainOsnOutput(args: GetBlockchainOsnOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlockchainOsnResult> {
    return pulumi.output(args).apply((a: any) => getBlockchainOsn(a, opts))
}

/**
 * A collection of arguments for invoking getBlockchainOsn.
 */
export interface GetBlockchainOsnOutputArgs {
    blockchainPlatformId: pulumi.Input<string>;
    osnId: pulumi.Input<string>;
}
