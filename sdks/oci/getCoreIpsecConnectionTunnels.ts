// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreIpsecConnectionTunnels(args: GetCoreIpsecConnectionTunnelsArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreIpsecConnectionTunnelsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreIpsecConnectionTunnels:getCoreIpsecConnectionTunnels", {
        "filters": args.filters,
        "id": args.id,
        "ipsecId": args.ipsecId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreIpsecConnectionTunnels.
 */
export interface GetCoreIpsecConnectionTunnelsArgs {
    filters?: inputs.GetCoreIpsecConnectionTunnelsFilter[];
    id?: string;
    ipsecId: string;
}

/**
 * A collection of values returned by getCoreIpsecConnectionTunnels.
 */
export interface GetCoreIpsecConnectionTunnelsResult {
    readonly filters?: outputs.GetCoreIpsecConnectionTunnelsFilter[];
    readonly id: string;
    readonly ipSecConnectionTunnels: outputs.GetCoreIpsecConnectionTunnelsIpSecConnectionTunnel[];
    readonly ipsecId: string;
}
export function getCoreIpsecConnectionTunnelsOutput(args: GetCoreIpsecConnectionTunnelsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreIpsecConnectionTunnelsResult> {
    return pulumi.output(args).apply((a: any) => getCoreIpsecConnectionTunnels(a, opts))
}

/**
 * A collection of arguments for invoking getCoreIpsecConnectionTunnels.
 */
export interface GetCoreIpsecConnectionTunnelsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetCoreIpsecConnectionTunnelsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    ipsecId: pulumi.Input<string>;
}
