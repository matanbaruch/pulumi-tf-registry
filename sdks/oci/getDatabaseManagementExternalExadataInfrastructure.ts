// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementExternalExadataInfrastructure(args: GetDatabaseManagementExternalExadataInfrastructureArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementExternalExadataInfrastructureResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementExternalExadataInfrastructure:getDatabaseManagementExternalExadataInfrastructure", {
        "externalExadataInfrastructureId": args.externalExadataInfrastructureId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementExternalExadataInfrastructure.
 */
export interface GetDatabaseManagementExternalExadataInfrastructureArgs {
    externalExadataInfrastructureId: string;
}

/**
 * A collection of values returned by getDatabaseManagementExternalExadataInfrastructure.
 */
export interface GetDatabaseManagementExternalExadataInfrastructureResult {
    readonly additionalDetails: {[key: string]: string};
    readonly compartmentId: string;
    readonly databaseCompartments: string[];
    readonly databaseSystems: outputs.GetDatabaseManagementExternalExadataInfrastructureDatabaseSystem[];
    readonly dbSystemIds: string[];
    readonly definedTags: {[key: string]: string};
    readonly discoveryKey: string;
    readonly displayName: string;
    readonly externalExadataInfrastructureId: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly internalId: string;
    readonly licenseModel: string;
    readonly lifecycleDetails: string;
    readonly rackSize: string;
    readonly state: string;
    readonly status: string;
    readonly storageGrids: outputs.GetDatabaseManagementExternalExadataInfrastructureStorageGrid[];
    readonly storageServerNames: string[];
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly version: string;
}
export function getDatabaseManagementExternalExadataInfrastructureOutput(args: GetDatabaseManagementExternalExadataInfrastructureOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementExternalExadataInfrastructureResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementExternalExadataInfrastructure(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementExternalExadataInfrastructure.
 */
export interface GetDatabaseManagementExternalExadataInfrastructureOutputArgs {
    externalExadataInfrastructureId: pulumi.Input<string>;
}
