// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreVcn(args: GetCoreVcnArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreVcnResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreVcn:getCoreVcn", {
        "vcnId": args.vcnId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreVcn.
 */
export interface GetCoreVcnArgs {
    vcnId: string;
}

/**
 * A collection of values returned by getCoreVcn.
 */
export interface GetCoreVcnResult {
    readonly byoipv6cidrBlocks: string[];
    readonly byoipv6cidrDetails: outputs.GetCoreVcnByoipv6cidrDetail[];
    readonly cidrBlock: string;
    readonly cidrBlocks: string[];
    readonly compartmentId: string;
    readonly defaultDhcpOptionsId: string;
    readonly defaultRouteTableId: string;
    readonly defaultSecurityListId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly dnsLabel: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly ipv6cidrBlocks: string[];
    readonly ipv6privateCidrBlocks: string[];
    readonly isIpv6enabled: boolean;
    readonly isOracleGuaAllocationEnabled: boolean;
    readonly state: string;
    readonly timeCreated: string;
    readonly vcnDomainName: string;
    readonly vcnId: string;
}
export function getCoreVcnOutput(args: GetCoreVcnOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreVcnResult> {
    return pulumi.output(args).apply((a: any) => getCoreVcn(a, opts))
}

/**
 * A collection of arguments for invoking getCoreVcn.
 */
export interface GetCoreVcnOutputArgs {
    vcnId: pulumi.Input<string>;
}
