// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseVmClusterPatches(args: GetDatabaseVmClusterPatchesArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseVmClusterPatchesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseVmClusterPatches:getDatabaseVmClusterPatches", {
        "filters": args.filters,
        "id": args.id,
        "vmClusterId": args.vmClusterId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseVmClusterPatches.
 */
export interface GetDatabaseVmClusterPatchesArgs {
    filters?: inputs.GetDatabaseVmClusterPatchesFilter[];
    id?: string;
    vmClusterId: string;
}

/**
 * A collection of values returned by getDatabaseVmClusterPatches.
 */
export interface GetDatabaseVmClusterPatchesResult {
    readonly filters?: outputs.GetDatabaseVmClusterPatchesFilter[];
    readonly id: string;
    readonly patches: outputs.GetDatabaseVmClusterPatchesPatch[];
    readonly vmClusterId: string;
}
export function getDatabaseVmClusterPatchesOutput(args: GetDatabaseVmClusterPatchesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseVmClusterPatchesResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseVmClusterPatches(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseVmClusterPatches.
 */
export interface GetDatabaseVmClusterPatchesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseVmClusterPatchesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    vmClusterId: pulumi.Input<string>;
}
