// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataintegrationWorkspaceApplicationPatch extends pulumi.CustomResource {
    /**
     * Get an existing DataintegrationWorkspaceApplicationPatch resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataintegrationWorkspaceApplicationPatchState, opts?: pulumi.CustomResourceOptions): DataintegrationWorkspaceApplicationPatch {
        return new DataintegrationWorkspaceApplicationPatch(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/dataintegrationWorkspaceApplicationPatch:DataintegrationWorkspaceApplicationPatch';

    /**
     * Returns true if the given object is an instance of DataintegrationWorkspaceApplicationPatch.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataintegrationWorkspaceApplicationPatch {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataintegrationWorkspaceApplicationPatch.__pulumiType;
    }

    public readonly applicationKey!: pulumi.Output<string>;
    public /*out*/ readonly applicationVersion!: pulumi.Output<number>;
    public /*out*/ readonly dependentObjectMetadatas!: pulumi.Output<outputs.DataintegrationWorkspaceApplicationPatchDependentObjectMetadata[]>;
    public readonly description!: pulumi.Output<string>;
    public /*out*/ readonly errorMessages!: pulumi.Output<{[key: string]: string}>;
    public readonly identifier!: pulumi.Output<string>;
    public readonly key!: pulumi.Output<string>;
    public /*out*/ readonly keyMap!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly metadatas!: pulumi.Output<outputs.DataintegrationWorkspaceApplicationPatchMetadata[]>;
    public /*out*/ readonly modelType!: pulumi.Output<string>;
    public readonly modelVersion!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly objectKeys!: pulumi.Output<string[]>;
    public readonly objectStatus!: pulumi.Output<number>;
    public /*out*/ readonly objectVersion!: pulumi.Output<number>;
    public /*out*/ readonly parentReves!: pulumi.Output<outputs.DataintegrationWorkspaceApplicationPatchParentRef[]>;
    public /*out*/ readonly patchObjectMetadatas!: pulumi.Output<outputs.DataintegrationWorkspaceApplicationPatchPatchObjectMetadata[]>;
    public /*out*/ readonly patchStatus!: pulumi.Output<string>;
    public readonly patchType!: pulumi.Output<string>;
    public readonly registryMetadata!: pulumi.Output<outputs.DataintegrationWorkspaceApplicationPatchRegistryMetadata | undefined>;
    public /*out*/ readonly timePatched!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DataintegrationWorkspaceApplicationPatchTimeouts | undefined>;
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a DataintegrationWorkspaceApplicationPatch resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataintegrationWorkspaceApplicationPatchArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataintegrationWorkspaceApplicationPatchArgs | DataintegrationWorkspaceApplicationPatchState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataintegrationWorkspaceApplicationPatchState | undefined;
            resourceInputs["applicationKey"] = state ? state.applicationKey : undefined;
            resourceInputs["applicationVersion"] = state ? state.applicationVersion : undefined;
            resourceInputs["dependentObjectMetadatas"] = state ? state.dependentObjectMetadatas : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["errorMessages"] = state ? state.errorMessages : undefined;
            resourceInputs["identifier"] = state ? state.identifier : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["keyMap"] = state ? state.keyMap : undefined;
            resourceInputs["metadatas"] = state ? state.metadatas : undefined;
            resourceInputs["modelType"] = state ? state.modelType : undefined;
            resourceInputs["modelVersion"] = state ? state.modelVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectKeys"] = state ? state.objectKeys : undefined;
            resourceInputs["objectStatus"] = state ? state.objectStatus : undefined;
            resourceInputs["objectVersion"] = state ? state.objectVersion : undefined;
            resourceInputs["parentReves"] = state ? state.parentReves : undefined;
            resourceInputs["patchObjectMetadatas"] = state ? state.patchObjectMetadatas : undefined;
            resourceInputs["patchStatus"] = state ? state.patchStatus : undefined;
            resourceInputs["patchType"] = state ? state.patchType : undefined;
            resourceInputs["registryMetadata"] = state ? state.registryMetadata : undefined;
            resourceInputs["timePatched"] = state ? state.timePatched : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as DataintegrationWorkspaceApplicationPatchArgs | undefined;
            if ((!args || args.applicationKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationKey'");
            }
            if ((!args || args.patchType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'patchType'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["applicationKey"] = args ? args.applicationKey : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["identifier"] = args ? args.identifier : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["modelVersion"] = args ? args.modelVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectKeys"] = args ? args.objectKeys : undefined;
            resourceInputs["objectStatus"] = args ? args.objectStatus : undefined;
            resourceInputs["patchType"] = args ? args.patchType : undefined;
            resourceInputs["registryMetadata"] = args ? args.registryMetadata : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["applicationVersion"] = undefined /*out*/;
            resourceInputs["dependentObjectMetadatas"] = undefined /*out*/;
            resourceInputs["errorMessages"] = undefined /*out*/;
            resourceInputs["keyMap"] = undefined /*out*/;
            resourceInputs["metadatas"] = undefined /*out*/;
            resourceInputs["modelType"] = undefined /*out*/;
            resourceInputs["objectVersion"] = undefined /*out*/;
            resourceInputs["parentReves"] = undefined /*out*/;
            resourceInputs["patchObjectMetadatas"] = undefined /*out*/;
            resourceInputs["patchStatus"] = undefined /*out*/;
            resourceInputs["timePatched"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataintegrationWorkspaceApplicationPatch.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataintegrationWorkspaceApplicationPatch resources.
 */
export interface DataintegrationWorkspaceApplicationPatchState {
    applicationKey?: pulumi.Input<string>;
    applicationVersion?: pulumi.Input<number>;
    dependentObjectMetadatas?: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationPatchDependentObjectMetadata>[]>;
    description?: pulumi.Input<string>;
    errorMessages?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    identifier?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    keyMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    metadatas?: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationPatchMetadata>[]>;
    modelType?: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectKeys?: pulumi.Input<pulumi.Input<string>[]>;
    objectStatus?: pulumi.Input<number>;
    objectVersion?: pulumi.Input<number>;
    parentReves?: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationPatchParentRef>[]>;
    patchObjectMetadatas?: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationPatchPatchObjectMetadata>[]>;
    patchStatus?: pulumi.Input<string>;
    patchType?: pulumi.Input<string>;
    registryMetadata?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationPatchRegistryMetadata>;
    timePatched?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationPatchTimeouts>;
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataintegrationWorkspaceApplicationPatch resource.
 */
export interface DataintegrationWorkspaceApplicationPatchArgs {
    applicationKey: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    identifier?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectKeys?: pulumi.Input<pulumi.Input<string>[]>;
    objectStatus?: pulumi.Input<number>;
    patchType: pulumi.Input<string>;
    registryMetadata?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationPatchRegistryMetadata>;
    timeouts?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationPatchTimeouts>;
    workspaceId: pulumi.Input<string>;
}
