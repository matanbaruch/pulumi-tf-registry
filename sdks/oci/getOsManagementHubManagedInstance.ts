// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsManagementHubManagedInstance(args: GetOsManagementHubManagedInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetOsManagementHubManagedInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsManagementHubManagedInstance:getOsManagementHubManagedInstance", {
        "managedInstanceId": args.managedInstanceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsManagementHubManagedInstance.
 */
export interface GetOsManagementHubManagedInstanceArgs {
    managedInstanceId: string;
}

/**
 * A collection of values returned by getOsManagementHubManagedInstance.
 */
export interface GetOsManagementHubManagedInstanceResult {
    readonly architecture: string;
    readonly autonomousSettings: outputs.GetOsManagementHubManagedInstanceAutonomousSetting[];
    readonly bugUpdatesAvailable: number;
    readonly compartmentId: string;
    readonly description: string;
    readonly displayName: string;
    readonly enhancementUpdatesAvailable: number;
    readonly id: string;
    readonly installedPackages: number;
    readonly installedWindowsUpdates: number;
    readonly isManagedByAutonomousLinux: boolean;
    readonly isManagementStation: boolean;
    readonly isRebootRequired: boolean;
    readonly kspliceEffectiveKernelVersion: string;
    readonly lifecycleEnvironments: outputs.GetOsManagementHubManagedInstanceLifecycleEnvironment[];
    readonly lifecycleStages: outputs.GetOsManagementHubManagedInstanceLifecycleStage[];
    readonly location: string;
    readonly managedInstanceGroups: outputs.GetOsManagementHubManagedInstanceManagedInstanceGroup[];
    readonly managedInstanceId: string;
    readonly notificationTopicId: string;
    readonly osFamily: string;
    readonly osKernelVersion: string;
    readonly osName: string;
    readonly osVersion: string;
    readonly otherUpdatesAvailable: number;
    readonly primaryManagementStationId: string;
    readonly profile: string;
    readonly scheduledJobCount: number;
    readonly secondaryManagementStationId: string;
    readonly securityUpdatesAvailable: number;
    readonly softwareSources: outputs.GetOsManagementHubManagedInstanceSoftwareSource[];
    readonly status: string;
    readonly tenancyId: string;
    readonly timeCreated: string;
    readonly timeLastBoot: string;
    readonly timeLastCheckin: string;
    readonly timeUpdated: string;
    readonly updatesAvailable: number;
    readonly workRequestCount: number;
}
export function getOsManagementHubManagedInstanceOutput(args: GetOsManagementHubManagedInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsManagementHubManagedInstanceResult> {
    return pulumi.output(args).apply((a: any) => getOsManagementHubManagedInstance(a, opts))
}

/**
 * A collection of arguments for invoking getOsManagementHubManagedInstance.
 */
export interface GetOsManagementHubManagedInstanceOutputArgs {
    managedInstanceId: pulumi.Input<string>;
}
