// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getJmsJavaDownloadsJavaLicenseAcceptanceRecord(args: GetJmsJavaDownloadsJavaLicenseAcceptanceRecordArgs, opts?: pulumi.InvokeOptions): Promise<GetJmsJavaDownloadsJavaLicenseAcceptanceRecordResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getJmsJavaDownloadsJavaLicenseAcceptanceRecord:getJmsJavaDownloadsJavaLicenseAcceptanceRecord", {
        "javaLicenseAcceptanceRecordId": args.javaLicenseAcceptanceRecordId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getJmsJavaDownloadsJavaLicenseAcceptanceRecord.
 */
export interface GetJmsJavaDownloadsJavaLicenseAcceptanceRecordArgs {
    javaLicenseAcceptanceRecordId: string;
}

/**
 * A collection of values returned by getJmsJavaDownloadsJavaLicenseAcceptanceRecord.
 */
export interface GetJmsJavaDownloadsJavaLicenseAcceptanceRecordResult {
    readonly compartmentId: string;
    readonly createdBies: outputs.GetJmsJavaDownloadsJavaLicenseAcceptanceRecordCreatedBy[];
    readonly definedTags: {[key: string]: string};
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly javaLicenseAcceptanceRecordId: string;
    readonly lastUpdatedBies: outputs.GetJmsJavaDownloadsJavaLicenseAcceptanceRecordLastUpdatedBy[];
    readonly licenseAcceptanceStatus: string;
    readonly licenseType: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeAccepted: string;
    readonly timeLastUpdated: string;
}
export function getJmsJavaDownloadsJavaLicenseAcceptanceRecordOutput(args: GetJmsJavaDownloadsJavaLicenseAcceptanceRecordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJmsJavaDownloadsJavaLicenseAcceptanceRecordResult> {
    return pulumi.output(args).apply((a: any) => getJmsJavaDownloadsJavaLicenseAcceptanceRecord(a, opts))
}

/**
 * A collection of arguments for invoking getJmsJavaDownloadsJavaLicenseAcceptanceRecord.
 */
export interface GetJmsJavaDownloadsJavaLicenseAcceptanceRecordOutputArgs {
    javaLicenseAcceptanceRecordId: pulumi.Input<string>;
}
