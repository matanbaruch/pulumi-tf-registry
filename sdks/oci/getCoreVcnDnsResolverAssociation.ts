// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCoreVcnDnsResolverAssociation(args: GetCoreVcnDnsResolverAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreVcnDnsResolverAssociationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreVcnDnsResolverAssociation:getCoreVcnDnsResolverAssociation", {
        "id": args.id,
        "vcnId": args.vcnId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreVcnDnsResolverAssociation.
 */
export interface GetCoreVcnDnsResolverAssociationArgs {
    id?: string;
    vcnId: string;
}

/**
 * A collection of values returned by getCoreVcnDnsResolverAssociation.
 */
export interface GetCoreVcnDnsResolverAssociationResult {
    readonly dnsResolverId: string;
    readonly id: string;
    readonly state: string;
    readonly vcnId: string;
}
export function getCoreVcnDnsResolverAssociationOutput(args: GetCoreVcnDnsResolverAssociationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreVcnDnsResolverAssociationResult> {
    return pulumi.output(args).apply((a: any) => getCoreVcnDnsResolverAssociation(a, opts))
}

/**
 * A collection of arguments for invoking getCoreVcnDnsResolverAssociation.
 */
export interface GetCoreVcnDnsResolverAssociationOutputArgs {
    id?: pulumi.Input<string>;
    vcnId: pulumi.Input<string>;
}
