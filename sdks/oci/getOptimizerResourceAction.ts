// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOptimizerResourceAction(args: GetOptimizerResourceActionArgs, opts?: pulumi.InvokeOptions): Promise<GetOptimizerResourceActionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOptimizerResourceAction:getOptimizerResourceAction", {
        "includeResourceMetadata": args.includeResourceMetadata,
        "resourceActionId": args.resourceActionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOptimizerResourceAction.
 */
export interface GetOptimizerResourceActionArgs {
    includeResourceMetadata?: boolean;
    resourceActionId: string;
}

/**
 * A collection of values returned by getOptimizerResourceAction.
 */
export interface GetOptimizerResourceActionResult {
    readonly actions: outputs.GetOptimizerResourceActionAction[];
    readonly categoryId: string;
    readonly compartmentId: string;
    readonly compartmentName: string;
    readonly estimatedCostSaving: number;
    readonly extendedMetadata: {[key: string]: string};
    readonly id: string;
    readonly includeResourceMetadata?: boolean;
    readonly metadata: {[key: string]: string};
    readonly name: string;
    readonly recommendationId: string;
    readonly resourceActionId: string;
    readonly resourceId: string;
    readonly resourceType: string;
    readonly state: string;
    readonly status: string;
    readonly timeCreated: string;
    readonly timeStatusBegin: string;
    readonly timeStatusEnd: string;
    readonly timeUpdated: string;
}
export function getOptimizerResourceActionOutput(args: GetOptimizerResourceActionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOptimizerResourceActionResult> {
    return pulumi.output(args).apply((a: any) => getOptimizerResourceAction(a, opts))
}

/**
 * A collection of arguments for invoking getOptimizerResourceAction.
 */
export interface GetOptimizerResourceActionOutputArgs {
    includeResourceMetadata?: pulumi.Input<boolean>;
    resourceActionId: pulumi.Input<string>;
}
