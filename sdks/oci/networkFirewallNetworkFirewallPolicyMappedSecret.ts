// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetworkFirewallNetworkFirewallPolicyMappedSecret extends pulumi.CustomResource {
    /**
     * Get an existing NetworkFirewallNetworkFirewallPolicyMappedSecret resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkFirewallNetworkFirewallPolicyMappedSecretState, opts?: pulumi.CustomResourceOptions): NetworkFirewallNetworkFirewallPolicyMappedSecret {
        return new NetworkFirewallNetworkFirewallPolicyMappedSecret(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/networkFirewallNetworkFirewallPolicyMappedSecret:NetworkFirewallNetworkFirewallPolicyMappedSecret';

    /**
     * Returns true if the given object is an instance of NetworkFirewallNetworkFirewallPolicyMappedSecret.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkFirewallNetworkFirewallPolicyMappedSecret {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkFirewallNetworkFirewallPolicyMappedSecret.__pulumiType;
    }

    public readonly name!: pulumi.Output<string>;
    public readonly networkFirewallPolicyId!: pulumi.Output<string>;
    public /*out*/ readonly parentResourceId!: pulumi.Output<string>;
    public readonly source!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.NetworkFirewallNetworkFirewallPolicyMappedSecretTimeouts | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly vaultSecretId!: pulumi.Output<string>;
    public readonly versionNumber!: pulumi.Output<number>;

    /**
     * Create a NetworkFirewallNetworkFirewallPolicyMappedSecret resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkFirewallNetworkFirewallPolicyMappedSecretArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkFirewallNetworkFirewallPolicyMappedSecretArgs | NetworkFirewallNetworkFirewallPolicyMappedSecretState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkFirewallNetworkFirewallPolicyMappedSecretState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkFirewallPolicyId"] = state ? state.networkFirewallPolicyId : undefined;
            resourceInputs["parentResourceId"] = state ? state.parentResourceId : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vaultSecretId"] = state ? state.vaultSecretId : undefined;
            resourceInputs["versionNumber"] = state ? state.versionNumber : undefined;
        } else {
            const args = argsOrState as NetworkFirewallNetworkFirewallPolicyMappedSecretArgs | undefined;
            if ((!args || args.networkFirewallPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkFirewallPolicyId'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            if ((!args || args.vaultSecretId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vaultSecretId'");
            }
            if ((!args || args.versionNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'versionNumber'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkFirewallPolicyId"] = args ? args.networkFirewallPolicyId : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vaultSecretId"] = args ? args.vaultSecretId : undefined;
            resourceInputs["versionNumber"] = args ? args.versionNumber : undefined;
            resourceInputs["parentResourceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkFirewallNetworkFirewallPolicyMappedSecret.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworkFirewallNetworkFirewallPolicyMappedSecret resources.
 */
export interface NetworkFirewallNetworkFirewallPolicyMappedSecretState {
    name?: pulumi.Input<string>;
    networkFirewallPolicyId?: pulumi.Input<string>;
    parentResourceId?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.NetworkFirewallNetworkFirewallPolicyMappedSecretTimeouts>;
    type?: pulumi.Input<string>;
    vaultSecretId?: pulumi.Input<string>;
    versionNumber?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a NetworkFirewallNetworkFirewallPolicyMappedSecret resource.
 */
export interface NetworkFirewallNetworkFirewallPolicyMappedSecretArgs {
    name?: pulumi.Input<string>;
    networkFirewallPolicyId: pulumi.Input<string>;
    source: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.NetworkFirewallNetworkFirewallPolicyMappedSecretTimeouts>;
    type: pulumi.Input<string>;
    vaultSecretId: pulumi.Input<string>;
    versionNumber: pulumi.Input<number>;
}
