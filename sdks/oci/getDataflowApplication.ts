// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataflowApplication(args: GetDataflowApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetDataflowApplicationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataflowApplication:getDataflowApplication", {
        "applicationId": args.applicationId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataflowApplication.
 */
export interface GetDataflowApplicationArgs {
    applicationId: string;
}

/**
 * A collection of values returned by getDataflowApplication.
 */
export interface GetDataflowApplicationResult {
    readonly applicationId: string;
    readonly applicationLogConfigs: outputs.GetDataflowApplicationApplicationLogConfig[];
    readonly archiveUri: string;
    readonly arguments: string[];
    readonly className: string;
    readonly compartmentId: string;
    readonly configuration: {[key: string]: string};
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly driverShape: string;
    readonly driverShapeConfigs: outputs.GetDataflowApplicationDriverShapeConfig[];
    readonly execute: string;
    readonly executorShape: string;
    readonly executorShapeConfigs: outputs.GetDataflowApplicationExecutorShapeConfig[];
    readonly fileUri: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly idleTimeoutInMinutes: string;
    readonly language: string;
    readonly logsBucketUri: string;
    readonly maxDurationInMinutes: string;
    readonly metastoreId: string;
    readonly numExecutors: number;
    readonly ownerPrincipalId: string;
    readonly ownerUserName: string;
    readonly parameters: outputs.GetDataflowApplicationParameter[];
    readonly poolId: string;
    readonly privateEndpointId: string;
    readonly sparkVersion: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly type: string;
    readonly warehouseBucketUri: string;
}
export function getDataflowApplicationOutput(args: GetDataflowApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataflowApplicationResult> {
    return pulumi.output(args).apply((a: any) => getDataflowApplication(a, opts))
}

/**
 * A collection of arguments for invoking getDataflowApplication.
 */
export interface GetDataflowApplicationOutputArgs {
    applicationId: pulumi.Input<string>;
}
