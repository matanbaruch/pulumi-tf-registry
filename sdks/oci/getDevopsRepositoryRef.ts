// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDevopsRepositoryRef(args: GetDevopsRepositoryRefArgs, opts?: pulumi.InvokeOptions): Promise<GetDevopsRepositoryRefResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDevopsRepositoryRef:getDevopsRepositoryRef", {
        "refName": args.refName,
        "repositoryId": args.repositoryId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDevopsRepositoryRef.
 */
export interface GetDevopsRepositoryRefArgs {
    refName: string;
    repositoryId: string;
}

/**
 * A collection of values returned by getDevopsRepositoryRef.
 */
export interface GetDevopsRepositoryRefResult {
    readonly commitId: string;
    readonly definedTags: {[key: string]: string};
    readonly freeformTags: {[key: string]: string};
    readonly fullRefName: string;
    readonly id: string;
    readonly objectId: string;
    readonly refName: string;
    readonly refType: string;
    readonly repositoryId: string;
}
export function getDevopsRepositoryRefOutput(args: GetDevopsRepositoryRefOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDevopsRepositoryRefResult> {
    return pulumi.output(args).apply((a: any) => getDevopsRepositoryRef(a, opts))
}

/**
 * A collection of arguments for invoking getDevopsRepositoryRef.
 */
export interface GetDevopsRepositoryRefOutputArgs {
    refName: pulumi.Input<string>;
    repositoryId: pulumi.Input<string>;
}
