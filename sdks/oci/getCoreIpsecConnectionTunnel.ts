// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreIpsecConnectionTunnel(args: GetCoreIpsecConnectionTunnelArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreIpsecConnectionTunnelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreIpsecConnectionTunnel:getCoreIpsecConnectionTunnel", {
        "ipsecId": args.ipsecId,
        "tunnelId": args.tunnelId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreIpsecConnectionTunnel.
 */
export interface GetCoreIpsecConnectionTunnelArgs {
    ipsecId: string;
    tunnelId: string;
}

/**
 * A collection of values returned by getCoreIpsecConnectionTunnel.
 */
export interface GetCoreIpsecConnectionTunnelResult {
    readonly associatedVirtualCircuits: string[];
    readonly bgpSessionInfos: outputs.GetCoreIpsecConnectionTunnelBgpSessionInfo[];
    readonly compartmentId: string;
    readonly cpeIp: string;
    readonly displayName: string;
    readonly dpdConfigs: outputs.GetCoreIpsecConnectionTunnelDpdConfig[];
    readonly dpdMode: string;
    readonly dpdTimeoutInSec: number;
    readonly encryptionDomainConfigs: outputs.GetCoreIpsecConnectionTunnelEncryptionDomainConfig[];
    readonly id: string;
    readonly ikeVersion: string;
    readonly ipsecId: string;
    readonly natTranslationEnabled: string;
    readonly oracleCanInitiate: string;
    readonly phaseOneDetails: outputs.GetCoreIpsecConnectionTunnelPhaseOneDetail[];
    readonly phaseTwoDetails: outputs.GetCoreIpsecConnectionTunnelPhaseTwoDetail[];
    readonly routing: string;
    readonly sharedSecret: string;
    readonly state: string;
    readonly status: string;
    readonly timeCreated: string;
    readonly timeStatusUpdated: string;
    readonly tunnelId: string;
    readonly vpnIp: string;
}
export function getCoreIpsecConnectionTunnelOutput(args: GetCoreIpsecConnectionTunnelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreIpsecConnectionTunnelResult> {
    return pulumi.output(args).apply((a: any) => getCoreIpsecConnectionTunnel(a, opts))
}

/**
 * A collection of arguments for invoking getCoreIpsecConnectionTunnel.
 */
export interface GetCoreIpsecConnectionTunnelOutputArgs {
    ipsecId: pulumi.Input<string>;
    tunnelId: pulumi.Input<string>;
}
