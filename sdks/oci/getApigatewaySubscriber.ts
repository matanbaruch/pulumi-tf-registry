// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApigatewaySubscriber(args: GetApigatewaySubscriberArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewaySubscriberResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getApigatewaySubscriber:getApigatewaySubscriber", {
        "subscriberId": args.subscriberId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewaySubscriber.
 */
export interface GetApigatewaySubscriberArgs {
    subscriberId: string;
}

/**
 * A collection of values returned by getApigatewaySubscriber.
 */
export interface GetApigatewaySubscriberResult {
    readonly clients: outputs.GetApigatewaySubscriberClient[];
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly state: string;
    readonly subscriberId: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly usagePlans: string[];
}
export function getApigatewaySubscriberOutput(args: GetApigatewaySubscriberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewaySubscriberResult> {
    return pulumi.output(args).apply((a: any) => getApigatewaySubscriber(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewaySubscriber.
 */
export interface GetApigatewaySubscriberOutputArgs {
    subscriberId: pulumi.Input<string>;
}
