// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLogAnalyticsLogAnalyticsPreference(args: GetLogAnalyticsLogAnalyticsPreferenceArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsLogAnalyticsPreferenceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLogAnalyticsLogAnalyticsPreference:getLogAnalyticsLogAnalyticsPreference", {
        "id": args.id,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogAnalyticsLogAnalyticsPreference.
 */
export interface GetLogAnalyticsLogAnalyticsPreferenceArgs {
    id?: string;
    namespace: string;
}

/**
 * A collection of values returned by getLogAnalyticsLogAnalyticsPreference.
 */
export interface GetLogAnalyticsLogAnalyticsPreferenceResult {
    readonly id: string;
    readonly items: outputs.GetLogAnalyticsLogAnalyticsPreferenceItem[];
    readonly namespace: string;
}
export function getLogAnalyticsLogAnalyticsPreferenceOutput(args: GetLogAnalyticsLogAnalyticsPreferenceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsLogAnalyticsPreferenceResult> {
    return pulumi.output(args).apply((a: any) => getLogAnalyticsLogAnalyticsPreference(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsLogAnalyticsPreference.
 */
export interface GetLogAnalyticsLogAnalyticsPreferenceOutputArgs {
    id?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
}
