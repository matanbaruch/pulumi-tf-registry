// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreImages(args: GetCoreImagesArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreImagesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreImages:getCoreImages", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "operatingSystem": args.operatingSystem,
        "operatingSystemVersion": args.operatingSystemVersion,
        "shape": args.shape,
        "sortBy": args.sortBy,
        "sortOrder": args.sortOrder,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreImages.
 */
export interface GetCoreImagesArgs {
    compartmentId: string;
    displayName?: string;
    filters?: inputs.GetCoreImagesFilter[];
    id?: string;
    operatingSystem?: string;
    operatingSystemVersion?: string;
    shape?: string;
    sortBy?: string;
    sortOrder?: string;
    state?: string;
}

/**
 * A collection of values returned by getCoreImages.
 */
export interface GetCoreImagesResult {
    readonly compartmentId: string;
    readonly displayName?: string;
    readonly filters?: outputs.GetCoreImagesFilter[];
    readonly id: string;
    readonly images: outputs.GetCoreImagesImage[];
    readonly operatingSystem?: string;
    readonly operatingSystemVersion?: string;
    readonly shape?: string;
    readonly sortBy?: string;
    readonly sortOrder?: string;
    readonly state?: string;
}
export function getCoreImagesOutput(args: GetCoreImagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreImagesResult> {
    return pulumi.output(args).apply((a: any) => getCoreImages(a, opts))
}

/**
 * A collection of arguments for invoking getCoreImages.
 */
export interface GetCoreImagesOutputArgs {
    compartmentId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetCoreImagesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    operatingSystem?: pulumi.Input<string>;
    operatingSystemVersion?: pulumi.Input<string>;
    shape?: pulumi.Input<string>;
    sortBy?: pulumi.Input<string>;
    sortOrder?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
