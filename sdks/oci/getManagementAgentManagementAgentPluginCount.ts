// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getManagementAgentManagementAgentPluginCount(args: GetManagementAgentManagementAgentPluginCountArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementAgentManagementAgentPluginCountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getManagementAgentManagementAgentPluginCount:getManagementAgentManagementAgentPluginCount", {
        "compartmentId": args.compartmentId,
        "groupBy": args.groupBy,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagementAgentManagementAgentPluginCount.
 */
export interface GetManagementAgentManagementAgentPluginCountArgs {
    compartmentId: string;
    groupBy: string;
    id?: string;
}

/**
 * A collection of values returned by getManagementAgentManagementAgentPluginCount.
 */
export interface GetManagementAgentManagementAgentPluginCountResult {
    readonly compartmentId: string;
    readonly groupBy: string;
    readonly id: string;
    readonly items: outputs.GetManagementAgentManagementAgentPluginCountItem[];
}
export function getManagementAgentManagementAgentPluginCountOutput(args: GetManagementAgentManagementAgentPluginCountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementAgentManagementAgentPluginCountResult> {
    return pulumi.output(args).apply((a: any) => getManagementAgentManagementAgentPluginCount(a, opts))
}

/**
 * A collection of arguments for invoking getManagementAgentManagementAgentPluginCount.
 */
export interface GetManagementAgentManagementAgentPluginCountOutputArgs {
    compartmentId: pulumi.Input<string>;
    groupBy: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
