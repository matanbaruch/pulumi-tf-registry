// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDnsView(args?: GetDnsViewArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsViewResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDnsView:getDnsView", {
        "scope": args.scope,
        "viewId": args.viewId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnsView.
 */
export interface GetDnsViewArgs {
    scope?: string;
    viewId?: string;
}

/**
 * A collection of values returned by getDnsView.
 */
export interface GetDnsViewResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isProtected: boolean;
    readonly scope?: string;
    readonly self: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly viewId?: string;
}
export function getDnsViewOutput(args?: GetDnsViewOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDnsViewResult> {
    return pulumi.output(args).apply((a: any) => getDnsView(a, opts))
}

/**
 * A collection of arguments for invoking getDnsView.
 */
export interface GetDnsViewOutputArgs {
    scope?: pulumi.Input<string>;
    viewId?: pulumi.Input<string>;
}
