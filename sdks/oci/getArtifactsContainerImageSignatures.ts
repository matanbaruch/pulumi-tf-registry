// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getArtifactsContainerImageSignatures(args: GetArtifactsContainerImageSignaturesArgs, opts?: pulumi.InvokeOptions): Promise<GetArtifactsContainerImageSignaturesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getArtifactsContainerImageSignatures:getArtifactsContainerImageSignatures", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "imageDigest": args.imageDigest,
        "imageId": args.imageId,
        "kmsKeyId": args.kmsKeyId,
        "kmsKeyVersionId": args.kmsKeyVersionId,
        "repositoryId": args.repositoryId,
        "repositoryName": args.repositoryName,
        "signingAlgorithm": args.signingAlgorithm,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getArtifactsContainerImageSignatures.
 */
export interface GetArtifactsContainerImageSignaturesArgs {
    compartmentId: string;
    compartmentIdInSubtree?: boolean;
    displayName?: string;
    filters?: inputs.GetArtifactsContainerImageSignaturesFilter[];
    id?: string;
    imageDigest?: string;
    imageId?: string;
    kmsKeyId?: string;
    kmsKeyVersionId?: string;
    repositoryId?: string;
    repositoryName?: string;
    signingAlgorithm?: string;
}

/**
 * A collection of values returned by getArtifactsContainerImageSignatures.
 */
export interface GetArtifactsContainerImageSignaturesResult {
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly containerImageSignatureCollections: outputs.GetArtifactsContainerImageSignaturesContainerImageSignatureCollection[];
    readonly displayName?: string;
    readonly filters?: outputs.GetArtifactsContainerImageSignaturesFilter[];
    readonly id: string;
    readonly imageDigest?: string;
    readonly imageId?: string;
    readonly kmsKeyId?: string;
    readonly kmsKeyVersionId?: string;
    readonly repositoryId?: string;
    readonly repositoryName?: string;
    readonly signingAlgorithm?: string;
}
export function getArtifactsContainerImageSignaturesOutput(args: GetArtifactsContainerImageSignaturesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetArtifactsContainerImageSignaturesResult> {
    return pulumi.output(args).apply((a: any) => getArtifactsContainerImageSignatures(a, opts))
}

/**
 * A collection of arguments for invoking getArtifactsContainerImageSignatures.
 */
export interface GetArtifactsContainerImageSignaturesOutputArgs {
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetArtifactsContainerImageSignaturesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    imageDigest?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    kmsKeyVersionId?: pulumi.Input<string>;
    repositoryId?: pulumi.Input<string>;
    repositoryName?: pulumi.Input<string>;
    signingAlgorithm?: pulumi.Input<string>;
}
