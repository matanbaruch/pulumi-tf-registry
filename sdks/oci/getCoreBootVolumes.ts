// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreBootVolumes(args?: GetCoreBootVolumesArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreBootVolumesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreBootVolumes:getCoreBootVolumes", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "volumeGroupId": args.volumeGroupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreBootVolumes.
 */
export interface GetCoreBootVolumesArgs {
    availabilityDomain?: string;
    compartmentId?: string;
    filters?: inputs.GetCoreBootVolumesFilter[];
    id?: string;
    volumeGroupId?: string;
}

/**
 * A collection of values returned by getCoreBootVolumes.
 */
export interface GetCoreBootVolumesResult {
    readonly availabilityDomain?: string;
    readonly bootVolumes: outputs.GetCoreBootVolumesBootVolume[];
    readonly compartmentId?: string;
    readonly filters?: outputs.GetCoreBootVolumesFilter[];
    readonly id: string;
    readonly volumeGroupId?: string;
}
export function getCoreBootVolumesOutput(args?: GetCoreBootVolumesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreBootVolumesResult> {
    return pulumi.output(args).apply((a: any) => getCoreBootVolumes(a, opts))
}

/**
 * A collection of arguments for invoking getCoreBootVolumes.
 */
export interface GetCoreBootVolumesOutputArgs {
    availabilityDomain?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetCoreBootVolumesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    volumeGroupId?: pulumi.Input<string>;
}
