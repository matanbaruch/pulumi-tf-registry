// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCertificatesManagementCertificateVersion(args: GetCertificatesManagementCertificateVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificatesManagementCertificateVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCertificatesManagementCertificateVersion:getCertificatesManagementCertificateVersion", {
        "certificateId": args.certificateId,
        "certificateVersionNumber": args.certificateVersionNumber,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCertificatesManagementCertificateVersion.
 */
export interface GetCertificatesManagementCertificateVersionArgs {
    certificateId: string;
    certificateVersionNumber: string;
    id?: string;
}

/**
 * A collection of values returned by getCertificatesManagementCertificateVersion.
 */
export interface GetCertificatesManagementCertificateVersionResult {
    readonly certificateId: string;
    readonly certificateVersionNumber: string;
    readonly id: string;
    readonly issuerCaVersionNumber: string;
    readonly revocationStatuses: outputs.GetCertificatesManagementCertificateVersionRevocationStatus[];
    readonly serialNumber: string;
    readonly stages: string[];
    readonly subjectAlternativeNames: outputs.GetCertificatesManagementCertificateVersionSubjectAlternativeName[];
    readonly timeCreated: string;
    readonly timeOfDeletion: string;
    readonly validities: outputs.GetCertificatesManagementCertificateVersionValidity[];
    readonly versionName: string;
    readonly versionNumber: string;
}
export function getCertificatesManagementCertificateVersionOutput(args: GetCertificatesManagementCertificateVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificatesManagementCertificateVersionResult> {
    return pulumi.output(args).apply((a: any) => getCertificatesManagementCertificateVersion(a, opts))
}

/**
 * A collection of arguments for invoking getCertificatesManagementCertificateVersion.
 */
export interface GetCertificatesManagementCertificateVersionOutputArgs {
    certificateId: pulumi.Input<string>;
    certificateVersionNumber: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
