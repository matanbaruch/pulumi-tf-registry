// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityAuthenticationPolicy(args: GetIdentityAuthenticationPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityAuthenticationPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityAuthenticationPolicy:getIdentityAuthenticationPolicy", {
        "compartmentId": args.compartmentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityAuthenticationPolicy.
 */
export interface GetIdentityAuthenticationPolicyArgs {
    compartmentId: string;
}

/**
 * A collection of values returned by getIdentityAuthenticationPolicy.
 */
export interface GetIdentityAuthenticationPolicyResult {
    readonly compartmentId: string;
    readonly id: string;
    readonly networkPolicies: outputs.GetIdentityAuthenticationPolicyNetworkPolicy[];
    readonly passwordPolicies: outputs.GetIdentityAuthenticationPolicyPasswordPolicy[];
}
export function getIdentityAuthenticationPolicyOutput(args: GetIdentityAuthenticationPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityAuthenticationPolicyResult> {
    return pulumi.output(args).apply((a: any) => getIdentityAuthenticationPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityAuthenticationPolicy.
 */
export interface GetIdentityAuthenticationPolicyOutputArgs {
    compartmentId: pulumi.Input<string>;
}
