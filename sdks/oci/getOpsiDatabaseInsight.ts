// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOpsiDatabaseInsight(args: GetOpsiDatabaseInsightArgs, opts?: pulumi.InvokeOptions): Promise<GetOpsiDatabaseInsightResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOpsiDatabaseInsight:getOpsiDatabaseInsight", {
        "databaseInsightId": args.databaseInsightId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpsiDatabaseInsight.
 */
export interface GetOpsiDatabaseInsightArgs {
    databaseInsightId: string;
}

/**
 * A collection of values returned by getOpsiDatabaseInsight.
 */
export interface GetOpsiDatabaseInsightResult {
    readonly compartmentId: string;
    readonly connectionCredentialDetails: outputs.GetOpsiDatabaseInsightConnectionCredentialDetail[];
    readonly connectionDetails: outputs.GetOpsiDatabaseInsightConnectionDetail[];
    readonly credentialDetails: outputs.GetOpsiDatabaseInsightCredentialDetail[];
    readonly databaseConnectionStatusDetails: string;
    readonly databaseDisplayName: string;
    readonly databaseId: string;
    readonly databaseInsightId: string;
    readonly databaseName: string;
    readonly databaseResourceType: string;
    readonly databaseType: string;
    readonly databaseVersion: string;
    readonly dbmPrivateEndpointId: string;
    readonly definedTags: {[key: string]: string};
    readonly deploymentType: string;
    readonly enterpriseManagerBridgeId: string;
    readonly enterpriseManagerEntityDisplayName: string;
    readonly enterpriseManagerEntityIdentifier: string;
    readonly enterpriseManagerEntityName: string;
    readonly enterpriseManagerEntityType: string;
    readonly enterpriseManagerIdentifier: string;
    readonly entitySource: string;
    readonly exadataInsightId: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isHeatWaveClusterAttached: boolean;
    readonly isHighlyAvailable: boolean;
    readonly lifecycleDetails: string;
    readonly opsiPrivateEndpointId: string;
    readonly parentId: string;
    readonly processorCount: number;
    readonly rootId: string;
    readonly serviceName: string;
    readonly state: string;
    readonly status: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getOpsiDatabaseInsightOutput(args: GetOpsiDatabaseInsightOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpsiDatabaseInsightResult> {
    return pulumi.output(args).apply((a: any) => getOpsiDatabaseInsight(a, opts))
}

/**
 * A collection of arguments for invoking getOpsiDatabaseInsight.
 */
export interface GetOpsiDatabaseInsightOutputArgs {
    databaseInsightId: pulumi.Input<string>;
}
