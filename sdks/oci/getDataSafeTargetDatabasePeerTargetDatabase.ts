// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeTargetDatabasePeerTargetDatabase(args: GetDataSafeTargetDatabasePeerTargetDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeTargetDatabasePeerTargetDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeTargetDatabasePeerTargetDatabase:getDataSafeTargetDatabasePeerTargetDatabase", {
        "peerTargetDatabaseId": args.peerTargetDatabaseId,
        "targetDatabaseId": args.targetDatabaseId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeTargetDatabasePeerTargetDatabase.
 */
export interface GetDataSafeTargetDatabasePeerTargetDatabaseArgs {
    peerTargetDatabaseId: string;
    targetDatabaseId: string;
}

/**
 * A collection of values returned by getDataSafeTargetDatabasePeerTargetDatabase.
 */
export interface GetDataSafeTargetDatabasePeerTargetDatabaseResult {
    readonly databaseDetails: outputs.GetDataSafeTargetDatabasePeerTargetDatabaseDatabaseDetail[];
    readonly databaseUniqueName: string;
    readonly dataguardAssociationId: string;
    readonly description: string;
    readonly displayName: string;
    readonly id: string;
    readonly key: number;
    readonly lifecycleDetails: string;
    readonly peerTargetDatabaseId: string;
    readonly role: string;
    readonly state: string;
    readonly targetDatabaseId: string;
    readonly timeCreated: string;
    readonly tlsConfigs: outputs.GetDataSafeTargetDatabasePeerTargetDatabaseTlsConfig[];
}
export function getDataSafeTargetDatabasePeerTargetDatabaseOutput(args: GetDataSafeTargetDatabasePeerTargetDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeTargetDatabasePeerTargetDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeTargetDatabasePeerTargetDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeTargetDatabasePeerTargetDatabase.
 */
export interface GetDataSafeTargetDatabasePeerTargetDatabaseOutputArgs {
    peerTargetDatabaseId: pulumi.Input<string>;
    targetDatabaseId: pulumi.Input<string>;
}
