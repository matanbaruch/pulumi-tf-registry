// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataSafeDiscoveryJob extends pulumi.CustomResource {
    /**
     * Get an existing DataSafeDiscoveryJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataSafeDiscoveryJobState, opts?: pulumi.CustomResourceOptions): DataSafeDiscoveryJob {
        return new DataSafeDiscoveryJob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/dataSafeDiscoveryJob:DataSafeDiscoveryJob';

    /**
     * Returns true if the given object is an instance of DataSafeDiscoveryJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataSafeDiscoveryJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataSafeDiscoveryJob.__pulumiType;
    }

    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly discoveryType!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly isAppDefinedRelationDiscoveryEnabled!: pulumi.Output<boolean>;
    public readonly isIncludeAllSchemas!: pulumi.Output<boolean>;
    public readonly isIncludeAllSensitiveTypes!: pulumi.Output<boolean>;
    public readonly isSampleDataCollectionEnabled!: pulumi.Output<boolean>;
    public readonly schemasForDiscoveries!: pulumi.Output<string[]>;
    public readonly sensitiveDataModelId!: pulumi.Output<string>;
    public readonly sensitiveTypeIdsForDiscoveries!: pulumi.Output<string[]>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public readonly tablesForDiscoveries!: pulumi.Output<outputs.DataSafeDiscoveryJobTablesForDiscovery[] | undefined>;
    public /*out*/ readonly targetId!: pulumi.Output<string>;
    public /*out*/ readonly timeFinished!: pulumi.Output<string>;
    public /*out*/ readonly timeStarted!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DataSafeDiscoveryJobTimeouts | undefined>;
    public /*out*/ readonly totalColumnsScanned!: pulumi.Output<string>;
    public /*out*/ readonly totalDeletedSensitiveColumns!: pulumi.Output<string>;
    public /*out*/ readonly totalModifiedSensitiveColumns!: pulumi.Output<string>;
    public /*out*/ readonly totalNewSensitiveColumns!: pulumi.Output<string>;
    public /*out*/ readonly totalObjectsScanned!: pulumi.Output<string>;
    public /*out*/ readonly totalSchemasScanned!: pulumi.Output<string>;

    /**
     * Create a DataSafeDiscoveryJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataSafeDiscoveryJobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataSafeDiscoveryJobArgs | DataSafeDiscoveryJobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataSafeDiscoveryJobState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["discoveryType"] = state ? state.discoveryType : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isAppDefinedRelationDiscoveryEnabled"] = state ? state.isAppDefinedRelationDiscoveryEnabled : undefined;
            resourceInputs["isIncludeAllSchemas"] = state ? state.isIncludeAllSchemas : undefined;
            resourceInputs["isIncludeAllSensitiveTypes"] = state ? state.isIncludeAllSensitiveTypes : undefined;
            resourceInputs["isSampleDataCollectionEnabled"] = state ? state.isSampleDataCollectionEnabled : undefined;
            resourceInputs["schemasForDiscoveries"] = state ? state.schemasForDiscoveries : undefined;
            resourceInputs["sensitiveDataModelId"] = state ? state.sensitiveDataModelId : undefined;
            resourceInputs["sensitiveTypeIdsForDiscoveries"] = state ? state.sensitiveTypeIdsForDiscoveries : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["tablesForDiscoveries"] = state ? state.tablesForDiscoveries : undefined;
            resourceInputs["targetId"] = state ? state.targetId : undefined;
            resourceInputs["timeFinished"] = state ? state.timeFinished : undefined;
            resourceInputs["timeStarted"] = state ? state.timeStarted : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["totalColumnsScanned"] = state ? state.totalColumnsScanned : undefined;
            resourceInputs["totalDeletedSensitiveColumns"] = state ? state.totalDeletedSensitiveColumns : undefined;
            resourceInputs["totalModifiedSensitiveColumns"] = state ? state.totalModifiedSensitiveColumns : undefined;
            resourceInputs["totalNewSensitiveColumns"] = state ? state.totalNewSensitiveColumns : undefined;
            resourceInputs["totalObjectsScanned"] = state ? state.totalObjectsScanned : undefined;
            resourceInputs["totalSchemasScanned"] = state ? state.totalSchemasScanned : undefined;
        } else {
            const args = argsOrState as DataSafeDiscoveryJobArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.sensitiveDataModelId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sensitiveDataModelId'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["discoveryType"] = args ? args.discoveryType : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isAppDefinedRelationDiscoveryEnabled"] = args ? args.isAppDefinedRelationDiscoveryEnabled : undefined;
            resourceInputs["isIncludeAllSchemas"] = args ? args.isIncludeAllSchemas : undefined;
            resourceInputs["isIncludeAllSensitiveTypes"] = args ? args.isIncludeAllSensitiveTypes : undefined;
            resourceInputs["isSampleDataCollectionEnabled"] = args ? args.isSampleDataCollectionEnabled : undefined;
            resourceInputs["schemasForDiscoveries"] = args ? args.schemasForDiscoveries : undefined;
            resourceInputs["sensitiveDataModelId"] = args ? args.sensitiveDataModelId : undefined;
            resourceInputs["sensitiveTypeIdsForDiscoveries"] = args ? args.sensitiveTypeIdsForDiscoveries : undefined;
            resourceInputs["tablesForDiscoveries"] = args ? args.tablesForDiscoveries : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["targetId"] = undefined /*out*/;
            resourceInputs["timeFinished"] = undefined /*out*/;
            resourceInputs["timeStarted"] = undefined /*out*/;
            resourceInputs["totalColumnsScanned"] = undefined /*out*/;
            resourceInputs["totalDeletedSensitiveColumns"] = undefined /*out*/;
            resourceInputs["totalModifiedSensitiveColumns"] = undefined /*out*/;
            resourceInputs["totalNewSensitiveColumns"] = undefined /*out*/;
            resourceInputs["totalObjectsScanned"] = undefined /*out*/;
            resourceInputs["totalSchemasScanned"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataSafeDiscoveryJob.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataSafeDiscoveryJob resources.
 */
export interface DataSafeDiscoveryJobState {
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    discoveryType?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isAppDefinedRelationDiscoveryEnabled?: pulumi.Input<boolean>;
    isIncludeAllSchemas?: pulumi.Input<boolean>;
    isIncludeAllSensitiveTypes?: pulumi.Input<boolean>;
    isSampleDataCollectionEnabled?: pulumi.Input<boolean>;
    schemasForDiscoveries?: pulumi.Input<pulumi.Input<string>[]>;
    sensitiveDataModelId?: pulumi.Input<string>;
    sensitiveTypeIdsForDiscoveries?: pulumi.Input<pulumi.Input<string>[]>;
    state?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tablesForDiscoveries?: pulumi.Input<pulumi.Input<inputs.DataSafeDiscoveryJobTablesForDiscovery>[]>;
    targetId?: pulumi.Input<string>;
    timeFinished?: pulumi.Input<string>;
    timeStarted?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataSafeDiscoveryJobTimeouts>;
    totalColumnsScanned?: pulumi.Input<string>;
    totalDeletedSensitiveColumns?: pulumi.Input<string>;
    totalModifiedSensitiveColumns?: pulumi.Input<string>;
    totalNewSensitiveColumns?: pulumi.Input<string>;
    totalObjectsScanned?: pulumi.Input<string>;
    totalSchemasScanned?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataSafeDiscoveryJob resource.
 */
export interface DataSafeDiscoveryJobArgs {
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    discoveryType?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isAppDefinedRelationDiscoveryEnabled?: pulumi.Input<boolean>;
    isIncludeAllSchemas?: pulumi.Input<boolean>;
    isIncludeAllSensitiveTypes?: pulumi.Input<boolean>;
    isSampleDataCollectionEnabled?: pulumi.Input<boolean>;
    schemasForDiscoveries?: pulumi.Input<pulumi.Input<string>[]>;
    sensitiveDataModelId: pulumi.Input<string>;
    sensitiveTypeIdsForDiscoveries?: pulumi.Input<pulumi.Input<string>[]>;
    tablesForDiscoveries?: pulumi.Input<pulumi.Input<inputs.DataSafeDiscoveryJobTablesForDiscovery>[]>;
    timeouts?: pulumi.Input<inputs.DataSafeDiscoveryJobTimeouts>;
}
