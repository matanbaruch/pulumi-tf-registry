// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementManagedDatabases(args: GetDatabaseManagementManagedDatabasesArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementManagedDatabasesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementManagedDatabases:getDatabaseManagementManagedDatabases", {
        "compartmentId": args.compartmentId,
        "deploymentType": args.deploymentType,
        "externalExadataInfrastructureId": args.externalExadataInfrastructureId,
        "filters": args.filters,
        "id": args.id,
        "managementOption": args.managementOption,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedDatabases.
 */
export interface GetDatabaseManagementManagedDatabasesArgs {
    compartmentId: string;
    deploymentType?: string;
    externalExadataInfrastructureId?: string;
    filters?: inputs.GetDatabaseManagementManagedDatabasesFilter[];
    id?: string;
    managementOption?: string;
    name?: string;
}

/**
 * A collection of values returned by getDatabaseManagementManagedDatabases.
 */
export interface GetDatabaseManagementManagedDatabasesResult {
    readonly compartmentId: string;
    readonly deploymentType?: string;
    readonly externalExadataInfrastructureId?: string;
    readonly filters?: outputs.GetDatabaseManagementManagedDatabasesFilter[];
    readonly id?: string;
    readonly managedDatabaseCollections: outputs.GetDatabaseManagementManagedDatabasesManagedDatabaseCollection[];
    readonly managementOption?: string;
    readonly name?: string;
}
export function getDatabaseManagementManagedDatabasesOutput(args: GetDatabaseManagementManagedDatabasesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementManagedDatabasesResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementManagedDatabases(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedDatabases.
 */
export interface GetDatabaseManagementManagedDatabasesOutputArgs {
    compartmentId: pulumi.Input<string>;
    deploymentType?: pulumi.Input<string>;
    externalExadataInfrastructureId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseManagementManagedDatabasesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    managementOption?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
