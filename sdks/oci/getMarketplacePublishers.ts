// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMarketplacePublishers(args?: GetMarketplacePublishersArgs, opts?: pulumi.InvokeOptions): Promise<GetMarketplacePublishersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMarketplacePublishers:getMarketplacePublishers", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "publisherId": args.publisherId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMarketplacePublishers.
 */
export interface GetMarketplacePublishersArgs {
    compartmentId?: string;
    filters?: inputs.GetMarketplacePublishersFilter[];
    id?: string;
    publisherId?: string;
}

/**
 * A collection of values returned by getMarketplacePublishers.
 */
export interface GetMarketplacePublishersResult {
    readonly compartmentId?: string;
    readonly filters?: outputs.GetMarketplacePublishersFilter[];
    readonly id: string;
    readonly publisherId?: string;
    readonly publishers: outputs.GetMarketplacePublishersPublisher[];
}
export function getMarketplacePublishersOutput(args?: GetMarketplacePublishersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMarketplacePublishersResult> {
    return pulumi.output(args).apply((a: any) => getMarketplacePublishers(a, opts))
}

/**
 * A collection of arguments for invoking getMarketplacePublishers.
 */
export interface GetMarketplacePublishersOutputArgs {
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetMarketplacePublishersFilterArgs>[]>;
    id?: pulumi.Input<string>;
    publisherId?: pulumi.Input<string>;
}
