// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRedisRedisClusterNodes(args: GetRedisRedisClusterNodesArgs, opts?: pulumi.InvokeOptions): Promise<GetRedisRedisClusterNodesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getRedisRedisClusterNodes:getRedisRedisClusterNodes", {
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "redisClusterId": args.redisClusterId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRedisRedisClusterNodes.
 */
export interface GetRedisRedisClusterNodesArgs {
    displayName?: string;
    filters?: inputs.GetRedisRedisClusterNodesFilter[];
    id?: string;
    redisClusterId: string;
}

/**
 * A collection of values returned by getRedisRedisClusterNodes.
 */
export interface GetRedisRedisClusterNodesResult {
    readonly displayName?: string;
    readonly filters?: outputs.GetRedisRedisClusterNodesFilter[];
    readonly id: string;
    readonly redisClusterId: string;
    readonly redisNodeCollections: outputs.GetRedisRedisClusterNodesRedisNodeCollection[];
}
export function getRedisRedisClusterNodesOutput(args: GetRedisRedisClusterNodesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRedisRedisClusterNodesResult> {
    return pulumi.output(args).apply((a: any) => getRedisRedisClusterNodes(a, opts))
}

/**
 * A collection of arguments for invoking getRedisRedisClusterNodes.
 */
export interface GetRedisRedisClusterNodesOutputArgs {
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetRedisRedisClusterNodesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    redisClusterId: pulumi.Input<string>;
}
