// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementExternalExadataStorageServer(args: GetDatabaseManagementExternalExadataStorageServerArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementExternalExadataStorageServerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementExternalExadataStorageServer:getDatabaseManagementExternalExadataStorageServer", {
        "externalExadataStorageServerId": args.externalExadataStorageServerId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementExternalExadataStorageServer.
 */
export interface GetDatabaseManagementExternalExadataStorageServerArgs {
    externalExadataStorageServerId: string;
}

/**
 * A collection of values returned by getDatabaseManagementExternalExadataStorageServer.
 */
export interface GetDatabaseManagementExternalExadataStorageServerResult {
    readonly additionalDetails: {[key: string]: string};
    readonly connectors: outputs.GetDatabaseManagementExternalExadataStorageServerConnector[];
    readonly cpuCount: number;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly exadataInfrastructureId: string;
    readonly externalExadataStorageServerId: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly internalId: string;
    readonly ipAddress: string;
    readonly lifecycleDetails: string;
    readonly makeModel: string;
    readonly maxFlashDiskIops: number;
    readonly maxFlashDiskThroughput: number;
    readonly maxHardDiskIops: number;
    readonly maxHardDiskThroughput: number;
    readonly memoryGb: number;
    readonly resourceType: string;
    readonly state: string;
    readonly status: string;
    readonly storageGridId: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly version: string;
}
export function getDatabaseManagementExternalExadataStorageServerOutput(args: GetDatabaseManagementExternalExadataStorageServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementExternalExadataStorageServerResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementExternalExadataStorageServer(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementExternalExadataStorageServer.
 */
export interface GetDatabaseManagementExternalExadataStorageServerOutputArgs {
    externalExadataStorageServerId: pulumi.Input<string>;
}
