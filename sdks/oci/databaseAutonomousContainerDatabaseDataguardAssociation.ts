// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatabaseAutonomousContainerDatabaseDataguardAssociation extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseAutonomousContainerDatabaseDataguardAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseAutonomousContainerDatabaseDataguardAssociationState, opts?: pulumi.CustomResourceOptions): DatabaseAutonomousContainerDatabaseDataguardAssociation {
        return new DatabaseAutonomousContainerDatabaseDataguardAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/databaseAutonomousContainerDatabaseDataguardAssociation:DatabaseAutonomousContainerDatabaseDataguardAssociation';

    /**
     * Returns true if the given object is an instance of DatabaseAutonomousContainerDatabaseDataguardAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseAutonomousContainerDatabaseDataguardAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseAutonomousContainerDatabaseDataguardAssociation.__pulumiType;
    }

    public /*out*/ readonly applyLag!: pulumi.Output<string>;
    public /*out*/ readonly applyRate!: pulumi.Output<string>;
    public readonly autonomousContainerDatabaseDataguardAssociationId!: pulumi.Output<string>;
    public readonly autonomousContainerDatabaseId!: pulumi.Output<string>;
    public readonly fastStartFailOverLagLimitInSeconds!: pulumi.Output<number>;
    public readonly isAutomaticFailoverEnabled!: pulumi.Output<boolean>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly peerAutonomousContainerDatabaseBackupConfig!: pulumi.Output<outputs.DatabaseAutonomousContainerDatabaseDataguardAssociationPeerAutonomousContainerDatabaseBackupConfig | undefined>;
    public readonly peerAutonomousContainerDatabaseCompartmentId!: pulumi.Output<string>;
    public /*out*/ readonly peerAutonomousContainerDatabaseDataguardAssociationId!: pulumi.Output<string>;
    public readonly peerAutonomousContainerDatabaseDisplayName!: pulumi.Output<string>;
    public /*out*/ readonly peerAutonomousContainerDatabaseId!: pulumi.Output<string>;
    public readonly peerAutonomousVmClusterId!: pulumi.Output<string>;
    public readonly peerCloudAutonomousVmClusterId!: pulumi.Output<string>;
    public readonly peerDbUniqueName!: pulumi.Output<string>;
    public /*out*/ readonly peerLifecycleState!: pulumi.Output<string>;
    public /*out*/ readonly peerRole!: pulumi.Output<string>;
    public readonly protectionMode!: pulumi.Output<string>;
    public /*out*/ readonly role!: pulumi.Output<string>;
    public readonly standbyMaintenanceBufferInDays!: pulumi.Output<number>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeLastRoleChanged!: pulumi.Output<string>;
    public /*out*/ readonly timeLastSynced!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DatabaseAutonomousContainerDatabaseDataguardAssociationTimeouts | undefined>;
    public /*out*/ readonly transportLag!: pulumi.Output<string>;

    /**
     * Create a DatabaseAutonomousContainerDatabaseDataguardAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseAutonomousContainerDatabaseDataguardAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseAutonomousContainerDatabaseDataguardAssociationArgs | DatabaseAutonomousContainerDatabaseDataguardAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseAutonomousContainerDatabaseDataguardAssociationState | undefined;
            resourceInputs["applyLag"] = state ? state.applyLag : undefined;
            resourceInputs["applyRate"] = state ? state.applyRate : undefined;
            resourceInputs["autonomousContainerDatabaseDataguardAssociationId"] = state ? state.autonomousContainerDatabaseDataguardAssociationId : undefined;
            resourceInputs["autonomousContainerDatabaseId"] = state ? state.autonomousContainerDatabaseId : undefined;
            resourceInputs["fastStartFailOverLagLimitInSeconds"] = state ? state.fastStartFailOverLagLimitInSeconds : undefined;
            resourceInputs["isAutomaticFailoverEnabled"] = state ? state.isAutomaticFailoverEnabled : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["peerAutonomousContainerDatabaseBackupConfig"] = state ? state.peerAutonomousContainerDatabaseBackupConfig : undefined;
            resourceInputs["peerAutonomousContainerDatabaseCompartmentId"] = state ? state.peerAutonomousContainerDatabaseCompartmentId : undefined;
            resourceInputs["peerAutonomousContainerDatabaseDataguardAssociationId"] = state ? state.peerAutonomousContainerDatabaseDataguardAssociationId : undefined;
            resourceInputs["peerAutonomousContainerDatabaseDisplayName"] = state ? state.peerAutonomousContainerDatabaseDisplayName : undefined;
            resourceInputs["peerAutonomousContainerDatabaseId"] = state ? state.peerAutonomousContainerDatabaseId : undefined;
            resourceInputs["peerAutonomousVmClusterId"] = state ? state.peerAutonomousVmClusterId : undefined;
            resourceInputs["peerCloudAutonomousVmClusterId"] = state ? state.peerCloudAutonomousVmClusterId : undefined;
            resourceInputs["peerDbUniqueName"] = state ? state.peerDbUniqueName : undefined;
            resourceInputs["peerLifecycleState"] = state ? state.peerLifecycleState : undefined;
            resourceInputs["peerRole"] = state ? state.peerRole : undefined;
            resourceInputs["protectionMode"] = state ? state.protectionMode : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["standbyMaintenanceBufferInDays"] = state ? state.standbyMaintenanceBufferInDays : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeLastRoleChanged"] = state ? state.timeLastRoleChanged : undefined;
            resourceInputs["timeLastSynced"] = state ? state.timeLastSynced : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["transportLag"] = state ? state.transportLag : undefined;
        } else {
            const args = argsOrState as DatabaseAutonomousContainerDatabaseDataguardAssociationArgs | undefined;
            if ((!args || args.autonomousContainerDatabaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autonomousContainerDatabaseId'");
            }
            if ((!args || args.peerAutonomousContainerDatabaseDisplayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerAutonomousContainerDatabaseDisplayName'");
            }
            if ((!args || args.protectionMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protectionMode'");
            }
            resourceInputs["autonomousContainerDatabaseDataguardAssociationId"] = args ? args.autonomousContainerDatabaseDataguardAssociationId : undefined;
            resourceInputs["autonomousContainerDatabaseId"] = args ? args.autonomousContainerDatabaseId : undefined;
            resourceInputs["fastStartFailOverLagLimitInSeconds"] = args ? args.fastStartFailOverLagLimitInSeconds : undefined;
            resourceInputs["isAutomaticFailoverEnabled"] = args ? args.isAutomaticFailoverEnabled : undefined;
            resourceInputs["peerAutonomousContainerDatabaseBackupConfig"] = args ? args.peerAutonomousContainerDatabaseBackupConfig : undefined;
            resourceInputs["peerAutonomousContainerDatabaseCompartmentId"] = args ? args.peerAutonomousContainerDatabaseCompartmentId : undefined;
            resourceInputs["peerAutonomousContainerDatabaseDisplayName"] = args ? args.peerAutonomousContainerDatabaseDisplayName : undefined;
            resourceInputs["peerAutonomousVmClusterId"] = args ? args.peerAutonomousVmClusterId : undefined;
            resourceInputs["peerCloudAutonomousVmClusterId"] = args ? args.peerCloudAutonomousVmClusterId : undefined;
            resourceInputs["peerDbUniqueName"] = args ? args.peerDbUniqueName : undefined;
            resourceInputs["protectionMode"] = args ? args.protectionMode : undefined;
            resourceInputs["standbyMaintenanceBufferInDays"] = args ? args.standbyMaintenanceBufferInDays : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["applyLag"] = undefined /*out*/;
            resourceInputs["applyRate"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["peerAutonomousContainerDatabaseDataguardAssociationId"] = undefined /*out*/;
            resourceInputs["peerAutonomousContainerDatabaseId"] = undefined /*out*/;
            resourceInputs["peerLifecycleState"] = undefined /*out*/;
            resourceInputs["peerRole"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeLastRoleChanged"] = undefined /*out*/;
            resourceInputs["timeLastSynced"] = undefined /*out*/;
            resourceInputs["transportLag"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseAutonomousContainerDatabaseDataguardAssociation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatabaseAutonomousContainerDatabaseDataguardAssociation resources.
 */
export interface DatabaseAutonomousContainerDatabaseDataguardAssociationState {
    applyLag?: pulumi.Input<string>;
    applyRate?: pulumi.Input<string>;
    autonomousContainerDatabaseDataguardAssociationId?: pulumi.Input<string>;
    autonomousContainerDatabaseId?: pulumi.Input<string>;
    fastStartFailOverLagLimitInSeconds?: pulumi.Input<number>;
    isAutomaticFailoverEnabled?: pulumi.Input<boolean>;
    lifecycleDetails?: pulumi.Input<string>;
    peerAutonomousContainerDatabaseBackupConfig?: pulumi.Input<inputs.DatabaseAutonomousContainerDatabaseDataguardAssociationPeerAutonomousContainerDatabaseBackupConfig>;
    peerAutonomousContainerDatabaseCompartmentId?: pulumi.Input<string>;
    peerAutonomousContainerDatabaseDataguardAssociationId?: pulumi.Input<string>;
    peerAutonomousContainerDatabaseDisplayName?: pulumi.Input<string>;
    peerAutonomousContainerDatabaseId?: pulumi.Input<string>;
    peerAutonomousVmClusterId?: pulumi.Input<string>;
    peerCloudAutonomousVmClusterId?: pulumi.Input<string>;
    peerDbUniqueName?: pulumi.Input<string>;
    peerLifecycleState?: pulumi.Input<string>;
    peerRole?: pulumi.Input<string>;
    protectionMode?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    standbyMaintenanceBufferInDays?: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeLastRoleChanged?: pulumi.Input<string>;
    timeLastSynced?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatabaseAutonomousContainerDatabaseDataguardAssociationTimeouts>;
    transportLag?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatabaseAutonomousContainerDatabaseDataguardAssociation resource.
 */
export interface DatabaseAutonomousContainerDatabaseDataguardAssociationArgs {
    autonomousContainerDatabaseDataguardAssociationId?: pulumi.Input<string>;
    autonomousContainerDatabaseId: pulumi.Input<string>;
    fastStartFailOverLagLimitInSeconds?: pulumi.Input<number>;
    isAutomaticFailoverEnabled?: pulumi.Input<boolean>;
    peerAutonomousContainerDatabaseBackupConfig?: pulumi.Input<inputs.DatabaseAutonomousContainerDatabaseDataguardAssociationPeerAutonomousContainerDatabaseBackupConfig>;
    peerAutonomousContainerDatabaseCompartmentId?: pulumi.Input<string>;
    peerAutonomousContainerDatabaseDisplayName: pulumi.Input<string>;
    peerAutonomousVmClusterId?: pulumi.Input<string>;
    peerCloudAutonomousVmClusterId?: pulumi.Input<string>;
    peerDbUniqueName?: pulumi.Input<string>;
    protectionMode: pulumi.Input<string>;
    standbyMaintenanceBufferInDays?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.DatabaseAutonomousContainerDatabaseDataguardAssociationTimeouts>;
}
