// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OcvpEsxiHost extends pulumi.CustomResource {
    /**
     * Get an existing OcvpEsxiHost resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OcvpEsxiHostState, opts?: pulumi.CustomResourceOptions): OcvpEsxiHost {
        return new OcvpEsxiHost(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/ocvpEsxiHost:OcvpEsxiHost';

    /**
     * Returns true if the given object is an instance of OcvpEsxiHost.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OcvpEsxiHost {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OcvpEsxiHost.__pulumiType;
    }

    public /*out*/ readonly billingContractEndDate!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly billingDonorHostId!: pulumi.Output<string>;
    public readonly capacityReservationId!: pulumi.Output<string>;
    public readonly clusterId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    public readonly computeAvailabilityDomain!: pulumi.Output<string>;
    public /*out*/ readonly computeInstanceId!: pulumi.Output<string>;
    public /*out*/ readonly currentCommitment!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly currentSku!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly esxiSoftwareVersion!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly failedEsxiHostId!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly gracePeriodEndDate!: pulumi.Output<string>;
    public readonly hostOcpuCount!: pulumi.Output<number>;
    public readonly hostShapeName!: pulumi.Output<string>;
    public /*out*/ readonly isBillingContinuationInProgress!: pulumi.Output<boolean>;
    public /*out*/ readonly isBillingSwappingInProgress!: pulumi.Output<boolean>;
    public /*out*/ readonly nextCommitment!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly nextSku!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly nonUpgradedEsxiHostId!: pulumi.Output<string>;
    public /*out*/ readonly replacementEsxiHostId!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly sddcId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly swapBillingHostId!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.OcvpEsxiHostTimeouts | undefined>;
    public /*out*/ readonly upgradedReplacementEsxiHostId!: pulumi.Output<string>;
    public /*out*/ readonly vmwareSoftwareVersion!: pulumi.Output<string>;

    /**
     * Create a OcvpEsxiHost resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OcvpEsxiHostArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OcvpEsxiHostArgs | OcvpEsxiHostState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OcvpEsxiHostState | undefined;
            resourceInputs["billingContractEndDate"] = state ? state.billingContractEndDate : undefined;
            resourceInputs["billingDonorHostId"] = state ? state.billingDonorHostId : undefined;
            resourceInputs["capacityReservationId"] = state ? state.capacityReservationId : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["computeAvailabilityDomain"] = state ? state.computeAvailabilityDomain : undefined;
            resourceInputs["computeInstanceId"] = state ? state.computeInstanceId : undefined;
            resourceInputs["currentCommitment"] = state ? state.currentCommitment : undefined;
            resourceInputs["currentSku"] = state ? state.currentSku : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["esxiSoftwareVersion"] = state ? state.esxiSoftwareVersion : undefined;
            resourceInputs["failedEsxiHostId"] = state ? state.failedEsxiHostId : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["gracePeriodEndDate"] = state ? state.gracePeriodEndDate : undefined;
            resourceInputs["hostOcpuCount"] = state ? state.hostOcpuCount : undefined;
            resourceInputs["hostShapeName"] = state ? state.hostShapeName : undefined;
            resourceInputs["isBillingContinuationInProgress"] = state ? state.isBillingContinuationInProgress : undefined;
            resourceInputs["isBillingSwappingInProgress"] = state ? state.isBillingSwappingInProgress : undefined;
            resourceInputs["nextCommitment"] = state ? state.nextCommitment : undefined;
            resourceInputs["nextSku"] = state ? state.nextSku : undefined;
            resourceInputs["nonUpgradedEsxiHostId"] = state ? state.nonUpgradedEsxiHostId : undefined;
            resourceInputs["replacementEsxiHostId"] = state ? state.replacementEsxiHostId : undefined;
            resourceInputs["sddcId"] = state ? state.sddcId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["swapBillingHostId"] = state ? state.swapBillingHostId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["upgradedReplacementEsxiHostId"] = state ? state.upgradedReplacementEsxiHostId : undefined;
            resourceInputs["vmwareSoftwareVersion"] = state ? state.vmwareSoftwareVersion : undefined;
        } else {
            const args = argsOrState as OcvpEsxiHostArgs | undefined;
            resourceInputs["billingDonorHostId"] = args ? args.billingDonorHostId : undefined;
            resourceInputs["capacityReservationId"] = args ? args.capacityReservationId : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["computeAvailabilityDomain"] = args ? args.computeAvailabilityDomain : undefined;
            resourceInputs["currentSku"] = args ? args.currentSku : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["esxiSoftwareVersion"] = args ? args.esxiSoftwareVersion : undefined;
            resourceInputs["failedEsxiHostId"] = args ? args.failedEsxiHostId : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["hostOcpuCount"] = args ? args.hostOcpuCount : undefined;
            resourceInputs["hostShapeName"] = args ? args.hostShapeName : undefined;
            resourceInputs["nextSku"] = args ? args.nextSku : undefined;
            resourceInputs["nonUpgradedEsxiHostId"] = args ? args.nonUpgradedEsxiHostId : undefined;
            resourceInputs["sddcId"] = args ? args.sddcId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["billingContractEndDate"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["computeInstanceId"] = undefined /*out*/;
            resourceInputs["currentCommitment"] = undefined /*out*/;
            resourceInputs["gracePeriodEndDate"] = undefined /*out*/;
            resourceInputs["isBillingContinuationInProgress"] = undefined /*out*/;
            resourceInputs["isBillingSwappingInProgress"] = undefined /*out*/;
            resourceInputs["nextCommitment"] = undefined /*out*/;
            resourceInputs["replacementEsxiHostId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["swapBillingHostId"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["upgradedReplacementEsxiHostId"] = undefined /*out*/;
            resourceInputs["vmwareSoftwareVersion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OcvpEsxiHost.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OcvpEsxiHost resources.
 */
export interface OcvpEsxiHostState {
    billingContractEndDate?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    billingDonorHostId?: pulumi.Input<string>;
    capacityReservationId?: pulumi.Input<string>;
    clusterId?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    computeAvailabilityDomain?: pulumi.Input<string>;
    computeInstanceId?: pulumi.Input<string>;
    currentCommitment?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    currentSku?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    esxiSoftwareVersion?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    failedEsxiHostId?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    gracePeriodEndDate?: pulumi.Input<string>;
    hostOcpuCount?: pulumi.Input<number>;
    hostShapeName?: pulumi.Input<string>;
    isBillingContinuationInProgress?: pulumi.Input<boolean>;
    isBillingSwappingInProgress?: pulumi.Input<boolean>;
    nextCommitment?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    nextSku?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    nonUpgradedEsxiHostId?: pulumi.Input<string>;
    replacementEsxiHostId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    sddcId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    swapBillingHostId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OcvpEsxiHostTimeouts>;
    upgradedReplacementEsxiHostId?: pulumi.Input<string>;
    vmwareSoftwareVersion?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OcvpEsxiHost resource.
 */
export interface OcvpEsxiHostArgs {
    /**
     * @deprecated Deprecated
     */
    billingDonorHostId?: pulumi.Input<string>;
    capacityReservationId?: pulumi.Input<string>;
    clusterId?: pulumi.Input<string>;
    computeAvailabilityDomain?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    currentSku?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    esxiSoftwareVersion?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    failedEsxiHostId?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostOcpuCount?: pulumi.Input<number>;
    hostShapeName?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    nextSku?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    nonUpgradedEsxiHostId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    sddcId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OcvpEsxiHostTimeouts>;
}
