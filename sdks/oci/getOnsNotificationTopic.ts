// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOnsNotificationTopic(args: GetOnsNotificationTopicArgs, opts?: pulumi.InvokeOptions): Promise<GetOnsNotificationTopicResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOnsNotificationTopic:getOnsNotificationTopic", {
        "topicId": args.topicId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOnsNotificationTopic.
 */
export interface GetOnsNotificationTopicArgs {
    topicId: string;
}

/**
 * A collection of values returned by getOnsNotificationTopic.
 */
export interface GetOnsNotificationTopicResult {
    readonly apiEndpoint: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly etag: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly name: string;
    readonly shortTopicId: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly topicId: string;
}
export function getOnsNotificationTopicOutput(args: GetOnsNotificationTopicOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOnsNotificationTopicResult> {
    return pulumi.output(args).apply((a: any) => getOnsNotificationTopic(a, opts))
}

/**
 * A collection of arguments for invoking getOnsNotificationTopic.
 */
export interface GetOnsNotificationTopicOutputArgs {
    topicId: pulumi.Input<string>;
}
