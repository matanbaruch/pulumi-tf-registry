// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogAnalyticsNamespaceStorageRecallCount(args: GetLogAnalyticsNamespaceStorageRecallCountArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsNamespaceStorageRecallCountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLogAnalyticsNamespaceStorageRecallCount:getLogAnalyticsNamespaceStorageRecallCount", {
        "id": args.id,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespaceStorageRecallCount.
 */
export interface GetLogAnalyticsNamespaceStorageRecallCountArgs {
    id?: string;
    namespace: string;
}

/**
 * A collection of values returned by getLogAnalyticsNamespaceStorageRecallCount.
 */
export interface GetLogAnalyticsNamespaceStorageRecallCountResult {
    readonly id: string;
    readonly namespace: string;
    readonly recallCount: number;
    readonly recallFailed: number;
    readonly recallLimit: number;
    readonly recallPending: number;
    readonly recallSucceeded: number;
}
export function getLogAnalyticsNamespaceStorageRecallCountOutput(args: GetLogAnalyticsNamespaceStorageRecallCountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsNamespaceStorageRecallCountResult> {
    return pulumi.output(args).apply((a: any) => getLogAnalyticsNamespaceStorageRecallCount(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespaceStorageRecallCount.
 */
export interface GetLogAnalyticsNamespaceStorageRecallCountOutputArgs {
    id?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
}
