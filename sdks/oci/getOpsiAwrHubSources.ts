// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOpsiAwrHubSources(args: GetOpsiAwrHubSourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetOpsiAwrHubSourcesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOpsiAwrHubSources:getOpsiAwrHubSources", {
        "awrHubId": args.awrHubId,
        "awrHubSourceId": args.awrHubSourceId,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "sourceTypes": args.sourceTypes,
        "states": args.states,
        "statuses": args.statuses,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpsiAwrHubSources.
 */
export interface GetOpsiAwrHubSourcesArgs {
    awrHubId: string;
    awrHubSourceId?: string;
    compartmentId?: string;
    filters?: inputs.GetOpsiAwrHubSourcesFilter[];
    id?: string;
    name?: string;
    sourceTypes?: string[];
    states?: string[];
    statuses?: string[];
}

/**
 * A collection of values returned by getOpsiAwrHubSources.
 */
export interface GetOpsiAwrHubSourcesResult {
    readonly awrHubId: string;
    readonly awrHubSourceId?: string;
    readonly awrHubSourceSummaryCollections: outputs.GetOpsiAwrHubSourcesAwrHubSourceSummaryCollection[];
    readonly compartmentId?: string;
    readonly filters?: outputs.GetOpsiAwrHubSourcesFilter[];
    readonly id: string;
    readonly name?: string;
    readonly sourceTypes?: string[];
    readonly states?: string[];
    readonly statuses?: string[];
}
export function getOpsiAwrHubSourcesOutput(args: GetOpsiAwrHubSourcesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpsiAwrHubSourcesResult> {
    return pulumi.output(args).apply((a: any) => getOpsiAwrHubSources(a, opts))
}

/**
 * A collection of arguments for invoking getOpsiAwrHubSources.
 */
export interface GetOpsiAwrHubSourcesOutputArgs {
    awrHubId: pulumi.Input<string>;
    awrHubSourceId?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOpsiAwrHubSourcesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    states?: pulumi.Input<pulumi.Input<string>[]>;
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
}
