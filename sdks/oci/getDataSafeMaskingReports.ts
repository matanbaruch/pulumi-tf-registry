// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeMaskingReports(args: GetDataSafeMaskingReportsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeMaskingReportsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeMaskingReports:getDataSafeMaskingReports", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "id": args.id,
        "maskingPolicyId": args.maskingPolicyId,
        "targetId": args.targetId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeMaskingReports.
 */
export interface GetDataSafeMaskingReportsArgs {
    accessLevel?: string;
    compartmentId: string;
    compartmentIdInSubtree?: boolean;
    filters?: inputs.GetDataSafeMaskingReportsFilter[];
    id?: string;
    maskingPolicyId?: string;
    targetId?: string;
}

/**
 * A collection of values returned by getDataSafeMaskingReports.
 */
export interface GetDataSafeMaskingReportsResult {
    readonly accessLevel?: string;
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.GetDataSafeMaskingReportsFilter[];
    readonly id: string;
    readonly maskingPolicyId?: string;
    readonly maskingReportCollections: outputs.GetDataSafeMaskingReportsMaskingReportCollection[];
    readonly targetId?: string;
}
export function getDataSafeMaskingReportsOutput(args: GetDataSafeMaskingReportsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeMaskingReportsResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeMaskingReports(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeMaskingReports.
 */
export interface GetDataSafeMaskingReportsOutputArgs {
    accessLevel?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataSafeMaskingReportsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    maskingPolicyId?: pulumi.Input<string>;
    targetId?: pulumi.Input<string>;
}
