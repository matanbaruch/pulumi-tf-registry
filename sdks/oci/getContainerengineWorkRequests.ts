// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getContainerengineWorkRequests(args: GetContainerengineWorkRequestsArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerengineWorkRequestsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getContainerengineWorkRequests:getContainerengineWorkRequests", {
        "clusterId": args.clusterId,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "resourceId": args.resourceId,
        "resourceType": args.resourceType,
        "statuses": args.statuses,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContainerengineWorkRequests.
 */
export interface GetContainerengineWorkRequestsArgs {
    clusterId?: string;
    compartmentId: string;
    filters?: inputs.GetContainerengineWorkRequestsFilter[];
    id?: string;
    resourceId?: string;
    resourceType?: string;
    statuses?: string[];
}

/**
 * A collection of values returned by getContainerengineWorkRequests.
 */
export interface GetContainerengineWorkRequestsResult {
    readonly clusterId?: string;
    readonly compartmentId: string;
    readonly filters?: outputs.GetContainerengineWorkRequestsFilter[];
    readonly id: string;
    readonly resourceId?: string;
    readonly resourceType?: string;
    readonly statuses?: string[];
    readonly workRequests: outputs.GetContainerengineWorkRequestsWorkRequest[];
}
export function getContainerengineWorkRequestsOutput(args: GetContainerengineWorkRequestsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerengineWorkRequestsResult> {
    return pulumi.output(args).apply((a: any) => getContainerengineWorkRequests(a, opts))
}

/**
 * A collection of arguments for invoking getContainerengineWorkRequests.
 */
export interface GetContainerengineWorkRequestsOutputArgs {
    clusterId?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetContainerengineWorkRequestsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
}
