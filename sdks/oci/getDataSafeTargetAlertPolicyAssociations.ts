// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeTargetAlertPolicyAssociations(args: GetDataSafeTargetAlertPolicyAssociationsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeTargetAlertPolicyAssociationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeTargetAlertPolicyAssociations:getDataSafeTargetAlertPolicyAssociations", {
        "accessLevel": args.accessLevel,
        "alertPolicyId": args.alertPolicyId,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
        "targetAlertPolicyAssociationId": args.targetAlertPolicyAssociationId,
        "targetId": args.targetId,
        "timeCreatedGreaterThanOrEqualTo": args.timeCreatedGreaterThanOrEqualTo,
        "timeCreatedLessThan": args.timeCreatedLessThan,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeTargetAlertPolicyAssociations.
 */
export interface GetDataSafeTargetAlertPolicyAssociationsArgs {
    accessLevel?: string;
    alertPolicyId?: string;
    compartmentId: string;
    compartmentIdInSubtree?: boolean;
    filters?: inputs.GetDataSafeTargetAlertPolicyAssociationsFilter[];
    id?: string;
    state?: string;
    targetAlertPolicyAssociationId?: string;
    targetId?: string;
    timeCreatedGreaterThanOrEqualTo?: string;
    timeCreatedLessThan?: string;
}

/**
 * A collection of values returned by getDataSafeTargetAlertPolicyAssociations.
 */
export interface GetDataSafeTargetAlertPolicyAssociationsResult {
    readonly accessLevel?: string;
    readonly alertPolicyId?: string;
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.GetDataSafeTargetAlertPolicyAssociationsFilter[];
    readonly id: string;
    readonly state?: string;
    readonly targetAlertPolicyAssociationCollections: outputs.GetDataSafeTargetAlertPolicyAssociationsTargetAlertPolicyAssociationCollection[];
    readonly targetAlertPolicyAssociationId?: string;
    readonly targetId?: string;
    readonly timeCreatedGreaterThanOrEqualTo?: string;
    readonly timeCreatedLessThan?: string;
}
export function getDataSafeTargetAlertPolicyAssociationsOutput(args: GetDataSafeTargetAlertPolicyAssociationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeTargetAlertPolicyAssociationsResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeTargetAlertPolicyAssociations(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeTargetAlertPolicyAssociations.
 */
export interface GetDataSafeTargetAlertPolicyAssociationsOutputArgs {
    accessLevel?: pulumi.Input<string>;
    alertPolicyId?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataSafeTargetAlertPolicyAssociationsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    targetAlertPolicyAssociationId?: pulumi.Input<string>;
    targetId?: pulumi.Input<string>;
    timeCreatedGreaterThanOrEqualTo?: pulumi.Input<string>;
    timeCreatedLessThan?: pulumi.Input<string>;
}
