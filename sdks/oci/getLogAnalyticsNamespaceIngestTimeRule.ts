// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLogAnalyticsNamespaceIngestTimeRule(args: GetLogAnalyticsNamespaceIngestTimeRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsNamespaceIngestTimeRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLogAnalyticsNamespaceIngestTimeRule:getLogAnalyticsNamespaceIngestTimeRule", {
        "ingestTimeRuleId": args.ingestTimeRuleId,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespaceIngestTimeRule.
 */
export interface GetLogAnalyticsNamespaceIngestTimeRuleArgs {
    ingestTimeRuleId: string;
    namespace: string;
}

/**
 * A collection of values returned by getLogAnalyticsNamespaceIngestTimeRule.
 */
export interface GetLogAnalyticsNamespaceIngestTimeRuleResult {
    readonly actions: outputs.GetLogAnalyticsNamespaceIngestTimeRuleAction[];
    readonly compartmentId: string;
    readonly conditions: outputs.GetLogAnalyticsNamespaceIngestTimeRuleCondition[];
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly ingestTimeRuleId: string;
    readonly isEnabled: boolean;
    readonly namespace: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getLogAnalyticsNamespaceIngestTimeRuleOutput(args: GetLogAnalyticsNamespaceIngestTimeRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsNamespaceIngestTimeRuleResult> {
    return pulumi.output(args).apply((a: any) => getLogAnalyticsNamespaceIngestTimeRule(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespaceIngestTimeRule.
 */
export interface GetLogAnalyticsNamespaceIngestTimeRuleOutputArgs {
    ingestTimeRuleId: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
}
