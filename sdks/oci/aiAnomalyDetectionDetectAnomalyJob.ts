// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AiAnomalyDetectionDetectAnomalyJob extends pulumi.CustomResource {
    /**
     * Get an existing AiAnomalyDetectionDetectAnomalyJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AiAnomalyDetectionDetectAnomalyJobState, opts?: pulumi.CustomResourceOptions): AiAnomalyDetectionDetectAnomalyJob {
        return new AiAnomalyDetectionDetectAnomalyJob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/aiAnomalyDetectionDetectAnomalyJob:AiAnomalyDetectionDetectAnomalyJob';

    /**
     * Returns true if the given object is an instance of AiAnomalyDetectionDetectAnomalyJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AiAnomalyDetectionDetectAnomalyJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AiAnomalyDetectionDetectAnomalyJob.__pulumiType;
    }

    public readonly compartmentId!: pulumi.Output<string>;
    public /*out*/ readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public /*out*/ readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly inputDetails!: pulumi.Output<outputs.AiAnomalyDetectionDetectAnomalyJobInputDetails>;
    public /*out*/ readonly lifecycleStateDetails!: pulumi.Output<string>;
    public readonly modelId!: pulumi.Output<string>;
    public readonly outputDetails!: pulumi.Output<outputs.AiAnomalyDetectionDetectAnomalyJobOutputDetails>;
    public /*out*/ readonly projectId!: pulumi.Output<string>;
    public readonly sensitivity!: pulumi.Output<number>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly timeAccepted!: pulumi.Output<string>;
    public /*out*/ readonly timeFinished!: pulumi.Output<string>;
    public /*out*/ readonly timeStarted!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.AiAnomalyDetectionDetectAnomalyJobTimeouts | undefined>;

    /**
     * Create a AiAnomalyDetectionDetectAnomalyJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AiAnomalyDetectionDetectAnomalyJobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AiAnomalyDetectionDetectAnomalyJobArgs | AiAnomalyDetectionDetectAnomalyJobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AiAnomalyDetectionDetectAnomalyJobState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["inputDetails"] = state ? state.inputDetails : undefined;
            resourceInputs["lifecycleStateDetails"] = state ? state.lifecycleStateDetails : undefined;
            resourceInputs["modelId"] = state ? state.modelId : undefined;
            resourceInputs["outputDetails"] = state ? state.outputDetails : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["sensitivity"] = state ? state.sensitivity : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeAccepted"] = state ? state.timeAccepted : undefined;
            resourceInputs["timeFinished"] = state ? state.timeFinished : undefined;
            resourceInputs["timeStarted"] = state ? state.timeStarted : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AiAnomalyDetectionDetectAnomalyJobArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.inputDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'inputDetails'");
            }
            if ((!args || args.modelId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelId'");
            }
            if ((!args || args.outputDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'outputDetails'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["inputDetails"] = args ? args.inputDetails : undefined;
            resourceInputs["modelId"] = args ? args.modelId : undefined;
            resourceInputs["outputDetails"] = args ? args.outputDetails : undefined;
            resourceInputs["sensitivity"] = args ? args.sensitivity : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["definedTags"] = undefined /*out*/;
            resourceInputs["freeformTags"] = undefined /*out*/;
            resourceInputs["lifecycleStateDetails"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeAccepted"] = undefined /*out*/;
            resourceInputs["timeFinished"] = undefined /*out*/;
            resourceInputs["timeStarted"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AiAnomalyDetectionDetectAnomalyJob.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AiAnomalyDetectionDetectAnomalyJob resources.
 */
export interface AiAnomalyDetectionDetectAnomalyJobState {
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    inputDetails?: pulumi.Input<inputs.AiAnomalyDetectionDetectAnomalyJobInputDetails>;
    lifecycleStateDetails?: pulumi.Input<string>;
    modelId?: pulumi.Input<string>;
    outputDetails?: pulumi.Input<inputs.AiAnomalyDetectionDetectAnomalyJobOutputDetails>;
    projectId?: pulumi.Input<string>;
    sensitivity?: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeAccepted?: pulumi.Input<string>;
    timeFinished?: pulumi.Input<string>;
    timeStarted?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AiAnomalyDetectionDetectAnomalyJobTimeouts>;
}

/**
 * The set of arguments for constructing a AiAnomalyDetectionDetectAnomalyJob resource.
 */
export interface AiAnomalyDetectionDetectAnomalyJobArgs {
    compartmentId: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    inputDetails: pulumi.Input<inputs.AiAnomalyDetectionDetectAnomalyJobInputDetails>;
    modelId: pulumi.Input<string>;
    outputDetails: pulumi.Input<inputs.AiAnomalyDetectionDetectAnomalyJobOutputDetails>;
    sensitivity?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.AiAnomalyDetectionDetectAnomalyJobTimeouts>;
}
