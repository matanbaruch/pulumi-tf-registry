// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DevopsDeployStage extends pulumi.CustomResource {
    /**
     * Get an existing DevopsDeployStage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DevopsDeployStageState, opts?: pulumi.CustomResourceOptions): DevopsDeployStage {
        return new DevopsDeployStage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/devopsDeployStage:DevopsDeployStage';

    /**
     * Returns true if the given object is an instance of DevopsDeployStage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DevopsDeployStage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DevopsDeployStage.__pulumiType;
    }

    public readonly approvalPolicy!: pulumi.Output<outputs.DevopsDeployStageApprovalPolicy | undefined>;
    public readonly areHooksEnabled!: pulumi.Output<boolean>;
    public readonly blueBackendIps!: pulumi.Output<outputs.DevopsDeployStageBlueBackendIps | undefined>;
    public readonly blueGreenStrategy!: pulumi.Output<outputs.DevopsDeployStageBlueGreenStrategy | undefined>;
    public readonly canaryStrategy!: pulumi.Output<outputs.DevopsDeployStageCanaryStrategy | undefined>;
    public readonly commandSpecDeployArtifactId!: pulumi.Output<string>;
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    public readonly computeInstanceGroupBlueGreenDeploymentDeployStageId!: pulumi.Output<string>;
    public readonly computeInstanceGroupCanaryDeployStageId!: pulumi.Output<string>;
    public readonly computeInstanceGroupCanaryTrafficShiftDeployStageId!: pulumi.Output<string>;
    public readonly computeInstanceGroupDeployEnvironmentId!: pulumi.Output<string>;
    public readonly config!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly containerConfig!: pulumi.Output<outputs.DevopsDeployStageContainerConfig | undefined>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly deployArtifactId!: pulumi.Output<string | undefined>;
    public readonly deployArtifactIds!: pulumi.Output<string[] | undefined>;
    public readonly deployEnvironmentIdA!: pulumi.Output<string>;
    public readonly deployEnvironmentIdB!: pulumi.Output<string>;
    public readonly deployPipelineId!: pulumi.Output<string>;
    public readonly deployStagePredecessorCollection!: pulumi.Output<outputs.DevopsDeployStageDeployStagePredecessorCollection>;
    public readonly deployStageType!: pulumi.Output<string>;
    public readonly deploymentSpecDeployArtifactId!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly dockerImageDeployArtifactId!: pulumi.Output<string>;
    public readonly failurePolicy!: pulumi.Output<outputs.DevopsDeployStageFailurePolicy | undefined>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly functionDeployEnvironmentId!: pulumi.Output<string>;
    public readonly functionTimeoutInSeconds!: pulumi.Output<number>;
    public readonly greenBackendIps!: pulumi.Output<outputs.DevopsDeployStageGreenBackendIps | undefined>;
    public readonly helmChartDeployArtifactId!: pulumi.Output<string>;
    public readonly helmCommandArtifactIds!: pulumi.Output<string[] | undefined>;
    public readonly isAsync!: pulumi.Output<boolean>;
    public readonly isDebugEnabled!: pulumi.Output<boolean>;
    public readonly isForceEnabled!: pulumi.Output<boolean>;
    public readonly isUninstallOnStageDelete!: pulumi.Output<boolean>;
    public readonly isValidationEnabled!: pulumi.Output<boolean>;
    public readonly kubernetesManifestDeployArtifactIds!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly loadBalancerConfig!: pulumi.Output<outputs.DevopsDeployStageLoadBalancerConfig | undefined>;
    public readonly maxHistory!: pulumi.Output<number>;
    public readonly maxMemoryInMbs!: pulumi.Output<string>;
    public readonly namespace!: pulumi.Output<string>;
    public readonly okeBlueGreenDeployStageId!: pulumi.Output<string>;
    public readonly okeCanaryDeployStageId!: pulumi.Output<string>;
    public readonly okeCanaryTrafficShiftDeployStageId!: pulumi.Output<string>;
    public readonly okeClusterDeployEnvironmentId!: pulumi.Output<string>;
    public readonly productionLoadBalancerConfig!: pulumi.Output<outputs.DevopsDeployStageProductionLoadBalancerConfig | undefined>;
    public /*out*/ readonly projectId!: pulumi.Output<string>;
    public readonly purpose!: pulumi.Output<string>;
    public readonly releaseName!: pulumi.Output<string>;
    public readonly rollbackPolicy!: pulumi.Output<outputs.DevopsDeployStageRollbackPolicy | undefined>;
    public readonly rolloutPolicy!: pulumi.Output<outputs.DevopsDeployStageRolloutPolicy | undefined>;
    public readonly setString!: pulumi.Output<outputs.DevopsDeployStageSetString | undefined>;
    public readonly setValues!: pulumi.Output<outputs.DevopsDeployStageSetValues | undefined>;
    public readonly shouldCleanupOnFail!: pulumi.Output<boolean>;
    public readonly shouldNotWait!: pulumi.Output<boolean>;
    public readonly shouldResetValues!: pulumi.Output<boolean>;
    public readonly shouldReuseValues!: pulumi.Output<boolean>;
    public readonly shouldSkipCrds!: pulumi.Output<boolean>;
    public readonly shouldSkipRenderSubchartNotes!: pulumi.Output<boolean>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public readonly testLoadBalancerConfig!: pulumi.Output<outputs.DevopsDeployStageTestLoadBalancerConfig | undefined>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeoutInSeconds!: pulumi.Output<number>;
    public readonly timeouts!: pulumi.Output<outputs.DevopsDeployStageTimeouts | undefined>;
    public readonly trafficShiftTarget!: pulumi.Output<string>;
    public readonly valuesArtifactIds!: pulumi.Output<string[] | undefined>;
    public readonly waitCriteria!: pulumi.Output<outputs.DevopsDeployStageWaitCriteria | undefined>;

    /**
     * Create a DevopsDeployStage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DevopsDeployStageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DevopsDeployStageArgs | DevopsDeployStageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DevopsDeployStageState | undefined;
            resourceInputs["approvalPolicy"] = state ? state.approvalPolicy : undefined;
            resourceInputs["areHooksEnabled"] = state ? state.areHooksEnabled : undefined;
            resourceInputs["blueBackendIps"] = state ? state.blueBackendIps : undefined;
            resourceInputs["blueGreenStrategy"] = state ? state.blueGreenStrategy : undefined;
            resourceInputs["canaryStrategy"] = state ? state.canaryStrategy : undefined;
            resourceInputs["commandSpecDeployArtifactId"] = state ? state.commandSpecDeployArtifactId : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["computeInstanceGroupBlueGreenDeploymentDeployStageId"] = state ? state.computeInstanceGroupBlueGreenDeploymentDeployStageId : undefined;
            resourceInputs["computeInstanceGroupCanaryDeployStageId"] = state ? state.computeInstanceGroupCanaryDeployStageId : undefined;
            resourceInputs["computeInstanceGroupCanaryTrafficShiftDeployStageId"] = state ? state.computeInstanceGroupCanaryTrafficShiftDeployStageId : undefined;
            resourceInputs["computeInstanceGroupDeployEnvironmentId"] = state ? state.computeInstanceGroupDeployEnvironmentId : undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["containerConfig"] = state ? state.containerConfig : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["deployArtifactId"] = state ? state.deployArtifactId : undefined;
            resourceInputs["deployArtifactIds"] = state ? state.deployArtifactIds : undefined;
            resourceInputs["deployEnvironmentIdA"] = state ? state.deployEnvironmentIdA : undefined;
            resourceInputs["deployEnvironmentIdB"] = state ? state.deployEnvironmentIdB : undefined;
            resourceInputs["deployPipelineId"] = state ? state.deployPipelineId : undefined;
            resourceInputs["deployStagePredecessorCollection"] = state ? state.deployStagePredecessorCollection : undefined;
            resourceInputs["deployStageType"] = state ? state.deployStageType : undefined;
            resourceInputs["deploymentSpecDeployArtifactId"] = state ? state.deploymentSpecDeployArtifactId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["dockerImageDeployArtifactId"] = state ? state.dockerImageDeployArtifactId : undefined;
            resourceInputs["failurePolicy"] = state ? state.failurePolicy : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["functionDeployEnvironmentId"] = state ? state.functionDeployEnvironmentId : undefined;
            resourceInputs["functionTimeoutInSeconds"] = state ? state.functionTimeoutInSeconds : undefined;
            resourceInputs["greenBackendIps"] = state ? state.greenBackendIps : undefined;
            resourceInputs["helmChartDeployArtifactId"] = state ? state.helmChartDeployArtifactId : undefined;
            resourceInputs["helmCommandArtifactIds"] = state ? state.helmCommandArtifactIds : undefined;
            resourceInputs["isAsync"] = state ? state.isAsync : undefined;
            resourceInputs["isDebugEnabled"] = state ? state.isDebugEnabled : undefined;
            resourceInputs["isForceEnabled"] = state ? state.isForceEnabled : undefined;
            resourceInputs["isUninstallOnStageDelete"] = state ? state.isUninstallOnStageDelete : undefined;
            resourceInputs["isValidationEnabled"] = state ? state.isValidationEnabled : undefined;
            resourceInputs["kubernetesManifestDeployArtifactIds"] = state ? state.kubernetesManifestDeployArtifactIds : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["loadBalancerConfig"] = state ? state.loadBalancerConfig : undefined;
            resourceInputs["maxHistory"] = state ? state.maxHistory : undefined;
            resourceInputs["maxMemoryInMbs"] = state ? state.maxMemoryInMbs : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["okeBlueGreenDeployStageId"] = state ? state.okeBlueGreenDeployStageId : undefined;
            resourceInputs["okeCanaryDeployStageId"] = state ? state.okeCanaryDeployStageId : undefined;
            resourceInputs["okeCanaryTrafficShiftDeployStageId"] = state ? state.okeCanaryTrafficShiftDeployStageId : undefined;
            resourceInputs["okeClusterDeployEnvironmentId"] = state ? state.okeClusterDeployEnvironmentId : undefined;
            resourceInputs["productionLoadBalancerConfig"] = state ? state.productionLoadBalancerConfig : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["purpose"] = state ? state.purpose : undefined;
            resourceInputs["releaseName"] = state ? state.releaseName : undefined;
            resourceInputs["rollbackPolicy"] = state ? state.rollbackPolicy : undefined;
            resourceInputs["rolloutPolicy"] = state ? state.rolloutPolicy : undefined;
            resourceInputs["setString"] = state ? state.setString : undefined;
            resourceInputs["setValues"] = state ? state.setValues : undefined;
            resourceInputs["shouldCleanupOnFail"] = state ? state.shouldCleanupOnFail : undefined;
            resourceInputs["shouldNotWait"] = state ? state.shouldNotWait : undefined;
            resourceInputs["shouldResetValues"] = state ? state.shouldResetValues : undefined;
            resourceInputs["shouldReuseValues"] = state ? state.shouldReuseValues : undefined;
            resourceInputs["shouldSkipCrds"] = state ? state.shouldSkipCrds : undefined;
            resourceInputs["shouldSkipRenderSubchartNotes"] = state ? state.shouldSkipRenderSubchartNotes : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["testLoadBalancerConfig"] = state ? state.testLoadBalancerConfig : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeoutInSeconds"] = state ? state.timeoutInSeconds : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["trafficShiftTarget"] = state ? state.trafficShiftTarget : undefined;
            resourceInputs["valuesArtifactIds"] = state ? state.valuesArtifactIds : undefined;
            resourceInputs["waitCriteria"] = state ? state.waitCriteria : undefined;
        } else {
            const args = argsOrState as DevopsDeployStageArgs | undefined;
            if ((!args || args.deployPipelineId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deployPipelineId'");
            }
            if ((!args || args.deployStagePredecessorCollection === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deployStagePredecessorCollection'");
            }
            if ((!args || args.deployStageType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deployStageType'");
            }
            resourceInputs["approvalPolicy"] = args ? args.approvalPolicy : undefined;
            resourceInputs["areHooksEnabled"] = args ? args.areHooksEnabled : undefined;
            resourceInputs["blueBackendIps"] = args ? args.blueBackendIps : undefined;
            resourceInputs["blueGreenStrategy"] = args ? args.blueGreenStrategy : undefined;
            resourceInputs["canaryStrategy"] = args ? args.canaryStrategy : undefined;
            resourceInputs["commandSpecDeployArtifactId"] = args ? args.commandSpecDeployArtifactId : undefined;
            resourceInputs["computeInstanceGroupBlueGreenDeploymentDeployStageId"] = args ? args.computeInstanceGroupBlueGreenDeploymentDeployStageId : undefined;
            resourceInputs["computeInstanceGroupCanaryDeployStageId"] = args ? args.computeInstanceGroupCanaryDeployStageId : undefined;
            resourceInputs["computeInstanceGroupCanaryTrafficShiftDeployStageId"] = args ? args.computeInstanceGroupCanaryTrafficShiftDeployStageId : undefined;
            resourceInputs["computeInstanceGroupDeployEnvironmentId"] = args ? args.computeInstanceGroupDeployEnvironmentId : undefined;
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["containerConfig"] = args ? args.containerConfig : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["deployArtifactId"] = args ? args.deployArtifactId : undefined;
            resourceInputs["deployArtifactIds"] = args ? args.deployArtifactIds : undefined;
            resourceInputs["deployEnvironmentIdA"] = args ? args.deployEnvironmentIdA : undefined;
            resourceInputs["deployEnvironmentIdB"] = args ? args.deployEnvironmentIdB : undefined;
            resourceInputs["deployPipelineId"] = args ? args.deployPipelineId : undefined;
            resourceInputs["deployStagePredecessorCollection"] = args ? args.deployStagePredecessorCollection : undefined;
            resourceInputs["deployStageType"] = args ? args.deployStageType : undefined;
            resourceInputs["deploymentSpecDeployArtifactId"] = args ? args.deploymentSpecDeployArtifactId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["dockerImageDeployArtifactId"] = args ? args.dockerImageDeployArtifactId : undefined;
            resourceInputs["failurePolicy"] = args ? args.failurePolicy : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["functionDeployEnvironmentId"] = args ? args.functionDeployEnvironmentId : undefined;
            resourceInputs["functionTimeoutInSeconds"] = args ? args.functionTimeoutInSeconds : undefined;
            resourceInputs["greenBackendIps"] = args ? args.greenBackendIps : undefined;
            resourceInputs["helmChartDeployArtifactId"] = args ? args.helmChartDeployArtifactId : undefined;
            resourceInputs["helmCommandArtifactIds"] = args ? args.helmCommandArtifactIds : undefined;
            resourceInputs["isAsync"] = args ? args.isAsync : undefined;
            resourceInputs["isDebugEnabled"] = args ? args.isDebugEnabled : undefined;
            resourceInputs["isForceEnabled"] = args ? args.isForceEnabled : undefined;
            resourceInputs["isUninstallOnStageDelete"] = args ? args.isUninstallOnStageDelete : undefined;
            resourceInputs["isValidationEnabled"] = args ? args.isValidationEnabled : undefined;
            resourceInputs["kubernetesManifestDeployArtifactIds"] = args ? args.kubernetesManifestDeployArtifactIds : undefined;
            resourceInputs["loadBalancerConfig"] = args ? args.loadBalancerConfig : undefined;
            resourceInputs["maxHistory"] = args ? args.maxHistory : undefined;
            resourceInputs["maxMemoryInMbs"] = args ? args.maxMemoryInMbs : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["okeBlueGreenDeployStageId"] = args ? args.okeBlueGreenDeployStageId : undefined;
            resourceInputs["okeCanaryDeployStageId"] = args ? args.okeCanaryDeployStageId : undefined;
            resourceInputs["okeCanaryTrafficShiftDeployStageId"] = args ? args.okeCanaryTrafficShiftDeployStageId : undefined;
            resourceInputs["okeClusterDeployEnvironmentId"] = args ? args.okeClusterDeployEnvironmentId : undefined;
            resourceInputs["productionLoadBalancerConfig"] = args ? args.productionLoadBalancerConfig : undefined;
            resourceInputs["purpose"] = args ? args.purpose : undefined;
            resourceInputs["releaseName"] = args ? args.releaseName : undefined;
            resourceInputs["rollbackPolicy"] = args ? args.rollbackPolicy : undefined;
            resourceInputs["rolloutPolicy"] = args ? args.rolloutPolicy : undefined;
            resourceInputs["setString"] = args ? args.setString : undefined;
            resourceInputs["setValues"] = args ? args.setValues : undefined;
            resourceInputs["shouldCleanupOnFail"] = args ? args.shouldCleanupOnFail : undefined;
            resourceInputs["shouldNotWait"] = args ? args.shouldNotWait : undefined;
            resourceInputs["shouldResetValues"] = args ? args.shouldResetValues : undefined;
            resourceInputs["shouldReuseValues"] = args ? args.shouldReuseValues : undefined;
            resourceInputs["shouldSkipCrds"] = args ? args.shouldSkipCrds : undefined;
            resourceInputs["shouldSkipRenderSubchartNotes"] = args ? args.shouldSkipRenderSubchartNotes : undefined;
            resourceInputs["testLoadBalancerConfig"] = args ? args.testLoadBalancerConfig : undefined;
            resourceInputs["timeoutInSeconds"] = args ? args.timeoutInSeconds : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["trafficShiftTarget"] = args ? args.trafficShiftTarget : undefined;
            resourceInputs["valuesArtifactIds"] = args ? args.valuesArtifactIds : undefined;
            resourceInputs["waitCriteria"] = args ? args.waitCriteria : undefined;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DevopsDeployStage.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DevopsDeployStage resources.
 */
export interface DevopsDeployStageState {
    approvalPolicy?: pulumi.Input<inputs.DevopsDeployStageApprovalPolicy>;
    areHooksEnabled?: pulumi.Input<boolean>;
    blueBackendIps?: pulumi.Input<inputs.DevopsDeployStageBlueBackendIps>;
    blueGreenStrategy?: pulumi.Input<inputs.DevopsDeployStageBlueGreenStrategy>;
    canaryStrategy?: pulumi.Input<inputs.DevopsDeployStageCanaryStrategy>;
    commandSpecDeployArtifactId?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    computeInstanceGroupBlueGreenDeploymentDeployStageId?: pulumi.Input<string>;
    computeInstanceGroupCanaryDeployStageId?: pulumi.Input<string>;
    computeInstanceGroupCanaryTrafficShiftDeployStageId?: pulumi.Input<string>;
    computeInstanceGroupDeployEnvironmentId?: pulumi.Input<string>;
    config?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    containerConfig?: pulumi.Input<inputs.DevopsDeployStageContainerConfig>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    deployArtifactId?: pulumi.Input<string>;
    deployArtifactIds?: pulumi.Input<pulumi.Input<string>[]>;
    deployEnvironmentIdA?: pulumi.Input<string>;
    deployEnvironmentIdB?: pulumi.Input<string>;
    deployPipelineId?: pulumi.Input<string>;
    deployStagePredecessorCollection?: pulumi.Input<inputs.DevopsDeployStageDeployStagePredecessorCollection>;
    deployStageType?: pulumi.Input<string>;
    deploymentSpecDeployArtifactId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    dockerImageDeployArtifactId?: pulumi.Input<string>;
    failurePolicy?: pulumi.Input<inputs.DevopsDeployStageFailurePolicy>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    functionDeployEnvironmentId?: pulumi.Input<string>;
    functionTimeoutInSeconds?: pulumi.Input<number>;
    greenBackendIps?: pulumi.Input<inputs.DevopsDeployStageGreenBackendIps>;
    helmChartDeployArtifactId?: pulumi.Input<string>;
    helmCommandArtifactIds?: pulumi.Input<pulumi.Input<string>[]>;
    isAsync?: pulumi.Input<boolean>;
    isDebugEnabled?: pulumi.Input<boolean>;
    isForceEnabled?: pulumi.Input<boolean>;
    isUninstallOnStageDelete?: pulumi.Input<boolean>;
    isValidationEnabled?: pulumi.Input<boolean>;
    kubernetesManifestDeployArtifactIds?: pulumi.Input<pulumi.Input<string>[]>;
    lifecycleDetails?: pulumi.Input<string>;
    loadBalancerConfig?: pulumi.Input<inputs.DevopsDeployStageLoadBalancerConfig>;
    maxHistory?: pulumi.Input<number>;
    maxMemoryInMbs?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    okeBlueGreenDeployStageId?: pulumi.Input<string>;
    okeCanaryDeployStageId?: pulumi.Input<string>;
    okeCanaryTrafficShiftDeployStageId?: pulumi.Input<string>;
    okeClusterDeployEnvironmentId?: pulumi.Input<string>;
    productionLoadBalancerConfig?: pulumi.Input<inputs.DevopsDeployStageProductionLoadBalancerConfig>;
    projectId?: pulumi.Input<string>;
    purpose?: pulumi.Input<string>;
    releaseName?: pulumi.Input<string>;
    rollbackPolicy?: pulumi.Input<inputs.DevopsDeployStageRollbackPolicy>;
    rolloutPolicy?: pulumi.Input<inputs.DevopsDeployStageRolloutPolicy>;
    setString?: pulumi.Input<inputs.DevopsDeployStageSetString>;
    setValues?: pulumi.Input<inputs.DevopsDeployStageSetValues>;
    shouldCleanupOnFail?: pulumi.Input<boolean>;
    shouldNotWait?: pulumi.Input<boolean>;
    shouldResetValues?: pulumi.Input<boolean>;
    shouldReuseValues?: pulumi.Input<boolean>;
    shouldSkipCrds?: pulumi.Input<boolean>;
    shouldSkipRenderSubchartNotes?: pulumi.Input<boolean>;
    state?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    testLoadBalancerConfig?: pulumi.Input<inputs.DevopsDeployStageTestLoadBalancerConfig>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeoutInSeconds?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.DevopsDeployStageTimeouts>;
    trafficShiftTarget?: pulumi.Input<string>;
    valuesArtifactIds?: pulumi.Input<pulumi.Input<string>[]>;
    waitCriteria?: pulumi.Input<inputs.DevopsDeployStageWaitCriteria>;
}

/**
 * The set of arguments for constructing a DevopsDeployStage resource.
 */
export interface DevopsDeployStageArgs {
    approvalPolicy?: pulumi.Input<inputs.DevopsDeployStageApprovalPolicy>;
    areHooksEnabled?: pulumi.Input<boolean>;
    blueBackendIps?: pulumi.Input<inputs.DevopsDeployStageBlueBackendIps>;
    blueGreenStrategy?: pulumi.Input<inputs.DevopsDeployStageBlueGreenStrategy>;
    canaryStrategy?: pulumi.Input<inputs.DevopsDeployStageCanaryStrategy>;
    commandSpecDeployArtifactId?: pulumi.Input<string>;
    computeInstanceGroupBlueGreenDeploymentDeployStageId?: pulumi.Input<string>;
    computeInstanceGroupCanaryDeployStageId?: pulumi.Input<string>;
    computeInstanceGroupCanaryTrafficShiftDeployStageId?: pulumi.Input<string>;
    computeInstanceGroupDeployEnvironmentId?: pulumi.Input<string>;
    config?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    containerConfig?: pulumi.Input<inputs.DevopsDeployStageContainerConfig>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    deployArtifactId?: pulumi.Input<string>;
    deployArtifactIds?: pulumi.Input<pulumi.Input<string>[]>;
    deployEnvironmentIdA?: pulumi.Input<string>;
    deployEnvironmentIdB?: pulumi.Input<string>;
    deployPipelineId: pulumi.Input<string>;
    deployStagePredecessorCollection: pulumi.Input<inputs.DevopsDeployStageDeployStagePredecessorCollection>;
    deployStageType: pulumi.Input<string>;
    deploymentSpecDeployArtifactId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    dockerImageDeployArtifactId?: pulumi.Input<string>;
    failurePolicy?: pulumi.Input<inputs.DevopsDeployStageFailurePolicy>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    functionDeployEnvironmentId?: pulumi.Input<string>;
    functionTimeoutInSeconds?: pulumi.Input<number>;
    greenBackendIps?: pulumi.Input<inputs.DevopsDeployStageGreenBackendIps>;
    helmChartDeployArtifactId?: pulumi.Input<string>;
    helmCommandArtifactIds?: pulumi.Input<pulumi.Input<string>[]>;
    isAsync?: pulumi.Input<boolean>;
    isDebugEnabled?: pulumi.Input<boolean>;
    isForceEnabled?: pulumi.Input<boolean>;
    isUninstallOnStageDelete?: pulumi.Input<boolean>;
    isValidationEnabled?: pulumi.Input<boolean>;
    kubernetesManifestDeployArtifactIds?: pulumi.Input<pulumi.Input<string>[]>;
    loadBalancerConfig?: pulumi.Input<inputs.DevopsDeployStageLoadBalancerConfig>;
    maxHistory?: pulumi.Input<number>;
    maxMemoryInMbs?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    okeBlueGreenDeployStageId?: pulumi.Input<string>;
    okeCanaryDeployStageId?: pulumi.Input<string>;
    okeCanaryTrafficShiftDeployStageId?: pulumi.Input<string>;
    okeClusterDeployEnvironmentId?: pulumi.Input<string>;
    productionLoadBalancerConfig?: pulumi.Input<inputs.DevopsDeployStageProductionLoadBalancerConfig>;
    purpose?: pulumi.Input<string>;
    releaseName?: pulumi.Input<string>;
    rollbackPolicy?: pulumi.Input<inputs.DevopsDeployStageRollbackPolicy>;
    rolloutPolicy?: pulumi.Input<inputs.DevopsDeployStageRolloutPolicy>;
    setString?: pulumi.Input<inputs.DevopsDeployStageSetString>;
    setValues?: pulumi.Input<inputs.DevopsDeployStageSetValues>;
    shouldCleanupOnFail?: pulumi.Input<boolean>;
    shouldNotWait?: pulumi.Input<boolean>;
    shouldResetValues?: pulumi.Input<boolean>;
    shouldReuseValues?: pulumi.Input<boolean>;
    shouldSkipCrds?: pulumi.Input<boolean>;
    shouldSkipRenderSubchartNotes?: pulumi.Input<boolean>;
    testLoadBalancerConfig?: pulumi.Input<inputs.DevopsDeployStageTestLoadBalancerConfig>;
    timeoutInSeconds?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.DevopsDeployStageTimeouts>;
    trafficShiftTarget?: pulumi.Input<string>;
    valuesArtifactIds?: pulumi.Input<pulumi.Input<string>[]>;
    waitCriteria?: pulumi.Input<inputs.DevopsDeployStageWaitCriteria>;
}
