// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStackMonitoringMonitoredResource(args: GetStackMonitoringMonitoredResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetStackMonitoringMonitoredResourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getStackMonitoringMonitoredResource:getStackMonitoringMonitoredResource", {
        "monitoredResourceId": args.monitoredResourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStackMonitoringMonitoredResource.
 */
export interface GetStackMonitoringMonitoredResourceArgs {
    monitoredResourceId: string;
}

/**
 * A collection of values returned by getStackMonitoringMonitoredResource.
 */
export interface GetStackMonitoringMonitoredResourceResult {
    readonly additionalAliases: outputs.GetStackMonitoringMonitoredResourceAdditionalAlias[];
    readonly additionalCredentials: outputs.GetStackMonitoringMonitoredResourceAdditionalCredential[];
    readonly aliases: outputs.GetStackMonitoringMonitoredResourceAlias[];
    readonly compartmentId: string;
    readonly credentials: outputs.GetStackMonitoringMonitoredResourceCredential[];
    readonly databaseConnectionDetails: outputs.GetStackMonitoringMonitoredResourceDatabaseConnectionDetail[];
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly externalId: string;
    readonly externalResourceId: string;
    readonly freeformTags: {[key: string]: string};
    readonly hostName: string;
    readonly id: string;
    readonly license: string;
    readonly managementAgentId: string;
    readonly monitoredResourceId: string;
    readonly name: string;
    readonly properties: outputs.GetStackMonitoringMonitoredResourceProperty[];
    readonly resourceCategory: string;
    readonly resourceTimeZone: string;
    readonly sourceType: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly tenantId: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly type: string;
}
export function getStackMonitoringMonitoredResourceOutput(args: GetStackMonitoringMonitoredResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStackMonitoringMonitoredResourceResult> {
    return pulumi.output(args).apply((a: any) => getStackMonitoringMonitoredResource(a, opts))
}

/**
 * A collection of arguments for invoking getStackMonitoringMonitoredResource.
 */
export interface GetStackMonitoringMonitoredResourceOutputArgs {
    monitoredResourceId: pulumi.Input<string>;
}
