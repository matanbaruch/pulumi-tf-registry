// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOnesubscriptionSubscribedService(args: GetOnesubscriptionSubscribedServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetOnesubscriptionSubscribedServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOnesubscriptionSubscribedService:getOnesubscriptionSubscribedService", {
        "fields": args.fields,
        "id": args.id,
        "subscribedServiceId": args.subscribedServiceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOnesubscriptionSubscribedService.
 */
export interface GetOnesubscriptionSubscribedServiceArgs {
    fields?: string[];
    id?: string;
    subscribedServiceId: string;
}

/**
 * A collection of values returned by getOnesubscriptionSubscribedService.
 */
export interface GetOnesubscriptionSubscribedServiceResult {
    readonly adminEmail: string;
    readonly agreementId: string;
    readonly agreementName: string;
    readonly agreementType: string;
    readonly availableAmount: string;
    readonly billToAddresses: outputs.GetOnesubscriptionSubscribedServiceBillToAddress[];
    readonly billToContacts: outputs.GetOnesubscriptionSubscribedServiceBillToContact[];
    readonly billToCustomers: outputs.GetOnesubscriptionSubscribedServiceBillToCustomer[];
    readonly billingFrequency: string;
    readonly bookingOptyNumber: string;
    readonly buyerEmail: string;
    readonly commitmentScheduleId: string;
    readonly commitmentServices: outputs.GetOnesubscriptionSubscribedServiceCommitmentService[];
    readonly createdBy: string;
    readonly creditPercentage: string;
    readonly csi: string;
    readonly customerTransactionReference: string;
    readonly dataCenter: string;
    readonly dataCenterRegion: string;
    readonly eligibleToRenew: string;
    readonly endUserAddresses: outputs.GetOnesubscriptionSubscribedServiceEndUserAddress[];
    readonly endUserContacts: outputs.GetOnesubscriptionSubscribedServiceEndUserContact[];
    readonly endUserCustomers: outputs.GetOnesubscriptionSubscribedServiceEndUserCustomer[];
    readonly fields?: string[];
    readonly fulfillmentSet: string;
    readonly fundedAllocationValue: string;
    readonly id: string;
    readonly isAllowance: boolean;
    readonly isCapToPriceList: boolean;
    readonly isCreditEnabled: boolean;
    readonly isHavingUsage: boolean;
    readonly isIntentToPay: boolean;
    readonly isPayg: boolean;
    readonly isSingleRateCard: boolean;
    readonly isVariableCommitment: boolean;
    readonly lineNetAmount: string;
    readonly majorSet: string;
    readonly netUnitPrice: string;
    readonly operationType: string;
    readonly orderHeaderId: string;
    readonly orderLineId: string;
    readonly orderLineNumber: number;
    readonly orderNumber: string;
    readonly orderType: string;
    readonly originalPromoAmount: string;
    readonly overageBillTo: string;
    readonly overageDiscountPercentage: string;
    readonly overagePolicy: string;
    readonly partnerCreditAmount: string;
    readonly partnerTransactionType: string;
    readonly paygPolicy: string;
    readonly paymentMethod: string;
    readonly paymentNumber: string;
    readonly paymentTerms: outputs.GetOnesubscriptionSubscribedServicePaymentTerm[];
    readonly pricePeriod: string;
    readonly pricingModel: string;
    readonly products: outputs.GetOnesubscriptionSubscribedServiceProduct[];
    readonly programType: string;
    readonly promoOrderLineId: string;
    readonly promoType: string;
    readonly promotionPricingType: string;
    readonly provisioningSource: string;
    readonly quantity: string;
    readonly rateCardDiscountPercentage: string;
    readonly rateCards: outputs.GetOnesubscriptionSubscribedServiceRateCard[];
    readonly ratecardType: string;
    readonly renewalOptyId: string;
    readonly renewalOptyNumber: string;
    readonly renewalOptyType: string;
    readonly renewedSubscribedServiceId: string;
    readonly resellerAddresses: outputs.GetOnesubscriptionSubscribedServiceResellerAddress[];
    readonly resellerContacts: outputs.GetOnesubscriptionSubscribedServiceResellerContact[];
    readonly resellerCustomers: outputs.GetOnesubscriptionSubscribedServiceResellerCustomer[];
    readonly revenueLineId: string;
    readonly revenueLineNumber: string;
    readonly revisedArrInLc: string;
    readonly revisedArrInSc: string;
    readonly salesAccountPartyId: string;
    readonly salesChannel: string;
    readonly serialNumber: string;
    readonly serviceToAddresses: outputs.GetOnesubscriptionSubscribedServiceServiceToAddress[];
    readonly serviceToContacts: outputs.GetOnesubscriptionSubscribedServiceServiceToContact[];
    readonly serviceToCustomers: outputs.GetOnesubscriptionSubscribedServiceServiceToCustomer[];
    readonly soldToContacts: outputs.GetOnesubscriptionSubscribedServiceSoldToContact[];
    readonly soldToCustomers: outputs.GetOnesubscriptionSubscribedServiceSoldToCustomer[];
    readonly startDateType: string;
    readonly status: string;
    readonly subscribedServiceId: string;
    readonly subscriptionId: string;
    readonly subscriptionSource: string;
    readonly systemArrInLc: string;
    readonly systemArrInSc: string;
    readonly systemAtrArrInLc: string;
    readonly systemAtrArrInSc: string;
    readonly termValue: string;
    readonly termValueUom: string;
    readonly timeAgreementEnd: string;
    readonly timeCreated: string;
    readonly timeCustomerConfig: string;
    readonly timeEnd: string;
    readonly timeMajorsetEnd: string;
    readonly timeMajorsetStart: string;
    readonly timePaymentExpiry: string;
    readonly timeProvisioned: string;
    readonly timeServiceConfigurationEmailSent: string;
    readonly timeStart: string;
    readonly timeUpdated: string;
    readonly timeWelcomeEmailSent: string;
    readonly totalValue: string;
    readonly transactionExtensionId: string;
    readonly type: string;
    readonly updatedBy: string;
    readonly usedAmount: string;
}
export function getOnesubscriptionSubscribedServiceOutput(args: GetOnesubscriptionSubscribedServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOnesubscriptionSubscribedServiceResult> {
    return pulumi.output(args).apply((a: any) => getOnesubscriptionSubscribedService(a, opts))
}

/**
 * A collection of arguments for invoking getOnesubscriptionSubscribedService.
 */
export interface GetOnesubscriptionSubscribedServiceOutputArgs {
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    subscribedServiceId: pulumi.Input<string>;
}
