// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVaultSecretVersion(args: GetVaultSecretVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetVaultSecretVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getVaultSecretVersion:getVaultSecretVersion", {
        "id": args.id,
        "secretId": args.secretId,
        "secretVersionNumber": args.secretVersionNumber,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVaultSecretVersion.
 */
export interface GetVaultSecretVersionArgs {
    id?: string;
    secretId: string;
    secretVersionNumber: string;
}

/**
 * A collection of values returned by getVaultSecretVersion.
 */
export interface GetVaultSecretVersionResult {
    readonly contentType: string;
    readonly id: string;
    readonly name: string;
    readonly secretId: string;
    readonly secretVersionNumber: string;
    readonly stages: string[];
    readonly timeCreated: string;
    readonly timeOfCurrentVersionExpiry: string;
    readonly timeOfDeletion: string;
    readonly versionNumber: string;
}
export function getVaultSecretVersionOutput(args: GetVaultSecretVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVaultSecretVersionResult> {
    return pulumi.output(args).apply((a: any) => getVaultSecretVersion(a, opts))
}

/**
 * A collection of arguments for invoking getVaultSecretVersion.
 */
export interface GetVaultSecretVersionOutputArgs {
    id?: pulumi.Input<string>;
    secretId: pulumi.Input<string>;
    secretVersionNumber: pulumi.Input<string>;
}
