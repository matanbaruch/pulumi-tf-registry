// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCoreVnic(args: GetCoreVnicArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreVnicResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreVnic:getCoreVnic", {
        "id": args.id,
        "vnicId": args.vnicId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreVnic.
 */
export interface GetCoreVnicArgs {
    id?: string;
    vnicId: string;
}

/**
 * A collection of values returned by getCoreVnic.
 */
export interface GetCoreVnicResult {
    readonly availabilityDomain: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly hostnameLabel: string;
    readonly id: string;
    readonly ipv6addresses: string[];
    readonly isPrimary: boolean;
    readonly macAddress: string;
    readonly nsgIds: string[];
    readonly privateIpAddress: string;
    readonly publicIpAddress: string;
    readonly skipSourceDestCheck: boolean;
    readonly state: string;
    readonly subnetId: string;
    readonly timeCreated: string;
    readonly vlanId: string;
    readonly vnicId: string;
}
export function getCoreVnicOutput(args: GetCoreVnicOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreVnicResult> {
    return pulumi.output(args).apply((a: any) => getCoreVnic(a, opts))
}

/**
 * A collection of arguments for invoking getCoreVnic.
 */
export interface GetCoreVnicOutputArgs {
    id?: pulumi.Input<string>;
    vnicId: pulumi.Input<string>;
}
