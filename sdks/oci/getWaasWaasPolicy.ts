// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWaasWaasPolicy(args: GetWaasWaasPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetWaasWaasPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getWaasWaasPolicy:getWaasWaasPolicy", {
        "id": args.id,
        "waasPolicyId": args.waasPolicyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWaasWaasPolicy.
 */
export interface GetWaasWaasPolicyArgs {
    id?: string;
    waasPolicyId: string;
}

/**
 * A collection of values returned by getWaasWaasPolicy.
 */
export interface GetWaasWaasPolicyResult {
    readonly additionalDomains: string[];
    readonly cname: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly domain: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly originGroups: outputs.GetWaasWaasPolicyOriginGroup[];
    readonly origins: outputs.GetWaasWaasPolicyOrigin[];
    readonly policyConfigs: outputs.GetWaasWaasPolicyPolicyConfig[];
    readonly state: string;
    readonly timeCreated: string;
    readonly waasPolicyId: string;
    readonly wafConfigs: outputs.GetWaasWaasPolicyWafConfig[];
}
export function getWaasWaasPolicyOutput(args: GetWaasWaasPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWaasWaasPolicyResult> {
    return pulumi.output(args).apply((a: any) => getWaasWaasPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getWaasWaasPolicy.
 */
export interface GetWaasWaasPolicyOutputArgs {
    id?: pulumi.Input<string>;
    waasPolicyId: pulumi.Input<string>;
}
