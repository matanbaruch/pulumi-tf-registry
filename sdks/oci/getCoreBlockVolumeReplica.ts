// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCoreBlockVolumeReplica(args: GetCoreBlockVolumeReplicaArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreBlockVolumeReplicaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreBlockVolumeReplica:getCoreBlockVolumeReplica", {
        "blockVolumeReplicaId": args.blockVolumeReplicaId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreBlockVolumeReplica.
 */
export interface GetCoreBlockVolumeReplicaArgs {
    blockVolumeReplicaId: string;
    id?: string;
}

/**
 * A collection of values returned by getCoreBlockVolumeReplica.
 */
export interface GetCoreBlockVolumeReplicaResult {
    readonly availabilityDomain: string;
    readonly blockVolumeId: string;
    readonly blockVolumeReplicaId: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly sizeInGbs: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeLastSynced: string;
    readonly volumeGroupReplicaId: string;
}
export function getCoreBlockVolumeReplicaOutput(args: GetCoreBlockVolumeReplicaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreBlockVolumeReplicaResult> {
    return pulumi.output(args).apply((a: any) => getCoreBlockVolumeReplica(a, opts))
}

/**
 * A collection of arguments for invoking getCoreBlockVolumeReplica.
 */
export interface GetCoreBlockVolumeReplicaOutputArgs {
    blockVolumeReplicaId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
