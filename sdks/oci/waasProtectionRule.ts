// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WaasProtectionRule extends pulumi.CustomResource {
    /**
     * Get an existing WaasProtectionRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WaasProtectionRuleState, opts?: pulumi.CustomResourceOptions): WaasProtectionRule {
        return new WaasProtectionRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/waasProtectionRule:WaasProtectionRule';

    /**
     * Returns true if the given object is an instance of WaasProtectionRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WaasProtectionRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WaasProtectionRule.__pulumiType;
    }

    public readonly action!: pulumi.Output<string>;
    public /*out*/ readonly description!: pulumi.Output<string>;
    public readonly exclusions!: pulumi.Output<outputs.WaasProtectionRuleExclusion[] | undefined>;
    public readonly key!: pulumi.Output<string>;
    public /*out*/ readonly labels!: pulumi.Output<string[]>;
    public /*out*/ readonly modSecurityRuleIds!: pulumi.Output<string[]>;
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.WaasProtectionRuleTimeouts | undefined>;
    public readonly waasPolicyId!: pulumi.Output<string>;

    /**
     * Create a WaasProtectionRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WaasProtectionRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WaasProtectionRuleArgs | WaasProtectionRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WaasProtectionRuleState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["exclusions"] = state ? state.exclusions : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["modSecurityRuleIds"] = state ? state.modSecurityRuleIds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["waasPolicyId"] = state ? state.waasPolicyId : undefined;
        } else {
            const args = argsOrState as WaasProtectionRuleArgs | undefined;
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.waasPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'waasPolicyId'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["exclusions"] = args ? args.exclusions : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["waasPolicyId"] = args ? args.waasPolicyId : undefined;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["modSecurityRuleIds"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WaasProtectionRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WaasProtectionRule resources.
 */
export interface WaasProtectionRuleState {
    action?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    exclusions?: pulumi.Input<pulumi.Input<inputs.WaasProtectionRuleExclusion>[]>;
    key?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    modSecurityRuleIds?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.WaasProtectionRuleTimeouts>;
    waasPolicyId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WaasProtectionRule resource.
 */
export interface WaasProtectionRuleArgs {
    action?: pulumi.Input<string>;
    exclusions?: pulumi.Input<pulumi.Input<inputs.WaasProtectionRuleExclusion>[]>;
    key: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.WaasProtectionRuleTimeouts>;
    waasPolicyId: pulumi.Input<string>;
}
