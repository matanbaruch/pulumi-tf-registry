// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMediaServicesMediaAssetDistributionChannelAttachment(args: GetMediaServicesMediaAssetDistributionChannelAttachmentArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaServicesMediaAssetDistributionChannelAttachmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMediaServicesMediaAssetDistributionChannelAttachment:getMediaServicesMediaAssetDistributionChannelAttachment", {
        "distributionChannelId": args.distributionChannelId,
        "id": args.id,
        "isLockOverride": args.isLockOverride,
        "locks": args.locks,
        "mediaAssetId": args.mediaAssetId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMediaServicesMediaAssetDistributionChannelAttachment.
 */
export interface GetMediaServicesMediaAssetDistributionChannelAttachmentArgs {
    distributionChannelId: string;
    id?: string;
    isLockOverride?: boolean;
    locks?: inputs.GetMediaServicesMediaAssetDistributionChannelAttachmentLock[];
    mediaAssetId: string;
}

/**
 * A collection of values returned by getMediaServicesMediaAssetDistributionChannelAttachment.
 */
export interface GetMediaServicesMediaAssetDistributionChannelAttachmentResult {
    readonly displayName: string;
    readonly distributionChannelId: string;
    readonly id: string;
    readonly isLockOverride: boolean;
    readonly locks?: outputs.GetMediaServicesMediaAssetDistributionChannelAttachmentLock[];
    readonly mediaAssetId: string;
    readonly mediaWorkflowJobId: string;
    readonly metadataRef: string;
    readonly state: string;
    readonly version: string;
}
export function getMediaServicesMediaAssetDistributionChannelAttachmentOutput(args: GetMediaServicesMediaAssetDistributionChannelAttachmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediaServicesMediaAssetDistributionChannelAttachmentResult> {
    return pulumi.output(args).apply((a: any) => getMediaServicesMediaAssetDistributionChannelAttachment(a, opts))
}

/**
 * A collection of arguments for invoking getMediaServicesMediaAssetDistributionChannelAttachment.
 */
export interface GetMediaServicesMediaAssetDistributionChannelAttachmentOutputArgs {
    distributionChannelId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isLockOverride?: pulumi.Input<boolean>;
    locks?: pulumi.Input<pulumi.Input<inputs.GetMediaServicesMediaAssetDistributionChannelAttachmentLockArgs>[]>;
    mediaAssetId: pulumi.Input<string>;
}
