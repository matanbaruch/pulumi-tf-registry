// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDnsRecords(args: GetDnsRecordsArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsRecordsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDnsRecords:getDnsRecords", {
        "compartmentId": args.compartmentId,
        "domain": args.domain,
        "domainContains": args.domainContains,
        "filters": args.filters,
        "id": args.id,
        "rtype": args.rtype,
        "sortBy": args.sortBy,
        "sortOrder": args.sortOrder,
        "zoneNameOrId": args.zoneNameOrId,
        "zoneVersion": args.zoneVersion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnsRecords.
 */
export interface GetDnsRecordsArgs {
    compartmentId?: string;
    domain?: string;
    domainContains?: string;
    filters?: inputs.GetDnsRecordsFilter[];
    id?: string;
    rtype?: string;
    sortBy?: string;
    sortOrder?: string;
    /**
     * @deprecated Deprecated
     */
    zoneNameOrId: string;
    zoneVersion?: string;
}

/**
 * A collection of values returned by getDnsRecords.
 */
export interface GetDnsRecordsResult {
    readonly compartmentId?: string;
    readonly domain?: string;
    readonly domainContains?: string;
    readonly filters?: outputs.GetDnsRecordsFilter[];
    readonly id: string;
    readonly records: outputs.GetDnsRecordsRecord[];
    readonly rtype?: string;
    readonly sortBy?: string;
    readonly sortOrder?: string;
    /**
     * @deprecated Deprecated
     */
    readonly zoneNameOrId: string;
    readonly zoneVersion?: string;
}
export function getDnsRecordsOutput(args: GetDnsRecordsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDnsRecordsResult> {
    return pulumi.output(args).apply((a: any) => getDnsRecords(a, opts))
}

/**
 * A collection of arguments for invoking getDnsRecords.
 */
export interface GetDnsRecordsOutputArgs {
    compartmentId?: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    domainContains?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDnsRecordsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    rtype?: pulumi.Input<string>;
    sortBy?: pulumi.Input<string>;
    sortOrder?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    zoneNameOrId: pulumi.Input<string>;
    zoneVersion?: pulumi.Input<string>;
}
