// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AdmKnowledgeBaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AdmRemediationRecipeDetectConfiguration {
    exclusions?: pulumi.Input<pulumi.Input<string>[]>;
    maxPermissibleCvssV2score?: pulumi.Input<number>;
    maxPermissibleCvssV3score?: pulumi.Input<number>;
    maxPermissibleSeverity?: pulumi.Input<string>;
    upgradePolicy?: pulumi.Input<string>;
}

export interface AdmRemediationRecipeNetworkConfiguration {
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId: pulumi.Input<string>;
}

export interface AdmRemediationRecipeScmConfiguration {
    branch: pulumi.Input<string>;
    buildFileLocation?: pulumi.Input<string>;
    externalScmType?: pulumi.Input<string>;
    isAutomergeEnabled: pulumi.Input<boolean>;
    ociCodeRepositoryId?: pulumi.Input<string>;
    patSecretId?: pulumi.Input<string>;
    repositoryUrl?: pulumi.Input<string>;
    scmType: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface AdmRemediationRecipeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AdmRemediationRecipeVerifyConfiguration {
    additionalParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    buildServiceType: pulumi.Input<string>;
    jenkinsUrl?: pulumi.Input<string>;
    jobName?: pulumi.Input<string>;
    patSecretId?: pulumi.Input<string>;
    pipelineId?: pulumi.Input<string>;
    repositoryUrl?: pulumi.Input<string>;
    triggerSecretId?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    workflowName?: pulumi.Input<string>;
}

export interface AdmRemediationRunStage {
    summary: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeFinished: pulumi.Input<string>;
    timeStarted: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AdmRemediationRunTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AdmVulnerabilityAuditApplicationDependency {
    applicationDependencyNodeIds?: pulumi.Input<pulumi.Input<string>[]>;
    gav?: pulumi.Input<string>;
    nodeId: pulumi.Input<string>;
    purl?: pulumi.Input<string>;
}

export interface AdmVulnerabilityAuditConfiguration {
    exclusions?: pulumi.Input<pulumi.Input<string>[]>;
    maxPermissibleCvssV2score?: pulumi.Input<number>;
    maxPermissibleCvssV3score?: pulumi.Input<number>;
    maxPermissibleSeverity?: pulumi.Input<string>;
}

export interface AdmVulnerabilityAuditSource {
    description?: pulumi.Input<string>;
    ociResourceId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AdmVulnerabilityAuditTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AdmVulnerabilityAuditUsageData {
    bucket: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    object: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface AdmVulnerabilityAuditVulnerability {
    cvssV2score: pulumi.Input<number>;
    cvssV3score: pulumi.Input<number>;
    id: pulumi.Input<string>;
    isFalsePositive: pulumi.Input<boolean>;
    isIgnored: pulumi.Input<boolean>;
    severity: pulumi.Input<string>;
    source: pulumi.Input<string>;
}

export interface AiAnomalyDetectionAiPrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AiAnomalyDetectionDataAssetDataSourceDetails {
    atpPasswordSecretId?: pulumi.Input<string>;
    atpUserName?: pulumi.Input<string>;
    bucket?: pulumi.Input<string>;
    cwalletFileSecretId?: pulumi.Input<string>;
    dataSourceType: pulumi.Input<string>;
    databaseName?: pulumi.Input<string>;
    ewalletFileSecretId?: pulumi.Input<string>;
    keyStoreFileSecretId?: pulumi.Input<string>;
    measurementName?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    object?: pulumi.Input<string>;
    ojdbcFileSecretId?: pulumi.Input<string>;
    passwordSecretId?: pulumi.Input<string>;
    tableName?: pulumi.Input<string>;
    tnsnamesFileSecretId?: pulumi.Input<string>;
    truststoreFileSecretId?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
    versionSpecificDetails?: pulumi.Input<inputs.AiAnomalyDetectionDataAssetDataSourceDetailsVersionSpecificDetails>;
    walletPasswordSecretId?: pulumi.Input<string>;
}

export interface AiAnomalyDetectionDataAssetDataSourceDetailsVersionSpecificDetails {
    bucket?: pulumi.Input<string>;
    databaseName?: pulumi.Input<string>;
    influxVersion: pulumi.Input<string>;
    organizationName?: pulumi.Input<string>;
    retentionPolicyName?: pulumi.Input<string>;
}

export interface AiAnomalyDetectionDataAssetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AiAnomalyDetectionDetectAnomalyJobInputDetails {
    content?: pulumi.Input<string>;
    contentType?: pulumi.Input<string>;
    datas?: pulumi.Input<pulumi.Input<inputs.AiAnomalyDetectionDetectAnomalyJobInputDetailsData>[]>;
    inputType: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    objectLocations?: pulumi.Input<pulumi.Input<inputs.AiAnomalyDetectionDetectAnomalyJobInputDetailsObjectLocation>[]>;
    signalNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AiAnomalyDetectionDetectAnomalyJobInputDetailsData {
    timestamp?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface AiAnomalyDetectionDetectAnomalyJobInputDetailsObjectLocation {
    bucket?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    object?: pulumi.Input<string>;
}

export interface AiAnomalyDetectionDetectAnomalyJobOutputDetails {
    bucket: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    outputType: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
}

export interface AiAnomalyDetectionDetectAnomalyJobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AiAnomalyDetectionModelModelTrainingDetails {
    algorithmHint?: pulumi.Input<string>;
    dataAssetIds: pulumi.Input<pulumi.Input<string>[]>;
    targetFap?: pulumi.Input<number>;
    trainingFraction?: pulumi.Input<number>;
    windowSize?: pulumi.Input<number>;
}

export interface AiAnomalyDetectionModelModelTrainingResult {
    fap: pulumi.Input<number>;
    isTrainingGoalAchieved: pulumi.Input<boolean>;
    mae: pulumi.Input<number>;
    maxInferenceSyncRows: pulumi.Input<number>;
    multivariateFap: pulumi.Input<number>;
    rmse: pulumi.Input<number>;
    rowReductionDetails: pulumi.Input<pulumi.Input<inputs.AiAnomalyDetectionModelModelTrainingResultRowReductionDetail>[]>;
    signalDetails: pulumi.Input<pulumi.Input<inputs.AiAnomalyDetectionModelModelTrainingResultSignalDetail>[]>;
    warning: pulumi.Input<string>;
    windowSize: pulumi.Input<number>;
}

export interface AiAnomalyDetectionModelModelTrainingResultRowReductionDetail {
    isReductionEnabled: pulumi.Input<boolean>;
    reductionMethod: pulumi.Input<string>;
    reductionPercentage: pulumi.Input<number>;
}

export interface AiAnomalyDetectionModelModelTrainingResultSignalDetail {
    details: pulumi.Input<string>;
    fap: pulumi.Input<number>;
    isQuantized: pulumi.Input<boolean>;
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
    mviRatio: pulumi.Input<number>;
    signalName: pulumi.Input<string>;
    status: pulumi.Input<string>;
    std: pulumi.Input<number>;
}

export interface AiAnomalyDetectionModelTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AiAnomalyDetectionProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AiDocumentModelComponentModel {
    modelId?: pulumi.Input<string>;
}

export interface AiDocumentModelMetric {
    datasetSummaries: pulumi.Input<pulumi.Input<inputs.AiDocumentModelMetricDatasetSummary>[]>;
    labelMetricsReports: pulumi.Input<pulumi.Input<inputs.AiDocumentModelMetricLabelMetricsReport>[]>;
    modelType: pulumi.Input<string>;
    overallMetricsReports: pulumi.Input<pulumi.Input<inputs.AiDocumentModelMetricOverallMetricsReport>[]>;
}

export interface AiDocumentModelMetricDatasetSummary {
    testSampleCount: pulumi.Input<number>;
    trainingSampleCount: pulumi.Input<number>;
    validationSampleCount: pulumi.Input<number>;
}

export interface AiDocumentModelMetricLabelMetricsReport {
    confidenceEntries: pulumi.Input<pulumi.Input<inputs.AiDocumentModelMetricLabelMetricsReportConfidenceEntry>[]>;
    documentCount: pulumi.Input<number>;
    label: pulumi.Input<string>;
    meanAveragePrecision: pulumi.Input<number>;
}

export interface AiDocumentModelMetricLabelMetricsReportConfidenceEntry {
    accuracy: pulumi.Input<number>;
    f1score: pulumi.Input<number>;
    precision: pulumi.Input<number>;
    recall: pulumi.Input<number>;
    threshold: pulumi.Input<number>;
}

export interface AiDocumentModelMetricOverallMetricsReport {
    confidenceEntries: pulumi.Input<pulumi.Input<inputs.AiDocumentModelMetricOverallMetricsReportConfidenceEntry>[]>;
    documentCount: pulumi.Input<number>;
    meanAveragePrecision: pulumi.Input<number>;
}

export interface AiDocumentModelMetricOverallMetricsReportConfidenceEntry {
    accuracy: pulumi.Input<number>;
    f1score: pulumi.Input<number>;
    precision: pulumi.Input<number>;
    recall: pulumi.Input<number>;
    threshold: pulumi.Input<number>;
}

export interface AiDocumentModelTestingDataset {
    bucket?: pulumi.Input<string>;
    datasetId?: pulumi.Input<string>;
    datasetType: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    object?: pulumi.Input<string>;
}

export interface AiDocumentModelTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AiDocumentModelTrainingDataset {
    bucket?: pulumi.Input<string>;
    datasetId?: pulumi.Input<string>;
    datasetType: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    object?: pulumi.Input<string>;
}

export interface AiDocumentModelValidationDataset {
    bucket?: pulumi.Input<string>;
    datasetId?: pulumi.Input<string>;
    datasetType: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    object?: pulumi.Input<string>;
}

export interface AiDocumentProcessorJobInputLocation {
    data?: pulumi.Input<string>;
    objectLocations?: pulumi.Input<pulumi.Input<inputs.AiDocumentProcessorJobInputLocationObjectLocation>[]>;
    sourceType: pulumi.Input<string>;
}

export interface AiDocumentProcessorJobInputLocationObjectLocation {
    bucket?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    object?: pulumi.Input<string>;
}

export interface AiDocumentProcessorJobOutputLocation {
    bucket: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    prefix: pulumi.Input<string>;
}

export interface AiDocumentProcessorJobProcessorConfig {
    documentType?: pulumi.Input<string>;
    features: pulumi.Input<pulumi.Input<inputs.AiDocumentProcessorJobProcessorConfigFeature>[]>;
    isZipOutputEnabled?: pulumi.Input<boolean>;
    language?: pulumi.Input<string>;
    processorType: pulumi.Input<string>;
}

export interface AiDocumentProcessorJobProcessorConfigFeature {
    featureType: pulumi.Input<string>;
    generateSearchablePdf?: pulumi.Input<boolean>;
    maxResults?: pulumi.Input<number>;
    modelId?: pulumi.Input<string>;
    tenancyId?: pulumi.Input<string>;
}

export interface AiDocumentProcessorJobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AiDocumentProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AiLanguageEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AiLanguageModelEvaluationResult {
    classMetrics: pulumi.Input<pulumi.Input<inputs.AiLanguageModelEvaluationResultClassMetric>[]>;
    confusionMatrix: pulumi.Input<string>;
    entityMetrics: pulumi.Input<pulumi.Input<inputs.AiLanguageModelEvaluationResultEntityMetric>[]>;
    labels: pulumi.Input<pulumi.Input<string>[]>;
    metrics: pulumi.Input<pulumi.Input<inputs.AiLanguageModelEvaluationResultMetric>[]>;
    modelType: pulumi.Input<string>;
}

export interface AiLanguageModelEvaluationResultClassMetric {
    f1: pulumi.Input<number>;
    label: pulumi.Input<string>;
    precision: pulumi.Input<number>;
    recall: pulumi.Input<number>;
    support: pulumi.Input<number>;
}

export interface AiLanguageModelEvaluationResultEntityMetric {
    f1: pulumi.Input<number>;
    label: pulumi.Input<string>;
    precision: pulumi.Input<number>;
    recall: pulumi.Input<number>;
}

export interface AiLanguageModelEvaluationResultMetric {
    accuracy: pulumi.Input<number>;
    macroF1: pulumi.Input<number>;
    macroPrecision: pulumi.Input<number>;
    macroRecall: pulumi.Input<number>;
    microF1: pulumi.Input<number>;
    microPrecision: pulumi.Input<number>;
    microRecall: pulumi.Input<number>;
    weightedF1: pulumi.Input<number>;
    weightedPrecision: pulumi.Input<number>;
    weightedRecall: pulumi.Input<number>;
}

export interface AiLanguageModelModelDetails {
    classificationMode?: pulumi.Input<inputs.AiLanguageModelModelDetailsClassificationMode>;
    languageCode?: pulumi.Input<string>;
    modelType: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface AiLanguageModelModelDetailsClassificationMode {
    classificationMode: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface AiLanguageModelTestStrategy {
    strategyType: pulumi.Input<string>;
    testingDataset: pulumi.Input<inputs.AiLanguageModelTestStrategyTestingDataset>;
    validationDataset?: pulumi.Input<inputs.AiLanguageModelTestStrategyValidationDataset>;
}

export interface AiLanguageModelTestStrategyTestingDataset {
    datasetId?: pulumi.Input<string>;
    datasetType: pulumi.Input<string>;
    locationDetails?: pulumi.Input<inputs.AiLanguageModelTestStrategyTestingDatasetLocationDetails>;
}

export interface AiLanguageModelTestStrategyTestingDatasetLocationDetails {
    bucket: pulumi.Input<string>;
    locationType: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    objectNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AiLanguageModelTestStrategyValidationDataset {
    datasetId?: pulumi.Input<string>;
    datasetType: pulumi.Input<string>;
    locationDetails?: pulumi.Input<inputs.AiLanguageModelTestStrategyValidationDatasetLocationDetails>;
}

export interface AiLanguageModelTestStrategyValidationDatasetLocationDetails {
    bucket: pulumi.Input<string>;
    locationType: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    objectNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AiLanguageModelTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AiLanguageModelTrainingDataset {
    datasetId?: pulumi.Input<string>;
    datasetType: pulumi.Input<string>;
    locationDetails?: pulumi.Input<inputs.AiLanguageModelTrainingDatasetLocationDetails>;
}

export interface AiLanguageModelTrainingDatasetLocationDetails {
    bucket: pulumi.Input<string>;
    locationType: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    objectNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AiLanguageProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AiVisionModelTestingDataset {
    bucket?: pulumi.Input<string>;
    datasetId?: pulumi.Input<string>;
    datasetType: pulumi.Input<string>;
    namespaceName?: pulumi.Input<string>;
    object?: pulumi.Input<string>;
}

export interface AiVisionModelTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AiVisionModelTrainingDataset {
    bucket?: pulumi.Input<string>;
    datasetId?: pulumi.Input<string>;
    datasetType: pulumi.Input<string>;
    namespaceName?: pulumi.Input<string>;
    object?: pulumi.Input<string>;
}

export interface AiVisionModelValidationDataset {
    bucket?: pulumi.Input<string>;
    datasetId?: pulumi.Input<string>;
    datasetType: pulumi.Input<string>;
    namespaceName?: pulumi.Input<string>;
    object?: pulumi.Input<string>;
}

export interface AiVisionProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AnalyticsAnalyticsInstanceCapacity {
    capacityType: pulumi.Input<string>;
    capacityValue: pulumi.Input<number>;
}

export interface AnalyticsAnalyticsInstanceNetworkEndpointDetails {
    networkEndpointType: pulumi.Input<string>;
    networkSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    vcnId?: pulumi.Input<string>;
    whitelistedIps?: pulumi.Input<pulumi.Input<string>[]>;
    whitelistedServices?: pulumi.Input<pulumi.Input<string>[]>;
    whitelistedVcns?: pulumi.Input<pulumi.Input<inputs.AnalyticsAnalyticsInstanceNetworkEndpointDetailsWhitelistedVcn>[]>;
}

export interface AnalyticsAnalyticsInstanceNetworkEndpointDetailsWhitelistedVcn {
    id?: pulumi.Input<string>;
    whitelistedIps?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AnalyticsAnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone {
    description?: pulumi.Input<string>;
    dnsZone: pulumi.Input<string>;
}

export interface AnalyticsAnalyticsInstancePrivateAccessChannelPrivateSourceScanHost {
    description?: pulumi.Input<string>;
    scanHostname: pulumi.Input<string>;
    scanPort: pulumi.Input<number>;
}

export interface AnalyticsAnalyticsInstancePrivateAccessChannelTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AnalyticsAnalyticsInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AnalyticsAnalyticsInstanceVanityUrlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AnnouncementsServiceAnnouncementSubscriptionFilterGroups {
    filters: pulumi.Input<pulumi.Input<inputs.AnnouncementsServiceAnnouncementSubscriptionFilterGroupsFilter>[]>;
    name?: pulumi.Input<string>;
}

export interface AnnouncementsServiceAnnouncementSubscriptionFilterGroupsFilter {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface AnnouncementsServiceAnnouncementSubscriptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AnnouncementsServiceAnnouncementSubscriptionsActionsChangeCompartmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AnnouncementsServiceAnnouncementSubscriptionsFilterGroupFilter {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface AnnouncementsServiceAnnouncementSubscriptionsFilterGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApigatewayApiTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApigatewayApiValidationResult {
    name: pulumi.Input<string>;
    result: pulumi.Input<string>;
}

export interface ApigatewayCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecification {
    loggingPolicies?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationLoggingPolicies>;
    requestPolicies?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPolicies>;
    routes: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRoute>[]>;
}

export interface ApigatewayDeploymentSpecificationLoggingPolicies {
    accessLog?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationLoggingPoliciesAccessLog>;
    executionLog?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationLoggingPoliciesExecutionLog>;
}

export interface ApigatewayDeploymentSpecificationLoggingPoliciesAccessLog {
    isEnabled?: pulumi.Input<boolean>;
}

export interface ApigatewayDeploymentSpecificationLoggingPoliciesExecutionLog {
    isEnabled?: pulumi.Input<boolean>;
    logLevel?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPolicies {
    authentication?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthentication>;
    cors?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesCors>;
    dynamicAuthentication?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthentication>;
    mutualTls?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesMutualTls>;
    rateLimiting?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesRateLimiting>;
    usagePlans?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesUsagePlans>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthentication {
    audiences?: pulumi.Input<pulumi.Input<string>[]>;
    cacheKeys?: pulumi.Input<pulumi.Input<string>[]>;
    functionId?: pulumi.Input<string>;
    isAnonymousAccessAllowed?: pulumi.Input<boolean>;
    issuers?: pulumi.Input<pulumi.Input<string>[]>;
    maxClockSkewInSeconds?: pulumi.Input<number>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    publicKeys?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationPublicKeys>;
    tokenAuthScheme?: pulumi.Input<string>;
    tokenHeader?: pulumi.Input<string>;
    tokenQueryParam?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    validationFailurePolicy?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicy>;
    validationPolicy?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationPolicy>;
    verifyClaims?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationVerifyClaim>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationPublicKeys {
    isSslVerifyDisabled?: pulumi.Input<boolean>;
    keys?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationPublicKeysKey>[]>;
    maxCacheDurationInHours?: pulumi.Input<number>;
    type: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationPublicKeysKey {
    alg?: pulumi.Input<string>;
    e?: pulumi.Input<string>;
    format: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    keyOps?: pulumi.Input<pulumi.Input<string>[]>;
    kid?: pulumi.Input<string>;
    kty?: pulumi.Input<string>;
    n?: pulumi.Input<string>;
    use?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicy {
    clientDetails?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyClientDetails>;
    fallbackRedirectPath?: pulumi.Input<string>;
    logoutPath?: pulumi.Input<string>;
    maxExpiryDurationInHours?: pulumi.Input<number>;
    responseCode?: pulumi.Input<string>;
    responseHeaderTransformations?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformations>;
    responseMessage?: pulumi.Input<string>;
    responseType?: pulumi.Input<string>;
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    sourceUriDetails?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicySourceUriDetails>;
    type: pulumi.Input<string>;
    useCookiesForIntermediateSteps?: pulumi.Input<boolean>;
    useCookiesForSession?: pulumi.Input<boolean>;
    usePkce?: pulumi.Input<boolean>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyClientDetails {
    clientId?: pulumi.Input<string>;
    clientSecretId?: pulumi.Input<string>;
    clientSecretVersionNumber?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformations {
    filterHeaders?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsFilterHeaders>;
    renameHeaders?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsRenameHeaders>;
    setHeaders?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsSetHeaders>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsFilterHeaders {
    items?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsFilterHeadersItem>[]>;
    type?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsFilterHeadersItem {
    name?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsRenameHeaders {
    items?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsRenameHeadersItem>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsRenameHeadersItem {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsSetHeaders {
    items?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsSetHeadersItem>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicyResponseHeaderTransformationsSetHeadersItem {
    ifExists?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationFailurePolicySourceUriDetails {
    type: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationPolicy {
    additionalValidationPolicy?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyAdditionalValidationPolicy>;
    clientDetails?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyClientDetails>;
    isSslVerifyDisabled?: pulumi.Input<boolean>;
    keys?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyKey>[]>;
    maxCacheDurationInHours?: pulumi.Input<number>;
    sourceUriDetails?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationPolicySourceUriDetails>;
    type: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyAdditionalValidationPolicy {
    audiences?: pulumi.Input<pulumi.Input<string>[]>;
    issuers?: pulumi.Input<pulumi.Input<string>[]>;
    verifyClaims?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyAdditionalValidationPolicyVerifyClaim>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyAdditionalValidationPolicyVerifyClaim {
    isRequired?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyClientDetails {
    clientId?: pulumi.Input<string>;
    clientSecretId?: pulumi.Input<string>;
    clientSecretVersionNumber?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationPolicyKey {
    alg?: pulumi.Input<string>;
    e?: pulumi.Input<string>;
    format: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    keyOps?: pulumi.Input<pulumi.Input<string>[]>;
    kid?: pulumi.Input<string>;
    kty?: pulumi.Input<string>;
    n?: pulumi.Input<string>;
    use?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationValidationPolicySourceUriDetails {
    type: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesAuthenticationVerifyClaim {
    isRequired?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesCors {
    allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    allowedMethods?: pulumi.Input<pulumi.Input<string>[]>;
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    exposedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    isAllowCredentialsEnabled?: pulumi.Input<boolean>;
    maxAgeInSeconds?: pulumi.Input<number>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthentication {
    authenticationServers: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServer>[]>;
    selectionSource: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSource>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServer {
    authenticationServerDetail: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetail>;
    key: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerKey>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetail {
    audiences?: pulumi.Input<pulumi.Input<string>[]>;
    cacheKeys?: pulumi.Input<pulumi.Input<string>[]>;
    functionId?: pulumi.Input<string>;
    isAnonymousAccessAllowed?: pulumi.Input<boolean>;
    issuers?: pulumi.Input<pulumi.Input<string>[]>;
    maxClockSkewInSeconds?: pulumi.Input<number>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    publicKeys?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeys>;
    tokenAuthScheme?: pulumi.Input<string>;
    tokenHeader?: pulumi.Input<string>;
    tokenQueryParam?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    validationFailurePolicy?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicy>;
    validationPolicy?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicy>;
    verifyClaims?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailVerifyClaim>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeys {
    isSslVerifyDisabled?: pulumi.Input<boolean>;
    keys?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeysKey>[]>;
    maxCacheDurationInHours?: pulumi.Input<number>;
    type: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailPublicKeysKey {
    alg?: pulumi.Input<string>;
    e?: pulumi.Input<string>;
    format: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    keyOps?: pulumi.Input<pulumi.Input<string>[]>;
    kid?: pulumi.Input<string>;
    kty?: pulumi.Input<string>;
    n?: pulumi.Input<string>;
    use?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicy {
    clientDetails?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyClientDetails>;
    fallbackRedirectPath?: pulumi.Input<string>;
    logoutPath?: pulumi.Input<string>;
    maxExpiryDurationInHours?: pulumi.Input<number>;
    responseCode?: pulumi.Input<string>;
    responseHeaderTransformations?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformations>;
    responseMessage?: pulumi.Input<string>;
    responseType?: pulumi.Input<string>;
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    sourceUriDetails?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicySourceUriDetails>;
    type: pulumi.Input<string>;
    useCookiesForIntermediateSteps?: pulumi.Input<boolean>;
    useCookiesForSession?: pulumi.Input<boolean>;
    usePkce?: pulumi.Input<boolean>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyClientDetails {
    clientId?: pulumi.Input<string>;
    clientSecretId?: pulumi.Input<string>;
    clientSecretVersionNumber?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformations {
    filterHeaders?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsFilterHeaders>;
    renameHeaders?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsRenameHeaders>;
    setHeaders?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsSetHeaders>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsFilterHeaders {
    items?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsFilterHeadersItem>[]>;
    type?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsFilterHeadersItem {
    name?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsRenameHeaders {
    items?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsRenameHeadersItem>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsRenameHeadersItem {
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsSetHeaders {
    items?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsSetHeadersItem>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicyResponseHeaderTransformationsSetHeadersItem {
    ifExists?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationFailurePolicySourceUriDetails {
    type: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicy {
    additionalValidationPolicy?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicy>;
    clientDetails?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyClientDetails>;
    isSslVerifyDisabled?: pulumi.Input<boolean>;
    keys?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyKey>[]>;
    maxCacheDurationInHours?: pulumi.Input<number>;
    sourceUriDetails?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicySourceUriDetails>;
    type: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicy {
    audiences?: pulumi.Input<pulumi.Input<string>[]>;
    issuers?: pulumi.Input<pulumi.Input<string>[]>;
    verifyClaims?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyVerifyClaim>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyAdditionalValidationPolicyVerifyClaim {
    isRequired?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyClientDetails {
    clientId?: pulumi.Input<string>;
    clientSecretId?: pulumi.Input<string>;
    clientSecretVersionNumber?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicyKey {
    alg?: pulumi.Input<string>;
    e?: pulumi.Input<string>;
    format: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    keyOps?: pulumi.Input<pulumi.Input<string>[]>;
    kid?: pulumi.Input<string>;
    kty?: pulumi.Input<string>;
    n?: pulumi.Input<string>;
    use?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailValidationPolicySourceUriDetails {
    type: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerAuthenticationServerDetailVerifyClaim {
    isRequired?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationAuthenticationServerKey {
    expression?: pulumi.Input<string>;
    isDefault?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesDynamicAuthenticationSelectionSource {
    selector: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesMutualTls {
    allowedSans?: pulumi.Input<pulumi.Input<string>[]>;
    isVerifiedCertificateRequired?: pulumi.Input<boolean>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesRateLimiting {
    rateInRequestsPerSecond: pulumi.Input<number>;
    rateKey: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRequestPoliciesUsagePlans {
    tokenLocations: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApigatewayDeploymentSpecificationRoute {
    backend: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteBackend>;
    loggingPolicies?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteLoggingPolicies>;
    methods?: pulumi.Input<pulumi.Input<string>[]>;
    path: pulumi.Input<string>;
    requestPolicies?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPolicies>;
    responsePolicies?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteResponsePolicies>;
}

export interface ApigatewayDeploymentSpecificationRouteBackend {
    allowedPostLogoutUris?: pulumi.Input<pulumi.Input<string>[]>;
    body?: pulumi.Input<string>;
    connectTimeoutInSeconds?: pulumi.Input<number>;
    functionId?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteBackendHeader>[]>;
    isSslVerifyDisabled?: pulumi.Input<boolean>;
    postLogoutState?: pulumi.Input<string>;
    readTimeoutInSeconds?: pulumi.Input<number>;
    routingBackends?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteBackendRoutingBackend>[]>;
    selectionSource?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteBackendSelectionSource>;
    sendTimeoutInSeconds?: pulumi.Input<number>;
    status?: pulumi.Input<number>;
    type: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteBackendHeader {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteBackendRoutingBackend {
    backend?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteBackendRoutingBackendBackend>;
    key?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteBackendRoutingBackendKey>;
}

export interface ApigatewayDeploymentSpecificationRouteBackendRoutingBackendBackend {
    body?: pulumi.Input<string>;
    connectTimeoutInSeconds?: pulumi.Input<number>;
    functionId?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteBackendRoutingBackendBackendHeader>[]>;
    isSslVerifyDisabled?: pulumi.Input<boolean>;
    readTimeoutInSeconds?: pulumi.Input<number>;
    sendTimeoutInSeconds?: pulumi.Input<number>;
    status?: pulumi.Input<number>;
    type: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteBackendRoutingBackendBackendHeader {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteBackendRoutingBackendKey {
    expression?: pulumi.Input<string>;
    isDefault?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApigatewayDeploymentSpecificationRouteBackendSelectionSource {
    selector: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteLoggingPolicies {
    accessLog?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteLoggingPoliciesAccessLog>;
    executionLog?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteLoggingPoliciesExecutionLog>;
}

export interface ApigatewayDeploymentSpecificationRouteLoggingPoliciesAccessLog {
    isEnabled?: pulumi.Input<boolean>;
}

export interface ApigatewayDeploymentSpecificationRouteLoggingPoliciesExecutionLog {
    isEnabled?: pulumi.Input<boolean>;
    logLevel?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPolicies {
    authorization?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesAuthorization>;
    bodyValidation?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesBodyValidation>;
    cors?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesCors>;
    headerTransformations?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformations>;
    headerValidations?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderValidations>;
    queryParameterTransformations?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations>;
    queryParameterValidations?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterValidations>;
    responseCacheLookup?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesResponseCacheLookup>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesAuthorization {
    allowedScopes?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesBodyValidation {
    contents?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesBodyValidationContent>[]>;
    required?: pulumi.Input<boolean>;
    validationMode?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesBodyValidationContent {
    mediaType: pulumi.Input<string>;
    validationType: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesCors {
    allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    allowedMethods?: pulumi.Input<pulumi.Input<string>[]>;
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    exposedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    isAllowCredentialsEnabled?: pulumi.Input<boolean>;
    maxAgeInSeconds?: pulumi.Input<number>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformations {
    filterHeaders?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeaders>;
    renameHeaders?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeaders>;
    setHeaders?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeaders>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeaders {
    items: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersItem>[]>;
    type: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersItem {
    name: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeaders {
    items: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersItem>[]>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersItem {
    from: pulumi.Input<string>;
    to: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeaders {
    items: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersItem>[]>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersItem {
    ifExists?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderValidations {
    headers?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader>[]>;
    validationMode?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesHeaderValidationsHeader {
    name: pulumi.Input<string>;
    required?: pulumi.Input<boolean>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations {
    filterQueryParameters?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters>;
    renameQueryParameters?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters>;
    setQueryParameters?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters {
    items: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem>[]>;
    type: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersItem {
    name: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters {
    items: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersItem>[]>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersItem {
    from: pulumi.Input<string>;
    to: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters {
    items: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersItem>[]>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersItem {
    ifExists?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterValidations {
    parameters?: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterValidationsParameter>[]>;
    validationMode?: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesQueryParameterValidationsParameter {
    name: pulumi.Input<string>;
    required?: pulumi.Input<boolean>;
}

export interface ApigatewayDeploymentSpecificationRouteRequestPoliciesResponseCacheLookup {
    cacheKeyAdditions?: pulumi.Input<pulumi.Input<string>[]>;
    isEnabled?: pulumi.Input<boolean>;
    isPrivateCachingEnabled?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePolicies {
    headerTransformations?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformations>;
    responseCacheStore?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesResponseCacheStore>;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformations {
    filterHeaders?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders>;
    renameHeaders?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeaders>;
    setHeaders?: pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeaders>;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeaders {
    items: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem>[]>;
    type: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsFilterHeadersItem {
    name: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeaders {
    items: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeadersItem>[]>;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsRenameHeadersItem {
    from: pulumi.Input<string>;
    to: pulumi.Input<string>;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeaders {
    items: pulumi.Input<pulumi.Input<inputs.ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeadersItem>[]>;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesHeaderTransformationsSetHeadersItem {
    ifExists?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApigatewayDeploymentSpecificationRouteResponsePoliciesResponseCacheStore {
    timeToLiveInSeconds: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface ApigatewayDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApigatewayGatewayCaBundle {
    caBundleId?: pulumi.Input<string>;
    certificateAuthorityId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ApigatewayGatewayIpAddress {
    ipAddress: pulumi.Input<string>;
}

export interface ApigatewayGatewayResponseCacheDetails {
    authenticationSecretId?: pulumi.Input<string>;
    authenticationSecretVersionNumber?: pulumi.Input<string>;
    connectTimeoutInMs?: pulumi.Input<number>;
    isSslEnabled?: pulumi.Input<boolean>;
    isSslVerifyDisabled?: pulumi.Input<boolean>;
    readTimeoutInMs?: pulumi.Input<number>;
    sendTimeoutInMs?: pulumi.Input<number>;
    servers?: pulumi.Input<pulumi.Input<inputs.ApigatewayGatewayResponseCacheDetailsServer>[]>;
    type: pulumi.Input<string>;
}

export interface ApigatewayGatewayResponseCacheDetailsServer {
    host?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
}

export interface ApigatewayGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApigatewaySubscriberClient {
    name: pulumi.Input<string>;
    token: pulumi.Input<string>;
}

export interface ApigatewaySubscriberTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApigatewayUsagePlanEntitlement {
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    quota?: pulumi.Input<inputs.ApigatewayUsagePlanEntitlementQuota>;
    rateLimit?: pulumi.Input<inputs.ApigatewayUsagePlanEntitlementRateLimit>;
    targets?: pulumi.Input<pulumi.Input<inputs.ApigatewayUsagePlanEntitlementTarget>[]>;
}

export interface ApigatewayUsagePlanEntitlementQuota {
    operationOnBreach: pulumi.Input<string>;
    resetPolicy: pulumi.Input<string>;
    unit: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface ApigatewayUsagePlanEntitlementRateLimit {
    unit: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface ApigatewayUsagePlanEntitlementTarget {
    deploymentId: pulumi.Input<string>;
}

export interface ApigatewayUsagePlanTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApmApmDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApmConfigConfigDimension {
    name?: pulumi.Input<string>;
    valueSource?: pulumi.Input<string>;
}

export interface ApmConfigConfigInUseBy {
    configType?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    optionsGroup?: pulumi.Input<string>;
}

export interface ApmConfigConfigMetric {
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    unit?: pulumi.Input<string>;
    valueSource?: pulumi.Input<string>;
}

export interface ApmConfigConfigRule {
    displayName?: pulumi.Input<string>;
    filterText?: pulumi.Input<string>;
    isApplyToErrorSpans?: pulumi.Input<boolean>;
    isEnabled?: pulumi.Input<boolean>;
    priority?: pulumi.Input<number>;
    satisfiedResponseTime?: pulumi.Input<number>;
    toleratingResponseTime?: pulumi.Input<number>;
}

export interface ApmConfigConfigTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApmSyntheticsDedicatedVantagePointDvpStackDetails {
    dvpStackId: pulumi.Input<string>;
    dvpStackType: pulumi.Input<string>;
    dvpStreamId: pulumi.Input<string>;
    dvpVersion: pulumi.Input<string>;
}

export interface ApmSyntheticsDedicatedVantagePointMonitorStatusCountMap {
    disabled: pulumi.Input<number>;
    enabled: pulumi.Input<number>;
    invalid: pulumi.Input<number>;
    total: pulumi.Input<number>;
}

export interface ApmSyntheticsDedicatedVantagePointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorAvailabilityConfiguration {
    maxAllowedFailuresPerInterval?: pulumi.Input<number>;
    minAllowedRunsPerInterval?: pulumi.Input<number>;
}

export interface ApmSyntheticsMonitorConfiguration {
    clientCertificateDetails?: pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationClientCertificateDetails>;
    configType?: pulumi.Input<string>;
    connectionString?: pulumi.Input<string>;
    databaseAuthenticationDetails?: pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationDatabaseAuthenticationDetails>;
    databaseConnectionType?: pulumi.Input<string>;
    databaseRole?: pulumi.Input<string>;
    databaseType?: pulumi.Input<string>;
    databaseWalletDetails?: pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationDatabaseWalletDetails>;
    dnsConfiguration?: pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationDnsConfiguration>;
    downloadSizeLimitInBytes?: pulumi.Input<number>;
    ftpBasicAuthenticationDetails?: pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationFtpBasicAuthenticationDetails>;
    ftpProtocol?: pulumi.Input<string>;
    ftpRequestType?: pulumi.Input<string>;
    isActiveMode?: pulumi.Input<boolean>;
    isCertificateValidationEnabled?: pulumi.Input<boolean>;
    isDefaultSnapshotEnabled?: pulumi.Input<boolean>;
    isFailureRetried?: pulumi.Input<boolean>;
    isQueryRecursive?: pulumi.Input<boolean>;
    isRedirectionEnabled?: pulumi.Input<boolean>;
    nameServer?: pulumi.Input<string>;
    networkConfiguration?: pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationNetworkConfiguration>;
    protocol?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
    recordType?: pulumi.Input<string>;
    reqAuthenticationDetails?: pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationReqAuthenticationDetails>;
    reqAuthenticationScheme?: pulumi.Input<string>;
    requestHeaders?: pulumi.Input<pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationRequestHeader>[]>;
    requestMethod?: pulumi.Input<string>;
    requestPostBody?: pulumi.Input<string>;
    requestQueryParams?: pulumi.Input<pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationRequestQueryParam>[]>;
    uploadFileSizeInBytes?: pulumi.Input<number>;
    verifyResponseCodes?: pulumi.Input<pulumi.Input<string>[]>;
    verifyResponseContent?: pulumi.Input<string>;
    verifyTexts?: pulumi.Input<pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationVerifyText>[]>;
}

export interface ApmSyntheticsMonitorConfigurationClientCertificateDetails {
    clientCertificate?: pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationClientCertificateDetailsClientCertificate>;
    privateKey?: pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationClientCertificateDetailsPrivateKey>;
}

export interface ApmSyntheticsMonitorConfigurationClientCertificateDetailsClientCertificate {
    content?: pulumi.Input<string>;
    fileName?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorConfigurationClientCertificateDetailsPrivateKey {
    content?: pulumi.Input<string>;
    fileName?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorConfigurationDatabaseAuthenticationDetails {
    password?: pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationDatabaseAuthenticationDetailsPassword>;
    username?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorConfigurationDatabaseAuthenticationDetailsPassword {
    password?: pulumi.Input<string>;
    passwordType?: pulumi.Input<string>;
    vaultSecretId?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorConfigurationDatabaseWalletDetails {
    databaseWallet?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorConfigurationDnsConfiguration {
    isOverrideDns?: pulumi.Input<boolean>;
    overrideDnsIp?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorConfigurationFtpBasicAuthenticationDetails {
    password?: pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationFtpBasicAuthenticationDetailsPassword>;
    username?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorConfigurationFtpBasicAuthenticationDetailsPassword {
    password?: pulumi.Input<string>;
    passwordType?: pulumi.Input<string>;
    vaultSecretId?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorConfigurationNetworkConfiguration {
    numberOfHops?: pulumi.Input<number>;
    probeMode?: pulumi.Input<string>;
    probePerHop?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    transmissionRate?: pulumi.Input<number>;
}

export interface ApmSyntheticsMonitorConfigurationReqAuthenticationDetails {
    authHeaders?: pulumi.Input<pulumi.Input<inputs.ApmSyntheticsMonitorConfigurationReqAuthenticationDetailsAuthHeader>[]>;
    authRequestMethod?: pulumi.Input<string>;
    authRequestPostBody?: pulumi.Input<string>;
    authToken?: pulumi.Input<string>;
    authUrl?: pulumi.Input<string>;
    authUserName?: pulumi.Input<string>;
    authUserPassword?: pulumi.Input<string>;
    oauthScheme?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorConfigurationReqAuthenticationDetailsAuthHeader {
    headerName?: pulumi.Input<string>;
    headerValue?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorConfigurationRequestHeader {
    headerName?: pulumi.Input<string>;
    headerValue?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorConfigurationRequestQueryParam {
    paramName?: pulumi.Input<string>;
    paramValue?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorConfigurationVerifyText {
    text?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorMaintenanceWindowSchedule {
    timeEnded?: pulumi.Input<string>;
    timeStarted?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorScriptParameter {
    isOverwritten?: pulumi.Input<boolean>;
    isSecret?: pulumi.Input<boolean>;
    monitorScriptParameters?: pulumi.Input<pulumi.Input<inputs.ApmSyntheticsMonitorScriptParameterMonitorScriptParameter>[]>;
    paramName: pulumi.Input<string>;
    paramValue: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorScriptParameterMonitorScriptParameter {
    paramName: pulumi.Input<string>;
    paramValue: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApmSyntheticsMonitorVantagePoint {
    displayName?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    workerLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApmSyntheticsOnPremiseVantagePointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApmSyntheticsOnPremiseVantagePointWorkerIdentityInfo {
    apmShortId: pulumi.Input<string>;
    collectorEndPoint: pulumi.Input<string>;
    regionName: pulumi.Input<string>;
}

export interface ApmSyntheticsOnPremiseVantagePointWorkerMonitorList {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    isRunNow: pulumi.Input<boolean>;
    monitorType: pulumi.Input<string>;
    timeAssigned: pulumi.Input<string>;
}

export interface ApmSyntheticsOnPremiseVantagePointWorkerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApmSyntheticsOnPremiseVantagePointWorkerVersionDetail {
    latestVersion: pulumi.Input<string>;
    minSupportedVersion: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface ApmSyntheticsOnPremiseVantagePointWorkersSummary {
    available: pulumi.Input<number>;
    availableCapabilities: pulumi.Input<pulumi.Input<inputs.ApmSyntheticsOnPremiseVantagePointWorkersSummaryAvailableCapability>[]>;
    disabled: pulumi.Input<number>;
    minVersion: pulumi.Input<string>;
    total: pulumi.Input<number>;
    used: pulumi.Input<number>;
}

export interface ApmSyntheticsOnPremiseVantagePointWorkersSummaryAvailableCapability {
    capability: pulumi.Input<string>;
    onPremiseVantagePointCount: pulumi.Input<number>;
}

export interface ApmSyntheticsScriptMonitorStatusCountMap {
    disabled: pulumi.Input<number>;
    enabled: pulumi.Input<number>;
    invalid: pulumi.Input<number>;
    total: pulumi.Input<number>;
}

export interface ApmSyntheticsScriptParameter {
    isOverwritten?: pulumi.Input<boolean>;
    isSecret?: pulumi.Input<boolean>;
    paramName: pulumi.Input<string>;
    paramValue?: pulumi.Input<string>;
    scriptParameters?: pulumi.Input<pulumi.Input<inputs.ApmSyntheticsScriptParameterScriptParameter>[]>;
}

export interface ApmSyntheticsScriptParameterScriptParameter {
    isSecret: pulumi.Input<boolean>;
    paramName: pulumi.Input<string>;
    paramValue: pulumi.Input<string>;
}

export interface ApmSyntheticsScriptTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppmgmtControlMonitorPluginManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ArtifactsContainerConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ArtifactsContainerImageSignatureTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ArtifactsContainerRepositoryReadme {
    content: pulumi.Input<string>;
    format: pulumi.Input<string>;
}

export interface ArtifactsContainerRepositoryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ArtifactsGenericArtifactTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ArtifactsRepositoryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AuditConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutoscalingAutoScalingConfigurationAutoScalingResources {
    id: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AutoscalingAutoScalingConfigurationPolicy {
    capacity?: pulumi.Input<inputs.AutoscalingAutoScalingConfigurationPolicyCapacity>;
    displayName?: pulumi.Input<string>;
    executionSchedule?: pulumi.Input<inputs.AutoscalingAutoScalingConfigurationPolicyExecutionSchedule>;
    id?: pulumi.Input<string>;
    isEnabled?: pulumi.Input<boolean>;
    policyType: pulumi.Input<string>;
    resourceAction?: pulumi.Input<inputs.AutoscalingAutoScalingConfigurationPolicyResourceAction>;
    rules?: pulumi.Input<pulumi.Input<inputs.AutoscalingAutoScalingConfigurationPolicyRule>[]>;
    timeCreated?: pulumi.Input<string>;
}

export interface AutoscalingAutoScalingConfigurationPolicyCapacity {
    initial?: pulumi.Input<number>;
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
}

export interface AutoscalingAutoScalingConfigurationPolicyExecutionSchedule {
    expression: pulumi.Input<string>;
    timezone: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AutoscalingAutoScalingConfigurationPolicyResourceAction {
    action: pulumi.Input<string>;
    actionType: pulumi.Input<string>;
}

export interface AutoscalingAutoScalingConfigurationPolicyRule {
    action?: pulumi.Input<inputs.AutoscalingAutoScalingConfigurationPolicyRuleAction>;
    displayName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    metric?: pulumi.Input<inputs.AutoscalingAutoScalingConfigurationPolicyRuleMetric>;
}

export interface AutoscalingAutoScalingConfigurationPolicyRuleAction {
    type?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

export interface AutoscalingAutoScalingConfigurationPolicyRuleMetric {
    metricType?: pulumi.Input<string>;
    threshold?: pulumi.Input<inputs.AutoscalingAutoScalingConfigurationPolicyRuleMetricThreshold>;
}

export interface AutoscalingAutoScalingConfigurationPolicyRuleMetricThreshold {
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

export interface AutoscalingAutoScalingConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BastionBastionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BastionSessionKeyDetails {
    publicKeyContent: pulumi.Input<string>;
}

export interface BastionSessionTargetResourceDetails {
    sessionType: pulumi.Input<string>;
    targetResourceDisplayName?: pulumi.Input<string>;
    targetResourceFqdn?: pulumi.Input<string>;
    targetResourceId?: pulumi.Input<string>;
    targetResourceOperatingSystemUserName?: pulumi.Input<string>;
    targetResourcePort?: pulumi.Input<number>;
    targetResourcePrivateIpAddress?: pulumi.Input<string>;
}

export interface BastionSessionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BdsAutoScalingConfigurationPolicy {
    policyType: pulumi.Input<string>;
    rules: pulumi.Input<pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyRule>[]>;
}

export interface BdsAutoScalingConfigurationPolicyDetails {
    actionType?: pulumi.Input<string>;
    policyType: pulumi.Input<string>;
    scaleDownConfig?: pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScaleDownConfig>;
    scaleInConfig?: pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScaleInConfig>;
    scaleOutConfig?: pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScaleOutConfig>;
    scaleUpConfig?: pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScaleUpConfig>;
    scheduleDetails?: pulumi.Input<pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScheduleDetail>[]>;
    timezone?: pulumi.Input<string>;
    triggerType?: pulumi.Input<string>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScaleDownConfig {
    memoryStepSize?: pulumi.Input<number>;
    metric?: pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScaleDownConfigMetric>;
    minMemoryPerNode?: pulumi.Input<number>;
    minOcpusPerNode?: pulumi.Input<number>;
    ocpuStepSize?: pulumi.Input<number>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScaleDownConfigMetric {
    metricType?: pulumi.Input<string>;
    threshold?: pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScaleDownConfigMetricThreshold>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScaleDownConfigMetricThreshold {
    durationInMinutes?: pulumi.Input<number>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScaleInConfig {
    metric?: pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScaleInConfigMetric>;
    minNodeCount?: pulumi.Input<number>;
    stepSize?: pulumi.Input<number>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScaleInConfigMetric {
    metricType?: pulumi.Input<string>;
    threshold?: pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScaleInConfigMetricThreshold>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScaleInConfigMetricThreshold {
    durationInMinutes?: pulumi.Input<number>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScaleOutConfig {
    maxNodeCount?: pulumi.Input<number>;
    metric?: pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScaleOutConfigMetric>;
    stepSize?: pulumi.Input<number>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScaleOutConfigMetric {
    metricType?: pulumi.Input<string>;
    threshold?: pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScaleOutConfigMetricThreshold>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScaleOutConfigMetricThreshold {
    durationInMinutes?: pulumi.Input<number>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScaleUpConfig {
    maxMemoryPerNode?: pulumi.Input<number>;
    maxOcpusPerNode?: pulumi.Input<number>;
    memoryStepSize?: pulumi.Input<number>;
    metric?: pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScaleUpConfigMetric>;
    ocpuStepSize?: pulumi.Input<number>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScaleUpConfigMetric {
    metricType?: pulumi.Input<string>;
    threshold?: pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScaleUpConfigMetricThreshold>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScaleUpConfigMetricThreshold {
    durationInMinutes?: pulumi.Input<number>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScheduleDetail {
    scheduleType?: pulumi.Input<string>;
    timeAndHorizontalScalingConfigs?: pulumi.Input<pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScheduleDetailTimeAndHorizontalScalingConfig>[]>;
    timeAndVerticalScalingConfigs?: pulumi.Input<pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyDetailsScheduleDetailTimeAndVerticalScalingConfig>[]>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScheduleDetailTimeAndHorizontalScalingConfig {
    targetNodeCount?: pulumi.Input<number>;
    timeRecurrence?: pulumi.Input<string>;
}

export interface BdsAutoScalingConfigurationPolicyDetailsScheduleDetailTimeAndVerticalScalingConfig {
    targetMemoryPerNode?: pulumi.Input<number>;
    targetOcpusPerNode?: pulumi.Input<number>;
    targetShape?: pulumi.Input<string>;
    timeRecurrence?: pulumi.Input<string>;
}

export interface BdsAutoScalingConfigurationPolicyRule {
    action: pulumi.Input<string>;
    metric: pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyRuleMetric>;
}

export interface BdsAutoScalingConfigurationPolicyRuleMetric {
    metricType: pulumi.Input<string>;
    threshold: pulumi.Input<inputs.BdsAutoScalingConfigurationPolicyRuleMetricThreshold>;
}

export interface BdsAutoScalingConfigurationPolicyRuleMetricThreshold {
    durationInMinutes: pulumi.Input<number>;
    operator: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface BdsAutoScalingConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BdsBdsInstanceApiKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BdsBdsInstanceCloudSqlDetail {
    blockVolumeSizeInGbs?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    isKerberosMappedToDatabaseUsers?: pulumi.Input<boolean>;
    kerberosDetails?: pulumi.Input<pulumi.Input<inputs.BdsBdsInstanceCloudSqlDetailKerberosDetail>[]>;
    memoryInGbs?: pulumi.Input<number>;
    nvmes?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
    shape: pulumi.Input<string>;
}

export interface BdsBdsInstanceCloudSqlDetailKerberosDetail {
    keytabFile: pulumi.Input<string>;
    principalName: pulumi.Input<string>;
}

export interface BdsBdsInstanceClusterDetail {
    ambariUrl: pulumi.Input<string>;
    bdCellVersion: pulumi.Input<string>;
    bdaVersion: pulumi.Input<string>;
    bdmVersion: pulumi.Input<string>;
    bdsVersion: pulumi.Input<string>;
    bigDataManagerUrl: pulumi.Input<string>;
    clouderaManagerUrl: pulumi.Input<string>;
    csqlCellVersion: pulumi.Input<string>;
    dbVersion: pulumi.Input<string>;
    hueServerUrl: pulumi.Input<string>;
    jupyterHubUrl: pulumi.Input<string>;
    odhVersion: pulumi.Input<string>;
    osVersion: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeRefreshed: pulumi.Input<string>;
}

export interface BdsBdsInstanceComputeOnlyWorkerNode {
    blockVolumeSizeInGbs?: pulumi.Input<string>;
    numberOfNodes: pulumi.Input<number>;
    shape: pulumi.Input<string>;
    shapeConfig?: pulumi.Input<inputs.BdsBdsInstanceComputeOnlyWorkerNodeShapeConfig>;
    subnetId: pulumi.Input<string>;
}

export interface BdsBdsInstanceComputeOnlyWorkerNodeShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    nvmes?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface BdsBdsInstanceEdgeNode {
    blockVolumeSizeInGbs?: pulumi.Input<string>;
    numberOfNodes: pulumi.Input<number>;
    shape: pulumi.Input<string>;
    shapeConfig?: pulumi.Input<inputs.BdsBdsInstanceEdgeNodeShapeConfig>;
    subnetId: pulumi.Input<string>;
}

export interface BdsBdsInstanceEdgeNodeShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    nvmes?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface BdsBdsInstanceKafkaBrokerNode {
    blockVolumeSizeInGbs?: pulumi.Input<string>;
    numberOfKafkaNodes: pulumi.Input<number>;
    shape: pulumi.Input<string>;
    shapeConfig?: pulumi.Input<inputs.BdsBdsInstanceKafkaBrokerNodeShapeConfig>;
    subnetId: pulumi.Input<string>;
}

export interface BdsBdsInstanceKafkaBrokerNodeShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    nvmes?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface BdsBdsInstanceMasterNode {
    blockVolumeSizeInGbs?: pulumi.Input<string>;
    numberOfNodes: pulumi.Input<number>;
    shape: pulumi.Input<string>;
    shapeConfig?: pulumi.Input<inputs.BdsBdsInstanceMasterNodeShapeConfig>;
    subnetId: pulumi.Input<string>;
}

export interface BdsBdsInstanceMasterNodeShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    nvmes?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface BdsBdsInstanceMetastoreConfigTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BdsBdsInstanceNetworkConfig {
    cidrBlock?: pulumi.Input<string>;
    isNatGatewayRequired?: pulumi.Input<boolean>;
}

export interface BdsBdsInstanceNode {
    attachedBlockVolumes: pulumi.Input<pulumi.Input<inputs.BdsBdsInstanceNodeAttachedBlockVolume>[]>;
    availabilityDomain: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    faultDomain: pulumi.Input<string>;
    hostname: pulumi.Input<string>;
    imageId: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    ipAddress: pulumi.Input<string>;
    isRebootRequired: pulumi.Input<boolean>;
    localDisksTotalSizeInGbs: pulumi.Input<number>;
    memoryInGbs: pulumi.Input<number>;
    nodeType: pulumi.Input<string>;
    nvmes: pulumi.Input<number>;
    ocpus: pulumi.Input<number>;
    osVersion: pulumi.Input<string>;
    shape: pulumi.Input<string>;
    sshFingerprint: pulumi.Input<string>;
    state: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeMaintenanceRebootDue: pulumi.Input<string>;
}

export interface BdsBdsInstanceNodeAttachedBlockVolume {
    volumeAttachmentId: pulumi.Input<string>;
    volumeSizeInGbs: pulumi.Input<string>;
}

export interface BdsBdsInstanceOperationCertificateManagementsManagementHostCertDetail {
    certificate?: pulumi.Input<string>;
    hostName?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
}

export interface BdsBdsInstanceOperationCertificateManagementsManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BdsBdsInstanceOsPatchActionPatchingConfigs {
    batchSize?: pulumi.Input<number>;
    patchingConfigStrategy: pulumi.Input<string>;
    toleranceThresholdPerBatch?: pulumi.Input<number>;
    toleranceThresholdPerDomain?: pulumi.Input<number>;
    waitTimeBetweenBatchInSeconds?: pulumi.Input<number>;
    waitTimeBetweenDomainInSeconds?: pulumi.Input<number>;
}

export interface BdsBdsInstanceOsPatchActionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BdsBdsInstancePatchActionPatchingConfig {
    batchSize?: pulumi.Input<number>;
    patchingConfigStrategy: pulumi.Input<string>;
    waitTimeBetweenBatchInSeconds?: pulumi.Input<number>;
    waitTimeBetweenDomainInSeconds?: pulumi.Input<number>;
}

export interface BdsBdsInstancePatchActionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BdsBdsInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BdsBdsInstanceUtilNode {
    blockVolumeSizeInGbs?: pulumi.Input<string>;
    numberOfNodes: pulumi.Input<number>;
    shape: pulumi.Input<string>;
    shapeConfig?: pulumi.Input<inputs.BdsBdsInstanceUtilNodeShapeConfig>;
    subnetId: pulumi.Input<string>;
}

export interface BdsBdsInstanceUtilNodeShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    nvmes?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface BdsBdsInstanceWorkerNode {
    blockVolumeSizeInGbs?: pulumi.Input<string>;
    numberOfNodes: pulumi.Input<number>;
    shape: pulumi.Input<string>;
    shapeConfig?: pulumi.Input<inputs.BdsBdsInstanceWorkerNodeShapeConfig>;
    subnetId: pulumi.Input<string>;
}

export interface BdsBdsInstanceWorkerNodeShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    nvmes?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface BlockchainBlockchainPlatformComponentDetail {
    osns: pulumi.Input<pulumi.Input<inputs.BlockchainBlockchainPlatformComponentDetailOsn>[]>;
    peers: pulumi.Input<pulumi.Input<inputs.BlockchainBlockchainPlatformComponentDetailPeer>[]>;
}

export interface BlockchainBlockchainPlatformComponentDetailOsn {
    ad: pulumi.Input<string>;
    ocpuAllocationParams: pulumi.Input<pulumi.Input<inputs.BlockchainBlockchainPlatformComponentDetailOsnOcpuAllocationParam>[]>;
    osnKey: pulumi.Input<string>;
    state: pulumi.Input<string>;
}

export interface BlockchainBlockchainPlatformComponentDetailOsnOcpuAllocationParam {
    ocpuAllocationNumber: pulumi.Input<number>;
}

export interface BlockchainBlockchainPlatformComponentDetailPeer {
    ad: pulumi.Input<string>;
    alias: pulumi.Input<string>;
    host: pulumi.Input<string>;
    ocpuAllocationParams: pulumi.Input<pulumi.Input<inputs.BlockchainBlockchainPlatformComponentDetailPeerOcpuAllocationParam>[]>;
    peerKey: pulumi.Input<string>;
    role: pulumi.Input<string>;
    state: pulumi.Input<string>;
}

export interface BlockchainBlockchainPlatformComponentDetailPeerOcpuAllocationParam {
    ocpuAllocationNumber: pulumi.Input<number>;
}

export interface BlockchainBlockchainPlatformHostOcpuUtilizationInfo {
    host: pulumi.Input<string>;
    ocpuCapacityNumber: pulumi.Input<number>;
    ocpuUtilizationNumber: pulumi.Input<number>;
}

export interface BlockchainBlockchainPlatformReplicas {
    caCount?: pulumi.Input<number>;
    consoleCount?: pulumi.Input<number>;
    proxyCount?: pulumi.Input<number>;
}

export interface BlockchainBlockchainPlatformTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BlockchainOsnOcpuAllocationParam {
    ocpuAllocationNumber: pulumi.Input<number>;
}

export interface BlockchainOsnTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BlockchainPeerOcpuAllocationParam {
    ocpuAllocationNumber: pulumi.Input<number>;
}

export interface BlockchainPeerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BudgetAlertRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BudgetBudgetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CapacityManagementOccAvailabilityCatalogDetail {
    availableQuantity: pulumi.Input<string>;
    catalogId: pulumi.Input<string>;
    dateExpectedCapacityHandover: pulumi.Input<string>;
    dateFinalCustomerOrder: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    resourceName: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    unit: pulumi.Input<string>;
    workloadType: pulumi.Input<string>;
}

export interface CapacityManagementOccAvailabilityCatalogMetadataDetails {
    formatVersion: pulumi.Input<string>;
}

export interface CapacityManagementOccAvailabilityCatalogTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CapacityManagementOccCapacityRequestDetail {
    actualHandoverQuantity?: pulumi.Input<string>;
    dateActualHandover?: pulumi.Input<string>;
    dateExpectedHandover?: pulumi.Input<string>;
    demandQuantity: pulumi.Input<string>;
    expectedHandoverQuantity?: pulumi.Input<string>;
    resourceName: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    workloadType: pulumi.Input<string>;
}

export interface CapacityManagementOccCapacityRequestPatchOperation {
    from: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    position?: pulumi.Input<string>;
    selectedItem?: pulumi.Input<string>;
    selection: pulumi.Input<string>;
    value: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface CapacityManagementOccCapacityRequestTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CertificatesManagementCaBundleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateAuthorityCertificateAuthorityConfig {
    configType: pulumi.Input<string>;
    issuerCertificateAuthorityId?: pulumi.Input<string>;
    signingAlgorithm?: pulumi.Input<string>;
    subject: pulumi.Input<inputs.CertificatesManagementCertificateAuthorityCertificateAuthorityConfigSubject>;
    validity?: pulumi.Input<inputs.CertificatesManagementCertificateAuthorityCertificateAuthorityConfigValidity>;
    versionName?: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateAuthorityCertificateAuthorityConfigSubject {
    commonName: pulumi.Input<string>;
    country?: pulumi.Input<string>;
    distinguishedNameQualifier?: pulumi.Input<string>;
    domainComponent?: pulumi.Input<string>;
    generationQualifier?: pulumi.Input<string>;
    givenName?: pulumi.Input<string>;
    initials?: pulumi.Input<string>;
    localityName?: pulumi.Input<string>;
    organization?: pulumi.Input<string>;
    organizationalUnit?: pulumi.Input<string>;
    pseudonym?: pulumi.Input<string>;
    serialNumber?: pulumi.Input<string>;
    stateOrProvinceName?: pulumi.Input<string>;
    street?: pulumi.Input<string>;
    surname?: pulumi.Input<string>;
    title?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateAuthorityCertificateAuthorityConfigValidity {
    timeOfValidityNotAfter: pulumi.Input<string>;
    timeOfValidityNotBefore?: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateAuthorityCertificateAuthorityRule {
    certificateAuthorityMaxValidityDuration?: pulumi.Input<string>;
    leafCertificateMaxValidityDuration?: pulumi.Input<string>;
    ruleType: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateAuthorityCertificateRevocationListDetails {
    customFormattedUrls?: pulumi.Input<pulumi.Input<string>[]>;
    objectStorageConfig: pulumi.Input<inputs.CertificatesManagementCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig>;
}

export interface CertificatesManagementCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig {
    objectStorageBucketName: pulumi.Input<string>;
    objectStorageNamespace?: pulumi.Input<string>;
    objectStorageObjectNameFormat: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateAuthorityCurrentVersion {
    certificateAuthorityId: pulumi.Input<string>;
    issuerCaVersionNumber: pulumi.Input<string>;
    revocationStatuses: pulumi.Input<pulumi.Input<inputs.CertificatesManagementCertificateAuthorityCurrentVersionRevocationStatus>[]>;
    serialNumber: pulumi.Input<string>;
    stages: pulumi.Input<pulumi.Input<string>[]>;
    timeCreated: pulumi.Input<string>;
    timeOfDeletion: pulumi.Input<string>;
    validities: pulumi.Input<pulumi.Input<inputs.CertificatesManagementCertificateAuthorityCurrentVersionValidity>[]>;
    versionName: pulumi.Input<string>;
    versionNumber: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateAuthorityCurrentVersionRevocationStatus {
    revocationReason: pulumi.Input<string>;
    timeOfRevocation: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateAuthorityCurrentVersionValidity {
    timeOfValidityNotAfter: pulumi.Input<string>;
    timeOfValidityNotBefore: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateAuthoritySubject {
    commonName: pulumi.Input<string>;
    country: pulumi.Input<string>;
    distinguishedNameQualifier: pulumi.Input<string>;
    domainComponent: pulumi.Input<string>;
    generationQualifier: pulumi.Input<string>;
    givenName: pulumi.Input<string>;
    initials: pulumi.Input<string>;
    localityName: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    organizationalUnit: pulumi.Input<string>;
    pseudonym: pulumi.Input<string>;
    serialNumber: pulumi.Input<string>;
    stateOrProvinceName: pulumi.Input<string>;
    street: pulumi.Input<string>;
    surname: pulumi.Input<string>;
    title: pulumi.Input<string>;
    userId: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateAuthorityTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateCertificateConfig {
    certificateProfileType?: pulumi.Input<string>;
    configType: pulumi.Input<string>;
    csrPem?: pulumi.Input<string>;
    issuerCertificateAuthorityId?: pulumi.Input<string>;
    keyAlgorithm?: pulumi.Input<string>;
    signatureAlgorithm?: pulumi.Input<string>;
    subject?: pulumi.Input<inputs.CertificatesManagementCertificateCertificateConfigSubject>;
    subjectAlternativeNames?: pulumi.Input<pulumi.Input<inputs.CertificatesManagementCertificateCertificateConfigSubjectAlternativeName>[]>;
    validity?: pulumi.Input<inputs.CertificatesManagementCertificateCertificateConfigValidity>;
    versionName?: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateCertificateConfigSubject {
    commonName: pulumi.Input<string>;
    country?: pulumi.Input<string>;
    distinguishedNameQualifier?: pulumi.Input<string>;
    domainComponent?: pulumi.Input<string>;
    generationQualifier?: pulumi.Input<string>;
    givenName?: pulumi.Input<string>;
    initials?: pulumi.Input<string>;
    localityName?: pulumi.Input<string>;
    organization?: pulumi.Input<string>;
    organizationalUnit?: pulumi.Input<string>;
    pseudonym?: pulumi.Input<string>;
    serialNumber?: pulumi.Input<string>;
    stateOrProvinceName?: pulumi.Input<string>;
    street?: pulumi.Input<string>;
    surname?: pulumi.Input<string>;
    title?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateCertificateConfigSubjectAlternativeName {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateCertificateConfigValidity {
    timeOfValidityNotAfter: pulumi.Input<string>;
    timeOfValidityNotBefore?: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateCertificateRevocationListDetail {
    customFormattedUrls: pulumi.Input<pulumi.Input<string>[]>;
    objectStorageConfigs: pulumi.Input<pulumi.Input<inputs.CertificatesManagementCertificateCertificateRevocationListDetailObjectStorageConfig>[]>;
}

export interface CertificatesManagementCertificateCertificateRevocationListDetailObjectStorageConfig {
    objectStorageBucketName: pulumi.Input<string>;
    objectStorageNamespace: pulumi.Input<string>;
    objectStorageObjectNameFormat: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateCertificateRule {
    advanceRenewalPeriod: pulumi.Input<string>;
    renewalInterval: pulumi.Input<string>;
    ruleType: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateCurrentVersion {
    certificateId: pulumi.Input<string>;
    issuerCaVersionNumber: pulumi.Input<string>;
    revocationStatuses: pulumi.Input<pulumi.Input<inputs.CertificatesManagementCertificateCurrentVersionRevocationStatus>[]>;
    serialNumber: pulumi.Input<string>;
    stages: pulumi.Input<pulumi.Input<string>[]>;
    subjectAlternativeNames: pulumi.Input<pulumi.Input<inputs.CertificatesManagementCertificateCurrentVersionSubjectAlternativeName>[]>;
    timeCreated: pulumi.Input<string>;
    timeOfDeletion: pulumi.Input<string>;
    validities: pulumi.Input<pulumi.Input<inputs.CertificatesManagementCertificateCurrentVersionValidity>[]>;
    versionName: pulumi.Input<string>;
    versionNumber: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateCurrentVersionRevocationStatus {
    revocationReason: pulumi.Input<string>;
    timeOfRevocation: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateCurrentVersionSubjectAlternativeName {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateCurrentVersionValidity {
    timeOfValidityNotAfter: pulumi.Input<string>;
    timeOfValidityNotBefore: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateSubject {
    commonName: pulumi.Input<string>;
    country: pulumi.Input<string>;
    distinguishedNameQualifier: pulumi.Input<string>;
    domainComponent: pulumi.Input<string>;
    generationQualifier: pulumi.Input<string>;
    givenName: pulumi.Input<string>;
    initials: pulumi.Input<string>;
    localityName: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    organizationalUnit: pulumi.Input<string>;
    pseudonym: pulumi.Input<string>;
    serialNumber: pulumi.Input<string>;
    stateOrProvinceName: pulumi.Input<string>;
    street: pulumi.Input<string>;
    surname: pulumi.Input<string>;
    title: pulumi.Input<string>;
    userId: pulumi.Input<string>;
}

export interface CertificatesManagementCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudBridgeAgentDependencyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudBridgeAgentPluginList {
    agentId: pulumi.Input<string>;
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lifecycleDetails: pulumi.Input<string>;
    name: pulumi.Input<string>;
    pluginVersion: pulumi.Input<string>;
    state: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
}

export interface CloudBridgeAgentPluginTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudBridgeAgentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudBridgeAssetCompute {
    connectedNetworks?: pulumi.Input<number>;
    coresCount?: pulumi.Input<number>;
    cpuModel?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    disks?: pulumi.Input<pulumi.Input<inputs.CloudBridgeAssetComputeDisk>[]>;
    disksCount?: pulumi.Input<number>;
    dnsName?: pulumi.Input<string>;
    firmware?: pulumi.Input<string>;
    gpuDevices?: pulumi.Input<pulumi.Input<inputs.CloudBridgeAssetComputeGpuDevice>[]>;
    gpuDevicesCount?: pulumi.Input<number>;
    guestState?: pulumi.Input<string>;
    hardwareVersion?: pulumi.Input<string>;
    hostName?: pulumi.Input<string>;
    isPmemEnabled?: pulumi.Input<boolean>;
    isTpmEnabled?: pulumi.Input<boolean>;
    latencySensitivity?: pulumi.Input<string>;
    memoryInMbs?: pulumi.Input<string>;
    nics?: pulumi.Input<pulumi.Input<inputs.CloudBridgeAssetComputeNic>[]>;
    nicsCount?: pulumi.Input<number>;
    nvdimmController?: pulumi.Input<inputs.CloudBridgeAssetComputeNvdimmController>;
    nvdimms?: pulumi.Input<pulumi.Input<inputs.CloudBridgeAssetComputeNvdimm>[]>;
    operatingSystem?: pulumi.Input<string>;
    operatingSystemVersion?: pulumi.Input<string>;
    pmemInMbs?: pulumi.Input<string>;
    powerState?: pulumi.Input<string>;
    primaryIp?: pulumi.Input<string>;
    scsiController?: pulumi.Input<inputs.CloudBridgeAssetComputeScsiController>;
    storageProvisionedInMbs?: pulumi.Input<string>;
    threadsPerCoreCount?: pulumi.Input<number>;
}

export interface CloudBridgeAssetComputeDisk {
    bootOrder?: pulumi.Input<number>;
    location?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    persistentMode?: pulumi.Input<string>;
    sizeInMbs?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    uuidLun?: pulumi.Input<string>;
}

export interface CloudBridgeAssetComputeGpuDevice {
    coresCount?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    manufacturer?: pulumi.Input<string>;
    memoryInMbs?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface CloudBridgeAssetComputeNic {
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    label?: pulumi.Input<string>;
    macAddress?: pulumi.Input<string>;
    macAddressType?: pulumi.Input<string>;
    networkName?: pulumi.Input<string>;
    switchName?: pulumi.Input<string>;
}

export interface CloudBridgeAssetComputeNvdimm {
    controllerKey?: pulumi.Input<number>;
    label?: pulumi.Input<string>;
    unitNumber?: pulumi.Input<number>;
}

export interface CloudBridgeAssetComputeNvdimmController {
    busNumber?: pulumi.Input<number>;
    label?: pulumi.Input<string>;
}

export interface CloudBridgeAssetComputeScsiController {
    label?: pulumi.Input<string>;
    sharedBus?: pulumi.Input<string>;
    unitNumber?: pulumi.Input<number>;
}

export interface CloudBridgeAssetSourceDiscoveryCredentials {
    secretId: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CloudBridgeAssetSourceReplicationCredentials {
    secretId: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CloudBridgeAssetSourceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudBridgeAssetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudBridgeAssetVm {
    hypervisorHost?: pulumi.Input<string>;
    hypervisorVendor?: pulumi.Input<string>;
    hypervisorVersion?: pulumi.Input<string>;
}

export interface CloudBridgeAssetVmwareVcenter {
    dataCenter?: pulumi.Input<string>;
    vcenterKey?: pulumi.Input<string>;
    vcenterVersion?: pulumi.Input<string>;
}

export interface CloudBridgeAssetVmwareVm {
    cluster?: pulumi.Input<string>;
    customerFields?: pulumi.Input<pulumi.Input<string>[]>;
    customerTags?: pulumi.Input<pulumi.Input<inputs.CloudBridgeAssetVmwareVmCustomerTag>[]>;
    faultToleranceBandwidth?: pulumi.Input<number>;
    faultToleranceSecondaryLatency?: pulumi.Input<number>;
    faultToleranceState?: pulumi.Input<string>;
    instanceUuid?: pulumi.Input<string>;
    isDisksCbtEnabled?: pulumi.Input<boolean>;
    isDisksUuidEnabled?: pulumi.Input<boolean>;
    path?: pulumi.Input<string>;
    vmwareToolsStatus?: pulumi.Input<string>;
}

export interface CloudBridgeAssetVmwareVmCustomerTag {
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface CloudBridgeDiscoveryScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudBridgeEnvironmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudBridgeInventoryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudGuardAdhocQueryAdhocQueryDetails {
    adhocQueryResources: pulumi.Input<pulumi.Input<inputs.CloudGuardAdhocQueryAdhocQueryDetailsAdhocQueryResource>[]>;
    query: pulumi.Input<string>;
}

export interface CloudGuardAdhocQueryAdhocQueryDetailsAdhocQueryResource {
    region?: pulumi.Input<string>;
    resourceIds?: pulumi.Input<pulumi.Input<string>[]>;
    resourceType?: pulumi.Input<string>;
}

export interface CloudGuardAdhocQueryAdhocQueryRegionalDetail {
    expectedCount: pulumi.Input<string>;
    expiredCount: pulumi.Input<string>;
    failedCount: pulumi.Input<string>;
    region: pulumi.Input<string>;
    regionalError: pulumi.Input<string>;
    regionalStatus: pulumi.Input<string>;
    succeededCount: pulumi.Input<string>;
}

export interface CloudGuardAdhocQueryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudGuardCloudGuardConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudGuardDataMaskRuleTargetSelected {
    kind: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudGuardDataMaskRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudGuardDataSourceDataSourceDetails {
    additionalEntitiesCount?: pulumi.Input<number>;
    dataSourceFeedProvider: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    intervalInMinutes?: pulumi.Input<number>;
    intervalInSeconds?: pulumi.Input<number>;
    loggingQueryDetails?: pulumi.Input<inputs.CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails>;
    loggingQueryType?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
    queryStartTime?: pulumi.Input<inputs.CloudGuardDataSourceDataSourceDetailsQueryStartTime>;
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    scheduledQueryScopeDetails?: pulumi.Input<pulumi.Input<inputs.CloudGuardDataSourceDataSourceDetailsScheduledQueryScopeDetail>[]>;
    threshold?: pulumi.Input<number>;
}

export interface CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails {
    keyEntitiesCount?: pulumi.Input<number>;
    loggingQueryType: pulumi.Input<string>;
}

export interface CloudGuardDataSourceDataSourceDetailsQueryStartTime {
    queryStartTime?: pulumi.Input<string>;
    startPolicyType: pulumi.Input<string>;
}

export interface CloudGuardDataSourceDataSourceDetailsScheduledQueryScopeDetail {
    region?: pulumi.Input<string>;
    resourceIds?: pulumi.Input<pulumi.Input<string>[]>;
    resourceType?: pulumi.Input<string>;
}

export interface CloudGuardDataSourceDataSourceDetectorMappingInfo {
    detectorRecipeId: pulumi.Input<string>;
    detectorRuleId: pulumi.Input<string>;
}

export interface CloudGuardDataSourceRegionStatusDetail {
    region: pulumi.Input<string>;
    status: pulumi.Input<string>;
}

export interface CloudGuardDataSourceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudGuardDetectorRecipeDetectorRule {
    candidateResponderRules?: pulumi.Input<pulumi.Input<inputs.CloudGuardDetectorRecipeDetectorRuleCandidateResponderRule>[]>;
    dataSourceId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    details: pulumi.Input<inputs.CloudGuardDetectorRecipeDetectorRuleDetails>;
    detector?: pulumi.Input<string>;
    detectorRuleId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    entitiesMappings?: pulumi.Input<pulumi.Input<inputs.CloudGuardDetectorRecipeDetectorRuleEntitiesMapping>[]>;
    lifecycleDetails?: pulumi.Input<string>;
    managedListTypes?: pulumi.Input<pulumi.Input<string>[]>;
    recommendation?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    serviceType?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
}

export interface CloudGuardDetectorRecipeDetectorRuleCandidateResponderRule {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    isPreferred: pulumi.Input<boolean>;
}

export interface CloudGuardDetectorRecipeDetectorRuleDetails {
    condition?: pulumi.Input<string>;
    configurations?: pulumi.Input<pulumi.Input<inputs.CloudGuardDetectorRecipeDetectorRuleDetailsConfiguration>[]>;
    dataSourceId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    entitiesMappings?: pulumi.Input<pulumi.Input<inputs.CloudGuardDetectorRecipeDetectorRuleDetailsEntitiesMapping>[]>;
    isConfigurationAllowed?: pulumi.Input<boolean>;
    isEnabled: pulumi.Input<boolean>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    recommendation?: pulumi.Input<string>;
    riskLevel: pulumi.Input<string>;
}

export interface CloudGuardDetectorRecipeDetectorRuleDetailsConfiguration {
    configKey: pulumi.Input<string>;
    dataType?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<inputs.CloudGuardDetectorRecipeDetectorRuleDetailsConfigurationValue>[]>;
}

export interface CloudGuardDetectorRecipeDetectorRuleDetailsConfigurationValue {
    listType: pulumi.Input<string>;
    managedListType: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudGuardDetectorRecipeDetectorRuleDetailsEntitiesMapping {
    displayName?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    queryField: pulumi.Input<string>;
}

export interface CloudGuardDetectorRecipeDetectorRuleEntitiesMapping {
    displayName: pulumi.Input<string>;
    entityType: pulumi.Input<string>;
    queryField: pulumi.Input<string>;
}

export interface CloudGuardDetectorRecipeEffectiveDetectorRule {
    candidateResponderRules: pulumi.Input<pulumi.Input<inputs.CloudGuardDetectorRecipeEffectiveDetectorRuleCandidateResponderRule>[]>;
    dataSourceId: pulumi.Input<string>;
    description: pulumi.Input<string>;
    details: pulumi.Input<pulumi.Input<inputs.CloudGuardDetectorRecipeEffectiveDetectorRuleDetail>[]>;
    detector: pulumi.Input<string>;
    detectorRuleId: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    entitiesMappings: pulumi.Input<pulumi.Input<inputs.CloudGuardDetectorRecipeEffectiveDetectorRuleEntitiesMapping>[]>;
    lifecycleDetails: pulumi.Input<string>;
    managedListTypes: pulumi.Input<pulumi.Input<string>[]>;
    recommendation: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    serviceType: pulumi.Input<string>;
    state: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
}

export interface CloudGuardDetectorRecipeEffectiveDetectorRuleCandidateResponderRule {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    isPreferred: pulumi.Input<boolean>;
}

export interface CloudGuardDetectorRecipeEffectiveDetectorRuleDetail {
    condition: pulumi.Input<string>;
    configurations: pulumi.Input<pulumi.Input<inputs.CloudGuardDetectorRecipeEffectiveDetectorRuleDetailConfiguration>[]>;
    dataSourceId: pulumi.Input<string>;
    description: pulumi.Input<string>;
    entitiesMappings: pulumi.Input<pulumi.Input<inputs.CloudGuardDetectorRecipeEffectiveDetectorRuleDetailEntitiesMapping>[]>;
    isConfigurationAllowed: pulumi.Input<boolean>;
    isEnabled: pulumi.Input<boolean>;
    labels: pulumi.Input<pulumi.Input<string>[]>;
    recommendation: pulumi.Input<string>;
    riskLevel: pulumi.Input<string>;
}

export interface CloudGuardDetectorRecipeEffectiveDetectorRuleDetailConfiguration {
    configKey: pulumi.Input<string>;
    dataType: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<inputs.CloudGuardDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue>[]>;
}

export interface CloudGuardDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
    listType: pulumi.Input<string>;
    managedListType: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudGuardDetectorRecipeEffectiveDetectorRuleDetailEntitiesMapping {
    displayName: pulumi.Input<string>;
    entityType: pulumi.Input<string>;
    queryField: pulumi.Input<string>;
}

export interface CloudGuardDetectorRecipeEffectiveDetectorRuleEntitiesMapping {
    displayName: pulumi.Input<string>;
    entityType: pulumi.Input<string>;
    queryField: pulumi.Input<string>;
}

export interface CloudGuardDetectorRecipeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudGuardManagedListTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudGuardResponderRecipeEffectiveResponderRule {
    compartmentId: pulumi.Input<string>;
    description: pulumi.Input<string>;
    details: pulumi.Input<pulumi.Input<inputs.CloudGuardResponderRecipeEffectiveResponderRuleDetail>[]>;
    displayName: pulumi.Input<string>;
    lifecycleDetails: pulumi.Input<string>;
    policies: pulumi.Input<pulumi.Input<string>[]>;
    responderRuleId: pulumi.Input<string>;
    state: pulumi.Input<string>;
    supportedModes: pulumi.Input<pulumi.Input<string>[]>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CloudGuardResponderRecipeEffectiveResponderRuleDetail {
    condition: pulumi.Input<string>;
    configurations: pulumi.Input<pulumi.Input<inputs.CloudGuardResponderRecipeEffectiveResponderRuleDetailConfiguration>[]>;
    isEnabled: pulumi.Input<boolean>;
    mode: pulumi.Input<string>;
}

export interface CloudGuardResponderRecipeEffectiveResponderRuleDetailConfiguration {
    configKey: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudGuardResponderRecipeResponderRule {
    compartmentId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    details: pulumi.Input<inputs.CloudGuardResponderRecipeResponderRuleDetails>;
    displayName?: pulumi.Input<string>;
    lifecycleDetails?: pulumi.Input<string>;
    policies?: pulumi.Input<pulumi.Input<string>[]>;
    responderRuleId: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    supportedModes?: pulumi.Input<pulumi.Input<string>[]>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface CloudGuardResponderRecipeResponderRuleDetails {
    condition?: pulumi.Input<string>;
    configurations?: pulumi.Input<pulumi.Input<inputs.CloudGuardResponderRecipeResponderRuleDetailsConfiguration>[]>;
    isEnabled: pulumi.Input<boolean>;
    mode?: pulumi.Input<string>;
}

export interface CloudGuardResponderRecipeResponderRuleDetailsConfiguration {
    configKey: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudGuardResponderRecipeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudGuardSavedQueryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudGuardSecurityRecipeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudGuardSecurityZoneTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetDetail {
    securityZoneDisplayName: pulumi.Input<string>;
    securityZoneId: pulumi.Input<string>;
    targetResourceType: pulumi.Input<string>;
    targetSecurityZoneRecipes: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetDetailTargetSecurityZoneRecipe>[]>;
}

export interface CloudGuardTargetTargetDetailTargetSecurityZoneRecipe {
    compartmentId: pulumi.Input<string>;
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id: pulumi.Input<string>;
    lifecycleDetails: pulumi.Input<string>;
    owner: pulumi.Input<string>;
    securityPolicies: pulumi.Input<pulumi.Input<string>[]>;
    state: pulumi.Input<string>;
    systemTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetDetectorRecipe {
    compartmentId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    detector?: pulumi.Input<string>;
    detectorRecipeId: pulumi.Input<string>;
    detectorRecipeType?: pulumi.Input<string>;
    detectorRules?: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetDetectorRecipeDetectorRule>[]>;
    displayName?: pulumi.Input<string>;
    effectiveDetectorRules?: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRule>[]>;
    id?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetDetectorRecipeDetectorRule {
    dataSourceId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    details: pulumi.Input<inputs.CloudGuardTargetTargetDetectorRecipeDetectorRuleDetails>;
    detector?: pulumi.Input<string>;
    detectorRuleId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    entitiesMappings?: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMapping>[]>;
    lifecycleDetails?: pulumi.Input<string>;
    managedListTypes?: pulumi.Input<pulumi.Input<string>[]>;
    recommendation?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    serviceType?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetDetectorRecipeDetectorRuleDetails {
    conditionGroups?: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup>[]>;
    configurations?: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration>[]>;
    isConfigurationAllowed?: pulumi.Input<boolean>;
    isEnabled?: pulumi.Input<boolean>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    riskLevel?: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup {
    compartmentId: pulumi.Input<string>;
    condition: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConfiguration {
    configKey: pulumi.Input<string>;
    dataType: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue>[]>;
}

export interface CloudGuardTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue {
    listType: pulumi.Input<string>;
    managedListType: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMapping {
    displayName: pulumi.Input<string>;
    entityType: pulumi.Input<string>;
    queryField: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRule {
    dataSourceId: pulumi.Input<string>;
    description: pulumi.Input<string>;
    details: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail>[]>;
    detector: pulumi.Input<string>;
    detectorRuleId: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    entitiesMappings: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping>[]>;
    lifecycleDetails: pulumi.Input<string>;
    managedListTypes: pulumi.Input<pulumi.Input<string>[]>;
    recommendation: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    serviceType: pulumi.Input<string>;
    state: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail {
    conditionGroups: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup>[]>;
    configurations: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration>[]>;
    isConfigurationAllowed: pulumi.Input<boolean>;
    isEnabled: pulumi.Input<boolean>;
    labels: pulumi.Input<pulumi.Input<string>[]>;
    riskLevel: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup {
    compartmentId: pulumi.Input<string>;
    condition: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration {
    configKey: pulumi.Input<string>;
    dataType: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue>[]>;
}

export interface CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
    listType: pulumi.Input<string>;
    managedListType: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping {
    displayName: pulumi.Input<string>;
    entityType: pulumi.Input<string>;
    queryField: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetResponderRecipe {
    compartmentId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    effectiveResponderRules?: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetResponderRecipeEffectiveResponderRule>[]>;
    id?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
    responderRecipeId: pulumi.Input<string>;
    responderRules?: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetResponderRecipeResponderRule>[]>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetResponderRecipeEffectiveResponderRule {
    compartmentId: pulumi.Input<string>;
    description: pulumi.Input<string>;
    details: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail>[]>;
    displayName: pulumi.Input<string>;
    lifecycleDetails: pulumi.Input<string>;
    policies: pulumi.Input<pulumi.Input<string>[]>;
    responderRuleId: pulumi.Input<string>;
    state: pulumi.Input<string>;
    supportedModes: pulumi.Input<pulumi.Input<string>[]>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail {
    condition: pulumi.Input<string>;
    configurations: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration>[]>;
    isEnabled: pulumi.Input<boolean>;
    mode: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration {
    configKey: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetResponderRecipeResponderRule {
    compartmentId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    details: pulumi.Input<inputs.CloudGuardTargetTargetResponderRecipeResponderRuleDetails>;
    displayName?: pulumi.Input<string>;
    lifecycleDetails?: pulumi.Input<string>;
    policies?: pulumi.Input<pulumi.Input<string>[]>;
    responderRuleId: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    supportedModes?: pulumi.Input<pulumi.Input<string>[]>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetResponderRecipeResponderRuleDetails {
    condition?: pulumi.Input<string>;
    configurations?: pulumi.Input<pulumi.Input<inputs.CloudGuardTargetTargetResponderRecipeResponderRuleDetailsConfiguration>[]>;
    isEnabled?: pulumi.Input<boolean>;
    mode?: pulumi.Input<string>;
}

export interface CloudGuardTargetTargetResponderRecipeResponderRuleDetailsConfiguration {
    configKey: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudGuardTargetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudGuardWlpAgentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudMigrationsMigrationAssetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudMigrationsMigrationPlanMigrationPlanStat {
    timeUpdated: pulumi.Input<string>;
    totalEstimatedCosts: pulumi.Input<pulumi.Input<inputs.CloudMigrationsMigrationPlanMigrationPlanStatTotalEstimatedCost>[]>;
    vmCount: pulumi.Input<number>;
}

export interface CloudMigrationsMigrationPlanMigrationPlanStatTotalEstimatedCost {
    computes: pulumi.Input<pulumi.Input<inputs.CloudMigrationsMigrationPlanMigrationPlanStatTotalEstimatedCostCompute>[]>;
    currencyCode: pulumi.Input<string>;
    osImages: pulumi.Input<pulumi.Input<inputs.CloudMigrationsMigrationPlanMigrationPlanStatTotalEstimatedCostOsImage>[]>;
    storages: pulumi.Input<pulumi.Input<inputs.CloudMigrationsMigrationPlanMigrationPlanStatTotalEstimatedCostStorage>[]>;
    subscriptionId: pulumi.Input<string>;
    totalEstimationPerMonth: pulumi.Input<number>;
    totalEstimationPerMonthBySubscription: pulumi.Input<number>;
}

export interface CloudMigrationsMigrationPlanMigrationPlanStatTotalEstimatedCostCompute {
    gpuCount: pulumi.Input<number>;
    gpuPerHour: pulumi.Input<number>;
    gpuPerHourBySubscription: pulumi.Input<number>;
    memoryAmountGb: pulumi.Input<number>;
    memoryGbPerHour: pulumi.Input<number>;
    memoryGbPerHourBySubscription: pulumi.Input<number>;
    ocpuCount: pulumi.Input<number>;
    ocpuPerHour: pulumi.Input<number>;
    ocpuPerHourBySubscription: pulumi.Input<number>;
    totalPerHour: pulumi.Input<number>;
    totalPerHourBySubscription: pulumi.Input<number>;
}

export interface CloudMigrationsMigrationPlanMigrationPlanStatTotalEstimatedCostOsImage {
    totalPerHour: pulumi.Input<number>;
    totalPerHourBySubscription: pulumi.Input<number>;
}

export interface CloudMigrationsMigrationPlanMigrationPlanStatTotalEstimatedCostStorage {
    totalGbPerMonth: pulumi.Input<number>;
    totalGbPerMonthBySubscription: pulumi.Input<number>;
    volumes: pulumi.Input<pulumi.Input<inputs.CloudMigrationsMigrationPlanMigrationPlanStatTotalEstimatedCostStorageVolume>[]>;
}

export interface CloudMigrationsMigrationPlanMigrationPlanStatTotalEstimatedCostStorageVolume {
    capacityGb: pulumi.Input<number>;
    description: pulumi.Input<string>;
    totalGbPerMonth: pulumi.Input<number>;
    totalGbPerMonthBySubscription: pulumi.Input<number>;
}

export interface CloudMigrationsMigrationPlanStrategy {
    adjustmentMultiplier?: pulumi.Input<number>;
    metricTimeWindow?: pulumi.Input<string>;
    metricType?: pulumi.Input<string>;
    percentile?: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    strategyType: pulumi.Input<string>;
}

export interface CloudMigrationsMigrationPlanTargetEnvironment {
    availabilityDomain?: pulumi.Input<string>;
    dedicatedVmHost?: pulumi.Input<string>;
    faultDomain?: pulumi.Input<string>;
    msLicense?: pulumi.Input<string>;
    preferredShapeType?: pulumi.Input<string>;
    subnet: pulumi.Input<string>;
    targetCompartmentId?: pulumi.Input<string>;
    targetEnvironmentType: pulumi.Input<string>;
    vcn: pulumi.Input<string>;
}

export interface CloudMigrationsMigrationPlanTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudMigrationsMigrationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudMigrationsReplicationScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetCompatibilityMessage {
    message: pulumi.Input<string>;
    name: pulumi.Input<string>;
    severity: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetEstimatedCost {
    computes: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetEstimatedCostCompute>[]>;
    currencyCode: pulumi.Input<string>;
    osImages: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetEstimatedCostOsImage>[]>;
    storages: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetEstimatedCostStorage>[]>;
    subscriptionId: pulumi.Input<string>;
    totalEstimationPerMonth: pulumi.Input<number>;
    totalEstimationPerMonthBySubscription: pulumi.Input<number>;
}

export interface CloudMigrationsTargetAssetEstimatedCostCompute {
    gpuCount: pulumi.Input<number>;
    gpuPerHour: pulumi.Input<number>;
    gpuPerHourBySubscription: pulumi.Input<number>;
    memoryAmountGb: pulumi.Input<number>;
    memoryGbPerHour: pulumi.Input<number>;
    memoryGbPerHourBySubscription: pulumi.Input<number>;
    ocpuCount: pulumi.Input<number>;
    ocpuPerHour: pulumi.Input<number>;
    ocpuPerHourBySubscription: pulumi.Input<number>;
    totalPerHour: pulumi.Input<number>;
    totalPerHourBySubscription: pulumi.Input<number>;
}

export interface CloudMigrationsTargetAssetEstimatedCostOsImage {
    totalPerHour: pulumi.Input<number>;
    totalPerHourBySubscription: pulumi.Input<number>;
}

export interface CloudMigrationsTargetAssetEstimatedCostStorage {
    totalGbPerMonth: pulumi.Input<number>;
    totalGbPerMonthBySubscription: pulumi.Input<number>;
    volumes: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetEstimatedCostStorageVolume>[]>;
}

export interface CloudMigrationsTargetAssetEstimatedCostStorageVolume {
    capacityGb: pulumi.Input<number>;
    description: pulumi.Input<string>;
    totalGbPerMonth: pulumi.Input<number>;
    totalGbPerMonthBySubscription: pulumi.Input<number>;
}

export interface CloudMigrationsTargetAssetMigrationAsset {
    availabilityDomain: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    dependedOnBies: pulumi.Input<pulumi.Input<string>[]>;
    dependsOns: pulumi.Input<pulumi.Input<string>[]>;
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    lifecycleDetails: pulumi.Input<string>;
    migrationId: pulumi.Input<string>;
    notifications: pulumi.Input<pulumi.Input<string>[]>;
    parentSnapshot: pulumi.Input<string>;
    replicationCompartmentId: pulumi.Input<string>;
    replicationScheduleId: pulumi.Input<string>;
    snapShotBucketName: pulumi.Input<string>;
    snapshots: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    sourceAssetData: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    sourceAssetId: pulumi.Input<string>;
    state: pulumi.Input<string>;
    tenancyId: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetRecommendedSpec {
    agentConfigs: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetRecommendedSpecAgentConfig>[]>;
    availabilityDomain: pulumi.Input<string>;
    capacityReservationId: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    createVnicDetails: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetRecommendedSpecCreateVnicDetail>[]>;
    dedicatedVmHostId: pulumi.Input<string>;
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    faultDomain: pulumi.Input<string>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostnameLabel: pulumi.Input<string>;
    instanceOptions: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetRecommendedSpecInstanceOption>[]>;
    ipxeScript: pulumi.Input<string>;
    isPvEncryptionInTransitEnabled: pulumi.Input<boolean>;
    preemptibleInstanceConfigs: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetRecommendedSpecPreemptibleInstanceConfig>[]>;
    shape: pulumi.Input<string>;
    shapeConfigs: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetRecommendedSpecShapeConfig>[]>;
    sourceDetails: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetRecommendedSpecSourceDetail>[]>;
}

export interface CloudMigrationsTargetAssetRecommendedSpecAgentConfig {
    areAllPluginsDisabled: pulumi.Input<boolean>;
    isManagementDisabled: pulumi.Input<boolean>;
    isMonitoringDisabled: pulumi.Input<boolean>;
    pluginsConfigs: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetRecommendedSpecAgentConfigPluginsConfig>[]>;
}

export interface CloudMigrationsTargetAssetRecommendedSpecAgentConfigPluginsConfig {
    desiredState: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetRecommendedSpecCreateVnicDetail {
    assignPrivateDnsRecord: pulumi.Input<boolean>;
    assignPublicIp: pulumi.Input<boolean>;
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostnameLabel: pulumi.Input<string>;
    nsgIds: pulumi.Input<pulumi.Input<string>[]>;
    privateIp: pulumi.Input<string>;
    skipSourceDestCheck: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
    vlanId: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetRecommendedSpecInstanceOption {
    areLegacyImdsEndpointsDisabled: pulumi.Input<boolean>;
}

export interface CloudMigrationsTargetAssetRecommendedSpecPreemptibleInstanceConfig {
    preemptionActions: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetRecommendedSpecPreemptibleInstanceConfigPreemptionAction>[]>;
}

export interface CloudMigrationsTargetAssetRecommendedSpecPreemptibleInstanceConfigPreemptionAction {
    preserveBootVolume: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetRecommendedSpecShapeConfig {
    baselineOcpuUtilization: pulumi.Input<string>;
    memoryInGbs: pulumi.Input<number>;
    ocpus: pulumi.Input<number>;
}

export interface CloudMigrationsTargetAssetRecommendedSpecSourceDetail {
    bootVolumeId: pulumi.Input<string>;
    bootVolumeSizeInGbs: pulumi.Input<string>;
    bootVolumeVpusPerGb: pulumi.Input<string>;
    imageId: pulumi.Input<string>;
    kmsKeyId: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetTestSpec {
    agentConfigs: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetTestSpecAgentConfig>[]>;
    availabilityDomain: pulumi.Input<string>;
    capacityReservationId: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    createVnicDetails: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetTestSpecCreateVnicDetail>[]>;
    dedicatedVmHostId: pulumi.Input<string>;
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    faultDomain: pulumi.Input<string>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostnameLabel: pulumi.Input<string>;
    instanceOptions: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetTestSpecInstanceOption>[]>;
    ipxeScript: pulumi.Input<string>;
    isPvEncryptionInTransitEnabled: pulumi.Input<boolean>;
    preemptibleInstanceConfigs: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetTestSpecPreemptibleInstanceConfig>[]>;
    shape: pulumi.Input<string>;
    shapeConfigs: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetTestSpecShapeConfig>[]>;
    sourceDetails: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetTestSpecSourceDetail>[]>;
}

export interface CloudMigrationsTargetAssetTestSpecAgentConfig {
    areAllPluginsDisabled: pulumi.Input<boolean>;
    isManagementDisabled: pulumi.Input<boolean>;
    isMonitoringDisabled: pulumi.Input<boolean>;
    pluginsConfigs: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetTestSpecAgentConfigPluginsConfig>[]>;
}

export interface CloudMigrationsTargetAssetTestSpecAgentConfigPluginsConfig {
    desiredState: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetTestSpecCreateVnicDetail {
    assignPrivateDnsRecord: pulumi.Input<boolean>;
    assignPublicIp: pulumi.Input<boolean>;
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostnameLabel: pulumi.Input<string>;
    nsgIds: pulumi.Input<pulumi.Input<string>[]>;
    privateIp: pulumi.Input<string>;
    skipSourceDestCheck: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
    vlanId: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetTestSpecInstanceOption {
    areLegacyImdsEndpointsDisabled: pulumi.Input<boolean>;
}

export interface CloudMigrationsTargetAssetTestSpecPreemptibleInstanceConfig {
    preemptionActions: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetTestSpecPreemptibleInstanceConfigPreemptionAction>[]>;
}

export interface CloudMigrationsTargetAssetTestSpecPreemptibleInstanceConfigPreemptionAction {
    preserveBootVolume: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetTestSpecShapeConfig {
    baselineOcpuUtilization: pulumi.Input<string>;
    memoryInGbs: pulumi.Input<number>;
    ocpus: pulumi.Input<number>;
}

export interface CloudMigrationsTargetAssetTestSpecSourceDetail {
    bootVolumeId: pulumi.Input<string>;
    bootVolumeSizeInGbs: pulumi.Input<string>;
    bootVolumeVpusPerGb: pulumi.Input<string>;
    imageId: pulumi.Input<string>;
    kmsKeyId: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetUserSpec {
    agentConfig?: pulumi.Input<inputs.CloudMigrationsTargetAssetUserSpecAgentConfig>;
    availabilityDomain?: pulumi.Input<string>;
    capacityReservationId?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    createVnicDetails?: pulumi.Input<inputs.CloudMigrationsTargetAssetUserSpecCreateVnicDetails>;
    dedicatedVmHostId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    faultDomain?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostnameLabel?: pulumi.Input<string>;
    instanceOptions?: pulumi.Input<inputs.CloudMigrationsTargetAssetUserSpecInstanceOptions>;
    ipxeScript?: pulumi.Input<string>;
    isPvEncryptionInTransitEnabled?: pulumi.Input<boolean>;
    preemptibleInstanceConfig?: pulumi.Input<inputs.CloudMigrationsTargetAssetUserSpecPreemptibleInstanceConfig>;
    shape?: pulumi.Input<string>;
    shapeConfig?: pulumi.Input<inputs.CloudMigrationsTargetAssetUserSpecShapeConfig>;
    sourceDetails?: pulumi.Input<inputs.CloudMigrationsTargetAssetUserSpecSourceDetails>;
}

export interface CloudMigrationsTargetAssetUserSpecAgentConfig {
    areAllPluginsDisabled?: pulumi.Input<boolean>;
    isManagementDisabled?: pulumi.Input<boolean>;
    isMonitoringDisabled?: pulumi.Input<boolean>;
    pluginsConfigs?: pulumi.Input<pulumi.Input<inputs.CloudMigrationsTargetAssetUserSpecAgentConfigPluginsConfig>[]>;
}

export interface CloudMigrationsTargetAssetUserSpecAgentConfigPluginsConfig {
    desiredState: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetUserSpecCreateVnicDetails {
    assignPrivateDnsRecord?: pulumi.Input<boolean>;
    assignPublicIp?: pulumi.Input<boolean>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostnameLabel?: pulumi.Input<string>;
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    privateIp?: pulumi.Input<string>;
    skipSourceDestCheck?: pulumi.Input<boolean>;
    subnetId?: pulumi.Input<string>;
    vlanId?: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetUserSpecInstanceOptions {
    areLegacyImdsEndpointsDisabled?: pulumi.Input<boolean>;
}

export interface CloudMigrationsTargetAssetUserSpecPreemptibleInstanceConfig {
    preemptionAction: pulumi.Input<inputs.CloudMigrationsTargetAssetUserSpecPreemptibleInstanceConfigPreemptionAction>;
}

export interface CloudMigrationsTargetAssetUserSpecPreemptibleInstanceConfigPreemptionAction {
    preserveBootVolume?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface CloudMigrationsTargetAssetUserSpecShapeConfig {
    baselineOcpuUtilization?: pulumi.Input<string>;
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface CloudMigrationsTargetAssetUserSpecSourceDetails {
    bootVolumeId?: pulumi.Input<string>;
    bootVolumeSizeInGbs?: pulumi.Input<string>;
    bootVolumeVpusPerGb?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface ClusterPlacementGroupsClusterPlacementGroupCapabilities {
    items: pulumi.Input<pulumi.Input<inputs.ClusterPlacementGroupsClusterPlacementGroupCapabilitiesItem>[]>;
}

export interface ClusterPlacementGroupsClusterPlacementGroupCapabilitiesItem {
    name: pulumi.Input<string>;
    service: pulumi.Input<string>;
}

export interface ClusterPlacementGroupsClusterPlacementGroupPlacementInstruction {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ClusterPlacementGroupsClusterPlacementGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ComputeCloudAtCustomerCccInfrastructureInfrastructureInventory {
    capacityStorageTrayCount: pulumi.Input<number>;
    computeNodeCount: pulumi.Input<number>;
    managementNodeCount: pulumi.Input<number>;
    performanceStorageTrayCount: pulumi.Input<number>;
    serialNumber: pulumi.Input<string>;
}

export interface ComputeCloudAtCustomerCccInfrastructureInfrastructureNetworkConfiguration {
    dnsIps: pulumi.Input<pulumi.Input<string>[]>;
    infrastructureRoutingDynamics: pulumi.Input<pulumi.Input<inputs.ComputeCloudAtCustomerCccInfrastructureInfrastructureNetworkConfigurationInfrastructureRoutingDynamic>[]>;
    infrastructureRoutingStatics: pulumi.Input<pulumi.Input<inputs.ComputeCloudAtCustomerCccInfrastructureInfrastructureNetworkConfigurationInfrastructureRoutingStatic>[]>;
    managementNodes: pulumi.Input<pulumi.Input<inputs.ComputeCloudAtCustomerCccInfrastructureInfrastructureNetworkConfigurationManagementNode>[]>;
    mgmtVipHostname: pulumi.Input<string>;
    mgmtVipIp: pulumi.Input<string>;
    spineIps: pulumi.Input<pulumi.Input<string>[]>;
    spineVip: pulumi.Input<string>;
    uplinkDomain: pulumi.Input<string>;
    uplinkGatewayIp: pulumi.Input<string>;
    uplinkNetmask: pulumi.Input<string>;
    uplinkPortCount: pulumi.Input<number>;
    uplinkPortForwardErrorCorrection: pulumi.Input<string>;
    uplinkPortSpeedInGbps: pulumi.Input<number>;
    uplinkVlanMtu: pulumi.Input<number>;
}

export interface ComputeCloudAtCustomerCccInfrastructureInfrastructureNetworkConfigurationInfrastructureRoutingDynamic {
    bgpTopology: pulumi.Input<string>;
    oracleAsn: pulumi.Input<number>;
    peerInformations: pulumi.Input<pulumi.Input<inputs.ComputeCloudAtCustomerCccInfrastructureInfrastructureNetworkConfigurationInfrastructureRoutingDynamicPeerInformation>[]>;
}

export interface ComputeCloudAtCustomerCccInfrastructureInfrastructureNetworkConfigurationInfrastructureRoutingDynamicPeerInformation {
    asn: pulumi.Input<number>;
    ip: pulumi.Input<string>;
}

export interface ComputeCloudAtCustomerCccInfrastructureInfrastructureNetworkConfigurationInfrastructureRoutingStatic {
    uplinkHsrpGroup: pulumi.Input<number>;
    uplinkVlan: pulumi.Input<number>;
}

export interface ComputeCloudAtCustomerCccInfrastructureInfrastructureNetworkConfigurationManagementNode {
    hostname: pulumi.Input<string>;
    ip: pulumi.Input<string>;
}

export interface ComputeCloudAtCustomerCccInfrastructureTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ComputeCloudAtCustomerCccInfrastructureUpgradeInformation {
    currentVersion: pulumi.Input<string>;
    isActive: pulumi.Input<boolean>;
    scheduledUpgradeDuration: pulumi.Input<string>;
    timeOfScheduledUpgrade: pulumi.Input<string>;
}

export interface ComputeCloudAtCustomerCccUpgradeScheduleEvent {
    description: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    scheduleEventDuration: pulumi.Input<string>;
    scheduleEventRecurrences?: pulumi.Input<string>;
    timeStart: pulumi.Input<string>;
}

export interface ComputeCloudAtCustomerCccUpgradeScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerInstancesContainerInstanceContainer {
    arguments?: pulumi.Input<pulumi.Input<string>[]>;
    availabilityDomain?: pulumi.Input<string>;
    commands?: pulumi.Input<pulumi.Input<string>[]>;
    compartmentId?: pulumi.Input<string>;
    containerId?: pulumi.Input<string>;
    containerInstanceId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    exitCode?: pulumi.Input<number>;
    faultDomain?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    healthChecks?: pulumi.Input<pulumi.Input<inputs.ContainerInstancesContainerInstanceContainerHealthCheck>[]>;
    imageUrl: pulumi.Input<string>;
    isResourcePrincipalDisabled?: pulumi.Input<boolean>;
    lifecycleDetails?: pulumi.Input<string>;
    resourceConfig?: pulumi.Input<inputs.ContainerInstancesContainerInstanceContainerResourceConfig>;
    securityContext?: pulumi.Input<inputs.ContainerInstancesContainerInstanceContainerSecurityContext>;
    state?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeTerminated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    volumeMounts?: pulumi.Input<pulumi.Input<inputs.ContainerInstancesContainerInstanceContainerVolumeMount>[]>;
    workingDirectory?: pulumi.Input<string>;
}

export interface ContainerInstancesContainerInstanceContainerHealthCheck {
    commands?: pulumi.Input<pulumi.Input<string>[]>;
    failureAction?: pulumi.Input<string>;
    failureThreshold?: pulumi.Input<number>;
    headers?: pulumi.Input<pulumi.Input<inputs.ContainerInstancesContainerInstanceContainerHealthCheckHeader>[]>;
    healthCheckType: pulumi.Input<string>;
    initialDelayInSeconds?: pulumi.Input<number>;
    intervalInSeconds?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    statusDetails?: pulumi.Input<string>;
    successThreshold?: pulumi.Input<number>;
    timeoutInSeconds?: pulumi.Input<number>;
}

export interface ContainerInstancesContainerInstanceContainerHealthCheckHeader {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ContainerInstancesContainerInstanceContainerResourceConfig {
    memoryLimitInGbs?: pulumi.Input<number>;
    vcpusLimit?: pulumi.Input<number>;
}

export interface ContainerInstancesContainerInstanceContainerSecurityContext {
    capabilities?: pulumi.Input<inputs.ContainerInstancesContainerInstanceContainerSecurityContextCapabilities>;
    isNonRootUserCheckEnabled?: pulumi.Input<boolean>;
    isRootFileSystemReadonly?: pulumi.Input<boolean>;
    runAsGroup?: pulumi.Input<number>;
    runAsUser?: pulumi.Input<number>;
    securityContextType?: pulumi.Input<string>;
}

export interface ContainerInstancesContainerInstanceContainerSecurityContextCapabilities {
    addCapabilities?: pulumi.Input<pulumi.Input<string>[]>;
    dropCapabilities?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ContainerInstancesContainerInstanceContainerVolumeMount {
    isReadOnly?: pulumi.Input<boolean>;
    mountPath: pulumi.Input<string>;
    partition?: pulumi.Input<number>;
    subPath?: pulumi.Input<string>;
    volumeName: pulumi.Input<string>;
}

export interface ContainerInstancesContainerInstanceDnsConfig {
    nameservers?: pulumi.Input<pulumi.Input<string>[]>;
    options?: pulumi.Input<pulumi.Input<string>[]>;
    searches?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ContainerInstancesContainerInstanceImagePullSecret {
    password?: pulumi.Input<string>;
    registryEndpoint: pulumi.Input<string>;
    secretId?: pulumi.Input<string>;
    secretType: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface ContainerInstancesContainerInstanceShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    networkingBandwidthInGbps?: pulumi.Input<number>;
    ocpus: pulumi.Input<number>;
    processorDescription?: pulumi.Input<string>;
}

export interface ContainerInstancesContainerInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerInstancesContainerInstanceVnic {
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostnameLabel?: pulumi.Input<string>;
    isPublicIpAssigned?: pulumi.Input<boolean>;
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    privateIp?: pulumi.Input<string>;
    skipSourceDestCheck?: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
    vnicId?: pulumi.Input<string>;
}

export interface ContainerInstancesContainerInstanceVolume {
    backingStore?: pulumi.Input<string>;
    configs?: pulumi.Input<pulumi.Input<inputs.ContainerInstancesContainerInstanceVolumeConfig>[]>;
    name: pulumi.Input<string>;
    volumeType: pulumi.Input<string>;
}

export interface ContainerInstancesContainerInstanceVolumeConfig {
    data?: pulumi.Input<string>;
    fileName?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
}

export interface ContainerengineAddonAddonError {
    code: pulumi.Input<string>;
    message: pulumi.Input<string>;
    status: pulumi.Input<string>;
}

export interface ContainerengineAddonConfiguration {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ContainerengineAddonTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerengineClusterClusterPodNetworkOption {
    cniType: pulumi.Input<string>;
}

export interface ContainerengineClusterCompleteCredentialRotationManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerengineClusterEndpoint {
    kubernetes: pulumi.Input<string>;
    privateEndpoint: pulumi.Input<string>;
    publicEndpoint: pulumi.Input<string>;
    vcnHostnameEndpoint: pulumi.Input<string>;
}

export interface ContainerengineClusterEndpointConfig {
    isPublicIpEnabled?: pulumi.Input<boolean>;
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId: pulumi.Input<string>;
}

export interface ContainerengineClusterImagePolicyConfig {
    isPolicyEnabled?: pulumi.Input<boolean>;
    keyDetails?: pulumi.Input<pulumi.Input<inputs.ContainerengineClusterImagePolicyConfigKeyDetail>[]>;
}

export interface ContainerengineClusterImagePolicyConfigKeyDetail {
    kmsKeyId?: pulumi.Input<string>;
}

export interface ContainerengineClusterMetadata {
    createdByUserId: pulumi.Input<string>;
    createdByWorkRequestId: pulumi.Input<string>;
    deletedByUserId: pulumi.Input<string>;
    deletedByWorkRequestId: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeCredentialExpiration: pulumi.Input<string>;
    timeDeleted: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    updatedByUserId: pulumi.Input<string>;
    updatedByWorkRequestId: pulumi.Input<string>;
}

export interface ContainerengineClusterOptions {
    addOns?: pulumi.Input<inputs.ContainerengineClusterOptionsAddOns>;
    admissionControllerOptions?: pulumi.Input<inputs.ContainerengineClusterOptionsAdmissionControllerOptions>;
    kubernetesNetworkConfig?: pulumi.Input<inputs.ContainerengineClusterOptionsKubernetesNetworkConfig>;
    persistentVolumeConfig?: pulumi.Input<inputs.ContainerengineClusterOptionsPersistentVolumeConfig>;
    serviceLbConfig?: pulumi.Input<inputs.ContainerengineClusterOptionsServiceLbConfig>;
    serviceLbSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ContainerengineClusterOptionsAddOns {
    isKubernetesDashboardEnabled?: pulumi.Input<boolean>;
    isTillerEnabled?: pulumi.Input<boolean>;
}

export interface ContainerengineClusterOptionsAdmissionControllerOptions {
    isPodSecurityPolicyEnabled?: pulumi.Input<boolean>;
}

export interface ContainerengineClusterOptionsKubernetesNetworkConfig {
    podsCidr?: pulumi.Input<string>;
    servicesCidr?: pulumi.Input<string>;
}

export interface ContainerengineClusterOptionsPersistentVolumeConfig {
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ContainerengineClusterOptionsServiceLbConfig {
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ContainerengineClusterStartCredentialRotationManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerengineClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerengineClusterWorkloadMappingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerengineNodePoolInitialNodeLabel {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ContainerengineNodePoolNode {
    availabilityDomain: pulumi.Input<string>;
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    errors: pulumi.Input<pulumi.Input<inputs.ContainerengineNodePoolNodeError>[]>;
    faultDomain: pulumi.Input<string>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id: pulumi.Input<string>;
    kubernetesVersion: pulumi.Input<string>;
    lifecycleDetails: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nodePoolId: pulumi.Input<string>;
    privateIp: pulumi.Input<string>;
    publicIp: pulumi.Input<string>;
    state: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface ContainerengineNodePoolNodeConfigDetails {
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isPvEncryptionInTransitEnabled?: pulumi.Input<boolean>;
    kmsKeyId?: pulumi.Input<string>;
    nodePoolPodNetworkOptionDetails?: pulumi.Input<inputs.ContainerengineNodePoolNodeConfigDetailsNodePoolPodNetworkOptionDetails>;
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    placementConfigs: pulumi.Input<pulumi.Input<inputs.ContainerengineNodePoolNodeConfigDetailsPlacementConfig>[]>;
    size: pulumi.Input<number>;
}

export interface ContainerengineNodePoolNodeConfigDetailsNodePoolPodNetworkOptionDetails {
    cniType: pulumi.Input<string>;
    maxPodsPerNode?: pulumi.Input<number>;
    podNsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    podSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ContainerengineNodePoolNodeConfigDetailsPlacementConfig {
    availabilityDomain: pulumi.Input<string>;
    capacityReservationId?: pulumi.Input<string>;
    faultDomains?: pulumi.Input<pulumi.Input<string>[]>;
    preemptibleNodeConfig?: pulumi.Input<inputs.ContainerengineNodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfig>;
    subnetId: pulumi.Input<string>;
}

export interface ContainerengineNodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfig {
    preemptionAction: pulumi.Input<inputs.ContainerengineNodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionAction>;
}

export interface ContainerengineNodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionAction {
    isPreserveBootVolume?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface ContainerengineNodePoolNodeError {
    code: pulumi.Input<string>;
    message: pulumi.Input<string>;
    status: pulumi.Input<string>;
}

export interface ContainerengineNodePoolNodeEvictionNodePoolSettings {
    evictionGraceDuration?: pulumi.Input<string>;
    isForceDeleteAfterGraceDuration?: pulumi.Input<boolean>;
}

export interface ContainerengineNodePoolNodePoolCyclingDetails {
    isNodeCyclingEnabled?: pulumi.Input<boolean>;
    maximumSurge?: pulumi.Input<string>;
    maximumUnavailable?: pulumi.Input<string>;
}

export interface ContainerengineNodePoolNodeShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface ContainerengineNodePoolNodeSource {
    imageId: pulumi.Input<string>;
    sourceName: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface ContainerengineNodePoolNodeSourceDetails {
    bootVolumeSizeInGbs?: pulumi.Input<string>;
    imageId: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface ContainerengineNodePoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerengineVirtualNodePoolInitialVirtualNodeLabel {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ContainerengineVirtualNodePoolPlacementConfiguration {
    availabilityDomain: pulumi.Input<string>;
    faultDomains: pulumi.Input<pulumi.Input<string>[]>;
    subnetId: pulumi.Input<string>;
}

export interface ContainerengineVirtualNodePoolPodConfiguration {
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    shape: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface ContainerengineVirtualNodePoolTaint {
    effect?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ContainerengineVirtualNodePoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerengineVirtualNodePoolVirtualNodeTags {
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface CoreAppCatalogListingResourceVersionAgreementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreAppCatalogSubscriptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreBootVolumeAutotunePolicy {
    autotuneType: pulumi.Input<string>;
    maxVpusPerGb?: pulumi.Input<string>;
}

export interface CoreBootVolumeBackupSourceDetails {
    bootVolumeBackupId: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    region: pulumi.Input<string>;
}

export interface CoreBootVolumeBackupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreBootVolumeBootVolumeReplica {
    availabilityDomain: pulumi.Input<string>;
    bootVolumeReplicaId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface CoreBootVolumeSourceDetails {
    id: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CoreBootVolumeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreCaptureFilterFlowLogCaptureFilterRule {
    destinationCidr?: pulumi.Input<string>;
    flowLogType?: pulumi.Input<string>;
    icmpOptions?: pulumi.Input<inputs.CoreCaptureFilterFlowLogCaptureFilterRuleIcmpOptions>;
    isEnabled?: pulumi.Input<boolean>;
    priority?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    ruleAction?: pulumi.Input<string>;
    samplingRate?: pulumi.Input<number>;
    sourceCidr?: pulumi.Input<string>;
    tcpOptions?: pulumi.Input<inputs.CoreCaptureFilterFlowLogCaptureFilterRuleTcpOptions>;
    udpOptions?: pulumi.Input<inputs.CoreCaptureFilterFlowLogCaptureFilterRuleUdpOptions>;
}

export interface CoreCaptureFilterFlowLogCaptureFilterRuleIcmpOptions {
    code?: pulumi.Input<number>;
    type: pulumi.Input<number>;
}

export interface CoreCaptureFilterFlowLogCaptureFilterRuleTcpOptions {
    destinationPortRange?: pulumi.Input<inputs.CoreCaptureFilterFlowLogCaptureFilterRuleTcpOptionsDestinationPortRange>;
    sourcePortRange?: pulumi.Input<inputs.CoreCaptureFilterFlowLogCaptureFilterRuleTcpOptionsSourcePortRange>;
}

export interface CoreCaptureFilterFlowLogCaptureFilterRuleTcpOptionsDestinationPortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreCaptureFilterFlowLogCaptureFilterRuleTcpOptionsSourcePortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreCaptureFilterFlowLogCaptureFilterRuleUdpOptions {
    destinationPortRange?: pulumi.Input<inputs.CoreCaptureFilterFlowLogCaptureFilterRuleUdpOptionsDestinationPortRange>;
    sourcePortRange?: pulumi.Input<inputs.CoreCaptureFilterFlowLogCaptureFilterRuleUdpOptionsSourcePortRange>;
}

export interface CoreCaptureFilterFlowLogCaptureFilterRuleUdpOptionsDestinationPortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreCaptureFilterFlowLogCaptureFilterRuleUdpOptionsSourcePortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreCaptureFilterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreCaptureFilterVtapCaptureFilterRule {
    destinationCidr?: pulumi.Input<string>;
    icmpOptions?: pulumi.Input<inputs.CoreCaptureFilterVtapCaptureFilterRuleIcmpOptions>;
    protocol?: pulumi.Input<string>;
    ruleAction?: pulumi.Input<string>;
    sourceCidr?: pulumi.Input<string>;
    tcpOptions?: pulumi.Input<inputs.CoreCaptureFilterVtapCaptureFilterRuleTcpOptions>;
    trafficDirection: pulumi.Input<string>;
    udpOptions?: pulumi.Input<inputs.CoreCaptureFilterVtapCaptureFilterRuleUdpOptions>;
}

export interface CoreCaptureFilterVtapCaptureFilterRuleIcmpOptions {
    code?: pulumi.Input<number>;
    type: pulumi.Input<number>;
}

export interface CoreCaptureFilterVtapCaptureFilterRuleTcpOptions {
    destinationPortRange?: pulumi.Input<inputs.CoreCaptureFilterVtapCaptureFilterRuleTcpOptionsDestinationPortRange>;
    sourcePortRange?: pulumi.Input<inputs.CoreCaptureFilterVtapCaptureFilterRuleTcpOptionsSourcePortRange>;
}

export interface CoreCaptureFilterVtapCaptureFilterRuleTcpOptionsDestinationPortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreCaptureFilterVtapCaptureFilterRuleTcpOptionsSourcePortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreCaptureFilterVtapCaptureFilterRuleUdpOptions {
    destinationPortRange?: pulumi.Input<inputs.CoreCaptureFilterVtapCaptureFilterRuleUdpOptionsDestinationPortRange>;
    sourcePortRange?: pulumi.Input<inputs.CoreCaptureFilterVtapCaptureFilterRuleUdpOptionsSourcePortRange>;
}

export interface CoreCaptureFilterVtapCaptureFilterRuleUdpOptionsDestinationPortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreCaptureFilterVtapCaptureFilterRuleUdpOptionsSourcePortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreClusterNetworkClusterConfiguration {
    hpcIslandId: pulumi.Input<string>;
    networkBlockIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CoreClusterNetworkInstancePool {
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<string>;
    instanceConfigurationId: pulumi.Input<string>;
    instanceDisplayNameFormatter?: pulumi.Input<string>;
    instanceHostnameFormatter?: pulumi.Input<string>;
    loadBalancers?: pulumi.Input<pulumi.Input<inputs.CoreClusterNetworkInstancePoolLoadBalancer>[]>;
    placementConfigurations?: pulumi.Input<pulumi.Input<inputs.CoreClusterNetworkInstancePoolPlacementConfiguration>[]>;
    size: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
}

export interface CoreClusterNetworkInstancePoolLoadBalancer {
    backendSetName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    instancePoolId: pulumi.Input<string>;
    loadBalancerId: pulumi.Input<string>;
    port: pulumi.Input<number>;
    state: pulumi.Input<string>;
    vnicSelection: pulumi.Input<string>;
}

export interface CoreClusterNetworkInstancePoolPlacementConfiguration {
    availabilityDomain: pulumi.Input<string>;
    faultDomains: pulumi.Input<pulumi.Input<string>[]>;
    primarySubnetId: pulumi.Input<string>;
    primaryVnicSubnets: pulumi.Input<pulumi.Input<inputs.CoreClusterNetworkInstancePoolPlacementConfigurationPrimaryVnicSubnet>[]>;
    secondaryVnicSubnets: pulumi.Input<pulumi.Input<inputs.CoreClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnet>[]>;
}

export interface CoreClusterNetworkInstancePoolPlacementConfigurationPrimaryVnicSubnet {
    ipv6addressIpv6subnetCidrPairDetails: pulumi.Input<pulumi.Input<inputs.CoreClusterNetworkInstancePoolPlacementConfigurationPrimaryVnicSubnetIpv6addressIpv6subnetCidrPairDetail>[]>;
    isAssignIpv6ip: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
}

export interface CoreClusterNetworkInstancePoolPlacementConfigurationPrimaryVnicSubnetIpv6addressIpv6subnetCidrPairDetail {
    ipv6subnetCidr: pulumi.Input<string>;
}

export interface CoreClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnet {
    displayName: pulumi.Input<string>;
    ipv6addressIpv6subnetCidrPairDetails: pulumi.Input<pulumi.Input<inputs.CoreClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnetIpv6addressIpv6subnetCidrPairDetail>[]>;
    isAssignIpv6ip: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
}

export interface CoreClusterNetworkInstancePoolPlacementConfigurationSecondaryVnicSubnetIpv6addressIpv6subnetCidrPairDetail {
    ipv6subnetCidr: pulumi.Input<string>;
}

export interface CoreClusterNetworkPlacementConfiguration {
    availabilityDomain: pulumi.Input<string>;
    placementConstraint?: pulumi.Input<string>;
    primarySubnetId?: pulumi.Input<string>;
    primaryVnicSubnets?: pulumi.Input<inputs.CoreClusterNetworkPlacementConfigurationPrimaryVnicSubnets>;
    secondaryVnicSubnets?: pulumi.Input<pulumi.Input<inputs.CoreClusterNetworkPlacementConfigurationSecondaryVnicSubnet>[]>;
}

export interface CoreClusterNetworkPlacementConfigurationPrimaryVnicSubnets {
    ipv6addressIpv6subnetCidrPairDetails?: pulumi.Input<pulumi.Input<inputs.CoreClusterNetworkPlacementConfigurationPrimaryVnicSubnetsIpv6addressIpv6subnetCidrPairDetail>[]>;
    isAssignIpv6ip?: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
}

export interface CoreClusterNetworkPlacementConfigurationPrimaryVnicSubnetsIpv6addressIpv6subnetCidrPairDetail {
    ipv6subnetCidr?: pulumi.Input<string>;
}

export interface CoreClusterNetworkPlacementConfigurationSecondaryVnicSubnet {
    displayName?: pulumi.Input<string>;
    ipv6addressIpv6subnetCidrPairDetails?: pulumi.Input<pulumi.Input<inputs.CoreClusterNetworkPlacementConfigurationSecondaryVnicSubnetIpv6addressIpv6subnetCidrPairDetail>[]>;
    isAssignIpv6ip?: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
}

export interface CoreClusterNetworkPlacementConfigurationSecondaryVnicSubnetIpv6addressIpv6subnetCidrPairDetail {
    ipv6subnetCidr?: pulumi.Input<string>;
}

export interface CoreClusterNetworkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreComputeCapacityReportShapeAvailability {
    availabilityStatus?: pulumi.Input<string>;
    availableCount?: pulumi.Input<string>;
    faultDomain?: pulumi.Input<string>;
    instanceShape: pulumi.Input<string>;
    instanceShapeConfig?: pulumi.Input<inputs.CoreComputeCapacityReportShapeAvailabilityInstanceShapeConfig>;
}

export interface CoreComputeCapacityReportShapeAvailabilityInstanceShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    nvmes?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface CoreComputeCapacityReportTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreComputeCapacityReservationInstanceReservationConfig {
    clusterConfig?: pulumi.Input<inputs.CoreComputeCapacityReservationInstanceReservationConfigClusterConfig>;
    clusterPlacementGroupId?: pulumi.Input<string>;
    faultDomain?: pulumi.Input<string>;
    instanceShape: pulumi.Input<string>;
    instanceShapeConfig?: pulumi.Input<inputs.CoreComputeCapacityReservationInstanceReservationConfigInstanceShapeConfig>;
    reservedCount: pulumi.Input<string>;
    usedCount?: pulumi.Input<string>;
}

export interface CoreComputeCapacityReservationInstanceReservationConfigClusterConfig {
    hpcIslandId: pulumi.Input<string>;
    networkBlockIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CoreComputeCapacityReservationInstanceReservationConfigInstanceShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface CoreComputeCapacityReservationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreComputeCapacityTopologyCapacitySource {
    capacityType: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
}

export interface CoreComputeCapacityTopologyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreComputeClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreComputeImageCapabilitySchemaTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreConsoleHistoryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreCpeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreCrossConnectGroupMacsecProperties {
    encryptionCipher?: pulumi.Input<string>;
    isUnprotectedTrafficAllowed?: pulumi.Input<boolean>;
    primaryKey?: pulumi.Input<inputs.CoreCrossConnectGroupMacsecPropertiesPrimaryKey>;
    state: pulumi.Input<string>;
}

export interface CoreCrossConnectGroupMacsecPropertiesPrimaryKey {
    connectivityAssociationKeySecretId: pulumi.Input<string>;
    connectivityAssociationKeySecretVersion?: pulumi.Input<string>;
    connectivityAssociationNameSecretId: pulumi.Input<string>;
    connectivityAssociationNameSecretVersion?: pulumi.Input<string>;
}

export interface CoreCrossConnectGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreCrossConnectMacsecProperties {
    encryptionCipher?: pulumi.Input<string>;
    isUnprotectedTrafficAllowed?: pulumi.Input<boolean>;
    primaryKey?: pulumi.Input<inputs.CoreCrossConnectMacsecPropertiesPrimaryKey>;
    state: pulumi.Input<string>;
}

export interface CoreCrossConnectMacsecPropertiesPrimaryKey {
    connectivityAssociationKeySecretId: pulumi.Input<string>;
    connectivityAssociationKeySecretVersion?: pulumi.Input<string>;
    connectivityAssociationNameSecretId: pulumi.Input<string>;
    connectivityAssociationNameSecretVersion?: pulumi.Input<string>;
}

export interface CoreCrossConnectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreDedicatedVmHostTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreDefaultDhcpOptionsOption {
    customDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    searchDomainNames?: pulumi.Input<pulumi.Input<string>[]>;
    serverType?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CoreDefaultDhcpOptionsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreDefaultRouteTableRouteRule {
    /**
     * @deprecated Deprecated
     */
    cidrBlock?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    destination?: pulumi.Input<string>;
    destinationType?: pulumi.Input<string>;
    networkEntityId: pulumi.Input<string>;
    routeType?: pulumi.Input<string>;
}

export interface CoreDefaultRouteTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreDefaultSecurityListEgressSecurityRule {
    description?: pulumi.Input<string>;
    destination: pulumi.Input<string>;
    destinationType?: pulumi.Input<string>;
    icmpOptions?: pulumi.Input<inputs.CoreDefaultSecurityListEgressSecurityRuleIcmpOptions>;
    protocol: pulumi.Input<string>;
    stateless?: pulumi.Input<boolean>;
    tcpOptions?: pulumi.Input<inputs.CoreDefaultSecurityListEgressSecurityRuleTcpOptions>;
    udpOptions?: pulumi.Input<inputs.CoreDefaultSecurityListEgressSecurityRuleUdpOptions>;
}

export interface CoreDefaultSecurityListEgressSecurityRuleIcmpOptions {
    code?: pulumi.Input<number>;
    type: pulumi.Input<number>;
}

export interface CoreDefaultSecurityListEgressSecurityRuleTcpOptions {
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
    sourcePortRange?: pulumi.Input<inputs.CoreDefaultSecurityListEgressSecurityRuleTcpOptionsSourcePortRange>;
}

export interface CoreDefaultSecurityListEgressSecurityRuleTcpOptionsSourcePortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreDefaultSecurityListEgressSecurityRuleUdpOptions {
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
    sourcePortRange?: pulumi.Input<inputs.CoreDefaultSecurityListEgressSecurityRuleUdpOptionsSourcePortRange>;
}

export interface CoreDefaultSecurityListEgressSecurityRuleUdpOptionsSourcePortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreDefaultSecurityListIngressSecurityRule {
    description?: pulumi.Input<string>;
    icmpOptions?: pulumi.Input<inputs.CoreDefaultSecurityListIngressSecurityRuleIcmpOptions>;
    protocol: pulumi.Input<string>;
    source: pulumi.Input<string>;
    sourceType?: pulumi.Input<string>;
    stateless?: pulumi.Input<boolean>;
    tcpOptions?: pulumi.Input<inputs.CoreDefaultSecurityListIngressSecurityRuleTcpOptions>;
    udpOptions?: pulumi.Input<inputs.CoreDefaultSecurityListIngressSecurityRuleUdpOptions>;
}

export interface CoreDefaultSecurityListIngressSecurityRuleIcmpOptions {
    code?: pulumi.Input<number>;
    type: pulumi.Input<number>;
}

export interface CoreDefaultSecurityListIngressSecurityRuleTcpOptions {
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
    sourcePortRange?: pulumi.Input<inputs.CoreDefaultSecurityListIngressSecurityRuleTcpOptionsSourcePortRange>;
}

export interface CoreDefaultSecurityListIngressSecurityRuleTcpOptionsSourcePortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreDefaultSecurityListIngressSecurityRuleUdpOptions {
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
    sourcePortRange?: pulumi.Input<inputs.CoreDefaultSecurityListIngressSecurityRuleUdpOptionsSourcePortRange>;
}

export interface CoreDefaultSecurityListIngressSecurityRuleUdpOptionsSourcePortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreDefaultSecurityListTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreDhcpOptionsOption {
    customDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    searchDomainNames?: pulumi.Input<pulumi.Input<string>[]>;
    serverType?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CoreDhcpOptionsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreDrgAttachmentManagementNetworkDetails {
    id: pulumi.Input<string>;
    ipsecConnectionId?: pulumi.Input<string>;
    routeTableId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CoreDrgAttachmentManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreDrgAttachmentNetworkDetails {
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    ipsecConnectionId?: pulumi.Input<string>;
    routeTableId?: pulumi.Input<string>;
    transportAttachmentId?: pulumi.Input<string>;
    transportOnlyMode?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    vcnRouteType?: pulumi.Input<string>;
}

export interface CoreDrgAttachmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreDrgAttachmentsListDrgAllAttachment {
    id: pulumi.Input<string>;
}

export interface CoreDrgAttachmentsListTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreDrgDefaultDrgRouteTable {
    ipsecTunnel: pulumi.Input<string>;
    remotePeeringConnection: pulumi.Input<string>;
    vcn: pulumi.Input<string>;
    virtualCircuit: pulumi.Input<string>;
}

export interface CoreDrgRouteDistributionStatementMatchCriteria {
    attachmentType?: pulumi.Input<string>;
    drgAttachmentId?: pulumi.Input<string>;
    matchType?: pulumi.Input<string>;
}

export interface CoreDrgRouteDistributionStatementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreDrgRouteDistributionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreDrgRouteTableRouteRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreDrgRouteTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreDrgTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreImageAgentFeature {
    isManagementSupported: pulumi.Input<boolean>;
    isMonitoringSupported: pulumi.Input<boolean>;
}

export interface CoreImageImageSourceDetails {
    bucketName?: pulumi.Input<string>;
    namespaceName?: pulumi.Input<string>;
    objectName?: pulumi.Input<string>;
    operatingSystem?: pulumi.Input<string>;
    operatingSystemVersion?: pulumi.Input<string>;
    sourceImageType?: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
    sourceUri?: pulumi.Input<string>;
}

export interface CoreImageLaunchOption {
    bootVolumeType: pulumi.Input<string>;
    firmware: pulumi.Input<string>;
    isConsistentVolumeNamingEnabled: pulumi.Input<boolean>;
    isPvEncryptionInTransitEnabled: pulumi.Input<boolean>;
    networkType: pulumi.Input<string>;
    remoteDataVolumeType: pulumi.Input<string>;
}

export interface CoreImageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreInstanceAgentConfig {
    areAllPluginsDisabled?: pulumi.Input<boolean>;
    isManagementDisabled?: pulumi.Input<boolean>;
    isMonitoringDisabled?: pulumi.Input<boolean>;
    pluginsConfigs?: pulumi.Input<pulumi.Input<inputs.CoreInstanceAgentConfigPluginsConfig>[]>;
}

export interface CoreInstanceAgentConfigPluginsConfig {
    desiredState: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface CoreInstanceAvailabilityConfig {
    isLiveMigrationPreferred?: pulumi.Input<boolean>;
    recoveryAction?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetails {
    blockVolumes?: pulumi.Input<pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsBlockVolume>[]>;
    instanceType: pulumi.Input<string>;
    launchDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsLaunchDetails>;
    options?: pulumi.Input<pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOption>[]>;
    secondaryVnics?: pulumi.Input<pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsSecondaryVnic>[]>;
}

export interface CoreInstanceConfigurationInstanceDetailsBlockVolume {
    attachDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsBlockVolumeAttachDetails>;
    createDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetails>;
    volumeId?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsBlockVolumeAttachDetails {
    device?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    isPvEncryptionInTransitEnabled?: pulumi.Input<boolean>;
    isReadOnly?: pulumi.Input<boolean>;
    isShareable?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    useChap?: pulumi.Input<boolean>;
}

export interface CoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetails {
    autotunePolicies?: pulumi.Input<pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsAutotunePolicy>[]>;
    availabilityDomain?: pulumi.Input<string>;
    backupPolicyId?: pulumi.Input<string>;
    blockVolumeReplicas?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsBlockVolumeReplicas>;
    clusterPlacementGroupId?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isAutoTuneEnabled?: pulumi.Input<boolean>;
    kmsKeyId?: pulumi.Input<string>;
    sizeInGbs?: pulumi.Input<string>;
    sourceDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsSourceDetails>;
    vpusPerGb?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsAutotunePolicy {
    autotuneType: pulumi.Input<string>;
    maxVpusPerGb?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsBlockVolumeReplicas {
    availabilityDomain: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsBlockVolumeCreateDetailsSourceDetails {
    id?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetails {
    agentConfig?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfig>;
    availabilityConfig?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfig>;
    availabilityDomain?: pulumi.Input<string>;
    capacityReservationId?: pulumi.Input<string>;
    clusterPlacementGroupId?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    createVnicDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetails>;
    dedicatedVmHostId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    extendedMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    faultDomain?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceOptions?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptions>;
    ipxeScript?: pulumi.Input<string>;
    isPvEncryptionInTransitEnabled?: pulumi.Input<boolean>;
    launchMode?: pulumi.Input<string>;
    launchOptions?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptions>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    platformConfig?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfig>;
    preemptibleInstanceConfig?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfig>;
    preferredMaintenanceAction?: pulumi.Input<string>;
    shape?: pulumi.Input<string>;
    shapeConfig?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsShapeConfig>;
    sourceDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsSourceDetails>;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfig {
    areAllPluginsDisabled?: pulumi.Input<boolean>;
    isManagementDisabled?: pulumi.Input<boolean>;
    isMonitoringDisabled?: pulumi.Input<boolean>;
    pluginsConfigs?: pulumi.Input<pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigPluginsConfig>[]>;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsAgentConfigPluginsConfig {
    desiredState?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsAvailabilityConfig {
    isLiveMigrationPreferred?: pulumi.Input<boolean>;
    recoveryAction?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetails {
    assignIpv6ip?: pulumi.Input<boolean>;
    assignPrivateDnsRecord?: pulumi.Input<boolean>;
    assignPublicIp?: pulumi.Input<boolean>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostnameLabel?: pulumi.Input<string>;
    ipv6addressIpv6subnetCidrPairDetails?: pulumi.Input<pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetail>[]>;
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    privateIp?: pulumi.Input<string>;
    skipSourceDestCheck?: pulumi.Input<boolean>;
    subnetId?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetail {
    ipv6address?: pulumi.Input<string>;
    ipv6subnetCidr?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsInstanceOptions {
    areLegacyImdsEndpointsDisabled?: pulumi.Input<boolean>;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsLaunchOptions {
    bootVolumeType?: pulumi.Input<string>;
    firmware?: pulumi.Input<string>;
    isConsistentVolumeNamingEnabled?: pulumi.Input<boolean>;
    isPvEncryptionInTransitEnabled?: pulumi.Input<boolean>;
    networkType?: pulumi.Input<string>;
    remoteDataVolumeType?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsPlatformConfig {
    areVirtualInstructionsEnabled?: pulumi.Input<boolean>;
    configMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isAccessControlServiceEnabled?: pulumi.Input<boolean>;
    isInputOutputMemoryManagementUnitEnabled?: pulumi.Input<boolean>;
    isMeasuredBootEnabled?: pulumi.Input<boolean>;
    isMemoryEncryptionEnabled?: pulumi.Input<boolean>;
    isSecureBootEnabled?: pulumi.Input<boolean>;
    isSymmetricMultiThreadingEnabled?: pulumi.Input<boolean>;
    isTrustedPlatformModuleEnabled?: pulumi.Input<boolean>;
    numaNodesPerSocket?: pulumi.Input<string>;
    percentageOfCoresEnabled?: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfig {
    preemptionAction?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionAction>;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsPreemptibleInstanceConfigPreemptionAction {
    preserveBootVolume?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsShapeConfig {
    baselineOcpuUtilization?: pulumi.Input<string>;
    memoryInGbs?: pulumi.Input<number>;
    nvmes?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
    vcpus?: pulumi.Input<number>;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsSourceDetails {
    bootVolumeId?: pulumi.Input<string>;
    bootVolumeSizeInGbs?: pulumi.Input<string>;
    bootVolumeVpusPerGb?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    instanceSourceImageFilterDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsInstanceSourceImageFilterDetails>;
    kmsKeyId?: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsLaunchDetailsSourceDetailsInstanceSourceImageFilterDetails {
    compartmentId?: pulumi.Input<string>;
    definedTagsFilter?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    operatingSystem?: pulumi.Input<string>;
    operatingSystemVersion?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOption {
    blockVolumes?: pulumi.Input<pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionBlockVolume>[]>;
    launchDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionLaunchDetails>;
    secondaryVnics?: pulumi.Input<pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionSecondaryVnic>[]>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionBlockVolume {
    attachDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionBlockVolumeAttachDetails>;
    createDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionBlockVolumeCreateDetails>;
    volumeId?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionBlockVolumeAttachDetails {
    device?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    isPvEncryptionInTransitEnabled?: pulumi.Input<boolean>;
    isReadOnly?: pulumi.Input<boolean>;
    isShareable?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    useChap?: pulumi.Input<boolean>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionBlockVolumeCreateDetails {
    autotunePolicies?: pulumi.Input<pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionBlockVolumeCreateDetailsAutotunePolicy>[]>;
    availabilityDomain?: pulumi.Input<string>;
    backupPolicyId?: pulumi.Input<string>;
    blockVolumeReplicas?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionBlockVolumeCreateDetailsBlockVolumeReplicas>;
    clusterPlacementGroupId?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isAutoTuneEnabled?: pulumi.Input<boolean>;
    kmsKeyId?: pulumi.Input<string>;
    sizeInGbs?: pulumi.Input<string>;
    sourceDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionBlockVolumeCreateDetailsSourceDetails>;
    vpusPerGb?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionBlockVolumeCreateDetailsAutotunePolicy {
    autotuneType: pulumi.Input<string>;
    maxVpusPerGb?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionBlockVolumeCreateDetailsBlockVolumeReplicas {
    availabilityDomain: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionBlockVolumeCreateDetailsSourceDetails {
    id?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionLaunchDetails {
    agentConfig?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfig>;
    availabilityConfig?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsAvailabilityConfig>;
    availabilityDomain?: pulumi.Input<string>;
    capacityReservationId?: pulumi.Input<string>;
    clusterPlacementGroupId?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    createVnicDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsCreateVnicDetails>;
    dedicatedVmHostId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    extendedMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    faultDomain?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceOptions?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsInstanceOptions>;
    ipxeScript?: pulumi.Input<string>;
    isPvEncryptionInTransitEnabled?: pulumi.Input<boolean>;
    launchMode?: pulumi.Input<string>;
    launchOptions?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsLaunchOptions>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    platformConfig?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsPlatformConfig>;
    preemptibleInstanceConfig?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsPreemptibleInstanceConfig>;
    preferredMaintenanceAction?: pulumi.Input<string>;
    shape?: pulumi.Input<string>;
    shapeConfig?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsShapeConfig>;
    sourceDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsSourceDetails>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfig {
    areAllPluginsDisabled?: pulumi.Input<boolean>;
    isManagementDisabled?: pulumi.Input<boolean>;
    isMonitoringDisabled?: pulumi.Input<boolean>;
    pluginsConfigs?: pulumi.Input<pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigPluginsConfig>[]>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsAgentConfigPluginsConfig {
    desiredState?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsAvailabilityConfig {
    isLiveMigrationPreferred?: pulumi.Input<boolean>;
    recoveryAction?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsCreateVnicDetails {
    assignIpv6ip?: pulumi.Input<boolean>;
    assignPrivateDnsRecord?: pulumi.Input<boolean>;
    assignPublicIp?: pulumi.Input<boolean>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostnameLabel?: pulumi.Input<string>;
    ipv6addressIpv6subnetCidrPairDetails?: pulumi.Input<pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetail>[]>;
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    privateIp?: pulumi.Input<string>;
    skipSourceDestCheck?: pulumi.Input<boolean>;
    subnetId?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetail {
    ipv6address?: pulumi.Input<string>;
    ipv6subnetCidr?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsInstanceOptions {
    areLegacyImdsEndpointsDisabled?: pulumi.Input<boolean>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsLaunchOptions {
    bootVolumeType?: pulumi.Input<string>;
    firmware?: pulumi.Input<string>;
    isConsistentVolumeNamingEnabled?: pulumi.Input<boolean>;
    isPvEncryptionInTransitEnabled?: pulumi.Input<boolean>;
    networkType?: pulumi.Input<string>;
    remoteDataVolumeType?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsPlatformConfig {
    areVirtualInstructionsEnabled?: pulumi.Input<boolean>;
    isAccessControlServiceEnabled?: pulumi.Input<boolean>;
    isInputOutputMemoryManagementUnitEnabled?: pulumi.Input<boolean>;
    isMeasuredBootEnabled?: pulumi.Input<boolean>;
    isMemoryEncryptionEnabled?: pulumi.Input<boolean>;
    isSecureBootEnabled?: pulumi.Input<boolean>;
    isSymmetricMultiThreadingEnabled?: pulumi.Input<boolean>;
    isTrustedPlatformModuleEnabled?: pulumi.Input<boolean>;
    numaNodesPerSocket?: pulumi.Input<string>;
    percentageOfCoresEnabled?: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsPreemptibleInstanceConfig {
    preemptionAction?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsPreemptibleInstanceConfigPreemptionAction>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsPreemptibleInstanceConfigPreemptionAction {
    preserveBootVolume?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsShapeConfig {
    baselineOcpuUtilization?: pulumi.Input<string>;
    memoryInGbs?: pulumi.Input<number>;
    nvmes?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
    vcpus?: pulumi.Input<number>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsSourceDetails {
    bootVolumeId?: pulumi.Input<string>;
    bootVolumeSizeInGbs?: pulumi.Input<string>;
    bootVolumeVpusPerGb?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    instanceSourceImageFilterDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsSourceDetailsInstanceSourceImageFilterDetails>;
    kmsKeyId?: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionLaunchDetailsSourceDetailsInstanceSourceImageFilterDetails {
    compartmentId?: pulumi.Input<string>;
    definedTagsFilter?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    operatingSystem?: pulumi.Input<string>;
    operatingSystemVersion?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionSecondaryVnic {
    createVnicDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionSecondaryVnicCreateVnicDetails>;
    displayName?: pulumi.Input<string>;
    nicIndex?: pulumi.Input<number>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionSecondaryVnicCreateVnicDetails {
    assignIpv6ip?: pulumi.Input<boolean>;
    assignPrivateDnsRecord?: pulumi.Input<boolean>;
    assignPublicIp?: pulumi.Input<boolean>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostnameLabel?: pulumi.Input<string>;
    ipv6addressIpv6subnetCidrPairDetails?: pulumi.Input<pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsOptionSecondaryVnicCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetail>[]>;
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    privateIp?: pulumi.Input<string>;
    skipSourceDestCheck?: pulumi.Input<boolean>;
    subnetId?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsOptionSecondaryVnicCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetail {
    ipv6address?: pulumi.Input<string>;
    ipv6subnetCidr?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsSecondaryVnic {
    createVnicDetails?: pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsSecondaryVnicCreateVnicDetails>;
    displayName?: pulumi.Input<string>;
    nicIndex?: pulumi.Input<number>;
}

export interface CoreInstanceConfigurationInstanceDetailsSecondaryVnicCreateVnicDetails {
    assignIpv6ip?: pulumi.Input<boolean>;
    assignPrivateDnsRecord?: pulumi.Input<boolean>;
    assignPublicIp?: pulumi.Input<boolean>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostnameLabel?: pulumi.Input<string>;
    ipv6addressIpv6subnetCidrPairDetails?: pulumi.Input<pulumi.Input<inputs.CoreInstanceConfigurationInstanceDetailsSecondaryVnicCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetail>[]>;
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    privateIp?: pulumi.Input<string>;
    skipSourceDestCheck?: pulumi.Input<boolean>;
    subnetId?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationInstanceDetailsSecondaryVnicCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetail {
    ipv6address?: pulumi.Input<string>;
    ipv6subnetCidr?: pulumi.Input<string>;
}

export interface CoreInstanceConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreInstanceConsoleConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreInstanceCreateVnicDetails {
    assignIpv6ip?: pulumi.Input<boolean>;
    assignPrivateDnsRecord?: pulumi.Input<boolean>;
    assignPublicIp?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostnameLabel?: pulumi.Input<string>;
    ipv6addressIpv6subnetCidrPairDetails?: pulumi.Input<pulumi.Input<inputs.CoreInstanceCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetail>[]>;
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    privateIp?: pulumi.Input<string>;
    skipSourceDestCheck?: pulumi.Input<boolean>;
    subnetId?: pulumi.Input<string>;
    vlanId?: pulumi.Input<string>;
}

export interface CoreInstanceCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetail {
    ipv6address?: pulumi.Input<string>;
    ipv6subnetCidr?: pulumi.Input<string>;
}

export interface CoreInstanceInstanceOptions {
    areLegacyImdsEndpointsDisabled?: pulumi.Input<boolean>;
}

export interface CoreInstanceLaunchOptions {
    bootVolumeType?: pulumi.Input<string>;
    firmware?: pulumi.Input<string>;
    isConsistentVolumeNamingEnabled?: pulumi.Input<boolean>;
    isPvEncryptionInTransitEnabled?: pulumi.Input<boolean>;
    networkType?: pulumi.Input<string>;
    remoteDataVolumeType?: pulumi.Input<string>;
}

export interface CoreInstanceLaunchVolumeAttachment {
    device?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    encryptionInTransitType?: pulumi.Input<string>;
    isAgentAutoIscsiLoginEnabled?: pulumi.Input<boolean>;
    isReadOnly?: pulumi.Input<boolean>;
    isShareable?: pulumi.Input<boolean>;
    launchCreateVolumeDetails?: pulumi.Input<inputs.CoreInstanceLaunchVolumeAttachmentLaunchCreateVolumeDetails>;
    type: pulumi.Input<string>;
    useChap?: pulumi.Input<boolean>;
    volumeId?: pulumi.Input<string>;
}

export interface CoreInstanceLaunchVolumeAttachmentLaunchCreateVolumeDetails {
    compartmentId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    sizeInGbs: pulumi.Input<string>;
    volumeCreationType: pulumi.Input<string>;
    vpusPerGb?: pulumi.Input<string>;
}

export interface CoreInstanceMaintenanceEventTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreInstancePlatformConfig {
    areVirtualInstructionsEnabled?: pulumi.Input<boolean>;
    configMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isAccessControlServiceEnabled?: pulumi.Input<boolean>;
    isInputOutputMemoryManagementUnitEnabled?: pulumi.Input<boolean>;
    isMeasuredBootEnabled?: pulumi.Input<boolean>;
    isMemoryEncryptionEnabled?: pulumi.Input<boolean>;
    isSecureBootEnabled?: pulumi.Input<boolean>;
    isSymmetricMultiThreadingEnabled?: pulumi.Input<boolean>;
    isTrustedPlatformModuleEnabled?: pulumi.Input<boolean>;
    numaNodesPerSocket?: pulumi.Input<string>;
    percentageOfCoresEnabled?: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface CoreInstancePoolInstanceLoadBalancerBackend {
    backendHealthStatus: pulumi.Input<string>;
    backendName: pulumi.Input<string>;
    backendSetName: pulumi.Input<string>;
    loadBalancerId: pulumi.Input<string>;
    state: pulumi.Input<string>;
}

export interface CoreInstancePoolInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreInstancePoolLoadBalancer {
    backendSetName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instancePoolId?: pulumi.Input<string>;
    loadBalancerId: pulumi.Input<string>;
    port: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    vnicSelection: pulumi.Input<string>;
}

export interface CoreInstancePoolPlacementConfiguration {
    availabilityDomain: pulumi.Input<string>;
    faultDomains?: pulumi.Input<pulumi.Input<string>[]>;
    primarySubnetId?: pulumi.Input<string>;
    primaryVnicSubnets?: pulumi.Input<inputs.CoreInstancePoolPlacementConfigurationPrimaryVnicSubnets>;
    secondaryVnicSubnets?: pulumi.Input<pulumi.Input<inputs.CoreInstancePoolPlacementConfigurationSecondaryVnicSubnet>[]>;
}

export interface CoreInstancePoolPlacementConfigurationPrimaryVnicSubnets {
    ipv6addressIpv6subnetCidrPairDetails?: pulumi.Input<pulumi.Input<inputs.CoreInstancePoolPlacementConfigurationPrimaryVnicSubnetsIpv6addressIpv6subnetCidrPairDetail>[]>;
    isAssignIpv6ip?: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
}

export interface CoreInstancePoolPlacementConfigurationPrimaryVnicSubnetsIpv6addressIpv6subnetCidrPairDetail {
    ipv6subnetCidr?: pulumi.Input<string>;
}

export interface CoreInstancePoolPlacementConfigurationSecondaryVnicSubnet {
    displayName?: pulumi.Input<string>;
    ipv6addressIpv6subnetCidrPairDetails?: pulumi.Input<pulumi.Input<inputs.CoreInstancePoolPlacementConfigurationSecondaryVnicSubnetIpv6addressIpv6subnetCidrPairDetail>[]>;
    isAssignIpv6ip?: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
}

export interface CoreInstancePoolPlacementConfigurationSecondaryVnicSubnetIpv6addressIpv6subnetCidrPairDetail {
    ipv6subnetCidr?: pulumi.Input<string>;
}

export interface CoreInstancePoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreInstancePreemptibleInstanceConfig {
    preemptionAction: pulumi.Input<inputs.CoreInstancePreemptibleInstanceConfigPreemptionAction>;
}

export interface CoreInstancePreemptibleInstanceConfigPreemptionAction {
    preserveBootVolume?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface CoreInstanceShapeConfig {
    baselineOcpuUtilization?: pulumi.Input<string>;
    gpuDescription?: pulumi.Input<string>;
    gpus?: pulumi.Input<number>;
    localDiskDescription?: pulumi.Input<string>;
    localDisks?: pulumi.Input<number>;
    localDisksTotalSizeInGbs?: pulumi.Input<number>;
    maxVnicAttachments?: pulumi.Input<number>;
    memoryInGbs?: pulumi.Input<number>;
    networkingBandwidthInGbps?: pulumi.Input<number>;
    nvmes?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
    processorDescription?: pulumi.Input<string>;
    vcpus?: pulumi.Input<number>;
}

export interface CoreInstanceSourceDetails {
    bootVolumeSizeInGbs?: pulumi.Input<string>;
    bootVolumeVpusPerGb?: pulumi.Input<string>;
    instanceSourceImageFilterDetails?: pulumi.Input<inputs.CoreInstanceSourceDetailsInstanceSourceImageFilterDetails>;
    isPreserveBootVolumeEnabled?: pulumi.Input<boolean>;
    kmsKeyId?: pulumi.Input<string>;
    sourceId?: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface CoreInstanceSourceDetailsInstanceSourceImageFilterDetails {
    compartmentId: pulumi.Input<string>;
    definedTagsFilter?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    operatingSystem?: pulumi.Input<string>;
    operatingSystemVersion?: pulumi.Input<string>;
}

export interface CoreInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreInternetGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreIpsecConnectionTunnelManagementBgpSessionInfo {
    bgpIpv6State?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    bgpIpv6state?: pulumi.Input<string>;
    bgpState?: pulumi.Input<string>;
    customerBgpAsn?: pulumi.Input<string>;
    customerInterfaceIp?: pulumi.Input<string>;
    customerInterfaceIpv6?: pulumi.Input<string>;
    oracleBgpAsn?: pulumi.Input<string>;
    oracleInterfaceIp?: pulumi.Input<string>;
    oracleInterfaceIpv6?: pulumi.Input<string>;
}

export interface CoreIpsecConnectionTunnelManagementDpdConfig {
    dpdMode?: pulumi.Input<string>;
    dpdTimeoutInSec?: pulumi.Input<number>;
}

export interface CoreIpsecConnectionTunnelManagementEncryptionDomainConfig {
    cpeTrafficSelectors?: pulumi.Input<pulumi.Input<string>[]>;
    oracleTrafficSelectors?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CoreIpsecConnectionTunnelManagementPhaseOneDetails {
    customAuthenticationAlgorithm?: pulumi.Input<string>;
    customDhGroup?: pulumi.Input<string>;
    customEncryptionAlgorithm?: pulumi.Input<string>;
    isCustomPhaseOneConfig?: pulumi.Input<boolean>;
    isIkeEstablished?: pulumi.Input<boolean>;
    lifetime?: pulumi.Input<number>;
    negotiatedAuthenticationAlgorithm?: pulumi.Input<string>;
    negotiatedDhGroup?: pulumi.Input<string>;
    negotiatedEncryptionAlgorithm?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    remainingLifetime?: pulumi.Input<string>;
    remainingLifetimeInt?: pulumi.Input<number>;
    remainingLifetimeLastRetrieved?: pulumi.Input<string>;
}

export interface CoreIpsecConnectionTunnelManagementPhaseTwoDetails {
    customAuthenticationAlgorithm?: pulumi.Input<string>;
    customEncryptionAlgorithm?: pulumi.Input<string>;
    dhGroup?: pulumi.Input<string>;
    isCustomPhaseTwoConfig?: pulumi.Input<boolean>;
    isEspEstablished?: pulumi.Input<boolean>;
    isPfsEnabled?: pulumi.Input<boolean>;
    lifetime?: pulumi.Input<number>;
    negotiatedAuthenticationAlgorithm?: pulumi.Input<string>;
    negotiatedDhGroup?: pulumi.Input<string>;
    negotiatedEncryptionAlgorithm?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    remainingLifetime?: pulumi.Input<string>;
    remainingLifetimeInt?: pulumi.Input<number>;
    remainingLifetimeLastRetrieved?: pulumi.Input<string>;
}

export interface CoreIpsecConnectionTunnelManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreIpsecTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreIpv6Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreListingResourceVersionAgreementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreLocalPeeringGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreNatGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreNetworkSecurityGroupSecurityRuleIcmpOptions {
    code?: pulumi.Input<number>;
    type: pulumi.Input<number>;
}

export interface CoreNetworkSecurityGroupSecurityRuleTcpOptions {
    destinationPortRange?: pulumi.Input<inputs.CoreNetworkSecurityGroupSecurityRuleTcpOptionsDestinationPortRange>;
    sourcePortRange?: pulumi.Input<inputs.CoreNetworkSecurityGroupSecurityRuleTcpOptionsSourcePortRange>;
}

export interface CoreNetworkSecurityGroupSecurityRuleTcpOptionsDestinationPortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreNetworkSecurityGroupSecurityRuleTcpOptionsSourcePortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreNetworkSecurityGroupSecurityRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreNetworkSecurityGroupSecurityRuleUdpOptions {
    destinationPortRange?: pulumi.Input<inputs.CoreNetworkSecurityGroupSecurityRuleUdpOptionsDestinationPortRange>;
    sourcePortRange?: pulumi.Input<inputs.CoreNetworkSecurityGroupSecurityRuleUdpOptionsSourcePortRange>;
}

export interface CoreNetworkSecurityGroupSecurityRuleUdpOptionsDestinationPortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreNetworkSecurityGroupSecurityRuleUdpOptionsSourcePortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreNetworkSecurityGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CorePrivateIpTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CorePublicIpPoolCapacityTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CorePublicIpPoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CorePublicIpTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreRemotePeeringConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreRouteTableAttachmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreRouteTableRouteRule {
    /**
     * @deprecated Deprecated
     */
    cidrBlock?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    destination?: pulumi.Input<string>;
    destinationType?: pulumi.Input<string>;
    networkEntityId: pulumi.Input<string>;
    routeType?: pulumi.Input<string>;
}

export interface CoreRouteTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreSecurityListEgressSecurityRule {
    description?: pulumi.Input<string>;
    destination: pulumi.Input<string>;
    destinationType?: pulumi.Input<string>;
    icmpOptions?: pulumi.Input<inputs.CoreSecurityListEgressSecurityRuleIcmpOptions>;
    protocol: pulumi.Input<string>;
    stateless?: pulumi.Input<boolean>;
    tcpOptions?: pulumi.Input<inputs.CoreSecurityListEgressSecurityRuleTcpOptions>;
    udpOptions?: pulumi.Input<inputs.CoreSecurityListEgressSecurityRuleUdpOptions>;
}

export interface CoreSecurityListEgressSecurityRuleIcmpOptions {
    code?: pulumi.Input<number>;
    type: pulumi.Input<number>;
}

export interface CoreSecurityListEgressSecurityRuleTcpOptions {
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
    sourcePortRange?: pulumi.Input<inputs.CoreSecurityListEgressSecurityRuleTcpOptionsSourcePortRange>;
}

export interface CoreSecurityListEgressSecurityRuleTcpOptionsSourcePortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreSecurityListEgressSecurityRuleUdpOptions {
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
    sourcePortRange?: pulumi.Input<inputs.CoreSecurityListEgressSecurityRuleUdpOptionsSourcePortRange>;
}

export interface CoreSecurityListEgressSecurityRuleUdpOptionsSourcePortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreSecurityListIngressSecurityRule {
    description?: pulumi.Input<string>;
    icmpOptions?: pulumi.Input<inputs.CoreSecurityListIngressSecurityRuleIcmpOptions>;
    protocol: pulumi.Input<string>;
    source: pulumi.Input<string>;
    sourceType?: pulumi.Input<string>;
    stateless?: pulumi.Input<boolean>;
    tcpOptions?: pulumi.Input<inputs.CoreSecurityListIngressSecurityRuleTcpOptions>;
    udpOptions?: pulumi.Input<inputs.CoreSecurityListIngressSecurityRuleUdpOptions>;
}

export interface CoreSecurityListIngressSecurityRuleIcmpOptions {
    code?: pulumi.Input<number>;
    type: pulumi.Input<number>;
}

export interface CoreSecurityListIngressSecurityRuleTcpOptions {
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
    sourcePortRange?: pulumi.Input<inputs.CoreSecurityListIngressSecurityRuleTcpOptionsSourcePortRange>;
}

export interface CoreSecurityListIngressSecurityRuleTcpOptionsSourcePortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreSecurityListIngressSecurityRuleUdpOptions {
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
    sourcePortRange?: pulumi.Input<inputs.CoreSecurityListIngressSecurityRuleUdpOptionsSourcePortRange>;
}

export interface CoreSecurityListIngressSecurityRuleUdpOptionsSourcePortRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface CoreSecurityListTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreServiceGatewayService {
    serviceId: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
}

export interface CoreServiceGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreShapeManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreSubnetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreVcnByoipv6cidrDetail {
    byoipv6rangeId: pulumi.Input<string>;
    ipv6cidrBlock: pulumi.Input<string>;
}

export interface CoreVcnTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreVirtualCircuitCrossConnectMapping {
    bgpMd5authKey?: pulumi.Input<string>;
    crossConnectOrCrossConnectGroupId?: pulumi.Input<string>;
    customerBgpPeeringIp?: pulumi.Input<string>;
    customerBgpPeeringIpv6?: pulumi.Input<string>;
    oracleBgpPeeringIp?: pulumi.Input<string>;
    oracleBgpPeeringIpv6?: pulumi.Input<string>;
    vlan?: pulumi.Input<number>;
}

export interface CoreVirtualCircuitPublicPrefix {
    cidrBlock: pulumi.Input<string>;
}

export interface CoreVirtualCircuitTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreVirtualNetworkByoipv6cidrDetail {
    byoipv6rangeId: pulumi.Input<string>;
    ipv6cidrBlock: pulumi.Input<string>;
}

export interface CoreVirtualNetworkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreVlanTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreVnicAttachmentCreateVnicDetails {
    assignIpv6ip?: pulumi.Input<boolean>;
    assignPrivateDnsRecord?: pulumi.Input<boolean>;
    assignPublicIp?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostnameLabel?: pulumi.Input<string>;
    ipv6addressIpv6subnetCidrPairDetails?: pulumi.Input<pulumi.Input<inputs.CoreVnicAttachmentCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetail>[]>;
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    privateIp?: pulumi.Input<string>;
    skipSourceDestCheck?: pulumi.Input<boolean>;
    subnetId?: pulumi.Input<string>;
    vlanId?: pulumi.Input<string>;
}

export interface CoreVnicAttachmentCreateVnicDetailsIpv6addressIpv6subnetCidrPairDetail {
    ipv6Address?: pulumi.Input<string>;
    ipv6SubnetCidr?: pulumi.Input<string>;
}

export interface CoreVnicAttachmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreVolumeAttachmentMultipathDevice {
    ipv4: pulumi.Input<string>;
    iqn: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface CoreVolumeAttachmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreVolumeAutotunePolicy {
    autotuneType: pulumi.Input<string>;
    maxVpusPerGb?: pulumi.Input<string>;
}

export interface CoreVolumeBackupPolicyAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreVolumeBackupPolicySchedule {
    backupType: pulumi.Input<string>;
    dayOfMonth?: pulumi.Input<number>;
    dayOfWeek?: pulumi.Input<string>;
    hourOfDay?: pulumi.Input<number>;
    month?: pulumi.Input<string>;
    offsetSeconds?: pulumi.Input<number>;
    offsetType?: pulumi.Input<string>;
    period: pulumi.Input<string>;
    retentionSeconds: pulumi.Input<number>;
    timeZone?: pulumi.Input<string>;
}

export interface CoreVolumeBackupPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreVolumeBackupSourceDetails {
    kmsKeyId?: pulumi.Input<string>;
    region: pulumi.Input<string>;
    volumeBackupId: pulumi.Input<string>;
}

export interface CoreVolumeBackupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreVolumeBlockVolumeReplica {
    availabilityDomain: pulumi.Input<string>;
    blockVolumeReplicaId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface CoreVolumeGroupBackupSourceDetails {
    kmsKeyId?: pulumi.Input<string>;
    region: pulumi.Input<string>;
    volumeGroupBackupId: pulumi.Input<string>;
}

export interface CoreVolumeGroupBackupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreVolumeGroupSourceDetails {
    type: pulumi.Input<string>;
    volumeGroupBackupId?: pulumi.Input<string>;
    volumeGroupId?: pulumi.Input<string>;
    volumeGroupReplicaId?: pulumi.Input<string>;
    volumeIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CoreVolumeGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreVolumeGroupVolumeGroupReplica {
    availabilityDomain: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    volumeGroupReplicaId?: pulumi.Input<string>;
}

export interface CoreVolumeSourceDetails {
    id: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CoreVolumeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CoreVtapTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataLabelingServiceDatasetDatasetFormatDetails {
    formatType: pulumi.Input<string>;
    textFileTypeMetadata?: pulumi.Input<inputs.DataLabelingServiceDatasetDatasetFormatDetailsTextFileTypeMetadata>;
}

export interface DataLabelingServiceDatasetDatasetFormatDetailsTextFileTypeMetadata {
    columnDelimiter?: pulumi.Input<string>;
    columnIndex: pulumi.Input<number>;
    columnName?: pulumi.Input<string>;
    escapeCharacter?: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
    lineDelimiter?: pulumi.Input<string>;
}

export interface DataLabelingServiceDatasetDatasetSourceDetails {
    bucket: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface DataLabelingServiceDatasetInitialImportDatasetConfiguration {
    importFormat: pulumi.Input<inputs.DataLabelingServiceDatasetInitialImportDatasetConfigurationImportFormat>;
    importMetadataPath: pulumi.Input<inputs.DataLabelingServiceDatasetInitialImportDatasetConfigurationImportMetadataPath>;
}

export interface DataLabelingServiceDatasetInitialImportDatasetConfigurationImportFormat {
    name: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface DataLabelingServiceDatasetInitialImportDatasetConfigurationImportMetadataPath {
    bucket: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    path: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface DataLabelingServiceDatasetInitialRecordGenerationConfiguration {
}

export interface DataLabelingServiceDatasetLabelSet {
    items: pulumi.Input<pulumi.Input<inputs.DataLabelingServiceDatasetLabelSetItem>[]>;
}

export interface DataLabelingServiceDatasetLabelSetItem {
    name: pulumi.Input<string>;
}

export interface DataLabelingServiceDatasetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeAddSdmColumnsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeAlertPolicyAlertPolicyRuleDetail {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    expression: pulumi.Input<string>;
}

export interface DataSafeAlertPolicyRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeAlertPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeAlertTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeAuditArchiveRetrievalTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeAuditPolicyAuditCondition {
    auditPolicyName: pulumi.Input<string>;
    enableConditions: pulumi.Input<pulumi.Input<inputs.DataSafeAuditPolicyAuditConditionEnableCondition>[]>;
    isDataSafeServiceAccountAudited: pulumi.Input<boolean>;
    isPrivUsersManagedByDataSafe: pulumi.Input<boolean>;
}

export interface DataSafeAuditPolicyAuditConditionEnableCondition {
    entityNames: pulumi.Input<pulumi.Input<string>[]>;
    entitySelection: pulumi.Input<string>;
    entityType: pulumi.Input<string>;
    operationStatus: pulumi.Input<string>;
}

export interface DataSafeAuditPolicyAuditSpecification {
    auditPolicyCategory: pulumi.Input<string>;
    auditPolicyName: pulumi.Input<string>;
    databasePolicyNames: pulumi.Input<pulumi.Input<string>[]>;
    enableStatus: pulumi.Input<string>;
    enabledEntities: pulumi.Input<string>;
    isCreated: pulumi.Input<boolean>;
    isEnabledForAllUsers: pulumi.Input<boolean>;
    isSeededInDataSafe: pulumi.Input<boolean>;
    isSeededInTarget: pulumi.Input<boolean>;
    isViewOnly: pulumi.Input<boolean>;
    partiallyEnabledMsg: pulumi.Input<string>;
}

export interface DataSafeAuditPolicyManagementAuditCondition {
    auditPolicyName?: pulumi.Input<string>;
    enableConditions?: pulumi.Input<pulumi.Input<inputs.DataSafeAuditPolicyManagementAuditConditionEnableCondition>[]>;
    isDataSafeServiceAccountAudited?: pulumi.Input<boolean>;
    isEnabled?: pulumi.Input<boolean>;
    isPrivUsersManagedByDataSafe?: pulumi.Input<boolean>;
}

export interface DataSafeAuditPolicyManagementAuditConditionEnableCondition {
    entityNames?: pulumi.Input<pulumi.Input<string>[]>;
    entitySelection?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    operationStatus?: pulumi.Input<string>;
}

export interface DataSafeAuditPolicyManagementAuditSpecification {
    auditPolicyCategory: pulumi.Input<string>;
    auditPolicyName: pulumi.Input<string>;
    databasePolicyNames: pulumi.Input<pulumi.Input<string>[]>;
    enableStatus: pulumi.Input<string>;
    enabledEntities: pulumi.Input<string>;
    isCreated: pulumi.Input<boolean>;
    isEnabledForAllUsers: pulumi.Input<boolean>;
    isSeededInDataSafe: pulumi.Input<boolean>;
    isSeededInTarget: pulumi.Input<boolean>;
    isViewOnly: pulumi.Input<boolean>;
    partiallyEnabledMsg: pulumi.Input<string>;
}

export interface DataSafeAuditPolicyManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeAuditPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeAuditProfileAuditTrail {
    auditCollectionStartTime: pulumi.Input<string>;
    auditProfileId: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id: pulumi.Input<string>;
    isAutoPurgeEnabled: pulumi.Input<boolean>;
    lifecycleDetails: pulumi.Input<string>;
    peerTargetDatabaseKey: pulumi.Input<number>;
    purgeJobDetails: pulumi.Input<string>;
    purgeJobStatus: pulumi.Input<string>;
    purgeJobTime: pulumi.Input<string>;
    state: pulumi.Input<string>;
    status: pulumi.Input<string>;
    systemTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetId: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeLastCollected: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    trailLocation: pulumi.Input<string>;
    trailSource: pulumi.Input<string>;
    workRequestId: pulumi.Input<string>;
}

export interface DataSafeAuditProfileManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeAuditProfileTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeAuditTrailManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeAuditTrailTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeCalculateAuditVolumeAvailableAvailableAuditVolume {
    auditProfileId: pulumi.Input<string>;
    monthInConsideration: pulumi.Input<string>;
    trailLocation: pulumi.Input<string>;
    volume: pulumi.Input<string>;
}

export interface DataSafeCalculateAuditVolumeAvailableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeCalculateAuditVolumeCollectedCollectedAuditVolume {
    archivedVolume: pulumi.Input<string>;
    auditProfileId: pulumi.Input<string>;
    monthInConsideration: pulumi.Input<string>;
    onlineVolume: pulumi.Input<string>;
}

export interface DataSafeCalculateAuditVolumeCollectedTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeCompareSecurityAssessmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeCompareUserAssessmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeDataSafeConfigurationGlobalSetting {
    isPaidUsage: pulumi.Input<boolean>;
    offlineRetentionPeriod: pulumi.Input<number>;
    onlineRetentionPeriod: pulumi.Input<number>;
}

export interface DataSafeDataSafeConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeDataSafePrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeDatabaseSecurityConfigManagementSqlFirewallConfig {
    excludeJob?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeStatusUpdated?: pulumi.Input<string>;
    violationLogAutoPurge?: pulumi.Input<string>;
}

export interface DataSafeDatabaseSecurityConfigManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeDatabaseSecurityConfigSqlFirewallConfig {
    excludeJob?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeStatusUpdated?: pulumi.Input<string>;
    violationLogAutoPurge?: pulumi.Input<string>;
}

export interface DataSafeDatabaseSecurityConfigTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeDiscoveryJobTablesForDiscovery {
    schemaName: pulumi.Input<string>;
    tableNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DataSafeDiscoveryJobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeDiscoveryJobsResultModifiedAttribute {
    appDefinedChildColumnKeys: pulumi.Input<pulumi.Input<string>[]>;
    dbDefinedChildColumnKeys: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DataSafeDiscoveryJobsResultTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeLibraryMaskingFormatFormatEntry {
    columnName?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    endDate?: pulumi.Input<string>;
    endLength?: pulumi.Input<number>;
    endValue?: pulumi.Input<number>;
    fixedNumber?: pulumi.Input<number>;
    fixedString?: pulumi.Input<string>;
    groupingColumns?: pulumi.Input<pulumi.Input<string>[]>;
    length?: pulumi.Input<number>;
    libraryMaskingFormatId?: pulumi.Input<string>;
    pattern?: pulumi.Input<string>;
    postProcessingFunction?: pulumi.Input<string>;
    randomLists?: pulumi.Input<pulumi.Input<string>[]>;
    regularExpression?: pulumi.Input<string>;
    replaceWith?: pulumi.Input<string>;
    schemaName?: pulumi.Input<string>;
    sqlExpression?: pulumi.Input<string>;
    startDate?: pulumi.Input<string>;
    startLength?: pulumi.Input<number>;
    startPosition?: pulumi.Input<number>;
    startValue?: pulumi.Input<number>;
    tableName?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    userDefinedFunction?: pulumi.Input<string>;
}

export interface DataSafeLibraryMaskingFormatTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeMaskDataTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeMaskingPoliciesApplyDifferenceToMaskingColumnsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeMaskingPoliciesMaskingColumnMaskingFormat {
    condition?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    formatEntries: pulumi.Input<pulumi.Input<inputs.DataSafeMaskingPoliciesMaskingColumnMaskingFormatFormatEntry>[]>;
}

export interface DataSafeMaskingPoliciesMaskingColumnMaskingFormatFormatEntry {
    columnName?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    endDate?: pulumi.Input<string>;
    endLength?: pulumi.Input<number>;
    endValue?: pulumi.Input<number>;
    fixedNumber?: pulumi.Input<number>;
    fixedString?: pulumi.Input<string>;
    groupingColumns?: pulumi.Input<pulumi.Input<string>[]>;
    length?: pulumi.Input<number>;
    libraryMaskingFormatId?: pulumi.Input<string>;
    pattern?: pulumi.Input<string>;
    postProcessingFunction?: pulumi.Input<string>;
    randomLists?: pulumi.Input<pulumi.Input<string>[]>;
    regularExpression?: pulumi.Input<string>;
    replaceWith?: pulumi.Input<string>;
    schemaName?: pulumi.Input<string>;
    sqlExpression?: pulumi.Input<string>;
    startDate?: pulumi.Input<string>;
    startLength?: pulumi.Input<number>;
    startPosition?: pulumi.Input<number>;
    startValue?: pulumi.Input<number>;
    tableName?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    userDefinedFunction?: pulumi.Input<string>;
}

export interface DataSafeMaskingPoliciesMaskingColumnTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeMaskingPolicyColumnSource {
    columnSource: pulumi.Input<string>;
    sensitiveDataModelId?: pulumi.Input<string>;
    targetId?: pulumi.Input<string>;
}

export interface DataSafeMaskingPolicyHealthReportManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeMaskingPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeMaskingReportManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeOnPremConnectorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeReportDefinitionColumnFilter {
    expressions: pulumi.Input<pulumi.Input<string>[]>;
    fieldName: pulumi.Input<string>;
    isEnabled: pulumi.Input<boolean>;
    isHidden: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
}

export interface DataSafeReportDefinitionColumnInfo {
    dataType?: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    displayOrder: pulumi.Input<number>;
    fieldName: pulumi.Input<string>;
    isHidden: pulumi.Input<boolean>;
}

export interface DataSafeReportDefinitionColumnSorting {
    fieldName: pulumi.Input<string>;
    isAscending: pulumi.Input<boolean>;
    sortingOrder: pulumi.Input<number>;
}

export interface DataSafeReportDefinitionSummary {
    countOf?: pulumi.Input<string>;
    displayOrder: pulumi.Input<number>;
    groupByFieldName?: pulumi.Input<string>;
    isHidden?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    scimFilter?: pulumi.Input<string>;
}

export interface DataSafeReportDefinitionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeReportTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSdmMaskingPolicyDifferenceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSecurityAssessmentStatistic {
    advisories: pulumi.Input<pulumi.Input<inputs.DataSafeSecurityAssessmentStatisticAdvisory>[]>;
    deferreds: pulumi.Input<pulumi.Input<inputs.DataSafeSecurityAssessmentStatisticDeferred>[]>;
    evaluates: pulumi.Input<pulumi.Input<inputs.DataSafeSecurityAssessmentStatisticEvaluate>[]>;
    highRisks: pulumi.Input<pulumi.Input<inputs.DataSafeSecurityAssessmentStatisticHighRisk>[]>;
    lowRisks: pulumi.Input<pulumi.Input<inputs.DataSafeSecurityAssessmentStatisticLowRisk>[]>;
    mediumRisks: pulumi.Input<pulumi.Input<inputs.DataSafeSecurityAssessmentStatisticMediumRisk>[]>;
    passes: pulumi.Input<pulumi.Input<inputs.DataSafeSecurityAssessmentStatisticPass>[]>;
    targetsCount: pulumi.Input<number>;
}

export interface DataSafeSecurityAssessmentStatisticAdvisory {
    auditingFindingsCount: pulumi.Input<number>;
    authorizationControlFindingsCount: pulumi.Input<number>;
    dataEncryptionFindingsCount: pulumi.Input<number>;
    dbConfigurationFindingsCount: pulumi.Input<number>;
    fineGrainedAccessControlFindingsCount: pulumi.Input<number>;
    privilegesAndRolesFindingsCount: pulumi.Input<number>;
    targetsCount: pulumi.Input<number>;
    userAccountsFindingsCount: pulumi.Input<number>;
}

export interface DataSafeSecurityAssessmentStatisticDeferred {
    auditingFindingsCount: pulumi.Input<number>;
    authorizationControlFindingsCount: pulumi.Input<number>;
    dataEncryptionFindingsCount: pulumi.Input<number>;
    dbConfigurationFindingsCount: pulumi.Input<number>;
    fineGrainedAccessControlFindingsCount: pulumi.Input<number>;
    privilegesAndRolesFindingsCount: pulumi.Input<number>;
    targetsCount: pulumi.Input<number>;
    userAccountsFindingsCount: pulumi.Input<number>;
}

export interface DataSafeSecurityAssessmentStatisticEvaluate {
    auditingFindingsCount: pulumi.Input<number>;
    authorizationControlFindingsCount: pulumi.Input<number>;
    dataEncryptionFindingsCount: pulumi.Input<number>;
    dbConfigurationFindingsCount: pulumi.Input<number>;
    fineGrainedAccessControlFindingsCount: pulumi.Input<number>;
    privilegesAndRolesFindingsCount: pulumi.Input<number>;
    targetsCount: pulumi.Input<number>;
    userAccountsFindingsCount: pulumi.Input<number>;
}

export interface DataSafeSecurityAssessmentStatisticHighRisk {
    auditingFindingsCount: pulumi.Input<number>;
    authorizationControlFindingsCount: pulumi.Input<number>;
    dataEncryptionFindingsCount: pulumi.Input<number>;
    dbConfigurationFindingsCount: pulumi.Input<number>;
    fineGrainedAccessControlFindingsCount: pulumi.Input<number>;
    privilegesAndRolesFindingsCount: pulumi.Input<number>;
    targetsCount: pulumi.Input<number>;
    userAccountsFindingsCount: pulumi.Input<number>;
}

export interface DataSafeSecurityAssessmentStatisticLowRisk {
    auditingFindingsCount: pulumi.Input<number>;
    authorizationControlFindingsCount: pulumi.Input<number>;
    dataEncryptionFindingsCount: pulumi.Input<number>;
    dbConfigurationFindingsCount: pulumi.Input<number>;
    fineGrainedAccessControlFindingsCount: pulumi.Input<number>;
    privilegesAndRolesFindingsCount: pulumi.Input<number>;
    targetsCount: pulumi.Input<number>;
    userAccountsFindingsCount: pulumi.Input<number>;
}

export interface DataSafeSecurityAssessmentStatisticMediumRisk {
    auditingFindingsCount: pulumi.Input<number>;
    authorizationControlFindingsCount: pulumi.Input<number>;
    dataEncryptionFindingsCount: pulumi.Input<number>;
    dbConfigurationFindingsCount: pulumi.Input<number>;
    fineGrainedAccessControlFindingsCount: pulumi.Input<number>;
    privilegesAndRolesFindingsCount: pulumi.Input<number>;
    targetsCount: pulumi.Input<number>;
    userAccountsFindingsCount: pulumi.Input<number>;
}

export interface DataSafeSecurityAssessmentStatisticPass {
    auditingFindingsCount: pulumi.Input<number>;
    authorizationControlFindingsCount: pulumi.Input<number>;
    dataEncryptionFindingsCount: pulumi.Input<number>;
    dbConfigurationFindingsCount: pulumi.Input<number>;
    fineGrainedAccessControlFindingsCount: pulumi.Input<number>;
    privilegesAndRolesFindingsCount: pulumi.Input<number>;
    targetsCount: pulumi.Input<number>;
    userAccountsFindingsCount: pulumi.Input<number>;
}

export interface DataSafeSecurityAssessmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSecurityPolicyDeploymentManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSecurityPolicyDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSecurityPolicyManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSecurityPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSensitiveDataModelTablesForDiscovery {
    schemaName: pulumi.Input<string>;
    tableNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DataSafeSensitiveDataModelTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSensitiveDataModelsApplyDiscoveryJobResultsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSensitiveDataModelsSensitiveColumnTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSensitiveTypeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSetSecurityAssessmentBaselineManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSetSecurityAssessmentBaselineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSetUserAssessmentBaselineManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSetUserAssessmentBaselineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSqlCollectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSqlFirewallPolicyManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeSqlFirewallPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeTargetAlertPolicyAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeTargetDatabaseConnectionOption {
    connectionType: pulumi.Input<string>;
    datasafePrivateEndpointId?: pulumi.Input<string>;
    onPremConnectorId?: pulumi.Input<string>;
}

export interface DataSafeTargetDatabaseCredentials {
    password: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}

export interface DataSafeTargetDatabaseDatabaseDetails {
    autonomousDatabaseId?: pulumi.Input<string>;
    databaseType: pulumi.Input<string>;
    dbSystemId?: pulumi.Input<string>;
    infrastructureType: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    listenerPort?: pulumi.Input<number>;
    serviceName?: pulumi.Input<string>;
    vmClusterId?: pulumi.Input<string>;
}

export interface DataSafeTargetDatabasePeerTargetDatabase {
    databaseDetails: pulumi.Input<pulumi.Input<inputs.DataSafeTargetDatabasePeerTargetDatabaseDatabaseDetail>[]>;
    databaseUniqueName: pulumi.Input<string>;
    dataguardAssociationId: pulumi.Input<string>;
    description: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    key: pulumi.Input<number>;
    lifecycleDetails: pulumi.Input<string>;
    role: pulumi.Input<string>;
    state: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    tlsConfigs: pulumi.Input<pulumi.Input<inputs.DataSafeTargetDatabasePeerTargetDatabaseTlsConfig>[]>;
}

export interface DataSafeTargetDatabasePeerTargetDatabaseDatabaseDetail {
    autonomousDatabaseId: pulumi.Input<string>;
    databaseType: pulumi.Input<string>;
    dbSystemId: pulumi.Input<string>;
    infrastructureType: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    ipAddresses: pulumi.Input<pulumi.Input<string>[]>;
    listenerPort: pulumi.Input<number>;
    serviceName: pulumi.Input<string>;
    vmClusterId: pulumi.Input<string>;
}

export interface DataSafeTargetDatabasePeerTargetDatabaseDatabaseDetails {
    autonomousDatabaseId?: pulumi.Input<string>;
    databaseType: pulumi.Input<string>;
    dbSystemId?: pulumi.Input<string>;
    infrastructureType: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    listenerPort?: pulumi.Input<number>;
    serviceName?: pulumi.Input<string>;
    vmClusterId?: pulumi.Input<string>;
}

export interface DataSafeTargetDatabasePeerTargetDatabaseDetail {
    databaseDetails: pulumi.Input<inputs.DataSafeTargetDatabasePeerTargetDatabaseDetailDatabaseDetails>;
    dataguardAssociationId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    tlsConfig?: pulumi.Input<inputs.DataSafeTargetDatabasePeerTargetDatabaseDetailTlsConfig>;
}

export interface DataSafeTargetDatabasePeerTargetDatabaseDetailDatabaseDetails {
    autonomousDatabaseId?: pulumi.Input<string>;
    databaseType: pulumi.Input<string>;
    dbSystemId?: pulumi.Input<string>;
    infrastructureType: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    listenerPort?: pulumi.Input<number>;
    serviceName?: pulumi.Input<string>;
    vmClusterId?: pulumi.Input<string>;
}

export interface DataSafeTargetDatabasePeerTargetDatabaseDetailTlsConfig {
    certificateStoreType?: pulumi.Input<string>;
    keyStoreContent?: pulumi.Input<string>;
    status: pulumi.Input<string>;
    storePassword?: pulumi.Input<string>;
    trustStoreContent?: pulumi.Input<string>;
}

export interface DataSafeTargetDatabasePeerTargetDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeTargetDatabasePeerTargetDatabaseTlsConfig {
    certificateStoreType?: pulumi.Input<string>;
    keyStoreContent?: pulumi.Input<string>;
    status: pulumi.Input<string>;
    storePassword?: pulumi.Input<string>;
    trustStoreContent?: pulumi.Input<string>;
}

export interface DataSafeTargetDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeTargetDatabaseTlsConfig {
    certificateStoreType?: pulumi.Input<string>;
    keyStoreContent?: pulumi.Input<string>;
    status: pulumi.Input<string>;
    storePassword?: pulumi.Input<string>;
    trustStoreContent?: pulumi.Input<string>;
}

export interface DataSafeUnsetSecurityAssessmentBaselineManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeUnsetSecurityAssessmentBaselineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeUnsetUserAssessmentBaselineManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeUnsetUserAssessmentBaselineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataSafeUserAssessmentIgnoredTarget {
    lifecycleState: pulumi.Input<string>;
    targetId: pulumi.Input<string>;
    userAssessmentId: pulumi.Input<string>;
}

export interface DataSafeUserAssessmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseApplicationVipTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseAutonomousContainerDatabaseBackupConfig {
    backupDestinationDetails?: pulumi.Input<inputs.DatabaseAutonomousContainerDatabaseBackupConfigBackupDestinationDetails>;
    recoveryWindowInDays?: pulumi.Input<number>;
}

export interface DatabaseAutonomousContainerDatabaseBackupConfigBackupDestinationDetails {
    id?: pulumi.Input<string>;
    internetProxy?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    vpcPassword?: pulumi.Input<string>;
    vpcUser?: pulumi.Input<string>;
}

export interface DatabaseAutonomousContainerDatabaseDataguardAssociationOperationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface DatabaseAutonomousContainerDatabaseDataguardAssociationPeerAutonomousContainerDatabaseBackupConfig {
    backupDestinationDetails?: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousContainerDatabaseDataguardAssociationPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail>[]>;
    recoveryWindowInDays?: pulumi.Input<number>;
}

export interface DatabaseAutonomousContainerDatabaseDataguardAssociationPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail {
    dbrsPolicyId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    internetProxy?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    vpcPassword?: pulumi.Input<string>;
    vpcUser?: pulumi.Input<string>;
}

export interface DatabaseAutonomousContainerDatabaseDataguardAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseAutonomousContainerDatabaseDataguardRoleChangeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface DatabaseAutonomousContainerDatabaseKeyHistoryEntry {
    id: pulumi.Input<string>;
    kmsKeyVersionId: pulumi.Input<string>;
    timeActivated: pulumi.Input<string>;
    vaultId: pulumi.Input<string>;
}

export interface DatabaseAutonomousContainerDatabaseMaintenanceWindow {
    customActionTimeoutInMins: pulumi.Input<number>;
    daysOfWeeks: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousContainerDatabaseMaintenanceWindowDaysOfWeek>[]>;
    hoursOfDays: pulumi.Input<pulumi.Input<number>[]>;
    isCustomActionTimeoutEnabled: pulumi.Input<boolean>;
    isMonthlyPatchingEnabled: pulumi.Input<boolean>;
    leadTimeInWeeks: pulumi.Input<number>;
    months: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousContainerDatabaseMaintenanceWindowMonth>[]>;
    patchingMode: pulumi.Input<string>;
    preference: pulumi.Input<string>;
    skipRus: pulumi.Input<pulumi.Input<boolean>[]>;
    weeksOfMonths: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseAutonomousContainerDatabaseMaintenanceWindowDaysOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseAutonomousContainerDatabaseMaintenanceWindowDetails {
    customActionTimeoutInMins?: pulumi.Input<number>;
    daysOfWeeks?: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousContainerDatabaseMaintenanceWindowDetailsDaysOfWeek>[]>;
    hoursOfDays?: pulumi.Input<pulumi.Input<number>[]>;
    isCustomActionTimeoutEnabled?: pulumi.Input<boolean>;
    isMonthlyPatchingEnabled?: pulumi.Input<boolean>;
    leadTimeInWeeks?: pulumi.Input<number>;
    months?: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousContainerDatabaseMaintenanceWindowDetailsMonth>[]>;
    patchingMode?: pulumi.Input<string>;
    preference?: pulumi.Input<string>;
    skipRus?: pulumi.Input<pulumi.Input<boolean>[]>;
    weeksOfMonths?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseAutonomousContainerDatabaseMaintenanceWindowDetailsDaysOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseAutonomousContainerDatabaseMaintenanceWindowDetailsMonth {
    name: pulumi.Input<string>;
}

export interface DatabaseAutonomousContainerDatabaseMaintenanceWindowMonth {
    name: pulumi.Input<string>;
}

export interface DatabaseAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig {
    backupDestinationDetails?: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail>[]>;
    recoveryWindowInDays?: pulumi.Input<number>;
}

export interface DatabaseAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetail {
    id?: pulumi.Input<string>;
    internetProxy?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    vpcPassword?: pulumi.Input<string>;
    vpcUser?: pulumi.Input<string>;
}

export interface DatabaseAutonomousContainerDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseApexDetail {
    apexVersion: pulumi.Input<string>;
    ordsVersion: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseBackupBackupDestinationDetails {
    id?: pulumi.Input<string>;
    internetProxy?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    vpcPassword?: pulumi.Input<string>;
    vpcUser?: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseBackupConfig {
    manualBackupBucketName: pulumi.Input<string>;
    manualBackupType: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseBackupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseConnectionString {
    allConnectionStrings: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    dedicated: pulumi.Input<string>;
    high: pulumi.Input<string>;
    low: pulumi.Input<string>;
    medium: pulumi.Input<string>;
    profiles: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousDatabaseConnectionStringProfile>[]>;
}

export interface DatabaseAutonomousDatabaseConnectionStringProfile {
    consumerGroup: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    hostFormat: pulumi.Input<string>;
    isRegional: pulumi.Input<boolean>;
    protocol: pulumi.Input<string>;
    sessionMode: pulumi.Input<string>;
    syntaxFormat: pulumi.Input<string>;
    tlsAuthentication: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseConnectionUrl {
    apexUrl: pulumi.Input<string>;
    databaseTransformsUrl: pulumi.Input<string>;
    graphStudioUrl: pulumi.Input<string>;
    machineLearningNotebookUrl: pulumi.Input<string>;
    machineLearningUserManagementUrl: pulumi.Input<string>;
    mongoDbUrl: pulumi.Input<string>;
    ordsUrl: pulumi.Input<string>;
    sqlDevWebUrl: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseCustomerContact {
    email?: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseDbToolsDetail {
    computeCount?: pulumi.Input<number>;
    isEnabled?: pulumi.Input<boolean>;
    maxIdleTimeInMinutes?: pulumi.Input<number>;
    name: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseInstanceWalletManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseKeyHistoryEntry {
    id: pulumi.Input<string>;
    kmsKeyVersionId: pulumi.Input<string>;
    timeActivated: pulumi.Input<string>;
    vaultId: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseLocalStandbyDb {
    availabilityDomain: pulumi.Input<string>;
    lagTimeInSeconds: pulumi.Input<number>;
    lifecycleDetails: pulumi.Input<string>;
    state: pulumi.Input<string>;
    timeDataGuardRoleChanged: pulumi.Input<string>;
    timeDisasterRecoveryRoleChanged: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseLongTermBackupSchedule {
    isDisabled?: pulumi.Input<boolean>;
    repeatCadence?: pulumi.Input<string>;
    retentionPeriodInDays?: pulumi.Input<number>;
    timeOfBackup?: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabasePublicConnectionUrl {
    apexUrl: pulumi.Input<string>;
    databaseTransformsUrl: pulumi.Input<string>;
    graphStudioUrl: pulumi.Input<string>;
    machineLearningNotebookUrl: pulumi.Input<string>;
    machineLearningUserManagementUrl: pulumi.Input<string>;
    mongoDbUrl: pulumi.Input<string>;
    ordsUrl: pulumi.Input<string>;
    sqlDevWebUrl: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseRegionalWalletManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseRemoteDisasterRecoveryConfiguration {
    disasterRecoveryType: pulumi.Input<string>;
    isReplicateAutomaticBackups: pulumi.Input<boolean>;
    isSnapshotStandby: pulumi.Input<boolean>;
    timeSnapshotStandbyEnabledTill: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseResourcePoolSummary {
    isDisabled?: pulumi.Input<boolean>;
    poolSize?: pulumi.Input<number>;
}

export interface DatabaseAutonomousDatabaseSaasAdminUserTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseScheduledOperation {
    dayOfWeek: pulumi.Input<inputs.DatabaseAutonomousDatabaseScheduledOperationDayOfWeek>;
    scheduledStartTime?: pulumi.Input<string>;
    scheduledStopTime?: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseScheduledOperationDayOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseSoftwareImageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseStandbyDb {
    availabilityDomain: pulumi.Input<string>;
    lagTimeInSeconds: pulumi.Input<number>;
    lifecycleDetails: pulumi.Input<string>;
    state: pulumi.Input<string>;
    timeDataGuardRoleChanged: pulumi.Input<string>;
    timeDisasterRecoveryRoleChanged: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseAutonomousDatabaseWalletTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseAutonomousExadataInfrastructureMaintenanceWindow {
    customActionTimeoutInMins: pulumi.Input<number>;
    daysOfWeeks: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousExadataInfrastructureMaintenanceWindowDaysOfWeek>[]>;
    hoursOfDays: pulumi.Input<pulumi.Input<number>[]>;
    isCustomActionTimeoutEnabled: pulumi.Input<boolean>;
    isMonthlyPatchingEnabled: pulumi.Input<boolean>;
    leadTimeInWeeks: pulumi.Input<number>;
    months: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousExadataInfrastructureMaintenanceWindowMonth>[]>;
    patchingMode: pulumi.Input<string>;
    preference: pulumi.Input<string>;
    skipRus: pulumi.Input<pulumi.Input<boolean>[]>;
    weeksOfMonths: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseAutonomousExadataInfrastructureMaintenanceWindowDaysOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseAutonomousExadataInfrastructureMaintenanceWindowDetails {
    customActionTimeoutInMins?: pulumi.Input<number>;
    daysOfWeeks?: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousExadataInfrastructureMaintenanceWindowDetailsDaysOfWeek>[]>;
    hoursOfDays?: pulumi.Input<pulumi.Input<number>[]>;
    isCustomActionTimeoutEnabled?: pulumi.Input<boolean>;
    isMonthlyPatchingEnabled?: pulumi.Input<boolean>;
    leadTimeInWeeks?: pulumi.Input<number>;
    months?: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousExadataInfrastructureMaintenanceWindowDetailsMonth>[]>;
    patchingMode?: pulumi.Input<string>;
    preference?: pulumi.Input<string>;
    skipRus?: pulumi.Input<pulumi.Input<boolean>[]>;
    weeksOfMonths?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseAutonomousExadataInfrastructureMaintenanceWindowDetailsDaysOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseAutonomousExadataInfrastructureMaintenanceWindowDetailsMonth {
    name: pulumi.Input<string>;
}

export interface DatabaseAutonomousExadataInfrastructureMaintenanceWindowMonth {
    name: pulumi.Input<string>;
}

export interface DatabaseAutonomousExadataInfrastructureTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseAutonomousVmClusterMaintenanceWindow {
    customActionTimeoutInMins: pulumi.Input<number>;
    daysOfWeeks: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousVmClusterMaintenanceWindowDaysOfWeek>[]>;
    hoursOfDays: pulumi.Input<pulumi.Input<number>[]>;
    isCustomActionTimeoutEnabled: pulumi.Input<boolean>;
    isMonthlyPatchingEnabled: pulumi.Input<boolean>;
    leadTimeInWeeks: pulumi.Input<number>;
    months: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousVmClusterMaintenanceWindowMonth>[]>;
    patchingMode: pulumi.Input<string>;
    preference: pulumi.Input<string>;
    skipRus: pulumi.Input<pulumi.Input<boolean>[]>;
    weeksOfMonths: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseAutonomousVmClusterMaintenanceWindowDaysOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseAutonomousVmClusterMaintenanceWindowDetail {
    customActionTimeoutInMins?: pulumi.Input<number>;
    daysOfWeeks?: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousVmClusterMaintenanceWindowDetailDaysOfWeek>[]>;
    hoursOfDays?: pulumi.Input<pulumi.Input<number>[]>;
    isCustomActionTimeoutEnabled?: pulumi.Input<boolean>;
    isMonthlyPatchingEnabled?: pulumi.Input<boolean>;
    leadTimeInWeeks?: pulumi.Input<number>;
    months?: pulumi.Input<pulumi.Input<inputs.DatabaseAutonomousVmClusterMaintenanceWindowDetailMonth>[]>;
    patchingMode?: pulumi.Input<string>;
    preference?: pulumi.Input<string>;
    skipRus?: pulumi.Input<pulumi.Input<boolean>[]>;
    weeksOfMonths?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseAutonomousVmClusterMaintenanceWindowDetailDaysOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseAutonomousVmClusterMaintenanceWindowDetailMonth {
    name: pulumi.Input<string>;
}

export interface DatabaseAutonomousVmClusterMaintenanceWindowMonth {
    name: pulumi.Input<string>;
}

export interface DatabaseAutonomousVmClusterOrdsCertificateManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseAutonomousVmClusterSslCertificateManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseAutonomousVmClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseBackupCancelManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseBackupDestinationAssociatedDatabase {
    dbName: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface DatabaseBackupDestinationMountTypeDetails {
    localMountPointPath?: pulumi.Input<string>;
    mountType: pulumi.Input<string>;
    nfsServerExport?: pulumi.Input<string>;
    nfsServers?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatabaseBackupDestinationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseBackupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseCloudAutonomousVmClusterMaintenanceWindow {
    customActionTimeoutInMins: pulumi.Input<number>;
    daysOfWeeks: pulumi.Input<pulumi.Input<inputs.DatabaseCloudAutonomousVmClusterMaintenanceWindowDaysOfWeek>[]>;
    hoursOfDays: pulumi.Input<pulumi.Input<number>[]>;
    isCustomActionTimeoutEnabled: pulumi.Input<boolean>;
    isMonthlyPatchingEnabled: pulumi.Input<boolean>;
    leadTimeInWeeks: pulumi.Input<number>;
    months: pulumi.Input<pulumi.Input<inputs.DatabaseCloudAutonomousVmClusterMaintenanceWindowMonth>[]>;
    patchingMode: pulumi.Input<string>;
    preference: pulumi.Input<string>;
    skipRus: pulumi.Input<pulumi.Input<boolean>[]>;
    weeksOfMonths: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseCloudAutonomousVmClusterMaintenanceWindowDaysOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseCloudAutonomousVmClusterMaintenanceWindowDetails {
    customActionTimeoutInMins?: pulumi.Input<number>;
    daysOfWeeks?: pulumi.Input<pulumi.Input<inputs.DatabaseCloudAutonomousVmClusterMaintenanceWindowDetailsDaysOfWeek>[]>;
    hoursOfDays?: pulumi.Input<pulumi.Input<number>[]>;
    isCustomActionTimeoutEnabled?: pulumi.Input<boolean>;
    isMonthlyPatchingEnabled?: pulumi.Input<boolean>;
    leadTimeInWeeks?: pulumi.Input<number>;
    months?: pulumi.Input<pulumi.Input<inputs.DatabaseCloudAutonomousVmClusterMaintenanceWindowDetailsMonth>[]>;
    patchingMode?: pulumi.Input<string>;
    preference?: pulumi.Input<string>;
    skipRus?: pulumi.Input<pulumi.Input<boolean>[]>;
    weeksOfMonths?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseCloudAutonomousVmClusterMaintenanceWindowDetailsDaysOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseCloudAutonomousVmClusterMaintenanceWindowDetailsMonth {
    name: pulumi.Input<string>;
}

export interface DatabaseCloudAutonomousVmClusterMaintenanceWindowMonth {
    name: pulumi.Input<string>;
}

export interface DatabaseCloudAutonomousVmClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseCloudDatabaseManagementCredentialdetails {
    passwordSecretId: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}

export interface DatabaseCloudDatabaseManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseCloudExadataInfrastructureCustomerContact {
    email?: pulumi.Input<string>;
}

export interface DatabaseCloudExadataInfrastructureDefinedFileSystemConfiguration {
    isBackupPartition: pulumi.Input<boolean>;
    isResizable: pulumi.Input<boolean>;
    minSizeGb: pulumi.Input<number>;
    mountPoint: pulumi.Input<string>;
}

export interface DatabaseCloudExadataInfrastructureMaintenanceWindow {
    customActionTimeoutInMins?: pulumi.Input<number>;
    daysOfWeeks?: pulumi.Input<pulumi.Input<inputs.DatabaseCloudExadataInfrastructureMaintenanceWindowDaysOfWeek>[]>;
    hoursOfDays?: pulumi.Input<pulumi.Input<number>[]>;
    isCustomActionTimeoutEnabled?: pulumi.Input<boolean>;
    isMonthlyPatchingEnabled?: pulumi.Input<boolean>;
    leadTimeInWeeks?: pulumi.Input<number>;
    months?: pulumi.Input<pulumi.Input<inputs.DatabaseCloudExadataInfrastructureMaintenanceWindowMonth>[]>;
    patchingMode?: pulumi.Input<string>;
    preference?: pulumi.Input<string>;
    skipRus?: pulumi.Input<pulumi.Input<boolean>[]>;
    weeksOfMonths?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseCloudExadataInfrastructureMaintenanceWindowDaysOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseCloudExadataInfrastructureMaintenanceWindowMonth {
    name: pulumi.Input<string>;
}

export interface DatabaseCloudExadataInfrastructureTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseCloudVmClusterDataCollectionOptions {
    isDiagnosticsEventsEnabled?: pulumi.Input<boolean>;
    isHealthMonitoringEnabled?: pulumi.Input<boolean>;
    isIncidentLogsEnabled?: pulumi.Input<boolean>;
}

export interface DatabaseCloudVmClusterFileSystemConfigurationDetail {
    fileSystemSizeGb?: pulumi.Input<number>;
    mountPoint?: pulumi.Input<string>;
}

export interface DatabaseCloudVmClusterIormConfigCach {
    dbPlans: pulumi.Input<pulumi.Input<inputs.DatabaseCloudVmClusterIormConfigCachDbPlan>[]>;
    lifecycleDetails: pulumi.Input<string>;
    objective: pulumi.Input<string>;
    state: pulumi.Input<string>;
}

export interface DatabaseCloudVmClusterIormConfigCachDbPlan {
    dbName: pulumi.Input<string>;
    flashCacheLimit: pulumi.Input<string>;
    share: pulumi.Input<number>;
}

export interface DatabaseCloudVmClusterIormConfigDbPlan {
    dbName: pulumi.Input<string>;
    flashCacheLimit?: pulumi.Input<string>;
    share: pulumi.Input<number>;
}

export interface DatabaseCloudVmClusterIormConfigTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseCloudVmClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseDataGuardAssociationDataCollectionOptions {
    isDiagnosticsEventsEnabled?: pulumi.Input<boolean>;
    isHealthMonitoringEnabled?: pulumi.Input<boolean>;
    isIncidentLogsEnabled?: pulumi.Input<boolean>;
}

export interface DatabaseDataGuardAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseDatabaseConnectionString {
    allConnectionStrings: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    cdbDefault: pulumi.Input<string>;
    cdbIpDefault: pulumi.Input<string>;
}

export interface DatabaseDatabaseDatabase {
    adminPassword: pulumi.Input<string>;
    backupId?: pulumi.Input<string>;
    backupTdePassword?: pulumi.Input<string>;
    characterSet?: pulumi.Input<string>;
    databaseSoftwareImageId?: pulumi.Input<string>;
    dbBackupConfig?: pulumi.Input<inputs.DatabaseDatabaseDatabaseDbBackupConfig>;
    dbName: pulumi.Input<string>;
    dbUniqueName?: pulumi.Input<string>;
    dbWorkload?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    kmsKeyId?: pulumi.Input<string>;
    kmsKeyVersionId?: pulumi.Input<string>;
    ncharacterSet?: pulumi.Input<string>;
    pdbName?: pulumi.Input<string>;
    pluggableDatabases?: pulumi.Input<pulumi.Input<string>[]>;
    sidPrefix?: pulumi.Input<string>;
    tdeWalletPassword?: pulumi.Input<string>;
    vaultId?: pulumi.Input<string>;
}

export interface DatabaseDatabaseDatabaseDbBackupConfig {
    autoBackupEnabled?: pulumi.Input<boolean>;
    autoBackupWindow?: pulumi.Input<string>;
    autoFullBackupDay?: pulumi.Input<string>;
    autoFullBackupWindow?: pulumi.Input<string>;
    backupDeletionPolicy?: pulumi.Input<string>;
    backupDestinationDetails?: pulumi.Input<pulumi.Input<inputs.DatabaseDatabaseDatabaseDbBackupConfigBackupDestinationDetail>[]>;
    recoveryWindowInDays?: pulumi.Input<number>;
    runImmediateFullBackup?: pulumi.Input<boolean>;
}

export interface DatabaseDatabaseDatabaseDbBackupConfigBackupDestinationDetail {
    dbrsPolicyId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    vpcUser?: pulumi.Input<string>;
}

export interface DatabaseDatabaseDatabaseManagementConfig {
    managementStatus: pulumi.Input<string>;
    managementType: pulumi.Input<string>;
}

export interface DatabaseDatabaseDbBackupConfig {
    autoBackupEnabled: pulumi.Input<boolean>;
    autoBackupWindow: pulumi.Input<string>;
    autoFullBackupDay: pulumi.Input<string>;
    autoFullBackupWindow: pulumi.Input<string>;
    backupDeletionPolicy: pulumi.Input<string>;
    backupDestinationDetails: pulumi.Input<pulumi.Input<inputs.DatabaseDatabaseDbBackupConfigBackupDestinationDetail>[]>;
    recoveryWindowInDays: pulumi.Input<number>;
    runImmediateFullBackup: pulumi.Input<boolean>;
}

export interface DatabaseDatabaseDbBackupConfigBackupDestinationDetail {
    dbrsPolicyId: pulumi.Input<string>;
    id: pulumi.Input<string>;
    type: pulumi.Input<string>;
    vpcUser: pulumi.Input<string>;
}

export interface DatabaseDatabaseSoftwareImageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseDatabaseUpgradeConnectionString {
    allConnectionStrings: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    cdbDefault: pulumi.Input<string>;
    cdbIpDefault: pulumi.Input<string>;
}

export interface DatabaseDatabaseUpgradeDatabaseUpgradeSourceDetails {
    databaseSoftwareImageId?: pulumi.Input<string>;
    dbVersion?: pulumi.Input<string>;
    options?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
}

export interface DatabaseDatabaseUpgradeDbBackupConfig {
    autoBackupEnabled: pulumi.Input<boolean>;
    autoBackupWindow: pulumi.Input<string>;
    autoFullBackupDay: pulumi.Input<string>;
    autoFullBackupWindow: pulumi.Input<string>;
    backupDeletionPolicy: pulumi.Input<string>;
    backupDestinationDetails: pulumi.Input<pulumi.Input<inputs.DatabaseDatabaseUpgradeDbBackupConfigBackupDestinationDetail>[]>;
    recoveryWindowInDays: pulumi.Input<number>;
    runImmediateFullBackup: pulumi.Input<boolean>;
}

export interface DatabaseDatabaseUpgradeDbBackupConfigBackupDestinationDetail {
    dbrsPolicyId: pulumi.Input<string>;
    id: pulumi.Input<string>;
    internetProxy: pulumi.Input<string>;
    type: pulumi.Input<string>;
    vpcPassword: pulumi.Input<string>;
    vpcUser: pulumi.Input<string>;
}

export interface DatabaseDatabaseUpgradeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseDbHomeDatabase {
    adminPassword: pulumi.Input<string>;
    backupId?: pulumi.Input<string>;
    backupTdePassword?: pulumi.Input<string>;
    characterSet?: pulumi.Input<string>;
    connectionStrings?: pulumi.Input<pulumi.Input<inputs.DatabaseDbHomeDatabaseConnectionString>[]>;
    databaseId?: pulumi.Input<string>;
    databaseSoftwareImageId?: pulumi.Input<string>;
    dbBackupConfig?: pulumi.Input<inputs.DatabaseDbHomeDatabaseDbBackupConfig>;
    dbName?: pulumi.Input<string>;
    dbUniqueName?: pulumi.Input<string>;
    dbWorkload?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<string>;
    keyStoreId?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    kmsKeyVersionId?: pulumi.Input<string>;
    lifecycleDetails?: pulumi.Input<string>;
    ncharacterSet?: pulumi.Input<string>;
    oneOffPatches?: pulumi.Input<pulumi.Input<string>[]>;
    pdbName?: pulumi.Input<string>;
    pluggableDatabases?: pulumi.Input<pulumi.Input<string>[]>;
    sidPrefix?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tdeWalletPassword?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeStampForPointInTimeRecovery?: pulumi.Input<string>;
    vaultId?: pulumi.Input<string>;
}

export interface DatabaseDbHomeDatabaseConnectionString {
    allConnectionStrings: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    cdbDefault: pulumi.Input<string>;
    cdbIpDefault: pulumi.Input<string>;
}

export interface DatabaseDbHomeDatabaseDbBackupConfig {
    autoBackupEnabled?: pulumi.Input<boolean>;
    autoBackupWindow?: pulumi.Input<string>;
    autoFullBackupDay?: pulumi.Input<string>;
    autoFullBackupWindow?: pulumi.Input<string>;
    backupDeletionPolicy?: pulumi.Input<string>;
    backupDestinationDetails?: pulumi.Input<pulumi.Input<inputs.DatabaseDbHomeDatabaseDbBackupConfigBackupDestinationDetail>[]>;
    recoveryWindowInDays?: pulumi.Input<number>;
    runImmediateFullBackup?: pulumi.Input<boolean>;
}

export interface DatabaseDbHomeDatabaseDbBackupConfigBackupDestinationDetail {
    dbrsPolicyId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DatabaseDbHomeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseDbNodeConsoleConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseDbNodeConsoleHistoryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseDbNodeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseDbSystemDataCollectionOptions {
    isDiagnosticsEventsEnabled?: pulumi.Input<boolean>;
    isHealthMonitoringEnabled?: pulumi.Input<boolean>;
    isIncidentLogsEnabled?: pulumi.Input<boolean>;
}

export interface DatabaseDbSystemDbHome {
    createAsync?: pulumi.Input<boolean>;
    database: pulumi.Input<inputs.DatabaseDbSystemDbHomeDatabase>;
    databaseSoftwareImageId?: pulumi.Input<string>;
    dbHomeLocation?: pulumi.Input<string>;
    dbVersion?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<string>;
    lastPatchHistoryEntryId?: pulumi.Input<string>;
    lifecycleDetails?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
}

export interface DatabaseDbSystemDbHomeDatabase {
    adminPassword: pulumi.Input<string>;
    backupId?: pulumi.Input<string>;
    backupTdePassword?: pulumi.Input<string>;
    characterSet?: pulumi.Input<string>;
    connectionStrings?: pulumi.Input<pulumi.Input<inputs.DatabaseDbSystemDbHomeDatabaseConnectionString>[]>;
    databaseId?: pulumi.Input<string>;
    databaseSoftwareImageId?: pulumi.Input<string>;
    dbBackupConfig?: pulumi.Input<inputs.DatabaseDbSystemDbHomeDatabaseDbBackupConfig>;
    dbDomain?: pulumi.Input<string>;
    dbName?: pulumi.Input<string>;
    dbUniqueName?: pulumi.Input<string>;
    dbWorkload?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    kmsKeyVersionId?: pulumi.Input<string>;
    lifecycleDetails?: pulumi.Input<string>;
    ncharacterSet?: pulumi.Input<string>;
    pdbName?: pulumi.Input<string>;
    pluggableDatabases?: pulumi.Input<pulumi.Input<string>[]>;
    state?: pulumi.Input<string>;
    tdeWalletPassword?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeStampForPointInTimeRecovery?: pulumi.Input<string>;
    vaultId?: pulumi.Input<string>;
}

export interface DatabaseDbSystemDbHomeDatabaseConnectionString {
    allConnectionStrings: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    cdbDefault: pulumi.Input<string>;
    cdbIpDefault: pulumi.Input<string>;
}

export interface DatabaseDbSystemDbHomeDatabaseDbBackupConfig {
    autoBackupEnabled?: pulumi.Input<boolean>;
    autoBackupWindow?: pulumi.Input<string>;
    autoFullBackupDay?: pulumi.Input<string>;
    autoFullBackupWindow?: pulumi.Input<string>;
    backupDeletionPolicy?: pulumi.Input<string>;
    backupDestinationDetails?: pulumi.Input<pulumi.Input<inputs.DatabaseDbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail>[]>;
    recoveryWindowInDays?: pulumi.Input<number>;
    runImmediateFullBackup?: pulumi.Input<boolean>;
}

export interface DatabaseDbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail {
    dbrsPolicyId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DatabaseDbSystemDbSystemOptions {
    storageManagement?: pulumi.Input<string>;
}

export interface DatabaseDbSystemIormConfigCach {
    dbPlans: pulumi.Input<pulumi.Input<inputs.DatabaseDbSystemIormConfigCachDbPlan>[]>;
    dbSystemId: pulumi.Input<string>;
    lifecycleDetails: pulumi.Input<string>;
    objective: pulumi.Input<string>;
    state: pulumi.Input<string>;
}

export interface DatabaseDbSystemIormConfigCachDbPlan {
    dbName: pulumi.Input<string>;
    flashCacheLimit: pulumi.Input<string>;
    share: pulumi.Input<number>;
}

export interface DatabaseDbSystemMaintenanceWindow {
    customActionTimeoutInMins: pulumi.Input<number>;
    daysOfWeeks: pulumi.Input<pulumi.Input<inputs.DatabaseDbSystemMaintenanceWindowDaysOfWeek>[]>;
    hoursOfDays: pulumi.Input<pulumi.Input<number>[]>;
    isCustomActionTimeoutEnabled: pulumi.Input<boolean>;
    isMonthlyPatchingEnabled: pulumi.Input<boolean>;
    leadTimeInWeeks: pulumi.Input<number>;
    months: pulumi.Input<pulumi.Input<inputs.DatabaseDbSystemMaintenanceWindowMonth>[]>;
    patchingMode: pulumi.Input<string>;
    preference: pulumi.Input<string>;
    skipRus: pulumi.Input<pulumi.Input<boolean>[]>;
    weeksOfMonths: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseDbSystemMaintenanceWindowDaysOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseDbSystemMaintenanceWindowDetails {
    customActionTimeoutInMins?: pulumi.Input<number>;
    daysOfWeeks?: pulumi.Input<pulumi.Input<inputs.DatabaseDbSystemMaintenanceWindowDetailsDaysOfWeek>[]>;
    hoursOfDays?: pulumi.Input<pulumi.Input<number>[]>;
    isCustomActionTimeoutEnabled?: pulumi.Input<boolean>;
    isMonthlyPatchingEnabled?: pulumi.Input<boolean>;
    leadTimeInWeeks?: pulumi.Input<number>;
    months?: pulumi.Input<pulumi.Input<inputs.DatabaseDbSystemMaintenanceWindowDetailsMonth>[]>;
    patchingMode?: pulumi.Input<string>;
    preference?: pulumi.Input<string>;
    skipRus?: pulumi.Input<pulumi.Input<boolean>[]>;
    weeksOfMonths?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseDbSystemMaintenanceWindowDetailsDaysOfWeek {
    name?: pulumi.Input<string>;
}

export interface DatabaseDbSystemMaintenanceWindowDetailsMonth {
    name?: pulumi.Input<string>;
}

export interface DatabaseDbSystemMaintenanceWindowMonth {
    name: pulumi.Input<string>;
}

export interface DatabaseDbSystemTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseDbSystemsUpgradeDbSystemOption {
    storageManagement: pulumi.Input<string>;
}

export interface DatabaseDbSystemsUpgradeIormConfigCach {
    dbPlans: pulumi.Input<pulumi.Input<inputs.DatabaseDbSystemsUpgradeIormConfigCachDbPlan>[]>;
    lifecycleDetails: pulumi.Input<string>;
    objective: pulumi.Input<string>;
    state: pulumi.Input<string>;
}

export interface DatabaseDbSystemsUpgradeIormConfigCachDbPlan {
    dbName: pulumi.Input<string>;
    flashCacheLimit: pulumi.Input<string>;
    share: pulumi.Input<number>;
}

export interface DatabaseDbSystemsUpgradeMaintenanceWindow {
    daysOfWeeks: pulumi.Input<pulumi.Input<inputs.DatabaseDbSystemsUpgradeMaintenanceWindowDaysOfWeek>[]>;
    hoursOfDays: pulumi.Input<pulumi.Input<number>[]>;
    leadTimeInWeeks: pulumi.Input<number>;
    months: pulumi.Input<pulumi.Input<inputs.DatabaseDbSystemsUpgradeMaintenanceWindowMonth>[]>;
    preference: pulumi.Input<string>;
    weeksOfMonths: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseDbSystemsUpgradeMaintenanceWindowDaysOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseDbSystemsUpgradeMaintenanceWindowMonth {
    name: pulumi.Input<string>;
}

export interface DatabaseDbSystemsUpgradeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExadataInfrastructureComputeContact {
    email: pulumi.Input<string>;
    isContactMosValidated: pulumi.Input<boolean>;
    isPrimary: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    phoneNumber: pulumi.Input<string>;
}

export interface DatabaseExadataInfrastructureComputeMaintenanceWindow {
    customActionTimeoutInMins: pulumi.Input<number>;
    daysOfWeeks: pulumi.Input<pulumi.Input<inputs.DatabaseExadataInfrastructureComputeMaintenanceWindowDaysOfWeek>[]>;
    hoursOfDays: pulumi.Input<pulumi.Input<number>[]>;
    isCustomActionTimeoutEnabled: pulumi.Input<boolean>;
    isMonthlyPatchingEnabled: pulumi.Input<boolean>;
    leadTimeInWeeks: pulumi.Input<number>;
    months: pulumi.Input<pulumi.Input<inputs.DatabaseExadataInfrastructureComputeMaintenanceWindowMonth>[]>;
    patchingMode: pulumi.Input<string>;
    preference: pulumi.Input<string>;
    weeksOfMonths: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseExadataInfrastructureComputeMaintenanceWindowDaysOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseExadataInfrastructureComputeMaintenanceWindowMonth {
    name: pulumi.Input<string>;
}

export interface DatabaseExadataInfrastructureComputeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExadataInfrastructureContact {
    email: pulumi.Input<string>;
    isContactMosValidated?: pulumi.Input<boolean>;
    isPrimary: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    phoneNumber?: pulumi.Input<string>;
}

export interface DatabaseExadataInfrastructureDefinedFileSystemConfiguration {
    isBackupPartition: pulumi.Input<boolean>;
    isResizable: pulumi.Input<boolean>;
    minSizeGb: pulumi.Input<number>;
    mountPoint: pulumi.Input<string>;
}

export interface DatabaseExadataInfrastructureMaintenanceWindow {
    customActionTimeoutInMins?: pulumi.Input<number>;
    daysOfWeeks?: pulumi.Input<pulumi.Input<inputs.DatabaseExadataInfrastructureMaintenanceWindowDaysOfWeek>[]>;
    hoursOfDays?: pulumi.Input<pulumi.Input<number>[]>;
    isCustomActionTimeoutEnabled?: pulumi.Input<boolean>;
    isMonthlyPatchingEnabled?: pulumi.Input<boolean>;
    leadTimeInWeeks?: pulumi.Input<number>;
    months?: pulumi.Input<pulumi.Input<inputs.DatabaseExadataInfrastructureMaintenanceWindowMonth>[]>;
    patchingMode?: pulumi.Input<string>;
    preference?: pulumi.Input<string>;
    skipRus?: pulumi.Input<pulumi.Input<boolean>[]>;
    weeksOfMonths?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseExadataInfrastructureMaintenanceWindowDaysOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseExadataInfrastructureMaintenanceWindowMonth {
    name: pulumi.Input<string>;
}

export interface DatabaseExadataInfrastructureNetworkBondingModeDetails {
    backupNetworkBondingMode?: pulumi.Input<string>;
    clientNetworkBondingMode?: pulumi.Input<string>;
    drNetworkBondingMode?: pulumi.Input<string>;
}

export interface DatabaseExadataInfrastructureStorageContact {
    email: pulumi.Input<string>;
    isContactMosValidated?: pulumi.Input<boolean>;
    isPrimary: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    phoneNumber?: pulumi.Input<string>;
}

export interface DatabaseExadataInfrastructureStorageMaintenanceWindow {
    daysOfWeeks?: pulumi.Input<pulumi.Input<inputs.DatabaseExadataInfrastructureStorageMaintenanceWindowDaysOfWeek>[]>;
    hoursOfDays?: pulumi.Input<pulumi.Input<number>[]>;
    leadTimeInWeeks?: pulumi.Input<number>;
    months?: pulumi.Input<pulumi.Input<inputs.DatabaseExadataInfrastructureStorageMaintenanceWindowMonth>[]>;
    preference: pulumi.Input<string>;
    weeksOfMonths?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DatabaseExadataInfrastructureStorageMaintenanceWindowDaysOfWeek {
    name: pulumi.Input<string>;
}

export interface DatabaseExadataInfrastructureStorageMaintenanceWindowMonth {
    name: pulumi.Input<string>;
}

export interface DatabaseExadataInfrastructureStorageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExadataInfrastructureTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExadataIormConfigDbPlan {
    dbName: pulumi.Input<string>;
    flashCacheLimit?: pulumi.Input<string>;
    share: pulumi.Input<number>;
}

export interface DatabaseExadataIormConfigTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExadbVmClusterDataCollectionOptions {
    isDiagnosticsEventsEnabled?: pulumi.Input<boolean>;
    isHealthMonitoringEnabled?: pulumi.Input<boolean>;
    isIncidentLogsEnabled?: pulumi.Input<boolean>;
}

export interface DatabaseExadbVmClusterIormConfigCach {
    dbPlans: pulumi.Input<pulumi.Input<inputs.DatabaseExadbVmClusterIormConfigCachDbPlan>[]>;
    lifecycleDetails: pulumi.Input<string>;
    objective: pulumi.Input<string>;
    state: pulumi.Input<string>;
}

export interface DatabaseExadbVmClusterIormConfigCachDbPlan {
    dbName: pulumi.Input<string>;
    flashCacheLimit: pulumi.Input<string>;
    share: pulumi.Input<number>;
}

export interface DatabaseExadbVmClusterNodeConfig {
    enabledEcpuCountPerNode: pulumi.Input<number>;
    memorySizeInGbsPerNode?: pulumi.Input<number>;
    snapshotFileSystemStorageSizeGbsPerNode?: pulumi.Input<number>;
    totalEcpuCountPerNode: pulumi.Input<number>;
    totalFileSystemStorageSizeGbsPerNode?: pulumi.Input<number>;
    vmFileSystemStorageSizeGbsPerNode: pulumi.Input<number>;
}

export interface DatabaseExadbVmClusterNodeResource {
    nodeHostname?: pulumi.Input<string>;
    nodeId?: pulumi.Input<string>;
    nodeName: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

export interface DatabaseExadbVmClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExascaleDbStorageVaultHighCapacityDatabaseStorage {
    availableSizeInGbs?: pulumi.Input<number>;
    totalSizeInGbs: pulumi.Input<number>;
}

export interface DatabaseExascaleDbStorageVaultTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExternalContainerDatabaseDatabaseManagementConfig {
    databaseManagementConnectionId: pulumi.Input<string>;
    databaseManagementStatus: pulumi.Input<string>;
    licenseModel: pulumi.Input<string>;
}

export interface DatabaseExternalContainerDatabaseManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExternalContainerDatabaseStackMonitoringConfig {
    stackMonitoringConnectorId: pulumi.Input<string>;
    stackMonitoringStatus: pulumi.Input<string>;
}

export interface DatabaseExternalContainerDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExternalDatabaseConnectorConnectionCredentials {
    credentialName?: pulumi.Input<string>;
    credentialType?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    sslSecretId?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface DatabaseExternalDatabaseConnectorConnectionString {
    hostname: pulumi.Input<string>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    service: pulumi.Input<string>;
}

export interface DatabaseExternalDatabaseConnectorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExternalNonContainerDatabaseDatabaseManagementConfig {
    databaseManagementConnectionId: pulumi.Input<string>;
    databaseManagementStatus: pulumi.Input<string>;
    licenseModel: pulumi.Input<string>;
}

export interface DatabaseExternalNonContainerDatabaseManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExternalNonContainerDatabaseOperationsInsightsConfig {
    operationsInsightsConnectorId: pulumi.Input<string>;
    operationsInsightsStatus: pulumi.Input<string>;
}

export interface DatabaseExternalNonContainerDatabaseOperationsInsightsManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExternalNonContainerDatabaseStackMonitoringConfig {
    stackMonitoringConnectorId: pulumi.Input<string>;
    stackMonitoringStatus: pulumi.Input<string>;
}

export interface DatabaseExternalNonContainerDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExternalPluggableDatabaseDatabaseManagementConfig {
    databaseManagementConnectionId: pulumi.Input<string>;
    databaseManagementStatus: pulumi.Input<string>;
    licenseModel: pulumi.Input<string>;
}

export interface DatabaseExternalPluggableDatabaseManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExternalPluggableDatabaseOperationsInsightsConfig {
    operationsInsightsConnectorId: pulumi.Input<string>;
    operationsInsightsStatus: pulumi.Input<string>;
}

export interface DatabaseExternalPluggableDatabaseOperationsInsightsManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExternalPluggableDatabaseStackMonitoringConfig {
    stackMonitoringConnectorId: pulumi.Input<string>;
    stackMonitoringStatus: pulumi.Input<string>;
}

export interface DatabaseExternalPluggableDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExternalcontainerdatabasesStackMonitoringTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExternalnoncontainerdatabasesStackMonitoringTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseExternalpluggabledatabasesStackMonitoringTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseKeyStoreAssociatedDatabase {
    dbName: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface DatabaseKeyStoreTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseKeyStoreTypeDetails {
    adminUsername: pulumi.Input<string>;
    connectionIps: pulumi.Input<pulumi.Input<string>[]>;
    secretId: pulumi.Input<string>;
    type: pulumi.Input<string>;
    vaultId: pulumi.Input<string>;
}

export interface DatabaseMaintenanceRunEstimatedPatchingTime {
    estimatedDbServerPatchingTime: pulumi.Input<number>;
    estimatedNetworkSwitchesPatchingTime: pulumi.Input<number>;
    estimatedStorageServerPatchingTime: pulumi.Input<number>;
    totalEstimatedPatchingTime: pulumi.Input<number>;
}

export interface DatabaseMaintenanceRunTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementAutonomousDatabaseAutonomousDatabaseDbmFeaturesManagementFeatureDetails {
    connectorDetails?: pulumi.Input<inputs.DatabaseManagementAutonomousDatabaseAutonomousDatabaseDbmFeaturesManagementFeatureDetailsConnectorDetails>;
    databaseConnectionDetails?: pulumi.Input<inputs.DatabaseManagementAutonomousDatabaseAutonomousDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetails>;
    feature: pulumi.Input<string>;
}

export interface DatabaseManagementAutonomousDatabaseAutonomousDatabaseDbmFeaturesManagementFeatureDetailsConnectorDetails {
    connectorType?: pulumi.Input<string>;
    databaseConnectorId?: pulumi.Input<string>;
    managementAgentId?: pulumi.Input<string>;
    privateEndPointId?: pulumi.Input<string>;
}

export interface DatabaseManagementAutonomousDatabaseAutonomousDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetails {
    connectionCredentials?: pulumi.Input<inputs.DatabaseManagementAutonomousDatabaseAutonomousDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetailsConnectionCredentials>;
    connectionString?: pulumi.Input<inputs.DatabaseManagementAutonomousDatabaseAutonomousDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetailsConnectionString>;
}

export interface DatabaseManagementAutonomousDatabaseAutonomousDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetailsConnectionCredentials {
    credentialName?: pulumi.Input<string>;
    credentialType?: pulumi.Input<string>;
    passwordSecretId?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    sslSecretId?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}

export interface DatabaseManagementAutonomousDatabaseAutonomousDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetailsConnectionString {
    connectionType?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    service?: pulumi.Input<string>;
}

export interface DatabaseManagementAutonomousDatabaseAutonomousDatabaseDbmFeaturesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementDatabaseDbmFeaturesManagementFeatureDetails {
    connectorDetails?: pulumi.Input<inputs.DatabaseManagementDatabaseDbmFeaturesManagementFeatureDetailsConnectorDetails>;
    databaseConnectionDetails?: pulumi.Input<inputs.DatabaseManagementDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetails>;
    feature: pulumi.Input<string>;
    isAutoEnablePluggableDatabase?: pulumi.Input<boolean>;
    managementType?: pulumi.Input<string>;
}

export interface DatabaseManagementDatabaseDbmFeaturesManagementFeatureDetailsConnectorDetails {
    connectorType?: pulumi.Input<string>;
    databaseConnectorId?: pulumi.Input<string>;
    managementAgentId?: pulumi.Input<string>;
    privateEndPointId?: pulumi.Input<string>;
}

export interface DatabaseManagementDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetails {
    connectionCredentials?: pulumi.Input<inputs.DatabaseManagementDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetailsConnectionCredentials>;
    connectionString?: pulumi.Input<inputs.DatabaseManagementDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetailsConnectionString>;
}

export interface DatabaseManagementDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetailsConnectionCredentials {
    credentialName?: pulumi.Input<string>;
    credentialType?: pulumi.Input<string>;
    namedCredentialId?: pulumi.Input<string>;
    passwordSecretId?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    sslSecretId?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}

export interface DatabaseManagementDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetailsConnectionString {
    connectionType?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    service?: pulumi.Input<string>;
}

export interface DatabaseManagementDatabaseDbmFeaturesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementDbManagementPrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalAsmInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalAsmServicedDatabase {
    compartmentId: pulumi.Input<string>;
    databaseSubType: pulumi.Input<string>;
    databaseType: pulumi.Input<string>;
    dbUniqueName: pulumi.Input<string>;
    diskGroups: pulumi.Input<pulumi.Input<string>[]>;
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    isManaged: pulumi.Input<boolean>;
}

export interface DatabaseManagementExternalAsmTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalClusterInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalClusterNetworkConfiguration {
    networkNumber: pulumi.Input<number>;
    networkType: pulumi.Input<string>;
    subnet: pulumi.Input<string>;
}

export interface DatabaseManagementExternalClusterScanConfiguration {
    networkNumber: pulumi.Input<number>;
    scanName: pulumi.Input<string>;
    scanPort: pulumi.Input<number>;
    scanProtocol: pulumi.Input<string>;
}

export interface DatabaseManagementExternalClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalClusterVipConfiguration {
    address: pulumi.Input<string>;
    networkNumber: pulumi.Input<number>;
    nodeName: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbHomeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbNodeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemConnectorConnectionInfo {
    componentType: pulumi.Input<string>;
    connectionCredentials?: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemConnectorConnectionInfoConnectionCredential>[]>;
    connectionStrings?: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemConnectorConnectionInfoConnectionString>[]>;
    databaseCredentials?: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemConnectorConnectionInfoDatabaseCredential>[]>;
}

export interface DatabaseManagementExternalDbSystemConnectorConnectionInfoConnectionCredential {
    credentialName?: pulumi.Input<string>;
    credentialType?: pulumi.Input<string>;
    namedCredentialId?: pulumi.Input<string>;
    passwordSecretId?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    sslSecretId?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemConnectorConnectionInfoConnectionString {
    hostName?: pulumi.Input<string>;
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    port?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    service?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemConnectorConnectionInfoDatabaseCredential {
    credentialType: pulumi.Input<string>;
    namedCredentialId: pulumi.Input<string>;
    password: pulumi.Input<string>;
    passwordSecretId: pulumi.Input<string>;
    role: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemConnectorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDatabaseManagementConfig {
    licenseModel: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDatabaseManagementsManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponent {
    adrHomeDirectory: pulumi.Input<string>;
    asmInstances: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentAsmInstance>[]>;
    associatedComponents: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentAssociatedComponent>[]>;
    clusterId: pulumi.Input<string>;
    clusterInstances: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentClusterInstance>[]>;
    compartmentId: pulumi.Input<string>;
    componentId: pulumi.Input<string>;
    componentName: pulumi.Input<string>;
    componentType: pulumi.Input<string>;
    connectors: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentConnector>[]>;
    containerDatabaseId: pulumi.Input<string>;
    cpuCoreCount: pulumi.Input<number>;
    crsBaseDirectory: pulumi.Input<string>;
    dbEdition: pulumi.Input<string>;
    dbId: pulumi.Input<string>;
    dbNodeName: pulumi.Input<string>;
    dbPacks: pulumi.Input<string>;
    dbRole: pulumi.Input<string>;
    dbType: pulumi.Input<string>;
    dbUniqueName: pulumi.Input<string>;
    dbVersion: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    endpoints: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentEndpoint>[]>;
    gridHome: pulumi.Input<string>;
    guid: pulumi.Input<string>;
    homeDirectory: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    instanceName: pulumi.Input<string>;
    isCluster: pulumi.Input<boolean>;
    isFlexCluster: pulumi.Input<boolean>;
    isFlexEnabled: pulumi.Input<boolean>;
    isSelectedForMonitoring: pulumi.Input<boolean>;
    listenerAlias: pulumi.Input<string>;
    listenerType: pulumi.Input<string>;
    logDirectory: pulumi.Input<string>;
    memorySizeInGbs: pulumi.Input<number>;
    networkConfigurations: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentNetworkConfiguration>[]>;
    nodeRole: pulumi.Input<string>;
    ocrFileLocation: pulumi.Input<string>;
    oracleHome: pulumi.Input<string>;
    pluggableDatabases: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabase>[]>;
    resourceId: pulumi.Input<string>;
    scanConfigurations: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentScanConfiguration>[]>;
    status: pulumi.Input<string>;
    traceDirectory: pulumi.Input<string>;
    version: pulumi.Input<string>;
    vipConfigurations: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentVipConfiguration>[]>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentAsmInstance {
    adrHomeDirectory: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    instanceName: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentAssociatedComponent {
    associationType: pulumi.Input<string>;
    componentId: pulumi.Input<string>;
    componentType: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentClusterInstance {
    adrHomeDirectory: pulumi.Input<string>;
    clusterId: pulumi.Input<string>;
    connectors: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentClusterInstanceConnector>[]>;
    crsBaseDirectory: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    nodeRole: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentClusterInstanceConnector {
    agentId: pulumi.Input<string>;
    connectionFailureMessage: pulumi.Input<string>;
    connectionInfos: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentClusterInstanceConnectorConnectionInfo>[]>;
    connectionStatus: pulumi.Input<string>;
    connectorType: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    timeConnectionStatusLastUpdated: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentClusterInstanceConnectorConnectionInfo {
    componentType: pulumi.Input<string>;
    connectionCredentials: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentClusterInstanceConnectorConnectionInfoConnectionCredential>[]>;
    connectionStrings: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentClusterInstanceConnectorConnectionInfoConnectionString>[]>;
    databaseCredentials: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentClusterInstanceConnectorConnectionInfoDatabaseCredential>[]>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentClusterInstanceConnectorConnectionInfoConnectionCredential {
    credentialName: pulumi.Input<string>;
    credentialType: pulumi.Input<string>;
    namedCredentialId: pulumi.Input<string>;
    passwordSecretId: pulumi.Input<string>;
    role: pulumi.Input<string>;
    sslSecretId: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentClusterInstanceConnectorConnectionInfoConnectionString {
    hostName: pulumi.Input<string>;
    hosts: pulumi.Input<pulumi.Input<string>[]>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    service: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentClusterInstanceConnectorConnectionInfoDatabaseCredential {
    credentialType: pulumi.Input<string>;
    namedCredentialId: pulumi.Input<string>;
    password: pulumi.Input<string>;
    passwordSecretId: pulumi.Input<string>;
    role: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentConnector {
    agentId: pulumi.Input<string>;
    connectionFailureMessage: pulumi.Input<string>;
    connectionInfos: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentConnectorConnectionInfo>[]>;
    connectionStatus: pulumi.Input<string>;
    connectorType: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    timeConnectionStatusLastUpdated: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentConnectorConnectionInfo {
    componentType: pulumi.Input<string>;
    connectionCredentials: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentConnectorConnectionInfoConnectionCredential>[]>;
    connectionStrings: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentConnectorConnectionInfoConnectionString>[]>;
    databaseCredentials: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentConnectorConnectionInfoDatabaseCredential>[]>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentConnectorConnectionInfoConnectionCredential {
    credentialName: pulumi.Input<string>;
    credentialType: pulumi.Input<string>;
    namedCredentialId: pulumi.Input<string>;
    passwordSecretId: pulumi.Input<string>;
    role: pulumi.Input<string>;
    sslSecretId: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentConnectorConnectionInfoConnectionString {
    hostName: pulumi.Input<string>;
    hosts: pulumi.Input<pulumi.Input<string>[]>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    service: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentConnectorConnectionInfoDatabaseCredential {
    credentialType: pulumi.Input<string>;
    namedCredentialId: pulumi.Input<string>;
    password: pulumi.Input<string>;
    passwordSecretId: pulumi.Input<string>;
    role: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentEndpoint {
    host: pulumi.Input<string>;
    key: pulumi.Input<string>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    services: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentNetworkConfiguration {
    networkNumber: pulumi.Input<number>;
    networkType: pulumi.Input<string>;
    subnet: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabase {
    compartmentId: pulumi.Input<string>;
    connectors: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector>[]>;
    containerDatabaseId: pulumi.Input<string>;
    guid: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector {
    agentId: pulumi.Input<string>;
    connectionFailureMessage: pulumi.Input<string>;
    connectionInfos: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnectorConnectionInfo>[]>;
    connectionStatus: pulumi.Input<string>;
    connectorType: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    timeConnectionStatusLastUpdated: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnectorConnectionInfo {
    componentType: pulumi.Input<string>;
    connectionCredentials: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnectorConnectionInfoConnectionCredential>[]>;
    connectionStrings: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnectorConnectionInfoConnectionString>[]>;
    databaseCredentials: pulumi.Input<pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnectorConnectionInfoDatabaseCredential>[]>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnectorConnectionInfoConnectionCredential {
    credentialName: pulumi.Input<string>;
    credentialType: pulumi.Input<string>;
    namedCredentialId: pulumi.Input<string>;
    passwordSecretId: pulumi.Input<string>;
    role: pulumi.Input<string>;
    sslSecretId: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnectorConnectionInfoConnectionString {
    hostName: pulumi.Input<string>;
    hosts: pulumi.Input<pulumi.Input<string>[]>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    service: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnectorConnectionInfoDatabaseCredential {
    credentialType: pulumi.Input<string>;
    namedCredentialId: pulumi.Input<string>;
    password: pulumi.Input<string>;
    passwordSecretId: pulumi.Input<string>;
    role: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentScanConfiguration {
    networkNumber: pulumi.Input<number>;
    scanName: pulumi.Input<string>;
    scanPort: pulumi.Input<number>;
    scanProtocol: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryDiscoveredComponentVipConfiguration {
    address: pulumi.Input<string>;
    networkNumber: pulumi.Input<number>;
    nodeName: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryPatchOperation {
    operation: pulumi.Input<string>;
    selection: pulumi.Input<string>;
    value?: pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryPatchOperationValue>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryPatchOperationValue {
    compartmentId?: pulumi.Input<string>;
    connector?: pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryPatchOperationValueConnector>;
    displayName?: pulumi.Input<string>;
    isSelectedForMonitoring?: pulumi.Input<boolean>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryPatchOperationValueConnector {
    agentId?: pulumi.Input<string>;
    connectionInfo?: pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryPatchOperationValueConnectorConnectionInfo>;
    connectorType: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryPatchOperationValueConnectorConnectionInfo {
    componentType: pulumi.Input<string>;
    connectionCredentials?: pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryPatchOperationValueConnectorConnectionInfoConnectionCredentials>;
    connectionString?: pulumi.Input<inputs.DatabaseManagementExternalDbSystemDiscoveryPatchOperationValueConnectorConnectionInfoConnectionString>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryPatchOperationValueConnectorConnectionInfoConnectionCredentials {
    credentialName?: pulumi.Input<string>;
    credentialType: pulumi.Input<string>;
    passwordSecretId?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    sslSecretId?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryPatchOperationValueConnectorConnectionInfoConnectionString {
    hostName?: pulumi.Input<string>;
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    port?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    service?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemDiscoveryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemStackMonitoringConfig {
    isEnabled: pulumi.Input<boolean>;
    metadata?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemStackMonitoringsManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalDbSystemTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalExadataInfrastructureDatabaseSystem {
    additionalDetails: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    compartmentId: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    internalId: pulumi.Input<string>;
    licenseModel: pulumi.Input<string>;
    lifecycleDetails: pulumi.Input<string>;
    state: pulumi.Input<string>;
    status: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface DatabaseManagementExternalExadataInfrastructureExadataManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalExadataInfrastructureStorageGrid {
    additionalDetails: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    internalId: pulumi.Input<string>;
    lifecycleDetails: pulumi.Input<string>;
    serverCount: pulumi.Input<number>;
    state: pulumi.Input<string>;
    status: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface DatabaseManagementExternalExadataInfrastructureTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalExadataStorageConnectorCredentialInfo {
    password: pulumi.Input<string>;
    sslTrustStoreLocation?: pulumi.Input<string>;
    sslTrustStorePassword?: pulumi.Input<string>;
    sslTrustStoreType?: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface DatabaseManagementExternalExadataStorageConnectorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalExadataStorageGridStorageServer {
    additionalDetails: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    connectorId: pulumi.Input<string>;
    cpuCount: pulumi.Input<number>;
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id: pulumi.Input<string>;
    internalId: pulumi.Input<string>;
    ipAddress: pulumi.Input<string>;
    lifecycleDetails: pulumi.Input<string>;
    makeModel: pulumi.Input<string>;
    maxFlashDiskIops: pulumi.Input<number>;
    maxFlashDiskThroughput: pulumi.Input<number>;
    maxHardDiskIops: pulumi.Input<number>;
    maxHardDiskThroughput: pulumi.Input<number>;
    memoryGb: pulumi.Input<number>;
    resourceType: pulumi.Input<string>;
    state: pulumi.Input<string>;
    status: pulumi.Input<string>;
    systemTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface DatabaseManagementExternalExadataStorageGridTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalExadataStorageServerConnector {
    additionalDetails: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    agentId: pulumi.Input<string>;
    connectionUri: pulumi.Input<string>;
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id: pulumi.Input<string>;
    internalId: pulumi.Input<string>;
    lifecycleDetails: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    state: pulumi.Input<string>;
    status: pulumi.Input<string>;
    storageServerId: pulumi.Input<string>;
    systemTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface DatabaseManagementExternalExadataStorageServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalListenerEndpoint {
    host: pulumi.Input<string>;
    key: pulumi.Input<string>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    services: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatabaseManagementExternalListenerServicedAsm {
    compartmentId: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface DatabaseManagementExternalListenerServicedDatabase {
    compartmentId: pulumi.Input<string>;
    databaseSubType: pulumi.Input<string>;
    databaseType: pulumi.Input<string>;
    dbUniqueName: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    isManaged: pulumi.Input<boolean>;
}

export interface DatabaseManagementExternalListenerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalcontainerdatabaseExternalContainerDbmFeaturesManagementFeatureDetails {
    connectorDetails?: pulumi.Input<inputs.DatabaseManagementExternalcontainerdatabaseExternalContainerDbmFeaturesManagementFeatureDetailsConnectorDetails>;
    feature: pulumi.Input<string>;
    licenseModel?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalcontainerdatabaseExternalContainerDbmFeaturesManagementFeatureDetailsConnectorDetails {
    connectorType?: pulumi.Input<string>;
    databaseConnectorId?: pulumi.Input<string>;
    managementAgentId?: pulumi.Input<string>;
    privateEndPointId?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalcontainerdatabaseExternalContainerDbmFeaturesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalnoncontainerdatabaseExternalNonContainerDbmFeaturesManagementFeatureDetails {
    connectorDetails?: pulumi.Input<inputs.DatabaseManagementExternalnoncontainerdatabaseExternalNonContainerDbmFeaturesManagementFeatureDetailsConnectorDetails>;
    feature: pulumi.Input<string>;
    licenseModel?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalnoncontainerdatabaseExternalNonContainerDbmFeaturesManagementFeatureDetailsConnectorDetails {
    connectorType?: pulumi.Input<string>;
    databaseConnectorId?: pulumi.Input<string>;
    managementAgentId?: pulumi.Input<string>;
    privateEndPointId?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalnoncontainerdatabaseExternalNonContainerDbmFeaturesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetails {
    connectorDetails?: pulumi.Input<inputs.DatabaseManagementExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsConnectorDetails>;
    feature: pulumi.Input<string>;
}

export interface DatabaseManagementExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsConnectorDetails {
    connectorType?: pulumi.Input<string>;
    databaseConnectorId?: pulumi.Input<string>;
    managementAgentId?: pulumi.Input<string>;
    privateEndPointId?: pulumi.Input<string>;
}

export interface DatabaseManagementExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabaseDbmgmtFeatureConfig {
    connectorDetails: pulumi.Input<pulumi.Input<inputs.DatabaseManagementManagedDatabaseDbmgmtFeatureConfigConnectorDetail>[]>;
    databaseConnectionDetails: pulumi.Input<pulumi.Input<inputs.DatabaseManagementManagedDatabaseDbmgmtFeatureConfigDatabaseConnectionDetail>[]>;
    feature: pulumi.Input<string>;
    featureStatus: pulumi.Input<string>;
    licenseModel: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabaseDbmgmtFeatureConfigConnectorDetail {
    connectorType: pulumi.Input<string>;
    databaseConnectorId: pulumi.Input<string>;
    managementAgentId: pulumi.Input<string>;
    privateEndPointId: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabaseDbmgmtFeatureConfigDatabaseConnectionDetail {
    connectionCredentials: pulumi.Input<pulumi.Input<inputs.DatabaseManagementManagedDatabaseDbmgmtFeatureConfigDatabaseConnectionDetailConnectionCredential>[]>;
    connectionStrings: pulumi.Input<pulumi.Input<inputs.DatabaseManagementManagedDatabaseDbmgmtFeatureConfigDatabaseConnectionDetailConnectionString>[]>;
}

export interface DatabaseManagementManagedDatabaseDbmgmtFeatureConfigDatabaseConnectionDetailConnectionCredential {
    credentialName: pulumi.Input<string>;
    credentialType: pulumi.Input<string>;
    namedCredentialId: pulumi.Input<string>;
    passwordSecretId: pulumi.Input<string>;
    role: pulumi.Input<string>;
    sslSecretId: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabaseDbmgmtFeatureConfigDatabaseConnectionDetailConnectionString {
    connectionType: pulumi.Input<string>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    service: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabaseGroupManagedDatabase {
    compartmentId?: pulumi.Input<string>;
    databaseSubType?: pulumi.Input<string>;
    databaseType?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    deploymentType?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeAdded?: pulumi.Input<string>;
    workloadType?: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabaseGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabaseManagedDatabaseGroup {
    compartmentId: pulumi.Input<string>;
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabasesChangeDatabaseParameterCredentials {
    password?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    secretId?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabasesChangeDatabaseParameterDatabaseCredential {
    credentialType: pulumi.Input<string>;
    namedCredentialId?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    passwordSecretId?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabasesChangeDatabaseParameterParameter {
    name: pulumi.Input<string>;
    updateComment?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabasesChangeDatabaseParameterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabasesResetDatabaseParameterCredentials {
    password?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    secretId?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabasesResetDatabaseParameterDatabaseCredential {
    credentialType: pulumi.Input<string>;
    namedCredentialId?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    passwordSecretId?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface DatabaseManagementManagedDatabasesResetDatabaseParameterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementNamedCredentialContent {
    credentialType: pulumi.Input<string>;
    passwordSecretAccessMode: pulumi.Input<string>;
    passwordSecretId: pulumi.Input<string>;
    role: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}

export interface DatabaseManagementNamedCredentialTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseManagementPluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetails {
    connectorDetails?: pulumi.Input<inputs.DatabaseManagementPluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsConnectorDetails>;
    databaseConnectionDetails?: pulumi.Input<inputs.DatabaseManagementPluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetails>;
    feature: pulumi.Input<string>;
    isAutoEnablePluggableDatabase?: pulumi.Input<boolean>;
    managementType?: pulumi.Input<string>;
}

export interface DatabaseManagementPluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsConnectorDetails {
    connectorType?: pulumi.Input<string>;
    databaseConnectorId?: pulumi.Input<string>;
    managementAgentId?: pulumi.Input<string>;
    privateEndPointId?: pulumi.Input<string>;
}

export interface DatabaseManagementPluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetails {
    connectionCredentials?: pulumi.Input<inputs.DatabaseManagementPluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetailsConnectionCredentials>;
    connectionString?: pulumi.Input<inputs.DatabaseManagementPluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetailsConnectionString>;
}

export interface DatabaseManagementPluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetailsConnectionCredentials {
    credentialName?: pulumi.Input<string>;
    credentialType?: pulumi.Input<string>;
    namedCredentialId?: pulumi.Input<string>;
    passwordSecretId?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    sslSecretId?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}

export interface DatabaseManagementPluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsDatabaseConnectionDetailsConnectionString {
    connectionType?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    service?: pulumi.Input<string>;
}

export interface DatabaseManagementPluggabledatabasePluggableDatabaseDbmFeaturesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseMigrationAdditionalMigration {
    cloudExadataInfrastructureId: pulumi.Input<string>;
    cloudVmClusterId: pulumi.Input<string>;
    dbSystemId: pulumi.Input<string>;
}

export interface DatabaseMigrationConnectionAdditionalAttribute {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface DatabaseMigrationConnectionIngressIp {
    ingressIp: pulumi.Input<string>;
}

export interface DatabaseMigrationConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseMigrationJobParameterFileVersion {
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description: pulumi.Input<string>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isCurrent: pulumi.Input<boolean>;
    isFactory: pulumi.Input<boolean>;
    kind: pulumi.Input<string>;
    name: pulumi.Input<string>;
    systemTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated: pulumi.Input<string>;
}

export interface DatabaseMigrationJobProgress {
    currentPhase: pulumi.Input<string>;
    currentStatus: pulumi.Input<string>;
    phases: pulumi.Input<pulumi.Input<inputs.DatabaseMigrationJobProgressPhase>[]>;
}

export interface DatabaseMigrationJobProgressPhase {
    action: pulumi.Input<string>;
    durationInMs: pulumi.Input<number>;
    editableParameterFiles: pulumi.Input<pulumi.Input<string>[]>;
    extracts: pulumi.Input<pulumi.Input<inputs.DatabaseMigrationJobProgressPhaseExtract>[]>;
    isAdvisorReportAvailable: pulumi.Input<boolean>;
    isSuspendAvailable: pulumi.Input<boolean>;
    issue: pulumi.Input<string>;
    logLocations: pulumi.Input<pulumi.Input<inputs.DatabaseMigrationJobProgressPhaseLogLocation>[]>;
    name: pulumi.Input<string>;
    progress: pulumi.Input<number>;
    status: pulumi.Input<string>;
}

export interface DatabaseMigrationJobProgressPhaseExtract {
    message: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DatabaseMigrationJobProgressPhaseLogLocation {
    bucket: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    object: pulumi.Input<string>;
}

export interface DatabaseMigrationJobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseMigrationJobUnsupportedObject {
    object: pulumi.Input<string>;
    owner: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationAdvancedParameter {
    dataType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationAdvisorSettings {
    isIgnoreErrors?: pulumi.Input<boolean>;
    isSkipAdvisor?: pulumi.Input<boolean>;
}

export interface DatabaseMigrationMigrationDataTransferMediumDetails {
    accessKeyId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectStorageBucket?: pulumi.Input<inputs.DatabaseMigrationMigrationDataTransferMediumDetailsObjectStorageBucket>;
    region?: pulumi.Input<string>;
    secretAccessKey?: pulumi.Input<string>;
    sharedStorageMountTargetId?: pulumi.Input<string>;
    source?: pulumi.Input<inputs.DatabaseMigrationMigrationDataTransferMediumDetailsSource>;
    target?: pulumi.Input<inputs.DatabaseMigrationMigrationDataTransferMediumDetailsTarget>;
    type: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationDataTransferMediumDetailsObjectStorageBucket {
    bucket?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationDataTransferMediumDetailsSource {
    kind: pulumi.Input<string>;
    ociHome?: pulumi.Input<string>;
    walletLocation?: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationDataTransferMediumDetailsTarget {
    kind: pulumi.Input<string>;
    ociHome?: pulumi.Input<string>;
    walletLocation?: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationExcludeObject {
    isOmitExcludedTableFromReplication?: pulumi.Input<boolean>;
    object: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
    schema?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationGgsDetails {
    acceptableLag?: pulumi.Input<number>;
    extract?: pulumi.Input<inputs.DatabaseMigrationMigrationGgsDetailsExtract>;
    ggsDeployments?: pulumi.Input<pulumi.Input<inputs.DatabaseMigrationMigrationGgsDetailsGgsDeployment>[]>;
    replicat?: pulumi.Input<inputs.DatabaseMigrationMigrationGgsDetailsReplicat>;
}

export interface DatabaseMigrationMigrationGgsDetailsExtract {
    longTransDuration?: pulumi.Input<number>;
    performanceProfile?: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationGgsDetailsGgsDeployment {
    deploymentId: pulumi.Input<string>;
    ggsAdminCredentialsSecretId: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationGgsDetailsReplicat {
    performanceProfile?: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationHubDetails {
    acceptableLag?: pulumi.Input<number>;
    computeId?: pulumi.Input<string>;
    extract?: pulumi.Input<inputs.DatabaseMigrationMigrationHubDetailsExtract>;
    keyId: pulumi.Input<string>;
    replicat?: pulumi.Input<inputs.DatabaseMigrationMigrationHubDetailsReplicat>;
    restAdminCredentials: pulumi.Input<inputs.DatabaseMigrationMigrationHubDetailsRestAdminCredentials>;
    url: pulumi.Input<string>;
    vaultId: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationHubDetailsExtract {
    longTransDuration?: pulumi.Input<number>;
    performanceProfile?: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationHubDetailsReplicat {
    performanceProfile?: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationHubDetailsRestAdminCredentials {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationIncludeObject {
    isOmitExcludedTableFromReplication?: pulumi.Input<boolean>;
    object: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
    schema?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationInitialLoadSettings {
    compatibilities?: pulumi.Input<pulumi.Input<string>[]>;
    dataPumpParameters?: pulumi.Input<inputs.DatabaseMigrationMigrationInitialLoadSettingsDataPumpParameters>;
    exportDirectoryObject?: pulumi.Input<inputs.DatabaseMigrationMigrationInitialLoadSettingsExportDirectoryObject>;
    handleGrantErrors?: pulumi.Input<string>;
    importDirectoryObject?: pulumi.Input<inputs.DatabaseMigrationMigrationInitialLoadSettingsImportDirectoryObject>;
    isConsistent?: pulumi.Input<boolean>;
    isIgnoreExistingObjects?: pulumi.Input<boolean>;
    isTzUtc?: pulumi.Input<boolean>;
    jobMode: pulumi.Input<string>;
    metadataRemaps?: pulumi.Input<pulumi.Input<inputs.DatabaseMigrationMigrationInitialLoadSettingsMetadataRemap>[]>;
    primaryKeyCompatibility?: pulumi.Input<string>;
    tablespaceDetails?: pulumi.Input<inputs.DatabaseMigrationMigrationInitialLoadSettingsTablespaceDetails>;
}

export interface DatabaseMigrationMigrationInitialLoadSettingsDataPumpParameters {
    estimate?: pulumi.Input<string>;
    excludeParameters?: pulumi.Input<pulumi.Input<string>[]>;
    exportParallelismDegree?: pulumi.Input<number>;
    importParallelismDegree?: pulumi.Input<number>;
    isCluster?: pulumi.Input<boolean>;
    tableExistsAction?: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationInitialLoadSettingsExportDirectoryObject {
    name?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationInitialLoadSettingsImportDirectoryObject {
    name?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationInitialLoadSettingsMetadataRemap {
    newValue?: pulumi.Input<string>;
    oldValue?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationInitialLoadSettingsTablespaceDetails {
    blockSizeInKbs?: pulumi.Input<string>;
    extendSizeInMbs?: pulumi.Input<number>;
    isAutoCreate?: pulumi.Input<boolean>;
    isBigFile?: pulumi.Input<boolean>;
    remapTarget?: pulumi.Input<string>;
    targetType: pulumi.Input<string>;
}

export interface DatabaseMigrationMigrationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseMigrationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseOneoffPatchTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabasePluggableDatabaseConnectionString {
    allConnectionStrings: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    pdbDefault: pulumi.Input<string>;
    pdbIpDefault: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasePdbCreationTypeDetails {
    creationType: pulumi.Input<string>;
    dblinkUserPassword?: pulumi.Input<string>;
    dblinkUsername?: pulumi.Input<string>;
    isThinClone?: pulumi.Input<boolean>;
    refreshableCloneDetails?: pulumi.Input<inputs.DatabasePluggableDatabasePdbCreationTypeDetailsRefreshableCloneDetails>;
    sourceContainerDatabaseAdminPassword?: pulumi.Input<string>;
    sourcePluggableDatabaseId: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasePdbCreationTypeDetailsRefreshableCloneDetails {
    isRefreshableClone?: pulumi.Input<boolean>;
}

export interface DatabasePluggableDatabasePdbNodeLevelDetail {
    nodeName: pulumi.Input<string>;
    openMode: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasePluggableDatabaseManagementConfig {
    managementStatus: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasePluggabledatabasemanagementsManagementConnectionString {
    allConnectionStrings: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    enablePluggabledatabasemanagement: pulumi.Input<boolean>;
    pdbDefault: pulumi.Input<string>;
    pdbIpDefault: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasePluggabledatabasemanagementsManagementCredentialDetails {
    passwordSecretId: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasePluggabledatabasemanagementsManagementPluggableDatabaseManagementConfig {
    enablePluggabledatabasemanagement: pulumi.Input<boolean>;
    managementStatus: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasePluggabledatabasemanagementsManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabasePluggableDatabaseRefreshableCloneConfig {
    isRefreshableClone: pulumi.Input<boolean>;
}

export interface DatabasePluggableDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasesLocalCloneConnectionString {
    allConnectionStrings: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    pdbDefault: pulumi.Input<string>;
    pdbIpDefault: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasesLocalClonePdbNodeLevelDetail {
    nodeName: pulumi.Input<string>;
    openMode: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasesLocalClonePluggableDatabaseManagementConfig {
    managementStatus: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasesLocalCloneRefreshableCloneConfig {
    isRefreshableClone: pulumi.Input<boolean>;
}

export interface DatabasePluggableDatabasesLocalCloneTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasesRemoteCloneConnectionString {
    allConnectionStrings: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    pdbDefault: pulumi.Input<string>;
    pdbIpDefault: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasesRemoteClonePdbNodeLevelDetail {
    nodeName: pulumi.Input<string>;
    openMode: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasesRemoteClonePluggableDatabaseManagementConfig {
    managementStatus: pulumi.Input<string>;
}

export interface DatabasePluggableDatabasesRemoteCloneRefreshableCloneConfig {
    isRefreshableClone: pulumi.Input<boolean>;
}

export interface DatabasePluggableDatabasesRemoteCloneTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseToolsDatabaseToolsConnectionKeyStore {
    keyStoreContent?: pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionKeyStoreKeyStoreContent>;
    keyStorePassword?: pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionKeyStoreKeyStorePassword>;
    keyStoreType?: pulumi.Input<string>;
}

export interface DatabaseToolsDatabaseToolsConnectionKeyStoreKeyStoreContent {
    secretId?: pulumi.Input<string>;
    valueType: pulumi.Input<string>;
}

export interface DatabaseToolsDatabaseToolsConnectionKeyStoreKeyStorePassword {
    secretId?: pulumi.Input<string>;
    valueType: pulumi.Input<string>;
}

export interface DatabaseToolsDatabaseToolsConnectionLock {
    message?: pulumi.Input<string>;
    relatedResourceId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DatabaseToolsDatabaseToolsConnectionProxyClient {
    proxyAuthenticationType: pulumi.Input<string>;
    roles?: pulumi.Input<pulumi.Input<string>[]>;
    userName?: pulumi.Input<string>;
    userPassword?: pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionProxyClientUserPassword>;
}

export interface DatabaseToolsDatabaseToolsConnectionProxyClientUserPassword {
    secretId: pulumi.Input<string>;
    valueType: pulumi.Input<string>;
}

export interface DatabaseToolsDatabaseToolsConnectionRelatedResource {
    entityType?: pulumi.Input<string>;
    identifier?: pulumi.Input<string>;
}

export interface DatabaseToolsDatabaseToolsConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseToolsDatabaseToolsConnectionUserPassword {
    secretId: pulumi.Input<string>;
    valueType: pulumi.Input<string>;
}

export interface DatabaseToolsDatabaseToolsPrivateEndpointLock {
    message?: pulumi.Input<string>;
    relatedResourceId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DatabaseToolsDatabaseToolsPrivateEndpointReverseConnectionConfiguration {
    reverseConnectionsSourceIps: pulumi.Input<pulumi.Input<inputs.DatabaseToolsDatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIp>[]>;
}

export interface DatabaseToolsDatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIp {
    sourceIp: pulumi.Input<string>;
}

export interface DatabaseToolsDatabaseToolsPrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseVmClusterAddVirtualMachineDataCollectionOption {
    isDiagnosticsEventsEnabled: pulumi.Input<boolean>;
    isHealthMonitoringEnabled: pulumi.Input<boolean>;
    isIncidentLogsEnabled: pulumi.Input<boolean>;
}

export interface DatabaseVmClusterAddVirtualMachineDbServer {
    dbServerId: pulumi.Input<string>;
}

export interface DatabaseVmClusterAddVirtualMachineFileSystemConfigurationDetail {
    fileSystemSizeGb: pulumi.Input<number>;
    mountPoint: pulumi.Input<string>;
}

export interface DatabaseVmClusterAddVirtualMachineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseVmClusterDataCollectionOptions {
    isDiagnosticsEventsEnabled?: pulumi.Input<boolean>;
    isHealthMonitoringEnabled?: pulumi.Input<boolean>;
    isIncidentLogsEnabled?: pulumi.Input<boolean>;
}

export interface DatabaseVmClusterFileSystemConfigurationDetail {
    fileSystemSizeGb?: pulumi.Input<number>;
    mountPoint?: pulumi.Input<string>;
}

export interface DatabaseVmClusterNetworkDrScan {
    hostname: pulumi.Input<string>;
    ips: pulumi.Input<pulumi.Input<string>[]>;
    scanListenerPortTcp: pulumi.Input<number>;
}

export interface DatabaseVmClusterNetworkScan {
    hostname: pulumi.Input<string>;
    ips: pulumi.Input<pulumi.Input<string>[]>;
    port?: pulumi.Input<number>;
    scanListenerPortTcp?: pulumi.Input<number>;
    scanListenerPortTcpSsl?: pulumi.Input<number>;
}

export interface DatabaseVmClusterNetworkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseVmClusterNetworkVmNetwork {
    domainName?: pulumi.Input<string>;
    gateway?: pulumi.Input<string>;
    netmask?: pulumi.Input<string>;
    networkType: pulumi.Input<string>;
    nodes: pulumi.Input<pulumi.Input<inputs.DatabaseVmClusterNetworkVmNetworkNode>[]>;
    vlanId?: pulumi.Input<string>;
}

export interface DatabaseVmClusterNetworkVmNetworkNode {
    dbServerId?: pulumi.Input<string>;
    hostname: pulumi.Input<string>;
    ip: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    vip?: pulumi.Input<string>;
    vipHostname?: pulumi.Input<string>;
}

export interface DatabaseVmClusterRemoveVirtualMachineDataCollectionOption {
    isDiagnosticsEventsEnabled: pulumi.Input<boolean>;
    isHealthMonitoringEnabled: pulumi.Input<boolean>;
    isIncidentLogsEnabled: pulumi.Input<boolean>;
}

export interface DatabaseVmClusterRemoveVirtualMachineDbServer {
    dbServerId: pulumi.Input<string>;
}

export interface DatabaseVmClusterRemoveVirtualMachineFileSystemConfigurationDetail {
    fileSystemSizeGb: pulumi.Input<number>;
    mountPoint: pulumi.Input<string>;
}

export interface DatabaseVmClusterRemoveVirtualMachineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseVmClusterTimeouts {
    create?: pulumi.Input<string>;
}

export interface DatacatalogCatalogLock {
    message: pulumi.Input<string>;
    relatedResourceId: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DatacatalogCatalogPrivateEndpointLock {
    message: pulumi.Input<string>;
    relatedResourceId: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DatacatalogCatalogPrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatacatalogCatalogTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatacatalogConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatacatalogDataAssetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatacatalogMetastoreLock {
    message: pulumi.Input<string>;
    relatedResourceId: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DatacatalogMetastoreTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataflowApplicationApplicationLogConfig {
    logGroupId: pulumi.Input<string>;
    logId: pulumi.Input<string>;
}

export interface DataflowApplicationDriverShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface DataflowApplicationExecutorShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface DataflowApplicationParameter {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DataflowApplicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataflowInvokeRunApplicationLogConfig {
    logGroupId: pulumi.Input<string>;
    logId: pulumi.Input<string>;
}

export interface DataflowInvokeRunDriverShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface DataflowInvokeRunExecutorShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface DataflowInvokeRunParameter {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DataflowInvokeRunTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataflowPoolConfiguration {
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
    shape?: pulumi.Input<string>;
    shapeConfig?: pulumi.Input<inputs.DataflowPoolConfigurationShapeConfig>;
}

export interface DataflowPoolConfigurationShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface DataflowPoolPoolMetric {
    activeRunsCount: pulumi.Input<string>;
    activelyUsedNodeCounts: pulumi.Input<pulumi.Input<inputs.DataflowPoolPoolMetricActivelyUsedNodeCount>[]>;
    timeLastMetricsUpdated: pulumi.Input<string>;
    timeLastStarted: pulumi.Input<string>;
    timeLastStopped: pulumi.Input<string>;
    timeLastUsed: pulumi.Input<string>;
}

export interface DataflowPoolPoolMetricActivelyUsedNodeCount {
    logicalShape: pulumi.Input<string>;
    poolCount: pulumi.Input<number>;
}

export interface DataflowPoolSchedule {
    dayOfWeek?: pulumi.Input<string>;
    startTime?: pulumi.Input<number>;
    stopTime?: pulumi.Input<number>;
}

export interface DataflowPoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataflowPrivateEndpointScanDetail {
    fqdn?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
}

export interface DataflowPrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataflowRunStatementOutput {
    datas: pulumi.Input<pulumi.Input<inputs.DataflowRunStatementOutputData>[]>;
    errorName: pulumi.Input<string>;
    errorValue: pulumi.Input<string>;
    status: pulumi.Input<string>;
    tracebacks: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DataflowRunStatementOutputData {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DataflowRunStatementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataflowSqlEndpointDriverShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface DataflowSqlEndpointExecutorShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface DataflowSqlEndpointNetworkConfiguration {
    accessControlRules?: pulumi.Input<pulumi.Input<inputs.DataflowSqlEndpointNetworkConfigurationAccessControlRule>[]>;
    hostNamePrefix?: pulumi.Input<string>;
    networkType: pulumi.Input<string>;
    privateEndpointIp?: pulumi.Input<string>;
    publicEndpointIp?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    vcnId?: pulumi.Input<string>;
}

export interface DataflowSqlEndpointNetworkConfigurationAccessControlRule {
    ipNotation?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
    vcnIps?: pulumi.Input<string>;
}

export interface DataflowSqlEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationDependentObjectMetadata {
    action: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namePath: pulumi.Input<string>;
    objectVersion: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationMetadata {
    aggregatorKey: pulumi.Input<string>;
    aggregators: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationMetadataAggregator>[]>;
    countStatistics: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationMetadataCountStatistic>[]>;
    createdBy: pulumi.Input<string>;
    createdByName: pulumi.Input<string>;
    identifierPath: pulumi.Input<string>;
    infoFields: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isFavorite: pulumi.Input<boolean>;
    labels: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion: pulumi.Input<number>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
    updatedByName: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationMetadataAggregator {
    description: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationMetadataCountStatistic {
    objectTypeCountLists: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationMetadataCountStatisticObjectTypeCountList>[]>;
}

export interface DataintegrationWorkspaceApplicationMetadataCountStatisticObjectTypeCountList {
    objectCount: pulumi.Input<string>;
    objectType: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationParentRef {
    parent: pulumi.Input<string>;
    rootDocId: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationPatchDependentObjectMetadata {
    action: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namePath: pulumi.Input<string>;
    objectVersion: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationPatchMetadata {
    aggregatorKey: pulumi.Input<string>;
    aggregators: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationPatchMetadataAggregator>[]>;
    countStatistics: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationPatchMetadataCountStatistic>[]>;
    createdBy: pulumi.Input<string>;
    createdByName: pulumi.Input<string>;
    identifierPath: pulumi.Input<string>;
    infoFields: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isFavorite: pulumi.Input<boolean>;
    labels: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion: pulumi.Input<number>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
    updatedByName: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationPatchMetadataAggregator {
    description: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationPatchMetadataCountStatistic {
    objectTypeCountLists: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationPatchMetadataCountStatisticObjectTypeCountList>[]>;
}

export interface DataintegrationWorkspaceApplicationPatchMetadataCountStatisticObjectTypeCountList {
    objectCount: pulumi.Input<string>;
    objectType: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationPatchParentRef {
    parent: pulumi.Input<string>;
    rootDocId: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationPatchPatchObjectMetadata {
    action: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namePath: pulumi.Input<string>;
    objectVersion: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationPatchRegistryMetadata {
    aggregatorKey?: pulumi.Input<string>;
    isFavorite?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceApplicationPatchTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationPublishedObjectMetadata {
    action: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namePath: pulumi.Input<string>;
    objectVersion: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationRegistryMetadata {
    aggregatorKey?: pulumi.Input<string>;
    isFavorite?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceApplicationScheduleFrequencyDetails {
    customExpression?: pulumi.Input<string>;
    dayOfWeek?: pulumi.Input<string>;
    days?: pulumi.Input<pulumi.Input<number>[]>;
    frequency?: pulumi.Input<string>;
    interval?: pulumi.Input<number>;
    modelType: pulumi.Input<string>;
    time?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationScheduleFrequencyDetailsTime>;
    weekOfMonth?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationScheduleFrequencyDetailsTime {
    hour?: pulumi.Input<number>;
    minute?: pulumi.Input<number>;
    second?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceApplicationScheduleMetadata {
    aggregatorKey: pulumi.Input<string>;
    aggregators: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationScheduleMetadataAggregator>[]>;
    countStatistics: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationScheduleMetadataCountStatistic>[]>;
    createdBy: pulumi.Input<string>;
    createdByName: pulumi.Input<string>;
    identifierPath: pulumi.Input<string>;
    infoFields: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isFavorite: pulumi.Input<boolean>;
    labels: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion: pulumi.Input<number>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
    updatedByName: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationScheduleMetadataAggregator {
    description: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationScheduleMetadataCountStatistic {
    objectTypeCountLists: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationScheduleMetadataCountStatisticObjectTypeCountList>[]>;
}

export interface DataintegrationWorkspaceApplicationScheduleMetadataCountStatisticObjectTypeCountList {
    objectCount: pulumi.Input<string>;
    objectType: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationScheduleParentRef {
    parent: pulumi.Input<string>;
    rootDocId: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationScheduleRegistryMetadata {
    aggregatorKey?: pulumi.Input<string>;
    isFavorite?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceApplicationScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationSourceApplicationInfo {
    applicationKey?: pulumi.Input<string>;
    applicationVersion?: pulumi.Input<string>;
    copyType?: pulumi.Input<string>;
    lastPatchKey?: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleLastRunDetail {
    description: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    key: pulumi.Input<string>;
    lastRunTimeMillis: pulumi.Input<string>;
    modelType: pulumi.Input<string>;
    modelVersion: pulumi.Input<string>;
    name: pulumi.Input<string>;
    objectStatus: pulumi.Input<number>;
    objectVersion: pulumi.Input<number>;
    parentReves: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationTaskScheduleLastRunDetailParentRef>[]>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleLastRunDetailParentRef {
    parent: pulumi.Input<string>;
    rootDocId: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleMetadata {
    aggregatorKey: pulumi.Input<string>;
    aggregators: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationTaskScheduleMetadataAggregator>[]>;
    countStatistics: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationTaskScheduleMetadataCountStatistic>[]>;
    createdBy: pulumi.Input<string>;
    createdByName: pulumi.Input<string>;
    identifierPath: pulumi.Input<string>;
    infoFields: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isFavorite: pulumi.Input<boolean>;
    labels: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion: pulumi.Input<number>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
    updatedByName: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleMetadataAggregator {
    description: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleMetadataCountStatistic {
    objectTypeCountLists: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationTaskScheduleMetadataCountStatisticObjectTypeCountList>[]>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleMetadataCountStatisticObjectTypeCountList {
    objectCount: pulumi.Input<string>;
    objectType: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleRegistryMetadata {
    aggregatorKey?: pulumi.Input<string>;
    isFavorite?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleScheduleRef {
    description?: pulumi.Input<string>;
    frequencyDetails?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationTaskScheduleScheduleRefFrequencyDetails>;
    identifier?: pulumi.Input<string>;
    isDaylightAdjustmentEnabled?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    metadata?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationTaskScheduleScheduleRefMetadata>;
    modelType?: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectStatus?: pulumi.Input<number>;
    objectVersion?: pulumi.Input<number>;
    parentRef?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationTaskScheduleScheduleRefParentRef>;
    timezone?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleScheduleRefFrequencyDetails {
    customExpression?: pulumi.Input<string>;
    dayOfWeek?: pulumi.Input<string>;
    days?: pulumi.Input<pulumi.Input<number>[]>;
    frequency?: pulumi.Input<string>;
    interval?: pulumi.Input<number>;
    modelType: pulumi.Input<string>;
    time?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTime>;
    weekOfMonth?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTime {
    hour?: pulumi.Input<number>;
    minute?: pulumi.Input<number>;
    second?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleScheduleRefMetadata {
    aggregator?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationTaskScheduleScheduleRefMetadataAggregator>;
    aggregatorKey?: pulumi.Input<string>;
    countStatistics?: pulumi.Input<inputs.DataintegrationWorkspaceApplicationTaskScheduleScheduleRefMetadataCountStatistics>;
    createdBy?: pulumi.Input<string>;
    createdByName?: pulumi.Input<string>;
    identifierPath?: pulumi.Input<string>;
    infoFields?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isFavorite?: pulumi.Input<boolean>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion?: pulumi.Input<number>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    updatedBy?: pulumi.Input<string>;
    updatedByName?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleScheduleRefMetadataAggregator {
    description?: pulumi.Input<string>;
    identifier?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleScheduleRefMetadataCountStatistics {
    objectTypeCountLists: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsObjectTypeCountList>[]>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsObjectTypeCountList {
    objectCount?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleScheduleRefParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationTaskScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceApplicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceExportRequestExportedItem {
    aggregatorKey: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namePath: pulumi.Input<string>;
    objectType: pulumi.Input<string>;
    objectVersion: pulumi.Input<string>;
    timeUpdatedInMillis: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceExportRequestTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceFolderMetadata {
    aggregatorKey: pulumi.Input<string>;
    aggregators: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceFolderMetadataAggregator>[]>;
    countStatistics: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceFolderMetadataCountStatistic>[]>;
    createdBy: pulumi.Input<string>;
    createdByName: pulumi.Input<string>;
    identifierPath: pulumi.Input<string>;
    infoFields: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isFavorite: pulumi.Input<boolean>;
    labels: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion: pulumi.Input<number>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
    updatedByName: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceFolderMetadataAggregator {
    description: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceFolderMetadataCountStatistic {
    objectTypeCountLists: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceFolderMetadataCountStatisticObjectTypeCountList>[]>;
}

export interface DataintegrationWorkspaceFolderMetadataCountStatisticObjectTypeCountList {
    objectCount: pulumi.Input<string>;
    objectType: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceFolderParentRef {
    parent: pulumi.Input<string>;
    rootDocId: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceFolderRegistryMetadata {
    aggregatorKey?: pulumi.Input<string>;
    isFavorite?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceFolderTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceImportRequestImportConflictResolution {
    duplicatePrefix?: pulumi.Input<string>;
    duplicateSuffix?: pulumi.Input<string>;
    importConflictResolutionType: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceImportRequestImportedObject {
    aggregatorKey: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namePath: pulumi.Input<string>;
    newKey: pulumi.Input<string>;
    objectType: pulumi.Input<string>;
    objectVersion: pulumi.Input<string>;
    oldKey: pulumi.Input<string>;
    resolutionAction: pulumi.Input<string>;
    timeUpdatedInMillis: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceImportRequestTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceProjectMetadata {
    aggregatorKey: pulumi.Input<string>;
    aggregators: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceProjectMetadataAggregator>[]>;
    countStatistics: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceProjectMetadataCountStatistic>[]>;
    createdBy: pulumi.Input<string>;
    createdByName: pulumi.Input<string>;
    identifierPath: pulumi.Input<string>;
    infoFields: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isFavorite: pulumi.Input<boolean>;
    labels: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion: pulumi.Input<number>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
    updatedByName: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceProjectMetadataAggregator {
    description: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceProjectMetadataCountStatistic {
    objectTypeCountLists: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceProjectMetadataCountStatisticObjectTypeCountList>[]>;
}

export interface DataintegrationWorkspaceProjectMetadataCountStatisticObjectTypeCountList {
    objectCount: pulumi.Input<string>;
    objectType: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceProjectParentRef {
    parent: pulumi.Input<string>;
    rootDocId: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceProjectRegistryMetadata {
    aggregatorKey?: pulumi.Input<string>;
    isFavorite?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskAuthConfig {
    key?: pulumi.Input<string>;
    modelType?: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    parentRef?: pulumi.Input<inputs.DataintegrationWorkspaceTaskAuthConfigParentRef>;
    resourcePrincipalSource?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskAuthConfigParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskCancelRestCallConfig {
    configValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskCancelRestCallConfigConfigValues>;
    key?: pulumi.Input<string>;
    methodType?: pulumi.Input<string>;
    modelType?: pulumi.Input<string>;
    requestHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataintegrationWorkspaceTaskCancelRestCallConfigConfigValues {
    configParamValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValues>;
    parentRef?: pulumi.Input<inputs.DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesParentRef>;
}

export interface DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValues {
    requestPayload?: pulumi.Input<inputs.DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRequestPayload>;
    requestUrl?: pulumi.Input<inputs.DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRequestUrl>;
}

export interface DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRequestPayload {
    parameterValue?: pulumi.Input<string>;
    refValue?: pulumi.Input<inputs.DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValue>;
}

export interface DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValue {
    configValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValues>;
    key?: pulumi.Input<string>;
    modelType?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValues {
    configParamValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValuesConfigParamValues>;
}

export interface DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValuesConfigParamValues {
    dataParam?: pulumi.Input<inputs.DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValuesConfigParamValuesDataParam>;
}

export interface DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValuesConfigParamValuesDataParam {
    stringValue?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesConfigParamValuesRequestUrl {
    stringValue?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskCancelRestCallConfigConfigValuesParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskConfigProviderDelegate {
    bindings?: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceTaskConfigProviderDelegateBinding>[]>;
}

export interface DataintegrationWorkspaceTaskConfigProviderDelegateBinding {
    key?: pulumi.Input<string>;
    parameterValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskConfigProviderDelegateBindingParameterValues>;
}

export interface DataintegrationWorkspaceTaskConfigProviderDelegateBindingParameterValues {
    rootObjectValue?: pulumi.Input<inputs.DataintegrationWorkspaceTaskConfigProviderDelegateBindingParameterValuesRootObjectValue>;
    simpleValue?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskConfigProviderDelegateBindingParameterValuesRootObjectValue {
    key?: pulumi.Input<string>;
    modelType?: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    objectStatus?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceTaskExecuteRestCallConfig {
    configValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValues>;
    key?: pulumi.Input<string>;
    methodType?: pulumi.Input<string>;
    modelType?: pulumi.Input<string>;
    requestHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValues {
    configParamValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValues>;
    parentRef?: pulumi.Input<inputs.DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesParentRef>;
}

export interface DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValues {
    requestPayload?: pulumi.Input<inputs.DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRequestPayload>;
    requestUrl?: pulumi.Input<inputs.DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRequestUrl>;
}

export interface DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRequestPayload {
    parameterValue?: pulumi.Input<string>;
    refValue?: pulumi.Input<inputs.DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValue>;
}

export interface DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValue {
    configValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValues>;
    key?: pulumi.Input<string>;
    modelType?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValues {
    configParamValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValuesConfigParamValues>;
}

export interface DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValuesConfigParamValues {
    dataParam?: pulumi.Input<inputs.DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValuesConfigParamValuesDataParam>;
}

export interface DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValuesConfigParamValuesDataParam {
    stringValue?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesConfigParamValuesRequestUrl {
    stringValue?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskExecuteRestCallConfigConfigValuesParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskInputPort {
    configValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskInputPortConfigValues>;
    description?: pulumi.Input<string>;
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    key?: pulumi.Input<string>;
    modelType: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectStatus?: pulumi.Input<number>;
    parentRef?: pulumi.Input<inputs.DataintegrationWorkspaceTaskInputPortParentRef>;
    portType?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskInputPortConfigValues {
    configParamValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskInputPortConfigValuesConfigParamValues>;
    parentRef?: pulumi.Input<inputs.DataintegrationWorkspaceTaskInputPortConfigValuesParentRef>;
}

export interface DataintegrationWorkspaceTaskInputPortConfigValuesConfigParamValues {
    intValue?: pulumi.Input<number>;
    objectValue?: pulumi.Input<string>;
    parameterValue?: pulumi.Input<string>;
    refValue?: pulumi.Input<string>;
    rootObjectValue?: pulumi.Input<string>;
    stringValue?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskInputPortConfigValuesParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskInputPortParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskMetadata {
    aggregatorKey: pulumi.Input<string>;
    aggregators: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceTaskMetadataAggregator>[]>;
    countStatistics: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceTaskMetadataCountStatistic>[]>;
    createdBy: pulumi.Input<string>;
    createdByName: pulumi.Input<string>;
    identifierPath: pulumi.Input<string>;
    infoFields: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isFavorite: pulumi.Input<boolean>;
    labels: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion: pulumi.Input<number>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
    updatedByName: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskMetadataAggregator {
    description: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskMetadataCountStatistic {
    objectTypeCountLists: pulumi.Input<pulumi.Input<inputs.DataintegrationWorkspaceTaskMetadataCountStatisticObjectTypeCountList>[]>;
}

export interface DataintegrationWorkspaceTaskMetadataCountStatisticObjectTypeCountList {
    objectCount: pulumi.Input<string>;
    objectType: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskOpConfigValues {
    configParamValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskOpConfigValuesConfigParamValues>;
    parentRef?: pulumi.Input<inputs.DataintegrationWorkspaceTaskOpConfigValuesParentRef>;
}

export interface DataintegrationWorkspaceTaskOpConfigValuesConfigParamValues {
    configParamValue?: pulumi.Input<inputs.DataintegrationWorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValue>;
    key?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValue {
    intValue?: pulumi.Input<number>;
    objectValue?: pulumi.Input<string>;
    parameterValue?: pulumi.Input<string>;
    refValue?: pulumi.Input<inputs.DataintegrationWorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRefValue>;
    rootObjectValue?: pulumi.Input<inputs.DataintegrationWorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRootObjectValue>;
    stringValue?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRefValue {
    key?: pulumi.Input<string>;
    modelType?: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectStatus?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceTaskOpConfigValuesConfigParamValuesConfigParamValueRootObjectValue {
    key?: pulumi.Input<string>;
    modelType?: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    objectStatus?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceTaskOpConfigValuesParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskOutputPort {
    configValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskOutputPortConfigValues>;
    description?: pulumi.Input<string>;
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    key?: pulumi.Input<string>;
    modelType: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectStatus?: pulumi.Input<number>;
    parentRef?: pulumi.Input<inputs.DataintegrationWorkspaceTaskOutputPortParentRef>;
    portType?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskOutputPortConfigValues {
    configParamValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskOutputPortConfigValuesConfigParamValues>;
    parentRef?: pulumi.Input<inputs.DataintegrationWorkspaceTaskOutputPortConfigValuesParentRef>;
}

export interface DataintegrationWorkspaceTaskOutputPortConfigValuesConfigParamValues {
    intValue?: pulumi.Input<number>;
    objectValue?: pulumi.Input<string>;
    parameterValue?: pulumi.Input<string>;
    refValue?: pulumi.Input<string>;
    rootObjectValue?: pulumi.Input<string>;
    stringValue?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskOutputPortConfigValuesParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskOutputPortParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskParameter {
    configValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskParameterConfigValues>;
    defaultValue?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    isInput?: pulumi.Input<boolean>;
    isOutput?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    modelType: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectStatus?: pulumi.Input<number>;
    outputAggregationType?: pulumi.Input<string>;
    parentRef?: pulumi.Input<inputs.DataintegrationWorkspaceTaskParameterParentRef>;
    rootObjectDefaultValue?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    typeName?: pulumi.Input<string>;
    usedFor?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskParameterConfigValues {
    configParamValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskParameterConfigValuesConfigParamValues>;
    parentRef?: pulumi.Input<inputs.DataintegrationWorkspaceTaskParameterConfigValuesParentRef>;
}

export interface DataintegrationWorkspaceTaskParameterConfigValuesConfigParamValues {
    configParamValue?: pulumi.Input<inputs.DataintegrationWorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValue>;
    key?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValue {
    intValue?: pulumi.Input<number>;
    objectValue?: pulumi.Input<string>;
    parameterValue?: pulumi.Input<string>;
    refValue?: pulumi.Input<inputs.DataintegrationWorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValueRefValue>;
    rootObjectValue?: pulumi.Input<inputs.DataintegrationWorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValueRootObjectValue>;
    stringValue?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValueRefValue {
    key?: pulumi.Input<string>;
    modelType?: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectStatus?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceTaskParameterConfigValuesConfigParamValuesConfigParamValueRootObjectValue {
    key?: pulumi.Input<string>;
    modelType?: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    objectStatus?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceTaskParameterConfigValuesParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskParameterParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfig {
    configValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValues>;
    key?: pulumi.Input<string>;
    methodType?: pulumi.Input<string>;
    modelType?: pulumi.Input<string>;
    requestHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValues {
    configParamValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValues>;
    parentRef?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesParentRef>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValues {
    pollCondition?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesPollCondition>;
    pollInterval?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesPollInterval>;
    pollIntervalUnit?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesPollIntervalUnit>;
    pollMaxDuration?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesPollMaxDuration>;
    pollMaxDurationUnit?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesPollMaxDurationUnit>;
    requestPayload?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRequestPayload>;
    requestUrl?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRequestUrl>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesPollCondition {
    parameterValue?: pulumi.Input<string>;
    refValue?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesPollConditionRefValue>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesPollConditionRefValue {
    exprString?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    modelType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesPollInterval {
    objectValue?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesPollIntervalUnit {
    stringValue?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesPollMaxDuration {
    objectValue?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesPollMaxDurationUnit {
    stringValue?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRequestPayload {
    parameterValue?: pulumi.Input<string>;
    refValue?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValue>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValue {
    configValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValues>;
    key?: pulumi.Input<string>;
    modelType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValues {
    configParamValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValuesConfigParamValues>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValuesConfigParamValues {
    dataParam?: pulumi.Input<inputs.DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValuesConfigParamValuesDataParam>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRequestPayloadRefValueConfigValuesConfigParamValuesDataParam {
    stringValue?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesConfigParamValuesRequestUrl {
    stringValue?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskPollRestCallConfigConfigValuesParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskRegistryMetadata {
    aggregatorKey: pulumi.Input<string>;
    isFavorite?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    registryVersion?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceTaskTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskTypedExpression {
    configValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskTypedExpressionConfigValues>;
    description?: pulumi.Input<string>;
    expression?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    modelType?: pulumi.Input<string>;
    modelVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectStatus?: pulumi.Input<number>;
    parentRef?: pulumi.Input<inputs.DataintegrationWorkspaceTaskTypedExpressionParentRef>;
    type?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskTypedExpressionConfigValues {
    configParamValues?: pulumi.Input<inputs.DataintegrationWorkspaceTaskTypedExpressionConfigValuesConfigParamValues>;
    parentRef?: pulumi.Input<inputs.DataintegrationWorkspaceTaskTypedExpressionConfigValuesParentRef>;
}

export interface DataintegrationWorkspaceTaskTypedExpressionConfigValuesConfigParamValues {
    length?: pulumi.Input<inputs.DataintegrationWorkspaceTaskTypedExpressionConfigValuesConfigParamValuesLength>;
    scale?: pulumi.Input<inputs.DataintegrationWorkspaceTaskTypedExpressionConfigValuesConfigParamValuesScale>;
}

export interface DataintegrationWorkspaceTaskTypedExpressionConfigValuesConfigParamValuesLength {
    intValue?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceTaskTypedExpressionConfigValuesConfigParamValuesScale {
    intValue?: pulumi.Input<number>;
}

export interface DataintegrationWorkspaceTaskTypedExpressionConfigValuesParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTaskTypedExpressionParentRef {
    parent?: pulumi.Input<string>;
    rootDocId?: pulumi.Input<string>;
}

export interface DataintegrationWorkspaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatascienceJobJobConfigurationDetails {
    commandLineArguments?: pulumi.Input<string>;
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    jobType: pulumi.Input<string>;
    maximumRuntimeInMinutes?: pulumi.Input<string>;
}

export interface DatascienceJobJobEnvironmentConfigurationDetails {
    cmds?: pulumi.Input<pulumi.Input<string>[]>;
    entrypoints?: pulumi.Input<pulumi.Input<string>[]>;
    image: pulumi.Input<string>;
    imageDigest?: pulumi.Input<string>;
    imageSignatureId?: pulumi.Input<string>;
    jobEnvironmentType: pulumi.Input<string>;
}

export interface DatascienceJobJobInfrastructureConfigurationDetails {
    blockStorageSizeInGbs: pulumi.Input<number>;
    jobInfrastructureType: pulumi.Input<string>;
    jobShapeConfigDetails?: pulumi.Input<inputs.DatascienceJobJobInfrastructureConfigurationDetailsJobShapeConfigDetails>;
    shapeName: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface DatascienceJobJobInfrastructureConfigurationDetailsJobShapeConfigDetails {
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface DatascienceJobJobLogConfigurationDetails {
    enableAutoLogCreation?: pulumi.Input<boolean>;
    enableLogging?: pulumi.Input<boolean>;
    logGroupId?: pulumi.Input<string>;
    logId?: pulumi.Input<string>;
}

export interface DatascienceJobJobStorageMountConfigurationDetailsList {
    bucket?: pulumi.Input<string>;
    destinationDirectoryName: pulumi.Input<string>;
    destinationPath?: pulumi.Input<string>;
    exportId?: pulumi.Input<string>;
    mountTargetId?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
    storageType: pulumi.Input<string>;
}

export interface DatascienceJobRunJobConfigurationOverrideDetails {
    commandLineArguments?: pulumi.Input<string>;
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    jobType: pulumi.Input<string>;
    maximumRuntimeInMinutes?: pulumi.Input<string>;
}

export interface DatascienceJobRunJobEnvironmentConfigurationOverrideDetails {
    cmds?: pulumi.Input<pulumi.Input<string>[]>;
    entrypoints?: pulumi.Input<pulumi.Input<string>[]>;
    image: pulumi.Input<string>;
    imageDigest?: pulumi.Input<string>;
    imageSignatureId?: pulumi.Input<string>;
    jobEnvironmentType: pulumi.Input<string>;
}

export interface DatascienceJobRunJobInfrastructureConfigurationDetail {
    blockStorageSizeInGbs: pulumi.Input<number>;
    jobInfrastructureType: pulumi.Input<string>;
    jobShapeConfigDetails: pulumi.Input<pulumi.Input<inputs.DatascienceJobRunJobInfrastructureConfigurationDetailJobShapeConfigDetail>[]>;
    shapeName: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface DatascienceJobRunJobInfrastructureConfigurationDetailJobShapeConfigDetail {
    memoryInGbs: pulumi.Input<number>;
    ocpus: pulumi.Input<number>;
}

export interface DatascienceJobRunJobLogConfigurationOverrideDetails {
    enableAutoLogCreation?: pulumi.Input<boolean>;
    enableLogging?: pulumi.Input<boolean>;
    logGroupId?: pulumi.Input<string>;
    logId?: pulumi.Input<string>;
}

export interface DatascienceJobRunJobStorageMountConfigurationDetailsList {
    bucket: pulumi.Input<string>;
    destinationDirectoryName: pulumi.Input<string>;
    destinationPath: pulumi.Input<string>;
    exportId: pulumi.Input<string>;
    mountTargetId: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    prefix: pulumi.Input<string>;
    storageType: pulumi.Input<string>;
}

export interface DatascienceJobRunLogDetail {
    logGroupId: pulumi.Input<string>;
    logId: pulumi.Input<string>;
}

export interface DatascienceJobRunTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatascienceJobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatascienceModelArtifactExportTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatascienceModelArtifactImportTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatascienceModelCustomMetadataList {
    category?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface DatascienceModelDefinedMetadataList {
    category?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface DatascienceModelDeploymentCategoryLogDetails {
    access?: pulumi.Input<inputs.DatascienceModelDeploymentCategoryLogDetailsAccess>;
    predict?: pulumi.Input<inputs.DatascienceModelDeploymentCategoryLogDetailsPredict>;
}

export interface DatascienceModelDeploymentCategoryLogDetailsAccess {
    logGroupId: pulumi.Input<string>;
    logId: pulumi.Input<string>;
}

export interface DatascienceModelDeploymentCategoryLogDetailsPredict {
    logGroupId: pulumi.Input<string>;
    logId: pulumi.Input<string>;
}

export interface DatascienceModelDeploymentModelDeploymentConfigurationDetails {
    deploymentType: pulumi.Input<string>;
    environmentConfigurationDetails?: pulumi.Input<inputs.DatascienceModelDeploymentModelDeploymentConfigurationDetailsEnvironmentConfigurationDetails>;
    modelConfigurationDetails: pulumi.Input<inputs.DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetails>;
}

export interface DatascienceModelDeploymentModelDeploymentConfigurationDetailsEnvironmentConfigurationDetails {
    cmds?: pulumi.Input<pulumi.Input<string>[]>;
    entrypoints?: pulumi.Input<pulumi.Input<string>[]>;
    environmentConfigurationType: pulumi.Input<string>;
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    healthCheckPort?: pulumi.Input<number>;
    image?: pulumi.Input<string>;
    imageDigest?: pulumi.Input<string>;
    serverPort?: pulumi.Input<number>;
}

export interface DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetails {
    bandwidthMbps?: pulumi.Input<number>;
    instanceConfiguration: pulumi.Input<inputs.DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsInstanceConfiguration>;
    maximumBandwidthMbps?: pulumi.Input<number>;
    modelId: pulumi.Input<string>;
    scalingPolicy?: pulumi.Input<inputs.DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicy>;
}

export interface DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsInstanceConfiguration {
    instanceShapeName: pulumi.Input<string>;
    modelDeploymentInstanceShapeConfigDetails?: pulumi.Input<inputs.DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsInstanceConfigurationModelDeploymentInstanceShapeConfigDetails>;
    subnetId?: pulumi.Input<string>;
}

export interface DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsInstanceConfigurationModelDeploymentInstanceShapeConfigDetails {
    cpuBaseline?: pulumi.Input<string>;
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicy {
    autoScalingPolicies?: pulumi.Input<pulumi.Input<inputs.DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicyAutoScalingPolicy>[]>;
    coolDownInSeconds?: pulumi.Input<number>;
    instanceCount?: pulumi.Input<number>;
    isEnabled?: pulumi.Input<boolean>;
    policyType: pulumi.Input<string>;
}

export interface DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicyAutoScalingPolicy {
    autoScalingPolicyType: pulumi.Input<string>;
    initialInstanceCount: pulumi.Input<number>;
    maximumInstanceCount: pulumi.Input<number>;
    minimumInstanceCount: pulumi.Input<number>;
    rules: pulumi.Input<pulumi.Input<inputs.DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicyAutoScalingPolicyRule>[]>;
}

export interface DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicyAutoScalingPolicyRule {
    metricExpressionRuleType: pulumi.Input<string>;
    metricType?: pulumi.Input<string>;
    scaleInConfiguration: pulumi.Input<inputs.DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicyAutoScalingPolicyRuleScaleInConfiguration>;
    scaleOutConfiguration: pulumi.Input<inputs.DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicyAutoScalingPolicyRuleScaleOutConfiguration>;
}

export interface DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicyAutoScalingPolicyRuleScaleInConfiguration {
    instanceCountAdjustment?: pulumi.Input<number>;
    pendingDuration?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
    scalingConfigurationType?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
}

export interface DatascienceModelDeploymentModelDeploymentConfigurationDetailsModelConfigurationDetailsScalingPolicyAutoScalingPolicyRuleScaleOutConfiguration {
    instanceCountAdjustment?: pulumi.Input<number>;
    pendingDuration?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
    scalingConfigurationType?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
}

export interface DatascienceModelDeploymentModelDeploymentSystemData {
    currentInstanceCount: pulumi.Input<number>;
    systemInfraType: pulumi.Input<string>;
}

export interface DatascienceModelDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatascienceModelProvenanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatascienceModelTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatascienceModelVersionSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatascienceNotebookSessionNotebookSessionConfigDetails {
    blockStorageSizeInGbs?: pulumi.Input<number>;
    notebookSessionShapeConfigDetails?: pulumi.Input<inputs.DatascienceNotebookSessionNotebookSessionConfigDetailsNotebookSessionShapeConfigDetails>;
    privateEndpointId?: pulumi.Input<string>;
    shape: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface DatascienceNotebookSessionNotebookSessionConfigDetailsNotebookSessionShapeConfigDetails {
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface DatascienceNotebookSessionNotebookSessionConfigurationDetails {
    blockStorageSizeInGbs?: pulumi.Input<number>;
    notebookSessionShapeConfigDetails?: pulumi.Input<inputs.DatascienceNotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails>;
    privateEndpointId?: pulumi.Input<string>;
    shape: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface DatascienceNotebookSessionNotebookSessionConfigurationDetailsNotebookSessionShapeConfigDetails {
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface DatascienceNotebookSessionNotebookSessionRuntimeConfigDetails {
    customEnvironmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    notebookSessionGitConfigDetails?: pulumi.Input<inputs.DatascienceNotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetails>;
}

export interface DatascienceNotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetails {
    notebookSessionGitRepoConfigCollections?: pulumi.Input<pulumi.Input<inputs.DatascienceNotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsNotebookSessionGitRepoConfigCollection>[]>;
}

export interface DatascienceNotebookSessionNotebookSessionRuntimeConfigDetailsNotebookSessionGitConfigDetailsNotebookSessionGitRepoConfigCollection {
    url: pulumi.Input<string>;
}

export interface DatascienceNotebookSessionNotebookSessionStorageMountConfigurationDetailsList {
    bucket?: pulumi.Input<string>;
    destinationDirectoryName: pulumi.Input<string>;
    destinationPath?: pulumi.Input<string>;
    exportId?: pulumi.Input<string>;
    mountTargetId?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
    storageType: pulumi.Input<string>;
}

export interface DatascienceNotebookSessionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatasciencePipelineConfigurationDetails {
    commandLineArguments?: pulumi.Input<string>;
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    maximumRuntimeInMinutes?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DatasciencePipelineInfrastructureConfigurationDetails {
    blockStorageSizeInGbs: pulumi.Input<number>;
    shapeConfigDetails?: pulumi.Input<inputs.DatasciencePipelineInfrastructureConfigurationDetailsShapeConfigDetails>;
    shapeName: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface DatasciencePipelineInfrastructureConfigurationDetailsShapeConfigDetails {
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface DatasciencePipelineLogConfigurationDetails {
    enableAutoLogCreation?: pulumi.Input<boolean>;
    enableLogging?: pulumi.Input<boolean>;
    logGroupId?: pulumi.Input<string>;
    logId?: pulumi.Input<string>;
}

export interface DatasciencePipelineRunConfigurationDetail {
    commandLineArguments: pulumi.Input<string>;
    environmentVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    maximumRuntimeInMinutes: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DatasciencePipelineRunConfigurationOverrideDetails {
    commandLineArguments?: pulumi.Input<string>;
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    maximumRuntimeInMinutes?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DatasciencePipelineRunLogConfigurationOverrideDetails {
    enableAutoLogCreation?: pulumi.Input<boolean>;
    enableLogging?: pulumi.Input<boolean>;
    logGroupId?: pulumi.Input<string>;
    logId?: pulumi.Input<string>;
}

export interface DatasciencePipelineRunLogDetail {
    logGroupId: pulumi.Input<string>;
    logId: pulumi.Input<string>;
}

export interface DatasciencePipelineRunStepOverrideDetail {
    stepConfigurationDetails: pulumi.Input<inputs.DatasciencePipelineRunStepOverrideDetailStepConfigurationDetails>;
    stepContainerConfigurationDetails?: pulumi.Input<inputs.DatasciencePipelineRunStepOverrideDetailStepContainerConfigurationDetails>;
    stepName: pulumi.Input<string>;
}

export interface DatasciencePipelineRunStepOverrideDetailStepConfigurationDetails {
    commandLineArguments?: pulumi.Input<string>;
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    maximumRuntimeInMinutes?: pulumi.Input<string>;
}

export interface DatasciencePipelineRunStepOverrideDetailStepContainerConfigurationDetails {
    cmds?: pulumi.Input<pulumi.Input<string>[]>;
    containerType: pulumi.Input<string>;
    entrypoints?: pulumi.Input<pulumi.Input<string>[]>;
    image: pulumi.Input<string>;
    imageDigest?: pulumi.Input<string>;
    imageSignatureId?: pulumi.Input<string>;
}

export interface DatasciencePipelineRunStepRun {
    jobRunId: pulumi.Input<string>;
    lifecycleDetails: pulumi.Input<string>;
    state: pulumi.Input<string>;
    stepName: pulumi.Input<string>;
    stepType: pulumi.Input<string>;
    timeFinished: pulumi.Input<string>;
    timeStarted: pulumi.Input<string>;
}

export interface DatasciencePipelineRunTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatasciencePipelineStepArtifact {
    artifactContentDisposition?: pulumi.Input<string>;
    artifactContentLength: pulumi.Input<string>;
    artifactContentMd5?: pulumi.Input<string>;
    artifactLastModified?: pulumi.Input<string>;
    pipelineStepArtifact: pulumi.Input<string>;
    stepName: pulumi.Input<string>;
}

export interface DatasciencePipelineStepDetail {
    dependsOns?: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    isArtifactUploaded?: pulumi.Input<boolean>;
    jobId?: pulumi.Input<string>;
    stepConfigurationDetails?: pulumi.Input<inputs.DatasciencePipelineStepDetailStepConfigurationDetails>;
    stepContainerConfigurationDetails?: pulumi.Input<inputs.DatasciencePipelineStepDetailStepContainerConfigurationDetails>;
    stepInfrastructureConfigurationDetails?: pulumi.Input<inputs.DatasciencePipelineStepDetailStepInfrastructureConfigurationDetails>;
    stepName: pulumi.Input<string>;
    stepType: pulumi.Input<string>;
}

export interface DatasciencePipelineStepDetailStepConfigurationDetails {
    commandLineArguments?: pulumi.Input<string>;
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    maximumRuntimeInMinutes?: pulumi.Input<string>;
}

export interface DatasciencePipelineStepDetailStepContainerConfigurationDetails {
    cmds?: pulumi.Input<pulumi.Input<string>[]>;
    containerType: pulumi.Input<string>;
    entrypoints?: pulumi.Input<pulumi.Input<string>[]>;
    image: pulumi.Input<string>;
    imageDigest?: pulumi.Input<string>;
    imageSignatureId?: pulumi.Input<string>;
}

export interface DatasciencePipelineStepDetailStepInfrastructureConfigurationDetails {
    blockStorageSizeInGbs: pulumi.Input<number>;
    shapeConfigDetails?: pulumi.Input<inputs.DatasciencePipelineStepDetailStepInfrastructureConfigurationDetailsShapeConfigDetails>;
    shapeName: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface DatasciencePipelineStepDetailStepInfrastructureConfigurationDetailsShapeConfigDetails {
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface DatasciencePipelineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatasciencePrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatascienceProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DelegateAccessControlDelegationControlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DelegateAccessControlDelegationSubscriptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DemandSignalOccDemandSignalOccDemandSignal {
    resourceType: pulumi.Input<string>;
    units: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<inputs.DemandSignalOccDemandSignalOccDemandSignalValue>[]>;
}

export interface DemandSignalOccDemandSignalOccDemandSignalValue {
    comments?: pulumi.Input<string>;
    timeExpected: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface DemandSignalOccDemandSignalPatchOperation {
    from: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    position?: pulumi.Input<string>;
    selectedItem?: pulumi.Input<string>;
    selection: pulumi.Input<string>;
    value: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DemandSignalOccDemandSignalTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DesktopsDesktopPoolAvailabilityPolicy {
    startSchedule: pulumi.Input<inputs.DesktopsDesktopPoolAvailabilityPolicyStartSchedule>;
    stopSchedule: pulumi.Input<inputs.DesktopsDesktopPoolAvailabilityPolicyStopSchedule>;
}

export interface DesktopsDesktopPoolAvailabilityPolicyStartSchedule {
    cronExpression: pulumi.Input<string>;
    timezone: pulumi.Input<string>;
}

export interface DesktopsDesktopPoolAvailabilityPolicyStopSchedule {
    cronExpression: pulumi.Input<string>;
    timezone: pulumi.Input<string>;
}

export interface DesktopsDesktopPoolDevicePolicy {
    audioMode: pulumi.Input<string>;
    cdmMode: pulumi.Input<string>;
    clipboardMode: pulumi.Input<string>;
    isDisplayEnabled: pulumi.Input<boolean>;
    isKeyboardEnabled: pulumi.Input<boolean>;
    isPointerEnabled: pulumi.Input<boolean>;
    isPrintingEnabled: pulumi.Input<boolean>;
}

export interface DesktopsDesktopPoolImage {
    imageId: pulumi.Input<string>;
    imageName: pulumi.Input<string>;
}

export interface DesktopsDesktopPoolNetworkConfiguration {
    subnetId: pulumi.Input<string>;
    vcnId: pulumi.Input<string>;
}

export interface DesktopsDesktopPoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsBuildPipelineBuildPipelineParameters {
    items: pulumi.Input<pulumi.Input<inputs.DevopsBuildPipelineBuildPipelineParametersItem>[]>;
}

export interface DevopsBuildPipelineBuildPipelineParametersItem {
    defaultValue: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface DevopsBuildPipelineStageBuildPipelineStagePredecessorCollection {
    items: pulumi.Input<pulumi.Input<inputs.DevopsBuildPipelineStageBuildPipelineStagePredecessorCollectionItem>[]>;
}

export interface DevopsBuildPipelineStageBuildPipelineStagePredecessorCollectionItem {
    id: pulumi.Input<string>;
}

export interface DevopsBuildPipelineStageBuildRunnerShapeConfig {
    buildRunnerType: pulumi.Input<string>;
    memoryInGbs?: pulumi.Input<number>;
    ocpus?: pulumi.Input<number>;
}

export interface DevopsBuildPipelineStageBuildSourceCollection {
    items?: pulumi.Input<pulumi.Input<inputs.DevopsBuildPipelineStageBuildSourceCollectionItem>[]>;
}

export interface DevopsBuildPipelineStageBuildSourceCollectionItem {
    branch?: pulumi.Input<string>;
    connectionId?: pulumi.Input<string>;
    connectionType: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    repositoryId?: pulumi.Input<string>;
    repositoryUrl?: pulumi.Input<string>;
}

export interface DevopsBuildPipelineStageDeliverArtifactCollection {
    items?: pulumi.Input<pulumi.Input<inputs.DevopsBuildPipelineStageDeliverArtifactCollectionItem>[]>;
}

export interface DevopsBuildPipelineStageDeliverArtifactCollectionItem {
    artifactId?: pulumi.Input<string>;
    artifactName?: pulumi.Input<string>;
}

export interface DevopsBuildPipelineStagePrivateAccessConfig {
    networkChannelType: pulumi.Input<string>;
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId: pulumi.Input<string>;
}

export interface DevopsBuildPipelineStageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsBuildPipelineStageWaitCriteria {
    waitDuration: pulumi.Input<string>;
    waitType: pulumi.Input<string>;
}

export interface DevopsBuildPipelineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsBuildRunBuildOutput {
    artifactOverrideParameters: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildOutputArtifactOverrideParameter>[]>;
    deliveredArtifacts: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildOutputDeliveredArtifact>[]>;
    exportedVariables: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildOutputExportedVariable>[]>;
    vulnerabilityAuditSummaryCollections: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildOutputVulnerabilityAuditSummaryCollection>[]>;
}

export interface DevopsBuildRunBuildOutputArtifactOverrideParameter {
    items: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildOutputArtifactOverrideParameterItem>[]>;
}

export interface DevopsBuildRunBuildOutputArtifactOverrideParameterItem {
    deployArtifactId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DevopsBuildRunBuildOutputDeliveredArtifact {
    items: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildOutputDeliveredArtifactItem>[]>;
}

export interface DevopsBuildRunBuildOutputDeliveredArtifactItem {
    artifactRepositoryId: pulumi.Input<string>;
    artifactType: pulumi.Input<string>;
    deliveredArtifactHash: pulumi.Input<string>;
    deliveredArtifactId: pulumi.Input<string>;
    deployArtifactId: pulumi.Input<string>;
    imageUri: pulumi.Input<string>;
    outputArtifactName: pulumi.Input<string>;
    path: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface DevopsBuildRunBuildOutputExportedVariable {
    items: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildOutputExportedVariableItem>[]>;
}

export interface DevopsBuildRunBuildOutputExportedVariableItem {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DevopsBuildRunBuildOutputVulnerabilityAuditSummaryCollection {
    items: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildOutputVulnerabilityAuditSummaryCollectionItem>[]>;
}

export interface DevopsBuildRunBuildOutputVulnerabilityAuditSummaryCollectionItem {
    buildStageId: pulumi.Input<string>;
    commitHash: pulumi.Input<string>;
    vulnerabilityAuditId: pulumi.Input<string>;
}

export interface DevopsBuildRunBuildRunArguments {
    items: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildRunArgumentsItem>[]>;
}

export interface DevopsBuildRunBuildRunArgumentsItem {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DevopsBuildRunBuildRunProgress {
    buildPipelineStageRunProgress: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeFinished: pulumi.Input<string>;
    timeStarted: pulumi.Input<string>;
}

export interface DevopsBuildRunBuildRunSource {
    repositoryId: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
    triggerId: pulumi.Input<string>;
    triggerInfos: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildRunSourceTriggerInfo>[]>;
}

export interface DevopsBuildRunBuildRunSourceTriggerInfo {
    actions: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildRunSourceTriggerInfoAction>[]>;
    displayName: pulumi.Input<string>;
}

export interface DevopsBuildRunBuildRunSourceTriggerInfoAction {
    buildPipelineId: pulumi.Input<string>;
    filters: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildRunSourceTriggerInfoActionFilter>[]>;
    type: pulumi.Input<string>;
}

export interface DevopsBuildRunBuildRunSourceTriggerInfoActionFilter {
    events: pulumi.Input<pulumi.Input<string>[]>;
    excludes: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildRunSourceTriggerInfoActionFilterExclude>[]>;
    includes: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildRunSourceTriggerInfoActionFilterInclude>[]>;
    triggerSource: pulumi.Input<string>;
}

export interface DevopsBuildRunBuildRunSourceTriggerInfoActionFilterExclude {
    fileFilters: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildRunSourceTriggerInfoActionFilterExcludeFileFilter>[]>;
}

export interface DevopsBuildRunBuildRunSourceTriggerInfoActionFilterExcludeFileFilter {
    filePaths: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DevopsBuildRunBuildRunSourceTriggerInfoActionFilterInclude {
    baseRef: pulumi.Input<string>;
    fileFilters: pulumi.Input<pulumi.Input<inputs.DevopsBuildRunBuildRunSourceTriggerInfoActionFilterIncludeFileFilter>[]>;
    headRef: pulumi.Input<string>;
    repositoryName: pulumi.Input<string>;
}

export interface DevopsBuildRunBuildRunSourceTriggerInfoActionFilterIncludeFileFilter {
    filePaths: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DevopsBuildRunCommitInfo {
    commitHash: pulumi.Input<string>;
    repositoryBranch: pulumi.Input<string>;
    repositoryUrl: pulumi.Input<string>;
}

export interface DevopsBuildRunTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsConnectionLastConnectionValidationResult {
    message: pulumi.Input<string>;
    result: pulumi.Input<string>;
    timeValidated: pulumi.Input<string>;
}

export interface DevopsConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsConnectionTlsVerifyConfig {
    caCertificateBundleId: pulumi.Input<string>;
    tlsVerifyMode: pulumi.Input<string>;
}

export interface DevopsDeployArtifactDeployArtifactSource {
    base64encodedContent?: pulumi.Input<string>;
    chartUrl?: pulumi.Input<string>;
    deployArtifactPath?: pulumi.Input<string>;
    deployArtifactSourceType: pulumi.Input<string>;
    deployArtifactVersion?: pulumi.Input<string>;
    helmArtifactSourceType?: pulumi.Input<string>;
    helmVerificationKeySource?: pulumi.Input<inputs.DevopsDeployArtifactDeployArtifactSourceHelmVerificationKeySource>;
    imageDigest?: pulumi.Input<string>;
    imageUri?: pulumi.Input<string>;
    repositoryId?: pulumi.Input<string>;
}

export interface DevopsDeployArtifactDeployArtifactSourceHelmVerificationKeySource {
    currentPublicKey?: pulumi.Input<string>;
    previousPublicKey?: pulumi.Input<string>;
    vaultSecretId?: pulumi.Input<string>;
    verificationKeySourceType: pulumi.Input<string>;
}

export interface DevopsDeployArtifactTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsDeployEnvironmentComputeInstanceGroupSelectors {
    items?: pulumi.Input<pulumi.Input<inputs.DevopsDeployEnvironmentComputeInstanceGroupSelectorsItem>[]>;
}

export interface DevopsDeployEnvironmentComputeInstanceGroupSelectorsItem {
    computeInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    query?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    selectorType: pulumi.Input<string>;
}

export interface DevopsDeployEnvironmentNetworkChannel {
    networkChannelType: pulumi.Input<string>;
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId: pulumi.Input<string>;
}

export interface DevopsDeployEnvironmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsDeployPipelineDeployPipelineArtifact {
    items: pulumi.Input<pulumi.Input<inputs.DevopsDeployPipelineDeployPipelineArtifactItem>[]>;
}

export interface DevopsDeployPipelineDeployPipelineArtifactItem {
    deployArtifactId: pulumi.Input<string>;
    deployPipelineStages: pulumi.Input<pulumi.Input<inputs.DevopsDeployPipelineDeployPipelineArtifactItemDeployPipelineStage>[]>;
    displayName: pulumi.Input<string>;
}

export interface DevopsDeployPipelineDeployPipelineArtifactItemDeployPipelineStage {
    items: pulumi.Input<pulumi.Input<inputs.DevopsDeployPipelineDeployPipelineArtifactItemDeployPipelineStageItem>[]>;
}

export interface DevopsDeployPipelineDeployPipelineArtifactItemDeployPipelineStageItem {
    deployStageId: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
}

export interface DevopsDeployPipelineDeployPipelineEnvironment {
    items: pulumi.Input<pulumi.Input<inputs.DevopsDeployPipelineDeployPipelineEnvironmentItem>[]>;
}

export interface DevopsDeployPipelineDeployPipelineEnvironmentItem {
    deployEnvironmentId: pulumi.Input<string>;
    deployPipelineStages: pulumi.Input<pulumi.Input<inputs.DevopsDeployPipelineDeployPipelineEnvironmentItemDeployPipelineStage>[]>;
    displayName: pulumi.Input<string>;
}

export interface DevopsDeployPipelineDeployPipelineEnvironmentItemDeployPipelineStage {
    items: pulumi.Input<pulumi.Input<inputs.DevopsDeployPipelineDeployPipelineEnvironmentItemDeployPipelineStageItem>[]>;
}

export interface DevopsDeployPipelineDeployPipelineEnvironmentItemDeployPipelineStageItem {
    deployStageId: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
}

export interface DevopsDeployPipelineDeployPipelineParameters {
    items: pulumi.Input<pulumi.Input<inputs.DevopsDeployPipelineDeployPipelineParametersItem>[]>;
}

export interface DevopsDeployPipelineDeployPipelineParametersItem {
    defaultValue?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface DevopsDeployPipelineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsDeployStageApprovalPolicy {
    approvalPolicyType: pulumi.Input<string>;
    numberOfApprovalsRequired: pulumi.Input<number>;
}

export interface DevopsDeployStageBlueBackendIps {
    items?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DevopsDeployStageBlueGreenStrategy {
    ingressName: pulumi.Input<string>;
    namespaceA: pulumi.Input<string>;
    namespaceB: pulumi.Input<string>;
    strategyType: pulumi.Input<string>;
}

export interface DevopsDeployStageCanaryStrategy {
    ingressName: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    strategyType: pulumi.Input<string>;
}

export interface DevopsDeployStageContainerConfig {
    availabilityDomain?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    containerConfigType: pulumi.Input<string>;
    networkChannel: pulumi.Input<inputs.DevopsDeployStageContainerConfigNetworkChannel>;
    shapeConfig: pulumi.Input<inputs.DevopsDeployStageContainerConfigShapeConfig>;
    shapeName: pulumi.Input<string>;
}

export interface DevopsDeployStageContainerConfigNetworkChannel {
    networkChannelType: pulumi.Input<string>;
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId: pulumi.Input<string>;
}

export interface DevopsDeployStageContainerConfigShapeConfig {
    memoryInGbs?: pulumi.Input<number>;
    ocpus: pulumi.Input<number>;
}

export interface DevopsDeployStageDeployStagePredecessorCollection {
    items: pulumi.Input<pulumi.Input<inputs.DevopsDeployStageDeployStagePredecessorCollectionItem>[]>;
}

export interface DevopsDeployStageDeployStagePredecessorCollectionItem {
    id: pulumi.Input<string>;
}

export interface DevopsDeployStageFailurePolicy {
    failureCount?: pulumi.Input<number>;
    failurePercentage?: pulumi.Input<number>;
    policyType: pulumi.Input<string>;
}

export interface DevopsDeployStageGreenBackendIps {
    items?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DevopsDeployStageLoadBalancerConfig {
    backendPort?: pulumi.Input<number>;
    listenerName?: pulumi.Input<string>;
    loadBalancerId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

export interface DevopsDeployStageProductionLoadBalancerConfig {
    backendPort?: pulumi.Input<number>;
    listenerName?: pulumi.Input<string>;
    loadBalancerId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

export interface DevopsDeployStageRollbackPolicy {
    policyType?: pulumi.Input<string>;
}

export interface DevopsDeployStageRolloutPolicy {
    batchCount?: pulumi.Input<number>;
    batchDelayInSeconds?: pulumi.Input<number>;
    batchPercentage?: pulumi.Input<number>;
    policyType?: pulumi.Input<string>;
    rampLimitPercent?: pulumi.Input<number>;
}

export interface DevopsDeployStageSetString {
    items?: pulumi.Input<pulumi.Input<inputs.DevopsDeployStageSetStringItem>[]>;
}

export interface DevopsDeployStageSetStringItem {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface DevopsDeployStageSetValues {
    items?: pulumi.Input<pulumi.Input<inputs.DevopsDeployStageSetValuesItem>[]>;
}

export interface DevopsDeployStageSetValuesItem {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface DevopsDeployStageTestLoadBalancerConfig {
    backendPort?: pulumi.Input<number>;
    listenerName?: pulumi.Input<string>;
    loadBalancerId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

export interface DevopsDeployStageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsDeployStageWaitCriteria {
    waitDuration: pulumi.Input<string>;
    waitType: pulumi.Input<string>;
}

export interface DevopsDeploymentDeployArtifactOverrideArguments {
    items?: pulumi.Input<pulumi.Input<inputs.DevopsDeploymentDeployArtifactOverrideArgumentsItem>[]>;
}

export interface DevopsDeploymentDeployArtifactOverrideArgumentsItem {
    deployArtifactId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface DevopsDeploymentDeployPipelineArtifact {
    items: pulumi.Input<pulumi.Input<inputs.DevopsDeploymentDeployPipelineArtifactItem>[]>;
}

export interface DevopsDeploymentDeployPipelineArtifactItem {
    deployArtifactId: pulumi.Input<string>;
    deployPipelineStages: pulumi.Input<pulumi.Input<inputs.DevopsDeploymentDeployPipelineArtifactItemDeployPipelineStage>[]>;
    displayName: pulumi.Input<string>;
}

export interface DevopsDeploymentDeployPipelineArtifactItemDeployPipelineStage {
    items: pulumi.Input<pulumi.Input<inputs.DevopsDeploymentDeployPipelineArtifactItemDeployPipelineStageItem>[]>;
}

export interface DevopsDeploymentDeployPipelineArtifactItemDeployPipelineStageItem {
    deployStageId: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
}

export interface DevopsDeploymentDeployPipelineEnvironment {
    items: pulumi.Input<pulumi.Input<inputs.DevopsDeploymentDeployPipelineEnvironmentItem>[]>;
}

export interface DevopsDeploymentDeployPipelineEnvironmentItem {
    deployEnvironmentId: pulumi.Input<string>;
    deployPipelineStages: pulumi.Input<pulumi.Input<inputs.DevopsDeploymentDeployPipelineEnvironmentItemDeployPipelineStage>[]>;
    displayName: pulumi.Input<string>;
}

export interface DevopsDeploymentDeployPipelineEnvironmentItemDeployPipelineStage {
    items: pulumi.Input<pulumi.Input<inputs.DevopsDeploymentDeployPipelineEnvironmentItemDeployPipelineStageItem>[]>;
}

export interface DevopsDeploymentDeployPipelineEnvironmentItemDeployPipelineStageItem {
    deployStageId: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
}

export interface DevopsDeploymentDeployStageOverrideArguments {
    items?: pulumi.Input<pulumi.Input<inputs.DevopsDeploymentDeployStageOverrideArgumentsItem>[]>;
}

export interface DevopsDeploymentDeployStageOverrideArgumentsItem {
    deployStageId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface DevopsDeploymentDeploymentArguments {
    items?: pulumi.Input<pulumi.Input<inputs.DevopsDeploymentDeploymentArgumentsItem>[]>;
}

export interface DevopsDeploymentDeploymentArgumentsItem {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface DevopsDeploymentDeploymentExecutionProgress {
    deployStageExecutionProgress: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeFinished: pulumi.Input<string>;
    timeStarted: pulumi.Input<string>;
}

export interface DevopsDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsProjectNotificationConfig {
    topicId: pulumi.Input<string>;
}

export interface DevopsProjectRepositorySettingApprovalRules {
    items: pulumi.Input<pulumi.Input<inputs.DevopsProjectRepositorySettingApprovalRulesItem>[]>;
}

export interface DevopsProjectRepositorySettingApprovalRulesItem {
    destinationBranch?: pulumi.Input<string>;
    minApprovalsCount: pulumi.Input<number>;
    name: pulumi.Input<string>;
    reviewers?: pulumi.Input<pulumi.Input<inputs.DevopsProjectRepositorySettingApprovalRulesItemReviewer>[]>;
}

export interface DevopsProjectRepositorySettingApprovalRulesItemReviewer {
    principalId: pulumi.Input<string>;
    principalName?: pulumi.Input<string>;
    principalState?: pulumi.Input<string>;
    principalType?: pulumi.Input<string>;
}

export interface DevopsProjectRepositorySettingMergeSettings {
    allowedMergeStrategies: pulumi.Input<pulumi.Input<string>[]>;
    defaultMergeStrategy: pulumi.Input<string>;
}

export interface DevopsProjectRepositorySettingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsRepositoryMirrorRepositoryConfig {
    connectorId?: pulumi.Input<string>;
    repositoryUrl?: pulumi.Input<string>;
    triggerSchedule?: pulumi.Input<inputs.DevopsRepositoryMirrorRepositoryConfigTriggerSchedule>;
}

export interface DevopsRepositoryMirrorRepositoryConfigTriggerSchedule {
    customSchedule?: pulumi.Input<string>;
    scheduleType: pulumi.Input<string>;
}

export interface DevopsRepositoryMirrorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsRepositoryProtectedBranchManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsRepositoryRefTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsRepositorySettingApprovalRules {
    items: pulumi.Input<pulumi.Input<inputs.DevopsRepositorySettingApprovalRulesItem>[]>;
}

export interface DevopsRepositorySettingApprovalRulesItem {
    destinationBranch?: pulumi.Input<string>;
    minApprovalsCount: pulumi.Input<number>;
    name: pulumi.Input<string>;
    reviewers?: pulumi.Input<pulumi.Input<inputs.DevopsRepositorySettingApprovalRulesItemReviewer>[]>;
}

export interface DevopsRepositorySettingApprovalRulesItemReviewer {
    principalId: pulumi.Input<string>;
    principalName?: pulumi.Input<string>;
    principalState?: pulumi.Input<string>;
    principalType?: pulumi.Input<string>;
}

export interface DevopsRepositorySettingMergeChecks {
    lastBuildSucceeded: pulumi.Input<string>;
}

export interface DevopsRepositorySettingMergeSettings {
    allowedMergeStrategies: pulumi.Input<pulumi.Input<string>[]>;
    defaultMergeStrategy: pulumi.Input<string>;
}

export interface DevopsRepositorySettingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsRepositoryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevopsTriggerAction {
    buildPipelineId: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.DevopsTriggerActionFilter>;
    type: pulumi.Input<string>;
}

export interface DevopsTriggerActionFilter {
    events?: pulumi.Input<pulumi.Input<string>[]>;
    exclude?: pulumi.Input<inputs.DevopsTriggerActionFilterExclude>;
    include?: pulumi.Input<inputs.DevopsTriggerActionFilterInclude>;
    triggerSource: pulumi.Input<string>;
}

export interface DevopsTriggerActionFilterExclude {
    fileFilter?: pulumi.Input<inputs.DevopsTriggerActionFilterExcludeFileFilter>;
}

export interface DevopsTriggerActionFilterExcludeFileFilter {
    filePaths?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DevopsTriggerActionFilterInclude {
    baseRef?: pulumi.Input<string>;
    fileFilter?: pulumi.Input<inputs.DevopsTriggerActionFilterIncludeFileFilter>;
    headRef?: pulumi.Input<string>;
    repositoryName?: pulumi.Input<string>;
}

export interface DevopsTriggerActionFilterIncludeFileFilter {
    filePaths?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DevopsTriggerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DisasterRecoveryDrPlanExecutionExecutionOptions {
    arePrechecksEnabled?: pulumi.Input<boolean>;
    areWarningsIgnored?: pulumi.Input<boolean>;
    planExecutionType: pulumi.Input<string>;
}

export interface DisasterRecoveryDrPlanExecutionGroupExecution {
    displayName: pulumi.Input<string>;
    executionDurationInSec: pulumi.Input<number>;
    groupId: pulumi.Input<string>;
    status: pulumi.Input<string>;
    statusDetails: pulumi.Input<string>;
    stepExecutions: pulumi.Input<pulumi.Input<inputs.DisasterRecoveryDrPlanExecutionGroupExecutionStepExecution>[]>;
    timeEnded: pulumi.Input<string>;
    timeStarted: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DisasterRecoveryDrPlanExecutionGroupExecutionStepExecution {
    displayName: pulumi.Input<string>;
    executionDurationInSec: pulumi.Input<number>;
    groupId: pulumi.Input<string>;
    logLocations: pulumi.Input<pulumi.Input<inputs.DisasterRecoveryDrPlanExecutionGroupExecutionStepExecutionLogLocation>[]>;
    status: pulumi.Input<string>;
    statusDetails: pulumi.Input<string>;
    stepId: pulumi.Input<string>;
    timeEnded: pulumi.Input<string>;
    timeStarted: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DisasterRecoveryDrPlanExecutionGroupExecutionStepExecutionLogLocation {
    bucket: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    object: pulumi.Input<string>;
}

export interface DisasterRecoveryDrPlanExecutionLogLocation {
    bucket: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    object: pulumi.Input<string>;
}

export interface DisasterRecoveryDrPlanExecutionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DisasterRecoveryDrPlanPlanGroup {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    isPauseEnabled: pulumi.Input<boolean>;
    steps: pulumi.Input<pulumi.Input<inputs.DisasterRecoveryDrPlanPlanGroupStep>[]>;
    type: pulumi.Input<string>;
}

export interface DisasterRecoveryDrPlanPlanGroupStep {
    displayName: pulumi.Input<string>;
    errorMode: pulumi.Input<string>;
    groupId: pulumi.Input<string>;
    id: pulumi.Input<string>;
    isEnabled: pulumi.Input<boolean>;
    memberId: pulumi.Input<string>;
    timeout: pulumi.Input<number>;
    type: pulumi.Input<string>;
    userDefinedSteps: pulumi.Input<pulumi.Input<inputs.DisasterRecoveryDrPlanPlanGroupStepUserDefinedStep>[]>;
}

export interface DisasterRecoveryDrPlanPlanGroupStepUserDefinedStep {
    functionId: pulumi.Input<string>;
    functionRegion: pulumi.Input<string>;
    objectStorageScriptLocations: pulumi.Input<pulumi.Input<inputs.DisasterRecoveryDrPlanPlanGroupStepUserDefinedStepObjectStorageScriptLocation>[]>;
    requestBody: pulumi.Input<string>;
    runAsUser: pulumi.Input<string>;
    runOnInstanceId: pulumi.Input<string>;
    runOnInstanceRegion: pulumi.Input<string>;
    scriptCommand: pulumi.Input<string>;
    stepType: pulumi.Input<string>;
}

export interface DisasterRecoveryDrPlanPlanGroupStepUserDefinedStepObjectStorageScriptLocation {
    bucket: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    object: pulumi.Input<string>;
}

export interface DisasterRecoveryDrPlanTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DisasterRecoveryDrProtectionGroupAssociation {
    peerId?: pulumi.Input<string>;
    peerRegion?: pulumi.Input<string>;
    role: pulumi.Input<string>;
}

export interface DisasterRecoveryDrProtectionGroupLogLocation {
    bucket: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    object?: pulumi.Input<string>;
}

export interface DisasterRecoveryDrProtectionGroupMember {
    autonomousDatabaseStandbyTypeForDrDrills?: pulumi.Input<string>;
    backendSetMappings?: pulumi.Input<pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupMemberBackendSetMapping>[]>;
    blockVolumeOperations?: pulumi.Input<pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupMemberBlockVolumeOperation>[]>;
    bucket?: pulumi.Input<string>;
    connectionStringType?: pulumi.Input<string>;
    destinationAvailabilityDomain?: pulumi.Input<string>;
    destinationCapacityReservationId?: pulumi.Input<string>;
    destinationCompartmentId?: pulumi.Input<string>;
    destinationDedicatedVmHostId?: pulumi.Input<string>;
    destinationLoadBalancerId?: pulumi.Input<string>;
    destinationNetworkLoadBalancerId?: pulumi.Input<string>;
    exportMappings?: pulumi.Input<pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupMemberExportMapping>[]>;
    fileSystemOperations?: pulumi.Input<pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupMemberFileSystemOperation>[]>;
    isMovable?: pulumi.Input<boolean>;
    isRetainFaultDomain?: pulumi.Input<boolean>;
    isStartStopEnabled?: pulumi.Input<boolean>;
    memberId: pulumi.Input<string>;
    memberType: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    passwordVaultSecretId?: pulumi.Input<string>;
    vnicMapping?: pulumi.Input<pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupMemberVnicMapping>[]>;
    vnicMappings?: pulumi.Input<pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupMemberVnicMapping>[]>;
}

export interface DisasterRecoveryDrProtectionGroupMemberBackendSetMapping {
    destinationBackendSetName?: pulumi.Input<string>;
    isBackendSetForNonMovable?: pulumi.Input<boolean>;
    sourceBackendSetName?: pulumi.Input<string>;
}

export interface DisasterRecoveryDrProtectionGroupMemberBlockVolumeOperation {
    attachmentDetails?: pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupMemberBlockVolumeOperationAttachmentDetails>;
    blockVolumeId?: pulumi.Input<string>;
    mountDetails?: pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupMemberBlockVolumeOperationMountDetails>;
}

export interface DisasterRecoveryDrProtectionGroupMemberBlockVolumeOperationAttachmentDetails {
    volumeAttachmentReferenceInstanceId?: pulumi.Input<string>;
}

export interface DisasterRecoveryDrProtectionGroupMemberBlockVolumeOperationMountDetails {
    mountPoint?: pulumi.Input<string>;
}

export interface DisasterRecoveryDrProtectionGroupMemberExportMapping {
    destinationMountTargetId?: pulumi.Input<string>;
    exportId?: pulumi.Input<string>;
}

export interface DisasterRecoveryDrProtectionGroupMemberFileSystemOperation {
    exportPath?: pulumi.Input<string>;
    mountDetails?: pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupMemberFileSystemOperationMountDetails>;
    mountPoint?: pulumi.Input<string>;
    mountTargetId?: pulumi.Input<string>;
    unmountDetails?: pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupMemberFileSystemOperationUnmountDetails>;
}

export interface DisasterRecoveryDrProtectionGroupMemberFileSystemOperationMountDetails {
    mountTargetId?: pulumi.Input<string>;
}

export interface DisasterRecoveryDrProtectionGroupMemberFileSystemOperationUnmountDetails {
    mountTargetId?: pulumi.Input<string>;
}

export interface DisasterRecoveryDrProtectionGroupMemberVnicMapping {
    destinationNsgIdLists?: pulumi.Input<pulumi.Input<string>[]>;
    destinationPrimaryPrivateIpAddress?: pulumi.Input<string>;
    destinationPrimaryPrivateIpHostnameLabel?: pulumi.Input<string>;
    destinationSubnetId?: pulumi.Input<string>;
    sourceVnicId?: pulumi.Input<string>;
}

export interface DisasterRecoveryDrProtectionGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsActionCreateZoneFromZoneFileExternalDownstream {
    address: pulumi.Input<string>;
    port: pulumi.Input<number>;
    tsigKeyId: pulumi.Input<string>;
}

export interface DnsActionCreateZoneFromZoneFileExternalMaster {
    address: pulumi.Input<string>;
    port: pulumi.Input<number>;
    tsigKeyId: pulumi.Input<string>;
}

export interface DnsActionCreateZoneFromZoneFileNameserver {
    hostname: pulumi.Input<string>;
}

export interface DnsActionCreateZoneFromZoneFileTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsActionCreateZoneFromZoneFileZoneTransferServer {
    address: pulumi.Input<string>;
    isTransferDestination: pulumi.Input<boolean>;
    isTransferSource: pulumi.Input<boolean>;
    port: pulumi.Input<number>;
}

export interface DnsRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsResolverAttachedView {
    viewId: pulumi.Input<string>;
}

export interface DnsResolverEndpoint {
    compartmentId: pulumi.Input<string>;
    endpointType: pulumi.Input<string>;
    forwardingAddress: pulumi.Input<string>;
    isForwarding: pulumi.Input<boolean>;
    isListening: pulumi.Input<boolean>;
    listeningAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    self: pulumi.Input<string>;
    state: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
}

export interface DnsResolverEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsResolverRule {
    action: pulumi.Input<string>;
    clientAddressConditions?: pulumi.Input<pulumi.Input<string>[]>;
    destinationAddresses: pulumi.Input<pulumi.Input<string>[]>;
    qnameCoverConditions?: pulumi.Input<pulumi.Input<string>[]>;
    sourceEndpointName: pulumi.Input<string>;
}

export interface DnsResolverTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsRrsetItem {
    domain: pulumi.Input<string>;
    isProtected?: pulumi.Input<boolean>;
    rdata: pulumi.Input<string>;
    recordHash?: pulumi.Input<string>;
    rrsetVersion?: pulumi.Input<string>;
    rtype: pulumi.Input<string>;
    ttl: pulumi.Input<number>;
}

export interface DnsRrsetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsSteeringPolicyAnswer {
    isDisabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    pool?: pulumi.Input<string>;
    rdata: pulumi.Input<string>;
    rtype: pulumi.Input<string>;
}

export interface DnsSteeringPolicyAttachmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsSteeringPolicyRule {
    cases?: pulumi.Input<pulumi.Input<inputs.DnsSteeringPolicyRuleCase>[]>;
    defaultAnswerDatas?: pulumi.Input<pulumi.Input<inputs.DnsSteeringPolicyRuleDefaultAnswerData>[]>;
    defaultCount?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    ruleType: pulumi.Input<string>;
}

export interface DnsSteeringPolicyRuleCase {
    answerDatas?: pulumi.Input<pulumi.Input<inputs.DnsSteeringPolicyRuleCaseAnswerData>[]>;
    caseCondition?: pulumi.Input<string>;
    count?: pulumi.Input<number>;
}

export interface DnsSteeringPolicyRuleCaseAnswerData {
    answerCondition?: pulumi.Input<string>;
    shouldKeep?: pulumi.Input<boolean>;
    value?: pulumi.Input<number>;
}

export interface DnsSteeringPolicyRuleDefaultAnswerData {
    answerCondition?: pulumi.Input<string>;
    shouldKeep?: pulumi.Input<boolean>;
    value?: pulumi.Input<number>;
}

export interface DnsSteeringPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsTsigKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsViewTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsZoneExternalDownstream {
    address: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    tsigKeyId?: pulumi.Input<string>;
}

export interface DnsZoneExternalMaster {
    address: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    tsigKeyId?: pulumi.Input<string>;
}

export interface DnsZoneNameserver {
    hostname: pulumi.Input<string>;
}

export interface DnsZoneTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsZoneZoneTransferServer {
    address: pulumi.Input<string>;
    isTransferDestination: pulumi.Input<boolean>;
    isTransferSource: pulumi.Input<boolean>;
    port: pulumi.Input<number>;
}

export interface EmailDkimTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EmailEmailDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EmailEmailReturnPathTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EmailSenderTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EmailSuppressionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EventsRuleActions {
    actions: pulumi.Input<pulumi.Input<inputs.EventsRuleActionsAction>[]>;
}

export interface EventsRuleActionsAction {
    actionType: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    functionId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isEnabled: pulumi.Input<boolean>;
    lifecycleMessage?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    streamId?: pulumi.Input<string>;
    topicId?: pulumi.Input<string>;
}

export interface EventsRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FileStorageExportExportOption {
    access?: pulumi.Input<string>;
    allowedAuths?: pulumi.Input<pulumi.Input<string>[]>;
    anonymousGid?: pulumi.Input<string>;
    anonymousUid?: pulumi.Input<string>;
    identitySquash?: pulumi.Input<string>;
    isAnonymousAccessAllowed?: pulumi.Input<boolean>;
    requirePrivilegedSourcePort?: pulumi.Input<boolean>;
    source: pulumi.Input<string>;
}

export interface FileStorageExportSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FileStorageExportTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FileStorageFileSystemSourceDetail {
    parentFileSystemId: pulumi.Input<string>;
    sourceSnapshotId: pulumi.Input<string>;
}

export interface FileStorageFileSystemTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FileStorageFilesystemSnapshotPolicySchedule {
    dayOfMonth?: pulumi.Input<number>;
    dayOfWeek?: pulumi.Input<string>;
    hourOfDay?: pulumi.Input<number>;
    month?: pulumi.Input<string>;
    period: pulumi.Input<string>;
    retentionDurationInSeconds?: pulumi.Input<string>;
    schedulePrefix?: pulumi.Input<string>;
    timeScheduleStart?: pulumi.Input<string>;
    timeZone: pulumi.Input<string>;
}

export interface FileStorageFilesystemSnapshotPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FileStorageMountTargetKerberos {
    backupKeyTabSecretVersion?: pulumi.Input<number>;
    currentKeyTabSecretVersion?: pulumi.Input<number>;
    isKerberosEnabled?: pulumi.Input<boolean>;
    kerberosRealm: pulumi.Input<string>;
    keyTabSecretId?: pulumi.Input<string>;
}

export interface FileStorageMountTargetLdapIdmap {
    cacheLifetimeSeconds?: pulumi.Input<number>;
    cacheRefreshIntervalSeconds?: pulumi.Input<number>;
    groupSearchBase?: pulumi.Input<string>;
    negativeCacheLifetimeSeconds?: pulumi.Input<number>;
    outboundConnector1id?: pulumi.Input<string>;
    outboundConnector2id?: pulumi.Input<string>;
    schemaType?: pulumi.Input<string>;
    userSearchBase?: pulumi.Input<string>;
}

export interface FileStorageMountTargetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FileStorageOutboundConnectorEndpoint {
    hostname: pulumi.Input<string>;
    port: pulumi.Input<string>;
}

export interface FileStorageOutboundConnectorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FileStorageReplicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FileStorageSnapshotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FunctionsApplicationImagePolicyConfig {
    isPolicyEnabled: pulumi.Input<boolean>;
    keyDetails?: pulumi.Input<pulumi.Input<inputs.FunctionsApplicationImagePolicyConfigKeyDetail>[]>;
}

export interface FunctionsApplicationImagePolicyConfigKeyDetail {
    kmsKeyId: pulumi.Input<string>;
}

export interface FunctionsApplicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FunctionsApplicationTraceConfig {
    domainId?: pulumi.Input<string>;
    isEnabled?: pulumi.Input<boolean>;
}

export interface FunctionsFunctionProvisionedConcurrencyConfig {
    count?: pulumi.Input<number>;
    strategy: pulumi.Input<string>;
}

export interface FunctionsFunctionSourceDetails {
    pbfListingId: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface FunctionsFunctionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FunctionsFunctionTraceConfig {
    isEnabled?: pulumi.Input<boolean>;
}

export interface FunctionsInvokeFunctionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentAdminUserItem {
    emailAddress: pulumi.Input<string>;
    firstName: pulumi.Input<string>;
    lastName: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentAdminUserTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentCreateFusionEnvironmentAdminUserDetails {
    emailAddress: pulumi.Input<string>;
    firstName: pulumi.Input<string>;
    lastName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentDataMaskingActivityTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentFamilyFamilyMaintenancePolicy {
    concurrentMaintenance?: pulumi.Input<string>;
    isMonthlyPatchingEnabled?: pulumi.Input<boolean>;
    quarterlyUpgradeBeginTimes?: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentFamilyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentKmsKeyInfo {
    activeKeyId: pulumi.Input<string>;
    activeKeyVersion: pulumi.Input<string>;
    currentKeyLifecycleState: pulumi.Input<string>;
    scheduledKeyId: pulumi.Input<string>;
    scheduledKeyStatus: pulumi.Input<string>;
    scheduledKeyVersion: pulumi.Input<string>;
    scheduledLifecycleState: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentMaintenancePolicy {
    environmentMaintenanceOverride?: pulumi.Input<string>;
    monthlyPatchingOverride?: pulumi.Input<string>;
    quarterlyUpgradeBeginTimes?: pulumi.Input<pulumi.Input<inputs.FusionAppsFusionEnvironmentMaintenancePolicyQuarterlyUpgradeBeginTime>[]>;
}

export interface FusionAppsFusionEnvironmentMaintenancePolicyQuarterlyUpgradeBeginTime {
    beginTimesValue: pulumi.Input<string>;
    overrideType: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentRefresh {
    sourceFusionEnvironmentId: pulumi.Input<string>;
    timeFinished: pulumi.Input<string>;
    timeOfRestorationPoint: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentRefreshActivityRefreshIssueDetailsList {
    refreshIssues: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentRefreshActivityTimeouts {
    create?: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentRule {
    action: pulumi.Input<string>;
    conditions: pulumi.Input<pulumi.Input<inputs.FusionAppsFusionEnvironmentRuleCondition>[]>;
    description?: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentRuleCondition {
    attributeName: pulumi.Input<string>;
    attributeValue: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentServiceAttachmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FusionAppsFusionEnvironmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GenerativeAiDedicatedAiClusterCapacity {
    capacityType: pulumi.Input<string>;
    totalEndpointCapacity: pulumi.Input<number>;
    usedEndpointCapacity: pulumi.Input<number>;
}

export interface GenerativeAiDedicatedAiClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GenerativeAiEndpointContentModerationConfig {
    isEnabled: pulumi.Input<boolean>;
}

export interface GenerativeAiEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GenerativeAiModelFineTuneDetails {
    dedicatedAiClusterId: pulumi.Input<string>;
    trainingConfig?: pulumi.Input<inputs.GenerativeAiModelFineTuneDetailsTrainingConfig>;
    trainingDataset: pulumi.Input<inputs.GenerativeAiModelFineTuneDetailsTrainingDataset>;
}

export interface GenerativeAiModelFineTuneDetailsTrainingConfig {
    earlyStoppingPatience?: pulumi.Input<number>;
    earlyStoppingThreshold?: pulumi.Input<number>;
    learningRate?: pulumi.Input<number>;
    logModelMetricsIntervalInSteps?: pulumi.Input<number>;
    loraAlpha?: pulumi.Input<number>;
    loraDropout?: pulumi.Input<number>;
    loraR?: pulumi.Input<number>;
    numOfLastLayers?: pulumi.Input<number>;
    totalTrainingEpochs?: pulumi.Input<number>;
    trainingBatchSize?: pulumi.Input<number>;
    trainingConfigType: pulumi.Input<string>;
}

export interface GenerativeAiModelFineTuneDetailsTrainingDataset {
    bucket: pulumi.Input<string>;
    datasetType: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    object: pulumi.Input<string>;
}

export interface GenerativeAiModelModelMetric {
    finalAccuracy: pulumi.Input<number>;
    finalLoss: pulumi.Input<number>;
    modelMetricsType: pulumi.Input<string>;
}

export interface GenerativeAiModelTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GenericArtifactsContentArtifactByPathTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GetAdmKnowledgeBasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAdmKnowledgeBasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAdmRemediationRecipesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAdmRemediationRecipesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAdmRemediationRunApplicationDependencyRecommendationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAdmRemediationRunApplicationDependencyRecommendationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAdmRemediationRunStagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAdmRemediationRunStagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAdmRemediationRunsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAdmRemediationRunsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAdmVulnerabilityAuditApplicationDependencyVulnerabilitiesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAdmVulnerabilityAuditApplicationDependencyVulnerabilitiesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAdmVulnerabilityAuditsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAdmVulnerabilityAuditsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAiAnomalyDetectionAiPrivateEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAiAnomalyDetectionAiPrivateEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAiAnomalyDetectionDataAssetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAiAnomalyDetectionDataAssetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAiAnomalyDetectionDetectAnomalyJobsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAiAnomalyDetectionDetectAnomalyJobsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAiAnomalyDetectionModelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAiAnomalyDetectionModelsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAiAnomalyDetectionProjectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAiAnomalyDetectionProjectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAiDocumentModelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAiDocumentModelsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAiDocumentProjectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAiDocumentProjectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAiLanguageEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAiLanguageEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAiLanguageModelEvaluationResultsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAiLanguageModelEvaluationResultsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAiLanguageModelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAiLanguageModelsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAiLanguageProjectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAiLanguageProjectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAiVisionModelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAiVisionModelsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAiVisionProjectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAiVisionProjectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAnalyticsAnalyticsInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAnalyticsAnalyticsInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAnnouncementsServiceAnnouncementSubscriptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAnnouncementsServiceAnnouncementSubscriptionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAnnouncementsServiceServicesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAnnouncementsServiceServicesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApigatewayApisFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApigatewayApisFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApigatewayCertificatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApigatewayCertificatesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApigatewayDeploymentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApigatewayDeploymentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApigatewayGatewaysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApigatewayGatewaysFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApigatewaySubscribersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApigatewaySubscribersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApigatewayUsagePlansFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApigatewayUsagePlansFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApmApmDomainsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmApmDomainsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApmConfigConfigsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmConfigConfigsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApmDataKeysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmDataKeysFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApmSyntheticsDedicatedVantagePointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmSyntheticsDedicatedVantagePointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApmSyntheticsMonitorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmSyntheticsMonitorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApmSyntheticsOnPremiseVantagePointWorkersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmSyntheticsOnPremiseVantagePointWorkersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApmSyntheticsOnPremiseVantagePointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmSyntheticsOnPremiseVantagePointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApmSyntheticsPublicVantagePointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmSyntheticsPublicVantagePointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApmSyntheticsScriptsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmSyntheticsScriptsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApmTracesQueryQuickPicksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetApmTracesQueryQuickPicksFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAppmgmtControlMonitoredInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAppmgmtControlMonitoredInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetArtifactsContainerImageSignaturesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetArtifactsContainerImageSignaturesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetArtifactsContainerImagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetArtifactsContainerImagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetArtifactsContainerRepositoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetArtifactsContainerRepositoriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetArtifactsGenericArtifactsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetArtifactsGenericArtifactsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetArtifactsRepositoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetArtifactsRepositoriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAuditEventsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAuditEventsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAutoscalingAutoScalingConfigurationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAutoscalingAutoScalingConfigurationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBastionBastionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBastionBastionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBastionSessionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBastionSessionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBdsAutoScalingConfigurationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBdsAutoScalingConfigurationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBdsBdsInstanceApiKeysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBdsBdsInstanceApiKeysFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBdsBdsInstanceGetOsPatchFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBdsBdsInstanceGetOsPatchFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBdsBdsInstanceListOsPatchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBdsBdsInstanceListOsPatchesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBdsBdsInstanceMetastoreConfigsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBdsBdsInstanceMetastoreConfigsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBdsBdsInstancePatchHistoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBdsBdsInstancePatchHistoriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBdsBdsInstancePatchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBdsBdsInstancePatchesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBdsBdsInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBdsBdsInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBlockchainBlockchainPlatformPatchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBlockchainBlockchainPlatformPatchesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBlockchainBlockchainPlatformsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBlockchainBlockchainPlatformsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBlockchainOsnsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBlockchainOsnsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBlockchainPeersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBlockchainPeersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBudgetAlertRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBudgetAlertRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBudgetBudgetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBudgetBudgetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCapacityManagementInternalOccAvailabilityCatalogsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCapacityManagementInternalOccAvailabilityCatalogsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCapacityManagementOccAvailabilityCatalogOccAvailabilitiesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCapacityManagementOccAvailabilityCatalogOccAvailabilitiesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCapacityManagementOccAvailabilityCatalogsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCapacityManagementOccAvailabilityCatalogsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCapacityManagementOccCapacityRequestsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCapacityManagementOccCapacityRequestsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCapacityManagementOccCustomerGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCapacityManagementOccCustomerGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCertificatesManagementAssociationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCertificatesManagementAssociationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCertificatesManagementCaBundlesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCertificatesManagementCaBundlesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCertificatesManagementCertificateAuthoritiesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCertificatesManagementCertificateAuthoritiesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCertificatesManagementCertificateAuthorityVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCertificatesManagementCertificateAuthorityVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCertificatesManagementCertificateVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCertificatesManagementCertificateVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCertificatesManagementCertificatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCertificatesManagementCertificatesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudBridgeAgentDependenciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudBridgeAgentDependenciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudBridgeAgentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudBridgeAgentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudBridgeApplianceImagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudBridgeApplianceImagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudBridgeAssetSourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudBridgeAssetSourcesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudBridgeAssetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudBridgeAssetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudBridgeDiscoverySchedulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudBridgeDiscoverySchedulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudBridgeEnvironmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudBridgeEnvironmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudBridgeInventoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudBridgeInventoriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudGuardAdhocQueriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardAdhocQueriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudGuardDataMaskRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardDataMaskRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudGuardDataSourceEventsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardDataSourceEventsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudGuardDataSourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardDataSourcesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudGuardDetectorRecipesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardDetectorRecipesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudGuardManagedListsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardManagedListsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudGuardProblemEntitiesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardProblemEntitiesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudGuardResponderRecipesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardResponderRecipesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudGuardSavedQueriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardSavedQueriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudGuardSecurityPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardSecurityPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudGuardSecurityRecipesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardSecurityRecipesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudGuardSecurityZonesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardSecurityZonesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudGuardTargetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardTargetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudGuardWlpAgentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudGuardWlpAgentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudMigrationsMigrationAssetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudMigrationsMigrationAssetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudMigrationsMigrationPlanAvailableShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudMigrationsMigrationPlanAvailableShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudMigrationsMigrationPlansFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudMigrationsMigrationPlansFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudMigrationsMigrationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudMigrationsMigrationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudMigrationsReplicationSchedulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudMigrationsReplicationSchedulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudMigrationsTargetAssetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCloudMigrationsTargetAssetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetClusterPlacementGroupsClusterPlacementGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetClusterPlacementGroupsClusterPlacementGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetComputeCloudAtCustomerCccInfrastructuresFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetComputeCloudAtCustomerCccInfrastructuresFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetComputeCloudAtCustomerCccUpgradeSchedulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetComputeCloudAtCustomerCccUpgradeSchedulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetComputeinstanceagentInstanceAgentPluginsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetComputeinstanceagentInstanceAgentPluginsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetComputeinstanceagentInstanceAvailablePluginsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetComputeinstanceagentInstanceAvailablePluginsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerInstancesContainerInstanceShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerInstancesContainerInstanceShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerInstancesContainerInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerInstancesContainerInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerengineAddonOptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineAddonOptionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerengineAddonsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineAddonsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerengineClusterWorkloadMappingsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineClusterWorkloadMappingsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerengineClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineClustersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerengineNodePoolsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineNodePoolsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerenginePodShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerenginePodShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerengineVirtualNodePoolsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineVirtualNodePoolsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerengineWorkRequestErrorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineWorkRequestErrorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerengineWorkRequestLogEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineWorkRequestLogEntriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerengineWorkRequestsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetContainerengineWorkRequestsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreAppCatalogListingResourceVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreAppCatalogListingResourceVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreAppCatalogListingsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreAppCatalogListingsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreAppCatalogSubscriptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreAppCatalogSubscriptionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreBlockVolumeReplicasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreBlockVolumeReplicasFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreBootVolumeAttachmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreBootVolumeAttachmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreBootVolumeBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreBootVolumeBackupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreBootVolumeReplicasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreBootVolumeReplicasFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreBootVolumesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreBootVolumesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreByoipAllocatedRangesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreByoipAllocatedRangesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreByoipRangesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreByoipRangesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreCaptureFiltersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreCaptureFiltersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreClusterNetworkInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreClusterNetworkInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreClusterNetworksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreClusterNetworksFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreComputeCapacityReservationInstanceShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeCapacityReservationInstanceShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreComputeCapacityReservationInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeCapacityReservationInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreComputeCapacityReservationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeCapacityReservationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreComputeCapacityTopologiesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeCapacityTopologiesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreComputeCapacityTopologyComputeBareMetalHostsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeCapacityTopologyComputeBareMetalHostsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreComputeCapacityTopologyComputeHpcIslandsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeCapacityTopologyComputeHpcIslandsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreComputeCapacityTopologyComputeNetworkBlocksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeCapacityTopologyComputeNetworkBlocksFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreComputeClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeClustersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreComputeGlobalImageCapabilitySchemasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeGlobalImageCapabilitySchemasFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreComputeGlobalImageCapabilitySchemasVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeGlobalImageCapabilitySchemasVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreComputeImageCapabilitySchemasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreComputeImageCapabilitySchemasFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreConsoleHistoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreConsoleHistoriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreCpeDeviceShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreCpeDeviceShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreCpesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreCpesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreCrossConnectGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreCrossConnectGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreCrossConnectLocationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreCrossConnectLocationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreCrossConnectPortSpeedShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreCrossConnectPortSpeedShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreCrossConnectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreCrossConnectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreDedicatedVmHostInstanceShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDedicatedVmHostInstanceShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreDedicatedVmHostShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDedicatedVmHostShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreDedicatedVmHostsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDedicatedVmHostsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreDedicatedVmHostsInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDedicatedVmHostsInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreDhcpOptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDhcpOptionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreDrgAttachmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDrgAttachmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreDrgRouteDistributionStatementsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDrgRouteDistributionStatementsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreDrgRouteDistributionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDrgRouteDistributionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreDrgRouteTableRouteRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDrgRouteTableRouteRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreDrgRouteTablesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDrgRouteTablesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreDrgsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreDrgsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreFastConnectProviderServicesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreFastConnectProviderServicesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreImageShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreImageShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreImagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreImagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreInstanceConfigurationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInstanceConfigurationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreInstanceConsoleConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInstanceConsoleConnectionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreInstanceDevicesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInstanceDevicesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreInstanceMaintenanceEventsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInstanceMaintenanceEventsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreInstancePoolInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInstancePoolInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreInstancePoolsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInstancePoolsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreInternetGatewaysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreInternetGatewaysFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreIpInventoryVcnOverlapsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreIpInventoryVcnOverlapsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreIpsecConfigFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreIpsecConfigFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreIpsecConnectionTunnelRoutesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreIpsecConnectionTunnelRoutesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreIpsecConnectionTunnelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreIpsecConnectionTunnelsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreIpsecConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreIpsecConnectionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreIpsecStatusFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreIpsecStatusFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreIpv6sFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreIpv6sFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreListingResourceVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreListingResourceVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreLocalPeeringGatewaysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreLocalPeeringGatewaysFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreNatGatewaysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreNatGatewaysFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreNetworkSecurityGroupSecurityRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreNetworkSecurityGroupSecurityRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreNetworkSecurityGroupVnicsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreNetworkSecurityGroupVnicsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreNetworkSecurityGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreNetworkSecurityGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCorePeerRegionForRemotePeeringsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCorePeerRegionForRemotePeeringsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCorePrivateIpsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCorePrivateIpsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCorePublicIpPoolsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCorePublicIpPoolsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCorePublicIpTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface GetCorePublicIpTimeoutsArgs {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GetCorePublicIpsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCorePublicIpsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreRemotePeeringConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreRemotePeeringConnectionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreRouteTablesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreRouteTablesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreSecurityListsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreSecurityListsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreServiceGatewaysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreServiceGatewaysFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreServicesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreServicesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreShapeFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreShapeFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreSubnetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreSubnetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreTunnelSecurityAssociationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreTunnelSecurityAssociationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVcnsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVcnsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVirtualCircuitAssociatedTunnelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVirtualCircuitAssociatedTunnelsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVirtualCircuitBandwidthShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVirtualCircuitBandwidthShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVirtualCircuitPublicPrefixesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVirtualCircuitPublicPrefixesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVirtualCircuitsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVirtualCircuitsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVirtualNetworksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVirtualNetworksFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVlansFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVlansFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVnicAttachmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVnicAttachmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVolumeAttachmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumeAttachmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVolumeBackupPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumeBackupPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVolumeBackupPolicyAssignmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumeBackupPolicyAssignmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVolumeBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumeBackupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVolumeGroupBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumeGroupBackupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVolumeGroupReplicasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumeGroupReplicasFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVolumeGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumeGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVolumesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVolumesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCoreVtapsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCoreVtapsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataLabelingServiceAnnotationFormatsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataLabelingServiceAnnotationFormatsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataLabelingServiceDatasetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataLabelingServiceDatasetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeAlertPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeAlertPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeAlertPolicyRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeAlertPolicyRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeAlertsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeAlertsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeAuditArchiveRetrievalsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeAuditArchiveRetrievalsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeAuditEventsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeAuditEventsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeAuditPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeAuditPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeAuditProfileAvailableAuditVolumesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeAuditProfileAvailableAuditVolumesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeAuditProfileCollectedAuditVolumesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeAuditProfileCollectedAuditVolumesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeAuditProfilesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeAuditProfilesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeAuditTrailsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeAuditTrailsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeDataSafePrivateEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeDataSafePrivateEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeDiscoveryAnalyticsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeDiscoveryAnalyticsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeDiscoveryJobsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeDiscoveryJobsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeDiscoveryJobsResultsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeDiscoveryJobsResultsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeLibraryMaskingFormatsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeLibraryMaskingFormatsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeListUserGrantsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeListUserGrantsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeMaskingAnalyticsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeMaskingAnalyticsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeMaskingPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeMaskingPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeMaskingPoliciesMaskingColumnsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeMaskingPoliciesMaskingColumnsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeMaskingPolicyHealthReportLogsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeMaskingPolicyHealthReportLogsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeMaskingPolicyHealthReportsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeMaskingPolicyHealthReportsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeMaskingPolicyMaskingObjectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeMaskingPolicyMaskingObjectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeMaskingPolicyMaskingSchemasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeMaskingPolicyMaskingSchemasFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeMaskingReportsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeMaskingReportsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeMaskingReportsMaskedColumnsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeMaskingReportsMaskedColumnsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeOnPremConnectorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeOnPremConnectorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeReportDefinitionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeReportDefinitionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeReportsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeReportsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSdmMaskingPolicyDifferenceDifferenceColumnsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSdmMaskingPolicyDifferenceDifferenceColumnsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSdmMaskingPolicyDifferencesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSdmMaskingPolicyDifferencesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSecurityAssessmentFindingAnalyticsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSecurityAssessmentFindingAnalyticsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSecurityAssessmentFindingFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSecurityAssessmentFindingFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSecurityAssessmentFindingsChangeAuditLogsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSecurityAssessmentFindingsChangeAuditLogsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSecurityAssessmentFindingsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSecurityAssessmentFindingsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSecurityAssessmentSecurityFeatureAnalyticsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSecurityAssessmentSecurityFeatureAnalyticsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSecurityAssessmentSecurityFeaturesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSecurityAssessmentSecurityFeaturesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSecurityAssessmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSecurityAssessmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSecurityPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSecurityPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSecurityPolicyDeploymentSecurityPolicyEntryStatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSecurityPolicyDeploymentSecurityPolicyEntryStatesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSecurityPolicyDeploymentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSecurityPolicyDeploymentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSecurityPolicyReportDatabaseTableAccessEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSecurityPolicyReportDatabaseTableAccessEntriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSecurityPolicyReportDatabaseViewAccessEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSecurityPolicyReportDatabaseViewAccessEntriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSecurityPolicyReportRoleGrantPathsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSecurityPolicyReportRoleGrantPathsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSecurityPolicyReportsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSecurityPolicyReportsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSensitiveDataModelSensitiveObjectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSensitiveDataModelSensitiveObjectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSensitiveDataModelSensitiveSchemasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSensitiveDataModelSensitiveSchemasFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSensitiveDataModelSensitiveTypesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSensitiveDataModelSensitiveTypesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSensitiveDataModelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSensitiveDataModelsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSensitiveDataModelsSensitiveColumnsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSensitiveDataModelsSensitiveColumnsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeSensitiveTypesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeSensitiveTypesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeTargetAlertPolicyAssociationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeTargetAlertPolicyAssociationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeTargetDatabasePeerTargetDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeTargetDatabasePeerTargetDatabasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeTargetDatabaseRoleFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeTargetDatabaseRoleFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeTargetDatabaseRolesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeTargetDatabaseRolesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeTargetDatabasesColumnsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeTargetDatabasesColumnsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeTargetDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeTargetDatabasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeTargetDatabasesSchemasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeTargetDatabasesSchemasFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeTargetDatabasesTablesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeTargetDatabasesTablesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeUserAssessmentProfileAnalyticsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeUserAssessmentProfileAnalyticsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeUserAssessmentProfilesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeUserAssessmentProfilesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeUserAssessmentUserAccessAnalyticsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeUserAssessmentUserAccessAnalyticsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeUserAssessmentUserAnalyticsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeUserAssessmentUserAnalyticsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeUserAssessmentUsersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeUserAssessmentUsersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataSafeUserAssessmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataSafeUserAssessmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseApplicationVipsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseApplicationVipsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousContainerDatabaseDataguardAssociationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousContainerDatabaseDataguardAssociationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousContainerDatabaseVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousContainerDatabaseVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousContainerDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousContainerDatabasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousContainerPatchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousContainerPatchesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousDatabaseBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDatabaseBackupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousDatabaseCharacterSetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDatabaseCharacterSetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousDatabaseDataguardAssociationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDatabaseDataguardAssociationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousDatabasePeersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDatabasePeersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousDatabaseRefreshableClonesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDatabaseRefreshableClonesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousDatabaseSoftwareImagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDatabaseSoftwareImagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousDatabasesClonesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDatabasesClonesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDatabasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousDbPreviewVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDbPreviewVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousDbVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousDbVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousExadataInfrastructureShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousExadataInfrastructureShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousExadataInfrastructuresFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousExadataInfrastructuresFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousVirtualMachinesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousVirtualMachinesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousVmClusterAcdResourceUsagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousVmClusterAcdResourceUsagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseAutonomousVmClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseAutonomousVmClustersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseBackupDestinationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseBackupDestinationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseBackupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseCloudAutonomousVmClusterAcdResourceUsagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseCloudAutonomousVmClusterAcdResourceUsagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseCloudAutonomousVmClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseCloudAutonomousVmClustersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseCloudExadataInfrastructuresFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseCloudExadataInfrastructuresFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseCloudVmClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseCloudVmClustersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDataGuardAssociationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDataGuardAssociationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDatabasePdbConversionHistoryEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDatabasePdbConversionHistoryEntriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDatabaseSoftwareImagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDatabaseSoftwareImagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDatabaseUpgradeHistoryEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDatabaseUpgradeHistoryEntriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDatabasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbHomePatchHistoryEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbHomePatchHistoryEntriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbHomePatchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbHomePatchesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbHomesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbHomesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbNodeConsoleConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbNodeConsoleConnectionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbNodeConsoleHistoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbNodeConsoleHistoriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbNodesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbNodesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbServersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbServersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbSystemComputePerformancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbSystemComputePerformancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbSystemPatchHistoryEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbSystemPatchHistoryEntriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbSystemPatchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbSystemPatchesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbSystemShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbSystemShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbSystemStoragePerformancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbSystemStoragePerformancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbSystemsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbSystemsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbSystemsUpgradeHistoryEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbSystemsUpgradeHistoryEntriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseDbVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseDbVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseExadataInfrastructuresFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseExadataInfrastructuresFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseExadbVmClusterUpdateHistoryEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseExadbVmClusterUpdateHistoryEntriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseExadbVmClusterUpdatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseExadbVmClusterUpdatesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseExadbVmClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseExadbVmClustersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseExascaleDbStorageVaultsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseExascaleDbStorageVaultsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseExternalContainerDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseExternalContainerDatabasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseExternalDatabaseConnectorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseExternalDatabaseConnectorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseExternalNonContainerDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseExternalNonContainerDatabasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseExternalPluggableDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseExternalPluggableDatabasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseFlexComponentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseFlexComponentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseGiVersionMinorVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseGiVersionMinorVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseGiVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseGiVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseKeyStoresFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseKeyStoresFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseMaintenanceRunHistoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseMaintenanceRunHistoriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseMaintenanceRunsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseMaintenanceRunsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementDbManagementPrivateEndpointAssociatedDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementDbManagementPrivateEndpointAssociatedDatabasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementDbManagementPrivateEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementDbManagementPrivateEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalAsmDiskGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalAsmDiskGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalAsmInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalAsmInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalAsmUsersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalAsmUsersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalAsmsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalAsmsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalClusterInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalClusterInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalClustersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalDatabasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalDbHomesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalDbHomesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalDbNodesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalDbNodesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalDbSystemConnectorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalDbSystemConnectorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalDbSystemDiscoveriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalDbSystemDiscoveriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalDbSystemsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalDbSystemsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalExadataInfrastructuresFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalExadataInfrastructuresFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalExadataStorageConnectorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalExadataStorageConnectorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalExadataStorageServersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalExadataStorageServersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalListenerServicesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalListenerServicesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementExternalListenersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementExternalListenersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementJobExecutionsStatusesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementJobExecutionsStatusesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseAddmTasksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseAddmTasksFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseAlertLogCountsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseAlertLogCountsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseAttentionLogCountsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseAttentionLogCountsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseCursorCacheStatementsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseCursorCacheStatementsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseOptimizerStatisticsAdvisorExecutionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseOptimizerStatisticsAdvisorExecutionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseOptimizerStatisticsCollectionAggregationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseOptimizerStatisticsCollectionAggregationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseOptimizerStatisticsCollectionOperationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseOptimizerStatisticsCollectionOperationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabasePreferredCredentialsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabasePreferredCredentialsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseSqlPlanBaselineJobsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseSqlPlanBaselineJobsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseSqlPlanBaselinesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseSqlPlanBaselinesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFindingsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksFindingsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksRecommendationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseSqlTuningAdvisorTasksRecommendationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseSqlTuningSetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseSqlTuningSetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseTableStatisticsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseTableStatisticsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseUserConsumerGroupPrivilegesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseUserConsumerGroupPrivilegesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseUserDataAccessContainersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseUserDataAccessContainersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseUserObjectPrivilegesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseUserObjectPrivilegesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseUserProxiedForUsersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseUserProxiedForUsersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseUserRolesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseUserRolesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabaseUsersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabaseUsersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabasesAsmPropertiesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabasesAsmPropertiesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabasesDatabaseParametersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabasesDatabaseParametersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabasesUserProxyUsersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabasesUserProxyUsersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedDatabasesUserSystemPrivilegesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedDatabasesUserSystemPrivilegesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedMySqlDatabaseConfigurationDataFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedMySqlDatabaseConfigurationDataFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedMySqlDatabaseSqlDataFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedMySqlDatabaseSqlDataFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementManagedMySqlDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementManagedMySqlDatabasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseManagementNamedCredentialsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseManagementNamedCredentialsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseMigrationConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseMigrationConnectionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseMigrationJobsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseMigrationJobsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseMigrationMigrationObjectTypesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseMigrationMigrationObjectTypesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseOneoffPatchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseOneoffPatchesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabasePluggableDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabasePluggableDatabasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseSystemVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseSystemVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseToolsDatabaseToolsConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseToolsDatabaseToolsConnectionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseToolsDatabaseToolsEndpointServicesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseToolsDatabaseToolsEndpointServicesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseToolsDatabaseToolsPrivateEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseToolsDatabaseToolsPrivateEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseVmClusterNetworksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseVmClusterNetworksFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseVmClusterPatchHistoryEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseVmClusterPatchHistoryEntriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseVmClusterPatchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseVmClusterPatchesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseVmClusterRecommendedNetworkNetwork {
    cidr: string;
    domain: string;
    gateway: string;
    netmask: string;
    networkType: string;
    prefix: string;
    vlanId: string;
}

export interface GetDatabaseVmClusterRecommendedNetworkNetworkArgs {
    cidr: pulumi.Input<string>;
    domain: pulumi.Input<string>;
    gateway: pulumi.Input<string>;
    netmask: pulumi.Input<string>;
    networkType: pulumi.Input<string>;
    prefix: pulumi.Input<string>;
    vlanId: pulumi.Input<string>;
}

export interface GetDatabaseVmClusterUpdateHistoryEntriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseVmClusterUpdateHistoryEntriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseVmClusterUpdatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseVmClusterUpdatesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseVmClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatabaseVmClustersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatacatalogCatalogPrivateEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatacatalogCatalogPrivateEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatacatalogCatalogTypesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatacatalogCatalogTypesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatacatalogCatalogsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatacatalogCatalogsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatacatalogConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatacatalogConnectionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatacatalogDataAssetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatacatalogDataAssetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatacatalogMetastoresFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatacatalogMetastoresFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataflowApplicationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataflowApplicationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataflowInvokeRunsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataflowInvokeRunsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataflowPoolsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataflowPoolsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataflowPrivateEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataflowPrivateEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataflowRunLogsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataflowRunLogsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataflowRunStatementsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataflowRunStatementsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataflowSqlEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataflowSqlEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataintegrationWorkspaceApplicationPatchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataintegrationWorkspaceApplicationPatchesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataintegrationWorkspaceApplicationSchedulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataintegrationWorkspaceApplicationSchedulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataintegrationWorkspaceApplicationTaskSchedulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataintegrationWorkspaceApplicationTaskSchedulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataintegrationWorkspaceApplicationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataintegrationWorkspaceApplicationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataintegrationWorkspaceExportRequestsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataintegrationWorkspaceExportRequestsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataintegrationWorkspaceFoldersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataintegrationWorkspaceFoldersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataintegrationWorkspaceImportRequestsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataintegrationWorkspaceImportRequestsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataintegrationWorkspaceProjectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataintegrationWorkspaceProjectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataintegrationWorkspaceTasksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataintegrationWorkspaceTasksFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDataintegrationWorkspacesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDataintegrationWorkspacesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatascienceFastLaunchJobConfigsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceFastLaunchJobConfigsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatascienceJobRunsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceJobRunsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatascienceJobShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceJobShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatascienceJobsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceJobsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatascienceModelDeploymentShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceModelDeploymentShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatascienceModelDeploymentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceModelDeploymentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatascienceModelVersionSetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceModelVersionSetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatascienceModelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceModelsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatascienceNotebookSessionShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceNotebookSessionShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatascienceNotebookSessionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceNotebookSessionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatasciencePipelineRunsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatasciencePipelineRunsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatasciencePipelinesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatasciencePipelinesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatasciencePrivateEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatasciencePrivateEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatascienceProjectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDatascienceProjectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDelegateAccessControlDelegatedResourceAccessRequestHistoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDelegateAccessControlDelegatedResourceAccessRequestHistoriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDelegateAccessControlDelegatedResourceAccessRequestsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDelegateAccessControlDelegatedResourceAccessRequestsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDelegateAccessControlDelegationControlResourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDelegateAccessControlDelegationControlResourcesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDelegateAccessControlDelegationControlsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDelegateAccessControlDelegationControlsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDelegateAccessControlDelegationSubscriptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDelegateAccessControlDelegationSubscriptionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDelegateAccessControlServiceProviderActionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDelegateAccessControlServiceProviderActionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDelegateAccessControlServiceProvidersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDelegateAccessControlServiceProvidersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDemandSignalOccDemandSignalsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDemandSignalOccDemandSignalsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDesktopsDesktopPoolDesktopsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDesktopsDesktopPoolDesktopsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDesktopsDesktopPoolVolumesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDesktopsDesktopPoolVolumesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDesktopsDesktopPoolsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDesktopsDesktopPoolsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDesktopsDesktopsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDesktopsDesktopsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsBuildPipelineStagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsBuildPipelineStagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsBuildPipelinesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsBuildPipelinesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsBuildRunsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsBuildRunsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsConnectionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsDeployArtifactsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsDeployArtifactsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsDeployEnvironmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsDeployEnvironmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsDeployPipelinesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsDeployPipelinesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsDeployStagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsDeployStagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsDeploymentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsDeploymentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsProjectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsProjectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsRepositoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsRepositoriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsRepositoryAuthorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsRepositoryAuthorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsRepositoryCommitsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsRepositoryCommitsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsRepositoryDiffsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsRepositoryDiffsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsRepositoryMirrorRecordsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsRepositoryMirrorRecordsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsRepositoryPathsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsRepositoryPathsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsRepositoryProtectedBranchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsRepositoryProtectedBranchesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsRepositoryRefsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsRepositoryRefsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDevopsTriggersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDevopsTriggersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDisasterRecoveryDrPlanExecutionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDisasterRecoveryDrPlanExecutionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDisasterRecoveryDrPlansFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDisasterRecoveryDrPlansFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDisasterRecoveryDrProtectionGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDisasterRecoveryDrProtectionGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDnsRecordsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsRecordsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDnsResolverEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsResolverEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDnsResolversFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsResolversFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDnsRrsetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsRrsetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDnsSteeringPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsSteeringPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDnsSteeringPolicyAttachmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsSteeringPolicyAttachmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDnsTsigKeysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsTsigKeysFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDnsViewsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsViewsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDnsZonesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetDnsZonesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetEmailDkimsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetEmailDkimsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetEmailEmailDomainsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetEmailEmailDomainsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetEmailEmailReturnPathsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetEmailEmailReturnPathsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetEmailSendersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetEmailSendersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetEmailSuppressionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetEmailSuppressionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetEventsRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetEventsRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFileStorageExportSetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFileStorageExportSetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFileStorageExportsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFileStorageExportsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFileStorageFileSystemsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFileStorageFileSystemsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFileStorageFilesystemSnapshotPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFileStorageFilesystemSnapshotPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFileStorageMountTargetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFileStorageMountTargetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFileStorageOutboundConnectorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFileStorageOutboundConnectorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFileStorageReplicationTargetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFileStorageReplicationTargetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFileStorageReplicationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFileStorageReplicationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFileStorageSnapshotsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFileStorageSnapshotsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFunctionsApplicationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFunctionsApplicationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFunctionsFunctionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFunctionsFunctionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFunctionsPbfListingTriggersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFunctionsPbfListingTriggersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFunctionsPbfListingVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFunctionsPbfListingVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFunctionsPbfListingsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFunctionsPbfListingsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFusionAppsFusionEnvironmentAdminUsersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFusionAppsFusionEnvironmentAdminUsersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFusionAppsFusionEnvironmentDataMaskingActivitiesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFusionAppsFusionEnvironmentDataMaskingActivitiesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFusionAppsFusionEnvironmentFamiliesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFusionAppsFusionEnvironmentFamiliesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFusionAppsFusionEnvironmentRefreshActivitiesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFusionAppsFusionEnvironmentRefreshActivitiesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFusionAppsFusionEnvironmentScheduledActivitiesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFusionAppsFusionEnvironmentScheduledActivitiesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFusionAppsFusionEnvironmentServiceAttachmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFusionAppsFusionEnvironmentServiceAttachmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFusionAppsFusionEnvironmentTimeAvailableForRefreshsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFusionAppsFusionEnvironmentTimeAvailableForRefreshsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFusionAppsFusionEnvironmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetFusionAppsFusionEnvironmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGenerativeAiDedicatedAiClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGenerativeAiDedicatedAiClustersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGenerativeAiEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGenerativeAiEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGenerativeAiModelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGenerativeAiModelsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGoldenGateConnectionAssignmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGoldenGateConnectionAssignmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGoldenGateConnectionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGoldenGateConnectionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGoldenGateDatabaseRegistrationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGoldenGateDatabaseRegistrationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGoldenGateDeploymentBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGoldenGateDeploymentBackupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGoldenGateDeploymentCertificatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGoldenGateDeploymentCertificatesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGoldenGateDeploymentTypesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGoldenGateDeploymentTypesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGoldenGateDeploymentUpgradesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGoldenGateDeploymentUpgradesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGoldenGateDeploymentVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGoldenGateDeploymentVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGoldenGateDeploymentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGoldenGateDeploymentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGoldenGateMessagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGoldenGateMessagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGoldenGateTrailFilesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGoldenGateTrailFilesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetGoldenGateTrailSequencesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetGoldenGateTrailSequencesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetHealthChecksHttpMonitorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetHealthChecksHttpMonitorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetHealthChecksHttpProbeResultsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetHealthChecksHttpProbeResultsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetHealthChecksPingMonitorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetHealthChecksPingMonitorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetHealthChecksPingProbeResultsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetHealthChecksPingProbeResultsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetHealthChecksVantagePointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetHealthChecksVantagePointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityAllowedDomainLicenseTypesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityAllowedDomainLicenseTypesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityApiKeysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityApiKeysFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityAuthTokensFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityAuthTokensFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityAvailabilityDomainsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityAvailabilityDomainsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityCompartmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityCompartmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityCostTrackingTagsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityCostTrackingTagsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityCustomerSecretKeysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityCustomerSecretKeysFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityDbCredentialsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityDbCredentialsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityDomainsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityDomainsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityDynamicGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityDynamicGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityFaultDomainsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityFaultDomainsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityIamWorkRequestErrorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityIamWorkRequestErrorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityIamWorkRequestLogsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityIamWorkRequestLogsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityIamWorkRequestsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityIamWorkRequestsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityIdentityProviderGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityIdentityProviderGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityIdentityProvidersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityIdentityProvidersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityIdpGroupMappingsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityIdpGroupMappingsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityNetworkSourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityNetworkSourcesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityRegionSubscriptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityRegionSubscriptionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityRegionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityRegionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentitySmtpCredentialsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentitySmtpCredentialsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityTagDefaultsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityTagDefaultsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityTagNamespacesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityTagNamespacesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityTagStandardTagNamespaceTemplatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityTagStandardTagNamespaceTemplatesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityTagsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityTagsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityUserGroupMembershipsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityUserGroupMembershipsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIdentityUsersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIdentityUsersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIntegrationIntegrationInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetIntegrationIntegrationInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsAgentInstallersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsAgentInstallersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsAnnouncementsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsAnnouncementsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsFleetBlocklistsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsFleetBlocklistsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsFleetCryptoAnalysisResultsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsFleetCryptoAnalysisResultsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsFleetDiagnosesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsFleetDiagnosesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsFleetDrsFilesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsFleetDrsFilesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsFleetInstallationSitesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsFleetInstallationSitesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsFleetJavaMigrationAnalysisResultsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsFleetJavaMigrationAnalysisResultsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsFleetPerformanceTuningAnalysisResultsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsFleetPerformanceTuningAnalysisResultsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsFleetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsFleetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsJavaDownloadsJavaDownloadRecordsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsJavaDownloadsJavaDownloadRecordsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsJavaDownloadsJavaDownloadReportsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsJavaDownloadsJavaDownloadReportsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsJavaDownloadsJavaDownloadTokensFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsJavaDownloadsJavaDownloadTokensFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsJavaDownloadsJavaLicenseAcceptanceRecordsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsJavaDownloadsJavaLicenseAcceptanceRecordsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsJavaDownloadsJavaLicensesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsJavaDownloadsJavaLicensesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsJavaFamiliesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsJavaFamiliesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsJavaReleasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsJavaReleasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJmsJmsPluginsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetJmsJmsPluginsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKmsEkmsPrivateEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetKmsEkmsPrivateEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKmsKeyVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetKmsKeyVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKmsKeysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetKmsKeysFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKmsVaultReplicasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetKmsVaultReplicasFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKmsVaultsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetKmsVaultsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLicenseManagerLicenseRecordsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLicenseManagerLicenseRecordsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLicenseManagerProductLicensesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLicenseManagerProductLicensesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLimitsLimitDefinitionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLimitsLimitDefinitionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLimitsLimitValuesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLimitsLimitValuesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLimitsQuotasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLimitsQuotasFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLimitsServicesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLimitsServicesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerBackendSetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerBackendSetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerBackendsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerBackendsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerBackendsetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerBackendsetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerCertificatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerCertificatesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerHostnamesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerHostnamesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerListenerRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerListenerRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerLoadBalancerRoutingPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerLoadBalancerRoutingPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerLoadBalancersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerLoadBalancersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerPathRouteSetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerPathRouteSetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerProtocolsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerProtocolsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerRuleSetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerRuleSetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerSslCipherSuitesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancerSslCipherSuitesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoadBalancersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLogAnalyticsLogAnalyticsEntitiesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLogAnalyticsLogAnalyticsEntitiesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLogAnalyticsLogAnalyticsLogGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLogAnalyticsLogAnalyticsLogGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLogAnalyticsLogAnalyticsObjectCollectionRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLogAnalyticsLogAnalyticsObjectCollectionRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLogAnalyticsNamespaceEffectivePropertiesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLogAnalyticsNamespaceEffectivePropertiesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLogAnalyticsNamespaceIngestTimeRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLogAnalyticsNamespaceIngestTimeRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLogAnalyticsNamespacePropertiesMetadataFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLogAnalyticsNamespacePropertiesMetadataFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLogAnalyticsNamespaceRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLogAnalyticsNamespaceRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLogAnalyticsNamespaceScheduledTasksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLogAnalyticsNamespaceScheduledTasksFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLogAnalyticsNamespaceStorageOverlappingRecallsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLogAnalyticsNamespaceStorageOverlappingRecallsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLogAnalyticsNamespacesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLogAnalyticsNamespacesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoggingLogGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoggingLogGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoggingLogSavedSearchesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoggingLogSavedSearchesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoggingLogsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoggingLogsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoggingUnifiedAgentConfigurationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLoggingUnifiedAgentConfigurationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetManagementAgentManagementAgentAvailableHistoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetManagementAgentManagementAgentAvailableHistoriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetManagementAgentManagementAgentDataSourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetManagementAgentManagementAgentDataSourcesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetManagementAgentManagementAgentImagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetManagementAgentManagementAgentImagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetManagementAgentManagementAgentInstallKeysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetManagementAgentManagementAgentInstallKeysFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetManagementAgentManagementAgentPluginsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetManagementAgentManagementAgentPluginsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetManagementAgentManagementAgentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetManagementAgentManagementAgentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMarketplaceAcceptedAgreementsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplaceAcceptedAgreementsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMarketplaceCategoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplaceCategoriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMarketplaceListingPackageAgreementsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplaceListingPackageAgreementsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMarketplaceListingPackagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplaceListingPackagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMarketplaceListingTaxesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplaceListingTaxesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMarketplaceListingsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplaceListingsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMarketplacePublicationPackagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplacePublicationPackagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMarketplacePublicationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplacePublicationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMarketplacePublishersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMarketplacePublishersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMediaServicesMediaAssetDistributionChannelAttachmentLock {
    compartmentId?: string;
    message?: string;
    relatedResourceId?: string;
    timeCreated?: string;
    type?: string;
}

export interface GetMediaServicesMediaAssetDistributionChannelAttachmentLockArgs {
    compartmentId?: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    relatedResourceId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface GetMediaServicesMediaAssetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMediaServicesMediaAssetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMediaServicesMediaWorkflowConfigurationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMediaServicesMediaWorkflowConfigurationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMediaServicesMediaWorkflowJobFactsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMediaServicesMediaWorkflowJobFactsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMediaServicesMediaWorkflowJobsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMediaServicesMediaWorkflowJobsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMediaServicesMediaWorkflowsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMediaServicesMediaWorkflowsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMediaServicesStreamCdnConfigsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMediaServicesStreamCdnConfigsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMediaServicesStreamDistributionChannelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMediaServicesStreamDistributionChannelsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMediaServicesStreamPackagingConfigsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMediaServicesStreamPackagingConfigsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMeteringComputationCustomTablesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMeteringComputationCustomTablesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMeteringComputationQueriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMeteringComputationQueriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMeteringComputationScheduledRunsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMeteringComputationScheduledRunsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMeteringComputationSchedulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMeteringComputationSchedulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMeteringComputationUsageCarbonEmissionsQueriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMeteringComputationUsageCarbonEmissionsQueriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMeteringComputationUsageStatementEmailRecipientsGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMeteringComputationUsageStatementEmailRecipientsGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMonitoringAlarmStatusesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMonitoringAlarmStatusesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMonitoringAlarmSuppressionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMonitoringAlarmSuppressionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMonitoringAlarmsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMonitoringAlarmsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMonitoringMetricDataFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMonitoringMetricDataFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMonitoringMetricsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMonitoringMetricsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMysqlChannelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlChannelsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMysqlMysqlBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlMysqlBackupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMysqlMysqlConfigurationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlMysqlConfigurationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMysqlMysqlDbSystemsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlMysqlDbSystemsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMysqlMysqlVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlMysqlVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMysqlReplicasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlReplicasFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMysqlShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkFirewallNetworkFirewallPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkFirewallNetworkFirewallPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkFirewallNetworkFirewallPolicyAddressListsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkFirewallNetworkFirewallPolicyAddressListsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkFirewallNetworkFirewallPolicyApplicationGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkFirewallNetworkFirewallPolicyApplicationGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkFirewallNetworkFirewallPolicyApplicationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkFirewallNetworkFirewallPolicyApplicationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkFirewallNetworkFirewallPolicyDecryptionProfilesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkFirewallNetworkFirewallPolicyDecryptionProfilesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkFirewallNetworkFirewallPolicyDecryptionRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkFirewallNetworkFirewallPolicyDecryptionRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkFirewallNetworkFirewallPolicySecurityRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkFirewallNetworkFirewallPolicySecurityRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkFirewallNetworkFirewallPolicyServiceListsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkFirewallNetworkFirewallPolicyServiceListsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkFirewallNetworkFirewallPolicyServicesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkFirewallNetworkFirewallPolicyServicesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkFirewallNetworkFirewallPolicyTunnelInspectionRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkFirewallNetworkFirewallPolicyTunnelInspectionRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkFirewallNetworkFirewallPolicyUrlListsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkFirewallNetworkFirewallPolicyUrlListsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkFirewallNetworkFirewallsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkFirewallNetworkFirewallsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkLoadBalancerBackendSetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkLoadBalancerBackendSetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkLoadBalancerBackendsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkLoadBalancerBackendsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkLoadBalancerListenersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkLoadBalancerListenersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersProtocolsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkLoadBalancerNetworkLoadBalancersProtocolsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNosqlIndexesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNosqlIndexesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNosqlTablesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNosqlTablesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetObjectstorageBucketSummariesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetObjectstorageBucketSummariesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetObjectstorageObjectVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetObjectstorageObjectVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetObjectstorageObjectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetObjectstorageObjectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetObjectstoragePreauthrequestsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetObjectstoragePreauthrequestsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetObjectstorageReplicationPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetObjectstorageReplicationPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetObjectstorageReplicationSourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetObjectstorageReplicationSourcesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOceOceInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOceOceInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOcvpClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOcvpClustersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOcvpEsxiHostsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOcvpEsxiHostsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOcvpSddcsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOcvpSddcsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOcvpSupportedCommitmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOcvpSupportedCommitmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOcvpSupportedHostShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOcvpSupportedHostShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOcvpSupportedSkusFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOcvpSupportedSkusFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOcvpSupportedVmwareSoftwareVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOcvpSupportedVmwareSoftwareVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOdaOdaInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOdaOdaInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOdaOdaPrivateEndpointAttachmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOdaOdaPrivateEndpointAttachmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOdaOdaPrivateEndpointScanProxiesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOdaOdaPrivateEndpointScanProxiesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOdaOdaPrivateEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOdaOdaPrivateEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOnesubscriptionAggregatedComputedUsagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOnesubscriptionAggregatedComputedUsagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOnesubscriptionBillingSchedulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOnesubscriptionBillingSchedulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOnesubscriptionCommitmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOnesubscriptionCommitmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOnesubscriptionComputedUsagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOnesubscriptionComputedUsagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOnesubscriptionInvoiceLineComputedUsagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOnesubscriptionInvoiceLineComputedUsagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOnesubscriptionInvoicesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOnesubscriptionInvoicesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOnesubscriptionOrganizationSubscriptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOnesubscriptionOrganizationSubscriptionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOnesubscriptionRatecardsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOnesubscriptionRatecardsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOnesubscriptionSubscribedServicesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOnesubscriptionSubscribedServicesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOnesubscriptionSubscriptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOnesubscriptionSubscriptionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOnsNotificationTopicsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOnsNotificationTopicsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOnsSubscriptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOnsSubscriptionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpaOpaInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpaOpaInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpensearchOpensearchClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpensearchOpensearchClustersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpensearchOpensearchVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpensearchOpensearchVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOperatorAccessControlAccessRequestsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOperatorAccessControlAccessRequestsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOperatorAccessControlOperatorActionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOperatorAccessControlOperatorActionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOperatorAccessControlOperatorControlAssignmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOperatorAccessControlOperatorControlAssignmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOperatorAccessControlOperatorControlsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOperatorAccessControlOperatorControlsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpsiAwrHubAwrSnapshotsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiAwrHubAwrSnapshotsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpsiAwrHubSourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiAwrHubSourcesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpsiAwrHubsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiAwrHubsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpsiDatabaseInsightsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiDatabaseInsightsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpsiEnterpriseManagerBridgesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiEnterpriseManagerBridgesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpsiExadataInsightsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiExadataInsightsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpsiHostInsightsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiHostInsightsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpsiNewsReportsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiNewsReportsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpsiOperationsInsightsPrivateEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiOperationsInsightsPrivateEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpsiOperationsInsightsWarehouseUsersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiOperationsInsightsWarehouseUsersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpsiOperationsInsightsWarehousesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiOperationsInsightsWarehousesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOpsiOpsiConfigurationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOpsiOpsiConfigurationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOptimizerCategoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOptimizerCategoriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOptimizerEnrollmentStatusesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOptimizerEnrollmentStatusesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOptimizerHistoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOptimizerHistoriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOptimizerProfileLevelsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOptimizerProfileLevelsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOptimizerProfilesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOptimizerProfilesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOptimizerRecommendationStrategiesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOptimizerRecommendationStrategiesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOptimizerRecommendationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOptimizerRecommendationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOptimizerResourceActionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOptimizerResourceActionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubEntitlementsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubEntitlementsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubErrataFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubErrataFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubEventsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubEventsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubLifecycleEnvironmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubLifecycleEnvironmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubLifecycleStagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubLifecycleStagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstanceAvailablePackagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstanceAvailablePackagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstanceAvailableSoftwareSourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstanceAvailableSoftwareSourcesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstanceAvailableWindowsUpdatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstanceAvailableWindowsUpdatesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstanceErrataFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstanceErrataFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstanceGroupAvailableModulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstanceGroupAvailableModulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstanceGroupAvailablePackagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstanceGroupAvailablePackagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstanceGroupAvailableSoftwareSourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstanceGroupAvailableSoftwareSourcesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstanceGroupInstalledPackagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstanceGroupInstalledPackagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstanceGroupModulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstanceGroupModulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstanceGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstanceGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstanceInstalledPackagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstanceInstalledPackagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstanceInstalledWindowsUpdatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstanceInstalledWindowsUpdatesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstanceModulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstanceModulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstanceUpdatablePackagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstanceUpdatablePackagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagedInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagedInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagementStationMirrorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagementStationMirrorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubManagementStationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubManagementStationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubProfilesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubProfilesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubScheduledJobsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubScheduledJobsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubSoftwarePackageSoftwareSourceFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubSoftwarePackageSoftwareSourceFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubSoftwarePackagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubSoftwarePackagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubSoftwareSourceModuleStreamProfilesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubSoftwareSourceModuleStreamProfilesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubSoftwareSourceModuleStreamsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubSoftwareSourceModuleStreamsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubSoftwareSourcePackageGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubSoftwareSourcePackageGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubSoftwareSourceSoftwarePackagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubSoftwareSourceSoftwarePackagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubSoftwareSourceVendorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubSoftwareSourceVendorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubSoftwareSourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubSoftwareSourcesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsManagementHubWindowsUpdatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsManagementHubWindowsUpdatesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsmanagementManagedInstanceGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsmanagementManagedInstanceGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsmanagementManagedInstanceModuleStreamsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsmanagementManagedInstanceModuleStreamsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsmanagementManagedInstanceStreamProfilesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsmanagementManagedInstanceStreamProfilesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsmanagementManagedInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsmanagementManagedInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsmanagementSoftwareSourceStreamProfilesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsmanagementSoftwareSourceStreamProfilesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsmanagementSoftwareSourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsmanagementSoftwareSourcesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOspGatewayInvoicesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOspGatewayInvoicesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOspGatewayInvoicesInvoiceLinesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOspGatewayInvoicesInvoiceLinesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOspGatewaySubscriptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOspGatewaySubscriptionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsubBillingScheduleBillingSchedulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsubBillingScheduleBillingSchedulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsubOrganizationSubscriptionOrganizationSubscriptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsubOrganizationSubscriptionOrganizationSubscriptionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsubSubscriptionCommitmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsubSubscriptionCommitmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsubSubscriptionRatecardsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsubSubscriptionRatecardsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsubSubscriptionSubscriptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsubSubscriptionSubscriptionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsubUsageComputedUsageAggregatedsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsubUsageComputedUsageAggregatedsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsubUsageComputedUsagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetOsubUsageComputedUsagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPsqlBackupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetPsqlBackupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPsqlConfigurationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetPsqlConfigurationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPsqlDbSystemsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetPsqlDbSystemsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPsqlDefaultConfigurationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetPsqlDefaultConfigurationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPsqlShapesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetPsqlShapesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetQueueQueuesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetQueueQueuesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRecoveryProtectedDatabasesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetRecoveryProtectedDatabasesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRecoveryProtectionPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetRecoveryProtectionPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRecoveryRecoveryServiceSubnetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetRecoveryRecoveryServiceSubnetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRedisRedisClusterNodesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetRedisRedisClusterNodesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRedisRedisClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetRedisRedisClustersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetResourceSchedulerSchedulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetResourceSchedulerSchedulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetResourcemanagerPrivateEndpointsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetResourcemanagerPrivateEndpointsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetResourcemanagerStacksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetResourcemanagerStacksFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSchConnectorPluginsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSchConnectorPluginsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSchServiceConnectorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSchServiceConnectorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSecretsSecretbundleVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSecretsSecretbundleVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServiceCatalogPrivateApplicationPackagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceCatalogPrivateApplicationPackagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServiceCatalogPrivateApplicationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceCatalogPrivateApplicationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServiceCatalogServiceCatalogAssociationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceCatalogServiceCatalogAssociationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServiceCatalogServiceCatalogsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceCatalogServiceCatalogsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServiceManagerProxyServiceEnvironmentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceManagerProxyServiceEnvironmentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServiceMeshAccessPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceMeshAccessPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServiceMeshIngressGatewayRouteTablesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceMeshIngressGatewayRouteTablesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServiceMeshIngressGatewaysFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceMeshIngressGatewaysFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServiceMeshMeshesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceMeshMeshesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServiceMeshVirtualDeploymentsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceMeshVirtualDeploymentsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServiceMeshVirtualServiceRouteTablesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceMeshVirtualServiceRouteTablesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServiceMeshVirtualServicesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServiceMeshVirtualServicesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetStackMonitoringBaselineableMetricsEvaluateItem {
    dataPoints?: inputs.GetStackMonitoringBaselineableMetricsEvaluateItemDataPoint[];
    dimensions?: {[key: string]: string};
    evaluationDataPoints: inputs.GetStackMonitoringBaselineableMetricsEvaluateItemEvaluationDataPoint[];
    trainingDataPoints: inputs.GetStackMonitoringBaselineableMetricsEvaluateItemTrainingDataPoint[];
}

export interface GetStackMonitoringBaselineableMetricsEvaluateItemArgs {
    dataPoints?: pulumi.Input<pulumi.Input<inputs.GetStackMonitoringBaselineableMetricsEvaluateItemDataPointArgs>[]>;
    dimensions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    evaluationDataPoints: pulumi.Input<pulumi.Input<inputs.GetStackMonitoringBaselineableMetricsEvaluateItemEvaluationDataPointArgs>[]>;
    trainingDataPoints: pulumi.Input<pulumi.Input<inputs.GetStackMonitoringBaselineableMetricsEvaluateItemTrainingDataPointArgs>[]>;
}

export interface GetStackMonitoringBaselineableMetricsEvaluateItemDataPoint {
    anomaly: number;
    high: number;
    low: number;
    timestamp: string;
    value: number;
}

export interface GetStackMonitoringBaselineableMetricsEvaluateItemDataPointArgs {
    anomaly: pulumi.Input<number>;
    high: pulumi.Input<number>;
    low: pulumi.Input<number>;
    timestamp: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface GetStackMonitoringBaselineableMetricsEvaluateItemEvaluationDataPoint {
    timestamp: string;
    value: number;
}

export interface GetStackMonitoringBaselineableMetricsEvaluateItemEvaluationDataPointArgs {
    timestamp: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface GetStackMonitoringBaselineableMetricsEvaluateItemTrainingDataPoint {
    timestamp: string;
    value: number;
}

export interface GetStackMonitoringBaselineableMetricsEvaluateItemTrainingDataPointArgs {
    timestamp: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface GetStackMonitoringBaselineableMetricsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStackMonitoringBaselineableMetricsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetStackMonitoringConfigsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStackMonitoringConfigsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetStackMonitoringDiscoveryJobLogsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStackMonitoringDiscoveryJobLogsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetStackMonitoringDiscoveryJobsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStackMonitoringDiscoveryJobsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetStackMonitoringMetricExtensionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStackMonitoringMetricExtensionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetStackMonitoringMonitoredResourceTasksFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStackMonitoringMonitoredResourceTasksFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetStackMonitoringMonitoredResourceTypesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStackMonitoringMonitoredResourceTypesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetStackMonitoringMonitoredResourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStackMonitoringMonitoredResourcesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetStackMonitoringProcessSetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStackMonitoringProcessSetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetStreamingConnectHarnessesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStreamingConnectHarnessesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetStreamingStreamPoolsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStreamingStreamPoolsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetStreamingStreamsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetStreamingStreamsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetUsageProxyResourceQuotasFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetUsageProxyResourceQuotasFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetUsageProxyResourcesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetUsageProxyResourcesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetUsageProxySubscriptionProductsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetUsageProxySubscriptionProductsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetUsageProxySubscriptionRedeemableUsersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetUsageProxySubscriptionRedeemableUsersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetUsageProxySubscriptionRedemptionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetUsageProxySubscriptionRedemptionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetUsageProxySubscriptionRewardsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetUsageProxySubscriptionRewardsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetUsageProxyUsagelimitsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetUsageProxyUsagelimitsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVaultSecretsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVaultSecretsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVbsInstVbsInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVbsInstVbsInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVisualBuilderVbInstancesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVisualBuilderVbInstancesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVnMonitoringPathAnalyzerTestsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVnMonitoringPathAnalyzerTestsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVulnerabilityScanningContainerScanRecipesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVulnerabilityScanningContainerScanRecipesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVulnerabilityScanningContainerScanTargetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVulnerabilityScanningContainerScanTargetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVulnerabilityScanningHostScanRecipesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVulnerabilityScanningHostScanRecipesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVulnerabilityScanningHostScanTargetErrorsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVulnerabilityScanningHostScanTargetErrorsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVulnerabilityScanningHostScanTargetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVulnerabilityScanningHostScanTargetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetWaaWebAppAccelerationPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaaWebAppAccelerationPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetWaaWebAppAccelerationsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaaWebAppAccelerationsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetWaasAddressListsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaasAddressListsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetWaasCertificatesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaasCertificatesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetWaasCustomProtectionRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaasCustomProtectionRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetWaasEdgeSubnetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaasEdgeSubnetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetWaasHttpRedirectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaasHttpRedirectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetWaasProtectionRulesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaasProtectionRulesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetWaasWaasPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWaasWaasPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetWafNetworkAddressListsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWafNetworkAddressListsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetWafProtectionCapabilitiesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWafProtectionCapabilitiesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetWafProtectionCapabilityGroupTagsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWafProtectionCapabilityGroupTagsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetWafWebAppFirewallPoliciesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWafWebAppFirewallPoliciesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetWafWebAppFirewallsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetWafWebAppFirewallsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GoldenGateConnectionAdditionalAttribute {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GoldenGateConnectionAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GoldenGateConnectionBootstrapServer {
    host?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    privateIp?: pulumi.Input<string>;
}

export interface GoldenGateConnectionIngressIp {
    ingressIp: pulumi.Input<string>;
}

export interface GoldenGateConnectionLock {
    message?: pulumi.Input<string>;
    relatedResourceId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GoldenGateConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GoldenGateDatabaseRegistrationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GoldenGateDeploymentBackupLock {
    message?: pulumi.Input<string>;
    relatedResourceId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GoldenGateDeploymentBackupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GoldenGateDeploymentCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GoldenGateDeploymentDeploymentDiagnosticData {
    bucket: pulumi.Input<string>;
    diagnosticState: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    object: pulumi.Input<string>;
    timeDiagnosticEnd: pulumi.Input<string>;
    timeDiagnosticStart: pulumi.Input<string>;
}

export interface GoldenGateDeploymentIngressIp {
    ingressIp: pulumi.Input<string>;
}

export interface GoldenGateDeploymentLock {
    message?: pulumi.Input<string>;
    relatedResourceId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GoldenGateDeploymentMaintenanceConfiguration {
    bundleReleaseUpgradePeriodInDays?: pulumi.Input<number>;
    interimReleaseUpgradePeriodInDays?: pulumi.Input<number>;
    isInterimReleaseAutoUpgradeEnabled?: pulumi.Input<boolean>;
    majorReleaseUpgradePeriodInDays?: pulumi.Input<number>;
    securityPatchUpgradePeriodInDays?: pulumi.Input<number>;
}

export interface GoldenGateDeploymentMaintenanceWindow {
    day: pulumi.Input<string>;
    startHour: pulumi.Input<number>;
}

export interface GoldenGateDeploymentOggData {
    adminPassword?: pulumi.Input<string>;
    adminUsername?: pulumi.Input<string>;
    certificate?: pulumi.Input<string>;
    credentialStore?: pulumi.Input<string>;
    deploymentName: pulumi.Input<string>;
    identityDomainId?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    oggVersion?: pulumi.Input<string>;
    passwordSecretId?: pulumi.Input<string>;
}

export interface GoldenGateDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HealthChecksHttpMonitorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HealthChecksHttpProbeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HealthChecksPingMonitorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HealthChecksPingProbeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityApiKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityAuthTokenTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityAuthenticationPolicyNetworkPolicy {
    networkSourceIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdentityAuthenticationPolicyPasswordPolicy {
    isLowercaseCharactersRequired?: pulumi.Input<boolean>;
    isNumericCharactersRequired?: pulumi.Input<boolean>;
    isSpecialCharactersRequired?: pulumi.Input<boolean>;
    isUppercaseCharactersRequired?: pulumi.Input<boolean>;
    isUsernameContainmentAllowed?: pulumi.Input<boolean>;
    minimumPasswordLength?: pulumi.Input<number>;
}

export interface IdentityAuthenticationPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityCompartmentTimeouts {
    delete?: pulumi.Input<string>;
}

export interface IdentityCustomerSecretKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDataPlaneGenerateScopedAccessTokenTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDbCredentialTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainReplicaRegion {
    region: pulumi.Input<string>;
    state: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface IdentityDomainReplicationToRegionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsAccountRecoverySettingIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAccountRecoverySettingIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAccountRecoverySettingMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsAccountRecoverySettingTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAccountRecoverySettingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsApiKeyIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApiKeyIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApiKeyMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsApiKeyTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApiKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsApiKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUser {
    allowSelfChange?: pulumi.Input<boolean>;
}

export interface IdentityDomainsApiKeyUser {
    display?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsAppAccount {
    active: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    ownerId: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppAdminRole {
    description: pulumi.Input<string>;
    display: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppAliasApp {
    description?: pulumi.Input<string>;
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppAllowedScope {
    fqs: pulumi.Input<string>;
    idOfDefiningApp?: pulumi.Input<string>;
    readOnly?: pulumi.Input<boolean>;
}

export interface IdentityDomainsAppAllowedTag {
    key: pulumi.Input<string>;
    readOnly?: pulumi.Input<boolean>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppAppSignonPolicy {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppAppsNetworkPerimeter {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppAsOpcService {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppAttrRenderingMetadata {
    datatype?: pulumi.Input<string>;
    helptext?: pulumi.Input<string>;
    label?: pulumi.Input<string>;
    maxLength?: pulumi.Input<number>;
    maxSize?: pulumi.Input<number>;
    minLength?: pulumi.Input<number>;
    minSize?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    readOnly?: pulumi.Input<boolean>;
    regexp?: pulumi.Input<string>;
    required?: pulumi.Input<boolean>;
    section?: pulumi.Input<string>;
    visible?: pulumi.Input<boolean>;
    widget?: pulumi.Input<string>;
}

export interface IdentityDomainsAppBasedOnTemplate {
    lastModified?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
    wellKnownId?: pulumi.Input<string>;
}

export interface IdentityDomainsAppCertificate {
    certAlias: pulumi.Input<string>;
    kid?: pulumi.Input<string>;
    sha1thumbprint?: pulumi.Input<string>;
    x509base64certificate?: pulumi.Input<string>;
    x5t?: pulumi.Input<string>;
}

export interface IdentityDomainsAppCloudControlProperty {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdentityDomainsAppEditableAttribute {
    name: pulumi.Input<string>;
}

export interface IdentityDomainsAppGrant {
    grantMechanism: pulumi.Input<string>;
    granteeId: pulumi.Input<string>;
    granteeType: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppGrantedAppRole {
    adminRole: pulumi.Input<boolean>;
    appId: pulumi.Input<string>;
    appName: pulumi.Input<string>;
    display: pulumi.Input<string>;
    legacyGroupName: pulumi.Input<string>;
    readOnly: pulumi.Input<boolean>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppIdentityProvider {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppIdpPolicy {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsAppProtectableSecondaryAudience {
    readOnly?: pulumi.Input<boolean>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppRadiusPolicy {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppRoleApp {
    display?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    serviceInstanceIdentifier?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppRoleIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppRoleIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppRoleMember {
    display: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppRoleMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsAppRoleTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppRoleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsAppSamlServiceProvider {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppScope {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    fqs?: pulumi.Input<string>;
    readOnly?: pulumi.Input<boolean>;
    requiresConsent?: pulumi.Input<boolean>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppServiceParam {
    name: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsAppSignonPolicy {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppTermsOfUse {
    name?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsAppTrustPolicy {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTags {
    definedTags?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTag>[]>;
    freeformTags?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTag>[]>;
    tagSlug?: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTag {
    key: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensiondbcsApp {
    domainApp?: pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensiondbcsAppDomainApp>;
    domainName?: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensiondbcsAppDomainApp {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppApp {
    allowAuthzDecisionTtl?: pulumi.Input<number>;
    allowAuthzPolicy?: pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAllowAuthzPolicy>;
    appResources?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAppResource>[]>;
    denyAuthzDecisionTtl?: pulumi.Input<number>;
    denyAuthzPolicy?: pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppDenyAuthzPolicy>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAllowAuthzPolicy {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppAppResource {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionenterpriseAppAppDenyAuthzPolicy {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppApp {
    configuration?: pulumi.Input<string>;
    formCredMethod?: pulumi.Input<string>;
    formCredentialSharingGroupId?: pulumi.Input<string>;
    formFillUrlMatches?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatch>[]>;
    formType?: pulumi.Input<string>;
    revealPasswordOnForm?: pulumi.Input<boolean>;
    syncFromTemplate?: pulumi.Input<boolean>;
    userNameFormExpression?: pulumi.Input<string>;
    userNameFormTemplate?: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatch {
    formUrl: pulumi.Input<string>;
    formUrlMatchType?: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplate {
    configuration?: pulumi.Input<string>;
    formCredMethod?: pulumi.Input<string>;
    formCredentialSharingGroupId?: pulumi.Input<string>;
    formFillUrlMatches?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatch>[]>;
    formType?: pulumi.Input<string>;
    revealPasswordOnForm?: pulumi.Input<boolean>;
    syncFromTemplate?: pulumi.Input<boolean>;
    userNameFormExpression?: pulumi.Input<string>;
    userNameFormTemplate?: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatch {
    formUrl: pulumi.Input<string>;
    formUrlMatchType?: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionkerberosRealmApp {
    defaultEncryptionSaltType?: pulumi.Input<string>;
    masterKey?: pulumi.Input<string>;
    maxRenewableAge?: pulumi.Input<number>;
    maxTicketLife?: pulumi.Input<number>;
    realmName?: pulumi.Input<string>;
    supportedEncryptionSaltTypes?: pulumi.Input<pulumi.Input<string>[]>;
    ticketFlags?: pulumi.Input<number>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp {
    accountFormVisible?: pulumi.Input<boolean>;
    adminConsentGranted?: pulumi.Input<boolean>;
    bundleConfigurationProperties?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationProperty>[]>;
    bundlePoolConfiguration?: pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration>;
    canBeAuthoritative?: pulumi.Input<boolean>;
    connected?: pulumi.Input<boolean>;
    connectorBundles?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundle>[]>;
    enableAuthSyncNewUserNotification?: pulumi.Input<boolean>;
    enableSync?: pulumi.Input<boolean>;
    enableSyncSummaryReportNotification?: pulumi.Input<boolean>;
    flatFileBundleConfigurationProperties?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationProperty>[]>;
    flatFileConnectorBundle?: pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundle>;
    identityBridges?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridge>[]>;
    isAuthoritative?: pulumi.Input<boolean>;
    isDirectory?: pulumi.Input<boolean>;
    isOnPremiseApp?: pulumi.Input<boolean>;
    isSchemaCustomizationSupported?: pulumi.Input<boolean>;
    isSchemaDiscoverySupported?: pulumi.Input<boolean>;
    isThreeLeggedOauthEnabled?: pulumi.Input<boolean>;
    isTwoLeggedOauthEnabled?: pulumi.Input<boolean>;
    objectClasses?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClass>[]>;
    syncConfigLastModified?: pulumi.Input<string>;
    threeLeggedOauthCredential?: pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredential>;
    threeLeggedOauthProviderName?: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationProperty {
    confidential?: pulumi.Input<boolean>;
    displayName?: pulumi.Input<string>;
    helpMessage?: pulumi.Input<string>;
    icfType: pulumi.Input<string>;
    name: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    required: pulumi.Input<boolean>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration {
    maxIdle?: pulumi.Input<number>;
    maxObjects?: pulumi.Input<number>;
    maxWait?: pulumi.Input<number>;
    minEvictableIdleTimeMillis?: pulumi.Input<number>;
    minIdle?: pulumi.Input<number>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundle {
    display: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
    wellKnownId: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationProperty {
    confidential?: pulumi.Input<boolean>;
    displayName?: pulumi.Input<string>;
    helpMessage?: pulumi.Input<string>;
    icfType: pulumi.Input<string>;
    name: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    required: pulumi.Input<boolean>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundle {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
    wellKnownId?: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridge {
    name: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClass {
    display: pulumi.Input<string>;
    isAccountObjectClass: pulumi.Input<boolean>;
    ref: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredential {
    accessToken?: pulumi.Input<string>;
    accessTokenExpiry?: pulumi.Input<string>;
    refreshToken?: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionmulticloudServiceAppApp {
    multicloudPlatformUrl?: pulumi.Input<string>;
    multicloudServiceType: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionopcServiceApp {
    currentFederationMode?: pulumi.Input<string>;
    currentSynchronizationMode?: pulumi.Input<string>;
    enablingNextFedSyncModes?: pulumi.Input<boolean>;
    nextFederationMode?: pulumi.Input<string>;
    nextSynchronizationMode?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    serviceInstanceIdentifier?: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp {
    captureClientIp?: pulumi.Input<boolean>;
    clientIp: pulumi.Input<string>;
    countryCodeResponseAttributeId?: pulumi.Input<string>;
    endUserIpAttribute?: pulumi.Input<string>;
    groupMembershipRadiusAttribute?: pulumi.Input<string>;
    groupMembershipToReturns?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturn>[]>;
    groupNameFormat?: pulumi.Input<string>;
    includeGroupInResponse: pulumi.Input<boolean>;
    passwordAndOtpTogether?: pulumi.Input<boolean>;
    port: pulumi.Input<string>;
    radiusVendorSpecificId?: pulumi.Input<string>;
    responseFormat?: pulumi.Input<string>;
    responseFormatDelimiter?: pulumi.Input<string>;
    secretKey: pulumi.Input<string>;
    typeOfRadiusApp?: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturn {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionrequestableApp {
    requestable?: pulumi.Input<boolean>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderApp {
    assertionConsumerUrl?: pulumi.Input<string>;
    encryptAssertion?: pulumi.Input<boolean>;
    encryptionAlgorithm?: pulumi.Input<string>;
    encryptionCertificate?: pulumi.Input<string>;
    federationProtocol?: pulumi.Input<string>;
    groupAssertionAttributes?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppGroupAssertionAttribute>[]>;
    hokAcsUrl?: pulumi.Input<string>;
    hokRequired?: pulumi.Input<boolean>;
    includeSigningCertInSignature?: pulumi.Input<boolean>;
    keyEncryptionAlgorithm?: pulumi.Input<string>;
    lastNotificationSentTime?: pulumi.Input<string>;
    logoutBinding?: pulumi.Input<string>;
    logoutEnabled?: pulumi.Input<boolean>;
    logoutRequestUrl?: pulumi.Input<string>;
    logoutResponseUrl?: pulumi.Input<string>;
    metadata?: pulumi.Input<string>;
    nameIdFormat?: pulumi.Input<string>;
    nameIdUserstoreAttribute?: pulumi.Input<string>;
    outboundAssertionAttributes?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppOutboundAssertionAttribute>[]>;
    partnerProviderId?: pulumi.Input<string>;
    partnerProviderPattern?: pulumi.Input<string>;
    signResponseOrAssertion?: pulumi.Input<string>;
    signatureHashAlgorithm?: pulumi.Input<string>;
    signingCertificate?: pulumi.Input<string>;
    succinctId?: pulumi.Input<string>;
    tenantProviderId?: pulumi.Input<string>;
    userAssertionAttributes?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttribute>[]>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppGroupAssertionAttribute {
    condition?: pulumi.Input<string>;
    format?: pulumi.Input<string>;
    groupName?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppOutboundAssertionAttribute {
    direction: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttribute {
    format?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    userStoreAttributeName: pulumi.Input<string>;
}

export interface IdentityDomainsAppUrnietfparamsscimschemasoracleidcsextensionwebTierPolicyApp {
    resourceRef?: pulumi.Input<boolean>;
    webTierPolicyAzControl?: pulumi.Input<string>;
    webTierPolicyJson?: pulumi.Input<string>;
}

export interface IdentityDomainsAppUserRole {
    description: pulumi.Input<string>;
    display: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowApprovalWorkflowStep {
    ocid?: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    ref?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowAssignmentApprovalWorkflow {
    display?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowAssignmentAssignedTo {
    description?: pulumi.Input<string>;
    display?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowAssignmentIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowAssignmentIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowAssignmentMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowAssignmentTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowMaxDuration {
    unit: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface IdentityDomainsApprovalWorkflowMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowStepApprover {
    display?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowStepIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowStepIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowStepMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowStepTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowStepTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsApprovalWorkflowTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsAuthTokenIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAuthTokenIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAuthTokenMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsAuthTokenTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAuthTokenTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsAuthTokenUrnietfparamsscimschemasoracleidcsextensionselfChangeUser {
    allowSelfChange?: pulumi.Input<boolean>;
}

export interface IdentityDomainsAuthTokenUser {
    display?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsAuthenticationFactorSettingBypassCodeSettings {
    helpDeskCodeExpiryInMins: pulumi.Input<number>;
    helpDeskGenerationEnabled: pulumi.Input<boolean>;
    helpDeskMaxUsage: pulumi.Input<number>;
    length: pulumi.Input<number>;
    maxActive: pulumi.Input<number>;
    selfServiceGenerationEnabled: pulumi.Input<boolean>;
}

export interface IdentityDomainsAuthenticationFactorSettingClientAppSettings {
    deviceProtectionPolicy: pulumi.Input<string>;
    initialLockoutPeriodInSecs: pulumi.Input<number>;
    keyPairLength: pulumi.Input<number>;
    lockoutEscalationPattern: pulumi.Input<string>;
    maxFailuresBeforeLockout: pulumi.Input<number>;
    maxFailuresBeforeWarning: pulumi.Input<number>;
    maxLockoutIntervalInSecs: pulumi.Input<number>;
    minPinLength: pulumi.Input<number>;
    policyUpdateFreqInDays: pulumi.Input<number>;
    requestSigningAlgo: pulumi.Input<string>;
    sharedSecretEncoding: pulumi.Input<string>;
    unlockAppForEachRequestEnabled: pulumi.Input<boolean>;
    unlockAppIntervalInSecs: pulumi.Input<number>;
    unlockOnAppForegroundEnabled: pulumi.Input<boolean>;
    unlockOnAppStartEnabled: pulumi.Input<boolean>;
}

export interface IdentityDomainsAuthenticationFactorSettingCompliancePolicy {
    action: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAuthenticationFactorSettingEmailSettings {
    emailLinkCustomUrl?: pulumi.Input<string>;
    emailLinkEnabled: pulumi.Input<boolean>;
}

export interface IdentityDomainsAuthenticationFactorSettingEndpointRestrictions {
    maxEndpointTrustDurationInDays: pulumi.Input<number>;
    maxEnrolledDevices: pulumi.Input<number>;
    maxIncorrectAttempts: pulumi.Input<number>;
    maxTrustedEndpoints: pulumi.Input<number>;
    trustedEndpointsEnabled: pulumi.Input<boolean>;
}

export interface IdentityDomainsAuthenticationFactorSettingIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAuthenticationFactorSettingIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAuthenticationFactorSettingIdentityStoreSettings {
    mobileNumberEnabled?: pulumi.Input<boolean>;
    mobileNumberUpdateEnabled?: pulumi.Input<boolean>;
}

export interface IdentityDomainsAuthenticationFactorSettingMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsAuthenticationFactorSettingNotificationSettings {
    pullEnabled: pulumi.Input<boolean>;
}

export interface IdentityDomainsAuthenticationFactorSettingTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsAuthenticationFactorSettingThirdPartyFactor {
    duoSecurity: pulumi.Input<boolean>;
}

export interface IdentityDomainsAuthenticationFactorSettingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsAuthenticationFactorSettingTotpSettings {
    emailOtpValidityDurationInMins: pulumi.Input<number>;
    emailPasscodeLength: pulumi.Input<number>;
    hashingAlgorithm: pulumi.Input<string>;
    jwtValidityDurationInSecs: pulumi.Input<number>;
    keyRefreshIntervalInDays: pulumi.Input<number>;
    passcodeLength: pulumi.Input<number>;
    smsOtpValidityDurationInMins: pulumi.Input<number>;
    smsPasscodeLength: pulumi.Input<number>;
    timeStepInSecs: pulumi.Input<number>;
    timeStepTolerance: pulumi.Input<number>;
}

export interface IdentityDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings {
    attestation: pulumi.Input<string>;
    authenticatorSelectionAttachment: pulumi.Input<string>;
    authenticatorSelectionRequireResidentKey: pulumi.Input<boolean>;
    authenticatorSelectionResidentKey: pulumi.Input<string>;
    authenticatorSelectionUserVerification: pulumi.Input<string>;
    domainValidationLevel?: pulumi.Input<number>;
    excludeCredentials: pulumi.Input<boolean>;
    publicKeyTypes: pulumi.Input<pulumi.Input<string>[]>;
    timeout: pulumi.Input<number>;
}

export interface IdentityDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings {
    duoSecuritySettings?: pulumi.Input<inputs.IdentityDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettings>;
}

export interface IdentityDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettings {
    apiHostname: pulumi.Input<string>;
    attestationKey?: pulumi.Input<string>;
    integrationKey: pulumi.Input<string>;
    secretKey: pulumi.Input<string>;
    userMappingAttribute: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateMapping {
    appId: pulumi.Input<string>;
    mappingId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nginxSettings: pulumi.Input<string>;
    policyName: pulumi.Input<string>;
    proxyPass: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    resourcePrefix: pulumi.Input<string>;
    serverId: pulumi.Input<string>;
    upstreamServerGroupId: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateMappingCloudGate {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateMappingGatewayApp {
    name: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateMappingIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateMappingIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateMappingMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateMappingServer {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateMappingTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateMappingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateMappingUpstreamServerGroup {
    ref?: pulumi.Input<string>;
    ssl?: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateOauthClient {
    clientId: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateServer {
    hostName: pulumi.Input<string>;
    nginxSettings: pulumi.Input<string>;
    port: pulumi.Input<number>;
    serverId: pulumi.Input<string>;
    ssl: pulumi.Input<boolean>;
}

export interface IdentityDomainsCloudGateServerCloudGate {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateServerIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateServerIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateServerMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateServerTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateUpstreamServer {
    displayName: pulumi.Input<string>;
    groupId: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    nginxSettings: pulumi.Input<string>;
    port: pulumi.Input<number>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCloudGateUpstreamServerGroup {
    displayName: pulumi.Input<string>;
    nginxSettings: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    ssl: pulumi.Input<boolean>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsConditionIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsConditionIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsConditionMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsConditionTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsConditionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsCustomerSecretKeyIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCustomerSecretKeyIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCustomerSecretKeyMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsCustomerSecretKeyTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsCustomerSecretKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsCustomerSecretKeyUrnietfparamsscimschemasoracleidcsextensionselfChangeUser {
    allowSelfChange?: pulumi.Input<boolean>;
}

export interface IdentityDomainsCustomerSecretKeyUser {
    display?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsDynamicResourceGroupDynamicGroupAppRole {
    adminRole: pulumi.Input<boolean>;
    appId: pulumi.Input<string>;
    appName: pulumi.Input<string>;
    display: pulumi.Input<string>;
    legacyGroupName: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsDynamicResourceGroupGrant {
    appId: pulumi.Input<string>;
    grantMechanism: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsDynamicResourceGroupIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsDynamicResourceGroupIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsDynamicResourceGroupMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsDynamicResourceGroupTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsDynamicResourceGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTags {
    definedTags?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTag>[]>;
    freeformTags?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTag>[]>;
    tagSlug?: pulumi.Input<string>;
}

export interface IdentityDomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTag {
    key: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsDynamicResourceGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGrantApp {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGrantAppEntitlementCollection {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGrantEntitlement {
    attributeName: pulumi.Input<string>;
    attributeValue: pulumi.Input<string>;
}

export interface IdentityDomainsGrantGrantee {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGrantGrantor {
    display: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGrantIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGrantIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGrantMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsGrantTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGrantTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsGroupIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGroupIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGroupMember {
    dateAdded?: pulumi.Input<string>;
    display?: pulumi.Input<string>;
    membershipOcid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGroupMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsGroupTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTags {
    definedTags?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTag>[]>;
    freeformTags?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTag>[]>;
    tagSlug?: pulumi.Input<string>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTag {
    key: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroup {
    domainLevelSchema: pulumi.Input<string>;
    domainLevelSchemaNames: pulumi.Input<pulumi.Input<inputs.IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaName>[]>;
    instanceLevelSchema: pulumi.Input<string>;
    instanceLevelSchemaNames: pulumi.Input<pulumi.Input<inputs.IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaName>[]>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaName {
    domainName: pulumi.Input<string>;
    schemaName: pulumi.Input<string>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaName {
    dbInstanceId: pulumi.Input<string>;
    schemaName: pulumi.Input<string>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroup {
    membershipRule?: pulumi.Input<string>;
    membershipType?: pulumi.Input<string>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroup {
    appRoles?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupAppRole>[]>;
    creationMechanism?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    grants?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupGrant>[]>;
    owners?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOwner>[]>;
    passwordPolicies?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupPasswordPolicy>[]>;
    syncedFromApps?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupSyncedFromApp>[]>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupAppRole {
    adminRole: pulumi.Input<boolean>;
    appId: pulumi.Input<string>;
    appName: pulumi.Input<string>;
    display: pulumi.Input<string>;
    legacyGroupName: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupGrant {
    appId: pulumi.Input<string>;
    grantMechanism: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupOwner {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupPasswordPolicy {
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupSyncedFromApp {
    display: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroup {
    gidNumber?: pulumi.Input<number>;
}

export interface IdentityDomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroup {
    requestable?: pulumi.Input<boolean>;
}

export interface IdentityDomainsIdentityPropagationTrustIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityPropagationTrustIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityPropagationTrustImpersonationServiceUser {
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    rule: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityPropagationTrustKeytab {
    secretOcid: pulumi.Input<string>;
    secretVersion?: pulumi.Input<number>;
}

export interface IdentityDomainsIdentityPropagationTrustMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityPropagationTrustTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityPropagationTrustTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityProviderCorrelationPolicy {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityProviderIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityProviderIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityProviderJitUserProvAssignedGroup {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityProviderJitUserProvAttributes {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityProviderJitUserProvGroupMapping {
    idpGroup: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityProviderMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityProviderTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityProviderTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider {
    accessTokenUrl?: pulumi.Input<string>;
    accountLinkingEnabled: pulumi.Input<boolean>;
    adminScopes?: pulumi.Input<pulumi.Input<string>[]>;
    authzUrl?: pulumi.Input<string>;
    autoRedirectEnabled?: pulumi.Input<boolean>;
    clientCredentialInPayload?: pulumi.Input<boolean>;
    clockSkewInSeconds?: pulumi.Input<number>;
    consumerKey: pulumi.Input<string>;
    consumerSecret: pulumi.Input<string>;
    discoveryUrl?: pulumi.Input<string>;
    idAttribute?: pulumi.Input<string>;
    jitProvAssignedGroups?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderJitProvAssignedGroup>[]>;
    jitProvGroupStaticListEnabled?: pulumi.Input<boolean>;
    profileUrl?: pulumi.Input<string>;
    redirectUrl?: pulumi.Input<string>;
    registrationEnabled: pulumi.Input<boolean>;
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceProviderName: pulumi.Input<string>;
    socialJitProvisioningEnabled?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderJitProvAssignedGroup {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProvider {
    certMatchAttribute: pulumi.Input<string>;
    crlCheckOnOcspFailureEnabled?: pulumi.Input<boolean>;
    crlEnabled?: pulumi.Input<boolean>;
    crlLocation?: pulumi.Input<string>;
    crlReloadDuration?: pulumi.Input<number>;
    ekuValidationEnabled?: pulumi.Input<boolean>;
    ekuValues?: pulumi.Input<pulumi.Input<string>[]>;
    ocspAllowUnknownResponseStatus?: pulumi.Input<boolean>;
    ocspEnableSignedResponse?: pulumi.Input<boolean>;
    ocspEnabled?: pulumi.Input<boolean>;
    ocspResponderUrl?: pulumi.Input<string>;
    ocspRevalidateTime?: pulumi.Input<number>;
    ocspServerName?: pulumi.Input<string>;
    ocspTrustCertChains?: pulumi.Input<pulumi.Input<string>[]>;
    otherCertMatchAttribute?: pulumi.Input<string>;
    signingCertificateChains: pulumi.Input<pulumi.Input<string>[]>;
    userMatchAttribute: pulumi.Input<string>;
}

export interface IdentityDomainsIdentitySettingIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentitySettingIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentitySettingMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsIdentitySettingMyProfile {
    allowEndUsersToChangeTheirPassword?: pulumi.Input<boolean>;
    allowEndUsersToLinkTheirSupportAccount?: pulumi.Input<boolean>;
    allowEndUsersToManageTheirCapabilities?: pulumi.Input<boolean>;
    allowEndUsersToUpdateTheirSecuritySettings?: pulumi.Input<boolean>;
}

export interface IdentityDomainsIdentitySettingPosixGid {
    manualAssignmentEndsAt?: pulumi.Input<number>;
    manualAssignmentStartsFrom?: pulumi.Input<number>;
}

export interface IdentityDomainsIdentitySettingPosixUid {
    manualAssignmentEndsAt?: pulumi.Input<number>;
    manualAssignmentStartsFrom?: pulumi.Input<number>;
}

export interface IdentityDomainsIdentitySettingTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsIdentitySettingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsIdentitySettingToken {
    expiresAfter?: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface IdentityDomainsKmsiSettingIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsKmsiSettingIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsKmsiSettingMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsKmsiSettingTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsKmsiSettingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsMyApiKeyIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyApiKeyIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyApiKeyMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsMyApiKeyTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyApiKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsMyApiKeyUser {
    display?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsMyAuthTokenIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyAuthTokenIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyAuthTokenMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsMyAuthTokenTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyAuthTokenTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsMyAuthTokenUser {
    display?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsMyCustomerSecretKeyIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyCustomerSecretKeyIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyCustomerSecretKeyMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsMyCustomerSecretKeyTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyCustomerSecretKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsMyCustomerSecretKeyUser {
    display?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsMyOauth2clientCredentialIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyOauth2clientCredentialIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyOauth2clientCredentialMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsMyOauth2clientCredentialScope {
    audience: pulumi.Input<string>;
    scope: pulumi.Input<string>;
}

export interface IdentityDomainsMyOauth2clientCredentialTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyOauth2clientCredentialTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsMyOauth2clientCredentialUser {
    display?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsMyRequestApprovalDetail {
    approvalType?: pulumi.Input<string>;
    approverDisplayName?: pulumi.Input<string>;
    approverId?: pulumi.Input<string>;
    justification?: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
}

export interface IdentityDomainsMyRequestIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyRequestIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyRequestMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsMyRequestRequesting {
    description?: pulumi.Input<string>;
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyRequestRequestor {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyRequestTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyRequestTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsMySmtpCredentialIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMySmtpCredentialIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMySmtpCredentialMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsMySmtpCredentialTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMySmtpCredentialTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsMySmtpCredentialUser {
    display?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsMySupportAccountIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMySupportAccountIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMySupportAccountMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsMySupportAccountTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMySupportAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsMySupportAccountUser {
    display?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsMyUserDbCredentialIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyUserDbCredentialIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyUserDbCredentialMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsMyUserDbCredentialTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsMyUserDbCredentialTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsMyUserDbCredentialUser {
    display?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsNetworkPerimeterIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsNetworkPerimeterIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsNetworkPerimeterIpAddress {
    type?: pulumi.Input<string>;
    value: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface IdentityDomainsNetworkPerimeterMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsNetworkPerimeterTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsNetworkPerimeterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsNotificationSettingEventSetting {
    enabled?: pulumi.Input<boolean>;
    eventId: pulumi.Input<string>;
}

export interface IdentityDomainsNotificationSettingFromEmailAddress {
    displayName?: pulumi.Input<string>;
    validate: pulumi.Input<string>;
    validationStatus?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsNotificationSettingIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsNotificationSettingIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsNotificationSettingMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsNotificationSettingTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsNotificationSettingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsOauth2clientCredentialIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsOauth2clientCredentialIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsOauth2clientCredentialMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsOauth2clientCredentialScope {
    audience: pulumi.Input<string>;
    scope: pulumi.Input<string>;
}

export interface IdentityDomainsOauth2clientCredentialTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsOauth2clientCredentialTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsOauth2clientCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUser {
    allowSelfChange?: pulumi.Input<boolean>;
}

export interface IdentityDomainsOauth2clientCredentialUser {
    display?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsOauthClientCertificateIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsOauthClientCertificateIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsOauthClientCertificateMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsOauthClientCertificateTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsOauthClientCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsOauthPartnerCertificateIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsOauthPartnerCertificateIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsOauthPartnerCertificateMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsOauthPartnerCertificateTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsOauthPartnerCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsPasswordPolicyConfiguredPasswordPolicyRule {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsPasswordPolicyGroup {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsPasswordPolicyIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsPasswordPolicyIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsPasswordPolicyMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsPasswordPolicyTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsPasswordPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsPolicyIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsPolicyIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsPolicyMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsPolicyPolicyType {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsPolicyRule {
    name?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    sequence: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsPolicyTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsRuleConditionGroup {
    name?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsRuleIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsRuleIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsRuleMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsRulePolicyType {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsRuleReturn {
    name: pulumi.Input<string>;
    returnGroovy?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsRuleTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsSecurityQuestionIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSecurityQuestionIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSecurityQuestionMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsSecurityQuestionQuestionText {
    default?: pulumi.Input<boolean>;
    locale: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSecurityQuestionSettingIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSecurityQuestionSettingIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSecurityQuestionSettingMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsSecurityQuestionSettingTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSecurityQuestionSettingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsSecurityQuestionTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSecurityQuestionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsSelfRegistrationProfileAfterSubmitText {
    default?: pulumi.Input<boolean>;
    locale: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSelfRegistrationProfileConsentText {
    default?: pulumi.Input<boolean>;
    locale: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSelfRegistrationProfileDefaultGroup {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSelfRegistrationProfileDisplayName {
    default?: pulumi.Input<boolean>;
    locale: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSelfRegistrationProfileEmailTemplate {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSelfRegistrationProfileFooterText {
    default?: pulumi.Input<boolean>;
    locale: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSelfRegistrationProfileHeaderText {
    default?: pulumi.Input<boolean>;
    locale: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSelfRegistrationProfileIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSelfRegistrationProfileIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSelfRegistrationProfileMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsSelfRegistrationProfileTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSelfRegistrationProfileTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsSelfRegistrationProfileUserAttribute {
    deletable?: pulumi.Input<boolean>;
    fullyQualifiedAttributeName?: pulumi.Input<string>;
    metadata?: pulumi.Input<string>;
    seqNumber: pulumi.Input<number>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSettingCertificateValidation {
    crlCheckOnOcspFailureEnabled?: pulumi.Input<boolean>;
    crlEnabled?: pulumi.Input<boolean>;
    crlLocation?: pulumi.Input<string>;
    crlRefreshInterval?: pulumi.Input<number>;
    ocspEnabled?: pulumi.Input<boolean>;
    ocspResponderUrl?: pulumi.Input<string>;
    ocspSettingsResponderUrlPreferred?: pulumi.Input<boolean>;
    ocspSigningCertificateAlias?: pulumi.Input<string>;
    ocspTimeoutDuration?: pulumi.Input<number>;
    ocspUnknownResponseStatusAllowed?: pulumi.Input<boolean>;
}

export interface IdentityDomainsSettingCloudGateCorsSettings {
    cloudGateCorsAllowNullOrigin?: pulumi.Input<boolean>;
    cloudGateCorsAllowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    cloudGateCorsEnabled?: pulumi.Input<boolean>;
    cloudGateCorsExposedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    cloudGateCorsMaxAge?: pulumi.Input<number>;
}

export interface IdentityDomainsSettingCompanyName {
    locale: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSettingDefaultCompanyName {
    locale: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSettingDefaultImage {
    display: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSettingDefaultLoginText {
    locale: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSettingIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSettingIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSettingImage {
    display?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSettingLoginText {
    locale: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSettingMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsSettingPurgeConfig {
    resourceName: pulumi.Input<string>;
    retentionPeriod: pulumi.Input<number>;
}

export interface IdentityDomainsSettingTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSettingTenantCustomClaim {
    allScopes: pulumi.Input<boolean>;
    expression: pulumi.Input<boolean>;
    mode: pulumi.Input<string>;
    name: pulumi.Input<string>;
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    tokenType: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSettingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsSmtpCredentialIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSmtpCredentialIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSmtpCredentialMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsSmtpCredentialTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSmtpCredentialTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsSmtpCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUser {
    allowSelfChange?: pulumi.Input<boolean>;
}

export interface IdentityDomainsSmtpCredentialUser {
    display?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsSocialIdentityProviderIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSocialIdentityProviderIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSocialIdentityProviderJitProvAssignedGroup {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSocialIdentityProviderMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsSocialIdentityProviderRelayIdpParamMapping {
    relayParamKey: pulumi.Input<string>;
    relayParamValue?: pulumi.Input<string>;
}

export interface IdentityDomainsSocialIdentityProviderTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsSocialIdentityProviderTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsUserAddress {
    country?: pulumi.Input<string>;
    formatted?: pulumi.Input<string>;
    locality?: pulumi.Input<string>;
    postalCode?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    region?: pulumi.Input<string>;
    streetAddress?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface IdentityDomainsUserDbCredentialIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserDbCredentialIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserDbCredentialMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsUserDbCredentialTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserDbCredentialTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsUserDbCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUser {
    allowSelfChange?: pulumi.Input<boolean>;
}

export interface IdentityDomainsUserDbCredentialUser {
    display?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ocid?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserEmail {
    pendingVerificationData?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    secondary?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
    verified?: pulumi.Input<boolean>;
}

export interface IdentityDomainsUserEntitlement {
    display?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserGroup {
    dateAdded: pulumi.Input<string>;
    display: pulumi.Input<string>;
    externalId: pulumi.Input<string>;
    membershipOcid: pulumi.Input<string>;
    nonUniqueDisplay: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserIdcsCreatedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserIdcsLastModifiedBy {
    display: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserIm {
    display?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserMeta {
    created: pulumi.Input<string>;
    lastModified: pulumi.Input<string>;
    location: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface IdentityDomainsUserName {
    familyName?: pulumi.Input<string>;
    formatted?: pulumi.Input<string>;
    givenName?: pulumi.Input<string>;
    honorificPrefix?: pulumi.Input<string>;
    honorificSuffix?: pulumi.Input<string>;
    middleName?: pulumi.Input<string>;
}

export interface IdentityDomainsUserPhoneNumber {
    display?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
    verified?: pulumi.Input<boolean>;
}

export interface IdentityDomainsUserPhoto {
    display?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserRole {
    display?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasextensionenterprise20user {
    costCenter?: pulumi.Input<string>;
    department?: pulumi.Input<string>;
    division?: pulumi.Input<string>;
    employeeNumber?: pulumi.Input<string>;
    manager?: pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasextensionenterprise20userManager>;
    organization?: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasextensionenterprise20userManager {
    displayName?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTags {
    definedTags?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTag>[]>;
    freeformTags?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTag>[]>;
    tagSlug?: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTag {
    key: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser {
    riskLevel?: pulumi.Input<string>;
    riskScores?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore>[]>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore {
    lastUpdateTimestamp: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    riskLevel: pulumi.Input<string>;
    score: pulumi.Input<number>;
    source?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser {
    canUseApiKeys?: pulumi.Input<boolean>;
    canUseAuthTokens?: pulumi.Input<boolean>;
    canUseConsole?: pulumi.Input<boolean>;
    canUseConsolePassword?: pulumi.Input<boolean>;
    canUseCustomerSecretKeys?: pulumi.Input<boolean>;
    canUseDbCredentials?: pulumi.Input<boolean>;
    canUseOauth2clientCredentials?: pulumi.Input<boolean>;
    canUseSmtpCredentials?: pulumi.Input<boolean>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser {
    dbLoginAttempts?: pulumi.Input<number>;
    dbUserName?: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser {
    dbGlobalRoles: pulumi.Input<pulumi.Input<string>[]>;
    domainLevelSchema: pulumi.Input<string>;
    instanceLevelSchema: pulumi.Input<string>;
    isDbUser: pulumi.Input<boolean>;
    passwordVerifiers: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifier>[]>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifier {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUser {
    realmUsers?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserRealmUser>[]>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserRealmUser {
    principalName?: pulumi.Input<string>;
    realmName?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUser {
    bypassCodes?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserBypassCode>[]>;
    devices?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDevice>[]>;
    loginAttempts?: pulumi.Input<number>;
    mfaEnabledOn?: pulumi.Input<string>;
    mfaIgnoredApps?: pulumi.Input<pulumi.Input<string>[]>;
    mfaStatus?: pulumi.Input<string>;
    preferredAuthenticationFactor?: pulumi.Input<string>;
    preferredAuthenticationMethod?: pulumi.Input<string>;
    preferredDevice?: pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredDevice>;
    preferredThirdPartyVendor?: pulumi.Input<string>;
    trustedUserAgents?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserTrustedUserAgent>[]>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserBypassCode {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDevice {
    authenticationMethod?: pulumi.Input<string>;
    display?: pulumi.Input<string>;
    factorStatus?: pulumi.Input<string>;
    factorType?: pulumi.Input<string>;
    lastSyncTime?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    thirdPartyVendorName?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredDevice {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserTrustedUserAgent {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUser {
    applicablePasswordPolicies: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserApplicablePasswordPolicy>[]>;
    cantChange: pulumi.Input<boolean>;
    cantExpire: pulumi.Input<boolean>;
    expired: pulumi.Input<boolean>;
    lastFailedValidationDate: pulumi.Input<string>;
    lastSuccessfulSetDate: pulumi.Input<string>;
    lastSuccessfulValidationDate: pulumi.Input<string>;
    mustChange: pulumi.Input<boolean>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUserApplicablePasswordPolicy {
    display: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUser {
    factorIdentifier?: pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorIdentifier>;
    factorMethod?: pulumi.Input<string>;
    factorType?: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorIdentifier {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUser {
    gecos?: pulumi.Input<string>;
    gidNumber?: pulumi.Input<number>;
    homeDirectory?: pulumi.Input<string>;
    loginShell?: pulumi.Input<string>;
    uidNumber?: pulumi.Input<number>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser {
    secQuestions?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserSecQuestion>[]>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserSecQuestion {
    answer: pulumi.Input<string>;
    hintText?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUser {
    allowSelfChange?: pulumi.Input<boolean>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser {
    consentGranted?: pulumi.Input<boolean>;
    selfRegistrationProfile: pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfile>;
    userToken?: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfile {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUser {
    sffAuthKeys?: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUser {
    socialAccounts?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserSocialAccount>[]>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserSocialAccount {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser {
    termsOfUseConsents?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsent>[]>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsent {
    ref?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser {
    apiKeys: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKey>[]>;
    authTokens: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthToken>[]>;
    customerSecretKeys: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKey>[]>;
    dbCredentials: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredential>[]>;
    oAuth2clientCredentials: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredential>[]>;
    smtpCredentials: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredential>[]>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKey {
    key: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthToken {
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKey {
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredential {
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredential {
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredential {
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUser {
    lastFailedLoginDate?: pulumi.Input<string>;
    lastSuccessfulLoginDate?: pulumi.Input<string>;
    locked?: pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserLocked>;
    loginAttempts?: pulumi.Input<number>;
    maxConcurrentSessions?: pulumi.Input<number>;
    previousSuccessfulLoginDate?: pulumi.Input<string>;
    recoveryAttempts?: pulumi.Input<number>;
    recoveryEnrollAttempts?: pulumi.Input<number>;
    recoveryLocked?: pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserRecoveryLocked>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserLocked {
    expired?: pulumi.Input<boolean>;
    lockDate?: pulumi.Input<string>;
    on?: pulumi.Input<boolean>;
    reason?: pulumi.Input<number>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserRecoveryLocked {
    lockDate?: pulumi.Input<string>;
    on?: pulumi.Input<boolean>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser {
    accountRecoveryRequired?: pulumi.Input<boolean>;
    accounts?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccount>[]>;
    appRoles?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRole>[]>;
    applicableAuthenticationTargetApps?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetApp>[]>;
    bypassNotification?: pulumi.Input<boolean>;
    creationMechanism?: pulumi.Input<string>;
    delegatedAuthenticationTargetApp?: pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetApp>;
    doNotShowGettingStarted?: pulumi.Input<boolean>;
    grants?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrant>[]>;
    groupMembershipLastModified?: pulumi.Input<string>;
    idcsAppRolesLimitedToGroups?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroup>[]>;
    isAccountRecoveryEnrolled?: pulumi.Input<boolean>;
    isAuthenticationDelegated?: pulumi.Input<boolean>;
    isFederatedUser?: pulumi.Input<boolean>;
    isGroupMembershipNormalized?: pulumi.Input<boolean>;
    isGroupMembershipSyncedToUsersGroups?: pulumi.Input<boolean>;
    notificationEmailTemplateId?: pulumi.Input<string>;
    preferredUiLandingPage?: pulumi.Input<string>;
    serviceUser?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
    supportAccounts?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccount>[]>;
    syncedFromApp?: pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromApp>;
    userFlowControlledByExternalClient?: pulumi.Input<boolean>;
    userProvider?: pulumi.Input<string>;
    userTokens?: pulumi.Input<pulumi.Input<inputs.IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserToken>[]>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccount {
    active: pulumi.Input<boolean>;
    appId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRole {
    adminRole: pulumi.Input<boolean>;
    appId: pulumi.Input<string>;
    appName: pulumi.Input<string>;
    display: pulumi.Input<string>;
    legacyGroupName: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetApp {
    display: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    targetRequestTimeout: pulumi.Input<number>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetApp {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrant {
    appId: pulumi.Input<string>;
    grantMechanism: pulumi.Input<string>;
    grantorId: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroup {
    display: pulumi.Input<string>;
    idcsAppRoleId: pulumi.Input<string>;
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccount {
    ocid: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    userId: pulumi.Input<string>;
    userProvider: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromApp {
    display?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserToken {
    ref: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDomainsUserX509certificate {
    display?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IdentityDynamicGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityIdentityProviderTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityIdpGroupMappingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityImportStandardTagsManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityNetworkSourceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityNetworkSourceVirtualSourceList {
    ipRanges: pulumi.Input<pulumi.Input<string>[]>;
    vcnId: pulumi.Input<string>;
}

export interface IdentityPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentitySmtpCredentialTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityTagDefaultTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityTagNamespaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityTagTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityTagValidator {
    validatorType: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdentityUiPasswordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityUserCapabilitiesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityUserCapability {
    canUseApiKeys: pulumi.Input<boolean>;
    canUseAuthTokens: pulumi.Input<boolean>;
    canUseConsolePassword: pulumi.Input<boolean>;
    canUseCustomerSecretKeys: pulumi.Input<boolean>;
    canUseDbCredentials: pulumi.Input<boolean>;
    canUseOauth2clientCredentials: pulumi.Input<boolean>;
    canUseSmtpCredentials: pulumi.Input<boolean>;
}

export interface IdentityUserGroupMembershipTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IdentityUserTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IntegrationIntegrationInstanceAlternateCustomEndpoint {
    alias?: pulumi.Input<string>;
    certificateSecretId?: pulumi.Input<string>;
    certificateSecretVersion?: pulumi.Input<number>;
    hostname: pulumi.Input<string>;
}

export interface IntegrationIntegrationInstanceAttachment {
    isImplicit: pulumi.Input<boolean>;
    targetId: pulumi.Input<string>;
    targetInstanceUrl: pulumi.Input<string>;
    targetRole: pulumi.Input<string>;
    targetServiceType: pulumi.Input<string>;
}

export interface IntegrationIntegrationInstanceCustomEndpoint {
    alias?: pulumi.Input<string>;
    certificateSecretId?: pulumi.Input<string>;
    certificateSecretVersion?: pulumi.Input<number>;
    hostname: pulumi.Input<string>;
}

export interface IntegrationIntegrationInstanceIdcsInfo {
    idcsAppDisplayName: pulumi.Input<string>;
    idcsAppId: pulumi.Input<string>;
    idcsAppLocationUrl: pulumi.Input<string>;
    idcsAppName: pulumi.Input<string>;
    instancePrimaryAudienceUrl: pulumi.Input<string>;
}

export interface IntegrationIntegrationInstanceNetworkEndpointDetails {
    allowlistedHttpIps?: pulumi.Input<pulumi.Input<string>[]>;
    allowlistedHttpVcns?: pulumi.Input<pulumi.Input<inputs.IntegrationIntegrationInstanceNetworkEndpointDetailsAllowlistedHttpVcn>[]>;
    isIntegrationVcnAllowlisted?: pulumi.Input<boolean>;
    networkEndpointType: pulumi.Input<string>;
}

export interface IntegrationIntegrationInstanceNetworkEndpointDetailsAllowlistedHttpVcn {
    allowlistedIps?: pulumi.Input<pulumi.Input<string>[]>;
    id: pulumi.Input<string>;
}

export interface IntegrationIntegrationInstancePrivateEndpointOutboundConnection {
    nsgIds: pulumi.Input<pulumi.Input<string>[]>;
    outboundConnectionType: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface IntegrationIntegrationInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IntegrationPrivateEndpointOutboundConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface JmsFleetAdvancedFeatureConfigurationAdvancedUsageTracking {
    isEnabled?: pulumi.Input<boolean>;
}

export interface JmsFleetAdvancedFeatureConfigurationCryptoEventAnalysis {
    isEnabled?: pulumi.Input<boolean>;
    summarizedEventsLog?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLog>;
}

export interface JmsFleetAdvancedFeatureConfigurationCryptoEventAnalysisSummarizedEventsLog {
    logGroupId: pulumi.Input<string>;
    logId: pulumi.Input<string>;
}

export interface JmsFleetAdvancedFeatureConfigurationJavaMigrationAnalysis {
    isEnabled?: pulumi.Input<boolean>;
}

export interface JmsFleetAdvancedFeatureConfigurationJfrRecording {
    isEnabled?: pulumi.Input<boolean>;
}

export interface JmsFleetAdvancedFeatureConfigurationLcm {
    isEnabled?: pulumi.Input<boolean>;
    postInstallationActions?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationLcmPostInstallationActions>;
}

export interface JmsFleetAdvancedFeatureConfigurationLcmPostInstallationActions {
    addLoggingHandler?: pulumi.Input<boolean>;
    disabledTlsVersions?: pulumi.Input<pulumi.Input<string>[]>;
    globalLoggingLevel?: pulumi.Input<string>;
    minimumKeySizeSettings?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettings>;
    proxies?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxies>;
    shouldReplaceCertificatesOperatingSystem?: pulumi.Input<boolean>;
}

export interface JmsFleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettings {
    certpaths?: pulumi.Input<pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpath>[]>;
    jars?: pulumi.Input<pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJar>[]>;
    tls?: pulumi.Input<pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTl>[]>;
}

export interface JmsFleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpath {
    keySize?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}

export interface JmsFleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJar {
    keySize?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}

export interface JmsFleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTl {
    keySize?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}

export interface JmsFleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxies {
    ftpProxyHost?: pulumi.Input<string>;
    ftpProxyPort?: pulumi.Input<number>;
    httpProxyHost?: pulumi.Input<string>;
    httpProxyPort?: pulumi.Input<number>;
    httpsProxyHost?: pulumi.Input<string>;
    httpsProxyPort?: pulumi.Input<number>;
    socksProxyHost?: pulumi.Input<string>;
    socksProxyPort?: pulumi.Input<number>;
    useSystemProxies?: pulumi.Input<boolean>;
}

export interface JmsFleetAdvancedFeatureConfigurationPerformanceTuningAnalysis {
    isEnabled?: pulumi.Input<boolean>;
}

export interface JmsFleetAdvancedFeatureConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface JmsFleetInventoryLog {
    logGroupId: pulumi.Input<string>;
    logId: pulumi.Input<string>;
}

export interface JmsFleetOperationLog {
    logGroupId: pulumi.Input<string>;
    logId: pulumi.Input<string>;
}

export interface JmsFleetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface JmsJavaDownloadsJavaDownloadReportCreatedBy {
    displayName: pulumi.Input<string>;
    email: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface JmsJavaDownloadsJavaDownloadReportTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface JmsJavaDownloadsJavaDownloadTokenCreatedBy {
    displayName: pulumi.Input<string>;
    email: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface JmsJavaDownloadsJavaDownloadTokenLastUpdatedBy {
    displayName: pulumi.Input<string>;
    email: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface JmsJavaDownloadsJavaDownloadTokenTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface JmsJavaDownloadsJavaLicenseAcceptanceRecordCreatedBy {
    displayName: pulumi.Input<string>;
    email: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface JmsJavaDownloadsJavaLicenseAcceptanceRecordLastUpdatedBy {
    displayName: pulumi.Input<string>;
    email: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface JmsJavaDownloadsJavaLicenseAcceptanceRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface JmsJmsPluginTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KmsEkmsPrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KmsEncryptedDataTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KmsGeneratedKeyKeyShape {
    algorithm: pulumi.Input<string>;
    curveId?: pulumi.Input<string>;
    length: pulumi.Input<number>;
}

export interface KmsGeneratedKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KmsKeyAutoKeyRotationDetails {
    lastRotationMessage?: pulumi.Input<string>;
    lastRotationStatus?: pulumi.Input<string>;
    rotationIntervalInDays?: pulumi.Input<number>;
    timeOfLastRotation?: pulumi.Input<string>;
    timeOfNextRotation?: pulumi.Input<string>;
    timeOfScheduleStart?: pulumi.Input<string>;
}

export interface KmsKeyExternalKeyReference {
    externalKeyId: pulumi.Input<string>;
}

export interface KmsKeyExternalKeyReferenceDetail {
    externalKeyId: pulumi.Input<string>;
    externalKeyVersionId: pulumi.Input<string>;
}

export interface KmsKeyKeyShape {
    algorithm: pulumi.Input<string>;
    curveId?: pulumi.Input<string>;
    length: pulumi.Input<number>;
}

export interface KmsKeyReplicaDetail {
    replicationId: pulumi.Input<string>;
}

export interface KmsKeyRestoreFromFile {
    contentLength: pulumi.Input<string>;
    contentMd5?: pulumi.Input<string>;
    restoreKeyFromFileDetails: pulumi.Input<string>;
}

export interface KmsKeyRestoreFromObjectStore {
    bucket?: pulumi.Input<string>;
    destination: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    object?: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

export interface KmsKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KmsKeyVersionExternalKeyReferenceDetail {
    externalKeyId: pulumi.Input<string>;
    externalKeyVersionId: pulumi.Input<string>;
}

export interface KmsKeyVersionReplicaDetail {
    replicationId: pulumi.Input<string>;
}

export interface KmsKeyVersionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KmsSignTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KmsVaultExternalKeyManagerMetadata {
    externalVaultEndpointUrl: pulumi.Input<string>;
    oauthMetadata: pulumi.Input<inputs.KmsVaultExternalKeyManagerMetadataOauthMetadata>;
    privateEndpointId: pulumi.Input<string>;
}

export interface KmsVaultExternalKeyManagerMetadataOauthMetadata {
    clientAppId: pulumi.Input<string>;
    clientAppSecret: pulumi.Input<string>;
    idcsAccountNameUrl: pulumi.Input<string>;
}

export interface KmsVaultExternalKeyManagerMetadataSummary {
    externalVaultEndpointUrl: pulumi.Input<string>;
    oauthMetadataSummaries: pulumi.Input<pulumi.Input<inputs.KmsVaultExternalKeyManagerMetadataSummaryOauthMetadataSummary>[]>;
    privateEndpointId: pulumi.Input<string>;
    vendor: pulumi.Input<string>;
}

export interface KmsVaultExternalKeyManagerMetadataSummaryOauthMetadataSummary {
    clientAppId: pulumi.Input<string>;
    idcsAccountNameUrl: pulumi.Input<string>;
}

export interface KmsVaultReplicaDetail {
    replicationId: pulumi.Input<string>;
}

export interface KmsVaultReplicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KmsVaultRestoreFromFile {
    contentLength: pulumi.Input<string>;
    contentMd5?: pulumi.Input<string>;
    restoreVaultFromFileDetails: pulumi.Input<string>;
}

export interface KmsVaultRestoreFromObjectStore {
    bucket?: pulumi.Input<string>;
    destination: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    object?: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

export interface KmsVaultTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KmsVerifyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LicenseManagerConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LicenseManagerLicenseRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LicenseManagerProductLicenseImage {
    id?: pulumi.Input<string>;
    listingId: pulumi.Input<string>;
    listingName?: pulumi.Input<string>;
    packageVersion: pulumi.Input<string>;
    publisher?: pulumi.Input<string>;
}

export interface LicenseManagerProductLicenseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LimitsQuotaLock {
    message?: pulumi.Input<string>;
    relatedResourceId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LimitsQuotaTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoadBalancerBackendSetBackend {
    backup: pulumi.Input<boolean>;
    drain: pulumi.Input<boolean>;
    ipAddress: pulumi.Input<string>;
    maxConnections: pulumi.Input<number>;
    name: pulumi.Input<string>;
    offline: pulumi.Input<boolean>;
    port: pulumi.Input<number>;
    weight: pulumi.Input<number>;
}

export interface LoadBalancerBackendSetHealthChecker {
    intervalMs?: pulumi.Input<number>;
    isForcePlainText?: pulumi.Input<boolean>;
    port?: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    responseBodyRegex?: pulumi.Input<string>;
    retries?: pulumi.Input<number>;
    returnCode?: pulumi.Input<number>;
    timeoutInMillis?: pulumi.Input<number>;
    urlPath?: pulumi.Input<string>;
}

export interface LoadBalancerBackendSetLbCookieSessionPersistenceConfiguration {
    cookieName?: pulumi.Input<string>;
    disableFallback?: pulumi.Input<boolean>;
    domain?: pulumi.Input<string>;
    isHttpOnly?: pulumi.Input<boolean>;
    isSecure?: pulumi.Input<boolean>;
    maxAgeInSeconds?: pulumi.Input<number>;
    path?: pulumi.Input<string>;
}

export interface LoadBalancerBackendSetSessionPersistenceConfiguration {
    cookieName: pulumi.Input<string>;
    disableFallback?: pulumi.Input<boolean>;
}

export interface LoadBalancerBackendSetSslConfiguration {
    certificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    certificateName?: pulumi.Input<string>;
    cipherSuiteName?: pulumi.Input<string>;
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    serverOrderPreference?: pulumi.Input<string>;
    trustedCertificateAuthorityIds?: pulumi.Input<pulumi.Input<string>[]>;
    verifyDepth?: pulumi.Input<number>;
    verifyPeerCertificate?: pulumi.Input<boolean>;
}

export interface LoadBalancerBackendSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoadBalancerBackendTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoadBalancerBackendsetBackend {
    backup: pulumi.Input<boolean>;
    drain: pulumi.Input<boolean>;
    ipAddress: pulumi.Input<string>;
    maxConnections: pulumi.Input<number>;
    name: pulumi.Input<string>;
    offline: pulumi.Input<boolean>;
    port: pulumi.Input<number>;
    weight: pulumi.Input<number>;
}

export interface LoadBalancerBackendsetHealthChecker {
    intervalMs?: pulumi.Input<number>;
    isForcePlainText?: pulumi.Input<boolean>;
    port?: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    responseBodyRegex?: pulumi.Input<string>;
    retries?: pulumi.Input<number>;
    returnCode?: pulumi.Input<number>;
    timeoutInMillis?: pulumi.Input<number>;
    urlPath?: pulumi.Input<string>;
}

export interface LoadBalancerBackendsetLbCookieSessionPersistenceConfiguration {
    cookieName?: pulumi.Input<string>;
    disableFallback?: pulumi.Input<boolean>;
    domain?: pulumi.Input<string>;
    isHttpOnly?: pulumi.Input<boolean>;
    isSecure?: pulumi.Input<boolean>;
    maxAgeInSeconds?: pulumi.Input<number>;
    path?: pulumi.Input<string>;
}

export interface LoadBalancerBackendsetSessionPersistenceConfiguration {
    cookieName: pulumi.Input<string>;
    disableFallback?: pulumi.Input<boolean>;
}

export interface LoadBalancerBackendsetSslConfiguration {
    certificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    certificateName?: pulumi.Input<string>;
    cipherSuiteName?: pulumi.Input<string>;
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    serverOrderPreference?: pulumi.Input<string>;
    trustedCertificateAuthorityIds?: pulumi.Input<pulumi.Input<string>[]>;
    verifyDepth?: pulumi.Input<number>;
    verifyPeerCertificate?: pulumi.Input<boolean>;
}

export interface LoadBalancerBackendsetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoadBalancerCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoadBalancerHostnameTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoadBalancerIpAddressDetail {
    ipAddress: pulumi.Input<string>;
    isPublic: pulumi.Input<boolean>;
    reservedIps: pulumi.Input<pulumi.Input<inputs.LoadBalancerIpAddressDetailReservedIp>[]>;
}

export interface LoadBalancerIpAddressDetailReservedIp {
    id: pulumi.Input<string>;
}

export interface LoadBalancerListenerConnectionConfiguration {
    backendTcpProxyProtocolVersion?: pulumi.Input<number>;
    idleTimeoutInSeconds: pulumi.Input<string>;
}

export interface LoadBalancerListenerSslConfiguration {
    certificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    certificateName?: pulumi.Input<string>;
    cipherSuiteName?: pulumi.Input<string>;
    hasSessionResumption?: pulumi.Input<boolean>;
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    serverOrderPreference?: pulumi.Input<string>;
    trustedCertificateAuthorityIds?: pulumi.Input<pulumi.Input<string>[]>;
    verifyDepth?: pulumi.Input<number>;
    verifyPeerCertificate?: pulumi.Input<boolean>;
}

export interface LoadBalancerListenerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoadBalancerLoadBalancerIpAddressDetail {
    ipAddress: pulumi.Input<string>;
    isPublic: pulumi.Input<boolean>;
    reservedIps: pulumi.Input<pulumi.Input<inputs.LoadBalancerLoadBalancerIpAddressDetailReservedIp>[]>;
}

export interface LoadBalancerLoadBalancerIpAddressDetailReservedIp {
    id: pulumi.Input<string>;
}

export interface LoadBalancerLoadBalancerReservedIp {
    id?: pulumi.Input<string>;
}

export interface LoadBalancerLoadBalancerRoutingPolicyRule {
    actions: pulumi.Input<pulumi.Input<inputs.LoadBalancerLoadBalancerRoutingPolicyRuleAction>[]>;
    condition: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface LoadBalancerLoadBalancerRoutingPolicyRuleAction {
    backendSetName: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface LoadBalancerLoadBalancerRoutingPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoadBalancerLoadBalancerShapeDetails {
    maximumBandwidthInMbps: pulumi.Input<number>;
    minimumBandwidthInMbps: pulumi.Input<number>;
}

export interface LoadBalancerLoadBalancerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoadBalancerPathRouteSetPathRoute {
    backendSetName: pulumi.Input<string>;
    path: pulumi.Input<string>;
    pathMatchType: pulumi.Input<inputs.LoadBalancerPathRouteSetPathRoutePathMatchType>;
}

export interface LoadBalancerPathRouteSetPathRoutePathMatchType {
    matchType: pulumi.Input<string>;
}

export interface LoadBalancerPathRouteSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoadBalancerReservedIp {
    id?: pulumi.Input<string>;
}

export interface LoadBalancerRuleSetItem {
    action: pulumi.Input<string>;
    allowedMethods?: pulumi.Input<pulumi.Input<string>[]>;
    areInvalidCharactersAllowed?: pulumi.Input<boolean>;
    conditions?: pulumi.Input<pulumi.Input<inputs.LoadBalancerRuleSetItemCondition>[]>;
    defaultMaxConnections?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    header?: pulumi.Input<string>;
    httpLargeHeaderSizeInKb?: pulumi.Input<number>;
    ipMaxConnections?: pulumi.Input<pulumi.Input<inputs.LoadBalancerRuleSetItemIpMaxConnection>[]>;
    prefix?: pulumi.Input<string>;
    redirectUri?: pulumi.Input<inputs.LoadBalancerRuleSetItemRedirectUri>;
    responseCode?: pulumi.Input<number>;
    statusCode?: pulumi.Input<number>;
    suffix?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface LoadBalancerRuleSetItemCondition {
    attributeName: pulumi.Input<string>;
    attributeValue: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
}

export interface LoadBalancerRuleSetItemIpMaxConnection {
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    maxConnections?: pulumi.Input<number>;
}

export interface LoadBalancerRuleSetItemRedirectUri {
    host?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
}

export interface LoadBalancerRuleSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoadBalancerShapeDetails {
    maximumBandwidthInMbps: pulumi.Input<number>;
    minimumBandwidthInMbps: pulumi.Input<number>;
}

export interface LoadBalancerSslCipherSuiteTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoadBalancerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsLogAnalyticsEntityMetadata {
    items?: pulumi.Input<pulumi.Input<inputs.LogAnalyticsLogAnalyticsEntityMetadataItem>[]>;
}

export interface LogAnalyticsLogAnalyticsEntityMetadataItem {
    name?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface LogAnalyticsLogAnalyticsEntityTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsLogAnalyticsImportCustomContentChangeList {
    conflictFieldDisplayNames: pulumi.Input<pulumi.Input<string>[]>;
    conflictParserNames: pulumi.Input<pulumi.Input<string>[]>;
    conflictSourceNames: pulumi.Input<pulumi.Input<string>[]>;
    createdFieldDisplayNames: pulumi.Input<pulumi.Input<string>[]>;
    createdParserNames: pulumi.Input<pulumi.Input<string>[]>;
    createdSourceNames: pulumi.Input<pulumi.Input<string>[]>;
    updatedFieldDisplayNames: pulumi.Input<pulumi.Input<string>[]>;
    updatedParserNames: pulumi.Input<pulumi.Input<string>[]>;
    updatedSourceNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LogAnalyticsLogAnalyticsImportCustomContentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsLogAnalyticsLogGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsLogAnalyticsObjectCollectionRuleOverride {
    matchType?: pulumi.Input<string>;
    matchValue?: pulumi.Input<string>;
    propertyName?: pulumi.Input<string>;
    propertyValue?: pulumi.Input<string>;
}

export interface LogAnalyticsLogAnalyticsObjectCollectionRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsLogAnalyticsPreferencesManagementItem {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface LogAnalyticsLogAnalyticsPreferencesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsLogAnalyticsResourceCategoriesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsLogAnalyticsUnprocessedDataBucketManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsNamespaceIngestTimeRuleAction {
    compartmentId: pulumi.Input<string>;
    dimensions?: pulumi.Input<pulumi.Input<string>[]>;
    metricName: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LogAnalyticsNamespaceIngestTimeRuleConditions {
    additionalConditions?: pulumi.Input<pulumi.Input<inputs.LogAnalyticsNamespaceIngestTimeRuleConditionsAdditionalCondition>[]>;
    fieldName: pulumi.Input<string>;
    fieldOperator: pulumi.Input<string>;
    fieldValue: pulumi.Input<string>;
    kind: pulumi.Input<string>;
}

export interface LogAnalyticsNamespaceIngestTimeRuleConditionsAdditionalCondition {
    conditionField: pulumi.Input<string>;
    conditionOperator: pulumi.Input<string>;
    conditionValue: pulumi.Input<string>;
}

export interface LogAnalyticsNamespaceIngestTimeRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsNamespaceIngestTimeRulesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsNamespaceScheduledTaskAction {
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    dataType?: pulumi.Input<string>;
    metricExtraction?: pulumi.Input<inputs.LogAnalyticsNamespaceScheduledTaskActionMetricExtraction>;
    purgeCompartmentId?: pulumi.Input<string>;
    purgeDuration?: pulumi.Input<string>;
    queryString?: pulumi.Input<string>;
    savedSearchId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LogAnalyticsNamespaceScheduledTaskActionMetricExtraction {
    compartmentId?: pulumi.Input<string>;
    metricName?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
}

export interface LogAnalyticsNamespaceScheduledTaskSchedules {
    schedules: pulumi.Input<pulumi.Input<inputs.LogAnalyticsNamespaceScheduledTaskSchedulesSchedule>[]>;
}

export interface LogAnalyticsNamespaceScheduledTaskSchedulesSchedule {
    expression?: pulumi.Input<string>;
    misfirePolicy?: pulumi.Input<string>;
    recurringInterval?: pulumi.Input<string>;
    repeatCount?: pulumi.Input<number>;
    timeZone?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LogAnalyticsNamespaceScheduledTaskTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsNamespaceTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoggingLogConfiguration {
    compartmentId?: pulumi.Input<string>;
    source: pulumi.Input<inputs.LoggingLogConfigurationSource>;
}

export interface LoggingLogConfigurationSource {
    category: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    resource: pulumi.Input<string>;
    service: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface LoggingLogGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoggingLogSavedSearchTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoggingLogTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationGroupAssociation {
    groupLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfiguration {
    applicationConfigurations?: pulumi.Input<pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfiguration>[]>;
    configurationType: pulumi.Input<string>;
    destination?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationDestination>;
    sources?: pulumi.Input<pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationSource>[]>;
    unifiedAgentConfigurationFilters?: pulumi.Input<pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilter>[]>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfiguration {
    destination: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationDestination>;
    source?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSource>;
    sourceType: pulumi.Input<string>;
    sources?: pulumi.Input<pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSource>[]>;
    unifiedAgentConfigurationFilter?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationDestination {
    compartmentId?: pulumi.Input<string>;
    metricsNamespace?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSource {
    advancedOptions?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceAdvancedOptions>;
    name?: pulumi.Input<string>;
    parser?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParser>;
    paths?: pulumi.Input<pulumi.Input<string>[]>;
    sourceType?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceAdvancedOptions {
    isReadFromHead?: pulumi.Input<boolean>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParser {
    delimiter?: pulumi.Input<string>;
    expression?: pulumi.Input<string>;
    fieldTimeKey?: pulumi.Input<string>;
    formatFirstline?: pulumi.Input<string>;
    formats?: pulumi.Input<pulumi.Input<string>[]>;
    grokFailureKey?: pulumi.Input<string>;
    grokNameKey?: pulumi.Input<string>;
    isEstimateCurrentEvent?: pulumi.Input<boolean>;
    isKeepTimeKey?: pulumi.Input<boolean>;
    isMergeCriFields?: pulumi.Input<boolean>;
    isNullEmptyString?: pulumi.Input<boolean>;
    isSupportColonlessIdent?: pulumi.Input<boolean>;
    isWithPriority?: pulumi.Input<boolean>;
    keys?: pulumi.Input<pulumi.Input<string>[]>;
    messageFormat?: pulumi.Input<string>;
    messageKey?: pulumi.Input<string>;
    multiLineStartRegexp?: pulumi.Input<string>;
    nestedParser?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserNestedParser>;
    nullValuePattern?: pulumi.Input<string>;
    parseNested?: pulumi.Input<boolean>;
    parserType: pulumi.Input<string>;
    patterns?: pulumi.Input<pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserPattern>[]>;
    recordInput?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserRecordInput>;
    rfc5424timeFormat?: pulumi.Input<string>;
    separator?: pulumi.Input<string>;
    syslogParserType?: pulumi.Input<string>;
    timeFormat?: pulumi.Input<string>;
    timeType?: pulumi.Input<string>;
    timeoutInMilliseconds?: pulumi.Input<number>;
    types?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserNestedParser {
    fieldTimeKey?: pulumi.Input<string>;
    isKeepTimeKey?: pulumi.Input<boolean>;
    parseNested?: pulumi.Input<boolean>;
    separator?: pulumi.Input<string>;
    timeFormat?: pulumi.Input<string>;
    timeType?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserPattern {
    fieldTimeFormat?: pulumi.Input<string>;
    fieldTimeKey?: pulumi.Input<string>;
    fieldTimeZone?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pattern?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserRecordInput {
    dimensions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    namespace?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter {
    allowLists?: pulumi.Input<pulumi.Input<string>[]>;
    denyLists?: pulumi.Input<pulumi.Input<string>[]>;
    filterType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationDestination {
    logObjectId: pulumi.Input<string>;
    operationalMetricsConfiguration?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationDestinationOperationalMetricsConfiguration>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationDestinationOperationalMetricsConfiguration {
    destination: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationDestinationOperationalMetricsConfigurationDestination>;
    source: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationDestinationOperationalMetricsConfigurationSource>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationDestinationOperationalMetricsConfigurationDestination {
    compartmentId: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationDestinationOperationalMetricsConfigurationSource {
    metrics?: pulumi.Input<pulumi.Input<string>[]>;
    recordInput: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationDestinationOperationalMetricsConfigurationSourceRecordInput>;
    type: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationDestinationOperationalMetricsConfigurationSourceRecordInput {
    namespace: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationSource {
    advancedOptions?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationSourceAdvancedOptions>;
    channels?: pulumi.Input<pulumi.Input<string>[]>;
    customPlugin?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parser?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationSourceParser>;
    paths?: pulumi.Input<pulumi.Input<string>[]>;
    sourceType: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationSourceAdvancedOptions {
    isReadFromHead?: pulumi.Input<boolean>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationSourceParser {
    delimiter?: pulumi.Input<string>;
    expression?: pulumi.Input<string>;
    fieldTimeKey?: pulumi.Input<string>;
    formatFirstline?: pulumi.Input<string>;
    formats?: pulumi.Input<pulumi.Input<string>[]>;
    grokFailureKey?: pulumi.Input<string>;
    grokNameKey?: pulumi.Input<string>;
    isEstimateCurrentEvent?: pulumi.Input<boolean>;
    isKeepTimeKey?: pulumi.Input<boolean>;
    isMergeCriFields?: pulumi.Input<boolean>;
    isNullEmptyString?: pulumi.Input<boolean>;
    isSupportColonlessIdent?: pulumi.Input<boolean>;
    isWithPriority?: pulumi.Input<boolean>;
    keys?: pulumi.Input<pulumi.Input<string>[]>;
    messageFormat?: pulumi.Input<string>;
    messageKey?: pulumi.Input<string>;
    multiLineStartRegexp?: pulumi.Input<string>;
    nestedParser?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationSourceParserNestedParser>;
    nullValuePattern?: pulumi.Input<string>;
    parseNested?: pulumi.Input<boolean>;
    parserType: pulumi.Input<string>;
    patterns?: pulumi.Input<pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationSourceParserPattern>[]>;
    recordInput?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationSourceParserRecordInput>;
    rfc5424timeFormat?: pulumi.Input<string>;
    separator?: pulumi.Input<string>;
    syslogParserType?: pulumi.Input<string>;
    timeFormat?: pulumi.Input<string>;
    timeType?: pulumi.Input<string>;
    timeoutInMilliseconds?: pulumi.Input<number>;
    types?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationSourceParserNestedParser {
    fieldTimeKey?: pulumi.Input<string>;
    isKeepTimeKey?: pulumi.Input<boolean>;
    parseNested?: pulumi.Input<boolean>;
    separator?: pulumi.Input<string>;
    timeFormat?: pulumi.Input<string>;
    timeType?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationSourceParserPattern {
    fieldTimeFormat?: pulumi.Input<string>;
    fieldTimeKey?: pulumi.Input<string>;
    fieldTimeZone?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pattern?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationSourceParserRecordInput {
    dimensions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    namespace?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilter {
    allowLists?: pulumi.Input<pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterAllowList>[]>;
    customFilterType?: pulumi.Input<string>;
    customSections?: pulumi.Input<pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterCustomSection>[]>;
    denyLists?: pulumi.Input<pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterDenyList>[]>;
    emitInvalidRecordToError?: pulumi.Input<boolean>;
    filterType: pulumi.Input<string>;
    hashValueField?: pulumi.Input<string>;
    injectKeyPrefix?: pulumi.Input<string>;
    isAutoTypecastEnabled?: pulumi.Input<boolean>;
    isRenewRecordEnabled?: pulumi.Input<boolean>;
    isRubyEnabled?: pulumi.Input<boolean>;
    keepKeys?: pulumi.Input<pulumi.Input<string>[]>;
    keyName?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    params?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    parser?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterParser>;
    recordLists?: pulumi.Input<pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterRecordList>[]>;
    removeKeyNameField?: pulumi.Input<boolean>;
    removeKeys?: pulumi.Input<pulumi.Input<string>[]>;
    renewTimeKey?: pulumi.Input<string>;
    replaceInvalidSequence?: pulumi.Input<boolean>;
    reserveData?: pulumi.Input<boolean>;
    reserveTime?: pulumi.Input<boolean>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterAllowList {
    key?: pulumi.Input<string>;
    pattern?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterCustomSection {
    name?: pulumi.Input<string>;
    params?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterDenyList {
    key?: pulumi.Input<string>;
    pattern?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterParser {
    delimiter?: pulumi.Input<string>;
    expression?: pulumi.Input<string>;
    fieldTimeKey?: pulumi.Input<string>;
    formatFirstline?: pulumi.Input<string>;
    formats?: pulumi.Input<pulumi.Input<string>[]>;
    grokFailureKey?: pulumi.Input<string>;
    grokNameKey?: pulumi.Input<string>;
    isEstimateCurrentEvent?: pulumi.Input<boolean>;
    isKeepTimeKey?: pulumi.Input<boolean>;
    isMergeCriFields?: pulumi.Input<boolean>;
    isNullEmptyString?: pulumi.Input<boolean>;
    isSupportColonlessIdent?: pulumi.Input<boolean>;
    isWithPriority?: pulumi.Input<boolean>;
    keys?: pulumi.Input<pulumi.Input<string>[]>;
    messageFormat?: pulumi.Input<string>;
    messageKey?: pulumi.Input<string>;
    multiLineStartRegexp?: pulumi.Input<string>;
    nestedParser?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterParserNestedParser>;
    nullValuePattern?: pulumi.Input<string>;
    parseNested?: pulumi.Input<boolean>;
    parserType: pulumi.Input<string>;
    patterns?: pulumi.Input<pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterParserPattern>[]>;
    recordInput?: pulumi.Input<inputs.LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterParserRecordInput>;
    rfc5424timeFormat?: pulumi.Input<string>;
    separator?: pulumi.Input<string>;
    syslogParserType?: pulumi.Input<string>;
    timeFormat?: pulumi.Input<string>;
    timeType?: pulumi.Input<string>;
    timeoutInMilliseconds?: pulumi.Input<number>;
    types?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterParserNestedParser {
    fieldTimeKey?: pulumi.Input<string>;
    isKeepTimeKey?: pulumi.Input<boolean>;
    parseNested?: pulumi.Input<boolean>;
    separator?: pulumi.Input<string>;
    timeFormat?: pulumi.Input<string>;
    timeType?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterParserPattern {
    fieldTimeFormat?: pulumi.Input<string>;
    fieldTimeKey?: pulumi.Input<string>;
    fieldTimeZone?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pattern?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterParserRecordInput {
    dimensions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    namespace?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationServiceConfigurationUnifiedAgentConfigurationFilterRecordList {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface LoggingUnifiedAgentConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ManagementAgentManagementAgentDataSourceList {
    allowMetrics: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    connectionTimeout: pulumi.Input<number>;
    isDaemonSet: pulumi.Input<boolean>;
    key: pulumi.Input<string>;
    metricDimensions: pulumi.Input<pulumi.Input<inputs.ManagementAgentManagementAgentDataSourceListMetricDimension>[]>;
    name: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    proxyUrl: pulumi.Input<string>;
    readDataLimit: pulumi.Input<number>;
    readTimeout: pulumi.Input<number>;
    resourceGroup: pulumi.Input<string>;
    scheduleMins: pulumi.Input<number>;
    state: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    type: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface ManagementAgentManagementAgentDataSourceListMetricDimension {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ManagementAgentManagementAgentDataSourceMetricDimension {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ManagementAgentManagementAgentDataSourceSummaryList {
    isDaemonSet: pulumi.Input<boolean>;
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ManagementAgentManagementAgentDataSourceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ManagementAgentManagementAgentInstallKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ManagementAgentManagementAgentManagementAgentProperty {
    name: pulumi.Input<string>;
    units: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ManagementAgentManagementAgentPluginList {
    isEnabled: pulumi.Input<boolean>;
    pluginDisplayName: pulumi.Input<string>;
    pluginId: pulumi.Input<string>;
    pluginName: pulumi.Input<string>;
    pluginStatus: pulumi.Input<string>;
    pluginStatusMessage: pulumi.Input<string>;
    pluginVersion: pulumi.Input<string>;
}

export interface ManagementAgentManagementAgentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ManagementDashboardManagementDashboardsImportTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MarketplaceAcceptedAgreementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MarketplacePublicationIcon {
    contentUrl: pulumi.Input<string>;
    fileExtension: pulumi.Input<string>;
    mimeType: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface MarketplacePublicationPackageDetails {
    eulas: pulumi.Input<pulumi.Input<inputs.MarketplacePublicationPackageDetailsEula>[]>;
    imageId?: pulumi.Input<string>;
    operatingSystem: pulumi.Input<inputs.MarketplacePublicationPackageDetailsOperatingSystem>;
    packageType: pulumi.Input<string>;
    packageVersion: pulumi.Input<string>;
}

export interface MarketplacePublicationPackageDetailsEula {
    eulaType: pulumi.Input<string>;
    licenseText?: pulumi.Input<string>;
}

export interface MarketplacePublicationPackageDetailsOperatingSystem {
    name?: pulumi.Input<string>;
}

export interface MarketplacePublicationSupportContact {
    email?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    phone?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
}

export interface MarketplacePublicationSupportedOperatingSystem {
    name: pulumi.Input<string>;
}

export interface MarketplacePublicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MediaServicesMediaAssetLock {
    compartmentId: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    relatedResourceId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MediaServicesMediaAssetMediaAssetTag {
    type?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface MediaServicesMediaAssetMetadata {
    metadata: pulumi.Input<string>;
}

export interface MediaServicesMediaAssetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MediaServicesMediaWorkflowConfigurationLock {
    compartmentId: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    relatedResourceId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MediaServicesMediaWorkflowConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MediaServicesMediaWorkflowJobLock {
    compartmentId: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    relatedResourceId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MediaServicesMediaWorkflowJobOutput {
    assetType: pulumi.Input<string>;
    bucket: pulumi.Input<string>;
    id: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    object: pulumi.Input<string>;
}

export interface MediaServicesMediaWorkflowJobTaskLifecycleState {
    key: pulumi.Input<string>;
    lifecycleDetails: pulumi.Input<string>;
    state: pulumi.Input<string>;
}

export interface MediaServicesMediaWorkflowJobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MediaServicesMediaWorkflowLock {
    compartmentId: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    relatedResourceId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MediaServicesMediaWorkflowTask {
    enableParameterReference?: pulumi.Input<string>;
    enableWhenReferencedParameterEquals?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    key: pulumi.Input<string>;
    parameters: pulumi.Input<string>;
    prerequisites?: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface MediaServicesMediaWorkflowTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MediaServicesStreamCdnConfigConfig {
    edgeHostname?: pulumi.Input<string>;
    edgePathPrefix?: pulumi.Input<string>;
    edgeTokenKey?: pulumi.Input<string>;
    edgeTokenSalt?: pulumi.Input<string>;
    isEdgeTokenAuth?: pulumi.Input<boolean>;
    originAuthSecretKeyA?: pulumi.Input<string>;
    originAuthSecretKeyB?: pulumi.Input<string>;
    originAuthSecretKeyNonceA?: pulumi.Input<string>;
    originAuthSecretKeyNonceB?: pulumi.Input<string>;
    originAuthSignEncryption?: pulumi.Input<string>;
    originAuthSignType?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MediaServicesStreamCdnConfigLock {
    compartmentId: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    relatedResourceId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MediaServicesStreamCdnConfigTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MediaServicesStreamDistributionChannelLock {
    compartmentId: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    relatedResourceId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MediaServicesStreamDistributionChannelTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MediaServicesStreamPackagingConfigEncryption {
    algorithm: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
}

export interface MediaServicesStreamPackagingConfigLock {
    compartmentId: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    relatedResourceId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MediaServicesStreamPackagingConfigTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MeteringComputationCustomTableSavedCustomTable {
    columnGroupBies?: pulumi.Input<pulumi.Input<string>[]>;
    compartmentDepth?: pulumi.Input<number>;
    displayName: pulumi.Input<string>;
    groupByTags?: pulumi.Input<pulumi.Input<inputs.MeteringComputationCustomTableSavedCustomTableGroupByTag>[]>;
    rowGroupBies?: pulumi.Input<pulumi.Input<string>[]>;
    version?: pulumi.Input<number>;
}

export interface MeteringComputationCustomTableSavedCustomTableGroupByTag {
    key?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface MeteringComputationCustomTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MeteringComputationQueryQueryDefinition {
    costAnalysisUi: pulumi.Input<inputs.MeteringComputationQueryQueryDefinitionCostAnalysisUi>;
    displayName: pulumi.Input<string>;
    reportQuery: pulumi.Input<inputs.MeteringComputationQueryQueryDefinitionReportQuery>;
    version: pulumi.Input<number>;
}

export interface MeteringComputationQueryQueryDefinitionCostAnalysisUi {
    graph?: pulumi.Input<string>;
    isCumulativeGraph?: pulumi.Input<boolean>;
}

export interface MeteringComputationQueryQueryDefinitionReportQuery {
    compartmentDepth?: pulumi.Input<number>;
    dateRangeName?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    forecast?: pulumi.Input<inputs.MeteringComputationQueryQueryDefinitionReportQueryForecast>;
    granularity: pulumi.Input<string>;
    groupBies?: pulumi.Input<pulumi.Input<string>[]>;
    groupByTags?: pulumi.Input<pulumi.Input<inputs.MeteringComputationQueryQueryDefinitionReportQueryGroupByTag>[]>;
    isAggregateByTime?: pulumi.Input<boolean>;
    queryType?: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
    timeUsageEnded?: pulumi.Input<string>;
    timeUsageStarted?: pulumi.Input<string>;
}

export interface MeteringComputationQueryQueryDefinitionReportQueryForecast {
    forecastType?: pulumi.Input<string>;
    timeForecastEnded: pulumi.Input<string>;
    timeForecastStarted?: pulumi.Input<string>;
}

export interface MeteringComputationQueryQueryDefinitionReportQueryGroupByTag {
    key?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface MeteringComputationQueryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MeteringComputationScheduleQueryProperties {
    compartmentDepth?: pulumi.Input<number>;
    dateRange: pulumi.Input<inputs.MeteringComputationScheduleQueryPropertiesDateRange>;
    filter?: pulumi.Input<string>;
    granularity: pulumi.Input<string>;
    groupBies?: pulumi.Input<pulumi.Input<string>[]>;
    groupByTags?: pulumi.Input<pulumi.Input<inputs.MeteringComputationScheduleQueryPropertiesGroupByTag>[]>;
    isAggregateByTime?: pulumi.Input<boolean>;
    queryType?: pulumi.Input<string>;
}

export interface MeteringComputationScheduleQueryPropertiesDateRange {
    dateRangeType: pulumi.Input<string>;
    dynamicDateRangeType?: pulumi.Input<string>;
    timeUsageEnded?: pulumi.Input<string>;
    timeUsageStarted?: pulumi.Input<string>;
}

export interface MeteringComputationScheduleQueryPropertiesGroupByTag {
    key?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface MeteringComputationScheduleResultLocation {
    bucket: pulumi.Input<string>;
    locationType: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    region: pulumi.Input<string>;
}

export interface MeteringComputationScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MeteringComputationUsageCarbonEmissionGroupByTag {
    key?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface MeteringComputationUsageCarbonEmissionItem {
    ad: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    compartmentName: pulumi.Input<string>;
    compartmentPath: pulumi.Input<string>;
    computedCarbonEmission: pulumi.Input<number>;
    emissionCalculationMethod: pulumi.Input<string>;
    platform: pulumi.Input<string>;
    region: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
    resourceName: pulumi.Input<string>;
    service: pulumi.Input<string>;
    skuName: pulumi.Input<string>;
    skuPartNumber: pulumi.Input<string>;
    subscriptionId: pulumi.Input<string>;
    tags: pulumi.Input<pulumi.Input<inputs.MeteringComputationUsageCarbonEmissionItemTag>[]>;
    tenantId: pulumi.Input<string>;
    tenantName: pulumi.Input<string>;
    timeUsageEnded: pulumi.Input<string>;
    timeUsageStarted: pulumi.Input<string>;
}

export interface MeteringComputationUsageCarbonEmissionItemTag {
    key: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface MeteringComputationUsageCarbonEmissionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MeteringComputationUsageCarbonEmissionsQueryQueryDefinition {
    costAnalysisUi: pulumi.Input<inputs.MeteringComputationUsageCarbonEmissionsQueryQueryDefinitionCostAnalysisUi>;
    displayName: pulumi.Input<string>;
    reportQuery: pulumi.Input<inputs.MeteringComputationUsageCarbonEmissionsQueryQueryDefinitionReportQuery>;
    version: pulumi.Input<number>;
}

export interface MeteringComputationUsageCarbonEmissionsQueryQueryDefinitionCostAnalysisUi {
    graph?: pulumi.Input<string>;
    isCumulativeGraph?: pulumi.Input<boolean>;
}

export interface MeteringComputationUsageCarbonEmissionsQueryQueryDefinitionReportQuery {
    compartmentDepth?: pulumi.Input<number>;
    dateRangeName?: pulumi.Input<string>;
    groupBies?: pulumi.Input<pulumi.Input<string>[]>;
    groupByTags?: pulumi.Input<pulumi.Input<inputs.MeteringComputationUsageCarbonEmissionsQueryQueryDefinitionReportQueryGroupByTag>[]>;
    isAggregateByTime?: pulumi.Input<boolean>;
    tenantId: pulumi.Input<string>;
    timeUsageEnded?: pulumi.Input<string>;
    timeUsageStarted?: pulumi.Input<string>;
    usageCarbonEmissionsQueryFilter?: pulumi.Input<string>;
}

export interface MeteringComputationUsageCarbonEmissionsQueryQueryDefinitionReportQueryGroupByTag {
    key?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface MeteringComputationUsageCarbonEmissionsQueryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MeteringComputationUsageForecast {
    forecastType?: pulumi.Input<string>;
    timeForecastEnded: pulumi.Input<string>;
    timeForecastStarted?: pulumi.Input<string>;
}

export interface MeteringComputationUsageGroupByTag {
    key?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface MeteringComputationUsageItem {
    ad: pulumi.Input<string>;
    attributedCost: pulumi.Input<string>;
    attributedUsage: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    compartmentName: pulumi.Input<string>;
    compartmentPath: pulumi.Input<string>;
    computedAmount: pulumi.Input<number>;
    computedQuantity: pulumi.Input<number>;
    currency: pulumi.Input<string>;
    discount: pulumi.Input<number>;
    isForecast: pulumi.Input<boolean>;
    listRate: pulumi.Input<number>;
    overage: pulumi.Input<string>;
    overagesFlag: pulumi.Input<string>;
    platform: pulumi.Input<string>;
    region: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
    resourceName: pulumi.Input<string>;
    service: pulumi.Input<string>;
    shape: pulumi.Input<string>;
    skuName: pulumi.Input<string>;
    skuPartNumber: pulumi.Input<string>;
    subscriptionId: pulumi.Input<string>;
    tags: pulumi.Input<pulumi.Input<inputs.MeteringComputationUsageItemTag>[]>;
    tenantId: pulumi.Input<string>;
    tenantName: pulumi.Input<string>;
    timeUsageEnded: pulumi.Input<string>;
    timeUsageStarted: pulumi.Input<string>;
    unit: pulumi.Input<string>;
    unitPrice: pulumi.Input<number>;
    weight: pulumi.Input<number>;
}

export interface MeteringComputationUsageItemTag {
    key: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface MeteringComputationUsageStatementEmailRecipientsGroupRecipientsList {
    emailId: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
    state: pulumi.Input<string>;
}

export interface MeteringComputationUsageStatementEmailRecipientsGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MeteringComputationUsageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitoringAlarmOverride {
    body?: pulumi.Input<string>;
    pendingDuration?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
    ruleName?: pulumi.Input<string>;
    severity?: pulumi.Input<string>;
}

export interface MonitoringAlarmSuppression {
    description?: pulumi.Input<string>;
    timeSuppressFrom: pulumi.Input<string>;
    timeSuppressUntil: pulumi.Input<string>;
}

export interface MonitoringAlarmSuppressionAlarmSuppressionTarget {
    alarmId: pulumi.Input<string>;
    targetType: pulumi.Input<string>;
}

export interface MonitoringAlarmSuppressionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitoringAlarmTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MysqlChannelSource {
    anonymousTransactionsHandling?: pulumi.Input<inputs.MysqlChannelSourceAnonymousTransactionsHandling>;
    hostname: pulumi.Input<string>;
    password: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    sourceType: pulumi.Input<string>;
    sslCaCertificate?: pulumi.Input<inputs.MysqlChannelSourceSslCaCertificate>;
    sslMode: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface MysqlChannelSourceAnonymousTransactionsHandling {
    lastConfiguredLogFilename?: pulumi.Input<string>;
    lastConfiguredLogOffset?: pulumi.Input<string>;
    policy: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}

export interface MysqlChannelSourceSslCaCertificate {
    certificateType: pulumi.Input<string>;
    contents: pulumi.Input<string>;
}

export interface MysqlChannelTarget {
    applierUsername?: pulumi.Input<string>;
    channelName?: pulumi.Input<string>;
    dbSystemId: pulumi.Input<string>;
    delayInSeconds?: pulumi.Input<number>;
    filters?: pulumi.Input<pulumi.Input<inputs.MysqlChannelTargetFilter>[]>;
    tablesWithoutPrimaryKeyHandling?: pulumi.Input<string>;
    targetType: pulumi.Input<string>;
}

export interface MysqlChannelTargetFilter {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface MysqlChannelTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MysqlHeatWaveClusterClusterNode {
    nodeId: pulumi.Input<string>;
    state: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
}

export interface MysqlHeatWaveClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MysqlMysqlBackupDbSystemSnapshot {
    adminUsername: pulumi.Input<string>;
    availabilityDomain: pulumi.Input<string>;
    backupPolicies: pulumi.Input<pulumi.Input<inputs.MysqlMysqlBackupDbSystemSnapshotBackupPolicy>[]>;
    compartmentId: pulumi.Input<string>;
    configurationId: pulumi.Input<string>;
    crashRecovery: pulumi.Input<string>;
    dataStorageSizeInGb: pulumi.Input<number>;
    dataStorages: pulumi.Input<pulumi.Input<inputs.MysqlMysqlBackupDbSystemSnapshotDataStorage>[]>;
    databaseManagement: pulumi.Input<string>;
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    deletionPolicies: pulumi.Input<pulumi.Input<inputs.MysqlMysqlBackupDbSystemSnapshotDeletionPolicy>[]>;
    description: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    endpoints: pulumi.Input<pulumi.Input<inputs.MysqlMysqlBackupDbSystemSnapshotEndpoint>[]>;
    faultDomain: pulumi.Input<string>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostnameLabel: pulumi.Input<string>;
    id: pulumi.Input<string>;
    ipAddress: pulumi.Input<string>;
    isHighlyAvailable: pulumi.Input<boolean>;
    maintenances: pulumi.Input<pulumi.Input<inputs.MysqlMysqlBackupDbSystemSnapshotMaintenance>[]>;
    mysqlVersion: pulumi.Input<string>;
    port: pulumi.Input<number>;
    portX: pulumi.Input<number>;
    region: pulumi.Input<string>;
    secureConnections: pulumi.Input<pulumi.Input<inputs.MysqlMysqlBackupDbSystemSnapshotSecureConnection>[]>;
    shapeName: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface MysqlMysqlBackupDbSystemSnapshotBackupPolicy {
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isEnabled: pulumi.Input<boolean>;
    pitrPolicies: pulumi.Input<pulumi.Input<inputs.MysqlMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy>[]>;
    retentionInDays: pulumi.Input<number>;
    windowStartTime: pulumi.Input<string>;
}

export interface MysqlMysqlBackupDbSystemSnapshotBackupPolicyPitrPolicy {
    isEnabled: pulumi.Input<boolean>;
}

export interface MysqlMysqlBackupDbSystemSnapshotDataStorage {
    allocatedStorageSizeInGbs: pulumi.Input<number>;
    dataStorageSizeInGb: pulumi.Input<number>;
    dataStorageSizeLimitInGbs: pulumi.Input<number>;
    isAutoExpandStorageEnabled: pulumi.Input<boolean>;
    maxStorageSizeInGbs: pulumi.Input<number>;
}

export interface MysqlMysqlBackupDbSystemSnapshotDeletionPolicy {
    automaticBackupRetention: pulumi.Input<string>;
    finalBackup: pulumi.Input<string>;
    isDeleteProtected: pulumi.Input<boolean>;
}

export interface MysqlMysqlBackupDbSystemSnapshotEndpoint {
    hostname: pulumi.Input<string>;
    ipAddress: pulumi.Input<string>;
    modes: pulumi.Input<pulumi.Input<string>[]>;
    port: pulumi.Input<number>;
    portX: pulumi.Input<number>;
    resourceId: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    status: pulumi.Input<string>;
    statusDetails: pulumi.Input<string>;
}

export interface MysqlMysqlBackupDbSystemSnapshotMaintenance {
    windowStartTime: pulumi.Input<string>;
}

export interface MysqlMysqlBackupDbSystemSnapshotSecureConnection {
    certificateGenerationType: pulumi.Input<string>;
    certificateId: pulumi.Input<string>;
}

export interface MysqlMysqlBackupDbSystemSnapshotSummary {
    displayName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}

export interface MysqlMysqlBackupSourceDetails {
    backupId: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    region: pulumi.Input<string>;
}

export interface MysqlMysqlBackupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MysqlMysqlConfigurationInitVariables {
    lowerCaseTableNames?: pulumi.Input<string>;
}

export interface MysqlMysqlConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MysqlMysqlConfigurationVariables {
    autocommit?: pulumi.Input<boolean>;
    bigTables?: pulumi.Input<boolean>;
    binlogExpireLogsSeconds?: pulumi.Input<number>;
    binlogRowMetadata?: pulumi.Input<string>;
    binlogRowValueOptions?: pulumi.Input<string>;
    binlogTransactionCompression?: pulumi.Input<boolean>;
    completionType?: pulumi.Input<string>;
    connectTimeout?: pulumi.Input<number>;
    connectionMemoryChunkSize?: pulumi.Input<number>;
    connectionMemoryLimit?: pulumi.Input<string>;
    cteMaxRecursionDepth?: pulumi.Input<string>;
    defaultAuthenticationPlugin?: pulumi.Input<string>;
    foreignKeyChecks?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    generatedRandomPasswordLength?: pulumi.Input<number>;
    globalConnectionMemoryLimit?: pulumi.Input<string>;
    globalConnectionMemoryTracking?: pulumi.Input<boolean>;
    groupReplicationConsistency?: pulumi.Input<string>;
    informationSchemaStatsExpiry?: pulumi.Input<number>;
    innodbBufferPoolDumpPct?: pulumi.Input<number>;
    innodbBufferPoolInstances?: pulumi.Input<number>;
    innodbBufferPoolSize?: pulumi.Input<string>;
    innodbDdlBufferSize?: pulumi.Input<string>;
    innodbDdlThreads?: pulumi.Input<number>;
    innodbFtEnableStopword?: pulumi.Input<boolean>;
    innodbFtMaxTokenSize?: pulumi.Input<number>;
    innodbFtMinTokenSize?: pulumi.Input<number>;
    innodbFtNumWordOptimize?: pulumi.Input<number>;
    innodbFtResultCacheLimit?: pulumi.Input<string>;
    innodbFtServerStopwordTable?: pulumi.Input<string>;
    innodbLockWaitTimeout?: pulumi.Input<number>;
    innodbLogWriterThreads?: pulumi.Input<boolean>;
    innodbMaxPurgeLag?: pulumi.Input<string>;
    innodbMaxPurgeLagDelay?: pulumi.Input<number>;
    innodbStatsPersistentSamplePages?: pulumi.Input<string>;
    innodbStatsTransientSamplePages?: pulumi.Input<string>;
    interactiveTimeout?: pulumi.Input<number>;
    localInfile?: pulumi.Input<boolean>;
    mandatoryRoles?: pulumi.Input<string>;
    maxAllowedPacket?: pulumi.Input<number>;
    maxBinlogCacheSize?: pulumi.Input<string>;
    maxConnectErrors?: pulumi.Input<string>;
    maxConnections?: pulumi.Input<number>;
    maxExecutionTime?: pulumi.Input<string>;
    maxHeapTableSize?: pulumi.Input<string>;
    maxPreparedStmtCount?: pulumi.Input<number>;
    mysqlFirewallMode?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    mysqlZstdDefaultCompressionLevel?: pulumi.Input<number>;
    mysqlxConnectTimeout?: pulumi.Input<number>;
    mysqlxDeflateDefaultCompressionLevel?: pulumi.Input<number>;
    mysqlxDeflateMaxClientCompressionLevel?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    mysqlxDocumentIdUniquePrefix?: pulumi.Input<number>;
    mysqlxEnableHelloNotice?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    mysqlxIdleWorkerThreadTimeout?: pulumi.Input<number>;
    mysqlxInteractiveTimeout?: pulumi.Input<number>;
    mysqlxLz4defaultCompressionLevel?: pulumi.Input<number>;
    mysqlxLz4maxClientCompressionLevel?: pulumi.Input<number>;
    mysqlxMaxAllowedPacket?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    mysqlxMinWorkerThreads?: pulumi.Input<number>;
    mysqlxReadTimeout?: pulumi.Input<number>;
    mysqlxWaitTimeout?: pulumi.Input<number>;
    mysqlxWriteTimeout?: pulumi.Input<number>;
    mysqlxZstdDefaultCompressionLevel?: pulumi.Input<number>;
    mysqlxZstdMaxClientCompressionLevel?: pulumi.Input<number>;
    netReadTimeout?: pulumi.Input<number>;
    netWriteTimeout?: pulumi.Input<number>;
    parserMaxMemSize?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    queryAllocBlockSize?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    queryPreallocSize?: pulumi.Input<string>;
    regexpTimeLimit?: pulumi.Input<number>;
    sortBufferSize?: pulumi.Input<string>;
    sqlMode?: pulumi.Input<string>;
    sqlRequirePrimaryKey?: pulumi.Input<boolean>;
    sqlWarnings?: pulumi.Input<boolean>;
    threadPoolDedicatedListeners?: pulumi.Input<boolean>;
    threadPoolMaxTransactionsLimit?: pulumi.Input<number>;
    timeZone?: pulumi.Input<string>;
    tmpTableSize?: pulumi.Input<string>;
    transactionIsolation?: pulumi.Input<string>;
    waitTimeout?: pulumi.Input<number>;
}

export interface MysqlMysqlDbSystemBackupPolicy {
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isEnabled?: pulumi.Input<boolean>;
    pitrPolicy?: pulumi.Input<inputs.MysqlMysqlDbSystemBackupPolicyPitrPolicy>;
    retentionInDays?: pulumi.Input<number>;
    windowStartTime?: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemBackupPolicyPitrPolicy {
    isEnabled?: pulumi.Input<boolean>;
}

export interface MysqlMysqlDbSystemChannel {
    compartmentId: pulumi.Input<string>;
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id: pulumi.Input<string>;
    isEnabled: pulumi.Input<boolean>;
    lifecycleDetails: pulumi.Input<string>;
    sources: pulumi.Input<pulumi.Input<inputs.MysqlMysqlDbSystemChannelSource>[]>;
    state: pulumi.Input<string>;
    targets: pulumi.Input<pulumi.Input<inputs.MysqlMysqlDbSystemChannelTarget>[]>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemChannelSource {
    anonymousTransactionsHandlings: pulumi.Input<pulumi.Input<inputs.MysqlMysqlDbSystemChannelSourceAnonymousTransactionsHandling>[]>;
    hostname: pulumi.Input<string>;
    port: pulumi.Input<number>;
    sourceType: pulumi.Input<string>;
    sslCaCertificates: pulumi.Input<pulumi.Input<inputs.MysqlMysqlDbSystemChannelSourceSslCaCertificate>[]>;
    sslMode: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemChannelSourceAnonymousTransactionsHandling {
    lastConfiguredLogFilename: pulumi.Input<string>;
    lastConfiguredLogOffset: pulumi.Input<string>;
    policy: pulumi.Input<string>;
    uuid: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemChannelSourceSslCaCertificate {
    certificateType: pulumi.Input<string>;
    contents: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemChannelTarget {
    applierUsername: pulumi.Input<string>;
    channelName: pulumi.Input<string>;
    dbSystemId: pulumi.Input<string>;
    delayInSeconds: pulumi.Input<number>;
    filters: pulumi.Input<pulumi.Input<inputs.MysqlMysqlDbSystemChannelTargetFilter>[]>;
    tablesWithoutPrimaryKeyHandling: pulumi.Input<string>;
    targetType: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemChannelTargetFilter {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemCurrentPlacement {
    availabilityDomain: pulumi.Input<string>;
    faultDomain: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemCustomerContact {
    email: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemDataStorage {
    allocatedStorageSizeInGbs?: pulumi.Input<number>;
    dataStorageSizeInGb?: pulumi.Input<number>;
    dataStorageSizeLimitInGbs?: pulumi.Input<number>;
    isAutoExpandStorageEnabled?: pulumi.Input<boolean>;
    maxStorageSizeInGbs?: pulumi.Input<number>;
}

export interface MysqlMysqlDbSystemDeletionPolicy {
    automaticBackupRetention?: pulumi.Input<string>;
    finalBackup?: pulumi.Input<string>;
    isDeleteProtected?: pulumi.Input<boolean>;
}

export interface MysqlMysqlDbSystemEndpoint {
    hostname: pulumi.Input<string>;
    ipAddress: pulumi.Input<string>;
    modes: pulumi.Input<pulumi.Input<string>[]>;
    port: pulumi.Input<number>;
    portX: pulumi.Input<number>;
    resourceId: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    status: pulumi.Input<string>;
    statusDetails: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemHeatWaveCluster {
    clusterSize: pulumi.Input<number>;
    isLakehouseEnabled: pulumi.Input<boolean>;
    shapeName: pulumi.Input<string>;
    state: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemMaintenance {
    windowStartTime: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemPointInTimeRecoveryDetail {
    timeEarliestRecoveryPoint: pulumi.Input<string>;
    timeLatestRecoveryPoint: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemSecureConnections {
    certificateGenerationType: pulumi.Input<string>;
    certificateId?: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemSource {
    backupId?: pulumi.Input<string>;
    dbSystemId?: pulumi.Input<string>;
    recoveryPoint?: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
    sourceUrl?: pulumi.Input<string>;
}

export interface MysqlMysqlDbSystemTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MysqlReplicaReplicaOverrides {
    configurationId?: pulumi.Input<string>;
    mysqlVersion?: pulumi.Input<string>;
    shapeName?: pulumi.Input<string>;
}

export interface MysqlReplicaSecureConnection {
    certificateGenerationType: pulumi.Input<string>;
    certificateId: pulumi.Input<string>;
}

export interface MysqlReplicaTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicyAddressListTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicyApplicationGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicyApplicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicyDecryptionProfileTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicyDecryptionRuleCondition {
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkFirewallNetworkFirewallPolicyDecryptionRulePosition {
    afterRule?: pulumi.Input<string>;
    beforeRule?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicyDecryptionRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicyMappedSecretTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicySecurityRuleCondition {
    applications?: pulumi.Input<pulumi.Input<string>[]>;
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    services?: pulumi.Input<pulumi.Input<string>[]>;
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    urls?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkFirewallNetworkFirewallPolicySecurityRulePosition {
    afterRule?: pulumi.Input<string>;
    beforeRule?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicySecurityRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicyServiceListTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicyServicePortRange {
    maximumPort?: pulumi.Input<number>;
    minimumPort: pulumi.Input<number>;
}

export interface NetworkFirewallNetworkFirewallPolicyServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicyTunnelInspectionRuleCondition {
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkFirewallNetworkFirewallPolicyTunnelInspectionRulePosition {
    afterRule?: pulumi.Input<string>;
    beforeRule?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicyTunnelInspectionRuleProfile {
    mustReturnTrafficToSource?: pulumi.Input<boolean>;
}

export interface NetworkFirewallNetworkFirewallPolicyTunnelInspectionRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicyUrlListTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallPolicyUrlListUrl {
    pattern: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface NetworkFirewallNetworkFirewallTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkLoadBalancerBackendSetBackend {
    ipAddress: pulumi.Input<string>;
    isBackup: pulumi.Input<boolean>;
    isDrain: pulumi.Input<boolean>;
    isOffline: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    port: pulumi.Input<number>;
    targetId: pulumi.Input<string>;
    weight: pulumi.Input<number>;
}

export interface NetworkLoadBalancerBackendSetHealthChecker {
    dns?: pulumi.Input<inputs.NetworkLoadBalancerBackendSetHealthCheckerDns>;
    intervalInMillis?: pulumi.Input<number>;
    port?: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    requestData?: pulumi.Input<string>;
    responseBodyRegex?: pulumi.Input<string>;
    responseData?: pulumi.Input<string>;
    retries?: pulumi.Input<number>;
    returnCode?: pulumi.Input<number>;
    timeoutInMillis?: pulumi.Input<number>;
    urlPath?: pulumi.Input<string>;
}

export interface NetworkLoadBalancerBackendSetHealthCheckerDns {
    domainName: pulumi.Input<string>;
    queryClass?: pulumi.Input<string>;
    queryType?: pulumi.Input<string>;
    rcodes?: pulumi.Input<pulumi.Input<string>[]>;
    transportProtocol?: pulumi.Input<string>;
}

export interface NetworkLoadBalancerBackendSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkLoadBalancerBackendTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkLoadBalancerListenerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkLoadBalancerNetworkLoadBalancerIpAddress {
    ipAddress: pulumi.Input<string>;
    ipVersion: pulumi.Input<string>;
    isPublic: pulumi.Input<boolean>;
    reservedIps: pulumi.Input<pulumi.Input<inputs.NetworkLoadBalancerNetworkLoadBalancerIpAddressReservedIp>[]>;
}

export interface NetworkLoadBalancerNetworkLoadBalancerIpAddressReservedIp {
    id: pulumi.Input<string>;
}

export interface NetworkLoadBalancerNetworkLoadBalancerReservedIp {
    id?: pulumi.Input<string>;
}

export interface NetworkLoadBalancerNetworkLoadBalancerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkLoadBalancerNetworkLoadBalancersBackendSetsUnifiedBackend {
    ipAddress?: pulumi.Input<string>;
    isBackup?: pulumi.Input<boolean>;
    isDrain?: pulumi.Input<boolean>;
    isOffline?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    targetId?: pulumi.Input<string>;
    weight?: pulumi.Input<number>;
}

export interface NetworkLoadBalancerNetworkLoadBalancersBackendSetsUnifiedHealthChecker {
    dns?: pulumi.Input<inputs.NetworkLoadBalancerNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns>;
    intervalInMillis?: pulumi.Input<number>;
    port?: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    requestData?: pulumi.Input<string>;
    responseBodyRegex?: pulumi.Input<string>;
    responseData?: pulumi.Input<string>;
    retries?: pulumi.Input<number>;
    returnCode?: pulumi.Input<number>;
    timeoutInMillis?: pulumi.Input<number>;
    urlPath?: pulumi.Input<string>;
}

export interface NetworkLoadBalancerNetworkLoadBalancersBackendSetsUnifiedHealthCheckerDns {
    domainName: pulumi.Input<string>;
    queryClass?: pulumi.Input<string>;
    queryType?: pulumi.Input<string>;
    rcodes?: pulumi.Input<pulumi.Input<string>[]>;
    transportProtocol?: pulumi.Input<string>;
}

export interface NetworkLoadBalancerNetworkLoadBalancersBackendSetsUnifiedTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NosqlIndexKey {
    columnName: pulumi.Input<string>;
    jsonFieldType?: pulumi.Input<string>;
    jsonPath?: pulumi.Input<string>;
}

export interface NosqlIndexTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NosqlTableReplica {
    capacityMode: pulumi.Input<string>;
    lifecycleDetails: pulumi.Input<string>;
    maxWriteUnits: pulumi.Input<number>;
    region: pulumi.Input<string>;
    state: pulumi.Input<string>;
    tableId: pulumi.Input<string>;
}

export interface NosqlTableReplicaTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NosqlTableSchema {
    columns: pulumi.Input<pulumi.Input<inputs.NosqlTableSchemaColumn>[]>;
    identities: pulumi.Input<pulumi.Input<inputs.NosqlTableSchemaIdentity>[]>;
    primaryKeys: pulumi.Input<pulumi.Input<string>[]>;
    shardKeys: pulumi.Input<pulumi.Input<string>[]>;
    ttl: pulumi.Input<number>;
}

export interface NosqlTableSchemaColumn {
    defaultValue: pulumi.Input<string>;
    isAsUuid: pulumi.Input<boolean>;
    isGenerated: pulumi.Input<boolean>;
    isNullable: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface NosqlTableSchemaIdentity {
    columnName: pulumi.Input<string>;
    isAlways: pulumi.Input<boolean>;
    isNull: pulumi.Input<boolean>;
}

export interface NosqlTableTableLimits {
    capacityMode?: pulumi.Input<string>;
    maxReadUnits: pulumi.Input<number>;
    maxStorageInGbs: pulumi.Input<number>;
    maxWriteUnits: pulumi.Input<number>;
}

export interface NosqlTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ObjectstorageBucketRetentionRule {
    displayName: pulumi.Input<string>;
    duration?: pulumi.Input<inputs.ObjectstorageBucketRetentionRuleDuration>;
    retentionRuleId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeModified?: pulumi.Input<string>;
    timeRuleLocked?: pulumi.Input<string>;
}

export interface ObjectstorageBucketRetentionRuleDuration {
    timeAmount: pulumi.Input<string>;
    timeUnit: pulumi.Input<string>;
}

export interface ObjectstorageBucketTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ObjectstorageNamespaceMetadataTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ObjectstorageObjectLifecyclePolicyRule {
    action: pulumi.Input<string>;
    isEnabled: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    objectNameFilter?: pulumi.Input<inputs.ObjectstorageObjectLifecyclePolicyRuleObjectNameFilter>;
    target?: pulumi.Input<string>;
    timeAmount: pulumi.Input<string>;
    timeUnit: pulumi.Input<string>;
}

export interface ObjectstorageObjectLifecyclePolicyRuleObjectNameFilter {
    exclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    inclusionPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    inclusionPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ObjectstorageObjectLifecyclePolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ObjectstorageObjectSourceUriDetails {
    bucket: pulumi.Input<string>;
    destinationObjectIfMatchEtag?: pulumi.Input<string>;
    destinationObjectIfNoneMatchEtag?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    object: pulumi.Input<string>;
    region: pulumi.Input<string>;
    sourceObjectIfMatchEtag?: pulumi.Input<string>;
    sourceVersionId?: pulumi.Input<string>;
}

export interface ObjectstorageObjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ObjectstoragePreauthrequestTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ObjectstorageReplicationPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OceOceInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OcvpClusterDatastore {
    blockVolumeIds: pulumi.Input<pulumi.Input<string>[]>;
    capacity?: pulumi.Input<number>;
    datastoreType: pulumi.Input<string>;
}

export interface OcvpClusterNetworkConfiguration {
    hcxVlanId?: pulumi.Input<string>;
    nsxEdgeUplink1vlanId?: pulumi.Input<string>;
    nsxEdgeUplink2vlanId?: pulumi.Input<string>;
    nsxEdgeVtepVlanId: pulumi.Input<string>;
    nsxVtepVlanId: pulumi.Input<string>;
    provisioningSubnetId: pulumi.Input<string>;
    provisioningVlanId?: pulumi.Input<string>;
    replicationVlanId?: pulumi.Input<string>;
    vmotionVlanId: pulumi.Input<string>;
    vsanVlanId: pulumi.Input<string>;
    vsphereVlanId?: pulumi.Input<string>;
}

export interface OcvpClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OcvpClusterUpgradeLicense {
    licenseKey: pulumi.Input<string>;
    licenseType: pulumi.Input<string>;
}

export interface OcvpClusterVsphereUpgradeObject {
    downloadLink: pulumi.Input<string>;
    linkDescription: pulumi.Input<string>;
}

export interface OcvpEsxiHostTimeouts {
    create?: pulumi.Input<string>;
}

export interface OcvpSddcDatastore {
    blockVolumeIds: pulumi.Input<pulumi.Input<string>[]>;
    capacity?: pulumi.Input<number>;
    datastoreType: pulumi.Input<string>;
}

export interface OcvpSddcHcxOnPremLicense {
    activationKey: pulumi.Input<string>;
    status: pulumi.Input<string>;
    systemName: pulumi.Input<string>;
}

export interface OcvpSddcInitialConfiguration {
    initialClusterConfigurations: pulumi.Input<pulumi.Input<inputs.OcvpSddcInitialConfigurationInitialClusterConfiguration>[]>;
}

export interface OcvpSddcInitialConfigurationInitialClusterConfiguration {
    actualEsxiHostsCount?: pulumi.Input<number>;
    capacityReservationId?: pulumi.Input<string>;
    computeAvailabilityDomain: pulumi.Input<string>;
    datastores?: pulumi.Input<pulumi.Input<inputs.OcvpSddcInitialConfigurationInitialClusterConfigurationDatastore>[]>;
    displayName?: pulumi.Input<string>;
    esxiHostsCount: pulumi.Input<number>;
    initialCommitment?: pulumi.Input<string>;
    initialHostOcpuCount?: pulumi.Input<number>;
    initialHostShapeName?: pulumi.Input<string>;
    instanceDisplayNamePrefix?: pulumi.Input<string>;
    isShieldedInstanceEnabled?: pulumi.Input<boolean>;
    networkConfiguration?: pulumi.Input<inputs.OcvpSddcInitialConfigurationInitialClusterConfigurationNetworkConfiguration>;
    vsphereType: pulumi.Input<string>;
    workloadNetworkCidr?: pulumi.Input<string>;
}

export interface OcvpSddcInitialConfigurationInitialClusterConfigurationDatastore {
    blockVolumeIds: pulumi.Input<pulumi.Input<string>[]>;
    datastoreType: pulumi.Input<string>;
}

export interface OcvpSddcInitialConfigurationInitialClusterConfigurationNetworkConfiguration {
    hcxVlanId?: pulumi.Input<string>;
    nsxEdgeUplink1vlanId?: pulumi.Input<string>;
    nsxEdgeUplink2vlanId?: pulumi.Input<string>;
    nsxEdgeVtepVlanId: pulumi.Input<string>;
    nsxVtepVlanId: pulumi.Input<string>;
    provisioningSubnetId: pulumi.Input<string>;
    provisioningVlanId?: pulumi.Input<string>;
    replicationVlanId?: pulumi.Input<string>;
    vmotionVlanId: pulumi.Input<string>;
    vsanVlanId: pulumi.Input<string>;
    vsphereVlanId?: pulumi.Input<string>;
}

export interface OcvpSddcTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OcvpSddcUpgradeLicense {
    licenseKey: pulumi.Input<string>;
    licenseType: pulumi.Input<string>;
}

export interface OcvpSddcVsphereUpgradeObject {
    downloadLink: pulumi.Input<string>;
    linkDescription: pulumi.Input<string>;
}

export interface OdaOdaInstanceRestrictedOperation {
    operationName: pulumi.Input<string>;
    restrictingService: pulumi.Input<string>;
}

export interface OdaOdaInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OdaOdaPrivateEndpointAttachmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OdaOdaPrivateEndpointScanProxyScanListenerInfo {
    scanListenerFqdn?: pulumi.Input<string>;
    scanListenerIp?: pulumi.Input<string>;
    scanListenerPort?: pulumi.Input<number>;
}

export interface OdaOdaPrivateEndpointScanProxyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OdaOdaPrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OnsNotificationTopicTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OnsSubscriptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpaOpaInstanceAttachment {
    isImplicit: pulumi.Input<boolean>;
    targetId: pulumi.Input<string>;
    targetInstanceUrl: pulumi.Input<string>;
    targetRole: pulumi.Input<string>;
    targetServiceType: pulumi.Input<string>;
}

export interface OpaOpaInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpensearchOpensearchClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OperatorAccessControlOperatorControlAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OperatorAccessControlOperatorControlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpsiAwrHubSourceAwrhubsourcesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpsiAwrHubSourceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpsiAwrHubTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpsiDatabaseInsightConnectionCredentialDetails {
    credentialSourceName?: pulumi.Input<string>;
    credentialType?: pulumi.Input<string>;
    passwordSecretId?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
    walletSecretId?: pulumi.Input<string>;
}

export interface OpsiDatabaseInsightConnectionDetails {
    hostName?: pulumi.Input<string>;
    hosts?: pulumi.Input<pulumi.Input<inputs.OpsiDatabaseInsightConnectionDetailsHost>[]>;
    port?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
}

export interface OpsiDatabaseInsightConnectionDetailsHost {
    hostIp?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
}

export interface OpsiDatabaseInsightCredentialDetails {
    credentialSourceName?: pulumi.Input<string>;
    credentialType: pulumi.Input<string>;
    passwordSecretId?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
    walletSecretId?: pulumi.Input<string>;
}

export interface OpsiDatabaseInsightTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpsiEnterpriseManagerBridgeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpsiExadataInsightMemberVmClusterDetail {
    compartmentId?: pulumi.Input<string>;
    dbmPrivateEndpointId?: pulumi.Input<string>;
    memberDatabaseDetails?: pulumi.Input<pulumi.Input<inputs.OpsiExadataInsightMemberVmClusterDetailMemberDatabaseDetail>[]>;
    opsiPrivateEndpointId?: pulumi.Input<string>;
    vmclusterId?: pulumi.Input<string>;
}

export interface OpsiExadataInsightMemberVmClusterDetailMemberDatabaseDetail {
    compartmentId?: pulumi.Input<string>;
    connectionDetails?: pulumi.Input<inputs.OpsiExadataInsightMemberVmClusterDetailMemberDatabaseDetailConnectionDetails>;
    credentialDetails?: pulumi.Input<inputs.OpsiExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetails>;
    databaseId?: pulumi.Input<string>;
    databaseResourceType?: pulumi.Input<string>;
    dbmPrivateEndpointId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    deploymentType?: pulumi.Input<string>;
    entitySource?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    opsiPrivateEndpointId?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface OpsiExadataInsightMemberVmClusterDetailMemberDatabaseDetailConnectionDetails {
    hosts?: pulumi.Input<pulumi.Input<inputs.OpsiExadataInsightMemberVmClusterDetailMemberDatabaseDetailConnectionDetailsHost>[]>;
    protocol?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
}

export interface OpsiExadataInsightMemberVmClusterDetailMemberDatabaseDetailConnectionDetailsHost {
    hostIp?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
}

export interface OpsiExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetails {
    credentialSourceName?: pulumi.Input<string>;
    credentialType: pulumi.Input<string>;
    passwordSecretId?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
    walletSecretId?: pulumi.Input<string>;
}

export interface OpsiExadataInsightTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpsiHostInsightTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpsiNewsReportContentTypes {
    capacityPlanningResources?: pulumi.Input<pulumi.Input<string>[]>;
    sqlInsightsFleetAnalysisResources?: pulumi.Input<pulumi.Input<string>[]>;
    sqlInsightsPerformanceDegradationResources?: pulumi.Input<pulumi.Input<string>[]>;
    sqlInsightsPlanChangesResources?: pulumi.Input<pulumi.Input<string>[]>;
    sqlInsightsTopDatabasesResources?: pulumi.Input<pulumi.Input<string>[]>;
    sqlInsightsTopSqlByInsightsResources?: pulumi.Input<pulumi.Input<string>[]>;
    sqlInsightsTopSqlResources?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OpsiNewsReportTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpsiOperationsInsightsPrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpsiOperationsInsightsWarehouseDownloadWarehouseWalletTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpsiOperationsInsightsWarehouseRotateWarehouseWalletTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpsiOperationsInsightsWarehouseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpsiOperationsInsightsWarehouseUserTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OpsiOpsiConfigurationConfigItem {
    applicableContexts?: pulumi.Input<pulumi.Input<string>[]>;
    configItemType: pulumi.Input<string>;
    defaultValue?: pulumi.Input<string>;
    metadatas?: pulumi.Input<pulumi.Input<inputs.OpsiOpsiConfigurationConfigItemMetadata>[]>;
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface OpsiOpsiConfigurationConfigItemMetadata {
    configItemType: pulumi.Input<string>;
    dataType: pulumi.Input<string>;
    description: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    unitDetails: pulumi.Input<pulumi.Input<inputs.OpsiOpsiConfigurationConfigItemMetadataUnitDetail>[]>;
    valueInputDetails: pulumi.Input<pulumi.Input<inputs.OpsiOpsiConfigurationConfigItemMetadataValueInputDetail>[]>;
}

export interface OpsiOpsiConfigurationConfigItemMetadataUnitDetail {
    displayName: pulumi.Input<string>;
    unit: pulumi.Input<string>;
}

export interface OpsiOpsiConfigurationConfigItemMetadataValueInputDetail {
    allowedValueType: pulumi.Input<string>;
    maxValue: pulumi.Input<string>;
    minValue: pulumi.Input<string>;
    possibleValues: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OpsiOpsiConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OptimizerEnrollmentStatusTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OptimizerProfileLevelsConfiguration {
    items?: pulumi.Input<pulumi.Input<inputs.OptimizerProfileLevelsConfigurationItem>[]>;
}

export interface OptimizerProfileLevelsConfigurationItem {
    level?: pulumi.Input<string>;
    recommendationId?: pulumi.Input<string>;
}

export interface OptimizerProfileTargetCompartments {
    items: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OptimizerProfileTargetTags {
    items: pulumi.Input<pulumi.Input<inputs.OptimizerProfileTargetTagsItem>[]>;
}

export interface OptimizerProfileTargetTagsItem {
    tagDefinitionName: pulumi.Input<string>;
    tagNamespaceName: pulumi.Input<string>;
    tagValueType: pulumi.Input<string>;
    tagValues?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OptimizerProfileTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OptimizerRecommendationResourceCount {
    count: pulumi.Input<number>;
    status: pulumi.Input<string>;
}

export interface OptimizerRecommendationSupportedLevel {
    items: pulumi.Input<pulumi.Input<inputs.OptimizerRecommendationSupportedLevelItem>[]>;
}

export interface OptimizerRecommendationSupportedLevelItem {
    name: pulumi.Input<string>;
}

export interface OptimizerRecommendationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OptimizerResourceActionAction {
    description: pulumi.Input<string>;
    type: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface OptimizerResourceActionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubEventData {
    additionalDetails: pulumi.Input<pulumi.Input<inputs.OsManagementHubEventDataAdditionalDetail>[]>;
    contents: pulumi.Input<pulumi.Input<inputs.OsManagementHubEventDataContent>[]>;
    eventCount: pulumi.Input<number>;
    eventFingerprint: pulumi.Input<string>;
    operationType: pulumi.Input<string>;
    reason: pulumi.Input<string>;
    status: pulumi.Input<string>;
    timeFirstOccurred: pulumi.Input<string>;
}

export interface OsManagementHubEventDataAdditionalDetail {
    exploitCves: pulumi.Input<pulumi.Input<string>[]>;
    initiatorId: pulumi.Input<string>;
    vmcores: pulumi.Input<pulumi.Input<inputs.OsManagementHubEventDataAdditionalDetailVmcore>[]>;
    workRequestIds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OsManagementHubEventDataAdditionalDetailVmcore {
    backtrace: pulumi.Input<string>;
    component: pulumi.Input<string>;
}

export interface OsManagementHubEventDataContent {
    contentAvailability: pulumi.Input<string>;
    contentLocation: pulumi.Input<string>;
    exploitDetectionLogContent: pulumi.Input<string>;
    exploitObjectStoreLocation: pulumi.Input<string>;
    size: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface OsManagementHubEventSystemDetail {
    architecture: pulumi.Input<string>;
    kspliceEffectiveKernelVersion: pulumi.Input<string>;
    osFamily: pulumi.Input<string>;
    osKernelRelease: pulumi.Input<string>;
    osKernelVersion: pulumi.Input<string>;
    osName: pulumi.Input<string>;
    osSystemVersion: pulumi.Input<string>;
}

export interface OsManagementHubEventTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubLifecycleEnvironmentManagedInstanceId {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface OsManagementHubLifecycleEnvironmentStage {
    archType?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<string>;
    lifecycleEnvironmentId?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    managedInstanceIds?: pulumi.Input<pulumi.Input<inputs.OsManagementHubLifecycleEnvironmentStageManagedInstanceId>[]>;
    osFamily?: pulumi.Input<string>;
    rank: pulumi.Input<number>;
    softwareSourceIds?: pulumi.Input<pulumi.Input<inputs.OsManagementHubLifecycleEnvironmentStageSoftwareSourceId>[]>;
    state?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeModified?: pulumi.Input<string>;
    vendorName?: pulumi.Input<string>;
}

export interface OsManagementHubLifecycleEnvironmentStageManagedInstanceId {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface OsManagementHubLifecycleEnvironmentStageSoftwareSourceId {
    description: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    isMandatoryForAutonomousLinux: pulumi.Input<boolean>;
    softwareSourceType: pulumi.Input<string>;
}

export interface OsManagementHubLifecycleEnvironmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubLifecycleStageAttachManagedInstancesManagementManagedInstanceDetails {
    managedInstances: pulumi.Input<pulumi.Input<string>[]>;
    workRequestDetails?: pulumi.Input<inputs.OsManagementHubLifecycleStageAttachManagedInstancesManagementManagedInstanceDetailsWorkRequestDetails>;
}

export interface OsManagementHubLifecycleStageAttachManagedInstancesManagementManagedInstanceDetailsWorkRequestDetails {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface OsManagementHubLifecycleStageAttachManagedInstancesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubLifecycleStageDetachManagedInstancesManagementManagedInstanceDetails {
    managedInstances: pulumi.Input<pulumi.Input<string>[]>;
    workRequestDetails?: pulumi.Input<inputs.OsManagementHubLifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsWorkRequestDetails>;
}

export interface OsManagementHubLifecycleStageDetachManagedInstancesManagementManagedInstanceDetailsWorkRequestDetails {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface OsManagementHubLifecycleStageDetachManagedInstancesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubLifecycleStagePromoteSoftwareSourceManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubLifecycleStagePromoteSoftwareSourceManagementWorkRequestDetails {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceAttachProfileManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceAutonomousSettings {
    isDataCollectionAuthorized?: pulumi.Input<boolean>;
    scheduledJobId?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceDetachProfileManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupAttachManagedInstancesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupAttachManagedInstancesManagementWorkRequestDetails {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupAttachSoftwareSourcesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupAttachSoftwareSourcesManagementWorkRequestDetails {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupAutonomousSettings {
    isDataCollectionAuthorized?: pulumi.Input<boolean>;
    scheduledJobId?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupDetachManagedInstancesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupDetachSoftwareSourcesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupDetachSoftwareSourcesManagementWorkRequestDetails {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupInstallPackagesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupInstallPackagesManagementWorkRequestDetails {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupInstallWindowsUpdatesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupInstallWindowsUpdatesManagementWorkRequestDetails {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupManageModuleStreamsManagementDisable {
    moduleName: pulumi.Input<string>;
    softwareSourceId?: pulumi.Input<string>;
    streamName: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupManageModuleStreamsManagementEnable {
    moduleName: pulumi.Input<string>;
    softwareSourceId?: pulumi.Input<string>;
    streamName: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupManageModuleStreamsManagementInstall {
    moduleName: pulumi.Input<string>;
    profileName: pulumi.Input<string>;
    softwareSourceId?: pulumi.Input<string>;
    streamName: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupManageModuleStreamsManagementRemove {
    moduleName: pulumi.Input<string>;
    profileName: pulumi.Input<string>;
    softwareSourceId?: pulumi.Input<string>;
    streamName: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupManageModuleStreamsManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetails {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupRemovePackagesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupRemovePackagesManagementWorkRequestDetails {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupSoftwareSource {
    description: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    isMandatoryForAutonomousLinux: pulumi.Input<boolean>;
    softwareSourceType: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupUpdateAllPackagesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceGroupUpdateAllPackagesManagementWorkRequestDetails {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceInstallWindowsUpdatesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceInstallWindowsUpdatesManagementWorkRequestDetails {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceLifecycleEnvironment {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceLifecycleStage {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceManagedInstanceGroup {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceSoftwareSource {
    description: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    isMandatoryForAutonomousLinux: pulumi.Input<boolean>;
    softwareSourceType: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceUpdatePackagesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagedInstanceUpdatePackagesManagementWorkRequestDetails {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
}

export interface OsManagementHubManagementStationHealth {
    description: pulumi.Input<string>;
    state: pulumi.Input<string>;
}

export interface OsManagementHubManagementStationMirror {
    directory: pulumi.Input<string>;
    port: pulumi.Input<string>;
    sslcert?: pulumi.Input<string>;
    sslport: pulumi.Input<string>;
}

export interface OsManagementHubManagementStationMirrorSyncStatus {
    failed: pulumi.Input<number>;
    queued: pulumi.Input<number>;
    synced: pulumi.Input<number>;
    syncing: pulumi.Input<number>;
    unsynced: pulumi.Input<number>;
}

export interface OsManagementHubManagementStationMirrorSynchronizeManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagementStationProxy {
    forward?: pulumi.Input<string>;
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    isEnabled: pulumi.Input<boolean>;
    port?: pulumi.Input<string>;
}

export interface OsManagementHubManagementStationRefreshManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagementStationSynchronizeMirrorsManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubManagementStationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubProfileLifecycleEnvironment {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface OsManagementHubProfileLifecycleStage {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface OsManagementHubProfileManagedInstanceGroup {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface OsManagementHubProfileSoftwareSource {
    description: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    isMandatoryForAutonomousLinux: pulumi.Input<boolean>;
    softwareSourceType: pulumi.Input<string>;
}

export interface OsManagementHubProfileTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubScheduledJobOperation {
    manageModuleStreamsDetails?: pulumi.Input<inputs.OsManagementHubScheduledJobOperationManageModuleStreamsDetails>;
    operationType: pulumi.Input<string>;
    packageNames?: pulumi.Input<pulumi.Input<string>[]>;
    softwareSourceIds?: pulumi.Input<pulumi.Input<string>[]>;
    switchModuleStreamsDetails?: pulumi.Input<inputs.OsManagementHubScheduledJobOperationSwitchModuleStreamsDetails>;
    windowsUpdateNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OsManagementHubScheduledJobOperationManageModuleStreamsDetails {
    disables?: pulumi.Input<pulumi.Input<inputs.OsManagementHubScheduledJobOperationManageModuleStreamsDetailsDisable>[]>;
    enables?: pulumi.Input<pulumi.Input<inputs.OsManagementHubScheduledJobOperationManageModuleStreamsDetailsEnable>[]>;
    installs?: pulumi.Input<pulumi.Input<inputs.OsManagementHubScheduledJobOperationManageModuleStreamsDetailsInstall>[]>;
    removes?: pulumi.Input<pulumi.Input<inputs.OsManagementHubScheduledJobOperationManageModuleStreamsDetailsRemove>[]>;
}

export interface OsManagementHubScheduledJobOperationManageModuleStreamsDetailsDisable {
    moduleName: pulumi.Input<string>;
    softwareSourceId?: pulumi.Input<string>;
    streamName: pulumi.Input<string>;
}

export interface OsManagementHubScheduledJobOperationManageModuleStreamsDetailsEnable {
    moduleName: pulumi.Input<string>;
    softwareSourceId?: pulumi.Input<string>;
    streamName: pulumi.Input<string>;
}

export interface OsManagementHubScheduledJobOperationManageModuleStreamsDetailsInstall {
    moduleName: pulumi.Input<string>;
    profileName: pulumi.Input<string>;
    softwareSourceId?: pulumi.Input<string>;
    streamName: pulumi.Input<string>;
}

export interface OsManagementHubScheduledJobOperationManageModuleStreamsDetailsRemove {
    moduleName: pulumi.Input<string>;
    profileName: pulumi.Input<string>;
    softwareSourceId?: pulumi.Input<string>;
    streamName: pulumi.Input<string>;
}

export interface OsManagementHubScheduledJobOperationSwitchModuleStreamsDetails {
    moduleName: pulumi.Input<string>;
    softwareSourceId?: pulumi.Input<string>;
    streamName: pulumi.Input<string>;
}

export interface OsManagementHubScheduledJobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubSoftwareSourceAddPackagesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubSoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailability {
    availability?: pulumi.Input<string>;
    availabilityAtOci?: pulumi.Input<string>;
    softwareSourceId: pulumi.Input<string>;
}

export interface OsManagementHubSoftwareSourceChangeAvailabilityManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubSoftwareSourceCustomSoftwareSourceFilter {
    moduleStreamProfileFilters?: pulumi.Input<pulumi.Input<inputs.OsManagementHubSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter>[]>;
    packageFilters?: pulumi.Input<pulumi.Input<inputs.OsManagementHubSoftwareSourceCustomSoftwareSourceFilterPackageFilter>[]>;
    packageGroupFilters?: pulumi.Input<pulumi.Input<inputs.OsManagementHubSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter>[]>;
}

export interface OsManagementHubSoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilter {
    filterType?: pulumi.Input<string>;
    moduleName?: pulumi.Input<string>;
    profileName?: pulumi.Input<string>;
    streamName?: pulumi.Input<string>;
}

export interface OsManagementHubSoftwareSourceCustomSoftwareSourceFilterPackageFilter {
    filterType?: pulumi.Input<string>;
    packageName?: pulumi.Input<string>;
    packageNamePattern?: pulumi.Input<string>;
    packageVersion?: pulumi.Input<string>;
}

export interface OsManagementHubSoftwareSourceCustomSoftwareSourceFilterPackageGroupFilter {
    filterType?: pulumi.Input<string>;
    packageGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OsManagementHubSoftwareSourceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsManagementHubSoftwareSourceVendorSoftwareSource {
    displayName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}

export interface OsmanagementManagedInstanceAutonomouse {
    isAutoUpdateEnabled: pulumi.Input<boolean>;
}

export interface OsmanagementManagedInstanceChildSoftwareSource {
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface OsmanagementManagedInstanceGroupManagedInstance {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface OsmanagementManagedInstanceGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsmanagementManagedInstanceManagedInstanceGroup {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface OsmanagementManagedInstanceManagementChildSoftwareSource {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface OsmanagementManagedInstanceManagementManagedInstanceGroup {
    displayName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}

export interface OsmanagementManagedInstanceManagementParentSoftwareSource {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface OsmanagementManagedInstanceManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsmanagementManagedInstanceParentSoftwareSource {
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface OsmanagementManagedInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OsmanagementSoftwareSourceAssociatedManagedInstance {
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface OsmanagementSoftwareSourceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OspGatewayAddressActionVerificationAddress {
    addressKey: pulumi.Input<string>;
    city: pulumi.Input<string>;
    companyName: pulumi.Input<string>;
    contributorClass: pulumi.Input<string>;
    country: pulumi.Input<string>;
    county: pulumi.Input<string>;
    departmentName: pulumi.Input<string>;
    emailAddress: pulumi.Input<string>;
    firstName: pulumi.Input<string>;
    internalNumber: pulumi.Input<string>;
    jobTitle: pulumi.Input<string>;
    lastName: pulumi.Input<string>;
    line1: pulumi.Input<string>;
    line2: pulumi.Input<string>;
    line3: pulumi.Input<string>;
    line4: pulumi.Input<string>;
    middleName: pulumi.Input<string>;
    municipalInscription: pulumi.Input<string>;
    phoneCountryCode: pulumi.Input<string>;
    phoneNumber: pulumi.Input<string>;
    postalCode: pulumi.Input<string>;
    province: pulumi.Input<string>;
    state: pulumi.Input<string>;
    stateInscription: pulumi.Input<string>;
    streetName: pulumi.Input<string>;
    streetNumber: pulumi.Input<string>;
}

export interface OspGatewayAddressActionVerificationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OspGatewaySubscriptionBillingAddress {
    addressKey: pulumi.Input<string>;
    city: pulumi.Input<string>;
    companyName: pulumi.Input<string>;
    contributorClass: pulumi.Input<string>;
    country: pulumi.Input<string>;
    county: pulumi.Input<string>;
    departmentName: pulumi.Input<string>;
    emailAddress: pulumi.Input<string>;
    firstName: pulumi.Input<string>;
    internalNumber: pulumi.Input<string>;
    jobTitle: pulumi.Input<string>;
    lastName: pulumi.Input<string>;
    line1: pulumi.Input<string>;
    line2: pulumi.Input<string>;
    line3: pulumi.Input<string>;
    line4: pulumi.Input<string>;
    middleName: pulumi.Input<string>;
    municipalInscription: pulumi.Input<string>;
    phoneCountryCode: pulumi.Input<string>;
    phoneNumber: pulumi.Input<string>;
    postalCode: pulumi.Input<string>;
    province: pulumi.Input<string>;
    state: pulumi.Input<string>;
    stateInscription: pulumi.Input<string>;
    streetName: pulumi.Input<string>;
    streetNumber: pulumi.Input<string>;
}

export interface OspGatewaySubscriptionPaymentGateway {
    merchantDefinedDatas: pulumi.Input<pulumi.Input<inputs.OspGatewaySubscriptionPaymentGatewayMerchantDefinedData>[]>;
}

export interface OspGatewaySubscriptionPaymentGatewayMerchantDefinedData {
    cloudAccountName: pulumi.Input<string>;
    promoType: pulumi.Input<string>;
}

export interface OspGatewaySubscriptionPaymentOption {
    creditCardType: pulumi.Input<string>;
    emailAddress: pulumi.Input<string>;
    extBillingAgreementId: pulumi.Input<string>;
    firstName: pulumi.Input<string>;
    lastDigits: pulumi.Input<string>;
    lastName: pulumi.Input<string>;
    nameOnCard: pulumi.Input<string>;
    paymentMethod: pulumi.Input<string>;
    timeExpiration: pulumi.Input<string>;
    walletInstrumentId: pulumi.Input<string>;
    walletTransactionId: pulumi.Input<string>;
}

export interface OspGatewaySubscriptionSubscription {
    accountType?: pulumi.Input<string>;
    billToCustAccountId?: pulumi.Input<string>;
    billingAddresses?: pulumi.Input<pulumi.Input<inputs.OspGatewaySubscriptionSubscriptionBillingAddress>[]>;
    currencyCode?: pulumi.Input<string>;
    gsiOrgCode?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isIntentToPay?: pulumi.Input<boolean>;
    languageCode?: pulumi.Input<string>;
    organizationId?: pulumi.Input<string>;
    paymentGateway?: pulumi.Input<inputs.OspGatewaySubscriptionSubscriptionPaymentGateway>;
    paymentOptions?: pulumi.Input<pulumi.Input<inputs.OspGatewaySubscriptionSubscriptionPaymentOption>[]>;
    planType?: pulumi.Input<string>;
    shipToCustAcctRoleId?: pulumi.Input<string>;
    shipToCustAcctSiteId?: pulumi.Input<string>;
    subscriptionPlanNumber: pulumi.Input<string>;
    taxInfo?: pulumi.Input<inputs.OspGatewaySubscriptionSubscriptionTaxInfo>;
    timePersonalToCorporateConv?: pulumi.Input<string>;
    timePlanUpgrade?: pulumi.Input<string>;
    timeStart?: pulumi.Input<string>;
    upgradeState?: pulumi.Input<string>;
    upgradeStateDetails?: pulumi.Input<string>;
}

export interface OspGatewaySubscriptionSubscriptionBillingAddress {
    addressKey?: pulumi.Input<string>;
    city?: pulumi.Input<string>;
    companyName?: pulumi.Input<string>;
    contributorClass?: pulumi.Input<string>;
    country?: pulumi.Input<string>;
    county?: pulumi.Input<string>;
    departmentName?: pulumi.Input<string>;
    emailAddress?: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    internalNumber?: pulumi.Input<string>;
    jobTitle?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
    line1?: pulumi.Input<string>;
    line2?: pulumi.Input<string>;
    line3?: pulumi.Input<string>;
    line4?: pulumi.Input<string>;
    middleName?: pulumi.Input<string>;
    municipalInscription?: pulumi.Input<string>;
    phoneCountryCode?: pulumi.Input<string>;
    phoneNumber?: pulumi.Input<string>;
    postalCode?: pulumi.Input<string>;
    province?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    stateInscription?: pulumi.Input<string>;
    streetName?: pulumi.Input<string>;
    streetNumber?: pulumi.Input<string>;
}

export interface OspGatewaySubscriptionSubscriptionPaymentGateway {
    merchantDefinedData?: pulumi.Input<inputs.OspGatewaySubscriptionSubscriptionPaymentGatewayMerchantDefinedData>;
}

export interface OspGatewaySubscriptionSubscriptionPaymentGatewayMerchantDefinedData {
    cloudAccountName?: pulumi.Input<string>;
    promoType?: pulumi.Input<string>;
}

export interface OspGatewaySubscriptionSubscriptionPaymentOption {
    creditCardType?: pulumi.Input<string>;
    emailAddress?: pulumi.Input<string>;
    extBillingAgreementId?: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    lastDigits?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
    nameOnCard?: pulumi.Input<string>;
    paymentMethod: pulumi.Input<string>;
    timeExpiration?: pulumi.Input<string>;
    walletInstrumentId?: pulumi.Input<string>;
    walletTransactionId?: pulumi.Input<string>;
}

export interface OspGatewaySubscriptionSubscriptionTaxInfo {
    noTaxReasonCode?: pulumi.Input<string>;
    noTaxReasonCodeDetails?: pulumi.Input<string>;
    taxCnpj?: pulumi.Input<string>;
    taxPayerId?: pulumi.Input<string>;
    taxRegNumber?: pulumi.Input<string>;
}

export interface OspGatewaySubscriptionTaxInfo {
    giro: pulumi.Input<string>;
    noTaxReasonCode: pulumi.Input<string>;
    noTaxReasonCodeDetails: pulumi.Input<string>;
    taxCnpj: pulumi.Input<string>;
    taxPayerId: pulumi.Input<string>;
    taxRegNumber: pulumi.Input<string>;
}

export interface OspGatewaySubscriptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PsqlBackupDbSystemDetail {
    dbVersion: pulumi.Input<string>;
    systemType: pulumi.Input<string>;
}

export interface PsqlBackupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PsqlConfigurationConfigurationDetail {
    items: pulumi.Input<pulumi.Input<inputs.PsqlConfigurationConfigurationDetailItem>[]>;
}

export interface PsqlConfigurationConfigurationDetailItem {
    allowedValues: pulumi.Input<string>;
    configKey: pulumi.Input<string>;
    dataType: pulumi.Input<string>;
    defaultConfigValue: pulumi.Input<string>;
    description: pulumi.Input<string>;
    isOverridable: pulumi.Input<boolean>;
    isRestartRequired: pulumi.Input<boolean>;
    overridenConfigValue: pulumi.Input<string>;
}

export interface PsqlConfigurationDbConfigurationOverrides {
    items: pulumi.Input<pulumi.Input<inputs.PsqlConfigurationDbConfigurationOverridesItem>[]>;
}

export interface PsqlConfigurationDbConfigurationOverridesItem {
    configKey: pulumi.Input<string>;
    overridenConfigValue: pulumi.Input<string>;
}

export interface PsqlConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PsqlDbSystemCredentials {
    passwordDetails: pulumi.Input<inputs.PsqlDbSystemCredentialsPasswordDetails>;
    username: pulumi.Input<string>;
}

export interface PsqlDbSystemCredentialsPasswordDetails {
    password?: pulumi.Input<string>;
    passwordType: pulumi.Input<string>;
    secretId?: pulumi.Input<string>;
    secretVersion?: pulumi.Input<string>;
}

export interface PsqlDbSystemInstance {
    availabilityDomain: pulumi.Input<string>;
    description: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    lifecycleDetails: pulumi.Input<string>;
    state: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
}

export interface PsqlDbSystemInstancesDetail {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    privateIp?: pulumi.Input<string>;
}

export interface PsqlDbSystemManagementPolicy {
    backupPolicy?: pulumi.Input<inputs.PsqlDbSystemManagementPolicyBackupPolicy>;
    maintenanceWindowStart?: pulumi.Input<string>;
}

export interface PsqlDbSystemManagementPolicyBackupPolicy {
    backupStart?: pulumi.Input<string>;
    daysOfTheMonths?: pulumi.Input<pulumi.Input<number>[]>;
    daysOfTheWeeks?: pulumi.Input<pulumi.Input<string>[]>;
    kind?: pulumi.Input<string>;
    retentionDays?: pulumi.Input<number>;
}

export interface PsqlDbSystemNetworkDetails {
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    primaryDbEndpointPrivateIp?: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface PsqlDbSystemPatchOperation {
    from?: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    position?: pulumi.Input<string>;
    selectedItem?: pulumi.Input<string>;
    selection: pulumi.Input<string>;
    value?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface PsqlDbSystemSource {
    backupId?: pulumi.Input<string>;
    isHavingRestoreConfigOverrides?: pulumi.Input<boolean>;
    sourceType: pulumi.Input<string>;
}

export interface PsqlDbSystemStorageDetails {
    availabilityDomain?: pulumi.Input<string>;
    iops?: pulumi.Input<string>;
    isRegionallyDurable: pulumi.Input<boolean>;
    systemType: pulumi.Input<string>;
}

export interface PsqlDbSystemTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface QueueQueueTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RecoveryProtectedDatabaseMetric {
    backupSpaceEstimateInGbs: pulumi.Input<number>;
    backupSpaceUsedInGbs: pulumi.Input<number>;
    currentRetentionPeriodInSeconds: pulumi.Input<number>;
    dbSizeInGbs: pulumi.Input<number>;
    isRedoLogsEnabled: pulumi.Input<boolean>;
    minimumRecoveryNeededInDays: pulumi.Input<number>;
    retentionPeriodInDays: pulumi.Input<number>;
    unprotectedWindowInSeconds: pulumi.Input<number>;
}

export interface RecoveryProtectedDatabaseRecoveryServiceSubnet {
    recoveryServiceSubnetId: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

export interface RecoveryProtectedDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RecoveryProtectionPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RecoveryRecoveryServiceSubnetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RedisRedisClusterNodeCollection {
    items: pulumi.Input<pulumi.Input<inputs.RedisRedisClusterNodeCollectionItem>[]>;
}

export interface RedisRedisClusterNodeCollectionItem {
    displayName: pulumi.Input<string>;
    privateEndpointFqdn: pulumi.Input<string>;
    privateEndpointIpAddress: pulumi.Input<string>;
}

export interface RedisRedisClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourceSchedulerScheduleResource {
    id: pulumi.Input<string>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ResourceSchedulerScheduleResourceFilter {
    attribute: pulumi.Input<string>;
    condition?: pulumi.Input<string>;
    shouldIncludeChildCompartments?: pulumi.Input<boolean>;
    values?: pulumi.Input<pulumi.Input<inputs.ResourceSchedulerScheduleResourceFilterValue>[]>;
}

export interface ResourceSchedulerScheduleResourceFilterValue {
    namespace?: pulumi.Input<string>;
    tagKey?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ResourceSchedulerScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourcemanagerPrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SchServiceConnectorSource {
    configMap?: pulumi.Input<string>;
    cursor?: pulumi.Input<inputs.SchServiceConnectorSourceCursor>;
    kind: pulumi.Input<string>;
    logSources?: pulumi.Input<pulumi.Input<inputs.SchServiceConnectorSourceLogSource>[]>;
    monitoringSources?: pulumi.Input<pulumi.Input<inputs.SchServiceConnectorSourceMonitoringSource>[]>;
    pluginName?: pulumi.Input<string>;
    streamId?: pulumi.Input<string>;
}

export interface SchServiceConnectorSourceCursor {
    kind?: pulumi.Input<string>;
}

export interface SchServiceConnectorSourceLogSource {
    compartmentId?: pulumi.Input<string>;
    logGroupId?: pulumi.Input<string>;
    logId?: pulumi.Input<string>;
}

export interface SchServiceConnectorSourceMonitoringSource {
    compartmentId?: pulumi.Input<string>;
    namespaceDetails?: pulumi.Input<inputs.SchServiceConnectorSourceMonitoringSourceNamespaceDetails>;
}

export interface SchServiceConnectorSourceMonitoringSourceNamespaceDetails {
    kind: pulumi.Input<string>;
    namespaces: pulumi.Input<pulumi.Input<inputs.SchServiceConnectorSourceMonitoringSourceNamespaceDetailsNamespace>[]>;
}

export interface SchServiceConnectorSourceMonitoringSourceNamespaceDetailsNamespace {
    metrics: pulumi.Input<inputs.SchServiceConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics>;
    namespace: pulumi.Input<string>;
}

export interface SchServiceConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics {
    kind: pulumi.Input<string>;
}

export interface SchServiceConnectorTarget {
    batchRolloverSizeInMbs?: pulumi.Input<number>;
    batchRolloverTimeInMs?: pulumi.Input<number>;
    batchSizeInKbs?: pulumi.Input<number>;
    batchSizeInNum?: pulumi.Input<number>;
    batchTimeInSec?: pulumi.Input<number>;
    bucket?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    dimensions?: pulumi.Input<pulumi.Input<inputs.SchServiceConnectorTargetDimension>[]>;
    enableFormattedMessaging?: pulumi.Input<boolean>;
    functionId?: pulumi.Input<string>;
    kind: pulumi.Input<string>;
    logGroupId?: pulumi.Input<string>;
    logSourceIdentifier?: pulumi.Input<string>;
    metric?: pulumi.Input<string>;
    metricNamespace?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    objectNamePrefix?: pulumi.Input<string>;
    streamId?: pulumi.Input<string>;
    topicId?: pulumi.Input<string>;
}

export interface SchServiceConnectorTargetDimension {
    dimensionValue?: pulumi.Input<inputs.SchServiceConnectorTargetDimensionDimensionValue>;
    name?: pulumi.Input<string>;
}

export interface SchServiceConnectorTargetDimensionDimensionValue {
    kind: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface SchServiceConnectorTask {
    batchSizeInKbs?: pulumi.Input<number>;
    batchTimeInSec?: pulumi.Input<number>;
    condition?: pulumi.Input<string>;
    functionId?: pulumi.Input<string>;
    kind: pulumi.Input<string>;
}

export interface SchServiceConnectorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceCatalogPrivateApplicationLogo {
    contentUrl: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    mimeType: pulumi.Input<string>;
}

export interface ServiceCatalogPrivateApplicationPackageDetails {
    packageType: pulumi.Input<string>;
    version: pulumi.Input<string>;
    zipFileBase64encoded?: pulumi.Input<string>;
}

export interface ServiceCatalogPrivateApplicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceCatalogServiceCatalogAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceCatalogServiceCatalogTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceMeshAccessPolicyRule {
    action: pulumi.Input<string>;
    destination: pulumi.Input<inputs.ServiceMeshAccessPolicyRuleDestination>;
    source: pulumi.Input<inputs.ServiceMeshAccessPolicyRuleSource>;
}

export interface ServiceMeshAccessPolicyRuleDestination {
    hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    ingressGatewayId?: pulumi.Input<string>;
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    ports?: pulumi.Input<pulumi.Input<number>[]>;
    protocol?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    virtualServiceId?: pulumi.Input<string>;
}

export interface ServiceMeshAccessPolicyRuleSource {
    hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    ingressGatewayId?: pulumi.Input<string>;
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    ports?: pulumi.Input<pulumi.Input<number>[]>;
    protocol?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    virtualServiceId?: pulumi.Input<string>;
}

export interface ServiceMeshAccessPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceMeshIngressGatewayAccessLogging {
    isEnabled?: pulumi.Input<boolean>;
}

export interface ServiceMeshIngressGatewayHost {
    hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    listeners: pulumi.Input<pulumi.Input<inputs.ServiceMeshIngressGatewayHostListener>[]>;
    name: pulumi.Input<string>;
}

export interface ServiceMeshIngressGatewayHostListener {
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    tls?: pulumi.Input<inputs.ServiceMeshIngressGatewayHostListenerTls>;
}

export interface ServiceMeshIngressGatewayHostListenerTls {
    clientValidation?: pulumi.Input<inputs.ServiceMeshIngressGatewayHostListenerTlsClientValidation>;
    mode: pulumi.Input<string>;
    serverCertificate?: pulumi.Input<inputs.ServiceMeshIngressGatewayHostListenerTlsServerCertificate>;
}

export interface ServiceMeshIngressGatewayHostListenerTlsClientValidation {
    subjectAlternateNames?: pulumi.Input<pulumi.Input<string>[]>;
    trustedCaBundle?: pulumi.Input<inputs.ServiceMeshIngressGatewayHostListenerTlsClientValidationTrustedCaBundle>;
}

export interface ServiceMeshIngressGatewayHostListenerTlsClientValidationTrustedCaBundle {
    caBundleId?: pulumi.Input<string>;
    secretName?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ServiceMeshIngressGatewayHostListenerTlsServerCertificate {
    certificateId?: pulumi.Input<string>;
    secretName?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ServiceMeshIngressGatewayMtls {
    certificateId?: pulumi.Input<string>;
    maximumValidity?: pulumi.Input<number>;
}

export interface ServiceMeshIngressGatewayRouteTableRouteRule {
    destinations: pulumi.Input<pulumi.Input<inputs.ServiceMeshIngressGatewayRouteTableRouteRuleDestination>[]>;
    ingressGatewayHost?: pulumi.Input<inputs.ServiceMeshIngressGatewayRouteTableRouteRuleIngressGatewayHost>;
    isGrpc?: pulumi.Input<boolean>;
    isHostRewriteEnabled?: pulumi.Input<boolean>;
    isPathRewriteEnabled?: pulumi.Input<boolean>;
    path?: pulumi.Input<string>;
    pathType?: pulumi.Input<string>;
    requestTimeoutInMs?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ServiceMeshIngressGatewayRouteTableRouteRuleDestination {
    port?: pulumi.Input<number>;
    virtualServiceId: pulumi.Input<string>;
    weight?: pulumi.Input<number>;
}

export interface ServiceMeshIngressGatewayRouteTableRouteRuleIngressGatewayHost {
    name: pulumi.Input<string>;
    port?: pulumi.Input<number>;
}

export interface ServiceMeshIngressGatewayRouteTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceMeshIngressGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceMeshMeshCertificateAuthority {
    id: pulumi.Input<string>;
}

export interface ServiceMeshMeshMtls {
    minimum: pulumi.Input<string>;
}

export interface ServiceMeshMeshTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceMeshVirtualDeploymentAccessLogging {
    isEnabled?: pulumi.Input<boolean>;
}

export interface ServiceMeshVirtualDeploymentListener {
    idleTimeoutInMs?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    requestTimeoutInMs?: pulumi.Input<string>;
}

export interface ServiceMeshVirtualDeploymentServiceDiscovery {
    hostname?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ServiceMeshVirtualDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceMeshVirtualServiceDefaultRoutingPolicy {
    type: pulumi.Input<string>;
}

export interface ServiceMeshVirtualServiceMtls {
    certificateId?: pulumi.Input<string>;
    maximumValidity?: pulumi.Input<number>;
    mode: pulumi.Input<string>;
}

export interface ServiceMeshVirtualServiceRouteTableRouteRule {
    destinations: pulumi.Input<pulumi.Input<inputs.ServiceMeshVirtualServiceRouteTableRouteRuleDestination>[]>;
    isGrpc?: pulumi.Input<boolean>;
    path?: pulumi.Input<string>;
    pathType?: pulumi.Input<string>;
    requestTimeoutInMs?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ServiceMeshVirtualServiceRouteTableRouteRuleDestination {
    port?: pulumi.Input<number>;
    virtualDeploymentId: pulumi.Input<string>;
    weight: pulumi.Input<number>;
}

export interface ServiceMeshVirtualServiceRouteTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceMeshVirtualServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackMonitoringBaselineableMetricTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackMonitoringConfigTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackMonitoringDiscoveryJobDiscoveryDetails {
    agentId: pulumi.Input<string>;
    credentials?: pulumi.Input<inputs.StackMonitoringDiscoveryJobDiscoveryDetailsCredentials>;
    license?: pulumi.Input<string>;
    properties: pulumi.Input<inputs.StackMonitoringDiscoveryJobDiscoveryDetailsProperties>;
    resourceName: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    tags?: pulumi.Input<inputs.StackMonitoringDiscoveryJobDiscoveryDetailsTags>;
}

export interface StackMonitoringDiscoveryJobDiscoveryDetailsCredentials {
    items: pulumi.Input<pulumi.Input<inputs.StackMonitoringDiscoveryJobDiscoveryDetailsCredentialsItem>[]>;
}

export interface StackMonitoringDiscoveryJobDiscoveryDetailsCredentialsItem {
    credentialName: pulumi.Input<string>;
    credentialType: pulumi.Input<string>;
    properties: pulumi.Input<inputs.StackMonitoringDiscoveryJobDiscoveryDetailsCredentialsItemProperties>;
}

export interface StackMonitoringDiscoveryJobDiscoveryDetailsCredentialsItemProperties {
    propertiesMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface StackMonitoringDiscoveryJobDiscoveryDetailsProperties {
    propertiesMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface StackMonitoringDiscoveryJobDiscoveryDetailsTags {
    propertiesMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface StackMonitoringDiscoveryJobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackMonitoringMetricExtensionEnabledOnResource {
    resourceId: pulumi.Input<string>;
}

export interface StackMonitoringMetricExtensionMetricExtensionOnGivenResourcesManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackMonitoringMetricExtensionMetricList {
    computeExpression?: pulumi.Input<string>;
    dataType: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    isDimension?: pulumi.Input<boolean>;
    isHidden?: pulumi.Input<boolean>;
    metricCategory?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    unit?: pulumi.Input<string>;
}

export interface StackMonitoringMetricExtensionQueryProperties {
    arguments?: pulumi.Input<string>;
    autoRowPrefix?: pulumi.Input<string>;
    collectionMethod: pulumi.Input<string>;
    command?: pulumi.Input<string>;
    delimiter?: pulumi.Input<string>;
    identityMetric?: pulumi.Input<string>;
    inParamDetails?: pulumi.Input<pulumi.Input<inputs.StackMonitoringMetricExtensionQueryPropertiesInParamDetail>[]>;
    isMetricServiceEnabled?: pulumi.Input<boolean>;
    jmxAttributes?: pulumi.Input<string>;
    managedBeanQuery?: pulumi.Input<string>;
    outParamDetails?: pulumi.Input<inputs.StackMonitoringMetricExtensionQueryPropertiesOutParamDetails>;
    scriptDetails?: pulumi.Input<inputs.StackMonitoringMetricExtensionQueryPropertiesScriptDetails>;
    sqlDetails?: pulumi.Input<inputs.StackMonitoringMetricExtensionQueryPropertiesSqlDetails>;
    sqlType?: pulumi.Input<string>;
    startsWith?: pulumi.Input<string>;
}

export interface StackMonitoringMetricExtensionQueryPropertiesInParamDetail {
    inParamPosition: pulumi.Input<number>;
    inParamValue: pulumi.Input<string>;
}

export interface StackMonitoringMetricExtensionQueryPropertiesOutParamDetails {
    outParamPosition: pulumi.Input<number>;
    outParamType: pulumi.Input<string>;
}

export interface StackMonitoringMetricExtensionQueryPropertiesScriptDetails {
    content: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface StackMonitoringMetricExtensionQueryPropertiesSqlDetails {
    content: pulumi.Input<string>;
    scriptFileName?: pulumi.Input<string>;
}

export interface StackMonitoringMetricExtensionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackMonitoringMetricExtensionsTestManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourceAdditionalAlias {
    credential: pulumi.Input<inputs.StackMonitoringMonitoredResourceAdditionalAliasCredential>;
    name: pulumi.Input<string>;
    source: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourceAdditionalAliasCredential {
    name: pulumi.Input<string>;
    service: pulumi.Input<string>;
    source: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourceAdditionalCredential {
    credentialType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    keyId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    properties?: pulumi.Input<pulumi.Input<inputs.StackMonitoringMonitoredResourceAdditionalCredentialProperty>[]>;
    source?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourceAdditionalCredentialProperty {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourceAliases {
    credential: pulumi.Input<inputs.StackMonitoringMonitoredResourceAliasesCredential>;
    name: pulumi.Input<string>;
    source: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourceAliasesCredential {
    name: pulumi.Input<string>;
    service: pulumi.Input<string>;
    source: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourceCredentials {
    credentialType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    keyId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    properties?: pulumi.Input<pulumi.Input<inputs.StackMonitoringMonitoredResourceCredentialsProperty>[]>;
    source?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourceCredentialsProperty {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourceDatabaseConnectionDetails {
    connectorId?: pulumi.Input<string>;
    dbId?: pulumi.Input<string>;
    dbUniqueName?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    sslSecretId?: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourceProperty {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourceTaskTaskDetails {
    availabilityProxyMetricCollectionInterval?: pulumi.Input<number>;
    availabilityProxyMetrics?: pulumi.Input<pulumi.Input<string>[]>;
    consolePathPrefix?: pulumi.Input<string>;
    externalIdMapping?: pulumi.Input<string>;
    lifecycleStatusMappingsForUpStatuses?: pulumi.Input<pulumi.Input<string>[]>;
    namespace: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
    resourceNameFilter?: pulumi.Input<string>;
    resourceNameMapping?: pulumi.Input<string>;
    resourceTypeFilter?: pulumi.Input<string>;
    resourceTypeMapping?: pulumi.Input<string>;
    serviceBaseUrl?: pulumi.Input<string>;
    shouldUseMetricsFlowForStatus?: pulumi.Input<boolean>;
    source: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourceTaskTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourceTypeMetadata {
    agentProperties?: pulumi.Input<pulumi.Input<string>[]>;
    format: pulumi.Input<string>;
    requiredProperties?: pulumi.Input<pulumi.Input<string>[]>;
    uniquePropertySets?: pulumi.Input<pulumi.Input<inputs.StackMonitoringMonitoredResourceTypeMetadataUniquePropertySet>[]>;
    validPropertiesForCreates?: pulumi.Input<pulumi.Input<string>[]>;
    validPropertiesForUpdates?: pulumi.Input<pulumi.Input<string>[]>;
    validPropertyValues?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface StackMonitoringMonitoredResourceTypeMetadataUniquePropertySet {
    properties: pulumi.Input<pulumi.Input<string>[]>;
}

export interface StackMonitoringMonitoredResourceTypeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourcesAssociateMonitoredResourceDestinationResourceDetail {
    compartmentId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourcesAssociateMonitoredResourceSourceResourceDetail {
    compartmentId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourcesAssociateMonitoredResourceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourcesListMemberItem {
    compartmentId: pulumi.Input<string>;
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    externalId: pulumi.Input<string>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostName: pulumi.Input<string>;
    license: pulumi.Input<string>;
    parentId: pulumi.Input<string>;
    resourceCategory: pulumi.Input<string>;
    resourceDisplayName: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
    resourceName: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
    state: pulumi.Input<string>;
    systemTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface StackMonitoringMonitoredResourcesListMemberTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourcesSearchAssociationItem {
    associationType: pulumi.Input<string>;
    destinationResourceDetails: pulumi.Input<pulumi.Input<inputs.StackMonitoringMonitoredResourcesSearchAssociationItemDestinationResourceDetail>[]>;
    destinationResourceId: pulumi.Input<string>;
    sourceResourceDetails: pulumi.Input<pulumi.Input<inputs.StackMonitoringMonitoredResourcesSearchAssociationItemSourceResourceDetail>[]>;
    sourceResourceId: pulumi.Input<string>;
    timeCreated: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourcesSearchAssociationItemDestinationResourceDetail {
    compartmentId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourcesSearchAssociationItemSourceResourceDetail {
    compartmentId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourcesSearchAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourcesSearchItem {
    compartmentId: pulumi.Input<string>;
    definedTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    externalId: pulumi.Input<string>;
    freeformTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostName: pulumi.Input<string>;
    id: pulumi.Input<string>;
    license: pulumi.Input<string>;
    managementAgentId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    properties: pulumi.Input<pulumi.Input<inputs.StackMonitoringMonitoredResourcesSearchItemProperty>[]>;
    resourceCategory: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
    state: pulumi.Input<string>;
    systemTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated: pulumi.Input<string>;
    timeUpdated: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourcesSearchItemProperty {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface StackMonitoringMonitoredResourcesSearchTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackMonitoringProcessSetSpecification {
    items: pulumi.Input<pulumi.Input<inputs.StackMonitoringProcessSetSpecificationItem>[]>;
}

export interface StackMonitoringProcessSetSpecificationItem {
    label?: pulumi.Input<string>;
    processCommand?: pulumi.Input<string>;
    processLineRegexPattern?: pulumi.Input<string>;
    processUser?: pulumi.Input<string>;
}

export interface StackMonitoringProcessSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamingConnectHarnessTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamingStreamPoolCustomEncryptionKey {
    keyState?: pulumi.Input<string>;
    kmsKeyId: pulumi.Input<string>;
}

export interface StreamingStreamPoolKafkaSettings {
    autoCreateTopicsEnable?: pulumi.Input<boolean>;
    bootstrapServers?: pulumi.Input<string>;
    logRetentionHours?: pulumi.Input<number>;
    numPartitions?: pulumi.Input<number>;
}

export interface StreamingStreamPoolPrivateEndpointSettings {
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    privateEndpointIp?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface StreamingStreamPoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamingStreamTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface UsageProxySubscriptionRedeemableUserItem {
    emailId: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
}

export interface UsageProxySubscriptionRedeemableUserTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VaultSecretRotationConfig {
    isScheduledRotationEnabled?: pulumi.Input<boolean>;
    rotationInterval?: pulumi.Input<string>;
    targetSystemDetails: pulumi.Input<inputs.VaultSecretRotationConfigTargetSystemDetails>;
}

export interface VaultSecretRotationConfigTargetSystemDetails {
    adbId?: pulumi.Input<string>;
    functionId?: pulumi.Input<string>;
    targetSystemType: pulumi.Input<string>;
}

export interface VaultSecretSecretContent {
    content?: pulumi.Input<string>;
    contentType: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    stage?: pulumi.Input<string>;
}

export interface VaultSecretSecretRule {
    isEnforcedOnDeletedSecretVersions?: pulumi.Input<boolean>;
    isSecretContentRetrievalBlockedOnExpiry?: pulumi.Input<boolean>;
    ruleType: pulumi.Input<string>;
    secretVersionExpiryInterval?: pulumi.Input<string>;
    timeOfAbsoluteExpiry?: pulumi.Input<string>;
}

export interface VaultSecretTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VbsInstVbsInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VisualBuilderVbInstanceAlternateCustomEndpoint {
    certificateSecretId?: pulumi.Input<string>;
    certificateSecretVersion?: pulumi.Input<number>;
    hostname: pulumi.Input<string>;
}

export interface VisualBuilderVbInstanceAttachment {
    isImplicit: pulumi.Input<boolean>;
    targetId: pulumi.Input<string>;
    targetInstanceUrl: pulumi.Input<string>;
    targetRole: pulumi.Input<string>;
    targetServiceType: pulumi.Input<string>;
}

export interface VisualBuilderVbInstanceCustomEndpoint {
    certificateSecretId?: pulumi.Input<string>;
    certificateSecretVersion?: pulumi.Input<number>;
    hostname: pulumi.Input<string>;
}

export interface VisualBuilderVbInstanceIdcsInfo {
    idcsAppDisplayName: pulumi.Input<string>;
    idcsAppId: pulumi.Input<string>;
    idcsAppLocationUrl: pulumi.Input<string>;
    idcsAppName: pulumi.Input<string>;
    instancePrimaryAudienceUrl: pulumi.Input<string>;
}

export interface VisualBuilderVbInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VnMonitoringPathAnalysiDestinationEndpoint {
    address?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    listenerId?: pulumi.Input<string>;
    loadBalancerId?: pulumi.Input<string>;
    networkLoadBalancerId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    vlanId?: pulumi.Input<string>;
    vnicId?: pulumi.Input<string>;
}

export interface VnMonitoringPathAnalysiProtocolParameters {
    destinationPort?: pulumi.Input<number>;
    icmpCode?: pulumi.Input<number>;
    icmpType?: pulumi.Input<number>;
    sourcePort?: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface VnMonitoringPathAnalysiQueryOptions {
    isBiDirectionalAnalysis?: pulumi.Input<boolean>;
}

export interface VnMonitoringPathAnalysiSourceEndpoint {
    address?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    listenerId?: pulumi.Input<string>;
    loadBalancerId?: pulumi.Input<string>;
    networkLoadBalancerId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    vlanId?: pulumi.Input<string>;
    vnicId?: pulumi.Input<string>;
}

export interface VnMonitoringPathAnalysiTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VnMonitoringPathAnalyzerTestDestinationEndpoint {
    address?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    listenerId?: pulumi.Input<string>;
    loadBalancerId?: pulumi.Input<string>;
    networkLoadBalancerId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    vlanId?: pulumi.Input<string>;
    vnicId?: pulumi.Input<string>;
}

export interface VnMonitoringPathAnalyzerTestProtocolParameters {
    destinationPort?: pulumi.Input<number>;
    icmpCode?: pulumi.Input<number>;
    icmpType?: pulumi.Input<number>;
    sourcePort?: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface VnMonitoringPathAnalyzerTestQueryOptions {
    isBiDirectionalAnalysis?: pulumi.Input<boolean>;
}

export interface VnMonitoringPathAnalyzerTestSourceEndpoint {
    address?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    listenerId?: pulumi.Input<string>;
    loadBalancerId?: pulumi.Input<string>;
    networkLoadBalancerId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    vlanId?: pulumi.Input<string>;
    vnicId?: pulumi.Input<string>;
}

export interface VnMonitoringPathAnalyzerTestTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VulnerabilityScanningContainerScanRecipeScanSettings {
    scanLevel: pulumi.Input<string>;
}

export interface VulnerabilityScanningContainerScanRecipeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VulnerabilityScanningContainerScanTargetTargetRegistry {
    compartmentId: pulumi.Input<string>;
    repositories?: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface VulnerabilityScanningContainerScanTargetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VulnerabilityScanningHostScanRecipeAgentSettings {
    agentConfiguration?: pulumi.Input<inputs.VulnerabilityScanningHostScanRecipeAgentSettingsAgentConfiguration>;
    scanLevel: pulumi.Input<string>;
}

export interface VulnerabilityScanningHostScanRecipeAgentSettingsAgentConfiguration {
    cisBenchmarkSettings?: pulumi.Input<inputs.VulnerabilityScanningHostScanRecipeAgentSettingsAgentConfigurationCisBenchmarkSettings>;
    endpointProtectionSettings?: pulumi.Input<inputs.VulnerabilityScanningHostScanRecipeAgentSettingsAgentConfigurationEndpointProtectionSettings>;
    shouldUnInstall?: pulumi.Input<boolean>;
    vaultSecretId?: pulumi.Input<string>;
    vendor: pulumi.Input<string>;
    vendorType?: pulumi.Input<string>;
}

export interface VulnerabilityScanningHostScanRecipeAgentSettingsAgentConfigurationCisBenchmarkSettings {
    scanLevel?: pulumi.Input<string>;
}

export interface VulnerabilityScanningHostScanRecipeAgentSettingsAgentConfigurationEndpointProtectionSettings {
    scanLevel?: pulumi.Input<string>;
}

export interface VulnerabilityScanningHostScanRecipeApplicationSettings {
    applicationScanRecurrence: pulumi.Input<string>;
    foldersToScans: pulumi.Input<pulumi.Input<inputs.VulnerabilityScanningHostScanRecipeApplicationSettingsFoldersToScan>[]>;
    isEnabled: pulumi.Input<boolean>;
}

export interface VulnerabilityScanningHostScanRecipeApplicationSettingsFoldersToScan {
    folder: pulumi.Input<string>;
    operatingsystem: pulumi.Input<string>;
}

export interface VulnerabilityScanningHostScanRecipePortSettings {
    scanLevel: pulumi.Input<string>;
}

export interface VulnerabilityScanningHostScanRecipeSchedule {
    dayOfWeek?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface VulnerabilityScanningHostScanRecipeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VulnerabilityScanningHostScanTargetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WaaWebAppAccelerationPolicyResponseCachingPolicy {
    isResponseHeaderBasedCachingEnabled?: pulumi.Input<boolean>;
}

export interface WaaWebAppAccelerationPolicyResponseCompressionPolicy {
    gzipCompression?: pulumi.Input<inputs.WaaWebAppAccelerationPolicyResponseCompressionPolicyGzipCompression>;
}

export interface WaaWebAppAccelerationPolicyResponseCompressionPolicyGzipCompression {
    isEnabled?: pulumi.Input<boolean>;
}

export interface WaaWebAppAccelerationPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WaaWebAppAccelerationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WaasAddressListTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WaasCertificateExtension {
    isCritical: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface WaasCertificateIssuerName {
    commonName: pulumi.Input<string>;
    country: pulumi.Input<string>;
    emailAddress: pulumi.Input<string>;
    locality: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    organizationalUnit: pulumi.Input<string>;
    stateProvince: pulumi.Input<string>;
}

export interface WaasCertificatePublicKeyInfo {
    algorithm: pulumi.Input<string>;
    exponent: pulumi.Input<number>;
    keySize: pulumi.Input<number>;
}

export interface WaasCertificateSubjectName {
    commonName: pulumi.Input<string>;
    country: pulumi.Input<string>;
    emailAddress: pulumi.Input<string>;
    locality: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    organizationalUnit: pulumi.Input<string>;
    stateProvince: pulumi.Input<string>;
}

export interface WaasCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WaasCustomProtectionRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WaasHttpRedirectTarget {
    host: pulumi.Input<string>;
    path: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    query: pulumi.Input<string>;
}

export interface WaasHttpRedirectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WaasProtectionRuleExclusion {
    exclusions?: pulumi.Input<pulumi.Input<string>[]>;
    target?: pulumi.Input<string>;
}

export interface WaasProtectionRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WaasPurgeCacheTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WaasWaasPolicyOrigin {
    customHeaders?: pulumi.Input<pulumi.Input<inputs.WaasWaasPolicyOriginCustomHeader>[]>;
    httpPort?: pulumi.Input<number>;
    httpsPort?: pulumi.Input<number>;
    label: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface WaasWaasPolicyOriginCustomHeader {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface WaasWaasPolicyOriginGroup {
    label: pulumi.Input<string>;
    originGroups: pulumi.Input<pulumi.Input<inputs.WaasWaasPolicyOriginGroupOriginGroup>[]>;
}

export interface WaasWaasPolicyOriginGroupOriginGroup {
    origin: pulumi.Input<string>;
    weight?: pulumi.Input<number>;
}

export interface WaasWaasPolicyPolicyConfig {
    certificateId?: pulumi.Input<string>;
    cipherGroup?: pulumi.Input<string>;
    clientAddressHeader?: pulumi.Input<string>;
    healthChecks?: pulumi.Input<inputs.WaasWaasPolicyPolicyConfigHealthChecks>;
    isBehindCdn?: pulumi.Input<boolean>;
    isCacheControlRespected?: pulumi.Input<boolean>;
    isHttpsEnabled?: pulumi.Input<boolean>;
    isHttpsForced?: pulumi.Input<boolean>;
    isOriginCompressionEnabled?: pulumi.Input<boolean>;
    isResponseBufferingEnabled?: pulumi.Input<boolean>;
    isSniEnabled?: pulumi.Input<boolean>;
    loadBalancingMethod?: pulumi.Input<inputs.WaasWaasPolicyPolicyConfigLoadBalancingMethod>;
    tlsProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    websocketPathPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WaasWaasPolicyPolicyConfigHealthChecks {
    expectedResponseCodeGroups?: pulumi.Input<pulumi.Input<string>[]>;
    expectedResponseText?: pulumi.Input<string>;
    headers?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    healthyThreshold?: pulumi.Input<number>;
    intervalInSeconds?: pulumi.Input<number>;
    isEnabled?: pulumi.Input<boolean>;
    isResponseTextCheckEnabled?: pulumi.Input<boolean>;
    method?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    timeoutInSeconds?: pulumi.Input<number>;
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface WaasWaasPolicyPolicyConfigLoadBalancingMethod {
    domain?: pulumi.Input<string>;
    expirationTimeInSeconds?: pulumi.Input<number>;
    method: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface WaasWaasPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WaasWaasPolicyWafConfig {
    accessRules?: pulumi.Input<pulumi.Input<inputs.WaasWaasPolicyWafConfigAccessRule>[]>;
    addressRateLimiting?: pulumi.Input<inputs.WaasWaasPolicyWafConfigAddressRateLimiting>;
    cachingRules?: pulumi.Input<pulumi.Input<inputs.WaasWaasPolicyWafConfigCachingRule>[]>;
    captchas?: pulumi.Input<pulumi.Input<inputs.WaasWaasPolicyWafConfigCaptcha>[]>;
    customProtectionRules?: pulumi.Input<pulumi.Input<inputs.WaasWaasPolicyWafConfigCustomProtectionRule>[]>;
    deviceFingerprintChallenge?: pulumi.Input<inputs.WaasWaasPolicyWafConfigDeviceFingerprintChallenge>;
    humanInteractionChallenge?: pulumi.Input<inputs.WaasWaasPolicyWafConfigHumanInteractionChallenge>;
    jsChallenge?: pulumi.Input<inputs.WaasWaasPolicyWafConfigJsChallenge>;
    origin?: pulumi.Input<string>;
    originGroups?: pulumi.Input<pulumi.Input<string>[]>;
    protectionSettings?: pulumi.Input<inputs.WaasWaasPolicyWafConfigProtectionSettings>;
    whitelists?: pulumi.Input<pulumi.Input<inputs.WaasWaasPolicyWafConfigWhitelist>[]>;
}

export interface WaasWaasPolicyWafConfigAccessRule {
    action: pulumi.Input<string>;
    blockAction?: pulumi.Input<string>;
    blockErrorPageCode?: pulumi.Input<string>;
    blockErrorPageDescription?: pulumi.Input<string>;
    blockErrorPageMessage?: pulumi.Input<string>;
    blockResponseCode?: pulumi.Input<number>;
    bypassChallenges?: pulumi.Input<pulumi.Input<string>[]>;
    captchaFooter?: pulumi.Input<string>;
    captchaHeader?: pulumi.Input<string>;
    captchaSubmitLabel?: pulumi.Input<string>;
    captchaTitle?: pulumi.Input<string>;
    criterias: pulumi.Input<pulumi.Input<inputs.WaasWaasPolicyWafConfigAccessRuleCriteria>[]>;
    name: pulumi.Input<string>;
    redirectResponseCode?: pulumi.Input<string>;
    redirectUrl?: pulumi.Input<string>;
    responseHeaderManipulations?: pulumi.Input<pulumi.Input<inputs.WaasWaasPolicyWafConfigAccessRuleResponseHeaderManipulation>[]>;
}

export interface WaasWaasPolicyWafConfigAccessRuleCriteria {
    condition: pulumi.Input<string>;
    isCaseSensitive?: pulumi.Input<boolean>;
    value: pulumi.Input<string>;
}

export interface WaasWaasPolicyWafConfigAccessRuleResponseHeaderManipulation {
    action: pulumi.Input<string>;
    header: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface WaasWaasPolicyWafConfigAddressRateLimiting {
    allowedRatePerAddress?: pulumi.Input<number>;
    blockResponseCode?: pulumi.Input<number>;
    isEnabled: pulumi.Input<boolean>;
    maxDelayedCountPerAddress?: pulumi.Input<number>;
}

export interface WaasWaasPolicyWafConfigCachingRule {
    action: pulumi.Input<string>;
    cachingDuration?: pulumi.Input<string>;
    clientCachingDuration?: pulumi.Input<string>;
    criterias: pulumi.Input<pulumi.Input<inputs.WaasWaasPolicyWafConfigCachingRuleCriteria>[]>;
    isClientCachingEnabled?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface WaasWaasPolicyWafConfigCachingRuleCriteria {
    condition: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface WaasWaasPolicyWafConfigCaptcha {
    failureMessage: pulumi.Input<string>;
    footerText?: pulumi.Input<string>;
    headerText?: pulumi.Input<string>;
    sessionExpirationInSeconds: pulumi.Input<number>;
    submitLabel: pulumi.Input<string>;
    title: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface WaasWaasPolicyWafConfigCustomProtectionRule {
    action?: pulumi.Input<string>;
    exclusions?: pulumi.Input<pulumi.Input<inputs.WaasWaasPolicyWafConfigCustomProtectionRuleExclusion>[]>;
    id?: pulumi.Input<string>;
}

export interface WaasWaasPolicyWafConfigCustomProtectionRuleExclusion {
    exclusions?: pulumi.Input<pulumi.Input<string>[]>;
    target?: pulumi.Input<string>;
}

export interface WaasWaasPolicyWafConfigDeviceFingerprintChallenge {
    action?: pulumi.Input<string>;
    actionExpirationInSeconds?: pulumi.Input<number>;
    challengeSettings?: pulumi.Input<inputs.WaasWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings>;
    failureThreshold?: pulumi.Input<number>;
    failureThresholdExpirationInSeconds?: pulumi.Input<number>;
    isEnabled: pulumi.Input<boolean>;
    maxAddressCount?: pulumi.Input<number>;
    maxAddressCountExpirationInSeconds?: pulumi.Input<number>;
}

export interface WaasWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings {
    blockAction?: pulumi.Input<string>;
    blockErrorPageCode?: pulumi.Input<string>;
    blockErrorPageDescription?: pulumi.Input<string>;
    blockErrorPageMessage?: pulumi.Input<string>;
    blockResponseCode?: pulumi.Input<number>;
    captchaFooter?: pulumi.Input<string>;
    captchaHeader?: pulumi.Input<string>;
    captchaSubmitLabel?: pulumi.Input<string>;
    captchaTitle?: pulumi.Input<string>;
}

export interface WaasWaasPolicyWafConfigHumanInteractionChallenge {
    action?: pulumi.Input<string>;
    actionExpirationInSeconds?: pulumi.Input<number>;
    challengeSettings?: pulumi.Input<inputs.WaasWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings>;
    failureThreshold?: pulumi.Input<number>;
    failureThresholdExpirationInSeconds?: pulumi.Input<number>;
    interactionThreshold?: pulumi.Input<number>;
    isEnabled: pulumi.Input<boolean>;
    isNatEnabled?: pulumi.Input<boolean>;
    recordingPeriodInSeconds?: pulumi.Input<number>;
    setHttpHeader?: pulumi.Input<inputs.WaasWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader>;
}

export interface WaasWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings {
    blockAction?: pulumi.Input<string>;
    blockErrorPageCode?: pulumi.Input<string>;
    blockErrorPageDescription?: pulumi.Input<string>;
    blockErrorPageMessage?: pulumi.Input<string>;
    blockResponseCode?: pulumi.Input<number>;
    captchaFooter?: pulumi.Input<string>;
    captchaHeader?: pulumi.Input<string>;
    captchaSubmitLabel?: pulumi.Input<string>;
    captchaTitle?: pulumi.Input<string>;
}

export interface WaasWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface WaasWaasPolicyWafConfigJsChallenge {
    action?: pulumi.Input<string>;
    actionExpirationInSeconds?: pulumi.Input<number>;
    areRedirectsChallenged?: pulumi.Input<boolean>;
    challengeSettings?: pulumi.Input<inputs.WaasWaasPolicyWafConfigJsChallengeChallengeSettings>;
    criterias?: pulumi.Input<pulumi.Input<inputs.WaasWaasPolicyWafConfigJsChallengeCriteria>[]>;
    failureThreshold?: pulumi.Input<number>;
    isEnabled: pulumi.Input<boolean>;
    isNatEnabled?: pulumi.Input<boolean>;
    setHttpHeader?: pulumi.Input<inputs.WaasWaasPolicyWafConfigJsChallengeSetHttpHeader>;
}

export interface WaasWaasPolicyWafConfigJsChallengeChallengeSettings {
    blockAction?: pulumi.Input<string>;
    blockErrorPageCode?: pulumi.Input<string>;
    blockErrorPageDescription?: pulumi.Input<string>;
    blockErrorPageMessage?: pulumi.Input<string>;
    blockResponseCode?: pulumi.Input<number>;
    captchaFooter?: pulumi.Input<string>;
    captchaHeader?: pulumi.Input<string>;
    captchaSubmitLabel?: pulumi.Input<string>;
    captchaTitle?: pulumi.Input<string>;
}

export interface WaasWaasPolicyWafConfigJsChallengeCriteria {
    condition: pulumi.Input<string>;
    isCaseSensitive?: pulumi.Input<boolean>;
    value: pulumi.Input<string>;
}

export interface WaasWaasPolicyWafConfigJsChallengeSetHttpHeader {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface WaasWaasPolicyWafConfigProtectionSettings {
    allowedHttpMethods?: pulumi.Input<pulumi.Input<string>[]>;
    blockAction?: pulumi.Input<string>;
    blockErrorPageCode?: pulumi.Input<string>;
    blockErrorPageDescription?: pulumi.Input<string>;
    blockErrorPageMessage?: pulumi.Input<string>;
    blockResponseCode?: pulumi.Input<number>;
    isResponseInspected?: pulumi.Input<boolean>;
    maxArgumentCount?: pulumi.Input<number>;
    maxNameLengthPerArgument?: pulumi.Input<number>;
    maxResponseSizeInKiB?: pulumi.Input<number>;
    maxTotalNameLengthOfArguments?: pulumi.Input<number>;
    mediaTypes?: pulumi.Input<pulumi.Input<string>[]>;
    recommendationsPeriodInDays?: pulumi.Input<number>;
}

export interface WaasWaasPolicyWafConfigWhitelist {
    addressLists?: pulumi.Input<pulumi.Input<string>[]>;
    addresses?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
}

export interface WafNetworkAddressListTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WafNetworkAddressListVcnAddress {
    addresses?: pulumi.Input<string>;
    vcnId?: pulumi.Input<string>;
}

export interface WafWebAppFirewallPolicyAction {
    body?: pulumi.Input<inputs.WafWebAppFirewallPolicyActionBody>;
    code?: pulumi.Input<number>;
    headers?: pulumi.Input<pulumi.Input<inputs.WafWebAppFirewallPolicyActionHeader>[]>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WafWebAppFirewallPolicyActionBody {
    template?: pulumi.Input<string>;
    text?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WafWebAppFirewallPolicyActionHeader {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface WafWebAppFirewallPolicyRequestAccessControl {
    defaultActionName: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<inputs.WafWebAppFirewallPolicyRequestAccessControlRule>[]>;
}

export interface WafWebAppFirewallPolicyRequestAccessControlRule {
    actionName: pulumi.Input<string>;
    condition?: pulumi.Input<string>;
    conditionLanguage?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WafWebAppFirewallPolicyRequestProtection {
    bodyInspectionSizeLimitExceededActionName?: pulumi.Input<string>;
    bodyInspectionSizeLimitInBytes?: pulumi.Input<number>;
    rules?: pulumi.Input<pulumi.Input<inputs.WafWebAppFirewallPolicyRequestProtectionRule>[]>;
}

export interface WafWebAppFirewallPolicyRequestProtectionRule {
    actionName: pulumi.Input<string>;
    condition?: pulumi.Input<string>;
    conditionLanguage?: pulumi.Input<string>;
    isBodyInspectionEnabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    protectionCapabilities: pulumi.Input<pulumi.Input<inputs.WafWebAppFirewallPolicyRequestProtectionRuleProtectionCapability>[]>;
    protectionCapabilitySettings?: pulumi.Input<inputs.WafWebAppFirewallPolicyRequestProtectionRuleProtectionCapabilitySettings>;
    type: pulumi.Input<string>;
}

export interface WafWebAppFirewallPolicyRequestProtectionRuleProtectionCapability {
    actionName?: pulumi.Input<string>;
    collaborativeActionThreshold?: pulumi.Input<number>;
    collaborativeWeights?: pulumi.Input<pulumi.Input<inputs.WafWebAppFirewallPolicyRequestProtectionRuleProtectionCapabilityCollaborativeWeight>[]>;
    exclusions?: pulumi.Input<inputs.WafWebAppFirewallPolicyRequestProtectionRuleProtectionCapabilityExclusions>;
    key: pulumi.Input<string>;
    version: pulumi.Input<number>;
}

export interface WafWebAppFirewallPolicyRequestProtectionRuleProtectionCapabilityCollaborativeWeight {
    key: pulumi.Input<string>;
    weight: pulumi.Input<number>;
}

export interface WafWebAppFirewallPolicyRequestProtectionRuleProtectionCapabilityExclusions {
    args?: pulumi.Input<pulumi.Input<string>[]>;
    requestCookies?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WafWebAppFirewallPolicyRequestProtectionRuleProtectionCapabilitySettings {
    allowedHttpMethods?: pulumi.Input<pulumi.Input<string>[]>;
    maxHttpRequestHeaderLength?: pulumi.Input<number>;
    maxHttpRequestHeaders?: pulumi.Input<number>;
    maxNumberOfArguments?: pulumi.Input<number>;
    maxSingleArgumentLength?: pulumi.Input<number>;
    maxTotalArgumentLength?: pulumi.Input<number>;
}

export interface WafWebAppFirewallPolicyRequestRateLimiting {
    rules?: pulumi.Input<pulumi.Input<inputs.WafWebAppFirewallPolicyRequestRateLimitingRule>[]>;
}

export interface WafWebAppFirewallPolicyRequestRateLimitingRule {
    actionName: pulumi.Input<string>;
    condition?: pulumi.Input<string>;
    conditionLanguage?: pulumi.Input<string>;
    configurations: pulumi.Input<pulumi.Input<inputs.WafWebAppFirewallPolicyRequestRateLimitingRuleConfiguration>[]>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WafWebAppFirewallPolicyRequestRateLimitingRuleConfiguration {
    actionDurationInSeconds?: pulumi.Input<number>;
    periodInSeconds: pulumi.Input<number>;
    requestsLimit: pulumi.Input<number>;
}

export interface WafWebAppFirewallPolicyResponseAccessControl {
    rules?: pulumi.Input<pulumi.Input<inputs.WafWebAppFirewallPolicyResponseAccessControlRule>[]>;
}

export interface WafWebAppFirewallPolicyResponseAccessControlRule {
    actionName: pulumi.Input<string>;
    condition?: pulumi.Input<string>;
    conditionLanguage?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WafWebAppFirewallPolicyResponseProtection {
    rules?: pulumi.Input<pulumi.Input<inputs.WafWebAppFirewallPolicyResponseProtectionRule>[]>;
}

export interface WafWebAppFirewallPolicyResponseProtectionRule {
    actionName: pulumi.Input<string>;
    condition?: pulumi.Input<string>;
    conditionLanguage?: pulumi.Input<string>;
    isBodyInspectionEnabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    protectionCapabilities: pulumi.Input<pulumi.Input<inputs.WafWebAppFirewallPolicyResponseProtectionRuleProtectionCapability>[]>;
    protectionCapabilitySettings?: pulumi.Input<inputs.WafWebAppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettings>;
    type: pulumi.Input<string>;
}

export interface WafWebAppFirewallPolicyResponseProtectionRuleProtectionCapability {
    actionName?: pulumi.Input<string>;
    collaborativeActionThreshold?: pulumi.Input<number>;
    collaborativeWeights?: pulumi.Input<pulumi.Input<inputs.WafWebAppFirewallPolicyResponseProtectionRuleProtectionCapabilityCollaborativeWeight>[]>;
    exclusions?: pulumi.Input<inputs.WafWebAppFirewallPolicyResponseProtectionRuleProtectionCapabilityExclusions>;
    key: pulumi.Input<string>;
    version: pulumi.Input<number>;
}

export interface WafWebAppFirewallPolicyResponseProtectionRuleProtectionCapabilityCollaborativeWeight {
    key: pulumi.Input<string>;
    weight: pulumi.Input<number>;
}

export interface WafWebAppFirewallPolicyResponseProtectionRuleProtectionCapabilityExclusions {
    args?: pulumi.Input<pulumi.Input<string>[]>;
    requestCookies?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WafWebAppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettings {
    allowedHttpMethods?: pulumi.Input<pulumi.Input<string>[]>;
    maxHttpRequestHeaderLength?: pulumi.Input<number>;
    maxHttpRequestHeaders?: pulumi.Input<number>;
    maxNumberOfArguments?: pulumi.Input<number>;
    maxSingleArgumentLength?: pulumi.Input<number>;
    maxTotalArgumentLength?: pulumi.Input<number>;
}

export interface WafWebAppFirewallPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WafWebAppFirewallTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}
