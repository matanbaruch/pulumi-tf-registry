// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceMeshVirtualDeployments(args: GetServiceMeshVirtualDeploymentsArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceMeshVirtualDeploymentsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getServiceMeshVirtualDeployments:getServiceMeshVirtualDeployments", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "state": args.state,
        "virtualServiceId": args.virtualServiceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceMeshVirtualDeployments.
 */
export interface GetServiceMeshVirtualDeploymentsArgs {
    compartmentId: string;
    filters?: inputs.GetServiceMeshVirtualDeploymentsFilter[];
    id?: string;
    name?: string;
    state?: string;
    virtualServiceId?: string;
}

/**
 * A collection of values returned by getServiceMeshVirtualDeployments.
 */
export interface GetServiceMeshVirtualDeploymentsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.GetServiceMeshVirtualDeploymentsFilter[];
    readonly id?: string;
    readonly name?: string;
    readonly state?: string;
    readonly virtualDeploymentCollections: outputs.GetServiceMeshVirtualDeploymentsVirtualDeploymentCollection[];
    readonly virtualServiceId?: string;
}
export function getServiceMeshVirtualDeploymentsOutput(args: GetServiceMeshVirtualDeploymentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceMeshVirtualDeploymentsResult> {
    return pulumi.output(args).apply((a: any) => getServiceMeshVirtualDeployments(a, opts))
}

/**
 * A collection of arguments for invoking getServiceMeshVirtualDeployments.
 */
export interface GetServiceMeshVirtualDeploymentsOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetServiceMeshVirtualDeploymentsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    virtualServiceId?: pulumi.Input<string>;
}
