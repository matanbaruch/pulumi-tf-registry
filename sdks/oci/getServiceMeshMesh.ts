// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceMeshMesh(args: GetServiceMeshMeshArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceMeshMeshResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getServiceMeshMesh:getServiceMeshMesh", {
        "meshId": args.meshId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceMeshMesh.
 */
export interface GetServiceMeshMeshArgs {
    meshId: string;
}

/**
 * A collection of values returned by getServiceMeshMesh.
 */
export interface GetServiceMeshMeshResult {
    readonly certificateAuthorities: outputs.GetServiceMeshMeshCertificateAuthority[];
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly meshId: string;
    readonly mtls: outputs.GetServiceMeshMeshMtl[];
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getServiceMeshMeshOutput(args: GetServiceMeshMeshOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceMeshMeshResult> {
    return pulumi.output(args).apply((a: any) => getServiceMeshMesh(a, opts))
}

/**
 * A collection of arguments for invoking getServiceMeshMesh.
 */
export interface GetServiceMeshMeshOutputArgs {
    meshId: pulumi.Input<string>;
}
