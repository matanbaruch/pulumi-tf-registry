// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudMigrationsTargetAsset(args: GetCloudMigrationsTargetAssetArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudMigrationsTargetAssetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCloudMigrationsTargetAsset:getCloudMigrationsTargetAsset", {
        "targetAssetId": args.targetAssetId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudMigrationsTargetAsset.
 */
export interface GetCloudMigrationsTargetAssetArgs {
    targetAssetId: string;
}

/**
 * A collection of values returned by getCloudMigrationsTargetAsset.
 */
export interface GetCloudMigrationsTargetAssetResult {
    readonly blockVolumesPerformance: number;
    readonly compartmentId: string;
    readonly compatibilityMessages: outputs.GetCloudMigrationsTargetAssetCompatibilityMessage[];
    readonly createdResourceId: string;
    readonly displayName: string;
    readonly estimatedCosts: outputs.GetCloudMigrationsTargetAssetEstimatedCost[];
    readonly id: string;
    readonly isExcludedFromExecution: boolean;
    readonly lifecycleDetails: string;
    readonly migrationAssets: outputs.GetCloudMigrationsTargetAssetMigrationAsset[];
    readonly migrationPlanId: string;
    readonly msLicense: string;
    readonly preferredShapeType: string;
    readonly recommendedSpecs: outputs.GetCloudMigrationsTargetAssetRecommendedSpec[];
    readonly state: string;
    readonly targetAssetId: string;
    readonly testSpecs: outputs.GetCloudMigrationsTargetAssetTestSpec[];
    readonly timeAssessed: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly type: string;
    readonly userSpecs: outputs.GetCloudMigrationsTargetAssetUserSpec[];
}
export function getCloudMigrationsTargetAssetOutput(args: GetCloudMigrationsTargetAssetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudMigrationsTargetAssetResult> {
    return pulumi.output(args).apply((a: any) => getCloudMigrationsTargetAsset(a, opts))
}

/**
 * A collection of arguments for invoking getCloudMigrationsTargetAsset.
 */
export interface GetCloudMigrationsTargetAssetOutputArgs {
    targetAssetId: pulumi.Input<string>;
}
