// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceMeshVirtualServiceRouteTable(args: GetServiceMeshVirtualServiceRouteTableArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceMeshVirtualServiceRouteTableResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getServiceMeshVirtualServiceRouteTable:getServiceMeshVirtualServiceRouteTable", {
        "virtualServiceRouteTableId": args.virtualServiceRouteTableId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceMeshVirtualServiceRouteTable.
 */
export interface GetServiceMeshVirtualServiceRouteTableArgs {
    virtualServiceRouteTableId: string;
}

/**
 * A collection of values returned by getServiceMeshVirtualServiceRouteTable.
 */
export interface GetServiceMeshVirtualServiceRouteTableResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly name: string;
    readonly priority: number;
    readonly routeRules: outputs.GetServiceMeshVirtualServiceRouteTableRouteRule[];
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly virtualServiceId: string;
    readonly virtualServiceRouteTableId: string;
}
export function getServiceMeshVirtualServiceRouteTableOutput(args: GetServiceMeshVirtualServiceRouteTableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceMeshVirtualServiceRouteTableResult> {
    return pulumi.output(args).apply((a: any) => getServiceMeshVirtualServiceRouteTable(a, opts))
}

/**
 * A collection of arguments for invoking getServiceMeshVirtualServiceRouteTable.
 */
export interface GetServiceMeshVirtualServiceRouteTableOutputArgs {
    virtualServiceRouteTableId: pulumi.Input<string>;
}
