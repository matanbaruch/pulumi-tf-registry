// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCertificatesManagementCertificateAuthorityVersions(args: GetCertificatesManagementCertificateAuthorityVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificatesManagementCertificateAuthorityVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCertificatesManagementCertificateAuthorityVersions:getCertificatesManagementCertificateAuthorityVersions", {
        "certificateAuthorityId": args.certificateAuthorityId,
        "filters": args.filters,
        "id": args.id,
        "versionNumber": args.versionNumber,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCertificatesManagementCertificateAuthorityVersions.
 */
export interface GetCertificatesManagementCertificateAuthorityVersionsArgs {
    certificateAuthorityId: string;
    filters?: inputs.GetCertificatesManagementCertificateAuthorityVersionsFilter[];
    id?: string;
    versionNumber?: string;
}

/**
 * A collection of values returned by getCertificatesManagementCertificateAuthorityVersions.
 */
export interface GetCertificatesManagementCertificateAuthorityVersionsResult {
    readonly certificateAuthorityId: string;
    readonly certificateAuthorityVersionCollections: outputs.GetCertificatesManagementCertificateAuthorityVersionsCertificateAuthorityVersionCollection[];
    readonly filters?: outputs.GetCertificatesManagementCertificateAuthorityVersionsFilter[];
    readonly id: string;
    readonly versionNumber?: string;
}
export function getCertificatesManagementCertificateAuthorityVersionsOutput(args: GetCertificatesManagementCertificateAuthorityVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificatesManagementCertificateAuthorityVersionsResult> {
    return pulumi.output(args).apply((a: any) => getCertificatesManagementCertificateAuthorityVersions(a, opts))
}

/**
 * A collection of arguments for invoking getCertificatesManagementCertificateAuthorityVersions.
 */
export interface GetCertificatesManagementCertificateAuthorityVersionsOutputArgs {
    certificateAuthorityId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetCertificatesManagementCertificateAuthorityVersionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    versionNumber?: pulumi.Input<string>;
}
