// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDevopsRepoFileLine(args: GetDevopsRepoFileLineArgs, opts?: pulumi.InvokeOptions): Promise<GetDevopsRepoFileLineResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDevopsRepoFileLine:getDevopsRepoFileLine", {
        "filePath": args.filePath,
        "id": args.id,
        "repositoryId": args.repositoryId,
        "revision": args.revision,
        "startLineNumber": args.startLineNumber,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDevopsRepoFileLine.
 */
export interface GetDevopsRepoFileLineArgs {
    filePath: string;
    id?: string;
    repositoryId: string;
    revision: string;
    startLineNumber?: number;
}

/**
 * A collection of values returned by getDevopsRepoFileLine.
 */
export interface GetDevopsRepoFileLineResult {
    readonly filePath: string;
    readonly id: string;
    readonly lines: outputs.GetDevopsRepoFileLineLine[];
    readonly repositoryId: string;
    readonly revision: string;
    readonly startLineNumber?: number;
}
export function getDevopsRepoFileLineOutput(args: GetDevopsRepoFileLineOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDevopsRepoFileLineResult> {
    return pulumi.output(args).apply((a: any) => getDevopsRepoFileLine(a, opts))
}

/**
 * A collection of arguments for invoking getDevopsRepoFileLine.
 */
export interface GetDevopsRepoFileLineOutputArgs {
    filePath: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    repositoryId: pulumi.Input<string>;
    revision: pulumi.Input<string>;
    startLineNumber?: pulumi.Input<number>;
}
