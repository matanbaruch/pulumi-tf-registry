// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecretsSecretbundleVersions(args: GetSecretsSecretbundleVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretsSecretbundleVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getSecretsSecretbundleVersions:getSecretsSecretbundleVersions", {
        "filters": args.filters,
        "id": args.id,
        "secretId": args.secretId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecretsSecretbundleVersions.
 */
export interface GetSecretsSecretbundleVersionsArgs {
    filters?: inputs.GetSecretsSecretbundleVersionsFilter[];
    id?: string;
    secretId: string;
}

/**
 * A collection of values returned by getSecretsSecretbundleVersions.
 */
export interface GetSecretsSecretbundleVersionsResult {
    readonly filters?: outputs.GetSecretsSecretbundleVersionsFilter[];
    readonly id: string;
    readonly secretBundleVersions: outputs.GetSecretsSecretbundleVersionsSecretBundleVersion[];
    readonly secretId: string;
}
export function getSecretsSecretbundleVersionsOutput(args: GetSecretsSecretbundleVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretsSecretbundleVersionsResult> {
    return pulumi.output(args).apply((a: any) => getSecretsSecretbundleVersions(a, opts))
}

/**
 * A collection of arguments for invoking getSecretsSecretbundleVersions.
 */
export interface GetSecretsSecretbundleVersionsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetSecretsSecretbundleVersionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    secretId: pulumi.Input<string>;
}
