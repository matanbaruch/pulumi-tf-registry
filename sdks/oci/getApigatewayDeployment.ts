// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApigatewayDeployment(args: GetApigatewayDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayDeploymentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getApigatewayDeployment:getApigatewayDeployment", {
        "deploymentId": args.deploymentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayDeployment.
 */
export interface GetApigatewayDeploymentArgs {
    deploymentId: string;
}

/**
 * A collection of values returned by getApigatewayDeployment.
 */
export interface GetApigatewayDeploymentResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly deploymentId: string;
    readonly displayName: string;
    readonly endpoint: string;
    readonly freeformTags: {[key: string]: string};
    readonly gatewayId: string;
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly pathPrefix: string;
    readonly specifications: outputs.GetApigatewayDeploymentSpecification[];
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getApigatewayDeploymentOutput(args: GetApigatewayDeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayDeploymentResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayDeployment(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayDeployment.
 */
export interface GetApigatewayDeploymentOutputArgs {
    deploymentId: pulumi.Input<string>;
}
