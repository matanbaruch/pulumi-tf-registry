// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseExadataInfrastructureUnAllocatedResource(args: GetDatabaseExadataInfrastructureUnAllocatedResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseExadataInfrastructureUnAllocatedResourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseExadataInfrastructureUnAllocatedResource:getDatabaseExadataInfrastructureUnAllocatedResource", {
        "dbServers": args.dbServers,
        "exadataInfrastructureId": args.exadataInfrastructureId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseExadataInfrastructureUnAllocatedResource.
 */
export interface GetDatabaseExadataInfrastructureUnAllocatedResourceArgs {
    dbServers?: string[];
    exadataInfrastructureId: string;
    id?: string;
}

/**
 * A collection of values returned by getDatabaseExadataInfrastructureUnAllocatedResource.
 */
export interface GetDatabaseExadataInfrastructureUnAllocatedResourceResult {
    readonly autonomousVmClusters: outputs.GetDatabaseExadataInfrastructureUnAllocatedResourceAutonomousVmCluster[];
    readonly dbServers?: string[];
    readonly displayName: string;
    readonly exadataInfrastructureId: string;
    readonly exadataStorageInTbs: number;
    readonly id: string;
    readonly localStorageInGbs: number;
    readonly memoryInGbs: number;
    readonly ocpus: number;
}
export function getDatabaseExadataInfrastructureUnAllocatedResourceOutput(args: GetDatabaseExadataInfrastructureUnAllocatedResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseExadataInfrastructureUnAllocatedResourceResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseExadataInfrastructureUnAllocatedResource(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseExadataInfrastructureUnAllocatedResource.
 */
export interface GetDatabaseExadataInfrastructureUnAllocatedResourceOutputArgs {
    dbServers?: pulumi.Input<pulumi.Input<string>[]>;
    exadataInfrastructureId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
