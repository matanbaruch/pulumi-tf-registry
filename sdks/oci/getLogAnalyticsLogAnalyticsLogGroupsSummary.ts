// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogAnalyticsLogAnalyticsLogGroupsSummary(args: GetLogAnalyticsLogAnalyticsLogGroupsSummaryArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsLogAnalyticsLogGroupsSummaryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLogAnalyticsLogAnalyticsLogGroupsSummary:getLogAnalyticsLogAnalyticsLogGroupsSummary", {
        "compartmentId": args.compartmentId,
        "id": args.id,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogAnalyticsLogAnalyticsLogGroupsSummary.
 */
export interface GetLogAnalyticsLogAnalyticsLogGroupsSummaryArgs {
    compartmentId: string;
    id?: string;
    namespace: string;
}

/**
 * A collection of values returned by getLogAnalyticsLogAnalyticsLogGroupsSummary.
 */
export interface GetLogAnalyticsLogAnalyticsLogGroupsSummaryResult {
    readonly compartmentId: string;
    readonly id: string;
    readonly logGroupCount: number;
    readonly namespace: string;
}
export function getLogAnalyticsLogAnalyticsLogGroupsSummaryOutput(args: GetLogAnalyticsLogAnalyticsLogGroupsSummaryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsLogAnalyticsLogGroupsSummaryResult> {
    return pulumi.output(args).apply((a: any) => getLogAnalyticsLogAnalyticsLogGroupsSummary(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsLogAnalyticsLogGroupsSummary.
 */
export interface GetLogAnalyticsLogAnalyticsLogGroupsSummaryOutputArgs {
    compartmentId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
}
