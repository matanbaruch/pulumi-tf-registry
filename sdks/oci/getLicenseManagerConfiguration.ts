// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLicenseManagerConfiguration(args: GetLicenseManagerConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetLicenseManagerConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLicenseManagerConfiguration:getLicenseManagerConfiguration", {
        "compartmentId": args.compartmentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLicenseManagerConfiguration.
 */
export interface GetLicenseManagerConfigurationArgs {
    compartmentId: string;
}

/**
 * A collection of values returned by getLicenseManagerConfiguration.
 */
export interface GetLicenseManagerConfigurationResult {
    readonly compartmentId: string;
    readonly emailIds: string[];
    readonly id: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getLicenseManagerConfigurationOutput(args: GetLicenseManagerConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLicenseManagerConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getLicenseManagerConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getLicenseManagerConfiguration.
 */
export interface GetLicenseManagerConfigurationOutputArgs {
    compartmentId: pulumi.Input<string>;
}
