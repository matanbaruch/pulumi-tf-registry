// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsManagementHubSoftwarePackageSoftwareSource(args: GetOsManagementHubSoftwarePackageSoftwareSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetOsManagementHubSoftwarePackageSoftwareSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsManagementHubSoftwarePackageSoftwareSource:getOsManagementHubSoftwarePackageSoftwareSource", {
        "archTypes": args.archTypes,
        "availabilities": args.availabilities,
        "availabilityAnywheres": args.availabilityAnywheres,
        "availabilityAtOcis": args.availabilityAtOcis,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "displayNameContains": args.displayNameContains,
        "filters": args.filters,
        "id": args.id,
        "osFamilies": args.osFamilies,
        "softwarePackageName": args.softwarePackageName,
        "softwareSourceTypes": args.softwareSourceTypes,
        "states": args.states,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsManagementHubSoftwarePackageSoftwareSource.
 */
export interface GetOsManagementHubSoftwarePackageSoftwareSourceArgs {
    archTypes?: string[];
    availabilities?: string[];
    availabilityAnywheres?: string[];
    availabilityAtOcis?: string[];
    compartmentId: string;
    displayName?: string;
    displayNameContains?: string;
    filters?: inputs.GetOsManagementHubSoftwarePackageSoftwareSourceFilter[];
    id?: string;
    osFamilies?: string[];
    softwarePackageName: string;
    softwareSourceTypes?: string[];
    states?: string[];
}

/**
 * A collection of values returned by getOsManagementHubSoftwarePackageSoftwareSource.
 */
export interface GetOsManagementHubSoftwarePackageSoftwareSourceResult {
    readonly archTypes?: string[];
    readonly availabilities?: string[];
    readonly availabilityAnywheres?: string[];
    readonly availabilityAtOcis?: string[];
    readonly compartmentId: string;
    readonly displayName?: string;
    readonly displayNameContains?: string;
    readonly filters?: outputs.GetOsManagementHubSoftwarePackageSoftwareSourceFilter[];
    readonly id: string;
    readonly osFamilies?: string[];
    readonly softwarePackageName: string;
    readonly softwareSourceCollections: outputs.GetOsManagementHubSoftwarePackageSoftwareSourceSoftwareSourceCollection[];
    readonly softwareSourceTypes?: string[];
    readonly states?: string[];
}
export function getOsManagementHubSoftwarePackageSoftwareSourceOutput(args: GetOsManagementHubSoftwarePackageSoftwareSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsManagementHubSoftwarePackageSoftwareSourceResult> {
    return pulumi.output(args).apply((a: any) => getOsManagementHubSoftwarePackageSoftwareSource(a, opts))
}

/**
 * A collection of arguments for invoking getOsManagementHubSoftwarePackageSoftwareSource.
 */
export interface GetOsManagementHubSoftwarePackageSoftwareSourceOutputArgs {
    archTypes?: pulumi.Input<pulumi.Input<string>[]>;
    availabilities?: pulumi.Input<pulumi.Input<string>[]>;
    availabilityAnywheres?: pulumi.Input<pulumi.Input<string>[]>;
    availabilityAtOcis?: pulumi.Input<pulumi.Input<string>[]>;
    compartmentId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    displayNameContains?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOsManagementHubSoftwarePackageSoftwareSourceFilterArgs>[]>;
    id?: pulumi.Input<string>;
    osFamilies?: pulumi.Input<pulumi.Input<string>[]>;
    softwarePackageName: pulumi.Input<string>;
    softwareSourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    states?: pulumi.Input<pulumi.Input<string>[]>;
}
