// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCoreComputeCluster(args: GetCoreComputeClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreComputeClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreComputeCluster:getCoreComputeCluster", {
        "computeClusterId": args.computeClusterId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreComputeCluster.
 */
export interface GetCoreComputeClusterArgs {
    computeClusterId: string;
}

/**
 * A collection of values returned by getCoreComputeCluster.
 */
export interface GetCoreComputeClusterResult {
    readonly availabilityDomain: string;
    readonly compartmentId: string;
    readonly computeClusterId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly state: string;
    readonly timeCreated: string;
}
export function getCoreComputeClusterOutput(args: GetCoreComputeClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreComputeClusterResult> {
    return pulumi.output(args).apply((a: any) => getCoreComputeCluster(a, opts))
}

/**
 * A collection of arguments for invoking getCoreComputeCluster.
 */
export interface GetCoreComputeClusterOutputArgs {
    computeClusterId: pulumi.Input<string>;
}
