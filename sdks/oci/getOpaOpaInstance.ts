// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOpaOpaInstance(args: GetOpaOpaInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetOpaOpaInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOpaOpaInstance:getOpaOpaInstance", {
        "opaInstanceId": args.opaInstanceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpaOpaInstance.
 */
export interface GetOpaOpaInstanceArgs {
    opaInstanceId: string;
}

/**
 * A collection of values returned by getOpaOpaInstance.
 */
export interface GetOpaOpaInstanceResult {
    readonly attachments: outputs.GetOpaOpaInstanceAttachment[];
    readonly compartmentId: string;
    readonly consumptionModel: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly idcsAt: string;
    readonly identityAppDisplayName: string;
    readonly identityAppGuid: string;
    readonly identityAppOpcServiceInstanceGuid: string;
    readonly identityDomainUrl: string;
    readonly instanceUrl: string;
    readonly isBreakglassEnabled: boolean;
    readonly meteringType: string;
    readonly opaInstanceId: string;
    readonly shapeName: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getOpaOpaInstanceOutput(args: GetOpaOpaInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpaOpaInstanceResult> {
    return pulumi.output(args).apply((a: any) => getOpaOpaInstance(a, opts))
}

/**
 * A collection of arguments for invoking getOpaOpaInstance.
 */
export interface GetOpaOpaInstanceOutputArgs {
    opaInstanceId: pulumi.Input<string>;
}
