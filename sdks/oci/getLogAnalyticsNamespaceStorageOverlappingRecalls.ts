// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLogAnalyticsNamespaceStorageOverlappingRecalls(args: GetLogAnalyticsNamespaceStorageOverlappingRecallsArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsNamespaceStorageOverlappingRecallsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLogAnalyticsNamespaceStorageOverlappingRecalls:getLogAnalyticsNamespaceStorageOverlappingRecalls", {
        "filters": args.filters,
        "id": args.id,
        "namespace": args.namespace,
        "timeDataEnded": args.timeDataEnded,
        "timeDataStarted": args.timeDataStarted,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespaceStorageOverlappingRecalls.
 */
export interface GetLogAnalyticsNamespaceStorageOverlappingRecallsArgs {
    filters?: inputs.GetLogAnalyticsNamespaceStorageOverlappingRecallsFilter[];
    id?: string;
    namespace: string;
    timeDataEnded?: string;
    timeDataStarted?: string;
}

/**
 * A collection of values returned by getLogAnalyticsNamespaceStorageOverlappingRecalls.
 */
export interface GetLogAnalyticsNamespaceStorageOverlappingRecallsResult {
    readonly filters?: outputs.GetLogAnalyticsNamespaceStorageOverlappingRecallsFilter[];
    readonly id: string;
    readonly namespace: string;
    readonly overlappingRecallCollections: outputs.GetLogAnalyticsNamespaceStorageOverlappingRecallsOverlappingRecallCollection[];
    readonly timeDataEnded?: string;
    readonly timeDataStarted?: string;
}
export function getLogAnalyticsNamespaceStorageOverlappingRecallsOutput(args: GetLogAnalyticsNamespaceStorageOverlappingRecallsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsNamespaceStorageOverlappingRecallsResult> {
    return pulumi.output(args).apply((a: any) => getLogAnalyticsNamespaceStorageOverlappingRecalls(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespaceStorageOverlappingRecalls.
 */
export interface GetLogAnalyticsNamespaceStorageOverlappingRecallsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetLogAnalyticsNamespaceStorageOverlappingRecallsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    timeDataEnded?: pulumi.Input<string>;
    timeDataStarted?: pulumi.Input<string>;
}
