// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataintegrationWorkspaceExportRequest(args: GetDataintegrationWorkspaceExportRequestArgs, opts?: pulumi.InvokeOptions): Promise<GetDataintegrationWorkspaceExportRequestResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataintegrationWorkspaceExportRequest:getDataintegrationWorkspaceExportRequest", {
        "exportRequestKey": args.exportRequestKey,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataintegrationWorkspaceExportRequest.
 */
export interface GetDataintegrationWorkspaceExportRequestArgs {
    exportRequestKey: string;
    workspaceId: string;
}

/**
 * A collection of values returned by getDataintegrationWorkspaceExportRequest.
 */
export interface GetDataintegrationWorkspaceExportRequestResult {
    readonly areReferencesIncluded: boolean;
    readonly bucket: string;
    readonly createdBy: string;
    readonly errorMessages: {[key: string]: string};
    readonly exportRequestKey: string;
    readonly exportedItems: outputs.GetDataintegrationWorkspaceExportRequestExportedItem[];
    readonly fileName: string;
    readonly filters: string[];
    readonly id: string;
    readonly isObjectOverwriteEnabled: boolean;
    readonly key: string;
    readonly name: string;
    readonly objectKeys: string[];
    readonly objectStorageRegion: string;
    readonly objectStorageTenancyId: string;
    readonly referencedItems: string;
    readonly status: string;
    readonly timeEndedInMillis: string;
    readonly timeStartedInMillis: string;
    readonly totalExportedObjectCount: number;
    readonly workspaceId: string;
}
export function getDataintegrationWorkspaceExportRequestOutput(args: GetDataintegrationWorkspaceExportRequestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataintegrationWorkspaceExportRequestResult> {
    return pulumi.output(args).apply((a: any) => getDataintegrationWorkspaceExportRequest(a, opts))
}

/**
 * A collection of arguments for invoking getDataintegrationWorkspaceExportRequest.
 */
export interface GetDataintegrationWorkspaceExportRequestOutputArgs {
    exportRequestKey: pulumi.Input<string>;
    workspaceId: pulumi.Input<string>;
}
