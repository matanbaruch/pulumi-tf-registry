// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DisasterRecoveryDrProtectionGroup extends pulumi.CustomResource {
    /**
     * Get an existing DisasterRecoveryDrProtectionGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DisasterRecoveryDrProtectionGroupState, opts?: pulumi.CustomResourceOptions): DisasterRecoveryDrProtectionGroup {
        return new DisasterRecoveryDrProtectionGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/disasterRecoveryDrProtectionGroup:DisasterRecoveryDrProtectionGroup';

    /**
     * Returns true if the given object is an instance of DisasterRecoveryDrProtectionGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DisasterRecoveryDrProtectionGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DisasterRecoveryDrProtectionGroup.__pulumiType;
    }

    public readonly association!: pulumi.Output<outputs.DisasterRecoveryDrProtectionGroupAssociation | undefined>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly disassociateTrigger!: pulumi.Output<number | undefined>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly lifeCycleDetails!: pulumi.Output<string>;
    public /*out*/ readonly lifecycleSubState!: pulumi.Output<string>;
    public readonly logLocation!: pulumi.Output<outputs.DisasterRecoveryDrProtectionGroupLogLocation>;
    public readonly members!: pulumi.Output<outputs.DisasterRecoveryDrProtectionGroupMember[] | undefined>;
    public /*out*/ readonly peerId!: pulumi.Output<string>;
    public /*out*/ readonly peerRegion!: pulumi.Output<string>;
    public /*out*/ readonly role!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DisasterRecoveryDrProtectionGroupTimeouts | undefined>;

    /**
     * Create a DisasterRecoveryDrProtectionGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DisasterRecoveryDrProtectionGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DisasterRecoveryDrProtectionGroupArgs | DisasterRecoveryDrProtectionGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DisasterRecoveryDrProtectionGroupState | undefined;
            resourceInputs["association"] = state ? state.association : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["disassociateTrigger"] = state ? state.disassociateTrigger : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lifeCycleDetails"] = state ? state.lifeCycleDetails : undefined;
            resourceInputs["lifecycleSubState"] = state ? state.lifecycleSubState : undefined;
            resourceInputs["logLocation"] = state ? state.logLocation : undefined;
            resourceInputs["members"] = state ? state.members : undefined;
            resourceInputs["peerId"] = state ? state.peerId : undefined;
            resourceInputs["peerRegion"] = state ? state.peerRegion : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DisasterRecoveryDrProtectionGroupArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.logLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logLocation'");
            }
            resourceInputs["association"] = args ? args.association : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["disassociateTrigger"] = args ? args.disassociateTrigger : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["logLocation"] = args ? args.logLocation : undefined;
            resourceInputs["members"] = args ? args.members : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["lifeCycleDetails"] = undefined /*out*/;
            resourceInputs["lifecycleSubState"] = undefined /*out*/;
            resourceInputs["peerId"] = undefined /*out*/;
            resourceInputs["peerRegion"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DisasterRecoveryDrProtectionGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DisasterRecoveryDrProtectionGroup resources.
 */
export interface DisasterRecoveryDrProtectionGroupState {
    association?: pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupAssociation>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    disassociateTrigger?: pulumi.Input<number>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lifeCycleDetails?: pulumi.Input<string>;
    lifecycleSubState?: pulumi.Input<string>;
    logLocation?: pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupLogLocation>;
    members?: pulumi.Input<pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupMember>[]>;
    peerId?: pulumi.Input<string>;
    peerRegion?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupTimeouts>;
}

/**
 * The set of arguments for constructing a DisasterRecoveryDrProtectionGroup resource.
 */
export interface DisasterRecoveryDrProtectionGroupArgs {
    association?: pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupAssociation>;
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    disassociateTrigger?: pulumi.Input<number>;
    displayName: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    logLocation: pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupLogLocation>;
    members?: pulumi.Input<pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupMember>[]>;
    timeouts?: pulumi.Input<inputs.DisasterRecoveryDrProtectionGroupTimeouts>;
}
