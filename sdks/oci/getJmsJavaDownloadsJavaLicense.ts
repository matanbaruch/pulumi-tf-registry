// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getJmsJavaDownloadsJavaLicense(args: GetJmsJavaDownloadsJavaLicenseArgs, opts?: pulumi.InvokeOptions): Promise<GetJmsJavaDownloadsJavaLicenseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getJmsJavaDownloadsJavaLicense:getJmsJavaDownloadsJavaLicense", {
        "id": args.id,
        "licenseType": args.licenseType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getJmsJavaDownloadsJavaLicense.
 */
export interface GetJmsJavaDownloadsJavaLicenseArgs {
    id?: string;
    licenseType: string;
}

/**
 * A collection of values returned by getJmsJavaDownloadsJavaLicense.
 */
export interface GetJmsJavaDownloadsJavaLicenseResult {
    readonly displayName: string;
    readonly id: string;
    readonly licenseType: string;
    readonly licenseUrl: string;
}
export function getJmsJavaDownloadsJavaLicenseOutput(args: GetJmsJavaDownloadsJavaLicenseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJmsJavaDownloadsJavaLicenseResult> {
    return pulumi.output(args).apply((a: any) => getJmsJavaDownloadsJavaLicense(a, opts))
}

/**
 * A collection of arguments for invoking getJmsJavaDownloadsJavaLicense.
 */
export interface GetJmsJavaDownloadsJavaLicenseOutputArgs {
    id?: pulumi.Input<string>;
    licenseType: pulumi.Input<string>;
}
