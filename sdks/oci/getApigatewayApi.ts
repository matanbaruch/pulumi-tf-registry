// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApigatewayApi(args: GetApigatewayApiArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayApiResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getApigatewayApi:getApigatewayApi", {
        "apiId": args.apiId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayApi.
 */
export interface GetApigatewayApiArgs {
    apiId: string;
}

/**
 * A collection of values returned by getApigatewayApi.
 */
export interface GetApigatewayApiResult {
    readonly apiId: string;
    readonly compartmentId: string;
    readonly content: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly specificationType: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly validationResults: outputs.GetApigatewayApiValidationResult[];
}
export function getApigatewayApiOutput(args: GetApigatewayApiOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayApiResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayApi(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayApi.
 */
export interface GetApigatewayApiOutputArgs {
    apiId: pulumi.Input<string>;
}
