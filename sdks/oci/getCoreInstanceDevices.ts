// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreInstanceDevices(args: GetCoreInstanceDevicesArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreInstanceDevicesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreInstanceDevices:getCoreInstanceDevices", {
        "filters": args.filters,
        "id": args.id,
        "instanceId": args.instanceId,
        "isAvailable": args.isAvailable,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreInstanceDevices.
 */
export interface GetCoreInstanceDevicesArgs {
    filters?: inputs.GetCoreInstanceDevicesFilter[];
    id?: string;
    instanceId: string;
    isAvailable?: boolean;
    name?: string;
}

/**
 * A collection of values returned by getCoreInstanceDevices.
 */
export interface GetCoreInstanceDevicesResult {
    readonly devices: outputs.GetCoreInstanceDevicesDevice[];
    readonly filters?: outputs.GetCoreInstanceDevicesFilter[];
    readonly id: string;
    readonly instanceId: string;
    readonly isAvailable?: boolean;
    readonly name?: string;
}
export function getCoreInstanceDevicesOutput(args: GetCoreInstanceDevicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreInstanceDevicesResult> {
    return pulumi.output(args).apply((a: any) => getCoreInstanceDevices(a, opts))
}

/**
 * A collection of arguments for invoking getCoreInstanceDevices.
 */
export interface GetCoreInstanceDevicesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetCoreInstanceDevicesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    isAvailable?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
}
