// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataflowSqlEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing DataflowSqlEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataflowSqlEndpointState, opts?: pulumi.CustomResourceOptions): DataflowSqlEndpoint {
        return new DataflowSqlEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/dataflowSqlEndpoint:DataflowSqlEndpoint';

    /**
     * Returns true if the given object is an instance of DataflowSqlEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataflowSqlEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataflowSqlEndpoint.__pulumiType;
    }

    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly driverShape!: pulumi.Output<string>;
    public readonly driverShapeConfig!: pulumi.Output<outputs.DataflowSqlEndpointDriverShapeConfig | undefined>;
    public readonly executorShape!: pulumi.Output<string>;
    public readonly executorShapeConfig!: pulumi.Output<outputs.DataflowSqlEndpointExecutorShapeConfig | undefined>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly jdbcEndpointUrl!: pulumi.Output<string>;
    public /*out*/ readonly lakeId!: pulumi.Output<string>;
    public /*out*/ readonly lastAcceptedRequestToken!: pulumi.Output<string>;
    public readonly maxExecutorCount!: pulumi.Output<number>;
    public readonly metastoreId!: pulumi.Output<string>;
    public readonly minExecutorCount!: pulumi.Output<number>;
    public readonly networkConfiguration!: pulumi.Output<outputs.DataflowSqlEndpointNetworkConfiguration>;
    public readonly sparkAdvancedConfigurations!: pulumi.Output<{[key: string]: string}>;
    public readonly sqlEndpointVersion!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly stateMessage!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DataflowSqlEndpointTimeouts | undefined>;
    public /*out*/ readonly warehouseBucketUri!: pulumi.Output<string>;

    /**
     * Create a DataflowSqlEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataflowSqlEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataflowSqlEndpointArgs | DataflowSqlEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataflowSqlEndpointState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["driverShape"] = state ? state.driverShape : undefined;
            resourceInputs["driverShapeConfig"] = state ? state.driverShapeConfig : undefined;
            resourceInputs["executorShape"] = state ? state.executorShape : undefined;
            resourceInputs["executorShapeConfig"] = state ? state.executorShapeConfig : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["jdbcEndpointUrl"] = state ? state.jdbcEndpointUrl : undefined;
            resourceInputs["lakeId"] = state ? state.lakeId : undefined;
            resourceInputs["lastAcceptedRequestToken"] = state ? state.lastAcceptedRequestToken : undefined;
            resourceInputs["maxExecutorCount"] = state ? state.maxExecutorCount : undefined;
            resourceInputs["metastoreId"] = state ? state.metastoreId : undefined;
            resourceInputs["minExecutorCount"] = state ? state.minExecutorCount : undefined;
            resourceInputs["networkConfiguration"] = state ? state.networkConfiguration : undefined;
            resourceInputs["sparkAdvancedConfigurations"] = state ? state.sparkAdvancedConfigurations : undefined;
            resourceInputs["sqlEndpointVersion"] = state ? state.sqlEndpointVersion : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateMessage"] = state ? state.stateMessage : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["warehouseBucketUri"] = state ? state.warehouseBucketUri : undefined;
        } else {
            const args = argsOrState as DataflowSqlEndpointArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.driverShape === undefined) && !opts.urn) {
                throw new Error("Missing required property 'driverShape'");
            }
            if ((!args || args.executorShape === undefined) && !opts.urn) {
                throw new Error("Missing required property 'executorShape'");
            }
            if ((!args || args.maxExecutorCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxExecutorCount'");
            }
            if ((!args || args.metastoreId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metastoreId'");
            }
            if ((!args || args.minExecutorCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minExecutorCount'");
            }
            if ((!args || args.networkConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkConfiguration'");
            }
            if ((!args || args.sqlEndpointVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sqlEndpointVersion'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["driverShape"] = args ? args.driverShape : undefined;
            resourceInputs["driverShapeConfig"] = args ? args.driverShapeConfig : undefined;
            resourceInputs["executorShape"] = args ? args.executorShape : undefined;
            resourceInputs["executorShapeConfig"] = args ? args.executorShapeConfig : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["maxExecutorCount"] = args ? args.maxExecutorCount : undefined;
            resourceInputs["metastoreId"] = args ? args.metastoreId : undefined;
            resourceInputs["minExecutorCount"] = args ? args.minExecutorCount : undefined;
            resourceInputs["networkConfiguration"] = args ? args.networkConfiguration : undefined;
            resourceInputs["sparkAdvancedConfigurations"] = args ? args.sparkAdvancedConfigurations : undefined;
            resourceInputs["sqlEndpointVersion"] = args ? args.sqlEndpointVersion : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["jdbcEndpointUrl"] = undefined /*out*/;
            resourceInputs["lakeId"] = undefined /*out*/;
            resourceInputs["lastAcceptedRequestToken"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateMessage"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["warehouseBucketUri"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataflowSqlEndpoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataflowSqlEndpoint resources.
 */
export interface DataflowSqlEndpointState {
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    driverShape?: pulumi.Input<string>;
    driverShapeConfig?: pulumi.Input<inputs.DataflowSqlEndpointDriverShapeConfig>;
    executorShape?: pulumi.Input<string>;
    executorShapeConfig?: pulumi.Input<inputs.DataflowSqlEndpointExecutorShapeConfig>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    jdbcEndpointUrl?: pulumi.Input<string>;
    lakeId?: pulumi.Input<string>;
    lastAcceptedRequestToken?: pulumi.Input<string>;
    maxExecutorCount?: pulumi.Input<number>;
    metastoreId?: pulumi.Input<string>;
    minExecutorCount?: pulumi.Input<number>;
    networkConfiguration?: pulumi.Input<inputs.DataflowSqlEndpointNetworkConfiguration>;
    sparkAdvancedConfigurations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    sqlEndpointVersion?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    stateMessage?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataflowSqlEndpointTimeouts>;
    warehouseBucketUri?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataflowSqlEndpoint resource.
 */
export interface DataflowSqlEndpointArgs {
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    driverShape: pulumi.Input<string>;
    driverShapeConfig?: pulumi.Input<inputs.DataflowSqlEndpointDriverShapeConfig>;
    executorShape: pulumi.Input<string>;
    executorShapeConfig?: pulumi.Input<inputs.DataflowSqlEndpointExecutorShapeConfig>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    maxExecutorCount: pulumi.Input<number>;
    metastoreId: pulumi.Input<string>;
    minExecutorCount: pulumi.Input<number>;
    networkConfiguration: pulumi.Input<inputs.DataflowSqlEndpointNetworkConfiguration>;
    sparkAdvancedConfigurations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    sqlEndpointVersion: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataflowSqlEndpointTimeouts>;
}
