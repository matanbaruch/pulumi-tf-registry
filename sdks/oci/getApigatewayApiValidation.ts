// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApigatewayApiValidation(args: GetApigatewayApiValidationArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayApiValidationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getApigatewayApiValidation:getApigatewayApiValidation", {
        "apiId": args.apiId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayApiValidation.
 */
export interface GetApigatewayApiValidationArgs {
    apiId: string;
    id?: string;
}

/**
 * A collection of values returned by getApigatewayApiValidation.
 */
export interface GetApigatewayApiValidationResult {
    readonly apiId: string;
    readonly id: string;
    readonly validations: outputs.GetApigatewayApiValidationValidation[];
}
export function getApigatewayApiValidationOutput(args: GetApigatewayApiValidationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayApiValidationResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayApiValidation(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayApiValidation.
 */
export interface GetApigatewayApiValidationOutputArgs {
    apiId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
