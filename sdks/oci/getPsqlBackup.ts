// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPsqlBackup(args: GetPsqlBackupArgs, opts?: pulumi.InvokeOptions): Promise<GetPsqlBackupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getPsqlBackup:getPsqlBackup", {
        "backupId": args.backupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPsqlBackup.
 */
export interface GetPsqlBackupArgs {
    backupId: string;
}

/**
 * A collection of values returned by getPsqlBackup.
 */
export interface GetPsqlBackupResult {
    readonly backupId: string;
    readonly backupSize: number;
    readonly compartmentId: string;
    readonly dbSystemDetails: outputs.GetPsqlBackupDbSystemDetail[];
    readonly dbSystemId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lastAcceptedRequestToken: string;
    readonly lastCompletedRequestToken: string;
    readonly lifecycleDetails: string;
    readonly retentionPeriod: number;
    readonly sourceType: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getPsqlBackupOutput(args: GetPsqlBackupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPsqlBackupResult> {
    return pulumi.output(args).apply((a: any) => getPsqlBackup(a, opts))
}

/**
 * A collection of arguments for invoking getPsqlBackup.
 */
export interface GetPsqlBackupOutputArgs {
    backupId: pulumi.Input<string>;
}
