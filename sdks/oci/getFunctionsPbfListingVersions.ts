// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFunctionsPbfListingVersions(args: GetFunctionsPbfListingVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionsPbfListingVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getFunctionsPbfListingVersions:getFunctionsPbfListingVersions", {
        "filters": args.filters,
        "id": args.id,
        "isCurrentVersion": args.isCurrentVersion,
        "name": args.name,
        "pbfListingId": args.pbfListingId,
        "pbfListingVersionId": args.pbfListingVersionId,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFunctionsPbfListingVersions.
 */
export interface GetFunctionsPbfListingVersionsArgs {
    filters?: inputs.GetFunctionsPbfListingVersionsFilter[];
    id?: string;
    isCurrentVersion?: boolean;
    name?: string;
    pbfListingId: string;
    pbfListingVersionId?: string;
    state?: string;
}

/**
 * A collection of values returned by getFunctionsPbfListingVersions.
 */
export interface GetFunctionsPbfListingVersionsResult {
    readonly filters?: outputs.GetFunctionsPbfListingVersionsFilter[];
    readonly id: string;
    readonly isCurrentVersion?: boolean;
    readonly name?: string;
    readonly pbfListingId: string;
    readonly pbfListingVersionId?: string;
    readonly pbfListingVersionsCollections: outputs.GetFunctionsPbfListingVersionsPbfListingVersionsCollection[];
    readonly state?: string;
}
export function getFunctionsPbfListingVersionsOutput(args: GetFunctionsPbfListingVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFunctionsPbfListingVersionsResult> {
    return pulumi.output(args).apply((a: any) => getFunctionsPbfListingVersions(a, opts))
}

/**
 * A collection of arguments for invoking getFunctionsPbfListingVersions.
 */
export interface GetFunctionsPbfListingVersionsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetFunctionsPbfListingVersionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    isCurrentVersion?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    pbfListingId: pulumi.Input<string>;
    pbfListingVersionId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
