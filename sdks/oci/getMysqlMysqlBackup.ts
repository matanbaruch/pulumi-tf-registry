// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMysqlMysqlBackup(args: GetMysqlMysqlBackupArgs, opts?: pulumi.InvokeOptions): Promise<GetMysqlMysqlBackupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMysqlMysqlBackup:getMysqlMysqlBackup", {
        "backupId": args.backupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMysqlMysqlBackup.
 */
export interface GetMysqlMysqlBackupArgs {
    backupId: string;
}

/**
 * A collection of values returned by getMysqlMysqlBackup.
 */
export interface GetMysqlMysqlBackupResult {
    readonly backupId: string;
    readonly backupSizeInGbs: number;
    readonly backupType: string;
    readonly compartmentId: string;
    readonly creationType: string;
    readonly dataStorageSizeInGb: number;
    readonly dbSystemId: string;
    readonly dbSystemSnapshotSummaries: outputs.GetMysqlMysqlBackupDbSystemSnapshotSummary[];
    readonly dbSystemSnapshots: outputs.GetMysqlMysqlBackupDbSystemSnapshot[];
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly immediateSourceBackupId: string;
    readonly lifecycleDetails: string;
    readonly mysqlVersion: string;
    readonly originalSourceBackupId: string;
    readonly retentionInDays: number;
    readonly shapeName: string;
    readonly sourceDetails: outputs.GetMysqlMysqlBackupSourceDetail[];
    readonly state: string;
    readonly timeCopyCreated: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getMysqlMysqlBackupOutput(args: GetMysqlMysqlBackupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMysqlMysqlBackupResult> {
    return pulumi.output(args).apply((a: any) => getMysqlMysqlBackup(a, opts))
}

/**
 * A collection of arguments for invoking getMysqlMysqlBackup.
 */
export interface GetMysqlMysqlBackupOutputArgs {
    backupId: pulumi.Input<string>;
}
