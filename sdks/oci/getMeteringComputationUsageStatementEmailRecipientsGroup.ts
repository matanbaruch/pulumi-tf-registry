// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMeteringComputationUsageStatementEmailRecipientsGroup(args: GetMeteringComputationUsageStatementEmailRecipientsGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetMeteringComputationUsageStatementEmailRecipientsGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMeteringComputationUsageStatementEmailRecipientsGroup:getMeteringComputationUsageStatementEmailRecipientsGroup", {
        "compartmentId": args.compartmentId,
        "emailRecipientsGroupId": args.emailRecipientsGroupId,
        "subscriptionId": args.subscriptionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMeteringComputationUsageStatementEmailRecipientsGroup.
 */
export interface GetMeteringComputationUsageStatementEmailRecipientsGroupArgs {
    compartmentId: string;
    emailRecipientsGroupId: string;
    subscriptionId: string;
}

/**
 * A collection of values returned by getMeteringComputationUsageStatementEmailRecipientsGroup.
 */
export interface GetMeteringComputationUsageStatementEmailRecipientsGroupResult {
    readonly compartmentId: string;
    readonly emailRecipientsGroupId: string;
    readonly id: string;
    readonly recipientsLists: outputs.GetMeteringComputationUsageStatementEmailRecipientsGroupRecipientsList[];
    readonly state: string;
    readonly subscriptionId: string;
}
export function getMeteringComputationUsageStatementEmailRecipientsGroupOutput(args: GetMeteringComputationUsageStatementEmailRecipientsGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMeteringComputationUsageStatementEmailRecipientsGroupResult> {
    return pulumi.output(args).apply((a: any) => getMeteringComputationUsageStatementEmailRecipientsGroup(a, opts))
}

/**
 * A collection of arguments for invoking getMeteringComputationUsageStatementEmailRecipientsGroup.
 */
export interface GetMeteringComputationUsageStatementEmailRecipientsGroupOutputArgs {
    compartmentId: pulumi.Input<string>;
    emailRecipientsGroupId: pulumi.Input<string>;
    subscriptionId: pulumi.Input<string>;
}
