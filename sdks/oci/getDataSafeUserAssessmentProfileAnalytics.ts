// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeUserAssessmentProfileAnalytics(args: GetDataSafeUserAssessmentProfileAnalyticsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeUserAssessmentProfileAnalyticsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeUserAssessmentProfileAnalytics:getDataSafeUserAssessmentProfileAnalytics", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "id": args.id,
        "profileName": args.profileName,
        "targetId": args.targetId,
        "userAssessmentId": args.userAssessmentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeUserAssessmentProfileAnalytics.
 */
export interface GetDataSafeUserAssessmentProfileAnalyticsArgs {
    accessLevel?: string;
    compartmentId: string;
    compartmentIdInSubtree?: boolean;
    filters?: inputs.GetDataSafeUserAssessmentProfileAnalyticsFilter[];
    id?: string;
    profileName?: string;
    targetId?: string;
    userAssessmentId: string;
}

/**
 * A collection of values returned by getDataSafeUserAssessmentProfileAnalytics.
 */
export interface GetDataSafeUserAssessmentProfileAnalyticsResult {
    readonly accessLevel?: string;
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.GetDataSafeUserAssessmentProfileAnalyticsFilter[];
    readonly id: string;
    readonly profileAggregations: outputs.GetDataSafeUserAssessmentProfileAnalyticsProfileAggregation[];
    readonly profileName?: string;
    readonly targetId?: string;
    readonly userAssessmentId: string;
}
export function getDataSafeUserAssessmentProfileAnalyticsOutput(args: GetDataSafeUserAssessmentProfileAnalyticsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeUserAssessmentProfileAnalyticsResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeUserAssessmentProfileAnalytics(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeUserAssessmentProfileAnalytics.
 */
export interface GetDataSafeUserAssessmentProfileAnalyticsOutputArgs {
    accessLevel?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataSafeUserAssessmentProfileAnalyticsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    profileName?: pulumi.Input<string>;
    targetId?: pulumi.Input<string>;
    userAssessmentId: pulumi.Input<string>;
}
