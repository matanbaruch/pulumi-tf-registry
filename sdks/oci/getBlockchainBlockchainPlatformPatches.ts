// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBlockchainBlockchainPlatformPatches(args: GetBlockchainBlockchainPlatformPatchesArgs, opts?: pulumi.InvokeOptions): Promise<GetBlockchainBlockchainPlatformPatchesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getBlockchainBlockchainPlatformPatches:getBlockchainBlockchainPlatformPatches", {
        "blockchainPlatformId": args.blockchainPlatformId,
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlockchainBlockchainPlatformPatches.
 */
export interface GetBlockchainBlockchainPlatformPatchesArgs {
    blockchainPlatformId: string;
    filters?: inputs.GetBlockchainBlockchainPlatformPatchesFilter[];
    id?: string;
}

/**
 * A collection of values returned by getBlockchainBlockchainPlatformPatches.
 */
export interface GetBlockchainBlockchainPlatformPatchesResult {
    readonly blockchainPlatformId: string;
    readonly blockchainPlatformPatchCollections: outputs.GetBlockchainBlockchainPlatformPatchesBlockchainPlatformPatchCollection[];
    readonly filters?: outputs.GetBlockchainBlockchainPlatformPatchesFilter[];
    readonly id: string;
}
export function getBlockchainBlockchainPlatformPatchesOutput(args: GetBlockchainBlockchainPlatformPatchesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlockchainBlockchainPlatformPatchesResult> {
    return pulumi.output(args).apply((a: any) => getBlockchainBlockchainPlatformPatches(a, opts))
}

/**
 * A collection of arguments for invoking getBlockchainBlockchainPlatformPatches.
 */
export interface GetBlockchainBlockchainPlatformPatchesOutputArgs {
    blockchainPlatformId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetBlockchainBlockchainPlatformPatchesFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
