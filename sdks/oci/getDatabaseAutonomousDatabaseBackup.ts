// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseAutonomousDatabaseBackup(args: GetDatabaseAutonomousDatabaseBackupArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseAutonomousDatabaseBackupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseAutonomousDatabaseBackup:getDatabaseAutonomousDatabaseBackup", {
        "autonomousDatabaseBackupId": args.autonomousDatabaseBackupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseAutonomousDatabaseBackup.
 */
export interface GetDatabaseAutonomousDatabaseBackupArgs {
    autonomousDatabaseBackupId: string;
}

/**
 * A collection of values returned by getDatabaseAutonomousDatabaseBackup.
 */
export interface GetDatabaseAutonomousDatabaseBackupResult {
    readonly autonomousDatabaseBackupId: string;
    readonly autonomousDatabaseId: string;
    readonly backupDestinationDetails: outputs.GetDatabaseAutonomousDatabaseBackupBackupDestinationDetail[];
    readonly compartmentId: string;
    readonly databaseSizeInTbs: number;
    readonly dbVersion: string;
    readonly displayName: string;
    readonly id: string;
    readonly isAutomatic: boolean;
    readonly isLongTermBackup: boolean;
    readonly isRestorable: boolean;
    readonly keyStoreId: string;
    readonly keyStoreWalletName: string;
    readonly kmsKeyId: string;
    readonly kmsKeyVersionId: string;
    readonly lifecycleDetails: string;
    readonly retentionPeriodInDays: number;
    readonly sizeInTbs: number;
    readonly state: string;
    readonly timeAvailableTill: string;
    readonly timeEnded: string;
    readonly timeStarted: string;
    readonly type: string;
    readonly vaultId: string;
}
export function getDatabaseAutonomousDatabaseBackupOutput(args: GetDatabaseAutonomousDatabaseBackupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseAutonomousDatabaseBackupResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseAutonomousDatabaseBackup(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseAutonomousDatabaseBackup.
 */
export interface GetDatabaseAutonomousDatabaseBackupOutputArgs {
    autonomousDatabaseBackupId: pulumi.Input<string>;
}
