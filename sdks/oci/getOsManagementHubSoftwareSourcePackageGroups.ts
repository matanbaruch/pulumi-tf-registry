// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsManagementHubSoftwareSourcePackageGroups(args: GetOsManagementHubSoftwareSourcePackageGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetOsManagementHubSoftwareSourcePackageGroupsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsManagementHubSoftwareSourcePackageGroups:getOsManagementHubSoftwareSourcePackageGroups", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "groupTypes": args.groupTypes,
        "id": args.id,
        "name": args.name,
        "nameContains": args.nameContains,
        "softwareSourceId": args.softwareSourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsManagementHubSoftwareSourcePackageGroups.
 */
export interface GetOsManagementHubSoftwareSourcePackageGroupsArgs {
    compartmentId?: string;
    filters?: inputs.GetOsManagementHubSoftwareSourcePackageGroupsFilter[];
    groupTypes?: string[];
    id?: string;
    name?: string;
    nameContains?: string;
    softwareSourceId: string;
}

/**
 * A collection of values returned by getOsManagementHubSoftwareSourcePackageGroups.
 */
export interface GetOsManagementHubSoftwareSourcePackageGroupsResult {
    readonly compartmentId?: string;
    readonly filters?: outputs.GetOsManagementHubSoftwareSourcePackageGroupsFilter[];
    readonly groupTypes?: string[];
    readonly id: string;
    readonly name?: string;
    readonly nameContains?: string;
    readonly packageGroupCollections: outputs.GetOsManagementHubSoftwareSourcePackageGroupsPackageGroupCollection[];
    readonly softwareSourceId: string;
}
export function getOsManagementHubSoftwareSourcePackageGroupsOutput(args: GetOsManagementHubSoftwareSourcePackageGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsManagementHubSoftwareSourcePackageGroupsResult> {
    return pulumi.output(args).apply((a: any) => getOsManagementHubSoftwareSourcePackageGroups(a, opts))
}

/**
 * A collection of arguments for invoking getOsManagementHubSoftwareSourcePackageGroups.
 */
export interface GetOsManagementHubSoftwareSourcePackageGroupsOutputArgs {
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOsManagementHubSoftwareSourcePackageGroupsFilterArgs>[]>;
    groupTypes?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameContains?: pulumi.Input<string>;
    softwareSourceId: pulumi.Input<string>;
}
