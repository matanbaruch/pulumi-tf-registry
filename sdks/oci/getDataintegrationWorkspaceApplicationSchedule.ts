// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataintegrationWorkspaceApplicationSchedule(args: GetDataintegrationWorkspaceApplicationScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetDataintegrationWorkspaceApplicationScheduleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataintegrationWorkspaceApplicationSchedule:getDataintegrationWorkspaceApplicationSchedule", {
        "applicationKey": args.applicationKey,
        "scheduleKey": args.scheduleKey,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataintegrationWorkspaceApplicationSchedule.
 */
export interface GetDataintegrationWorkspaceApplicationScheduleArgs {
    applicationKey: string;
    scheduleKey: string;
    workspaceId: string;
}

/**
 * A collection of values returned by getDataintegrationWorkspaceApplicationSchedule.
 */
export interface GetDataintegrationWorkspaceApplicationScheduleResult {
    readonly applicationKey: string;
    readonly description: string;
    readonly frequencyDetails: outputs.GetDataintegrationWorkspaceApplicationScheduleFrequencyDetail[];
    readonly id: string;
    readonly identifier: string;
    readonly isDaylightAdjustmentEnabled: boolean;
    readonly key: string;
    readonly metadatas: outputs.GetDataintegrationWorkspaceApplicationScheduleMetadata[];
    readonly modelType: string;
    readonly modelVersion: string;
    readonly name: string;
    readonly objectStatus: number;
    readonly objectVersion: number;
    readonly parentReves: outputs.GetDataintegrationWorkspaceApplicationScheduleParentRef[];
    readonly registryMetadatas: outputs.GetDataintegrationWorkspaceApplicationScheduleRegistryMetadata[];
    readonly scheduleKey: string;
    readonly timezone: string;
    readonly workspaceId: string;
}
export function getDataintegrationWorkspaceApplicationScheduleOutput(args: GetDataintegrationWorkspaceApplicationScheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataintegrationWorkspaceApplicationScheduleResult> {
    return pulumi.output(args).apply((a: any) => getDataintegrationWorkspaceApplicationSchedule(a, opts))
}

/**
 * A collection of arguments for invoking getDataintegrationWorkspaceApplicationSchedule.
 */
export interface GetDataintegrationWorkspaceApplicationScheduleOutputArgs {
    applicationKey: pulumi.Input<string>;
    scheduleKey: pulumi.Input<string>;
    workspaceId: pulumi.Input<string>;
}
