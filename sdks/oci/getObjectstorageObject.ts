// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getObjectstorageObject(args: GetObjectstorageObjectArgs, opts?: pulumi.InvokeOptions): Promise<GetObjectstorageObjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getObjectstorageObject:getObjectstorageObject", {
        "base64EncodeContent": args.base64EncodeContent,
        "bucket": args.bucket,
        "contentLengthLimit": args.contentLengthLimit,
        "httpResponseCacheControl": args.httpResponseCacheControl,
        "httpResponseContentDisposition": args.httpResponseContentDisposition,
        "httpResponseContentEncoding": args.httpResponseContentEncoding,
        "httpResponseContentLanguage": args.httpResponseContentLanguage,
        "httpResponseContentType": args.httpResponseContentType,
        "httpResponseExpires": args.httpResponseExpires,
        "id": args.id,
        "namespace": args.namespace,
        "object": args.object,
        "versionId": args.versionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getObjectstorageObject.
 */
export interface GetObjectstorageObjectArgs {
    base64EncodeContent?: boolean;
    bucket: string;
    contentLengthLimit?: number;
    httpResponseCacheControl?: string;
    httpResponseContentDisposition?: string;
    httpResponseContentEncoding?: string;
    httpResponseContentLanguage?: string;
    httpResponseContentType?: string;
    httpResponseExpires?: string;
    id?: string;
    namespace: string;
    object: string;
    versionId?: string;
}

/**
 * A collection of values returned by getObjectstorageObject.
 */
export interface GetObjectstorageObjectResult {
    readonly base64EncodeContent?: boolean;
    readonly bucket: string;
    readonly cacheControl: string;
    readonly content: string;
    readonly contentDisposition: string;
    readonly contentEncoding: string;
    readonly contentLanguage: string;
    readonly contentLength: string;
    readonly contentLengthLimit?: number;
    readonly contentMd5: string;
    readonly contentType: string;
    readonly httpResponseCacheControl?: string;
    readonly httpResponseContentDisposition?: string;
    readonly httpResponseContentEncoding?: string;
    readonly httpResponseContentLanguage?: string;
    readonly httpResponseContentType?: string;
    readonly httpResponseExpires?: string;
    readonly id: string;
    readonly metadata: {[key: string]: string};
    readonly namespace: string;
    readonly object: string;
    readonly storageTier: string;
    readonly versionId: string;
}
export function getObjectstorageObjectOutput(args: GetObjectstorageObjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetObjectstorageObjectResult> {
    return pulumi.output(args).apply((a: any) => getObjectstorageObject(a, opts))
}

/**
 * A collection of arguments for invoking getObjectstorageObject.
 */
export interface GetObjectstorageObjectOutputArgs {
    base64EncodeContent?: pulumi.Input<boolean>;
    bucket: pulumi.Input<string>;
    contentLengthLimit?: pulumi.Input<number>;
    httpResponseCacheControl?: pulumi.Input<string>;
    httpResponseContentDisposition?: pulumi.Input<string>;
    httpResponseContentEncoding?: pulumi.Input<string>;
    httpResponseContentLanguage?: pulumi.Input<string>;
    httpResponseContentType?: pulumi.Input<string>;
    httpResponseExpires?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    object: pulumi.Input<string>;
    versionId?: pulumi.Input<string>;
}
