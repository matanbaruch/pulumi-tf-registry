// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEmailEmailDomains(args: GetEmailEmailDomainsArgs, opts?: pulumi.InvokeOptions): Promise<GetEmailEmailDomainsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getEmailEmailDomains:getEmailEmailDomains", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEmailEmailDomains.
 */
export interface GetEmailEmailDomainsArgs {
    compartmentId: string;
    filters?: inputs.GetEmailEmailDomainsFilter[];
    id?: string;
    name?: string;
    state?: string;
}

/**
 * A collection of values returned by getEmailEmailDomains.
 */
export interface GetEmailEmailDomainsResult {
    readonly compartmentId: string;
    readonly emailDomainCollections: outputs.GetEmailEmailDomainsEmailDomainCollection[];
    readonly filters?: outputs.GetEmailEmailDomainsFilter[];
    readonly id?: string;
    readonly name?: string;
    readonly state?: string;
}
export function getEmailEmailDomainsOutput(args: GetEmailEmailDomainsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmailEmailDomainsResult> {
    return pulumi.output(args).apply((a: any) => getEmailEmailDomains(a, opts))
}

/**
 * A collection of arguments for invoking getEmailEmailDomains.
 */
export interface GetEmailEmailDomainsOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetEmailEmailDomainsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
