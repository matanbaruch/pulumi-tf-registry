// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFunctionsFunction(args: GetFunctionsFunctionArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionsFunctionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getFunctionsFunction:getFunctionsFunction", {
        "functionId": args.functionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFunctionsFunction.
 */
export interface GetFunctionsFunctionArgs {
    functionId: string;
}

/**
 * A collection of values returned by getFunctionsFunction.
 */
export interface GetFunctionsFunctionResult {
    readonly applicationId: string;
    readonly compartmentId: string;
    readonly config: {[key: string]: string};
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly functionId: string;
    readonly id: string;
    readonly image: string;
    readonly imageDigest: string;
    readonly invokeEndpoint: string;
    readonly memoryInMbs: string;
    readonly provisionedConcurrencyConfigs: outputs.GetFunctionsFunctionProvisionedConcurrencyConfig[];
    readonly shape: string;
    readonly sourceDetails: outputs.GetFunctionsFunctionSourceDetail[];
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly timeoutInSeconds: number;
    readonly traceConfigs: outputs.GetFunctionsFunctionTraceConfig[];
}
export function getFunctionsFunctionOutput(args: GetFunctionsFunctionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFunctionsFunctionResult> {
    return pulumi.output(args).apply((a: any) => getFunctionsFunction(a, opts))
}

/**
 * A collection of arguments for invoking getFunctionsFunction.
 */
export interface GetFunctionsFunctionOutputArgs {
    functionId: pulumi.Input<string>;
}
