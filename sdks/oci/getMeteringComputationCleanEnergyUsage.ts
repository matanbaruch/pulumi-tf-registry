// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMeteringComputationCleanEnergyUsage(args: GetMeteringComputationCleanEnergyUsageArgs, opts?: pulumi.InvokeOptions): Promise<GetMeteringComputationCleanEnergyUsageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMeteringComputationCleanEnergyUsage:getMeteringComputationCleanEnergyUsage", {
        "id": args.id,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMeteringComputationCleanEnergyUsage.
 */
export interface GetMeteringComputationCleanEnergyUsageArgs {
    id?: string;
    region: string;
}

/**
 * A collection of values returned by getMeteringComputationCleanEnergyUsage.
 */
export interface GetMeteringComputationCleanEnergyUsageResult {
    readonly ad: string;
    readonly id: string;
    readonly region: string;
    readonly usage: number;
}
export function getMeteringComputationCleanEnergyUsageOutput(args: GetMeteringComputationCleanEnergyUsageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMeteringComputationCleanEnergyUsageResult> {
    return pulumi.output(args).apply((a: any) => getMeteringComputationCleanEnergyUsage(a, opts))
}

/**
 * A collection of arguments for invoking getMeteringComputationCleanEnergyUsage.
 */
export interface GetMeteringComputationCleanEnergyUsageOutputArgs {
    id?: pulumi.Input<string>;
    region: pulumi.Input<string>;
}
