// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataSafeMaskingPoliciesMaskingColumn extends pulumi.CustomResource {
    /**
     * Get an existing DataSafeMaskingPoliciesMaskingColumn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataSafeMaskingPoliciesMaskingColumnState, opts?: pulumi.CustomResourceOptions): DataSafeMaskingPoliciesMaskingColumn {
        return new DataSafeMaskingPoliciesMaskingColumn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/dataSafeMaskingPoliciesMaskingColumn:DataSafeMaskingPoliciesMaskingColumn';

    /**
     * Returns true if the given object is an instance of DataSafeMaskingPoliciesMaskingColumn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataSafeMaskingPoliciesMaskingColumn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataSafeMaskingPoliciesMaskingColumn.__pulumiType;
    }

    public /*out*/ readonly childColumns!: pulumi.Output<string[]>;
    public readonly columnName!: pulumi.Output<string>;
    public /*out*/ readonly dataType!: pulumi.Output<string>;
    public readonly isMaskingEnabled!: pulumi.Output<boolean>;
    public /*out*/ readonly key!: pulumi.Output<string>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly maskingColumnGroup!: pulumi.Output<string>;
    public readonly maskingFormats!: pulumi.Output<outputs.DataSafeMaskingPoliciesMaskingColumnMaskingFormat[] | undefined>;
    public readonly maskingPolicyId!: pulumi.Output<string>;
    public readonly object!: pulumi.Output<string>;
    public readonly objectType!: pulumi.Output<string>;
    public readonly schemaName!: pulumi.Output<string>;
    public readonly sensitiveTypeId!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DataSafeMaskingPoliciesMaskingColumnTimeouts | undefined>;

    /**
     * Create a DataSafeMaskingPoliciesMaskingColumn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataSafeMaskingPoliciesMaskingColumnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataSafeMaskingPoliciesMaskingColumnArgs | DataSafeMaskingPoliciesMaskingColumnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataSafeMaskingPoliciesMaskingColumnState | undefined;
            resourceInputs["childColumns"] = state ? state.childColumns : undefined;
            resourceInputs["columnName"] = state ? state.columnName : undefined;
            resourceInputs["dataType"] = state ? state.dataType : undefined;
            resourceInputs["isMaskingEnabled"] = state ? state.isMaskingEnabled : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["maskingColumnGroup"] = state ? state.maskingColumnGroup : undefined;
            resourceInputs["maskingFormats"] = state ? state.maskingFormats : undefined;
            resourceInputs["maskingPolicyId"] = state ? state.maskingPolicyId : undefined;
            resourceInputs["object"] = state ? state.object : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["schemaName"] = state ? state.schemaName : undefined;
            resourceInputs["sensitiveTypeId"] = state ? state.sensitiveTypeId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DataSafeMaskingPoliciesMaskingColumnArgs | undefined;
            if ((!args || args.columnName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'columnName'");
            }
            if ((!args || args.maskingPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maskingPolicyId'");
            }
            if ((!args || args.object === undefined) && !opts.urn) {
                throw new Error("Missing required property 'object'");
            }
            if ((!args || args.schemaName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schemaName'");
            }
            resourceInputs["columnName"] = args ? args.columnName : undefined;
            resourceInputs["isMaskingEnabled"] = args ? args.isMaskingEnabled : undefined;
            resourceInputs["maskingColumnGroup"] = args ? args.maskingColumnGroup : undefined;
            resourceInputs["maskingFormats"] = args ? args.maskingFormats : undefined;
            resourceInputs["maskingPolicyId"] = args ? args.maskingPolicyId : undefined;
            resourceInputs["object"] = args ? args.object : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["schemaName"] = args ? args.schemaName : undefined;
            resourceInputs["sensitiveTypeId"] = args ? args.sensitiveTypeId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["childColumns"] = undefined /*out*/;
            resourceInputs["dataType"] = undefined /*out*/;
            resourceInputs["key"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataSafeMaskingPoliciesMaskingColumn.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataSafeMaskingPoliciesMaskingColumn resources.
 */
export interface DataSafeMaskingPoliciesMaskingColumnState {
    childColumns?: pulumi.Input<pulumi.Input<string>[]>;
    columnName?: pulumi.Input<string>;
    dataType?: pulumi.Input<string>;
    isMaskingEnabled?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    lifecycleDetails?: pulumi.Input<string>;
    maskingColumnGroup?: pulumi.Input<string>;
    maskingFormats?: pulumi.Input<pulumi.Input<inputs.DataSafeMaskingPoliciesMaskingColumnMaskingFormat>[]>;
    maskingPolicyId?: pulumi.Input<string>;
    object?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    schemaName?: pulumi.Input<string>;
    sensitiveTypeId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataSafeMaskingPoliciesMaskingColumnTimeouts>;
}

/**
 * The set of arguments for constructing a DataSafeMaskingPoliciesMaskingColumn resource.
 */
export interface DataSafeMaskingPoliciesMaskingColumnArgs {
    columnName: pulumi.Input<string>;
    isMaskingEnabled?: pulumi.Input<boolean>;
    maskingColumnGroup?: pulumi.Input<string>;
    maskingFormats?: pulumi.Input<pulumi.Input<inputs.DataSafeMaskingPoliciesMaskingColumnMaskingFormat>[]>;
    maskingPolicyId: pulumi.Input<string>;
    object: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    schemaName: pulumi.Input<string>;
    sensitiveTypeId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataSafeMaskingPoliciesMaskingColumnTimeouts>;
}
