// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseDbNodes(args: GetDatabaseDbNodesArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseDbNodesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseDbNodes:getDatabaseDbNodes", {
        "compartmentId": args.compartmentId,
        "dbServerId": args.dbServerId,
        "dbSystemId": args.dbSystemId,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
        "vmClusterId": args.vmClusterId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseDbNodes.
 */
export interface GetDatabaseDbNodesArgs {
    compartmentId: string;
    dbServerId?: string;
    dbSystemId?: string;
    filters?: inputs.GetDatabaseDbNodesFilter[];
    id?: string;
    state?: string;
    vmClusterId?: string;
}

/**
 * A collection of values returned by getDatabaseDbNodes.
 */
export interface GetDatabaseDbNodesResult {
    readonly compartmentId: string;
    readonly dbNodes: outputs.GetDatabaseDbNodesDbNode[];
    readonly dbServerId?: string;
    readonly dbSystemId?: string;
    readonly filters?: outputs.GetDatabaseDbNodesFilter[];
    readonly id: string;
    readonly state?: string;
    readonly vmClusterId?: string;
}
export function getDatabaseDbNodesOutput(args: GetDatabaseDbNodesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseDbNodesResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseDbNodes(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseDbNodes.
 */
export interface GetDatabaseDbNodesOutputArgs {
    compartmentId: pulumi.Input<string>;
    dbServerId?: pulumi.Input<string>;
    dbSystemId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseDbNodesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    vmClusterId?: pulumi.Input<string>;
}
