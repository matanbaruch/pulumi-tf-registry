// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPsqlShapes(args?: GetPsqlShapesArgs, opts?: pulumi.InvokeOptions): Promise<GetPsqlShapesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getPsqlShapes:getPsqlShapes", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPsqlShapes.
 */
export interface GetPsqlShapesArgs {
    compartmentId?: string;
    filters?: inputs.GetPsqlShapesFilter[];
    id?: string;
}

/**
 * A collection of values returned by getPsqlShapes.
 */
export interface GetPsqlShapesResult {
    readonly compartmentId?: string;
    readonly filters?: outputs.GetPsqlShapesFilter[];
    readonly id?: string;
    readonly shapeCollections: outputs.GetPsqlShapesShapeCollection[];
}
export function getPsqlShapesOutput(args?: GetPsqlShapesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPsqlShapesResult> {
    return pulumi.output(args).apply((a: any) => getPsqlShapes(a, opts))
}

/**
 * A collection of arguments for invoking getPsqlShapes.
 */
export interface GetPsqlShapesOutputArgs {
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetPsqlShapesFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
