// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OpsiAwrHubSource extends pulumi.CustomResource {
    /**
     * Get an existing OpsiAwrHubSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OpsiAwrHubSourceState, opts?: pulumi.CustomResourceOptions): OpsiAwrHubSource {
        return new OpsiAwrHubSource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/opsiAwrHubSource:OpsiAwrHubSource';

    /**
     * Returns true if the given object is an instance of OpsiAwrHubSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OpsiAwrHubSource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OpsiAwrHubSource.__pulumiType;
    }

    public readonly associatedOpsiId!: pulumi.Output<string>;
    public readonly associatedResourceId!: pulumi.Output<string>;
    public readonly awrHubId!: pulumi.Output<string>;
    public /*out*/ readonly awrHubOpsiSourceId!: pulumi.Output<string>;
    public /*out*/ readonly awrSourceDatabaseId!: pulumi.Output<string>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly hoursSinceLastImport!: pulumi.Output<number>;
    public /*out*/ readonly isRegisteredWithAwrHub!: pulumi.Output<boolean>;
    public /*out*/ readonly maxSnapshotIdentifier!: pulumi.Output<number>;
    public /*out*/ readonly minSnapshotIdentifier!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly sourceMailBoxUrl!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeFirstSnapshotGenerated!: pulumi.Output<string>;
    public /*out*/ readonly timeLastSnapshotGenerated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.OpsiAwrHubSourceTimeouts | undefined>;
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a OpsiAwrHubSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OpsiAwrHubSourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OpsiAwrHubSourceArgs | OpsiAwrHubSourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OpsiAwrHubSourceState | undefined;
            resourceInputs["associatedOpsiId"] = state ? state.associatedOpsiId : undefined;
            resourceInputs["associatedResourceId"] = state ? state.associatedResourceId : undefined;
            resourceInputs["awrHubId"] = state ? state.awrHubId : undefined;
            resourceInputs["awrHubOpsiSourceId"] = state ? state.awrHubOpsiSourceId : undefined;
            resourceInputs["awrSourceDatabaseId"] = state ? state.awrSourceDatabaseId : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["hoursSinceLastImport"] = state ? state.hoursSinceLastImport : undefined;
            resourceInputs["isRegisteredWithAwrHub"] = state ? state.isRegisteredWithAwrHub : undefined;
            resourceInputs["maxSnapshotIdentifier"] = state ? state.maxSnapshotIdentifier : undefined;
            resourceInputs["minSnapshotIdentifier"] = state ? state.minSnapshotIdentifier : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sourceMailBoxUrl"] = state ? state.sourceMailBoxUrl : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeFirstSnapshotGenerated"] = state ? state.timeFirstSnapshotGenerated : undefined;
            resourceInputs["timeLastSnapshotGenerated"] = state ? state.timeLastSnapshotGenerated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as OpsiAwrHubSourceArgs | undefined;
            if ((!args || args.awrHubId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awrHubId'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["associatedOpsiId"] = args ? args.associatedOpsiId : undefined;
            resourceInputs["associatedResourceId"] = args ? args.associatedResourceId : undefined;
            resourceInputs["awrHubId"] = args ? args.awrHubId : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["awrHubOpsiSourceId"] = undefined /*out*/;
            resourceInputs["awrSourceDatabaseId"] = undefined /*out*/;
            resourceInputs["hoursSinceLastImport"] = undefined /*out*/;
            resourceInputs["isRegisteredWithAwrHub"] = undefined /*out*/;
            resourceInputs["maxSnapshotIdentifier"] = undefined /*out*/;
            resourceInputs["minSnapshotIdentifier"] = undefined /*out*/;
            resourceInputs["sourceMailBoxUrl"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeFirstSnapshotGenerated"] = undefined /*out*/;
            resourceInputs["timeLastSnapshotGenerated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OpsiAwrHubSource.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OpsiAwrHubSource resources.
 */
export interface OpsiAwrHubSourceState {
    associatedOpsiId?: pulumi.Input<string>;
    associatedResourceId?: pulumi.Input<string>;
    awrHubId?: pulumi.Input<string>;
    awrHubOpsiSourceId?: pulumi.Input<string>;
    awrSourceDatabaseId?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hoursSinceLastImport?: pulumi.Input<number>;
    isRegisteredWithAwrHub?: pulumi.Input<boolean>;
    maxSnapshotIdentifier?: pulumi.Input<number>;
    minSnapshotIdentifier?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    sourceMailBoxUrl?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeFirstSnapshotGenerated?: pulumi.Input<string>;
    timeLastSnapshotGenerated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OpsiAwrHubSourceTimeouts>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OpsiAwrHubSource resource.
 */
export interface OpsiAwrHubSourceArgs {
    associatedOpsiId?: pulumi.Input<string>;
    associatedResourceId?: pulumi.Input<string>;
    awrHubId: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OpsiAwrHubSourceTimeouts>;
    type: pulumi.Input<string>;
}
