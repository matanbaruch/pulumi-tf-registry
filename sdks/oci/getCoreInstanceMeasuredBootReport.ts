// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreInstanceMeasuredBootReport(args: GetCoreInstanceMeasuredBootReportArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreInstanceMeasuredBootReportResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreInstanceMeasuredBootReport:getCoreInstanceMeasuredBootReport", {
        "id": args.id,
        "instanceId": args.instanceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreInstanceMeasuredBootReport.
 */
export interface GetCoreInstanceMeasuredBootReportArgs {
    id?: string;
    instanceId: string;
}

/**
 * A collection of values returned by getCoreInstanceMeasuredBootReport.
 */
export interface GetCoreInstanceMeasuredBootReportResult {
    readonly id: string;
    readonly instanceId: string;
    readonly isPolicyVerificationSuccessful: boolean;
    readonly measurements: outputs.GetCoreInstanceMeasuredBootReportMeasurement[];
}
export function getCoreInstanceMeasuredBootReportOutput(args: GetCoreInstanceMeasuredBootReportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreInstanceMeasuredBootReportResult> {
    return pulumi.output(args).apply((a: any) => getCoreInstanceMeasuredBootReport(a, opts))
}

/**
 * A collection of arguments for invoking getCoreInstanceMeasuredBootReport.
 */
export interface GetCoreInstanceMeasuredBootReportOutputArgs {
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
}
