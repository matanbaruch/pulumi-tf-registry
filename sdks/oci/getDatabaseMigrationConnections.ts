// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseMigrationConnections(args: GetDatabaseMigrationConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseMigrationConnectionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseMigrationConnections:getDatabaseMigrationConnections", {
        "compartmentId": args.compartmentId,
        "connectionTypes": args.connectionTypes,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "sourceConnectionId": args.sourceConnectionId,
        "state": args.state,
        "technologyTypes": args.technologyTypes,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseMigrationConnections.
 */
export interface GetDatabaseMigrationConnectionsArgs {
    compartmentId: string;
    connectionTypes?: string[];
    displayName?: string;
    filters?: inputs.GetDatabaseMigrationConnectionsFilter[];
    id?: string;
    sourceConnectionId?: string;
    state?: string;
    technologyTypes?: string[];
}

/**
 * A collection of values returned by getDatabaseMigrationConnections.
 */
export interface GetDatabaseMigrationConnectionsResult {
    readonly compartmentId: string;
    readonly connectionCollections: outputs.GetDatabaseMigrationConnectionsConnectionCollection[];
    readonly connectionTypes?: string[];
    readonly displayName?: string;
    readonly filters?: outputs.GetDatabaseMigrationConnectionsFilter[];
    readonly id: string;
    readonly sourceConnectionId?: string;
    readonly state?: string;
    readonly technologyTypes?: string[];
}
export function getDatabaseMigrationConnectionsOutput(args: GetDatabaseMigrationConnectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseMigrationConnectionsResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseMigrationConnections(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseMigrationConnections.
 */
export interface GetDatabaseMigrationConnectionsOutputArgs {
    compartmentId: pulumi.Input<string>;
    connectionTypes?: pulumi.Input<pulumi.Input<string>[]>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseMigrationConnectionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    sourceConnectionId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    technologyTypes?: pulumi.Input<pulumi.Input<string>[]>;
}
