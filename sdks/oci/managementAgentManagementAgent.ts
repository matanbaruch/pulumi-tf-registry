// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ManagementAgentManagementAgent extends pulumi.CustomResource {
    /**
     * Get an existing ManagementAgentManagementAgent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementAgentManagementAgentState, opts?: pulumi.CustomResourceOptions): ManagementAgentManagementAgent {
        return new ManagementAgentManagementAgent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/managementAgentManagementAgent:ManagementAgentManagementAgent';

    /**
     * Returns true if the given object is an instance of ManagementAgentManagementAgent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementAgentManagementAgent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementAgentManagementAgent.__pulumiType;
    }

    public /*out*/ readonly availabilityStatus!: pulumi.Output<string>;
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    public /*out*/ readonly dataSourceLists!: pulumi.Output<outputs.ManagementAgentManagementAgentDataSourceList[]>;
    public /*out*/ readonly dataSourceSummaryLists!: pulumi.Output<outputs.ManagementAgentManagementAgentDataSourceSummaryList[]>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly deployPluginsIds!: pulumi.Output<string[] | undefined>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly host!: pulumi.Output<string>;
    public /*out*/ readonly hostId!: pulumi.Output<string>;
    public /*out*/ readonly installKeyId!: pulumi.Output<string>;
    public /*out*/ readonly installPath!: pulumi.Output<string>;
    public /*out*/ readonly installType!: pulumi.Output<string>;
    public /*out*/ readonly isAgentAutoUpgradable!: pulumi.Output<boolean>;
    public /*out*/ readonly isCustomerDeployed!: pulumi.Output<boolean>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly managedAgentId!: pulumi.Output<string>;
    public /*out*/ readonly managementAgentProperties!: pulumi.Output<outputs.ManagementAgentManagementAgentManagementAgentProperty[]>;
    public /*out*/ readonly platformName!: pulumi.Output<string>;
    public /*out*/ readonly platformType!: pulumi.Output<string>;
    public /*out*/ readonly platformVersion!: pulumi.Output<string>;
    public /*out*/ readonly pluginLists!: pulumi.Output<outputs.ManagementAgentManagementAgentPluginList[]>;
    public /*out*/ readonly resourceArtifactVersion!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeLastHeartbeat!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ManagementAgentManagementAgentTimeouts | undefined>;
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a ManagementAgentManagementAgent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagementAgentManagementAgentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementAgentManagementAgentArgs | ManagementAgentManagementAgentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementAgentManagementAgentState | undefined;
            resourceInputs["availabilityStatus"] = state ? state.availabilityStatus : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["dataSourceLists"] = state ? state.dataSourceLists : undefined;
            resourceInputs["dataSourceSummaryLists"] = state ? state.dataSourceSummaryLists : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["deployPluginsIds"] = state ? state.deployPluginsIds : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["hostId"] = state ? state.hostId : undefined;
            resourceInputs["installKeyId"] = state ? state.installKeyId : undefined;
            resourceInputs["installPath"] = state ? state.installPath : undefined;
            resourceInputs["installType"] = state ? state.installType : undefined;
            resourceInputs["isAgentAutoUpgradable"] = state ? state.isAgentAutoUpgradable : undefined;
            resourceInputs["isCustomerDeployed"] = state ? state.isCustomerDeployed : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["managedAgentId"] = state ? state.managedAgentId : undefined;
            resourceInputs["managementAgentProperties"] = state ? state.managementAgentProperties : undefined;
            resourceInputs["platformName"] = state ? state.platformName : undefined;
            resourceInputs["platformType"] = state ? state.platformType : undefined;
            resourceInputs["platformVersion"] = state ? state.platformVersion : undefined;
            resourceInputs["pluginLists"] = state ? state.pluginLists : undefined;
            resourceInputs["resourceArtifactVersion"] = state ? state.resourceArtifactVersion : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeLastHeartbeat"] = state ? state.timeLastHeartbeat : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ManagementAgentManagementAgentArgs | undefined;
            if ((!args || args.managedAgentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedAgentId'");
            }
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["deployPluginsIds"] = args ? args.deployPluginsIds : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["managedAgentId"] = args ? args.managedAgentId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["availabilityStatus"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["dataSourceLists"] = undefined /*out*/;
            resourceInputs["dataSourceSummaryLists"] = undefined /*out*/;
            resourceInputs["host"] = undefined /*out*/;
            resourceInputs["hostId"] = undefined /*out*/;
            resourceInputs["installKeyId"] = undefined /*out*/;
            resourceInputs["installPath"] = undefined /*out*/;
            resourceInputs["installType"] = undefined /*out*/;
            resourceInputs["isAgentAutoUpgradable"] = undefined /*out*/;
            resourceInputs["isCustomerDeployed"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["managementAgentProperties"] = undefined /*out*/;
            resourceInputs["platformName"] = undefined /*out*/;
            resourceInputs["platformType"] = undefined /*out*/;
            resourceInputs["platformVersion"] = undefined /*out*/;
            resourceInputs["pluginLists"] = undefined /*out*/;
            resourceInputs["resourceArtifactVersion"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeLastHeartbeat"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementAgentManagementAgent.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagementAgentManagementAgent resources.
 */
export interface ManagementAgentManagementAgentState {
    availabilityStatus?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    dataSourceLists?: pulumi.Input<pulumi.Input<inputs.ManagementAgentManagementAgentDataSourceList>[]>;
    dataSourceSummaryLists?: pulumi.Input<pulumi.Input<inputs.ManagementAgentManagementAgentDataSourceSummaryList>[]>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    deployPluginsIds?: pulumi.Input<pulumi.Input<string>[]>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    host?: pulumi.Input<string>;
    hostId?: pulumi.Input<string>;
    installKeyId?: pulumi.Input<string>;
    installPath?: pulumi.Input<string>;
    installType?: pulumi.Input<string>;
    isAgentAutoUpgradable?: pulumi.Input<boolean>;
    isCustomerDeployed?: pulumi.Input<boolean>;
    lifecycleDetails?: pulumi.Input<string>;
    managedAgentId?: pulumi.Input<string>;
    managementAgentProperties?: pulumi.Input<pulumi.Input<inputs.ManagementAgentManagementAgentManagementAgentProperty>[]>;
    platformName?: pulumi.Input<string>;
    platformType?: pulumi.Input<string>;
    platformVersion?: pulumi.Input<string>;
    pluginLists?: pulumi.Input<pulumi.Input<inputs.ManagementAgentManagementAgentPluginList>[]>;
    resourceArtifactVersion?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeLastHeartbeat?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ManagementAgentManagementAgentTimeouts>;
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagementAgentManagementAgent resource.
 */
export interface ManagementAgentManagementAgentArgs {
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    deployPluginsIds?: pulumi.Input<pulumi.Input<string>[]>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    managedAgentId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ManagementAgentManagementAgentTimeouts>;
}
