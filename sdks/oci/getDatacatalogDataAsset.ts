// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatacatalogDataAsset(args: GetDatacatalogDataAssetArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacatalogDataAssetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatacatalogDataAsset:getDatacatalogDataAsset", {
        "catalogId": args.catalogId,
        "dataAssetKey": args.dataAssetKey,
        "fields": args.fields,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacatalogDataAsset.
 */
export interface GetDatacatalogDataAssetArgs {
    catalogId: string;
    dataAssetKey: string;
    fields?: string[];
}

/**
 * A collection of values returned by getDatacatalogDataAsset.
 */
export interface GetDatacatalogDataAssetResult {
    readonly catalogId: string;
    readonly createdById: string;
    readonly dataAssetKey: string;
    readonly description: string;
    readonly displayName: string;
    readonly externalKey: string;
    readonly fields?: string[];
    readonly id: string;
    readonly key: string;
    readonly lifecycleDetails: string;
    readonly properties: {[key: string]: string};
    readonly state: string;
    readonly timeCreated: string;
    readonly timeHarvested: string;
    readonly timeUpdated: string;
    readonly typeKey: string;
    readonly updatedById: string;
    readonly uri: string;
}
export function getDatacatalogDataAssetOutput(args: GetDatacatalogDataAssetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacatalogDataAssetResult> {
    return pulumi.output(args).apply((a: any) => getDatacatalogDataAsset(a, opts))
}

/**
 * A collection of arguments for invoking getDatacatalogDataAsset.
 */
export interface GetDatacatalogDataAssetOutputArgs {
    catalogId: pulumi.Input<string>;
    dataAssetKey: pulumi.Input<string>;
    fields?: pulumi.Input<pulumi.Input<string>[]>;
}
