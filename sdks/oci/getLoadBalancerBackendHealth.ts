// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLoadBalancerBackendHealth(args: GetLoadBalancerBackendHealthArgs, opts?: pulumi.InvokeOptions): Promise<GetLoadBalancerBackendHealthResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLoadBalancerBackendHealth:getLoadBalancerBackendHealth", {
        "backendName": args.backendName,
        "backendSetName": args.backendSetName,
        "id": args.id,
        "loadBalancerId": args.loadBalancerId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLoadBalancerBackendHealth.
 */
export interface GetLoadBalancerBackendHealthArgs {
    backendName: string;
    backendSetName: string;
    id?: string;
    loadBalancerId: string;
}

/**
 * A collection of values returned by getLoadBalancerBackendHealth.
 */
export interface GetLoadBalancerBackendHealthResult {
    readonly backendName: string;
    readonly backendSetName: string;
    readonly healthCheckResults: outputs.GetLoadBalancerBackendHealthHealthCheckResult[];
    readonly id: string;
    readonly loadBalancerId: string;
    readonly status: string;
}
export function getLoadBalancerBackendHealthOutput(args: GetLoadBalancerBackendHealthOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoadBalancerBackendHealthResult> {
    return pulumi.output(args).apply((a: any) => getLoadBalancerBackendHealth(a, opts))
}

/**
 * A collection of arguments for invoking getLoadBalancerBackendHealth.
 */
export interface GetLoadBalancerBackendHealthOutputArgs {
    backendName: pulumi.Input<string>;
    backendSetName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    loadBalancerId: pulumi.Input<string>;
}
