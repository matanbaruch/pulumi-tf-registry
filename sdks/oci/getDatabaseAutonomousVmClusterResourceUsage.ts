// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseAutonomousVmClusterResourceUsage(args: GetDatabaseAutonomousVmClusterResourceUsageArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseAutonomousVmClusterResourceUsageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseAutonomousVmClusterResourceUsage:getDatabaseAutonomousVmClusterResourceUsage", {
        "autonomousVmClusterId": args.autonomousVmClusterId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseAutonomousVmClusterResourceUsage.
 */
export interface GetDatabaseAutonomousVmClusterResourceUsageArgs {
    autonomousVmClusterId: string;
    id?: string;
}

/**
 * A collection of values returned by getDatabaseAutonomousVmClusterResourceUsage.
 */
export interface GetDatabaseAutonomousVmClusterResourceUsageResult {
    readonly autonomousDataStorageSizeInTbs: number;
    readonly autonomousVmClusterId: string;
    readonly autonomousVmResourceUsages: outputs.GetDatabaseAutonomousVmClusterResourceUsageAutonomousVmResourceUsage[];
    readonly availableAutonomousDataStorageSizeInTbs: number;
    readonly availableCpus: number;
    readonly dbNodeStorageSizeInGbs: number;
    readonly displayName: string;
    readonly exadataStorageInTbs: number;
    readonly id: string;
    readonly isLocalBackupEnabled: boolean;
    readonly memoryPerOracleComputeUnitInGbs: number;
    readonly memorySizeInGbs: number;
    readonly nonProvisionableAutonomousContainerDatabases: number;
    readonly provisionableAutonomousContainerDatabases: number;
    readonly provisionedAutonomousContainerDatabases: number;
    readonly provisionedCpus: number;
    readonly reclaimableCpus: number;
    readonly reservedCpus: number;
    readonly totalContainerDatabases: number;
    readonly totalCpus: number;
    readonly usedAutonomousDataStorageSizeInTbs: number;
    readonly usedCpus: number;
}
export function getDatabaseAutonomousVmClusterResourceUsageOutput(args: GetDatabaseAutonomousVmClusterResourceUsageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseAutonomousVmClusterResourceUsageResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseAutonomousVmClusterResourceUsage(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseAutonomousVmClusterResourceUsage.
 */
export interface GetDatabaseAutonomousVmClusterResourceUsageOutputArgs {
    autonomousVmClusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
