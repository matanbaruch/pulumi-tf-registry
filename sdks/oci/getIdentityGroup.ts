// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIdentityGroup(args: GetIdentityGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityGroup:getIdentityGroup", {
        "groupId": args.groupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityGroup.
 */
export interface GetIdentityGroupArgs {
    groupId: string;
}

/**
 * A collection of values returned by getIdentityGroup.
 */
export interface GetIdentityGroupResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly freeformTags: {[key: string]: string};
    readonly groupId: string;
    readonly id: string;
    readonly inactiveState: string;
    readonly name: string;
    readonly state: string;
    readonly timeCreated: string;
}
export function getIdentityGroupOutput(args: GetIdentityGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityGroupResult> {
    return pulumi.output(args).apply((a: any) => getIdentityGroup(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityGroup.
 */
export interface GetIdentityGroupOutputArgs {
    groupId: pulumi.Input<string>;
}
