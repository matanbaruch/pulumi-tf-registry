// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsubOrganizationSubscriptionOrganizationSubscriptions(args: GetOsubOrganizationSubscriptionOrganizationSubscriptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetOsubOrganizationSubscriptionOrganizationSubscriptionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsubOrganizationSubscriptionOrganizationSubscriptions:getOsubOrganizationSubscriptionOrganizationSubscriptions", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "subscriptionIds": args.subscriptionIds,
        "xOneOriginRegion": args.xOneOriginRegion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsubOrganizationSubscriptionOrganizationSubscriptions.
 */
export interface GetOsubOrganizationSubscriptionOrganizationSubscriptionsArgs {
    compartmentId: string;
    filters?: inputs.GetOsubOrganizationSubscriptionOrganizationSubscriptionsFilter[];
    id?: string;
    subscriptionIds: string;
    xOneOriginRegion?: string;
}

/**
 * A collection of values returned by getOsubOrganizationSubscriptionOrganizationSubscriptions.
 */
export interface GetOsubOrganizationSubscriptionOrganizationSubscriptionsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.GetOsubOrganizationSubscriptionOrganizationSubscriptionsFilter[];
    readonly id: string;
    readonly subscriptionIds: string;
    readonly subscriptions: outputs.GetOsubOrganizationSubscriptionOrganizationSubscriptionsSubscription[];
    readonly xOneOriginRegion?: string;
}
export function getOsubOrganizationSubscriptionOrganizationSubscriptionsOutput(args: GetOsubOrganizationSubscriptionOrganizationSubscriptionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsubOrganizationSubscriptionOrganizationSubscriptionsResult> {
    return pulumi.output(args).apply((a: any) => getOsubOrganizationSubscriptionOrganizationSubscriptions(a, opts))
}

/**
 * A collection of arguments for invoking getOsubOrganizationSubscriptionOrganizationSubscriptions.
 */
export interface GetOsubOrganizationSubscriptionOrganizationSubscriptionsOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOsubOrganizationSubscriptionOrganizationSubscriptionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    subscriptionIds: pulumi.Input<string>;
    xOneOriginRegion?: pulumi.Input<string>;
}
