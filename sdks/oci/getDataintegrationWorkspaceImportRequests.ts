// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataintegrationWorkspaceImportRequests(args: GetDataintegrationWorkspaceImportRequestsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataintegrationWorkspaceImportRequestsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataintegrationWorkspaceImportRequests:getDataintegrationWorkspaceImportRequests", {
        "filters": args.filters,
        "id": args.id,
        "importStatus": args.importStatus,
        "name": args.name,
        "projection": args.projection,
        "timeEndedInMillis": args.timeEndedInMillis,
        "timeStartedInMillis": args.timeStartedInMillis,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataintegrationWorkspaceImportRequests.
 */
export interface GetDataintegrationWorkspaceImportRequestsArgs {
    filters?: inputs.GetDataintegrationWorkspaceImportRequestsFilter[];
    id?: string;
    importStatus?: string;
    name?: string;
    projection?: string;
    timeEndedInMillis?: string;
    timeStartedInMillis?: string;
    workspaceId: string;
}

/**
 * A collection of values returned by getDataintegrationWorkspaceImportRequests.
 */
export interface GetDataintegrationWorkspaceImportRequestsResult {
    readonly filters?: outputs.GetDataintegrationWorkspaceImportRequestsFilter[];
    readonly id: string;
    readonly importRequestSummaryCollections: outputs.GetDataintegrationWorkspaceImportRequestsImportRequestSummaryCollection[];
    readonly importStatus?: string;
    readonly name?: string;
    readonly projection?: string;
    readonly timeEndedInMillis?: string;
    readonly timeStartedInMillis?: string;
    readonly workspaceId: string;
}
export function getDataintegrationWorkspaceImportRequestsOutput(args: GetDataintegrationWorkspaceImportRequestsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataintegrationWorkspaceImportRequestsResult> {
    return pulumi.output(args).apply((a: any) => getDataintegrationWorkspaceImportRequests(a, opts))
}

/**
 * A collection of arguments for invoking getDataintegrationWorkspaceImportRequests.
 */
export interface GetDataintegrationWorkspaceImportRequestsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataintegrationWorkspaceImportRequestsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    importStatus?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projection?: pulumi.Input<string>;
    timeEndedInMillis?: pulumi.Input<string>;
    timeStartedInMillis?: pulumi.Input<string>;
    workspaceId: pulumi.Input<string>;
}
