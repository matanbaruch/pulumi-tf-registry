// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getJmsJavaDownloadsJavaLicenseAcceptanceRecords(args: GetJmsJavaDownloadsJavaLicenseAcceptanceRecordsArgs, opts?: pulumi.InvokeOptions): Promise<GetJmsJavaDownloadsJavaLicenseAcceptanceRecordsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getJmsJavaDownloadsJavaLicenseAcceptanceRecords:getJmsJavaDownloadsJavaLicenseAcceptanceRecords", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "licenseType": args.licenseType,
        "searchByUser": args.searchByUser,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getJmsJavaDownloadsJavaLicenseAcceptanceRecords.
 */
export interface GetJmsJavaDownloadsJavaLicenseAcceptanceRecordsArgs {
    compartmentId: string;
    filters?: inputs.GetJmsJavaDownloadsJavaLicenseAcceptanceRecordsFilter[];
    id?: string;
    licenseType?: string;
    searchByUser?: string;
    status?: string;
}

/**
 * A collection of values returned by getJmsJavaDownloadsJavaLicenseAcceptanceRecords.
 */
export interface GetJmsJavaDownloadsJavaLicenseAcceptanceRecordsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.GetJmsJavaDownloadsJavaLicenseAcceptanceRecordsFilter[];
    readonly id?: string;
    readonly javaLicenseAcceptanceRecordCollections: outputs.GetJmsJavaDownloadsJavaLicenseAcceptanceRecordsJavaLicenseAcceptanceRecordCollection[];
    readonly licenseType?: string;
    readonly searchByUser?: string;
    readonly status?: string;
}
export function getJmsJavaDownloadsJavaLicenseAcceptanceRecordsOutput(args: GetJmsJavaDownloadsJavaLicenseAcceptanceRecordsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJmsJavaDownloadsJavaLicenseAcceptanceRecordsResult> {
    return pulumi.output(args).apply((a: any) => getJmsJavaDownloadsJavaLicenseAcceptanceRecords(a, opts))
}

/**
 * A collection of arguments for invoking getJmsJavaDownloadsJavaLicenseAcceptanceRecords.
 */
export interface GetJmsJavaDownloadsJavaLicenseAcceptanceRecordsOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetJmsJavaDownloadsJavaLicenseAcceptanceRecordsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    licenseType?: pulumi.Input<string>;
    searchByUser?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
