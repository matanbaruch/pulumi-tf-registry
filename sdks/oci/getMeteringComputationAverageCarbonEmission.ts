// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMeteringComputationAverageCarbonEmission(args: GetMeteringComputationAverageCarbonEmissionArgs, opts?: pulumi.InvokeOptions): Promise<GetMeteringComputationAverageCarbonEmissionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMeteringComputationAverageCarbonEmission:getMeteringComputationAverageCarbonEmission", {
        "id": args.id,
        "skuPartNumber": args.skuPartNumber,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMeteringComputationAverageCarbonEmission.
 */
export interface GetMeteringComputationAverageCarbonEmissionArgs {
    id?: string;
    skuPartNumber: string;
}

/**
 * A collection of values returned by getMeteringComputationAverageCarbonEmission.
 */
export interface GetMeteringComputationAverageCarbonEmissionResult {
    readonly averageCarbonEmission: number;
    readonly id: string;
    readonly skuPartNumber: string;
}
export function getMeteringComputationAverageCarbonEmissionOutput(args: GetMeteringComputationAverageCarbonEmissionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMeteringComputationAverageCarbonEmissionResult> {
    return pulumi.output(args).apply((a: any) => getMeteringComputationAverageCarbonEmission(a, opts))
}

/**
 * A collection of arguments for invoking getMeteringComputationAverageCarbonEmission.
 */
export interface GetMeteringComputationAverageCarbonEmissionOutputArgs {
    id?: pulumi.Input<string>;
    skuPartNumber: pulumi.Input<string>;
}
