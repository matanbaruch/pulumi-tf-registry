// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataflowRunLogs(args: GetDataflowRunLogsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataflowRunLogsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataflowRunLogs:getDataflowRunLogs", {
        "filters": args.filters,
        "id": args.id,
        "runId": args.runId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataflowRunLogs.
 */
export interface GetDataflowRunLogsArgs {
    filters?: inputs.GetDataflowRunLogsFilter[];
    id?: string;
    runId: string;
}

/**
 * A collection of values returned by getDataflowRunLogs.
 */
export interface GetDataflowRunLogsResult {
    readonly filters?: outputs.GetDataflowRunLogsFilter[];
    readonly id: string;
    readonly runId: string;
    readonly runLogs: outputs.GetDataflowRunLogsRunLog[];
}
export function getDataflowRunLogsOutput(args: GetDataflowRunLogsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataflowRunLogsResult> {
    return pulumi.output(args).apply((a: any) => getDataflowRunLogs(a, opts))
}

/**
 * A collection of arguments for invoking getDataflowRunLogs.
 */
export interface GetDataflowRunLogsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataflowRunLogsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    runId: pulumi.Input<string>;
}
