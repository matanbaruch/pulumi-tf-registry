// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEventsRule(args: GetEventsRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetEventsRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getEventsRule:getEventsRule", {
        "ruleId": args.ruleId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEventsRule.
 */
export interface GetEventsRuleArgs {
    ruleId: string;
}

/**
 * A collection of values returned by getEventsRule.
 */
export interface GetEventsRuleResult {
    readonly actions: outputs.GetEventsRuleAction[];
    readonly compartmentId: string;
    readonly condition: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isEnabled: boolean;
    readonly lifecycleMessage: string;
    readonly ruleId: string;
    readonly state: string;
    readonly timeCreated: string;
}
export function getEventsRuleOutput(args: GetEventsRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventsRuleResult> {
    return pulumi.output(args).apply((a: any) => getEventsRule(a, opts))
}

/**
 * A collection of arguments for invoking getEventsRule.
 */
export interface GetEventsRuleOutputArgs {
    ruleId: pulumi.Input<string>;
}
