// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementExternalListener(args: GetDatabaseManagementExternalListenerArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementExternalListenerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementExternalListener:getDatabaseManagementExternalListener", {
        "externalListenerId": args.externalListenerId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementExternalListener.
 */
export interface GetDatabaseManagementExternalListenerArgs {
    externalListenerId: string;
}

/**
 * A collection of values returned by getDatabaseManagementExternalListener.
 */
export interface GetDatabaseManagementExternalListenerResult {
    readonly additionalDetails: {[key: string]: string};
    readonly adrHomeDirectory: string;
    readonly compartmentId: string;
    readonly componentName: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly endpoints: outputs.GetDatabaseManagementExternalListenerEndpoint[];
    readonly externalConnectorId: string;
    readonly externalDbHomeId: string;
    readonly externalDbNodeId: string;
    readonly externalDbSystemId: string;
    readonly externalListenerId: string;
    readonly freeformTags: {[key: string]: string};
    readonly hostName: string;
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly listenerAlias: string;
    readonly listenerOraLocation: string;
    readonly listenerType: string;
    readonly logDirectory: string;
    readonly oracleHome: string;
    readonly servicedAsms: outputs.GetDatabaseManagementExternalListenerServicedAsm[];
    readonly servicedDatabases: outputs.GetDatabaseManagementExternalListenerServicedDatabase[];
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly traceDirectory: string;
    readonly version: string;
}
export function getDatabaseManagementExternalListenerOutput(args: GetDatabaseManagementExternalListenerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementExternalListenerResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementExternalListener(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementExternalListener.
 */
export interface GetDatabaseManagementExternalListenerOutputArgs {
    externalListenerId: pulumi.Input<string>;
}
