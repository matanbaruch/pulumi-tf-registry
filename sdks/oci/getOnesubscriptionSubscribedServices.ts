// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOnesubscriptionSubscribedServices(args: GetOnesubscriptionSubscribedServicesArgs, opts?: pulumi.InvokeOptions): Promise<GetOnesubscriptionSubscribedServicesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOnesubscriptionSubscribedServices:getOnesubscriptionSubscribedServices", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "orderLineId": args.orderLineId,
        "status": args.status,
        "subscriptionId": args.subscriptionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOnesubscriptionSubscribedServices.
 */
export interface GetOnesubscriptionSubscribedServicesArgs {
    compartmentId: string;
    filters?: inputs.GetOnesubscriptionSubscribedServicesFilter[];
    id?: string;
    orderLineId?: string;
    status?: string;
    subscriptionId: string;
}

/**
 * A collection of values returned by getOnesubscriptionSubscribedServices.
 */
export interface GetOnesubscriptionSubscribedServicesResult {
    readonly compartmentId: string;
    readonly filters?: outputs.GetOnesubscriptionSubscribedServicesFilter[];
    readonly id: string;
    readonly orderLineId?: string;
    readonly status?: string;
    readonly subscribedServices: outputs.GetOnesubscriptionSubscribedServicesSubscribedService[];
    readonly subscriptionId: string;
}
export function getOnesubscriptionSubscribedServicesOutput(args: GetOnesubscriptionSubscribedServicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOnesubscriptionSubscribedServicesResult> {
    return pulumi.output(args).apply((a: any) => getOnesubscriptionSubscribedServices(a, opts))
}

/**
 * A collection of arguments for invoking getOnesubscriptionSubscribedServices.
 */
export interface GetOnesubscriptionSubscribedServicesOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOnesubscriptionSubscribedServicesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    orderLineId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    subscriptionId: pulumi.Input<string>;
}
