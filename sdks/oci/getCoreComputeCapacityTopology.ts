// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreComputeCapacityTopology(args: GetCoreComputeCapacityTopologyArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreComputeCapacityTopologyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreComputeCapacityTopology:getCoreComputeCapacityTopology", {
        "computeCapacityTopologyId": args.computeCapacityTopologyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreComputeCapacityTopology.
 */
export interface GetCoreComputeCapacityTopologyArgs {
    computeCapacityTopologyId: string;
}

/**
 * A collection of values returned by getCoreComputeCapacityTopology.
 */
export interface GetCoreComputeCapacityTopologyResult {
    readonly availabilityDomain: string;
    readonly capacitySources: outputs.GetCoreComputeCapacityTopologyCapacitySource[];
    readonly compartmentId: string;
    readonly computeCapacityTopologyId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getCoreComputeCapacityTopologyOutput(args: GetCoreComputeCapacityTopologyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreComputeCapacityTopologyResult> {
    return pulumi.output(args).apply((a: any) => getCoreComputeCapacityTopology(a, opts))
}

/**
 * A collection of arguments for invoking getCoreComputeCapacityTopology.
 */
export interface GetCoreComputeCapacityTopologyOutputArgs {
    computeCapacityTopologyId: pulumi.Input<string>;
}
