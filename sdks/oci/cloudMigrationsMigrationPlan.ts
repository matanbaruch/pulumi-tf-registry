// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudMigrationsMigrationPlan extends pulumi.CustomResource {
    /**
     * Get an existing CloudMigrationsMigrationPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudMigrationsMigrationPlanState, opts?: pulumi.CustomResourceOptions): CloudMigrationsMigrationPlan {
        return new CloudMigrationsMigrationPlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/cloudMigrationsMigrationPlan:CloudMigrationsMigrationPlan';

    /**
     * Returns true if the given object is an instance of CloudMigrationsMigrationPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudMigrationsMigrationPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudMigrationsMigrationPlan.__pulumiType;
    }

    public /*out*/ readonly calculatedLimits!: pulumi.Output<{[key: string]: string}>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly migrationId!: pulumi.Output<string>;
    public /*out*/ readonly migrationPlanStats!: pulumi.Output<outputs.CloudMigrationsMigrationPlanMigrationPlanStat[]>;
    public /*out*/ readonly referenceToRmsStack!: pulumi.Output<string>;
    public readonly sourceMigrationPlanId!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly strategies!: pulumi.Output<outputs.CloudMigrationsMigrationPlanStrategy[] | undefined>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public readonly targetEnvironments!: pulumi.Output<outputs.CloudMigrationsMigrationPlanTargetEnvironment[] | undefined>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CloudMigrationsMigrationPlanTimeouts | undefined>;

    /**
     * Create a CloudMigrationsMigrationPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudMigrationsMigrationPlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudMigrationsMigrationPlanArgs | CloudMigrationsMigrationPlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudMigrationsMigrationPlanState | undefined;
            resourceInputs["calculatedLimits"] = state ? state.calculatedLimits : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["migrationId"] = state ? state.migrationId : undefined;
            resourceInputs["migrationPlanStats"] = state ? state.migrationPlanStats : undefined;
            resourceInputs["referenceToRmsStack"] = state ? state.referenceToRmsStack : undefined;
            resourceInputs["sourceMigrationPlanId"] = state ? state.sourceMigrationPlanId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["strategies"] = state ? state.strategies : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["targetEnvironments"] = state ? state.targetEnvironments : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CloudMigrationsMigrationPlanArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.migrationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'migrationId'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["migrationId"] = args ? args.migrationId : undefined;
            resourceInputs["sourceMigrationPlanId"] = args ? args.sourceMigrationPlanId : undefined;
            resourceInputs["strategies"] = args ? args.strategies : undefined;
            resourceInputs["targetEnvironments"] = args ? args.targetEnvironments : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["calculatedLimits"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["migrationPlanStats"] = undefined /*out*/;
            resourceInputs["referenceToRmsStack"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudMigrationsMigrationPlan.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudMigrationsMigrationPlan resources.
 */
export interface CloudMigrationsMigrationPlanState {
    calculatedLimits?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lifecycleDetails?: pulumi.Input<string>;
    migrationId?: pulumi.Input<string>;
    migrationPlanStats?: pulumi.Input<pulumi.Input<inputs.CloudMigrationsMigrationPlanMigrationPlanStat>[]>;
    referenceToRmsStack?: pulumi.Input<string>;
    sourceMigrationPlanId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    strategies?: pulumi.Input<pulumi.Input<inputs.CloudMigrationsMigrationPlanStrategy>[]>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetEnvironments?: pulumi.Input<pulumi.Input<inputs.CloudMigrationsMigrationPlanTargetEnvironment>[]>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CloudMigrationsMigrationPlanTimeouts>;
}

/**
 * The set of arguments for constructing a CloudMigrationsMigrationPlan resource.
 */
export interface CloudMigrationsMigrationPlanArgs {
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    migrationId: pulumi.Input<string>;
    sourceMigrationPlanId?: pulumi.Input<string>;
    strategies?: pulumi.Input<pulumi.Input<inputs.CloudMigrationsMigrationPlanStrategy>[]>;
    targetEnvironments?: pulumi.Input<pulumi.Input<inputs.CloudMigrationsMigrationPlanTargetEnvironment>[]>;
    timeouts?: pulumi.Input<inputs.CloudMigrationsMigrationPlanTimeouts>;
}
