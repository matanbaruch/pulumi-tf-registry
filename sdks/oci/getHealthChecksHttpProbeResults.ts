// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHealthChecksHttpProbeResults(args: GetHealthChecksHttpProbeResultsArgs, opts?: pulumi.InvokeOptions): Promise<GetHealthChecksHttpProbeResultsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getHealthChecksHttpProbeResults:getHealthChecksHttpProbeResults", {
        "filters": args.filters,
        "id": args.id,
        "probeConfigurationId": args.probeConfigurationId,
        "startTimeGreaterThanOrEqualTo": args.startTimeGreaterThanOrEqualTo,
        "startTimeLessThanOrEqualTo": args.startTimeLessThanOrEqualTo,
        "target": args.target,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHealthChecksHttpProbeResults.
 */
export interface GetHealthChecksHttpProbeResultsArgs {
    filters?: inputs.GetHealthChecksHttpProbeResultsFilter[];
    id?: string;
    probeConfigurationId: string;
    startTimeGreaterThanOrEqualTo?: number;
    startTimeLessThanOrEqualTo?: number;
    target?: string;
}

/**
 * A collection of values returned by getHealthChecksHttpProbeResults.
 */
export interface GetHealthChecksHttpProbeResultsResult {
    readonly filters?: outputs.GetHealthChecksHttpProbeResultsFilter[];
    readonly httpProbeResults: outputs.GetHealthChecksHttpProbeResultsHttpProbeResult[];
    readonly id: string;
    readonly probeConfigurationId: string;
    readonly startTimeGreaterThanOrEqualTo?: number;
    readonly startTimeLessThanOrEqualTo?: number;
    readonly target?: string;
}
export function getHealthChecksHttpProbeResultsOutput(args: GetHealthChecksHttpProbeResultsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHealthChecksHttpProbeResultsResult> {
    return pulumi.output(args).apply((a: any) => getHealthChecksHttpProbeResults(a, opts))
}

/**
 * A collection of arguments for invoking getHealthChecksHttpProbeResults.
 */
export interface GetHealthChecksHttpProbeResultsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetHealthChecksHttpProbeResultsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    probeConfigurationId: pulumi.Input<string>;
    startTimeGreaterThanOrEqualTo?: pulumi.Input<number>;
    startTimeLessThanOrEqualTo?: pulumi.Input<number>;
    target?: pulumi.Input<string>;
}
