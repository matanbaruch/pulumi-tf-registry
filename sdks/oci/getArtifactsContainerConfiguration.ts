// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getArtifactsContainerConfiguration(args: GetArtifactsContainerConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetArtifactsContainerConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getArtifactsContainerConfiguration:getArtifactsContainerConfiguration", {
        "compartmentId": args.compartmentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getArtifactsContainerConfiguration.
 */
export interface GetArtifactsContainerConfigurationArgs {
    compartmentId: string;
}

/**
 * A collection of values returned by getArtifactsContainerConfiguration.
 */
export interface GetArtifactsContainerConfigurationResult {
    readonly compartmentId: string;
    readonly id: string;
    readonly isRepositoryCreatedOnFirstPush: boolean;
    readonly namespace: string;
}
export function getArtifactsContainerConfigurationOutput(args: GetArtifactsContainerConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetArtifactsContainerConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getArtifactsContainerConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getArtifactsContainerConfiguration.
 */
export interface GetArtifactsContainerConfigurationOutputArgs {
    compartmentId: pulumi.Input<string>;
}
