// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOceOceInstance(args: GetOceOceInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetOceOceInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOceOceInstance:getOceOceInstance", {
        "oceInstanceId": args.oceInstanceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOceOceInstance.
 */
export interface GetOceOceInstanceArgs {
    oceInstanceId: string;
}

/**
 * A collection of values returned by getOceOceInstance.
 */
export interface GetOceOceInstanceResult {
    readonly addOnFeatures: string[];
    readonly adminEmail: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly drRegion: string;
    readonly freeformTags: {[key: string]: string};
    readonly guid: string;
    readonly id: string;
    readonly idcsAccessToken: string;
    readonly idcsTenancy: string;
    readonly instanceAccessType: string;
    readonly instanceLicenseType: string;
    readonly instanceUsageType: string;
    readonly lifecycleDetails: string;
    readonly name: string;
    readonly objectStorageNamespace: string;
    readonly oceInstanceId: string;
    readonly service: {[key: string]: string};
    readonly state: string;
    readonly stateMessage: string;
    readonly systemTags: {[key: string]: string};
    readonly tenancyId: string;
    readonly tenancyName: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly upgradeSchedule: string;
    readonly wafPrimaryDomain: string;
}
export function getOceOceInstanceOutput(args: GetOceOceInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOceOceInstanceResult> {
    return pulumi.output(args).apply((a: any) => getOceOceInstance(a, opts))
}

/**
 * A collection of arguments for invoking getOceOceInstance.
 */
export interface GetOceOceInstanceOutputArgs {
    oceInstanceId: pulumi.Input<string>;
}
