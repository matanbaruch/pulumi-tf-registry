// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLogAnalyticsNamespaceScheduledTask(args: GetLogAnalyticsNamespaceScheduledTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsNamespaceScheduledTaskResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLogAnalyticsNamespaceScheduledTask:getLogAnalyticsNamespaceScheduledTask", {
        "namespace": args.namespace,
        "scheduledTaskId": args.scheduledTaskId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespaceScheduledTask.
 */
export interface GetLogAnalyticsNamespaceScheduledTaskArgs {
    namespace: string;
    scheduledTaskId: string;
}

/**
 * A collection of values returned by getLogAnalyticsNamespaceScheduledTask.
 */
export interface GetLogAnalyticsNamespaceScheduledTaskResult {
    readonly actions: outputs.GetLogAnalyticsNamespaceScheduledTaskAction[];
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly kind: string;
    readonly namespace: string;
    readonly numOccurrences: string;
    readonly savedSearchId: string;
    readonly scheduledTaskId: string;
    readonly schedules: outputs.GetLogAnalyticsNamespaceScheduledTaskSchedule[];
    readonly state: string;
    readonly taskStatus: string;
    readonly taskType: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly workRequestId: string;
}
export function getLogAnalyticsNamespaceScheduledTaskOutput(args: GetLogAnalyticsNamespaceScheduledTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsNamespaceScheduledTaskResult> {
    return pulumi.output(args).apply((a: any) => getLogAnalyticsNamespaceScheduledTask(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespaceScheduledTask.
 */
export interface GetLogAnalyticsNamespaceScheduledTaskOutputArgs {
    namespace: pulumi.Input<string>;
    scheduledTaskId: pulumi.Input<string>;
}
