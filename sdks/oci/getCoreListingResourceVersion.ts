// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCoreListingResourceVersion(args: GetCoreListingResourceVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreListingResourceVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreListingResourceVersion:getCoreListingResourceVersion", {
        "id": args.id,
        "listingId": args.listingId,
        "resourceVersion": args.resourceVersion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreListingResourceVersion.
 */
export interface GetCoreListingResourceVersionArgs {
    id?: string;
    listingId: string;
    resourceVersion: string;
}

/**
 * A collection of values returned by getCoreListingResourceVersion.
 */
export interface GetCoreListingResourceVersionResult {
    readonly accessiblePorts: number[];
    readonly allowedActions: string[];
    readonly availableRegions: string[];
    readonly compatibleShapes: string[];
    readonly id: string;
    readonly listingId: string;
    readonly listingResourceId: string;
    readonly listingResourceVersion: string;
    readonly resourceVersion: string;
    readonly timePublished: string;
}
export function getCoreListingResourceVersionOutput(args: GetCoreListingResourceVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreListingResourceVersionResult> {
    return pulumi.output(args).apply((a: any) => getCoreListingResourceVersion(a, opts))
}

/**
 * A collection of arguments for invoking getCoreListingResourceVersion.
 */
export interface GetCoreListingResourceVersionOutputArgs {
    id?: pulumi.Input<string>;
    listingId: pulumi.Input<string>;
    resourceVersion: pulumi.Input<string>;
}
