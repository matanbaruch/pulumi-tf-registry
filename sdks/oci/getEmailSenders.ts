// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEmailSenders(args: GetEmailSendersArgs, opts?: pulumi.InvokeOptions): Promise<GetEmailSendersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getEmailSenders:getEmailSenders", {
        "compartmentId": args.compartmentId,
        "domain": args.domain,
        "emailAddress": args.emailAddress,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEmailSenders.
 */
export interface GetEmailSendersArgs {
    compartmentId: string;
    domain?: string;
    emailAddress?: string;
    filters?: inputs.GetEmailSendersFilter[];
    id?: string;
    state?: string;
}

/**
 * A collection of values returned by getEmailSenders.
 */
export interface GetEmailSendersResult {
    readonly compartmentId: string;
    readonly domain?: string;
    readonly emailAddress?: string;
    readonly filters?: outputs.GetEmailSendersFilter[];
    readonly id: string;
    readonly senders: outputs.GetEmailSendersSender[];
    readonly state?: string;
}
export function getEmailSendersOutput(args: GetEmailSendersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmailSendersResult> {
    return pulumi.output(args).apply((a: any) => getEmailSenders(a, opts))
}

/**
 * A collection of arguments for invoking getEmailSenders.
 */
export interface GetEmailSendersOutputArgs {
    compartmentId: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    emailAddress?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetEmailSendersFilterArgs>[]>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
