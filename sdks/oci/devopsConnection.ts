// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DevopsConnection extends pulumi.CustomResource {
    /**
     * Get an existing DevopsConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DevopsConnectionState, opts?: pulumi.CustomResourceOptions): DevopsConnection {
        return new DevopsConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/devopsConnection:DevopsConnection';

    /**
     * Returns true if the given object is an instance of DevopsConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DevopsConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DevopsConnection.__pulumiType;
    }

    public readonly accessToken!: pulumi.Output<string>;
    public readonly appPassword!: pulumi.Output<string>;
    public readonly baseUrl!: pulumi.Output<string>;
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    public readonly connectionType!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly lastConnectionValidationResults!: pulumi.Output<outputs.DevopsConnectionLastConnectionValidationResult[]>;
    public readonly projectId!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DevopsConnectionTimeouts | undefined>;
    public readonly tlsVerifyConfig!: pulumi.Output<outputs.DevopsConnectionTlsVerifyConfig | undefined>;
    public readonly username!: pulumi.Output<string>;

    /**
     * Create a DevopsConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DevopsConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DevopsConnectionArgs | DevopsConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DevopsConnectionState | undefined;
            resourceInputs["accessToken"] = state ? state.accessToken : undefined;
            resourceInputs["appPassword"] = state ? state.appPassword : undefined;
            resourceInputs["baseUrl"] = state ? state.baseUrl : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["connectionType"] = state ? state.connectionType : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lastConnectionValidationResults"] = state ? state.lastConnectionValidationResults : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["tlsVerifyConfig"] = state ? state.tlsVerifyConfig : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as DevopsConnectionArgs | undefined;
            if ((!args || args.connectionType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionType'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["accessToken"] = args ? args.accessToken : undefined;
            resourceInputs["appPassword"] = args?.appPassword ? pulumi.secret(args.appPassword) : undefined;
            resourceInputs["baseUrl"] = args ? args.baseUrl : undefined;
            resourceInputs["connectionType"] = args ? args.connectionType : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["tlsVerifyConfig"] = args ? args.tlsVerifyConfig : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["lastConnectionValidationResults"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["appPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DevopsConnection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DevopsConnection resources.
 */
export interface DevopsConnectionState {
    accessToken?: pulumi.Input<string>;
    appPassword?: pulumi.Input<string>;
    baseUrl?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    connectionType?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lastConnectionValidationResults?: pulumi.Input<pulumi.Input<inputs.DevopsConnectionLastConnectionValidationResult>[]>;
    projectId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DevopsConnectionTimeouts>;
    tlsVerifyConfig?: pulumi.Input<inputs.DevopsConnectionTlsVerifyConfig>;
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DevopsConnection resource.
 */
export interface DevopsConnectionArgs {
    accessToken?: pulumi.Input<string>;
    appPassword?: pulumi.Input<string>;
    baseUrl?: pulumi.Input<string>;
    connectionType: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    projectId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DevopsConnectionTimeouts>;
    tlsVerifyConfig?: pulumi.Input<inputs.DevopsConnectionTlsVerifyConfig>;
    username?: pulumi.Input<string>;
}
