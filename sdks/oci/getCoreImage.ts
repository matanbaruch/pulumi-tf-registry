// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreImage(args: GetCoreImageArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreImageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreImage:getCoreImage", {
        "imageId": args.imageId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreImage.
 */
export interface GetCoreImageArgs {
    imageId: string;
}

/**
 * A collection of values returned by getCoreImage.
 */
export interface GetCoreImageResult {
    readonly agentFeatures: outputs.GetCoreImageAgentFeature[];
    readonly baseImageId: string;
    readonly billableSizeInGbs: string;
    readonly compartmentId: string;
    readonly createImageAllowed: boolean;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly imageId: string;
    readonly imageSourceDetails: outputs.GetCoreImageImageSourceDetail[];
    readonly instanceId: string;
    readonly launchMode: string;
    readonly launchOptions: outputs.GetCoreImageLaunchOption[];
    readonly listingType: string;
    readonly operatingSystem: string;
    readonly operatingSystemVersion: string;
    readonly sizeInMbs: string;
    readonly state: string;
    readonly timeCreated: string;
}
export function getCoreImageOutput(args: GetCoreImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreImageResult> {
    return pulumi.output(args).apply((a: any) => getCoreImage(a, opts))
}

/**
 * A collection of arguments for invoking getCoreImage.
 */
export interface GetCoreImageOutputArgs {
    imageId: pulumi.Input<string>;
}
