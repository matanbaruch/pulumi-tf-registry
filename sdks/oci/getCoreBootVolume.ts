// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreBootVolume(args: GetCoreBootVolumeArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreBootVolumeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreBootVolume:getCoreBootVolume", {
        "bootVolumeId": args.bootVolumeId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreBootVolume.
 */
export interface GetCoreBootVolumeArgs {
    bootVolumeId: string;
}

/**
 * A collection of values returned by getCoreBootVolume.
 */
export interface GetCoreBootVolumeResult {
    readonly autoTunedVpusPerGb: string;
    readonly autotunePolicies: outputs.GetCoreBootVolumeAutotunePolicy[];
    readonly availabilityDomain: string;
    /**
     * @deprecated Deprecated
     */
    readonly backupPolicyId: string;
    readonly bootVolumeId: string;
    readonly bootVolumeReplicas: outputs.GetCoreBootVolumeBootVolumeReplica[];
    readonly bootVolumeReplicasDeletion: boolean;
    readonly clusterPlacementGroupId: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly imageId: string;
    readonly isAutoTuneEnabled: boolean;
    readonly isHydrated: boolean;
    readonly kmsKeyId: string;
    readonly sizeInGbs: string;
    readonly sizeInMbs: string;
    readonly sourceDetails: outputs.GetCoreBootVolumeSourceDetail[];
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly volumeGroupId: string;
    readonly vpusPerGb: string;
}
export function getCoreBootVolumeOutput(args: GetCoreBootVolumeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreBootVolumeResult> {
    return pulumi.output(args).apply((a: any) => getCoreBootVolume(a, opts))
}

/**
 * A collection of arguments for invoking getCoreBootVolume.
 */
export interface GetCoreBootVolumeOutputArgs {
    bootVolumeId: pulumi.Input<string>;
}
