// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOptimizerProfileLevels(args: GetOptimizerProfileLevelsArgs, opts?: pulumi.InvokeOptions): Promise<GetOptimizerProfileLevelsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOptimizerProfileLevels:getOptimizerProfileLevels", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "recommendationName": args.recommendationName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOptimizerProfileLevels.
 */
export interface GetOptimizerProfileLevelsArgs {
    compartmentId: string;
    compartmentIdInSubtree: boolean;
    filters?: inputs.GetOptimizerProfileLevelsFilter[];
    id?: string;
    name?: string;
    recommendationName?: string;
}

/**
 * A collection of values returned by getOptimizerProfileLevels.
 */
export interface GetOptimizerProfileLevelsResult {
    readonly compartmentId: string;
    readonly compartmentIdInSubtree: boolean;
    readonly filters?: outputs.GetOptimizerProfileLevelsFilter[];
    readonly id: string;
    readonly name?: string;
    readonly profileLevelCollections: outputs.GetOptimizerProfileLevelsProfileLevelCollection[];
    readonly recommendationName?: string;
}
export function getOptimizerProfileLevelsOutput(args: GetOptimizerProfileLevelsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOptimizerProfileLevelsResult> {
    return pulumi.output(args).apply((a: any) => getOptimizerProfileLevels(a, opts))
}

/**
 * A collection of arguments for invoking getOptimizerProfileLevels.
 */
export interface GetOptimizerProfileLevelsOutputArgs {
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOptimizerProfileLevelsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    recommendationName?: pulumi.Input<string>;
}
