// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOperatorAccessControlOperatorControlAssignments(args: GetOperatorAccessControlOperatorControlAssignmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetOperatorAccessControlOperatorControlAssignmentsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOperatorAccessControlOperatorControlAssignments:getOperatorAccessControlOperatorControlAssignments", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "operatorControlName": args.operatorControlName,
        "resourceName": args.resourceName,
        "resourceType": args.resourceType,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOperatorAccessControlOperatorControlAssignments.
 */
export interface GetOperatorAccessControlOperatorControlAssignmentsArgs {
    compartmentId: string;
    filters?: inputs.GetOperatorAccessControlOperatorControlAssignmentsFilter[];
    id?: string;
    operatorControlName?: string;
    resourceName?: string;
    resourceType?: string;
    state?: string;
}

/**
 * A collection of values returned by getOperatorAccessControlOperatorControlAssignments.
 */
export interface GetOperatorAccessControlOperatorControlAssignmentsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.GetOperatorAccessControlOperatorControlAssignmentsFilter[];
    readonly id: string;
    readonly operatorControlAssignmentCollections: outputs.GetOperatorAccessControlOperatorControlAssignmentsOperatorControlAssignmentCollection[];
    readonly operatorControlName?: string;
    readonly resourceName?: string;
    readonly resourceType?: string;
    readonly state?: string;
}
export function getOperatorAccessControlOperatorControlAssignmentsOutput(args: GetOperatorAccessControlOperatorControlAssignmentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOperatorAccessControlOperatorControlAssignmentsResult> {
    return pulumi.output(args).apply((a: any) => getOperatorAccessControlOperatorControlAssignments(a, opts))
}

/**
 * A collection of arguments for invoking getOperatorAccessControlOperatorControlAssignments.
 */
export interface GetOperatorAccessControlOperatorControlAssignmentsOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOperatorAccessControlOperatorControlAssignmentsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    operatorControlName?: pulumi.Input<string>;
    resourceName?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
