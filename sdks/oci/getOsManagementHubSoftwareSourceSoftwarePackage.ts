// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsManagementHubSoftwareSourceSoftwarePackage(args: GetOsManagementHubSoftwareSourceSoftwarePackageArgs, opts?: pulumi.InvokeOptions): Promise<GetOsManagementHubSoftwareSourceSoftwarePackageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsManagementHubSoftwareSourceSoftwarePackage:getOsManagementHubSoftwareSourceSoftwarePackage", {
        "id": args.id,
        "softwarePackageName": args.softwarePackageName,
        "softwareSourceId": args.softwareSourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsManagementHubSoftwareSourceSoftwarePackage.
 */
export interface GetOsManagementHubSoftwareSourceSoftwarePackageArgs {
    id?: string;
    softwarePackageName: string;
    softwareSourceId: string;
}

/**
 * A collection of values returned by getOsManagementHubSoftwareSourceSoftwarePackage.
 */
export interface GetOsManagementHubSoftwareSourceSoftwarePackageResult {
    readonly architecture: string;
    readonly checksum: string;
    readonly checksumType: string;
    readonly dependencies: outputs.GetOsManagementHubSoftwareSourceSoftwarePackageDependency[];
    readonly description: string;
    readonly displayName: string;
    readonly files: outputs.GetOsManagementHubSoftwareSourceSoftwarePackageFile[];
    readonly id: string;
    readonly isLatest: boolean;
    readonly lastModifiedDate: string;
    readonly name: string;
    readonly osFamilies: string[];
    readonly sizeInBytes: string;
    readonly softwarePackageName: string;
    readonly softwareSourceId: string;
    readonly softwareSources: outputs.GetOsManagementHubSoftwareSourceSoftwarePackageSoftwareSource[];
    readonly type: string;
    readonly version: string;
}
export function getOsManagementHubSoftwareSourceSoftwarePackageOutput(args: GetOsManagementHubSoftwareSourceSoftwarePackageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsManagementHubSoftwareSourceSoftwarePackageResult> {
    return pulumi.output(args).apply((a: any) => getOsManagementHubSoftwareSourceSoftwarePackage(a, opts))
}

/**
 * A collection of arguments for invoking getOsManagementHubSoftwareSourceSoftwarePackage.
 */
export interface GetOsManagementHubSoftwareSourceSoftwarePackageOutputArgs {
    id?: pulumi.Input<string>;
    softwarePackageName: pulumi.Input<string>;
    softwareSourceId: pulumi.Input<string>;
}
