// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OpsiExadataInsight extends pulumi.CustomResource {
    /**
     * Get an existing OpsiExadataInsight resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OpsiExadataInsightState, opts?: pulumi.CustomResourceOptions): OpsiExadataInsight {
        return new OpsiExadataInsight(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/opsiExadataInsight:OpsiExadataInsight';

    /**
     * Returns true if the given object is an instance of OpsiExadataInsight.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OpsiExadataInsight {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OpsiExadataInsight.__pulumiType;
    }

    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly enterpriseManagerBridgeId!: pulumi.Output<string>;
    public /*out*/ readonly enterpriseManagerEntityDisplayName!: pulumi.Output<string>;
    public readonly enterpriseManagerEntityIdentifier!: pulumi.Output<string>;
    public /*out*/ readonly enterpriseManagerEntityName!: pulumi.Output<string>;
    public /*out*/ readonly enterpriseManagerEntityType!: pulumi.Output<string>;
    public readonly enterpriseManagerIdentifier!: pulumi.Output<string>;
    public readonly entitySource!: pulumi.Output<string>;
    public /*out*/ readonly exadataDisplayName!: pulumi.Output<string>;
    public readonly exadataInfraId!: pulumi.Output<string>;
    public /*out*/ readonly exadataInfraResourceType!: pulumi.Output<string>;
    public /*out*/ readonly exadataName!: pulumi.Output<string>;
    public /*out*/ readonly exadataRackType!: pulumi.Output<string>;
    public /*out*/ readonly exadataShape!: pulumi.Output<string>;
    public /*out*/ readonly exadataType!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly isAutoSyncEnabled!: pulumi.Output<boolean>;
    public /*out*/ readonly isVirtualizedExadata!: pulumi.Output<boolean>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly memberVmClusterDetails!: pulumi.Output<outputs.OpsiExadataInsightMemberVmClusterDetail[] | undefined>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.OpsiExadataInsightTimeouts | undefined>;

    /**
     * Create a OpsiExadataInsight resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OpsiExadataInsightArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OpsiExadataInsightArgs | OpsiExadataInsightState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OpsiExadataInsightState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["enterpriseManagerBridgeId"] = state ? state.enterpriseManagerBridgeId : undefined;
            resourceInputs["enterpriseManagerEntityDisplayName"] = state ? state.enterpriseManagerEntityDisplayName : undefined;
            resourceInputs["enterpriseManagerEntityIdentifier"] = state ? state.enterpriseManagerEntityIdentifier : undefined;
            resourceInputs["enterpriseManagerEntityName"] = state ? state.enterpriseManagerEntityName : undefined;
            resourceInputs["enterpriseManagerEntityType"] = state ? state.enterpriseManagerEntityType : undefined;
            resourceInputs["enterpriseManagerIdentifier"] = state ? state.enterpriseManagerIdentifier : undefined;
            resourceInputs["entitySource"] = state ? state.entitySource : undefined;
            resourceInputs["exadataDisplayName"] = state ? state.exadataDisplayName : undefined;
            resourceInputs["exadataInfraId"] = state ? state.exadataInfraId : undefined;
            resourceInputs["exadataInfraResourceType"] = state ? state.exadataInfraResourceType : undefined;
            resourceInputs["exadataName"] = state ? state.exadataName : undefined;
            resourceInputs["exadataRackType"] = state ? state.exadataRackType : undefined;
            resourceInputs["exadataShape"] = state ? state.exadataShape : undefined;
            resourceInputs["exadataType"] = state ? state.exadataType : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isAutoSyncEnabled"] = state ? state.isAutoSyncEnabled : undefined;
            resourceInputs["isVirtualizedExadata"] = state ? state.isVirtualizedExadata : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["memberVmClusterDetails"] = state ? state.memberVmClusterDetails : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as OpsiExadataInsightArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.entitySource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entitySource'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["enterpriseManagerBridgeId"] = args ? args.enterpriseManagerBridgeId : undefined;
            resourceInputs["enterpriseManagerEntityIdentifier"] = args ? args.enterpriseManagerEntityIdentifier : undefined;
            resourceInputs["enterpriseManagerIdentifier"] = args ? args.enterpriseManagerIdentifier : undefined;
            resourceInputs["entitySource"] = args ? args.entitySource : undefined;
            resourceInputs["exadataInfraId"] = args ? args.exadataInfraId : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isAutoSyncEnabled"] = args ? args.isAutoSyncEnabled : undefined;
            resourceInputs["memberVmClusterDetails"] = args ? args.memberVmClusterDetails : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["enterpriseManagerEntityDisplayName"] = undefined /*out*/;
            resourceInputs["enterpriseManagerEntityName"] = undefined /*out*/;
            resourceInputs["enterpriseManagerEntityType"] = undefined /*out*/;
            resourceInputs["exadataDisplayName"] = undefined /*out*/;
            resourceInputs["exadataInfraResourceType"] = undefined /*out*/;
            resourceInputs["exadataName"] = undefined /*out*/;
            resourceInputs["exadataRackType"] = undefined /*out*/;
            resourceInputs["exadataShape"] = undefined /*out*/;
            resourceInputs["exadataType"] = undefined /*out*/;
            resourceInputs["isVirtualizedExadata"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OpsiExadataInsight.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OpsiExadataInsight resources.
 */
export interface OpsiExadataInsightState {
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    enterpriseManagerBridgeId?: pulumi.Input<string>;
    enterpriseManagerEntityDisplayName?: pulumi.Input<string>;
    enterpriseManagerEntityIdentifier?: pulumi.Input<string>;
    enterpriseManagerEntityName?: pulumi.Input<string>;
    enterpriseManagerEntityType?: pulumi.Input<string>;
    enterpriseManagerIdentifier?: pulumi.Input<string>;
    entitySource?: pulumi.Input<string>;
    exadataDisplayName?: pulumi.Input<string>;
    exadataInfraId?: pulumi.Input<string>;
    exadataInfraResourceType?: pulumi.Input<string>;
    exadataName?: pulumi.Input<string>;
    exadataRackType?: pulumi.Input<string>;
    exadataShape?: pulumi.Input<string>;
    exadataType?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isAutoSyncEnabled?: pulumi.Input<boolean>;
    isVirtualizedExadata?: pulumi.Input<boolean>;
    lifecycleDetails?: pulumi.Input<string>;
    memberVmClusterDetails?: pulumi.Input<pulumi.Input<inputs.OpsiExadataInsightMemberVmClusterDetail>[]>;
    state?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OpsiExadataInsightTimeouts>;
}

/**
 * The set of arguments for constructing a OpsiExadataInsight resource.
 */
export interface OpsiExadataInsightArgs {
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    enterpriseManagerBridgeId?: pulumi.Input<string>;
    enterpriseManagerEntityIdentifier?: pulumi.Input<string>;
    enterpriseManagerIdentifier?: pulumi.Input<string>;
    entitySource: pulumi.Input<string>;
    exadataInfraId?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isAutoSyncEnabled?: pulumi.Input<boolean>;
    memberVmClusterDetails?: pulumi.Input<pulumi.Input<inputs.OpsiExadataInsightMemberVmClusterDetail>[]>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OpsiExadataInsightTimeouts>;
}
