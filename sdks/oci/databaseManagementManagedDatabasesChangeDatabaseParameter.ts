// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatabaseManagementManagedDatabasesChangeDatabaseParameter extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseManagementManagedDatabasesChangeDatabaseParameter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseManagementManagedDatabasesChangeDatabaseParameterState, opts?: pulumi.CustomResourceOptions): DatabaseManagementManagedDatabasesChangeDatabaseParameter {
        return new DatabaseManagementManagedDatabasesChangeDatabaseParameter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/databaseManagementManagedDatabasesChangeDatabaseParameter:DatabaseManagementManagedDatabasesChangeDatabaseParameter';

    /**
     * Returns true if the given object is an instance of DatabaseManagementManagedDatabasesChangeDatabaseParameter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseManagementManagedDatabasesChangeDatabaseParameter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseManagementManagedDatabasesChangeDatabaseParameter.__pulumiType;
    }

    public readonly credentials!: pulumi.Output<outputs.DatabaseManagementManagedDatabasesChangeDatabaseParameterCredentials | undefined>;
    public readonly databaseCredential!: pulumi.Output<outputs.DatabaseManagementManagedDatabasesChangeDatabaseParameterDatabaseCredential | undefined>;
    public readonly managedDatabaseId!: pulumi.Output<string>;
    public readonly parameters!: pulumi.Output<outputs.DatabaseManagementManagedDatabasesChangeDatabaseParameterParameter[]>;
    public readonly scope!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DatabaseManagementManagedDatabasesChangeDatabaseParameterTimeouts | undefined>;

    /**
     * Create a DatabaseManagementManagedDatabasesChangeDatabaseParameter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseManagementManagedDatabasesChangeDatabaseParameterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseManagementManagedDatabasesChangeDatabaseParameterArgs | DatabaseManagementManagedDatabasesChangeDatabaseParameterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseManagementManagedDatabasesChangeDatabaseParameterState | undefined;
            resourceInputs["credentials"] = state ? state.credentials : undefined;
            resourceInputs["databaseCredential"] = state ? state.databaseCredential : undefined;
            resourceInputs["managedDatabaseId"] = state ? state.managedDatabaseId : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DatabaseManagementManagedDatabasesChangeDatabaseParameterArgs | undefined;
            if ((!args || args.managedDatabaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedDatabaseId'");
            }
            if ((!args || args.parameters === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parameters'");
            }
            if ((!args || args.scope === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scope'");
            }
            resourceInputs["credentials"] = args ? args.credentials : undefined;
            resourceInputs["databaseCredential"] = args ? args.databaseCredential : undefined;
            resourceInputs["managedDatabaseId"] = args ? args.managedDatabaseId : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseManagementManagedDatabasesChangeDatabaseParameter.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatabaseManagementManagedDatabasesChangeDatabaseParameter resources.
 */
export interface DatabaseManagementManagedDatabasesChangeDatabaseParameterState {
    credentials?: pulumi.Input<inputs.DatabaseManagementManagedDatabasesChangeDatabaseParameterCredentials>;
    databaseCredential?: pulumi.Input<inputs.DatabaseManagementManagedDatabasesChangeDatabaseParameterDatabaseCredential>;
    managedDatabaseId?: pulumi.Input<string>;
    parameters?: pulumi.Input<pulumi.Input<inputs.DatabaseManagementManagedDatabasesChangeDatabaseParameterParameter>[]>;
    scope?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatabaseManagementManagedDatabasesChangeDatabaseParameterTimeouts>;
}

/**
 * The set of arguments for constructing a DatabaseManagementManagedDatabasesChangeDatabaseParameter resource.
 */
export interface DatabaseManagementManagedDatabasesChangeDatabaseParameterArgs {
    credentials?: pulumi.Input<inputs.DatabaseManagementManagedDatabasesChangeDatabaseParameterCredentials>;
    databaseCredential?: pulumi.Input<inputs.DatabaseManagementManagedDatabasesChangeDatabaseParameterDatabaseCredential>;
    managedDatabaseId: pulumi.Input<string>;
    parameters: pulumi.Input<pulumi.Input<inputs.DatabaseManagementManagedDatabasesChangeDatabaseParameterParameter>[]>;
    scope: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatabaseManagementManagedDatabasesChangeDatabaseParameterTimeouts>;
}
