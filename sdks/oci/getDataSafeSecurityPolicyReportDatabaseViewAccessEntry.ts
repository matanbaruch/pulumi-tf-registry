// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDataSafeSecurityPolicyReportDatabaseViewAccessEntry(args: GetDataSafeSecurityPolicyReportDatabaseViewAccessEntryArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeSecurityPolicyReportDatabaseViewAccessEntryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeSecurityPolicyReportDatabaseViewAccessEntry:getDataSafeSecurityPolicyReportDatabaseViewAccessEntry", {
        "databaseViewAccessEntryKey": args.databaseViewAccessEntryKey,
        "id": args.id,
        "securityPolicyReportId": args.securityPolicyReportId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeSecurityPolicyReportDatabaseViewAccessEntry.
 */
export interface GetDataSafeSecurityPolicyReportDatabaseViewAccessEntryArgs {
    databaseViewAccessEntryKey: string;
    id?: string;
    securityPolicyReportId: string;
}

/**
 * A collection of values returned by getDataSafeSecurityPolicyReportDatabaseViewAccessEntry.
 */
export interface GetDataSafeSecurityPolicyReportDatabaseViewAccessEntryResult {
    readonly accessType: string;
    readonly columnName: string;
    readonly databaseViewAccessEntryKey: string;
    readonly grantFromRole: string;
    readonly grantee: string;
    readonly grantor: string;
    readonly id: string;
    readonly isAccessConstrainedByDatabaseVault: boolean;
    readonly isAccessConstrainedByRealApplicationSecurity: boolean;
    readonly isAccessConstrainedByRedaction: boolean;
    readonly isAccessConstrainedBySqlFirewall: boolean;
    readonly isAccessConstrainedByVirtualPrivateDatabase: boolean;
    readonly key: string;
    readonly privilege: string;
    readonly privilegeGrantable: string;
    readonly privilegeType: string;
    readonly securityPolicyReportId: string;
    readonly tableName: string;
    readonly tableSchema: string;
    readonly targetId: string;
    readonly viewName: string;
    readonly viewSchema: string;
    readonly viewText: string;
}
export function getDataSafeSecurityPolicyReportDatabaseViewAccessEntryOutput(args: GetDataSafeSecurityPolicyReportDatabaseViewAccessEntryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeSecurityPolicyReportDatabaseViewAccessEntryResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeSecurityPolicyReportDatabaseViewAccessEntry(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeSecurityPolicyReportDatabaseViewAccessEntry.
 */
export interface GetDataSafeSecurityPolicyReportDatabaseViewAccessEntryOutputArgs {
    databaseViewAccessEntryKey: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    securityPolicyReportId: pulumi.Input<string>;
}
