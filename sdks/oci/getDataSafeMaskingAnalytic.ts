// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeMaskingAnalytic(args: GetDataSafeMaskingAnalyticArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeMaskingAnalyticResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeMaskingAnalytic:getDataSafeMaskingAnalytic", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "groupBy": args.groupBy,
        "id": args.id,
        "maskingPolicyId": args.maskingPolicyId,
        "targetId": args.targetId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeMaskingAnalytic.
 */
export interface GetDataSafeMaskingAnalyticArgs {
    compartmentId: string;
    compartmentIdInSubtree?: boolean;
    groupBy?: string;
    id?: string;
    maskingPolicyId?: string;
    targetId?: string;
}

/**
 * A collection of values returned by getDataSafeMaskingAnalytic.
 */
export interface GetDataSafeMaskingAnalyticResult {
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly groupBy?: string;
    readonly id: string;
    readonly items: outputs.GetDataSafeMaskingAnalyticItem[];
    readonly maskingPolicyId?: string;
    readonly targetId?: string;
}
export function getDataSafeMaskingAnalyticOutput(args: GetDataSafeMaskingAnalyticOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeMaskingAnalyticResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeMaskingAnalytic(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeMaskingAnalytic.
 */
export interface GetDataSafeMaskingAnalyticOutputArgs {
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    groupBy?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    maskingPolicyId?: pulumi.Input<string>;
    targetId?: pulumi.Input<string>;
}
