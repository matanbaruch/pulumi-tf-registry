// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogAnalyticsNamespaceRulesSummary(args: GetLogAnalyticsNamespaceRulesSummaryArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsNamespaceRulesSummaryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLogAnalyticsNamespaceRulesSummary:getLogAnalyticsNamespaceRulesSummary", {
        "compartmentId": args.compartmentId,
        "id": args.id,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespaceRulesSummary.
 */
export interface GetLogAnalyticsNamespaceRulesSummaryArgs {
    compartmentId: string;
    id?: string;
    namespace: string;
}

/**
 * A collection of values returned by getLogAnalyticsNamespaceRulesSummary.
 */
export interface GetLogAnalyticsNamespaceRulesSummaryResult {
    readonly compartmentId: string;
    readonly id: string;
    readonly ingestTimeRulesCount: number;
    readonly namespace: string;
    readonly savedSearchRulesCount: number;
    readonly totalCount: number;
}
export function getLogAnalyticsNamespaceRulesSummaryOutput(args: GetLogAnalyticsNamespaceRulesSummaryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsNamespaceRulesSummaryResult> {
    return pulumi.output(args).apply((a: any) => getLogAnalyticsNamespaceRulesSummary(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespaceRulesSummary.
 */
export interface GetLogAnalyticsNamespaceRulesSummaryOutputArgs {
    compartmentId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
}
