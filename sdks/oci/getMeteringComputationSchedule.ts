// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMeteringComputationSchedule(args: GetMeteringComputationScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetMeteringComputationScheduleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMeteringComputationSchedule:getMeteringComputationSchedule", {
        "scheduleId": args.scheduleId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMeteringComputationSchedule.
 */
export interface GetMeteringComputationScheduleArgs {
    scheduleId: string;
}

/**
 * A collection of values returned by getMeteringComputationSchedule.
 */
export interface GetMeteringComputationScheduleResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly name: string;
    readonly outputFileFormat: string;
    readonly queryProperties: outputs.GetMeteringComputationScheduleQueryProperty[];
    readonly resultLocations: outputs.GetMeteringComputationScheduleResultLocation[];
    readonly savedReportId: string;
    readonly scheduleId: string;
    readonly scheduleRecurrences: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeNextRun: string;
    readonly timeScheduled: string;
}
export function getMeteringComputationScheduleOutput(args: GetMeteringComputationScheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMeteringComputationScheduleResult> {
    return pulumi.output(args).apply((a: any) => getMeteringComputationSchedule(a, opts))
}

/**
 * A collection of arguments for invoking getMeteringComputationSchedule.
 */
export interface GetMeteringComputationScheduleOutputArgs {
    scheduleId: pulumi.Input<string>;
}
