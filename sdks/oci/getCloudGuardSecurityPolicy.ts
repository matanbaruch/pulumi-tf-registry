// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudGuardSecurityPolicy(args: GetCloudGuardSecurityPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudGuardSecurityPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCloudGuardSecurityPolicy:getCloudGuardSecurityPolicy", {
        "id": args.id,
        "securityPolicyId": args.securityPolicyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudGuardSecurityPolicy.
 */
export interface GetCloudGuardSecurityPolicyArgs {
    id?: string;
    securityPolicyId: string;
}

/**
 * A collection of values returned by getCloudGuardSecurityPolicy.
 */
export interface GetCloudGuardSecurityPolicyResult {
    readonly category: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly friendlyName: string;
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly owner: string;
    readonly securityPolicyId: string;
    readonly services: string[];
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getCloudGuardSecurityPolicyOutput(args: GetCloudGuardSecurityPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudGuardSecurityPolicyResult> {
    return pulumi.output(args).apply((a: any) => getCloudGuardSecurityPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getCloudGuardSecurityPolicy.
 */
export interface GetCloudGuardSecurityPolicyOutputArgs {
    id?: pulumi.Input<string>;
    securityPolicyId: pulumi.Input<string>;
}
