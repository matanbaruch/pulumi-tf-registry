// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOnsSubscription(args: GetOnsSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetOnsSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOnsSubscription:getOnsSubscription", {
        "subscriptionId": args.subscriptionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOnsSubscription.
 */
export interface GetOnsSubscriptionArgs {
    subscriptionId: string;
}

/**
 * A collection of values returned by getOnsSubscription.
 */
export interface GetOnsSubscriptionResult {
    readonly compartmentId: string;
    readonly createdTime: string;
    readonly definedTags: {[key: string]: string};
    readonly deliveryPolicy: string;
    readonly endpoint: string;
    readonly etag: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly protocol: string;
    readonly state: string;
    readonly subscriptionId: string;
    readonly topicId: string;
}
export function getOnsSubscriptionOutput(args: GetOnsSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOnsSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getOnsSubscription(a, opts))
}

/**
 * A collection of arguments for invoking getOnsSubscription.
 */
export interface GetOnsSubscriptionOutputArgs {
    subscriptionId: pulumi.Input<string>;
}
