// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLoadBalancerHealth(args: GetLoadBalancerHealthArgs, opts?: pulumi.InvokeOptions): Promise<GetLoadBalancerHealthResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLoadBalancerHealth:getLoadBalancerHealth", {
        "id": args.id,
        "loadBalancerId": args.loadBalancerId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLoadBalancerHealth.
 */
export interface GetLoadBalancerHealthArgs {
    id?: string;
    loadBalancerId: string;
}

/**
 * A collection of values returned by getLoadBalancerHealth.
 */
export interface GetLoadBalancerHealthResult {
    readonly criticalStateBackendSetNames: string[];
    readonly id: string;
    readonly loadBalancerId: string;
    readonly status: string;
    readonly totalBackendSetCount: number;
    readonly unknownStateBackendSetNames: string[];
    readonly warningStateBackendSetNames: string[];
}
export function getLoadBalancerHealthOutput(args: GetLoadBalancerHealthOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoadBalancerHealthResult> {
    return pulumi.output(args).apply((a: any) => getLoadBalancerHealth(a, opts))
}

/**
 * A collection of arguments for invoking getLoadBalancerHealth.
 */
export interface GetLoadBalancerHealthOutputArgs {
    id?: pulumi.Input<string>;
    loadBalancerId: pulumi.Input<string>;
}
