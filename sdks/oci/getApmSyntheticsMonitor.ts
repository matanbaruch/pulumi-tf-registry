// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApmSyntheticsMonitor(args: GetApmSyntheticsMonitorArgs, opts?: pulumi.InvokeOptions): Promise<GetApmSyntheticsMonitorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getApmSyntheticsMonitor:getApmSyntheticsMonitor", {
        "apmDomainId": args.apmDomainId,
        "monitorId": args.monitorId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApmSyntheticsMonitor.
 */
export interface GetApmSyntheticsMonitorArgs {
    apmDomainId: string;
    monitorId: string;
}

/**
 * A collection of values returned by getApmSyntheticsMonitor.
 */
export interface GetApmSyntheticsMonitorResult {
    readonly apmDomainId: string;
    readonly availabilityConfigurations: outputs.GetApmSyntheticsMonitorAvailabilityConfiguration[];
    readonly batchIntervalInSeconds: number;
    readonly configurations: outputs.GetApmSyntheticsMonitorConfiguration[];
    readonly createdBy: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isIpv6: boolean;
    readonly isRunNow: boolean;
    readonly isRunOnce: boolean;
    readonly lastUpdatedBy: string;
    readonly maintenanceWindowSchedules: outputs.GetApmSyntheticsMonitorMaintenanceWindowSchedule[];
    readonly monitorId: string;
    readonly monitorType: string;
    readonly repeatIntervalInSeconds: number;
    readonly schedulingPolicy: string;
    readonly scriptId: string;
    readonly scriptName: string;
    readonly scriptParameters: outputs.GetApmSyntheticsMonitorScriptParameter[];
    readonly status: string;
    readonly target: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly timeoutInSeconds: number;
    readonly vantagePointCount: number;
    readonly vantagePoints: outputs.GetApmSyntheticsMonitorVantagePoint[];
}
export function getApmSyntheticsMonitorOutput(args: GetApmSyntheticsMonitorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApmSyntheticsMonitorResult> {
    return pulumi.output(args).apply((a: any) => getApmSyntheticsMonitor(a, opts))
}

/**
 * A collection of arguments for invoking getApmSyntheticsMonitor.
 */
export interface GetApmSyntheticsMonitorOutputArgs {
    apmDomainId: pulumi.Input<string>;
    monitorId: pulumi.Input<string>;
}
