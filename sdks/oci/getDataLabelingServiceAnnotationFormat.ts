// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataLabelingServiceAnnotationFormat(args: GetDataLabelingServiceAnnotationFormatArgs, opts?: pulumi.InvokeOptions): Promise<GetDataLabelingServiceAnnotationFormatResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataLabelingServiceAnnotationFormat:getDataLabelingServiceAnnotationFormat", {
        "compartmentId": args.compartmentId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataLabelingServiceAnnotationFormat.
 */
export interface GetDataLabelingServiceAnnotationFormatArgs {
    compartmentId: string;
    id?: string;
}

/**
 * A collection of values returned by getDataLabelingServiceAnnotationFormat.
 */
export interface GetDataLabelingServiceAnnotationFormatResult {
    readonly compartmentId: string;
    readonly id: string;
    readonly items: outputs.GetDataLabelingServiceAnnotationFormatItem[];
}
export function getDataLabelingServiceAnnotationFormatOutput(args: GetDataLabelingServiceAnnotationFormatOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataLabelingServiceAnnotationFormatResult> {
    return pulumi.output(args).apply((a: any) => getDataLabelingServiceAnnotationFormat(a, opts))
}

/**
 * A collection of arguments for invoking getDataLabelingServiceAnnotationFormat.
 */
export interface GetDataLabelingServiceAnnotationFormatOutputArgs {
    compartmentId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
