// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class StackMonitoringBaselineableMetric extends pulumi.CustomResource {
    /**
     * Get an existing StackMonitoringBaselineableMetric resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StackMonitoringBaselineableMetricState, opts?: pulumi.CustomResourceOptions): StackMonitoringBaselineableMetric {
        return new StackMonitoringBaselineableMetric(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/stackMonitoringBaselineableMetric:StackMonitoringBaselineableMetric';

    /**
     * Returns true if the given object is an instance of StackMonitoringBaselineableMetric.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StackMonitoringBaselineableMetric {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StackMonitoringBaselineableMetric.__pulumiType;
    }

    public readonly column!: pulumi.Output<string>;
    public readonly compartmentId!: pulumi.Output<string>;
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    public /*out*/ readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly isOutOfBox!: pulumi.Output<boolean>;
    public /*out*/ readonly lastUpdatedBy!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly namespace!: pulumi.Output<string>;
    public readonly resourceGroup!: pulumi.Output<string>;
    public readonly resourceType!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly tenancyId!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeLastUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.StackMonitoringBaselineableMetricTimeouts | undefined>;

    /**
     * Create a StackMonitoringBaselineableMetric resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StackMonitoringBaselineableMetricArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StackMonitoringBaselineableMetricArgs | StackMonitoringBaselineableMetricState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StackMonitoringBaselineableMetricState | undefined;
            resourceInputs["column"] = state ? state.column : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isOutOfBox"] = state ? state.isOutOfBox : undefined;
            resourceInputs["lastUpdatedBy"] = state ? state.lastUpdatedBy : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["resourceGroup"] = state ? state.resourceGroup : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["tenancyId"] = state ? state.tenancyId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeLastUpdated"] = state ? state.timeLastUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as StackMonitoringBaselineableMetricArgs | undefined;
            if ((!args || args.column === undefined) && !opts.urn) {
                throw new Error("Missing required property 'column'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["column"] = args ? args.column : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["resourceGroup"] = args ? args.resourceGroup : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["definedTags"] = undefined /*out*/;
            resourceInputs["freeformTags"] = undefined /*out*/;
            resourceInputs["isOutOfBox"] = undefined /*out*/;
            resourceInputs["lastUpdatedBy"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["tenancyId"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeLastUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StackMonitoringBaselineableMetric.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StackMonitoringBaselineableMetric resources.
 */
export interface StackMonitoringBaselineableMetricState {
    column?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isOutOfBox?: pulumi.Input<boolean>;
    lastUpdatedBy?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenancyId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeLastUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StackMonitoringBaselineableMetricTimeouts>;
}

/**
 * The set of arguments for constructing a StackMonitoringBaselineableMetric resource.
 */
export interface StackMonitoringBaselineableMetricArgs {
    column: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StackMonitoringBaselineableMetricTimeouts>;
}
