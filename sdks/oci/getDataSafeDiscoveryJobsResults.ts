// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeDiscoveryJobsResults(args: GetDataSafeDiscoveryJobsResultsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeDiscoveryJobsResultsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeDiscoveryJobsResults:getDataSafeDiscoveryJobsResults", {
        "columnNames": args.columnNames,
        "discoveryJobId": args.discoveryJobId,
        "discoveryType": args.discoveryType,
        "filters": args.filters,
        "id": args.id,
        "isResultApplied": args.isResultApplied,
        "objects": args.objects,
        "plannedAction": args.plannedAction,
        "schemaNames": args.schemaNames,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeDiscoveryJobsResults.
 */
export interface GetDataSafeDiscoveryJobsResultsArgs {
    columnNames?: string[];
    discoveryJobId: string;
    discoveryType?: string;
    filters?: inputs.GetDataSafeDiscoveryJobsResultsFilter[];
    id?: string;
    isResultApplied?: boolean;
    objects?: string[];
    plannedAction?: string;
    schemaNames?: string[];
}

/**
 * A collection of values returned by getDataSafeDiscoveryJobsResults.
 */
export interface GetDataSafeDiscoveryJobsResultsResult {
    readonly columnNames?: string[];
    readonly discoveryJobId: string;
    readonly discoveryJobResultCollections: outputs.GetDataSafeDiscoveryJobsResultsDiscoveryJobResultCollection[];
    readonly discoveryType?: string;
    readonly filters?: outputs.GetDataSafeDiscoveryJobsResultsFilter[];
    readonly id: string;
    readonly isResultApplied?: boolean;
    readonly objects?: string[];
    readonly plannedAction?: string;
    readonly schemaNames?: string[];
}
export function getDataSafeDiscoveryJobsResultsOutput(args: GetDataSafeDiscoveryJobsResultsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeDiscoveryJobsResultsResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeDiscoveryJobsResults(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeDiscoveryJobsResults.
 */
export interface GetDataSafeDiscoveryJobsResultsOutputArgs {
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    discoveryJobId: pulumi.Input<string>;
    discoveryType?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataSafeDiscoveryJobsResultsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    isResultApplied?: pulumi.Input<boolean>;
    objects?: pulumi.Input<pulumi.Input<string>[]>;
    plannedAction?: pulumi.Input<string>;
    schemaNames?: pulumi.Input<pulumi.Input<string>[]>;
}
