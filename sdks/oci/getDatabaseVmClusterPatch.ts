// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatabaseVmClusterPatch(args: GetDatabaseVmClusterPatchArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseVmClusterPatchResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseVmClusterPatch:getDatabaseVmClusterPatch", {
        "id": args.id,
        "patchId": args.patchId,
        "vmClusterId": args.vmClusterId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseVmClusterPatch.
 */
export interface GetDatabaseVmClusterPatchArgs {
    id?: string;
    patchId: string;
    vmClusterId: string;
}

/**
 * A collection of values returned by getDatabaseVmClusterPatch.
 */
export interface GetDatabaseVmClusterPatchResult {
    readonly availableActions: string[];
    readonly description: string;
    readonly id: string;
    readonly lastAction: string;
    readonly lifecycleDetails: string;
    readonly patchId: string;
    readonly state: string;
    readonly timeReleased: string;
    readonly version: string;
    readonly vmClusterId: string;
}
export function getDatabaseVmClusterPatchOutput(args: GetDatabaseVmClusterPatchOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseVmClusterPatchResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseVmClusterPatch(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseVmClusterPatch.
 */
export interface GetDatabaseVmClusterPatchOutputArgs {
    id?: pulumi.Input<string>;
    patchId: pulumi.Input<string>;
    vmClusterId: pulumi.Input<string>;
}
