// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataintegrationWorkspaceImportRequest(args: GetDataintegrationWorkspaceImportRequestArgs, opts?: pulumi.InvokeOptions): Promise<GetDataintegrationWorkspaceImportRequestResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataintegrationWorkspaceImportRequest:getDataintegrationWorkspaceImportRequest", {
        "importRequestKey": args.importRequestKey,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataintegrationWorkspaceImportRequest.
 */
export interface GetDataintegrationWorkspaceImportRequestArgs {
    importRequestKey: string;
    workspaceId: string;
}

/**
 * A collection of values returned by getDataintegrationWorkspaceImportRequest.
 */
export interface GetDataintegrationWorkspaceImportRequestResult {
    readonly areDataAssetReferencesIncluded: boolean;
    readonly bucket: string;
    readonly createdBy: string;
    readonly errorMessages: {[key: string]: string};
    readonly fileName: string;
    readonly id: string;
    readonly importConflictResolutions: outputs.GetDataintegrationWorkspaceImportRequestImportConflictResolution[];
    readonly importRequestKey: string;
    readonly importedObjects: outputs.GetDataintegrationWorkspaceImportRequestImportedObject[];
    readonly key: string;
    readonly name: string;
    readonly objectKeyForImport: string;
    readonly objectStorageRegion: string;
    readonly objectStorageTenancyId: string;
    readonly status: string;
    readonly timeEndedInMillis: string;
    readonly timeStartedInMillis: string;
    readonly totalImportedObjectCount: number;
    readonly workspaceId: string;
}
export function getDataintegrationWorkspaceImportRequestOutput(args: GetDataintegrationWorkspaceImportRequestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataintegrationWorkspaceImportRequestResult> {
    return pulumi.output(args).apply((a: any) => getDataintegrationWorkspaceImportRequest(a, opts))
}

/**
 * A collection of arguments for invoking getDataintegrationWorkspaceImportRequest.
 */
export interface GetDataintegrationWorkspaceImportRequestOutputArgs {
    importRequestKey: pulumi.Input<string>;
    workspaceId: pulumi.Input<string>;
}
