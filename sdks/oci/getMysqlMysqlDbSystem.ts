// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMysqlMysqlDbSystem(args: GetMysqlMysqlDbSystemArgs, opts?: pulumi.InvokeOptions): Promise<GetMysqlMysqlDbSystemResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMysqlMysqlDbSystem:getMysqlMysqlDbSystem", {
        "dbSystemId": args.dbSystemId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMysqlMysqlDbSystem.
 */
export interface GetMysqlMysqlDbSystemArgs {
    dbSystemId: string;
}

/**
 * A collection of values returned by getMysqlMysqlDbSystem.
 */
export interface GetMysqlMysqlDbSystemResult {
    readonly adminPassword: string;
    readonly adminUsername: string;
    readonly availabilityDomain: string;
    readonly backupPolicies: outputs.GetMysqlMysqlDbSystemBackupPolicy[];
    readonly channels: outputs.GetMysqlMysqlDbSystemChannel[];
    readonly compartmentId: string;
    readonly configurationId: string;
    readonly crashRecovery: string;
    readonly currentPlacements: outputs.GetMysqlMysqlDbSystemCurrentPlacement[];
    readonly customerContacts: outputs.GetMysqlMysqlDbSystemCustomerContact[];
    readonly dataStorageSizeInGb: number;
    readonly dataStorages: outputs.GetMysqlMysqlDbSystemDataStorage[];
    readonly databaseManagement: string;
    readonly dbSystemId: string;
    readonly definedTags: {[key: string]: string};
    readonly deletionPolicies: outputs.GetMysqlMysqlDbSystemDeletionPolicy[];
    readonly description: string;
    readonly displayName: string;
    readonly endpoints: outputs.GetMysqlMysqlDbSystemEndpoint[];
    readonly faultDomain: string;
    readonly freeformTags: {[key: string]: string};
    readonly heatWaveClusters: outputs.GetMysqlMysqlDbSystemHeatWaveCluster[];
    readonly hostnameLabel: string;
    readonly id: string;
    readonly ipAddress: string;
    readonly isHeatWaveClusterAttached: boolean;
    readonly isHighlyAvailable: boolean;
    readonly lifecycleDetails: string;
    readonly maintenances: outputs.GetMysqlMysqlDbSystemMaintenance[];
    readonly mysqlVersion: string;
    readonly pointInTimeRecoveryDetails: outputs.GetMysqlMysqlDbSystemPointInTimeRecoveryDetail[];
    readonly port: number;
    readonly portX: number;
    readonly secureConnections: outputs.GetMysqlMysqlDbSystemSecureConnection[];
    readonly shapeName: string;
    readonly shutdownType: string;
    readonly sources: outputs.GetMysqlMysqlDbSystemSource[];
    readonly state: string;
    readonly subnetId: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getMysqlMysqlDbSystemOutput(args: GetMysqlMysqlDbSystemOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMysqlMysqlDbSystemResult> {
    return pulumi.output(args).apply((a: any) => getMysqlMysqlDbSystem(a, opts))
}

/**
 * A collection of arguments for invoking getMysqlMysqlDbSystem.
 */
export interface GetMysqlMysqlDbSystemOutputArgs {
    dbSystemId: pulumi.Input<string>;
}
