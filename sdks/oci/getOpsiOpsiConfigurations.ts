// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOpsiOpsiConfigurations(args: GetOpsiOpsiConfigurationsArgs, opts?: pulumi.InvokeOptions): Promise<GetOpsiOpsiConfigurationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOpsiOpsiConfigurations:getOpsiOpsiConfigurations", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "opsiConfigTypes": args.opsiConfigTypes,
        "states": args.states,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpsiOpsiConfigurations.
 */
export interface GetOpsiOpsiConfigurationsArgs {
    compartmentId: string;
    displayName?: string;
    filters?: inputs.GetOpsiOpsiConfigurationsFilter[];
    id?: string;
    opsiConfigTypes?: string[];
    states?: string[];
}

/**
 * A collection of values returned by getOpsiOpsiConfigurations.
 */
export interface GetOpsiOpsiConfigurationsResult {
    readonly compartmentId: string;
    readonly displayName?: string;
    readonly filters?: outputs.GetOpsiOpsiConfigurationsFilter[];
    readonly id: string;
    readonly opsiConfigTypes?: string[];
    readonly opsiConfigurationsCollections: outputs.GetOpsiOpsiConfigurationsOpsiConfigurationsCollection[];
    readonly states?: string[];
}
export function getOpsiOpsiConfigurationsOutput(args: GetOpsiOpsiConfigurationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpsiOpsiConfigurationsResult> {
    return pulumi.output(args).apply((a: any) => getOpsiOpsiConfigurations(a, opts))
}

/**
 * A collection of arguments for invoking getOpsiOpsiConfigurations.
 */
export interface GetOpsiOpsiConfigurationsOutputArgs {
    compartmentId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOpsiOpsiConfigurationsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    opsiConfigTypes?: pulumi.Input<pulumi.Input<string>[]>;
    states?: pulumi.Input<pulumi.Input<string>[]>;
}
