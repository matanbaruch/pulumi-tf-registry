// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDevopsBuildPipeline(args: GetDevopsBuildPipelineArgs, opts?: pulumi.InvokeOptions): Promise<GetDevopsBuildPipelineResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDevopsBuildPipeline:getDevopsBuildPipeline", {
        "buildPipelineId": args.buildPipelineId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDevopsBuildPipeline.
 */
export interface GetDevopsBuildPipelineArgs {
    buildPipelineId: string;
}

/**
 * A collection of values returned by getDevopsBuildPipeline.
 */
export interface GetDevopsBuildPipelineResult {
    readonly buildPipelineId: string;
    readonly buildPipelineParameters: outputs.GetDevopsBuildPipelineBuildPipelineParameter[];
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly projectId: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getDevopsBuildPipelineOutput(args: GetDevopsBuildPipelineOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDevopsBuildPipelineResult> {
    return pulumi.output(args).apply((a: any) => getDevopsBuildPipeline(a, opts))
}

/**
 * A collection of arguments for invoking getDevopsBuildPipeline.
 */
export interface GetDevopsBuildPipelineOutputArgs {
    buildPipelineId: pulumi.Input<string>;
}
