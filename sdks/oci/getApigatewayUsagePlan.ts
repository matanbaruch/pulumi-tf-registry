// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApigatewayUsagePlan(args: GetApigatewayUsagePlanArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayUsagePlanResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getApigatewayUsagePlan:getApigatewayUsagePlan", {
        "usagePlanId": args.usagePlanId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayUsagePlan.
 */
export interface GetApigatewayUsagePlanArgs {
    usagePlanId: string;
}

/**
 * A collection of values returned by getApigatewayUsagePlan.
 */
export interface GetApigatewayUsagePlanResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly entitlements: outputs.GetApigatewayUsagePlanEntitlement[];
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly usagePlanId: string;
}
export function getApigatewayUsagePlanOutput(args: GetApigatewayUsagePlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayUsagePlanResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayUsagePlan(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayUsagePlan.
 */
export interface GetApigatewayUsagePlanOutputArgs {
    usagePlanId: pulumi.Input<string>;
}
