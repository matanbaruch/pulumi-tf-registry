// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GoldenGateConnectionAssignment extends pulumi.CustomResource {
    /**
     * Get an existing GoldenGateConnectionAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GoldenGateConnectionAssignmentState, opts?: pulumi.CustomResourceOptions): GoldenGateConnectionAssignment {
        return new GoldenGateConnectionAssignment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/goldenGateConnectionAssignment:GoldenGateConnectionAssignment';

    /**
     * Returns true if the given object is an instance of GoldenGateConnectionAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GoldenGateConnectionAssignment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GoldenGateConnectionAssignment.__pulumiType;
    }

    public /*out*/ readonly aliasName!: pulumi.Output<string>;
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    public readonly connectionId!: pulumi.Output<string>;
    public readonly deploymentId!: pulumi.Output<string>;
    public readonly isLockOverride!: pulumi.Output<boolean>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.GoldenGateConnectionAssignmentTimeouts | undefined>;

    /**
     * Create a GoldenGateConnectionAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GoldenGateConnectionAssignmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GoldenGateConnectionAssignmentArgs | GoldenGateConnectionAssignmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GoldenGateConnectionAssignmentState | undefined;
            resourceInputs["aliasName"] = state ? state.aliasName : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["connectionId"] = state ? state.connectionId : undefined;
            resourceInputs["deploymentId"] = state ? state.deploymentId : undefined;
            resourceInputs["isLockOverride"] = state ? state.isLockOverride : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as GoldenGateConnectionAssignmentArgs | undefined;
            if ((!args || args.connectionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionId'");
            }
            if ((!args || args.deploymentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deploymentId'");
            }
            resourceInputs["connectionId"] = args ? args.connectionId : undefined;
            resourceInputs["deploymentId"] = args ? args.deploymentId : undefined;
            resourceInputs["isLockOverride"] = args ? args.isLockOverride : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["aliasName"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GoldenGateConnectionAssignment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GoldenGateConnectionAssignment resources.
 */
export interface GoldenGateConnectionAssignmentState {
    aliasName?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    connectionId?: pulumi.Input<string>;
    deploymentId?: pulumi.Input<string>;
    isLockOverride?: pulumi.Input<boolean>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GoldenGateConnectionAssignmentTimeouts>;
}

/**
 * The set of arguments for constructing a GoldenGateConnectionAssignment resource.
 */
export interface GoldenGateConnectionAssignmentArgs {
    connectionId: pulumi.Input<string>;
    deploymentId: pulumi.Input<string>;
    isLockOverride?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.GoldenGateConnectionAssignmentTimeouts>;
}
