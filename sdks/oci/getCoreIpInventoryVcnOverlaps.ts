// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreIpInventoryVcnOverlaps(args: GetCoreIpInventoryVcnOverlapsArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreIpInventoryVcnOverlapsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreIpInventoryVcnOverlaps:getCoreIpInventoryVcnOverlaps", {
        "compartmentLists": args.compartmentLists,
        "filters": args.filters,
        "id": args.id,
        "regionLists": args.regionLists,
        "vcnId": args.vcnId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreIpInventoryVcnOverlaps.
 */
export interface GetCoreIpInventoryVcnOverlapsArgs {
    compartmentLists: string[];
    filters?: inputs.GetCoreIpInventoryVcnOverlapsFilter[];
    id?: string;
    regionLists: string[];
    vcnId: string;
}

/**
 * A collection of values returned by getCoreIpInventoryVcnOverlaps.
 */
export interface GetCoreIpInventoryVcnOverlapsResult {
    readonly compartmentLists: string[];
    readonly filters?: outputs.GetCoreIpInventoryVcnOverlapsFilter[];
    readonly id: string;
    readonly ipInventoryVcnOverlapSummaries: outputs.GetCoreIpInventoryVcnOverlapsIpInventoryVcnOverlapSummary[];
    readonly lastUpdatedTimestamp: string;
    readonly message: string;
    readonly overlapCount: number;
    readonly regionLists: string[];
    readonly vcnId: string;
}
export function getCoreIpInventoryVcnOverlapsOutput(args: GetCoreIpInventoryVcnOverlapsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreIpInventoryVcnOverlapsResult> {
    return pulumi.output(args).apply((a: any) => getCoreIpInventoryVcnOverlaps(a, opts))
}

/**
 * A collection of arguments for invoking getCoreIpInventoryVcnOverlaps.
 */
export interface GetCoreIpInventoryVcnOverlapsOutputArgs {
    compartmentLists: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetCoreIpInventoryVcnOverlapsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    regionLists: pulumi.Input<pulumi.Input<string>[]>;
    vcnId: pulumi.Input<string>;
}
