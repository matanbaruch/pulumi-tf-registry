// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDisasterRecoveryDrPlanExecution(args: GetDisasterRecoveryDrPlanExecutionArgs, opts?: pulumi.InvokeOptions): Promise<GetDisasterRecoveryDrPlanExecutionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDisasterRecoveryDrPlanExecution:getDisasterRecoveryDrPlanExecution", {
        "drPlanExecutionId": args.drPlanExecutionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDisasterRecoveryDrPlanExecution.
 */
export interface GetDisasterRecoveryDrPlanExecutionArgs {
    drPlanExecutionId: string;
}

/**
 * A collection of values returned by getDisasterRecoveryDrPlanExecution.
 */
export interface GetDisasterRecoveryDrPlanExecutionResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly drPlanExecutionId: string;
    readonly drProtectionGroupId: string;
    readonly executionDurationInSec: number;
    readonly executionOptions: outputs.GetDisasterRecoveryDrPlanExecutionExecutionOption[];
    readonly freeformTags: {[key: string]: string};
    readonly groupExecutions: outputs.GetDisasterRecoveryDrPlanExecutionGroupExecution[];
    readonly id: string;
    readonly lifeCycleDetails: string;
    readonly logLocations: outputs.GetDisasterRecoveryDrPlanExecutionLogLocation[];
    readonly peerDrProtectionGroupId: string;
    readonly peerRegion: string;
    readonly planExecutionType: string;
    readonly planId: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeEnded: string;
    readonly timeStarted: string;
    readonly timeUpdated: string;
}
export function getDisasterRecoveryDrPlanExecutionOutput(args: GetDisasterRecoveryDrPlanExecutionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDisasterRecoveryDrPlanExecutionResult> {
    return pulumi.output(args).apply((a: any) => getDisasterRecoveryDrPlanExecution(a, opts))
}

/**
 * A collection of arguments for invoking getDisasterRecoveryDrPlanExecution.
 */
export interface GetDisasterRecoveryDrPlanExecutionOutputArgs {
    drPlanExecutionId: pulumi.Input<string>;
}
