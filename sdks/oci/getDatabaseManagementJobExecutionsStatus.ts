// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementJobExecutionsStatus(args: GetDatabaseManagementJobExecutionsStatusArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementJobExecutionsStatusResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementJobExecutionsStatus:getDatabaseManagementJobExecutionsStatus", {
        "compartmentId": args.compartmentId,
        "endTime": args.endTime,
        "id": args.id,
        "managedDatabaseGroupId": args.managedDatabaseGroupId,
        "managedDatabaseId": args.managedDatabaseId,
        "name": args.name,
        "startTime": args.startTime,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementJobExecutionsStatus.
 */
export interface GetDatabaseManagementJobExecutionsStatusArgs {
    compartmentId: string;
    endTime: string;
    id?: string;
    managedDatabaseGroupId?: string;
    managedDatabaseId?: string;
    name?: string;
    startTime: string;
}

/**
 * A collection of values returned by getDatabaseManagementJobExecutionsStatus.
 */
export interface GetDatabaseManagementJobExecutionsStatusResult {
    readonly compartmentId: string;
    readonly endTime: string;
    readonly id?: string;
    readonly items: outputs.GetDatabaseManagementJobExecutionsStatusItem[];
    readonly managedDatabaseGroupId?: string;
    readonly managedDatabaseId?: string;
    readonly name?: string;
    readonly startTime: string;
}
export function getDatabaseManagementJobExecutionsStatusOutput(args: GetDatabaseManagementJobExecutionsStatusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementJobExecutionsStatusResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementJobExecutionsStatus(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementJobExecutionsStatus.
 */
export interface GetDatabaseManagementJobExecutionsStatusOutputArgs {
    compartmentId: pulumi.Input<string>;
    endTime: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    managedDatabaseGroupId?: pulumi.Input<string>;
    managedDatabaseId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
}
