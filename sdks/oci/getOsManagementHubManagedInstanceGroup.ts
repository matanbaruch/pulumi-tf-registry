// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsManagementHubManagedInstanceGroup(args: GetOsManagementHubManagedInstanceGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetOsManagementHubManagedInstanceGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsManagementHubManagedInstanceGroup:getOsManagementHubManagedInstanceGroup", {
        "managedInstanceGroupId": args.managedInstanceGroupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsManagementHubManagedInstanceGroup.
 */
export interface GetOsManagementHubManagedInstanceGroupArgs {
    managedInstanceGroupId: string;
}

/**
 * A collection of values returned by getOsManagementHubManagedInstanceGroup.
 */
export interface GetOsManagementHubManagedInstanceGroupResult {
    readonly archType: string;
    readonly autonomousSettings: outputs.GetOsManagementHubManagedInstanceGroupAutonomousSetting[];
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isManagedByAutonomousLinux: boolean;
    readonly location: string;
    readonly managedInstanceCount: number;
    readonly managedInstanceGroupId: string;
    readonly managedInstanceIds: string[];
    readonly notificationTopicId: string;
    readonly osFamily: string;
    readonly pendingJobCount: number;
    readonly softwareSourceIds: string[];
    readonly softwareSources: outputs.GetOsManagementHubManagedInstanceGroupSoftwareSource[];
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeModified: string;
    readonly vendorName: string;
}
export function getOsManagementHubManagedInstanceGroupOutput(args: GetOsManagementHubManagedInstanceGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsManagementHubManagedInstanceGroupResult> {
    return pulumi.output(args).apply((a: any) => getOsManagementHubManagedInstanceGroup(a, opts))
}

/**
 * A collection of arguments for invoking getOsManagementHubManagedInstanceGroup.
 */
export interface GetOsManagementHubManagedInstanceGroupOutputArgs {
    managedInstanceGroupId: pulumi.Input<string>;
}
