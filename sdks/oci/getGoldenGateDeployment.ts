// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGoldenGateDeployment(args: GetGoldenGateDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetGoldenGateDeploymentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getGoldenGateDeployment:getGoldenGateDeployment", {
        "deploymentId": args.deploymentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGoldenGateDeployment.
 */
export interface GetGoldenGateDeploymentArgs {
    deploymentId: string;
}

/**
 * A collection of values returned by getGoldenGateDeployment.
 */
export interface GetGoldenGateDeploymentResult {
    readonly compartmentId: string;
    readonly cpuCoreCount: number;
    readonly definedTags: {[key: string]: string};
    readonly deploymentBackupId: string;
    readonly deploymentDiagnosticDatas: outputs.GetGoldenGateDeploymentDeploymentDiagnosticData[];
    readonly deploymentId: string;
    readonly deploymentType: string;
    readonly deploymentUrl: string;
    readonly description: string;
    readonly displayName: string;
    readonly fqdn: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly ingressIps: outputs.GetGoldenGateDeploymentIngressIp[];
    readonly isAutoScalingEnabled: boolean;
    readonly isHealthy: boolean;
    readonly isLatestVersion: boolean;
    readonly isLockOverride: boolean;
    readonly isPublic: boolean;
    readonly isStorageUtilizationLimitExceeded: boolean;
    readonly licenseModel: string;
    readonly lifecycleDetails: string;
    readonly lifecycleSubState: string;
    readonly loadBalancerId: string;
    readonly loadBalancerSubnetId: string;
    readonly locks: outputs.GetGoldenGateDeploymentLock[];
    readonly maintenanceConfigurations: outputs.GetGoldenGateDeploymentMaintenanceConfiguration[];
    readonly maintenanceWindows: outputs.GetGoldenGateDeploymentMaintenanceWindow[];
    readonly nextMaintenanceActionType: string;
    readonly nextMaintenanceDescription: string;
    readonly nsgIds: string[];
    readonly oggDatas: outputs.GetGoldenGateDeploymentOggData[];
    readonly privateIpAddress: string;
    readonly publicIpAddress: string;
    readonly state: string;
    readonly storageUtilizationInBytes: string;
    readonly subnetId: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeOfNextMaintenance: string;
    readonly timeOggVersionSupportedUntil: string;
    readonly timeUpdated: string;
    readonly timeUpgradeRequired: string;
}
export function getGoldenGateDeploymentOutput(args: GetGoldenGateDeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGoldenGateDeploymentResult> {
    return pulumi.output(args).apply((a: any) => getGoldenGateDeployment(a, opts))
}

/**
 * A collection of arguments for invoking getGoldenGateDeployment.
 */
export interface GetGoldenGateDeploymentOutputArgs {
    deploymentId: pulumi.Input<string>;
}
