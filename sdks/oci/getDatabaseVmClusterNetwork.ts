// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseVmClusterNetwork(args: GetDatabaseVmClusterNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseVmClusterNetworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseVmClusterNetwork:getDatabaseVmClusterNetwork", {
        "exadataInfrastructureId": args.exadataInfrastructureId,
        "vmClusterNetworkId": args.vmClusterNetworkId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseVmClusterNetwork.
 */
export interface GetDatabaseVmClusterNetworkArgs {
    exadataInfrastructureId: string;
    vmClusterNetworkId: string;
}

/**
 * A collection of values returned by getDatabaseVmClusterNetwork.
 */
export interface GetDatabaseVmClusterNetworkResult {
    readonly action: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly dns: string[];
    readonly drScans: outputs.GetDatabaseVmClusterNetworkDrScan[];
    readonly exadataInfrastructureId: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly ntps: string[];
    readonly scans: outputs.GetDatabaseVmClusterNetworkScan[];
    readonly state: string;
    readonly timeCreated: string;
    readonly validateVmClusterNetwork: boolean;
    readonly vmClusterId: string;
    readonly vmClusterNetworkId: string;
    readonly vmNetworks: outputs.GetDatabaseVmClusterNetworkVmNetwork[];
}
export function getDatabaseVmClusterNetworkOutput(args: GetDatabaseVmClusterNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseVmClusterNetworkResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseVmClusterNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseVmClusterNetwork.
 */
export interface GetDatabaseVmClusterNetworkOutputArgs {
    exadataInfrastructureId: pulumi.Input<string>;
    vmClusterNetworkId: pulumi.Input<string>;
}
