// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreByoipRange(args: GetCoreByoipRangeArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreByoipRangeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreByoipRange:getCoreByoipRange", {
        "byoipRangeId": args.byoipRangeId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreByoipRange.
 */
export interface GetCoreByoipRangeArgs {
    byoipRangeId: string;
    id?: string;
}

/**
 * A collection of values returned by getCoreByoipRange.
 */
export interface GetCoreByoipRangeResult {
    readonly byoipRangeId: string;
    readonly byoipRangeVcnIpv6allocations: outputs.GetCoreByoipRangeByoipRangeVcnIpv6allocation[];
    readonly cidrBlock: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly ipv6cidrBlock: string;
    readonly lifecycleDetails: string;
    readonly state: string;
    readonly timeAdvertised: string;
    readonly timeCreated: string;
    readonly timeValidated: string;
    readonly timeWithdrawn: string;
    readonly validationToken: string;
}
export function getCoreByoipRangeOutput(args: GetCoreByoipRangeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreByoipRangeResult> {
    return pulumi.output(args).apply((a: any) => getCoreByoipRange(a, opts))
}

/**
 * A collection of arguments for invoking getCoreByoipRange.
 */
export interface GetCoreByoipRangeOutputArgs {
    byoipRangeId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
