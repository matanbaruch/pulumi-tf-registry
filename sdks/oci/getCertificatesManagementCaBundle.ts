// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCertificatesManagementCaBundle(args: GetCertificatesManagementCaBundleArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificatesManagementCaBundleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCertificatesManagementCaBundle:getCertificatesManagementCaBundle", {
        "caBundleId": args.caBundleId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCertificatesManagementCaBundle.
 */
export interface GetCertificatesManagementCaBundleArgs {
    caBundleId: string;
}

/**
 * A collection of values returned by getCertificatesManagementCaBundle.
 */
export interface GetCertificatesManagementCaBundleResult {
    readonly caBundleId: string;
    readonly caBundlePem: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly name: string;
    readonly state: string;
    readonly timeCreated: string;
}
export function getCertificatesManagementCaBundleOutput(args: GetCertificatesManagementCaBundleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificatesManagementCaBundleResult> {
    return pulumi.output(args).apply((a: any) => getCertificatesManagementCaBundle(a, opts))
}

/**
 * A collection of arguments for invoking getCertificatesManagementCaBundle.
 */
export interface GetCertificatesManagementCaBundleOutputArgs {
    caBundleId: pulumi.Input<string>;
}
