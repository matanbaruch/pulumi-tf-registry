// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataSafeMaskingReportManagement extends pulumi.CustomResource {
    /**
     * Get an existing DataSafeMaskingReportManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataSafeMaskingReportManagementState, opts?: pulumi.CustomResourceOptions): DataSafeMaskingReportManagement {
        return new DataSafeMaskingReportManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/dataSafeMaskingReportManagement:DataSafeMaskingReportManagement';

    /**
     * Returns true if the given object is an instance of DataSafeMaskingReportManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataSafeMaskingReportManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataSafeMaskingReportManagement.__pulumiType;
    }

    public readonly compartmentId!: pulumi.Output<string>;
    public /*out*/ readonly isDropTempTablesEnabled!: pulumi.Output<boolean>;
    public /*out*/ readonly isRedoLoggingEnabled!: pulumi.Output<boolean>;
    public /*out*/ readonly isRefreshStatsEnabled!: pulumi.Output<boolean>;
    public readonly maskingPolicyId!: pulumi.Output<string>;
    public /*out*/ readonly maskingWorkRequestId!: pulumi.Output<string>;
    public /*out*/ readonly parallelDegree!: pulumi.Output<string>;
    public /*out*/ readonly recompile!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly targetId!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeMaskingFinished!: pulumi.Output<string>;
    public /*out*/ readonly timeMaskingStarted!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DataSafeMaskingReportManagementTimeouts | undefined>;
    public /*out*/ readonly totalMaskedColumns!: pulumi.Output<string>;
    public /*out*/ readonly totalMaskedObjects!: pulumi.Output<string>;
    public /*out*/ readonly totalMaskedSchemas!: pulumi.Output<string>;
    public /*out*/ readonly totalMaskedSensitiveTypes!: pulumi.Output<string>;
    public /*out*/ readonly totalMaskedValues!: pulumi.Output<string>;

    /**
     * Create a DataSafeMaskingReportManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DataSafeMaskingReportManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataSafeMaskingReportManagementArgs | DataSafeMaskingReportManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataSafeMaskingReportManagementState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["isDropTempTablesEnabled"] = state ? state.isDropTempTablesEnabled : undefined;
            resourceInputs["isRedoLoggingEnabled"] = state ? state.isRedoLoggingEnabled : undefined;
            resourceInputs["isRefreshStatsEnabled"] = state ? state.isRefreshStatsEnabled : undefined;
            resourceInputs["maskingPolicyId"] = state ? state.maskingPolicyId : undefined;
            resourceInputs["maskingWorkRequestId"] = state ? state.maskingWorkRequestId : undefined;
            resourceInputs["parallelDegree"] = state ? state.parallelDegree : undefined;
            resourceInputs["recompile"] = state ? state.recompile : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["targetId"] = state ? state.targetId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeMaskingFinished"] = state ? state.timeMaskingFinished : undefined;
            resourceInputs["timeMaskingStarted"] = state ? state.timeMaskingStarted : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["totalMaskedColumns"] = state ? state.totalMaskedColumns : undefined;
            resourceInputs["totalMaskedObjects"] = state ? state.totalMaskedObjects : undefined;
            resourceInputs["totalMaskedSchemas"] = state ? state.totalMaskedSchemas : undefined;
            resourceInputs["totalMaskedSensitiveTypes"] = state ? state.totalMaskedSensitiveTypes : undefined;
            resourceInputs["totalMaskedValues"] = state ? state.totalMaskedValues : undefined;
        } else {
            const args = argsOrState as DataSafeMaskingReportManagementArgs | undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["maskingPolicyId"] = args ? args.maskingPolicyId : undefined;
            resourceInputs["targetId"] = args ? args.targetId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["isDropTempTablesEnabled"] = undefined /*out*/;
            resourceInputs["isRedoLoggingEnabled"] = undefined /*out*/;
            resourceInputs["isRefreshStatsEnabled"] = undefined /*out*/;
            resourceInputs["maskingWorkRequestId"] = undefined /*out*/;
            resourceInputs["parallelDegree"] = undefined /*out*/;
            resourceInputs["recompile"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeMaskingFinished"] = undefined /*out*/;
            resourceInputs["timeMaskingStarted"] = undefined /*out*/;
            resourceInputs["totalMaskedColumns"] = undefined /*out*/;
            resourceInputs["totalMaskedObjects"] = undefined /*out*/;
            resourceInputs["totalMaskedSchemas"] = undefined /*out*/;
            resourceInputs["totalMaskedSensitiveTypes"] = undefined /*out*/;
            resourceInputs["totalMaskedValues"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataSafeMaskingReportManagement.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataSafeMaskingReportManagement resources.
 */
export interface DataSafeMaskingReportManagementState {
    compartmentId?: pulumi.Input<string>;
    isDropTempTablesEnabled?: pulumi.Input<boolean>;
    isRedoLoggingEnabled?: pulumi.Input<boolean>;
    isRefreshStatsEnabled?: pulumi.Input<boolean>;
    maskingPolicyId?: pulumi.Input<string>;
    maskingWorkRequestId?: pulumi.Input<string>;
    parallelDegree?: pulumi.Input<string>;
    recompile?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    targetId?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeMaskingFinished?: pulumi.Input<string>;
    timeMaskingStarted?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataSafeMaskingReportManagementTimeouts>;
    totalMaskedColumns?: pulumi.Input<string>;
    totalMaskedObjects?: pulumi.Input<string>;
    totalMaskedSchemas?: pulumi.Input<string>;
    totalMaskedSensitiveTypes?: pulumi.Input<string>;
    totalMaskedValues?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataSafeMaskingReportManagement resource.
 */
export interface DataSafeMaskingReportManagementArgs {
    compartmentId?: pulumi.Input<string>;
    maskingPolicyId?: pulumi.Input<string>;
    targetId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataSafeMaskingReportManagementTimeouts>;
}
