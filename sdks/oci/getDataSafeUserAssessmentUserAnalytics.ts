// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeUserAssessmentUserAnalytics(args: GetDataSafeUserAssessmentUserAnalyticsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeUserAssessmentUserAnalyticsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeUserAssessmentUserAnalytics:getDataSafeUserAssessmentUserAnalytics", {
        "accessLevel": args.accessLevel,
        "accountStatus": args.accountStatus,
        "authenticationType": args.authenticationType,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "id": args.id,
        "targetId": args.targetId,
        "timeLastLoginGreaterThanOrEqualTo": args.timeLastLoginGreaterThanOrEqualTo,
        "timeLastLoginLessThan": args.timeLastLoginLessThan,
        "timePasswordLastChangedGreaterThanOrEqualTo": args.timePasswordLastChangedGreaterThanOrEqualTo,
        "timePasswordLastChangedLessThan": args.timePasswordLastChangedLessThan,
        "timeUserCreatedGreaterThanOrEqualTo": args.timeUserCreatedGreaterThanOrEqualTo,
        "timeUserCreatedLessThan": args.timeUserCreatedLessThan,
        "userAssessmentId": args.userAssessmentId,
        "userCategory": args.userCategory,
        "userKey": args.userKey,
        "userName": args.userName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeUserAssessmentUserAnalytics.
 */
export interface GetDataSafeUserAssessmentUserAnalyticsArgs {
    accessLevel?: string;
    accountStatus?: string;
    authenticationType?: string;
    compartmentIdInSubtree?: boolean;
    filters?: inputs.GetDataSafeUserAssessmentUserAnalyticsFilter[];
    id?: string;
    targetId?: string;
    timeLastLoginGreaterThanOrEqualTo?: string;
    timeLastLoginLessThan?: string;
    timePasswordLastChangedGreaterThanOrEqualTo?: string;
    timePasswordLastChangedLessThan?: string;
    timeUserCreatedGreaterThanOrEqualTo?: string;
    timeUserCreatedLessThan?: string;
    userAssessmentId: string;
    userCategory?: string;
    userKey?: string;
    userName?: string;
}

/**
 * A collection of values returned by getDataSafeUserAssessmentUserAnalytics.
 */
export interface GetDataSafeUserAssessmentUserAnalyticsResult {
    readonly accessLevel?: string;
    readonly accountStatus?: string;
    readonly authenticationType?: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.GetDataSafeUserAssessmentUserAnalyticsFilter[];
    readonly id: string;
    readonly targetId?: string;
    readonly timeLastLoginGreaterThanOrEqualTo?: string;
    readonly timeLastLoginLessThan?: string;
    readonly timePasswordLastChangedGreaterThanOrEqualTo?: string;
    readonly timePasswordLastChangedLessThan?: string;
    readonly timeUserCreatedGreaterThanOrEqualTo?: string;
    readonly timeUserCreatedLessThan?: string;
    readonly userAggregations: outputs.GetDataSafeUserAssessmentUserAnalyticsUserAggregation[];
    readonly userAssessmentId: string;
    readonly userCategory?: string;
    readonly userKey?: string;
    readonly userName?: string;
}
export function getDataSafeUserAssessmentUserAnalyticsOutput(args: GetDataSafeUserAssessmentUserAnalyticsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeUserAssessmentUserAnalyticsResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeUserAssessmentUserAnalytics(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeUserAssessmentUserAnalytics.
 */
export interface GetDataSafeUserAssessmentUserAnalyticsOutputArgs {
    accessLevel?: pulumi.Input<string>;
    accountStatus?: pulumi.Input<string>;
    authenticationType?: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataSafeUserAssessmentUserAnalyticsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    targetId?: pulumi.Input<string>;
    timeLastLoginGreaterThanOrEqualTo?: pulumi.Input<string>;
    timeLastLoginLessThan?: pulumi.Input<string>;
    timePasswordLastChangedGreaterThanOrEqualTo?: pulumi.Input<string>;
    timePasswordLastChangedLessThan?: pulumi.Input<string>;
    timeUserCreatedGreaterThanOrEqualTo?: pulumi.Input<string>;
    timeUserCreatedLessThan?: pulumi.Input<string>;
    userAssessmentId: pulumi.Input<string>;
    userCategory?: pulumi.Input<string>;
    userKey?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}
