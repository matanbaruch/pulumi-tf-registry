// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOptimizerProfileLevel(args: GetOptimizerProfileLevelArgs, opts?: pulumi.InvokeOptions): Promise<GetOptimizerProfileLevelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOptimizerProfileLevel:getOptimizerProfileLevel", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "id": args.id,
        "name": args.name,
        "recommendationName": args.recommendationName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOptimizerProfileLevel.
 */
export interface GetOptimizerProfileLevelArgs {
    compartmentId: string;
    compartmentIdInSubtree: boolean;
    id?: string;
    name?: string;
    recommendationName?: string;
}

/**
 * A collection of values returned by getOptimizerProfileLevel.
 */
export interface GetOptimizerProfileLevelResult {
    readonly compartmentId: string;
    readonly compartmentIdInSubtree: boolean;
    readonly id: string;
    readonly items: outputs.GetOptimizerProfileLevelItem[];
    readonly name?: string;
    readonly recommendationName?: string;
}
export function getOptimizerProfileLevelOutput(args: GetOptimizerProfileLevelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOptimizerProfileLevelResult> {
    return pulumi.output(args).apply((a: any) => getOptimizerProfileLevel(a, opts))
}

/**
 * A collection of arguments for invoking getOptimizerProfileLevel.
 */
export interface GetOptimizerProfileLevelOutputArgs {
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    recommendationName?: pulumi.Input<string>;
}
