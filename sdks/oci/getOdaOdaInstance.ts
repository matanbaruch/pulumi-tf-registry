// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOdaOdaInstance(args: GetOdaOdaInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetOdaOdaInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOdaOdaInstance:getOdaOdaInstance", {
        "odaInstanceId": args.odaInstanceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOdaOdaInstance.
 */
export interface GetOdaOdaInstanceArgs {
    odaInstanceId: string;
}

/**
 * A collection of values returned by getOdaOdaInstance.
 */
export interface GetOdaOdaInstanceResult {
    readonly attachmentIds: string[];
    readonly attachmentTypes: string[];
    readonly compartmentId: string;
    readonly connectorUrl: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly identityAppConsoleUrl: string;
    readonly identityAppGuid: string;
    readonly identityDomain: string;
    readonly importedPackageIds: string[];
    readonly importedPackageNames: string[];
    readonly isRoleBasedAccess: boolean;
    readonly lifecycleSubState: string;
    readonly odaInstanceId: string;
    readonly restrictedOperations: outputs.GetOdaOdaInstanceRestrictedOperation[];
    readonly shapeName: string;
    readonly state: string;
    readonly stateMessage: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly webAppUrl: string;
}
export function getOdaOdaInstanceOutput(args: GetOdaOdaInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOdaOdaInstanceResult> {
    return pulumi.output(args).apply((a: any) => getOdaOdaInstance(a, opts))
}

/**
 * A collection of arguments for invoking getOdaOdaInstance.
 */
export interface GetOdaOdaInstanceOutputArgs {
    odaInstanceId: pulumi.Input<string>;
}
