// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OperatorAccessControlOperatorControl extends pulumi.CustomResource {
    /**
     * Get an existing OperatorAccessControlOperatorControl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OperatorAccessControlOperatorControlState, opts?: pulumi.CustomResourceOptions): OperatorAccessControlOperatorControl {
        return new OperatorAccessControlOperatorControl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/operatorAccessControlOperatorControl:OperatorAccessControlOperatorControl';

    /**
     * Returns true if the given object is an instance of OperatorAccessControlOperatorControl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OperatorAccessControlOperatorControl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OperatorAccessControlOperatorControl.__pulumiType;
    }

    public /*out*/ readonly approvalRequiredOpActionLists!: pulumi.Output<string[]>;
    public readonly approverGroupsLists!: pulumi.Output<string[]>;
    public readonly approversLists!: pulumi.Output<string[]>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string>;
    public readonly emailIdLists!: pulumi.Output<string[]>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly isDefaultOperatorControl!: pulumi.Output<boolean>;
    public readonly isFullyPreApproved!: pulumi.Output<boolean>;
    public /*out*/ readonly lastModifiedInfo!: pulumi.Output<string>;
    public readonly numberOfApprovers!: pulumi.Output<number>;
    public readonly operatorControlName!: pulumi.Output<string>;
    public readonly preApprovedOpActionLists!: pulumi.Output<string[]>;
    public readonly resourceType!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly systemMessage!: pulumi.Output<string>;
    public /*out*/ readonly timeOfCreation!: pulumi.Output<string>;
    public /*out*/ readonly timeOfDeletion!: pulumi.Output<string>;
    public /*out*/ readonly timeOfModification!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.OperatorAccessControlOperatorControlTimeouts | undefined>;

    /**
     * Create a OperatorAccessControlOperatorControl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OperatorAccessControlOperatorControlArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OperatorAccessControlOperatorControlArgs | OperatorAccessControlOperatorControlState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OperatorAccessControlOperatorControlState | undefined;
            resourceInputs["approvalRequiredOpActionLists"] = state ? state.approvalRequiredOpActionLists : undefined;
            resourceInputs["approverGroupsLists"] = state ? state.approverGroupsLists : undefined;
            resourceInputs["approversLists"] = state ? state.approversLists : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["emailIdLists"] = state ? state.emailIdLists : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isDefaultOperatorControl"] = state ? state.isDefaultOperatorControl : undefined;
            resourceInputs["isFullyPreApproved"] = state ? state.isFullyPreApproved : undefined;
            resourceInputs["lastModifiedInfo"] = state ? state.lastModifiedInfo : undefined;
            resourceInputs["numberOfApprovers"] = state ? state.numberOfApprovers : undefined;
            resourceInputs["operatorControlName"] = state ? state.operatorControlName : undefined;
            resourceInputs["preApprovedOpActionLists"] = state ? state.preApprovedOpActionLists : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemMessage"] = state ? state.systemMessage : undefined;
            resourceInputs["timeOfCreation"] = state ? state.timeOfCreation : undefined;
            resourceInputs["timeOfDeletion"] = state ? state.timeOfDeletion : undefined;
            resourceInputs["timeOfModification"] = state ? state.timeOfModification : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as OperatorAccessControlOperatorControlArgs | undefined;
            if ((!args || args.approverGroupsLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'approverGroupsLists'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.isFullyPreApproved === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isFullyPreApproved'");
            }
            if ((!args || args.operatorControlName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'operatorControlName'");
            }
            if ((!args || args.resourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceType'");
            }
            resourceInputs["approverGroupsLists"] = args ? args.approverGroupsLists : undefined;
            resourceInputs["approversLists"] = args ? args.approversLists : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["emailIdLists"] = args ? args.emailIdLists : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isFullyPreApproved"] = args ? args.isFullyPreApproved : undefined;
            resourceInputs["numberOfApprovers"] = args ? args.numberOfApprovers : undefined;
            resourceInputs["operatorControlName"] = args ? args.operatorControlName : undefined;
            resourceInputs["preApprovedOpActionLists"] = args ? args.preApprovedOpActionLists : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
            resourceInputs["systemMessage"] = args ? args.systemMessage : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["approvalRequiredOpActionLists"] = undefined /*out*/;
            resourceInputs["isDefaultOperatorControl"] = undefined /*out*/;
            resourceInputs["lastModifiedInfo"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeOfCreation"] = undefined /*out*/;
            resourceInputs["timeOfDeletion"] = undefined /*out*/;
            resourceInputs["timeOfModification"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OperatorAccessControlOperatorControl.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OperatorAccessControlOperatorControl resources.
 */
export interface OperatorAccessControlOperatorControlState {
    approvalRequiredOpActionLists?: pulumi.Input<pulumi.Input<string>[]>;
    approverGroupsLists?: pulumi.Input<pulumi.Input<string>[]>;
    approversLists?: pulumi.Input<pulumi.Input<string>[]>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    emailIdLists?: pulumi.Input<pulumi.Input<string>[]>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isDefaultOperatorControl?: pulumi.Input<boolean>;
    isFullyPreApproved?: pulumi.Input<boolean>;
    lastModifiedInfo?: pulumi.Input<string>;
    numberOfApprovers?: pulumi.Input<number>;
    operatorControlName?: pulumi.Input<string>;
    preApprovedOpActionLists?: pulumi.Input<pulumi.Input<string>[]>;
    resourceType?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    systemMessage?: pulumi.Input<string>;
    timeOfCreation?: pulumi.Input<string>;
    timeOfDeletion?: pulumi.Input<string>;
    timeOfModification?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OperatorAccessControlOperatorControlTimeouts>;
}

/**
 * The set of arguments for constructing a OperatorAccessControlOperatorControl resource.
 */
export interface OperatorAccessControlOperatorControlArgs {
    approverGroupsLists: pulumi.Input<pulumi.Input<string>[]>;
    approversLists?: pulumi.Input<pulumi.Input<string>[]>;
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    emailIdLists?: pulumi.Input<pulumi.Input<string>[]>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isFullyPreApproved: pulumi.Input<boolean>;
    numberOfApprovers?: pulumi.Input<number>;
    operatorControlName: pulumi.Input<string>;
    preApprovedOpActionLists?: pulumi.Input<pulumi.Input<string>[]>;
    resourceType: pulumi.Input<string>;
    systemMessage?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OperatorAccessControlOperatorControlTimeouts>;
}
