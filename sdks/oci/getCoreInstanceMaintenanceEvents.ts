// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreInstanceMaintenanceEvents(args: GetCoreInstanceMaintenanceEventsArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreInstanceMaintenanceEventsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreInstanceMaintenanceEvents:getCoreInstanceMaintenanceEvents", {
        "compartmentId": args.compartmentId,
        "correlationToken": args.correlationToken,
        "filters": args.filters,
        "id": args.id,
        "instanceAction": args.instanceAction,
        "instanceId": args.instanceId,
        "state": args.state,
        "timeWindowStartGreaterThanOrEqualTo": args.timeWindowStartGreaterThanOrEqualTo,
        "timeWindowStartLessThanOrEqualTo": args.timeWindowStartLessThanOrEqualTo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreInstanceMaintenanceEvents.
 */
export interface GetCoreInstanceMaintenanceEventsArgs {
    compartmentId: string;
    correlationToken?: string;
    filters?: inputs.GetCoreInstanceMaintenanceEventsFilter[];
    id?: string;
    instanceAction?: string;
    instanceId?: string;
    state?: string;
    timeWindowStartGreaterThanOrEqualTo?: string;
    timeWindowStartLessThanOrEqualTo?: string;
}

/**
 * A collection of values returned by getCoreInstanceMaintenanceEvents.
 */
export interface GetCoreInstanceMaintenanceEventsResult {
    readonly compartmentId: string;
    readonly correlationToken?: string;
    readonly filters?: outputs.GetCoreInstanceMaintenanceEventsFilter[];
    readonly id: string;
    readonly instanceAction?: string;
    readonly instanceId?: string;
    readonly instanceMaintenanceEvents: outputs.GetCoreInstanceMaintenanceEventsInstanceMaintenanceEvent[];
    readonly state?: string;
    readonly timeWindowStartGreaterThanOrEqualTo?: string;
    readonly timeWindowStartLessThanOrEqualTo?: string;
}
export function getCoreInstanceMaintenanceEventsOutput(args: GetCoreInstanceMaintenanceEventsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreInstanceMaintenanceEventsResult> {
    return pulumi.output(args).apply((a: any) => getCoreInstanceMaintenanceEvents(a, opts))
}

/**
 * A collection of arguments for invoking getCoreInstanceMaintenanceEvents.
 */
export interface GetCoreInstanceMaintenanceEventsOutputArgs {
    compartmentId: pulumi.Input<string>;
    correlationToken?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetCoreInstanceMaintenanceEventsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    instanceAction?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeWindowStartGreaterThanOrEqualTo?: pulumi.Input<string>;
    timeWindowStartLessThanOrEqualTo?: pulumi.Input<string>;
}
