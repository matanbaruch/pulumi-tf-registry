// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatabaseDbNodeConsoleConnection(args: GetDatabaseDbNodeConsoleConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseDbNodeConsoleConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseDbNodeConsoleConnection:getDatabaseDbNodeConsoleConnection", {
        "dbNodeId": args.dbNodeId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseDbNodeConsoleConnection.
 */
export interface GetDatabaseDbNodeConsoleConnectionArgs {
    dbNodeId: string;
    id: string;
}

/**
 * A collection of values returned by getDatabaseDbNodeConsoleConnection.
 */
export interface GetDatabaseDbNodeConsoleConnectionResult {
    readonly compartmentId: string;
    readonly connectionString: string;
    readonly dbNodeId: string;
    readonly definedTags: {[key: string]: string};
    readonly fingerprint: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly publicKey: string;
    readonly serviceHostKeyFingerprint: string;
    readonly state: string;
}
export function getDatabaseDbNodeConsoleConnectionOutput(args: GetDatabaseDbNodeConsoleConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseDbNodeConsoleConnectionResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseDbNodeConsoleConnection(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseDbNodeConsoleConnection.
 */
export interface GetDatabaseDbNodeConsoleConnectionOutputArgs {
    dbNodeId: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
