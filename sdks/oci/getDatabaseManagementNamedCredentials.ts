// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementNamedCredentials(args: GetDatabaseManagementNamedCredentialsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementNamedCredentialsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementNamedCredentials:getDatabaseManagementNamedCredentials", {
        "associatedResource": args.associatedResource,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "scope": args.scope,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementNamedCredentials.
 */
export interface GetDatabaseManagementNamedCredentialsArgs {
    associatedResource?: string;
    compartmentId: string;
    filters?: inputs.GetDatabaseManagementNamedCredentialsFilter[];
    id?: string;
    name?: string;
    scope?: string;
    type?: string;
}

/**
 * A collection of values returned by getDatabaseManagementNamedCredentials.
 */
export interface GetDatabaseManagementNamedCredentialsResult {
    readonly associatedResource?: string;
    readonly compartmentId: string;
    readonly filters?: outputs.GetDatabaseManagementNamedCredentialsFilter[];
    readonly id: string;
    readonly name?: string;
    readonly namedCredentialCollections: outputs.GetDatabaseManagementNamedCredentialsNamedCredentialCollection[];
    readonly scope?: string;
    readonly type?: string;
}
export function getDatabaseManagementNamedCredentialsOutput(args: GetDatabaseManagementNamedCredentialsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementNamedCredentialsResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementNamedCredentials(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementNamedCredentials.
 */
export interface GetDatabaseManagementNamedCredentialsOutputArgs {
    associatedResource?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseManagementNamedCredentialsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
