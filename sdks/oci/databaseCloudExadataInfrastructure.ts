// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatabaseCloudExadataInfrastructure extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseCloudExadataInfrastructure resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseCloudExadataInfrastructureState, opts?: pulumi.CustomResourceOptions): DatabaseCloudExadataInfrastructure {
        return new DatabaseCloudExadataInfrastructure(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/databaseCloudExadataInfrastructure:DatabaseCloudExadataInfrastructure';

    /**
     * Returns true if the given object is an instance of DatabaseCloudExadataInfrastructure.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseCloudExadataInfrastructure {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseCloudExadataInfrastructure.__pulumiType;
    }

    public /*out*/ readonly activatedStorageCount!: pulumi.Output<number>;
    public /*out*/ readonly additionalStorageCount!: pulumi.Output<number>;
    public readonly availabilityDomain!: pulumi.Output<string>;
    public /*out*/ readonly availableStorageSizeInGbs!: pulumi.Output<number>;
    public readonly clusterPlacementGroupId!: pulumi.Output<string | undefined>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly computeCount!: pulumi.Output<number>;
    public /*out*/ readonly cpuCount!: pulumi.Output<number>;
    public readonly customerContacts!: pulumi.Output<outputs.DatabaseCloudExadataInfrastructureCustomerContact[] | undefined>;
    public /*out*/ readonly dataStorageSizeInTbs!: pulumi.Output<number>;
    public /*out*/ readonly dbNodeStorageSizeInGbs!: pulumi.Output<number>;
    public /*out*/ readonly dbServerVersion!: pulumi.Output<string>;
    public /*out*/ readonly definedFileSystemConfigurations!: pulumi.Output<outputs.DatabaseCloudExadataInfrastructureDefinedFileSystemConfiguration[]>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly lastMaintenanceRunId!: pulumi.Output<string>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly maintenanceWindow!: pulumi.Output<outputs.DatabaseCloudExadataInfrastructureMaintenanceWindow | undefined>;
    public /*out*/ readonly maxCpuCount!: pulumi.Output<number>;
    public /*out*/ readonly maxDataStorageInTbs!: pulumi.Output<number>;
    public /*out*/ readonly maxDbNodeStorageInGbs!: pulumi.Output<number>;
    public /*out*/ readonly maxMemoryInGbs!: pulumi.Output<number>;
    public /*out*/ readonly memorySizeInGbs!: pulumi.Output<number>;
    public /*out*/ readonly monthlyDbServerVersion!: pulumi.Output<string>;
    public /*out*/ readonly monthlyStorageServerVersion!: pulumi.Output<string>;
    public /*out*/ readonly nextMaintenanceRunId!: pulumi.Output<string>;
    public readonly shape!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly storageCount!: pulumi.Output<number>;
    public /*out*/ readonly storageServerVersion!: pulumi.Output<string>;
    public readonly subscriptionId!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DatabaseCloudExadataInfrastructureTimeouts | undefined>;
    public /*out*/ readonly totalStorageSizeInGbs!: pulumi.Output<number>;

    /**
     * Create a DatabaseCloudExadataInfrastructure resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseCloudExadataInfrastructureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseCloudExadataInfrastructureArgs | DatabaseCloudExadataInfrastructureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseCloudExadataInfrastructureState | undefined;
            resourceInputs["activatedStorageCount"] = state ? state.activatedStorageCount : undefined;
            resourceInputs["additionalStorageCount"] = state ? state.additionalStorageCount : undefined;
            resourceInputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            resourceInputs["availableStorageSizeInGbs"] = state ? state.availableStorageSizeInGbs : undefined;
            resourceInputs["clusterPlacementGroupId"] = state ? state.clusterPlacementGroupId : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["computeCount"] = state ? state.computeCount : undefined;
            resourceInputs["cpuCount"] = state ? state.cpuCount : undefined;
            resourceInputs["customerContacts"] = state ? state.customerContacts : undefined;
            resourceInputs["dataStorageSizeInTbs"] = state ? state.dataStorageSizeInTbs : undefined;
            resourceInputs["dbNodeStorageSizeInGbs"] = state ? state.dbNodeStorageSizeInGbs : undefined;
            resourceInputs["dbServerVersion"] = state ? state.dbServerVersion : undefined;
            resourceInputs["definedFileSystemConfigurations"] = state ? state.definedFileSystemConfigurations : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lastMaintenanceRunId"] = state ? state.lastMaintenanceRunId : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["maintenanceWindow"] = state ? state.maintenanceWindow : undefined;
            resourceInputs["maxCpuCount"] = state ? state.maxCpuCount : undefined;
            resourceInputs["maxDataStorageInTbs"] = state ? state.maxDataStorageInTbs : undefined;
            resourceInputs["maxDbNodeStorageInGbs"] = state ? state.maxDbNodeStorageInGbs : undefined;
            resourceInputs["maxMemoryInGbs"] = state ? state.maxMemoryInGbs : undefined;
            resourceInputs["memorySizeInGbs"] = state ? state.memorySizeInGbs : undefined;
            resourceInputs["monthlyDbServerVersion"] = state ? state.monthlyDbServerVersion : undefined;
            resourceInputs["monthlyStorageServerVersion"] = state ? state.monthlyStorageServerVersion : undefined;
            resourceInputs["nextMaintenanceRunId"] = state ? state.nextMaintenanceRunId : undefined;
            resourceInputs["shape"] = state ? state.shape : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["storageCount"] = state ? state.storageCount : undefined;
            resourceInputs["storageServerVersion"] = state ? state.storageServerVersion : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["totalStorageSizeInGbs"] = state ? state.totalStorageSizeInGbs : undefined;
        } else {
            const args = argsOrState as DatabaseCloudExadataInfrastructureArgs | undefined;
            if ((!args || args.availabilityDomain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityDomain'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.shape === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shape'");
            }
            resourceInputs["availabilityDomain"] = args ? args.availabilityDomain : undefined;
            resourceInputs["clusterPlacementGroupId"] = args ? args.clusterPlacementGroupId : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["computeCount"] = args ? args.computeCount : undefined;
            resourceInputs["customerContacts"] = args ? args.customerContacts : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["maintenanceWindow"] = args ? args.maintenanceWindow : undefined;
            resourceInputs["shape"] = args ? args.shape : undefined;
            resourceInputs["storageCount"] = args ? args.storageCount : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["activatedStorageCount"] = undefined /*out*/;
            resourceInputs["additionalStorageCount"] = undefined /*out*/;
            resourceInputs["availableStorageSizeInGbs"] = undefined /*out*/;
            resourceInputs["cpuCount"] = undefined /*out*/;
            resourceInputs["dataStorageSizeInTbs"] = undefined /*out*/;
            resourceInputs["dbNodeStorageSizeInGbs"] = undefined /*out*/;
            resourceInputs["dbServerVersion"] = undefined /*out*/;
            resourceInputs["definedFileSystemConfigurations"] = undefined /*out*/;
            resourceInputs["lastMaintenanceRunId"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["maxCpuCount"] = undefined /*out*/;
            resourceInputs["maxDataStorageInTbs"] = undefined /*out*/;
            resourceInputs["maxDbNodeStorageInGbs"] = undefined /*out*/;
            resourceInputs["maxMemoryInGbs"] = undefined /*out*/;
            resourceInputs["memorySizeInGbs"] = undefined /*out*/;
            resourceInputs["monthlyDbServerVersion"] = undefined /*out*/;
            resourceInputs["monthlyStorageServerVersion"] = undefined /*out*/;
            resourceInputs["nextMaintenanceRunId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["storageServerVersion"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["totalStorageSizeInGbs"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseCloudExadataInfrastructure.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatabaseCloudExadataInfrastructure resources.
 */
export interface DatabaseCloudExadataInfrastructureState {
    activatedStorageCount?: pulumi.Input<number>;
    additionalStorageCount?: pulumi.Input<number>;
    availabilityDomain?: pulumi.Input<string>;
    availableStorageSizeInGbs?: pulumi.Input<number>;
    clusterPlacementGroupId?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    computeCount?: pulumi.Input<number>;
    cpuCount?: pulumi.Input<number>;
    customerContacts?: pulumi.Input<pulumi.Input<inputs.DatabaseCloudExadataInfrastructureCustomerContact>[]>;
    dataStorageSizeInTbs?: pulumi.Input<number>;
    dbNodeStorageSizeInGbs?: pulumi.Input<number>;
    dbServerVersion?: pulumi.Input<string>;
    definedFileSystemConfigurations?: pulumi.Input<pulumi.Input<inputs.DatabaseCloudExadataInfrastructureDefinedFileSystemConfiguration>[]>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lastMaintenanceRunId?: pulumi.Input<string>;
    lifecycleDetails?: pulumi.Input<string>;
    maintenanceWindow?: pulumi.Input<inputs.DatabaseCloudExadataInfrastructureMaintenanceWindow>;
    maxCpuCount?: pulumi.Input<number>;
    maxDataStorageInTbs?: pulumi.Input<number>;
    maxDbNodeStorageInGbs?: pulumi.Input<number>;
    maxMemoryInGbs?: pulumi.Input<number>;
    memorySizeInGbs?: pulumi.Input<number>;
    monthlyDbServerVersion?: pulumi.Input<string>;
    monthlyStorageServerVersion?: pulumi.Input<string>;
    nextMaintenanceRunId?: pulumi.Input<string>;
    shape?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    storageCount?: pulumi.Input<number>;
    storageServerVersion?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatabaseCloudExadataInfrastructureTimeouts>;
    totalStorageSizeInGbs?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DatabaseCloudExadataInfrastructure resource.
 */
export interface DatabaseCloudExadataInfrastructureArgs {
    availabilityDomain: pulumi.Input<string>;
    clusterPlacementGroupId?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    computeCount?: pulumi.Input<number>;
    customerContacts?: pulumi.Input<pulumi.Input<inputs.DatabaseCloudExadataInfrastructureCustomerContact>[]>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    maintenanceWindow?: pulumi.Input<inputs.DatabaseCloudExadataInfrastructureMaintenanceWindow>;
    shape: pulumi.Input<string>;
    storageCount?: pulumi.Input<number>;
    subscriptionId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatabaseCloudExadataInfrastructureTimeouts>;
}
