// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeTargetDatabaseRole(args: GetDataSafeTargetDatabaseRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeTargetDatabaseRoleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeTargetDatabaseRole:getDataSafeTargetDatabaseRole", {
        "authenticationType": args.authenticationType,
        "filters": args.filters,
        "id": args.id,
        "isOracleMaintained": args.isOracleMaintained,
        "roleNameContains": args.roleNameContains,
        "roleNames": args.roleNames,
        "targetDatabaseId": args.targetDatabaseId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeTargetDatabaseRole.
 */
export interface GetDataSafeTargetDatabaseRoleArgs {
    authenticationType?: string;
    filters?: inputs.GetDataSafeTargetDatabaseRoleFilter[];
    id?: string;
    isOracleMaintained?: boolean;
    roleNameContains?: string;
    roleNames?: string[];
    targetDatabaseId: string;
}

/**
 * A collection of values returned by getDataSafeTargetDatabaseRole.
 */
export interface GetDataSafeTargetDatabaseRoleResult {
    readonly authenticationType?: string;
    readonly filters?: outputs.GetDataSafeTargetDatabaseRoleFilter[];
    readonly id: string;
    readonly isOracleMaintained?: boolean;
    readonly roleNameContains?: string;
    readonly roleNames?: string[];
    readonly roles: outputs.GetDataSafeTargetDatabaseRoleRole[];
    readonly targetDatabaseId: string;
}
export function getDataSafeTargetDatabaseRoleOutput(args: GetDataSafeTargetDatabaseRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeTargetDatabaseRoleResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeTargetDatabaseRole(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeTargetDatabaseRole.
 */
export interface GetDataSafeTargetDatabaseRoleOutputArgs {
    authenticationType?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataSafeTargetDatabaseRoleFilterArgs>[]>;
    id?: pulumi.Input<string>;
    isOracleMaintained?: pulumi.Input<boolean>;
    roleNameContains?: pulumi.Input<string>;
    roleNames?: pulumi.Input<pulumi.Input<string>[]>;
    targetDatabaseId: pulumi.Input<string>;
}
