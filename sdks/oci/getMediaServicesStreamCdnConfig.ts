// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMediaServicesStreamCdnConfig(args: GetMediaServicesStreamCdnConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaServicesStreamCdnConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMediaServicesStreamCdnConfig:getMediaServicesStreamCdnConfig", {
        "streamCdnConfigId": args.streamCdnConfigId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMediaServicesStreamCdnConfig.
 */
export interface GetMediaServicesStreamCdnConfigArgs {
    streamCdnConfigId: string;
}

/**
 * A collection of values returned by getMediaServicesStreamCdnConfig.
 */
export interface GetMediaServicesStreamCdnConfigResult {
    readonly compartmentId: string;
    readonly configs: outputs.GetMediaServicesStreamCdnConfigConfig[];
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly distributionChannelId: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isEnabled: boolean;
    readonly isLockOverride: boolean;
    readonly lifecyleDetails: string;
    readonly locks: outputs.GetMediaServicesStreamCdnConfigLock[];
    readonly state: string;
    readonly streamCdnConfigId: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getMediaServicesStreamCdnConfigOutput(args: GetMediaServicesStreamCdnConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediaServicesStreamCdnConfigResult> {
    return pulumi.output(args).apply((a: any) => getMediaServicesStreamCdnConfig(a, opts))
}

/**
 * A collection of arguments for invoking getMediaServicesStreamCdnConfig.
 */
export interface GetMediaServicesStreamCdnConfigOutputArgs {
    streamCdnConfigId: pulumi.Input<string>;
}
