// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBdsBdsInstanceMetastoreConfig(args: GetBdsBdsInstanceMetastoreConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetBdsBdsInstanceMetastoreConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getBdsBdsInstanceMetastoreConfig:getBdsBdsInstanceMetastoreConfig", {
        "bdsInstanceId": args.bdsInstanceId,
        "metastoreConfigId": args.metastoreConfigId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBdsBdsInstanceMetastoreConfig.
 */
export interface GetBdsBdsInstanceMetastoreConfigArgs {
    bdsInstanceId: string;
    metastoreConfigId: string;
}

/**
 * A collection of values returned by getBdsBdsInstanceMetastoreConfig.
 */
export interface GetBdsBdsInstanceMetastoreConfigResult {
    readonly activateTrigger: number;
    readonly bdsApiKeyId: string;
    readonly bdsApiKeyPassphrase: string;
    readonly bdsInstanceId: string;
    readonly clusterAdminPassword: string;
    readonly displayName: string;
    readonly id: string;
    readonly metastoreConfigId: string;
    readonly metastoreId: string;
    readonly metastoreType: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getBdsBdsInstanceMetastoreConfigOutput(args: GetBdsBdsInstanceMetastoreConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBdsBdsInstanceMetastoreConfigResult> {
    return pulumi.output(args).apply((a: any) => getBdsBdsInstanceMetastoreConfig(a, opts))
}

/**
 * A collection of arguments for invoking getBdsBdsInstanceMetastoreConfig.
 */
export interface GetBdsBdsInstanceMetastoreConfigOutputArgs {
    bdsInstanceId: pulumi.Input<string>;
    metastoreConfigId: pulumi.Input<string>;
}
