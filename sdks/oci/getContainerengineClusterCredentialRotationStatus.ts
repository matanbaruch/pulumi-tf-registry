// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getContainerengineClusterCredentialRotationStatus(args: GetContainerengineClusterCredentialRotationStatusArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerengineClusterCredentialRotationStatusResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getContainerengineClusterCredentialRotationStatus:getContainerengineClusterCredentialRotationStatus", {
        "clusterId": args.clusterId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContainerengineClusterCredentialRotationStatus.
 */
export interface GetContainerengineClusterCredentialRotationStatusArgs {
    clusterId: string;
    id?: string;
}

/**
 * A collection of values returned by getContainerengineClusterCredentialRotationStatus.
 */
export interface GetContainerengineClusterCredentialRotationStatusResult {
    readonly clusterId: string;
    readonly id: string;
    readonly status: string;
    readonly statusDetails: string;
    readonly timeAutoCompletionScheduled: string;
}
export function getContainerengineClusterCredentialRotationStatusOutput(args: GetContainerengineClusterCredentialRotationStatusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerengineClusterCredentialRotationStatusResult> {
    return pulumi.output(args).apply((a: any) => getContainerengineClusterCredentialRotationStatus(a, opts))
}

/**
 * A collection of arguments for invoking getContainerengineClusterCredentialRotationStatus.
 */
export interface GetContainerengineClusterCredentialRotationStatusOutputArgs {
    clusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
