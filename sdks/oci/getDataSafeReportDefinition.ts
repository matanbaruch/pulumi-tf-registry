// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeReportDefinition(args: GetDataSafeReportDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeReportDefinitionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeReportDefinition:getDataSafeReportDefinition", {
        "reportDefinitionId": args.reportDefinitionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeReportDefinition.
 */
export interface GetDataSafeReportDefinitionArgs {
    reportDefinitionId: string;
}

/**
 * A collection of values returned by getDataSafeReportDefinition.
 */
export interface GetDataSafeReportDefinitionResult {
    readonly category: string;
    readonly columnFilters: outputs.GetDataSafeReportDefinitionColumnFilter[];
    readonly columnInfos: outputs.GetDataSafeReportDefinitionColumnInfo[];
    readonly columnSortings: outputs.GetDataSafeReportDefinitionColumnSorting[];
    readonly compartmentId: string;
    readonly complianceStandards: string[];
    readonly dataSource: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly displayOrder: number;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isSeeded: boolean;
    readonly lifecycleDetails: string;
    readonly parentId: string;
    readonly recordTimeSpan: string;
    readonly reportDefinitionId: string;
    readonly schedule: string;
    readonly scheduledReportCompartmentId: string;
    readonly scheduledReportMimeType: string;
    readonly scheduledReportName: string;
    readonly scheduledReportRowLimit: number;
    readonly scimFilter: string;
    readonly state: string;
    readonly summaries: outputs.GetDataSafeReportDefinitionSummary[];
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getDataSafeReportDefinitionOutput(args: GetDataSafeReportDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeReportDefinitionResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeReportDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeReportDefinition.
 */
export interface GetDataSafeReportDefinitionOutputArgs {
    reportDefinitionId: pulumi.Input<string>;
}
