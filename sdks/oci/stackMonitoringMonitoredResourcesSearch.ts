// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class StackMonitoringMonitoredResourcesSearch extends pulumi.CustomResource {
    /**
     * Get an existing StackMonitoringMonitoredResourcesSearch resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StackMonitoringMonitoredResourcesSearchState, opts?: pulumi.CustomResourceOptions): StackMonitoringMonitoredResourcesSearch {
        return new StackMonitoringMonitoredResourcesSearch(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/stackMonitoringMonitoredResourcesSearch:StackMonitoringMonitoredResourcesSearch';

    /**
     * Returns true if the given object is an instance of StackMonitoringMonitoredResourcesSearch.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StackMonitoringMonitoredResourcesSearch {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StackMonitoringMonitoredResourcesSearch.__pulumiType;
    }

    public readonly compartmentId!: pulumi.Output<string>;
    public readonly compartmentIds!: pulumi.Output<string[] | undefined>;
    public readonly excludeFields!: pulumi.Output<string[] | undefined>;
    public readonly externalId!: pulumi.Output<string | undefined>;
    public readonly fields!: pulumi.Output<string[] | undefined>;
    public readonly hostName!: pulumi.Output<string | undefined>;
    public readonly hostNameContains!: pulumi.Output<string | undefined>;
    public /*out*/ readonly items!: pulumi.Output<outputs.StackMonitoringMonitoredResourcesSearchItem[]>;
    public readonly license!: pulumi.Output<string | undefined>;
    public readonly lifecycleStates!: pulumi.Output<string[] | undefined>;
    public readonly managementAgentId!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly nameContains!: pulumi.Output<string | undefined>;
    public readonly propertyEquals!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly resourceCategory!: pulumi.Output<string | undefined>;
    public readonly resourceTimeZone!: pulumi.Output<string | undefined>;
    public readonly sourceType!: pulumi.Output<string | undefined>;
    public readonly state!: pulumi.Output<string | undefined>;
    public readonly timeCreatedGreaterThanOrEqualTo!: pulumi.Output<string | undefined>;
    public readonly timeCreatedLessThan!: pulumi.Output<string | undefined>;
    public readonly timeUpdatedGreaterThanOrEqualTo!: pulumi.Output<string | undefined>;
    public readonly timeUpdatedLessThan!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.StackMonitoringMonitoredResourcesSearchTimeouts | undefined>;
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a StackMonitoringMonitoredResourcesSearch resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StackMonitoringMonitoredResourcesSearchArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StackMonitoringMonitoredResourcesSearchArgs | StackMonitoringMonitoredResourcesSearchState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StackMonitoringMonitoredResourcesSearchState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["compartmentIds"] = state ? state.compartmentIds : undefined;
            resourceInputs["excludeFields"] = state ? state.excludeFields : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["fields"] = state ? state.fields : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["hostNameContains"] = state ? state.hostNameContains : undefined;
            resourceInputs["items"] = state ? state.items : undefined;
            resourceInputs["license"] = state ? state.license : undefined;
            resourceInputs["lifecycleStates"] = state ? state.lifecycleStates : undefined;
            resourceInputs["managementAgentId"] = state ? state.managementAgentId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameContains"] = state ? state.nameContains : undefined;
            resourceInputs["propertyEquals"] = state ? state.propertyEquals : undefined;
            resourceInputs["resourceCategory"] = state ? state.resourceCategory : undefined;
            resourceInputs["resourceTimeZone"] = state ? state.resourceTimeZone : undefined;
            resourceInputs["sourceType"] = state ? state.sourceType : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreatedGreaterThanOrEqualTo"] = state ? state.timeCreatedGreaterThanOrEqualTo : undefined;
            resourceInputs["timeCreatedLessThan"] = state ? state.timeCreatedLessThan : undefined;
            resourceInputs["timeUpdatedGreaterThanOrEqualTo"] = state ? state.timeUpdatedGreaterThanOrEqualTo : undefined;
            resourceInputs["timeUpdatedLessThan"] = state ? state.timeUpdatedLessThan : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as StackMonitoringMonitoredResourcesSearchArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["compartmentIds"] = args ? args.compartmentIds : undefined;
            resourceInputs["excludeFields"] = args ? args.excludeFields : undefined;
            resourceInputs["externalId"] = args ? args.externalId : undefined;
            resourceInputs["fields"] = args ? args.fields : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["hostNameContains"] = args ? args.hostNameContains : undefined;
            resourceInputs["license"] = args ? args.license : undefined;
            resourceInputs["lifecycleStates"] = args ? args.lifecycleStates : undefined;
            resourceInputs["managementAgentId"] = args ? args.managementAgentId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameContains"] = args ? args.nameContains : undefined;
            resourceInputs["propertyEquals"] = args ? args.propertyEquals : undefined;
            resourceInputs["resourceCategory"] = args ? args.resourceCategory : undefined;
            resourceInputs["resourceTimeZone"] = args ? args.resourceTimeZone : undefined;
            resourceInputs["sourceType"] = args ? args.sourceType : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["timeCreatedGreaterThanOrEqualTo"] = args ? args.timeCreatedGreaterThanOrEqualTo : undefined;
            resourceInputs["timeCreatedLessThan"] = args ? args.timeCreatedLessThan : undefined;
            resourceInputs["timeUpdatedGreaterThanOrEqualTo"] = args ? args.timeUpdatedGreaterThanOrEqualTo : undefined;
            resourceInputs["timeUpdatedLessThan"] = args ? args.timeUpdatedLessThan : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["items"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StackMonitoringMonitoredResourcesSearch.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StackMonitoringMonitoredResourcesSearch resources.
 */
export interface StackMonitoringMonitoredResourcesSearchState {
    compartmentId?: pulumi.Input<string>;
    compartmentIds?: pulumi.Input<pulumi.Input<string>[]>;
    excludeFields?: pulumi.Input<pulumi.Input<string>[]>;
    externalId?: pulumi.Input<string>;
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    hostName?: pulumi.Input<string>;
    hostNameContains?: pulumi.Input<string>;
    items?: pulumi.Input<pulumi.Input<inputs.StackMonitoringMonitoredResourcesSearchItem>[]>;
    license?: pulumi.Input<string>;
    lifecycleStates?: pulumi.Input<pulumi.Input<string>[]>;
    managementAgentId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameContains?: pulumi.Input<string>;
    propertyEquals?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    resourceCategory?: pulumi.Input<string>;
    resourceTimeZone?: pulumi.Input<string>;
    sourceType?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreatedGreaterThanOrEqualTo?: pulumi.Input<string>;
    timeCreatedLessThan?: pulumi.Input<string>;
    timeUpdatedGreaterThanOrEqualTo?: pulumi.Input<string>;
    timeUpdatedLessThan?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StackMonitoringMonitoredResourcesSearchTimeouts>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StackMonitoringMonitoredResourcesSearch resource.
 */
export interface StackMonitoringMonitoredResourcesSearchArgs {
    compartmentId: pulumi.Input<string>;
    compartmentIds?: pulumi.Input<pulumi.Input<string>[]>;
    excludeFields?: pulumi.Input<pulumi.Input<string>[]>;
    externalId?: pulumi.Input<string>;
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    hostName?: pulumi.Input<string>;
    hostNameContains?: pulumi.Input<string>;
    license?: pulumi.Input<string>;
    lifecycleStates?: pulumi.Input<pulumi.Input<string>[]>;
    managementAgentId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameContains?: pulumi.Input<string>;
    propertyEquals?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    resourceCategory?: pulumi.Input<string>;
    resourceTimeZone?: pulumi.Input<string>;
    sourceType?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreatedGreaterThanOrEqualTo?: pulumi.Input<string>;
    timeCreatedLessThan?: pulumi.Input<string>;
    timeUpdatedGreaterThanOrEqualTo?: pulumi.Input<string>;
    timeUpdatedLessThan?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StackMonitoringMonitoredResourcesSearchTimeouts>;
    type?: pulumi.Input<string>;
}
