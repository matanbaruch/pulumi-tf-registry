// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCoreIpsecConnectionTunnelError(args: GetCoreIpsecConnectionTunnelErrorArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreIpsecConnectionTunnelErrorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreIpsecConnectionTunnelError:getCoreIpsecConnectionTunnelError", {
        "id": args.id,
        "ipsecId": args.ipsecId,
        "tunnelId": args.tunnelId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreIpsecConnectionTunnelError.
 */
export interface GetCoreIpsecConnectionTunnelErrorArgs {
    id?: string;
    ipsecId: string;
    tunnelId: string;
}

/**
 * A collection of values returned by getCoreIpsecConnectionTunnelError.
 */
export interface GetCoreIpsecConnectionTunnelErrorResult {
    readonly errorCode: string;
    readonly errorDescription: string;
    readonly id: string;
    readonly ipsecId: string;
    readonly ociResourcesLink: string;
    readonly solution: string;
    readonly timestamp: string;
    readonly tunnelId: string;
}
export function getCoreIpsecConnectionTunnelErrorOutput(args: GetCoreIpsecConnectionTunnelErrorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreIpsecConnectionTunnelErrorResult> {
    return pulumi.output(args).apply((a: any) => getCoreIpsecConnectionTunnelError(a, opts))
}

/**
 * A collection of arguments for invoking getCoreIpsecConnectionTunnelError.
 */
export interface GetCoreIpsecConnectionTunnelErrorOutputArgs {
    id?: pulumi.Input<string>;
    ipsecId: pulumi.Input<string>;
    tunnelId: pulumi.Input<string>;
}
