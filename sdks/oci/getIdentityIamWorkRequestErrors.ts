// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityIamWorkRequestErrors(args: GetIdentityIamWorkRequestErrorsArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityIamWorkRequestErrorsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityIamWorkRequestErrors:getIdentityIamWorkRequestErrors", {
        "filters": args.filters,
        "iamWorkRequestId": args.iamWorkRequestId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityIamWorkRequestErrors.
 */
export interface GetIdentityIamWorkRequestErrorsArgs {
    filters?: inputs.GetIdentityIamWorkRequestErrorsFilter[];
    iamWorkRequestId: string;
    id?: string;
}

/**
 * A collection of values returned by getIdentityIamWorkRequestErrors.
 */
export interface GetIdentityIamWorkRequestErrorsResult {
    readonly filters?: outputs.GetIdentityIamWorkRequestErrorsFilter[];
    readonly iamWorkRequestErrors: outputs.GetIdentityIamWorkRequestErrorsIamWorkRequestError[];
    readonly iamWorkRequestId: string;
    readonly id: string;
}
export function getIdentityIamWorkRequestErrorsOutput(args: GetIdentityIamWorkRequestErrorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityIamWorkRequestErrorsResult> {
    return pulumi.output(args).apply((a: any) => getIdentityIamWorkRequestErrors(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityIamWorkRequestErrors.
 */
export interface GetIdentityIamWorkRequestErrorsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetIdentityIamWorkRequestErrorsFilterArgs>[]>;
    iamWorkRequestId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
