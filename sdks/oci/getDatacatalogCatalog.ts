// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatacatalogCatalog(args: GetDatacatalogCatalogArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacatalogCatalogResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatacatalogCatalog:getDatacatalogCatalog", {
        "catalogId": args.catalogId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacatalogCatalog.
 */
export interface GetDatacatalogCatalogArgs {
    catalogId: string;
}

/**
 * A collection of values returned by getDatacatalogCatalog.
 */
export interface GetDatacatalogCatalogResult {
    readonly attachedCatalogPrivateEndpoints: string[];
    readonly catalogId: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly locks: outputs.GetDatacatalogCatalogLock[];
    readonly numberOfObjects: number;
    readonly serviceApiUrl: string;
    readonly serviceConsoleUrl: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getDatacatalogCatalogOutput(args: GetDatacatalogCatalogOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacatalogCatalogResult> {
    return pulumi.output(args).apply((a: any) => getDatacatalogCatalog(a, opts))
}

/**
 * A collection of arguments for invoking getDatacatalogCatalog.
 */
export interface GetDatacatalogCatalogOutputArgs {
    catalogId: pulumi.Input<string>;
}
