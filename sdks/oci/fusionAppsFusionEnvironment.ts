// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FusionAppsFusionEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing FusionAppsFusionEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FusionAppsFusionEnvironmentState, opts?: pulumi.CustomResourceOptions): FusionAppsFusionEnvironment {
        return new FusionAppsFusionEnvironment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/fusionAppsFusionEnvironment:FusionAppsFusionEnvironment';

    /**
     * Returns true if the given object is an instance of FusionAppsFusionEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FusionAppsFusionEnvironment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FusionAppsFusionEnvironment.__pulumiType;
    }

    public readonly additionalLanguagePacks!: pulumi.Output<string[]>;
    public /*out*/ readonly appliedPatchBundles!: pulumi.Output<string[]>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly createFusionEnvironmentAdminUserDetails!: pulumi.Output<outputs.FusionAppsFusionEnvironmentCreateFusionEnvironmentAdminUserDetails>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly dnsPrefix!: pulumi.Output<string>;
    public /*out*/ readonly domainId!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly fusionEnvironmentFamilyId!: pulumi.Output<string>;
    public readonly fusionEnvironmentType!: pulumi.Output<string>;
    public /*out*/ readonly idcsDomainUrl!: pulumi.Output<string>;
    public /*out*/ readonly isBreakGlassEnabled!: pulumi.Output<boolean>;
    public readonly kmsKeyId!: pulumi.Output<string>;
    public /*out*/ readonly kmsKeyInfos!: pulumi.Output<outputs.FusionAppsFusionEnvironmentKmsKeyInfo[]>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public /*out*/ readonly lockboxId!: pulumi.Output<string>;
    public readonly maintenancePolicy!: pulumi.Output<outputs.FusionAppsFusionEnvironmentMaintenancePolicy | undefined>;
    public /*out*/ readonly publicUrl!: pulumi.Output<string>;
    public /*out*/ readonly refreshes!: pulumi.Output<outputs.FusionAppsFusionEnvironmentRefresh[]>;
    public readonly rules!: pulumi.Output<outputs.FusionAppsFusionEnvironmentRule[] | undefined>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly subscriptionIds!: pulumi.Output<string[]>;
    public /*out*/ readonly systemName!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpcomingMaintenance!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.FusionAppsFusionEnvironmentTimeouts | undefined>;
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a FusionAppsFusionEnvironment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FusionAppsFusionEnvironmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FusionAppsFusionEnvironmentArgs | FusionAppsFusionEnvironmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FusionAppsFusionEnvironmentState | undefined;
            resourceInputs["additionalLanguagePacks"] = state ? state.additionalLanguagePacks : undefined;
            resourceInputs["appliedPatchBundles"] = state ? state.appliedPatchBundles : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["createFusionEnvironmentAdminUserDetails"] = state ? state.createFusionEnvironmentAdminUserDetails : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["dnsPrefix"] = state ? state.dnsPrefix : undefined;
            resourceInputs["domainId"] = state ? state.domainId : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["fusionEnvironmentFamilyId"] = state ? state.fusionEnvironmentFamilyId : undefined;
            resourceInputs["fusionEnvironmentType"] = state ? state.fusionEnvironmentType : undefined;
            resourceInputs["idcsDomainUrl"] = state ? state.idcsDomainUrl : undefined;
            resourceInputs["isBreakGlassEnabled"] = state ? state.isBreakGlassEnabled : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["kmsKeyInfos"] = state ? state.kmsKeyInfos : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["lockboxId"] = state ? state.lockboxId : undefined;
            resourceInputs["maintenancePolicy"] = state ? state.maintenancePolicy : undefined;
            resourceInputs["publicUrl"] = state ? state.publicUrl : undefined;
            resourceInputs["refreshes"] = state ? state.refreshes : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["subscriptionIds"] = state ? state.subscriptionIds : undefined;
            resourceInputs["systemName"] = state ? state.systemName : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpcomingMaintenance"] = state ? state.timeUpcomingMaintenance : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as FusionAppsFusionEnvironmentArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.createFusionEnvironmentAdminUserDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'createFusionEnvironmentAdminUserDetails'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.fusionEnvironmentFamilyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fusionEnvironmentFamilyId'");
            }
            if ((!args || args.fusionEnvironmentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fusionEnvironmentType'");
            }
            resourceInputs["additionalLanguagePacks"] = args ? args.additionalLanguagePacks : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["createFusionEnvironmentAdminUserDetails"] = args ? args.createFusionEnvironmentAdminUserDetails : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["dnsPrefix"] = args ? args.dnsPrefix : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["fusionEnvironmentFamilyId"] = args ? args.fusionEnvironmentFamilyId : undefined;
            resourceInputs["fusionEnvironmentType"] = args ? args.fusionEnvironmentType : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["maintenancePolicy"] = args ? args.maintenancePolicy : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["appliedPatchBundles"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["idcsDomainUrl"] = undefined /*out*/;
            resourceInputs["isBreakGlassEnabled"] = undefined /*out*/;
            resourceInputs["kmsKeyInfos"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["lockboxId"] = undefined /*out*/;
            resourceInputs["publicUrl"] = undefined /*out*/;
            resourceInputs["refreshes"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["subscriptionIds"] = undefined /*out*/;
            resourceInputs["systemName"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpcomingMaintenance"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FusionAppsFusionEnvironment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FusionAppsFusionEnvironment resources.
 */
export interface FusionAppsFusionEnvironmentState {
    additionalLanguagePacks?: pulumi.Input<pulumi.Input<string>[]>;
    appliedPatchBundles?: pulumi.Input<pulumi.Input<string>[]>;
    compartmentId?: pulumi.Input<string>;
    createFusionEnvironmentAdminUserDetails?: pulumi.Input<inputs.FusionAppsFusionEnvironmentCreateFusionEnvironmentAdminUserDetails>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    dnsPrefix?: pulumi.Input<string>;
    domainId?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    fusionEnvironmentFamilyId?: pulumi.Input<string>;
    fusionEnvironmentType?: pulumi.Input<string>;
    idcsDomainUrl?: pulumi.Input<string>;
    isBreakGlassEnabled?: pulumi.Input<boolean>;
    kmsKeyId?: pulumi.Input<string>;
    kmsKeyInfos?: pulumi.Input<pulumi.Input<inputs.FusionAppsFusionEnvironmentKmsKeyInfo>[]>;
    lifecycleDetails?: pulumi.Input<string>;
    lockboxId?: pulumi.Input<string>;
    maintenancePolicy?: pulumi.Input<inputs.FusionAppsFusionEnvironmentMaintenancePolicy>;
    publicUrl?: pulumi.Input<string>;
    refreshes?: pulumi.Input<pulumi.Input<inputs.FusionAppsFusionEnvironmentRefresh>[]>;
    rules?: pulumi.Input<pulumi.Input<inputs.FusionAppsFusionEnvironmentRule>[]>;
    state?: pulumi.Input<string>;
    subscriptionIds?: pulumi.Input<pulumi.Input<string>[]>;
    systemName?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeUpcomingMaintenance?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.FusionAppsFusionEnvironmentTimeouts>;
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FusionAppsFusionEnvironment resource.
 */
export interface FusionAppsFusionEnvironmentArgs {
    additionalLanguagePacks?: pulumi.Input<pulumi.Input<string>[]>;
    compartmentId: pulumi.Input<string>;
    createFusionEnvironmentAdminUserDetails: pulumi.Input<inputs.FusionAppsFusionEnvironmentCreateFusionEnvironmentAdminUserDetails>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    dnsPrefix?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    fusionEnvironmentFamilyId: pulumi.Input<string>;
    fusionEnvironmentType: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    maintenancePolicy?: pulumi.Input<inputs.FusionAppsFusionEnvironmentMaintenancePolicy>;
    rules?: pulumi.Input<pulumi.Input<inputs.FusionAppsFusionEnvironmentRule>[]>;
    timeouts?: pulumi.Input<inputs.FusionAppsFusionEnvironmentTimeouts>;
}
