// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OpsiNewsReport extends pulumi.CustomResource {
    /**
     * Get an existing OpsiNewsReport resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OpsiNewsReportState, opts?: pulumi.CustomResourceOptions): OpsiNewsReport {
        return new OpsiNewsReport(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/opsiNewsReport:OpsiNewsReport';

    /**
     * Returns true if the given object is an instance of OpsiNewsReport.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OpsiNewsReport {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OpsiNewsReport.__pulumiType;
    }

    public readonly areChildCompartmentsIncluded!: pulumi.Output<boolean>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly contentTypes!: pulumi.Output<outputs.OpsiNewsReportContentTypes>;
    public readonly dayOfWeek!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly locale!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly newsFrequency!: pulumi.Output<string>;
    public readonly onsTopicId!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.OpsiNewsReportTimeouts | undefined>;

    /**
     * Create a OpsiNewsReport resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OpsiNewsReportArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OpsiNewsReportArgs | OpsiNewsReportState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OpsiNewsReportState | undefined;
            resourceInputs["areChildCompartmentsIncluded"] = state ? state.areChildCompartmentsIncluded : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["contentTypes"] = state ? state.contentTypes : undefined;
            resourceInputs["dayOfWeek"] = state ? state.dayOfWeek : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["locale"] = state ? state.locale : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["newsFrequency"] = state ? state.newsFrequency : undefined;
            resourceInputs["onsTopicId"] = state ? state.onsTopicId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as OpsiNewsReportArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.contentTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contentTypes'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.locale === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locale'");
            }
            if ((!args || args.newsFrequency === undefined) && !opts.urn) {
                throw new Error("Missing required property 'newsFrequency'");
            }
            if ((!args || args.onsTopicId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'onsTopicId'");
            }
            resourceInputs["areChildCompartmentsIncluded"] = args ? args.areChildCompartmentsIncluded : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["contentTypes"] = args ? args.contentTypes : undefined;
            resourceInputs["dayOfWeek"] = args ? args.dayOfWeek : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["locale"] = args ? args.locale : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["newsFrequency"] = args ? args.newsFrequency : undefined;
            resourceInputs["onsTopicId"] = args ? args.onsTopicId : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OpsiNewsReport.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OpsiNewsReport resources.
 */
export interface OpsiNewsReportState {
    areChildCompartmentsIncluded?: pulumi.Input<boolean>;
    compartmentId?: pulumi.Input<string>;
    contentTypes?: pulumi.Input<inputs.OpsiNewsReportContentTypes>;
    dayOfWeek?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lifecycleDetails?: pulumi.Input<string>;
    locale?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    newsFrequency?: pulumi.Input<string>;
    onsTopicId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OpsiNewsReportTimeouts>;
}

/**
 * The set of arguments for constructing a OpsiNewsReport resource.
 */
export interface OpsiNewsReportArgs {
    areChildCompartmentsIncluded?: pulumi.Input<boolean>;
    compartmentId: pulumi.Input<string>;
    contentTypes: pulumi.Input<inputs.OpsiNewsReportContentTypes>;
    dayOfWeek?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    locale: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    newsFrequency: pulumi.Input<string>;
    onsTopicId: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OpsiNewsReportTimeouts>;
}
