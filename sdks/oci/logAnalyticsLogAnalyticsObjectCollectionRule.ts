// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LogAnalyticsLogAnalyticsObjectCollectionRule extends pulumi.CustomResource {
    /**
     * Get an existing LogAnalyticsLogAnalyticsObjectCollectionRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogAnalyticsLogAnalyticsObjectCollectionRuleState, opts?: pulumi.CustomResourceOptions): LogAnalyticsLogAnalyticsObjectCollectionRule {
        return new LogAnalyticsLogAnalyticsObjectCollectionRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/logAnalyticsLogAnalyticsObjectCollectionRule:LogAnalyticsLogAnalyticsObjectCollectionRule';

    /**
     * Returns true if the given object is an instance of LogAnalyticsLogAnalyticsObjectCollectionRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogAnalyticsLogAnalyticsObjectCollectionRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogAnalyticsLogAnalyticsObjectCollectionRule.__pulumiType;
    }

    public readonly charEncoding!: pulumi.Output<string>;
    public readonly collectionType!: pulumi.Output<string>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string>;
    public readonly entityId!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly isEnabled!: pulumi.Output<boolean>;
    public readonly isForceHistoricCollection!: pulumi.Output<boolean>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly logGroupId!: pulumi.Output<string>;
    public readonly logSet!: pulumi.Output<string>;
    public readonly logSetExtRegex!: pulumi.Output<string>;
    public readonly logSetKey!: pulumi.Output<string>;
    public readonly logSourceName!: pulumi.Output<string>;
    public readonly logType!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly namespace!: pulumi.Output<string>;
    public readonly objectNameFilters!: pulumi.Output<string[] | undefined>;
    public readonly osBucketName!: pulumi.Output<string>;
    public readonly osNamespace!: pulumi.Output<string>;
    public readonly overrides!: pulumi.Output<outputs.LogAnalyticsLogAnalyticsObjectCollectionRuleOverride[] | undefined>;
    public readonly pollSince!: pulumi.Output<string>;
    public readonly pollTill!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.LogAnalyticsLogAnalyticsObjectCollectionRuleTimeouts | undefined>;
    public readonly timezone!: pulumi.Output<string>;

    /**
     * Create a LogAnalyticsLogAnalyticsObjectCollectionRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogAnalyticsLogAnalyticsObjectCollectionRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogAnalyticsLogAnalyticsObjectCollectionRuleArgs | LogAnalyticsLogAnalyticsObjectCollectionRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogAnalyticsLogAnalyticsObjectCollectionRuleState | undefined;
            resourceInputs["charEncoding"] = state ? state.charEncoding : undefined;
            resourceInputs["collectionType"] = state ? state.collectionType : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["entityId"] = state ? state.entityId : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isEnabled"] = state ? state.isEnabled : undefined;
            resourceInputs["isForceHistoricCollection"] = state ? state.isForceHistoricCollection : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["logGroupId"] = state ? state.logGroupId : undefined;
            resourceInputs["logSet"] = state ? state.logSet : undefined;
            resourceInputs["logSetExtRegex"] = state ? state.logSetExtRegex : undefined;
            resourceInputs["logSetKey"] = state ? state.logSetKey : undefined;
            resourceInputs["logSourceName"] = state ? state.logSourceName : undefined;
            resourceInputs["logType"] = state ? state.logType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["objectNameFilters"] = state ? state.objectNameFilters : undefined;
            resourceInputs["osBucketName"] = state ? state.osBucketName : undefined;
            resourceInputs["osNamespace"] = state ? state.osNamespace : undefined;
            resourceInputs["overrides"] = state ? state.overrides : undefined;
            resourceInputs["pollSince"] = state ? state.pollSince : undefined;
            resourceInputs["pollTill"] = state ? state.pollTill : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
        } else {
            const args = argsOrState as LogAnalyticsLogAnalyticsObjectCollectionRuleArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.logGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logGroupId'");
            }
            if ((!args || args.logSourceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logSourceName'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if ((!args || args.osBucketName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'osBucketName'");
            }
            if ((!args || args.osNamespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'osNamespace'");
            }
            resourceInputs["charEncoding"] = args ? args.charEncoding : undefined;
            resourceInputs["collectionType"] = args ? args.collectionType : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["entityId"] = args ? args.entityId : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isEnabled"] = args ? args.isEnabled : undefined;
            resourceInputs["isForceHistoricCollection"] = args ? args.isForceHistoricCollection : undefined;
            resourceInputs["logGroupId"] = args ? args.logGroupId : undefined;
            resourceInputs["logSet"] = args ? args.logSet : undefined;
            resourceInputs["logSetExtRegex"] = args ? args.logSetExtRegex : undefined;
            resourceInputs["logSetKey"] = args ? args.logSetKey : undefined;
            resourceInputs["logSourceName"] = args ? args.logSourceName : undefined;
            resourceInputs["logType"] = args ? args.logType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["objectNameFilters"] = args ? args.objectNameFilters : undefined;
            resourceInputs["osBucketName"] = args ? args.osBucketName : undefined;
            resourceInputs["osNamespace"] = args ? args.osNamespace : undefined;
            resourceInputs["overrides"] = args ? args.overrides : undefined;
            resourceInputs["pollSince"] = args ? args.pollSince : undefined;
            resourceInputs["pollTill"] = args ? args.pollTill : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogAnalyticsLogAnalyticsObjectCollectionRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LogAnalyticsLogAnalyticsObjectCollectionRule resources.
 */
export interface LogAnalyticsLogAnalyticsObjectCollectionRuleState {
    charEncoding?: pulumi.Input<string>;
    collectionType?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    entityId?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isEnabled?: pulumi.Input<boolean>;
    isForceHistoricCollection?: pulumi.Input<boolean>;
    lifecycleDetails?: pulumi.Input<string>;
    logGroupId?: pulumi.Input<string>;
    logSet?: pulumi.Input<string>;
    logSetExtRegex?: pulumi.Input<string>;
    logSetKey?: pulumi.Input<string>;
    logSourceName?: pulumi.Input<string>;
    logType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    objectNameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    osBucketName?: pulumi.Input<string>;
    osNamespace?: pulumi.Input<string>;
    overrides?: pulumi.Input<pulumi.Input<inputs.LogAnalyticsLogAnalyticsObjectCollectionRuleOverride>[]>;
    pollSince?: pulumi.Input<string>;
    pollTill?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.LogAnalyticsLogAnalyticsObjectCollectionRuleTimeouts>;
    timezone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogAnalyticsLogAnalyticsObjectCollectionRule resource.
 */
export interface LogAnalyticsLogAnalyticsObjectCollectionRuleArgs {
    charEncoding?: pulumi.Input<string>;
    collectionType?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    entityId?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isEnabled?: pulumi.Input<boolean>;
    isForceHistoricCollection?: pulumi.Input<boolean>;
    logGroupId: pulumi.Input<string>;
    logSet?: pulumi.Input<string>;
    logSetExtRegex?: pulumi.Input<string>;
    logSetKey?: pulumi.Input<string>;
    logSourceName: pulumi.Input<string>;
    logType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    objectNameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    osBucketName: pulumi.Input<string>;
    osNamespace: pulumi.Input<string>;
    overrides?: pulumi.Input<pulumi.Input<inputs.LogAnalyticsLogAnalyticsObjectCollectionRuleOverride>[]>;
    pollSince?: pulumi.Input<string>;
    pollTill?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.LogAnalyticsLogAnalyticsObjectCollectionRuleTimeouts>;
    timezone?: pulumi.Input<string>;
}
