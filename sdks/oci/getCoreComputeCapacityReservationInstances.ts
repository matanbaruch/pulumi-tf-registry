// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreComputeCapacityReservationInstances(args: GetCoreComputeCapacityReservationInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreComputeCapacityReservationInstancesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreComputeCapacityReservationInstances:getCoreComputeCapacityReservationInstances", {
        "availabilityDomain": args.availabilityDomain,
        "capacityReservationId": args.capacityReservationId,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreComputeCapacityReservationInstances.
 */
export interface GetCoreComputeCapacityReservationInstancesArgs {
    availabilityDomain?: string;
    capacityReservationId: string;
    compartmentId?: string;
    filters?: inputs.GetCoreComputeCapacityReservationInstancesFilter[];
    id?: string;
}

/**
 * A collection of values returned by getCoreComputeCapacityReservationInstances.
 */
export interface GetCoreComputeCapacityReservationInstancesResult {
    readonly availabilityDomain?: string;
    readonly capacityReservationId: string;
    readonly capacityReservationInstances: outputs.GetCoreComputeCapacityReservationInstancesCapacityReservationInstance[];
    readonly compartmentId?: string;
    readonly filters?: outputs.GetCoreComputeCapacityReservationInstancesFilter[];
    readonly id: string;
}
export function getCoreComputeCapacityReservationInstancesOutput(args: GetCoreComputeCapacityReservationInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreComputeCapacityReservationInstancesResult> {
    return pulumi.output(args).apply((a: any) => getCoreComputeCapacityReservationInstances(a, opts))
}

/**
 * A collection of arguments for invoking getCoreComputeCapacityReservationInstances.
 */
export interface GetCoreComputeCapacityReservationInstancesOutputArgs {
    availabilityDomain?: pulumi.Input<string>;
    capacityReservationId: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetCoreComputeCapacityReservationInstancesFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
