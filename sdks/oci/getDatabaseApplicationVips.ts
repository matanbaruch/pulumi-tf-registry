// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseApplicationVips(args: GetDatabaseApplicationVipsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseApplicationVipsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseApplicationVips:getDatabaseApplicationVips", {
        "cloudVmClusterId": args.cloudVmClusterId,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseApplicationVips.
 */
export interface GetDatabaseApplicationVipsArgs {
    cloudVmClusterId: string;
    compartmentId: string;
    filters?: inputs.GetDatabaseApplicationVipsFilter[];
    id?: string;
    state?: string;
}

/**
 * A collection of values returned by getDatabaseApplicationVips.
 */
export interface GetDatabaseApplicationVipsResult {
    readonly applicationVips: outputs.GetDatabaseApplicationVipsApplicationVip[];
    readonly cloudVmClusterId: string;
    readonly compartmentId: string;
    readonly filters?: outputs.GetDatabaseApplicationVipsFilter[];
    readonly id: string;
    readonly state?: string;
}
export function getDatabaseApplicationVipsOutput(args: GetDatabaseApplicationVipsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseApplicationVipsResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseApplicationVips(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseApplicationVips.
 */
export interface GetDatabaseApplicationVipsOutputArgs {
    cloudVmClusterId: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseApplicationVipsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
