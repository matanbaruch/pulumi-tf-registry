// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeSecurityAssessmentSecurityFeatures(args: GetDataSafeSecurityAssessmentSecurityFeaturesArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeSecurityAssessmentSecurityFeaturesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeSecurityAssessmentSecurityFeatures:getDataSafeSecurityAssessmentSecurityFeatures", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "id": args.id,
        "targetId": args.targetId,
        "targetsWithColumnEncryption": args.targetsWithColumnEncryption,
        "targetsWithDatabaseVault": args.targetsWithDatabaseVault,
        "targetsWithExternalAuthentication": args.targetsWithExternalAuthentication,
        "targetsWithFineGrainedAudit": args.targetsWithFineGrainedAudit,
        "targetsWithGlobalAuthentication": args.targetsWithGlobalAuthentication,
        "targetsWithNetworkEncryption": args.targetsWithNetworkEncryption,
        "targetsWithPasswordAuthentication": args.targetsWithPasswordAuthentication,
        "targetsWithPrivilegeAnalysis": args.targetsWithPrivilegeAnalysis,
        "targetsWithTablespaceEncryption": args.targetsWithTablespaceEncryption,
        "targetsWithTraditionalAudit": args.targetsWithTraditionalAudit,
        "targetsWithUnifiedAudit": args.targetsWithUnifiedAudit,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeSecurityAssessmentSecurityFeatures.
 */
export interface GetDataSafeSecurityAssessmentSecurityFeaturesArgs {
    accessLevel?: string;
    compartmentId: string;
    compartmentIdInSubtree?: boolean;
    filters?: inputs.GetDataSafeSecurityAssessmentSecurityFeaturesFilter[];
    id?: string;
    targetId?: string;
    targetsWithColumnEncryption?: string;
    targetsWithDatabaseVault?: string;
    targetsWithExternalAuthentication?: string;
    targetsWithFineGrainedAudit?: string;
    targetsWithGlobalAuthentication?: string;
    targetsWithNetworkEncryption?: string;
    targetsWithPasswordAuthentication?: string;
    targetsWithPrivilegeAnalysis?: string;
    targetsWithTablespaceEncryption?: string;
    targetsWithTraditionalAudit?: string;
    targetsWithUnifiedAudit?: string;
}

/**
 * A collection of values returned by getDataSafeSecurityAssessmentSecurityFeatures.
 */
export interface GetDataSafeSecurityAssessmentSecurityFeaturesResult {
    readonly accessLevel?: string;
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.GetDataSafeSecurityAssessmentSecurityFeaturesFilter[];
    readonly id: string;
    readonly securityFeatureCollections: outputs.GetDataSafeSecurityAssessmentSecurityFeaturesSecurityFeatureCollection[];
    readonly targetId?: string;
    readonly targetsWithColumnEncryption?: string;
    readonly targetsWithDatabaseVault?: string;
    readonly targetsWithExternalAuthentication?: string;
    readonly targetsWithFineGrainedAudit?: string;
    readonly targetsWithGlobalAuthentication?: string;
    readonly targetsWithNetworkEncryption?: string;
    readonly targetsWithPasswordAuthentication?: string;
    readonly targetsWithPrivilegeAnalysis?: string;
    readonly targetsWithTablespaceEncryption?: string;
    readonly targetsWithTraditionalAudit?: string;
    readonly targetsWithUnifiedAudit?: string;
}
export function getDataSafeSecurityAssessmentSecurityFeaturesOutput(args: GetDataSafeSecurityAssessmentSecurityFeaturesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeSecurityAssessmentSecurityFeaturesResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeSecurityAssessmentSecurityFeatures(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeSecurityAssessmentSecurityFeatures.
 */
export interface GetDataSafeSecurityAssessmentSecurityFeaturesOutputArgs {
    accessLevel?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataSafeSecurityAssessmentSecurityFeaturesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    targetId?: pulumi.Input<string>;
    targetsWithColumnEncryption?: pulumi.Input<string>;
    targetsWithDatabaseVault?: pulumi.Input<string>;
    targetsWithExternalAuthentication?: pulumi.Input<string>;
    targetsWithFineGrainedAudit?: pulumi.Input<string>;
    targetsWithGlobalAuthentication?: pulumi.Input<string>;
    targetsWithNetworkEncryption?: pulumi.Input<string>;
    targetsWithPasswordAuthentication?: pulumi.Input<string>;
    targetsWithPrivilegeAnalysis?: pulumi.Input<string>;
    targetsWithTablespaceEncryption?: pulumi.Input<string>;
    targetsWithTraditionalAudit?: pulumi.Input<string>;
    targetsWithUnifiedAudit?: pulumi.Input<string>;
}
