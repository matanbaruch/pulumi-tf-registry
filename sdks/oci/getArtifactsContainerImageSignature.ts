// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getArtifactsContainerImageSignature(args: GetArtifactsContainerImageSignatureArgs, opts?: pulumi.InvokeOptions): Promise<GetArtifactsContainerImageSignatureResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getArtifactsContainerImageSignature:getArtifactsContainerImageSignature", {
        "imageSignatureId": args.imageSignatureId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getArtifactsContainerImageSignature.
 */
export interface GetArtifactsContainerImageSignatureArgs {
    imageSignatureId: string;
}

/**
 * A collection of values returned by getArtifactsContainerImageSignature.
 */
export interface GetArtifactsContainerImageSignatureResult {
    readonly compartmentId: string;
    readonly createdBy: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly imageId: string;
    readonly imageSignatureId: string;
    readonly kmsKeyId: string;
    readonly kmsKeyVersionId: string;
    readonly message: string;
    readonly signature: string;
    readonly signingAlgorithm: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
}
export function getArtifactsContainerImageSignatureOutput(args: GetArtifactsContainerImageSignatureOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetArtifactsContainerImageSignatureResult> {
    return pulumi.output(args).apply((a: any) => getArtifactsContainerImageSignature(a, opts))
}

/**
 * A collection of arguments for invoking getArtifactsContainerImageSignature.
 */
export interface GetArtifactsContainerImageSignatureOutputArgs {
    imageSignatureId: pulumi.Input<string>;
}
