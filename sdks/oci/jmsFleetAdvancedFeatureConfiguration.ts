// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class JmsFleetAdvancedFeatureConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing JmsFleetAdvancedFeatureConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: JmsFleetAdvancedFeatureConfigurationState, opts?: pulumi.CustomResourceOptions): JmsFleetAdvancedFeatureConfiguration {
        return new JmsFleetAdvancedFeatureConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/jmsFleetAdvancedFeatureConfiguration:JmsFleetAdvancedFeatureConfiguration';

    /**
     * Returns true if the given object is an instance of JmsFleetAdvancedFeatureConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is JmsFleetAdvancedFeatureConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JmsFleetAdvancedFeatureConfiguration.__pulumiType;
    }

    public readonly advancedUsageTracking!: pulumi.Output<outputs.JmsFleetAdvancedFeatureConfigurationAdvancedUsageTracking | undefined>;
    public readonly analyticBucketName!: pulumi.Output<string>;
    public readonly analyticNamespace!: pulumi.Output<string>;
    public readonly cryptoEventAnalysis!: pulumi.Output<outputs.JmsFleetAdvancedFeatureConfigurationCryptoEventAnalysis | undefined>;
    public readonly fleetId!: pulumi.Output<string>;
    public readonly javaMigrationAnalysis!: pulumi.Output<outputs.JmsFleetAdvancedFeatureConfigurationJavaMigrationAnalysis | undefined>;
    public readonly jfrRecording!: pulumi.Output<outputs.JmsFleetAdvancedFeatureConfigurationJfrRecording | undefined>;
    public readonly lcm!: pulumi.Output<outputs.JmsFleetAdvancedFeatureConfigurationLcm | undefined>;
    public readonly performanceTuningAnalysis!: pulumi.Output<outputs.JmsFleetAdvancedFeatureConfigurationPerformanceTuningAnalysis | undefined>;
    public /*out*/ readonly timeLastModified!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.JmsFleetAdvancedFeatureConfigurationTimeouts | undefined>;

    /**
     * Create a JmsFleetAdvancedFeatureConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JmsFleetAdvancedFeatureConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: JmsFleetAdvancedFeatureConfigurationArgs | JmsFleetAdvancedFeatureConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as JmsFleetAdvancedFeatureConfigurationState | undefined;
            resourceInputs["advancedUsageTracking"] = state ? state.advancedUsageTracking : undefined;
            resourceInputs["analyticBucketName"] = state ? state.analyticBucketName : undefined;
            resourceInputs["analyticNamespace"] = state ? state.analyticNamespace : undefined;
            resourceInputs["cryptoEventAnalysis"] = state ? state.cryptoEventAnalysis : undefined;
            resourceInputs["fleetId"] = state ? state.fleetId : undefined;
            resourceInputs["javaMigrationAnalysis"] = state ? state.javaMigrationAnalysis : undefined;
            resourceInputs["jfrRecording"] = state ? state.jfrRecording : undefined;
            resourceInputs["lcm"] = state ? state.lcm : undefined;
            resourceInputs["performanceTuningAnalysis"] = state ? state.performanceTuningAnalysis : undefined;
            resourceInputs["timeLastModified"] = state ? state.timeLastModified : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as JmsFleetAdvancedFeatureConfigurationArgs | undefined;
            if ((!args || args.fleetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fleetId'");
            }
            resourceInputs["advancedUsageTracking"] = args ? args.advancedUsageTracking : undefined;
            resourceInputs["analyticBucketName"] = args ? args.analyticBucketName : undefined;
            resourceInputs["analyticNamespace"] = args ? args.analyticNamespace : undefined;
            resourceInputs["cryptoEventAnalysis"] = args ? args.cryptoEventAnalysis : undefined;
            resourceInputs["fleetId"] = args ? args.fleetId : undefined;
            resourceInputs["javaMigrationAnalysis"] = args ? args.javaMigrationAnalysis : undefined;
            resourceInputs["jfrRecording"] = args ? args.jfrRecording : undefined;
            resourceInputs["lcm"] = args ? args.lcm : undefined;
            resourceInputs["performanceTuningAnalysis"] = args ? args.performanceTuningAnalysis : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["timeLastModified"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(JmsFleetAdvancedFeatureConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering JmsFleetAdvancedFeatureConfiguration resources.
 */
export interface JmsFleetAdvancedFeatureConfigurationState {
    advancedUsageTracking?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationAdvancedUsageTracking>;
    analyticBucketName?: pulumi.Input<string>;
    analyticNamespace?: pulumi.Input<string>;
    cryptoEventAnalysis?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationCryptoEventAnalysis>;
    fleetId?: pulumi.Input<string>;
    javaMigrationAnalysis?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationJavaMigrationAnalysis>;
    jfrRecording?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationJfrRecording>;
    lcm?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationLcm>;
    performanceTuningAnalysis?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationPerformanceTuningAnalysis>;
    timeLastModified?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationTimeouts>;
}

/**
 * The set of arguments for constructing a JmsFleetAdvancedFeatureConfiguration resource.
 */
export interface JmsFleetAdvancedFeatureConfigurationArgs {
    advancedUsageTracking?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationAdvancedUsageTracking>;
    analyticBucketName?: pulumi.Input<string>;
    analyticNamespace?: pulumi.Input<string>;
    cryptoEventAnalysis?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationCryptoEventAnalysis>;
    fleetId: pulumi.Input<string>;
    javaMigrationAnalysis?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationJavaMigrationAnalysis>;
    jfrRecording?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationJfrRecording>;
    lcm?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationLcm>;
    performanceTuningAnalysis?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationPerformanceTuningAnalysis>;
    timeouts?: pulumi.Input<inputs.JmsFleetAdvancedFeatureConfigurationTimeouts>;
}
