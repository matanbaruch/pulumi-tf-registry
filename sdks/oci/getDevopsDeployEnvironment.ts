// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDevopsDeployEnvironment(args: GetDevopsDeployEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetDevopsDeployEnvironmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDevopsDeployEnvironment:getDevopsDeployEnvironment", {
        "deployEnvironmentId": args.deployEnvironmentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDevopsDeployEnvironment.
 */
export interface GetDevopsDeployEnvironmentArgs {
    deployEnvironmentId: string;
}

/**
 * A collection of values returned by getDevopsDeployEnvironment.
 */
export interface GetDevopsDeployEnvironmentResult {
    readonly clusterId: string;
    readonly compartmentId: string;
    readonly computeInstanceGroupSelectors: outputs.GetDevopsDeployEnvironmentComputeInstanceGroupSelector[];
    readonly definedTags: {[key: string]: string};
    readonly deployEnvironmentId: string;
    readonly deployEnvironmentType: string;
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly functionId: string;
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly networkChannels: outputs.GetDevopsDeployEnvironmentNetworkChannel[];
    readonly projectId: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getDevopsDeployEnvironmentOutput(args: GetDevopsDeployEnvironmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDevopsDeployEnvironmentResult> {
    return pulumi.output(args).apply((a: any) => getDevopsDeployEnvironment(a, opts))
}

/**
 * A collection of arguments for invoking getDevopsDeployEnvironment.
 */
export interface GetDevopsDeployEnvironmentOutputArgs {
    deployEnvironmentId: pulumi.Input<string>;
}
