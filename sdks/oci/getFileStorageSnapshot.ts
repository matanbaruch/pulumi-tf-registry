// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFileStorageSnapshot(args: GetFileStorageSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetFileStorageSnapshotResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getFileStorageSnapshot:getFileStorageSnapshot", {
        "snapshotId": args.snapshotId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFileStorageSnapshot.
 */
export interface GetFileStorageSnapshotArgs {
    snapshotId: string;
}

/**
 * A collection of values returned by getFileStorageSnapshot.
 */
export interface GetFileStorageSnapshotResult {
    readonly definedTags: {[key: string]: string};
    readonly expirationTime: string;
    readonly fileSystemId: string;
    readonly filesystemSnapshotPolicyId: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isCloneSource: boolean;
    readonly lifecycleDetails: string;
    readonly name: string;
    readonly provenanceId: string;
    readonly snapshotId: string;
    readonly snapshotTime: string;
    readonly snapshotType: string;
    readonly state: string;
    readonly timeCreated: string;
}
export function getFileStorageSnapshotOutput(args: GetFileStorageSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFileStorageSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getFileStorageSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getFileStorageSnapshot.
 */
export interface GetFileStorageSnapshotOutputArgs {
    snapshotId: pulumi.Input<string>;
}
