// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsubSubscriptionSubscriptions(args: GetOsubSubscriptionSubscriptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetOsubSubscriptionSubscriptionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsubSubscriptionSubscriptions:getOsubSubscriptionSubscriptions", {
        "buyerEmail": args.buyerEmail,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "isCommitInfoRequired": args.isCommitInfoRequired,
        "planNumber": args.planNumber,
        "subscriptionId": args.subscriptionId,
        "xOneGatewaySubscriptionId": args.xOneGatewaySubscriptionId,
        "xOneOriginRegion": args.xOneOriginRegion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsubSubscriptionSubscriptions.
 */
export interface GetOsubSubscriptionSubscriptionsArgs {
    buyerEmail?: string;
    compartmentId: string;
    filters?: inputs.GetOsubSubscriptionSubscriptionsFilter[];
    id?: string;
    isCommitInfoRequired?: boolean;
    planNumber?: string;
    subscriptionId?: string;
    xOneGatewaySubscriptionId?: string;
    xOneOriginRegion?: string;
}

/**
 * A collection of values returned by getOsubSubscriptionSubscriptions.
 */
export interface GetOsubSubscriptionSubscriptionsResult {
    readonly buyerEmail?: string;
    readonly compartmentId: string;
    readonly filters?: outputs.GetOsubSubscriptionSubscriptionsFilter[];
    readonly id: string;
    readonly isCommitInfoRequired?: boolean;
    readonly planNumber?: string;
    readonly subscriptionId?: string;
    readonly subscriptions: outputs.GetOsubSubscriptionSubscriptionsSubscription[];
    readonly xOneGatewaySubscriptionId?: string;
    readonly xOneOriginRegion?: string;
}
export function getOsubSubscriptionSubscriptionsOutput(args: GetOsubSubscriptionSubscriptionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsubSubscriptionSubscriptionsResult> {
    return pulumi.output(args).apply((a: any) => getOsubSubscriptionSubscriptions(a, opts))
}

/**
 * A collection of arguments for invoking getOsubSubscriptionSubscriptions.
 */
export interface GetOsubSubscriptionSubscriptionsOutputArgs {
    buyerEmail?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOsubSubscriptionSubscriptionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    isCommitInfoRequired?: pulumi.Input<boolean>;
    planNumber?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    xOneGatewaySubscriptionId?: pulumi.Input<string>;
    xOneOriginRegion?: pulumi.Input<string>;
}
