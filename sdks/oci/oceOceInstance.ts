// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OceOceInstance extends pulumi.CustomResource {
    /**
     * Get an existing OceOceInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OceOceInstanceState, opts?: pulumi.CustomResourceOptions): OceOceInstance {
        return new OceOceInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/oceOceInstance:OceOceInstance';

    /**
     * Returns true if the given object is an instance of OceOceInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OceOceInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OceOceInstance.__pulumiType;
    }

    public readonly addOnFeatures!: pulumi.Output<string[]>;
    public readonly adminEmail!: pulumi.Output<string>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string>;
    public readonly drRegion!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly guid!: pulumi.Output<string>;
    public readonly idcsAccessToken!: pulumi.Output<string>;
    public /*out*/ readonly idcsTenancy!: pulumi.Output<string>;
    public readonly instanceAccessType!: pulumi.Output<string>;
    public readonly instanceLicenseType!: pulumi.Output<string>;
    public readonly instanceUsageType!: pulumi.Output<string>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly objectStorageNamespace!: pulumi.Output<string>;
    public /*out*/ readonly service!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly stateMessage!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public readonly tenancyId!: pulumi.Output<string>;
    public readonly tenancyName!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.OceOceInstanceTimeouts | undefined>;
    public readonly upgradeSchedule!: pulumi.Output<string>;
    public readonly wafPrimaryDomain!: pulumi.Output<string>;

    /**
     * Create a OceOceInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OceOceInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OceOceInstanceArgs | OceOceInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OceOceInstanceState | undefined;
            resourceInputs["addOnFeatures"] = state ? state.addOnFeatures : undefined;
            resourceInputs["adminEmail"] = state ? state.adminEmail : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["drRegion"] = state ? state.drRegion : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["guid"] = state ? state.guid : undefined;
            resourceInputs["idcsAccessToken"] = state ? state.idcsAccessToken : undefined;
            resourceInputs["idcsTenancy"] = state ? state.idcsTenancy : undefined;
            resourceInputs["instanceAccessType"] = state ? state.instanceAccessType : undefined;
            resourceInputs["instanceLicenseType"] = state ? state.instanceLicenseType : undefined;
            resourceInputs["instanceUsageType"] = state ? state.instanceUsageType : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectStorageNamespace"] = state ? state.objectStorageNamespace : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateMessage"] = state ? state.stateMessage : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["tenancyId"] = state ? state.tenancyId : undefined;
            resourceInputs["tenancyName"] = state ? state.tenancyName : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["upgradeSchedule"] = state ? state.upgradeSchedule : undefined;
            resourceInputs["wafPrimaryDomain"] = state ? state.wafPrimaryDomain : undefined;
        } else {
            const args = argsOrState as OceOceInstanceArgs | undefined;
            if ((!args || args.adminEmail === undefined) && !opts.urn) {
                throw new Error("Missing required property 'adminEmail'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.idcsAccessToken === undefined) && !opts.urn) {
                throw new Error("Missing required property 'idcsAccessToken'");
            }
            if ((!args || args.objectStorageNamespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'objectStorageNamespace'");
            }
            if ((!args || args.tenancyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenancyId'");
            }
            if ((!args || args.tenancyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenancyName'");
            }
            resourceInputs["addOnFeatures"] = args ? args.addOnFeatures : undefined;
            resourceInputs["adminEmail"] = args ? args.adminEmail : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["drRegion"] = args ? args.drRegion : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["idcsAccessToken"] = args?.idcsAccessToken ? pulumi.secret(args.idcsAccessToken) : undefined;
            resourceInputs["instanceAccessType"] = args ? args.instanceAccessType : undefined;
            resourceInputs["instanceLicenseType"] = args ? args.instanceLicenseType : undefined;
            resourceInputs["instanceUsageType"] = args ? args.instanceUsageType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectStorageNamespace"] = args ? args.objectStorageNamespace : undefined;
            resourceInputs["tenancyId"] = args ? args.tenancyId : undefined;
            resourceInputs["tenancyName"] = args ? args.tenancyName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["upgradeSchedule"] = args ? args.upgradeSchedule : undefined;
            resourceInputs["wafPrimaryDomain"] = args ? args.wafPrimaryDomain : undefined;
            resourceInputs["guid"] = undefined /*out*/;
            resourceInputs["idcsTenancy"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["service"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateMessage"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["idcsAccessToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(OceOceInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OceOceInstance resources.
 */
export interface OceOceInstanceState {
    addOnFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    adminEmail?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    drRegion?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    guid?: pulumi.Input<string>;
    idcsAccessToken?: pulumi.Input<string>;
    idcsTenancy?: pulumi.Input<string>;
    instanceAccessType?: pulumi.Input<string>;
    instanceLicenseType?: pulumi.Input<string>;
    instanceUsageType?: pulumi.Input<string>;
    lifecycleDetails?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectStorageNamespace?: pulumi.Input<string>;
    service?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    state?: pulumi.Input<string>;
    stateMessage?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenancyId?: pulumi.Input<string>;
    tenancyName?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OceOceInstanceTimeouts>;
    upgradeSchedule?: pulumi.Input<string>;
    wafPrimaryDomain?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OceOceInstance resource.
 */
export interface OceOceInstanceArgs {
    addOnFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    adminEmail: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    drRegion?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    idcsAccessToken: pulumi.Input<string>;
    instanceAccessType?: pulumi.Input<string>;
    instanceLicenseType?: pulumi.Input<string>;
    instanceUsageType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectStorageNamespace: pulumi.Input<string>;
    tenancyId: pulumi.Input<string>;
    tenancyName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OceOceInstanceTimeouts>;
    upgradeSchedule?: pulumi.Input<string>;
    wafPrimaryDomain?: pulumi.Input<string>;
}
