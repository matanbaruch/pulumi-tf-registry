// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsManagementHubProfiles(args?: GetOsManagementHubProfilesArgs, opts?: pulumi.InvokeOptions): Promise<GetOsManagementHubProfilesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsManagementHubProfiles:getOsManagementHubProfiles", {
        "archType": args.archType,
        "compartmentId": args.compartmentId,
        "displayNameContains": args.displayNameContains,
        "displayNames": args.displayNames,
        "filters": args.filters,
        "id": args.id,
        "isDefaultProfile": args.isDefaultProfile,
        "isServiceProvidedProfile": args.isServiceProvidedProfile,
        "osFamily": args.osFamily,
        "profileId": args.profileId,
        "profileTypes": args.profileTypes,
        "registrationTypes": args.registrationTypes,
        "state": args.state,
        "vendorName": args.vendorName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsManagementHubProfiles.
 */
export interface GetOsManagementHubProfilesArgs {
    archType?: string;
    compartmentId?: string;
    displayNameContains?: string;
    displayNames?: string[];
    filters?: inputs.GetOsManagementHubProfilesFilter[];
    id?: string;
    isDefaultProfile?: boolean;
    isServiceProvidedProfile?: boolean;
    osFamily?: string;
    profileId?: string;
    profileTypes?: string[];
    registrationTypes?: string[];
    state?: string;
    vendorName?: string;
}

/**
 * A collection of values returned by getOsManagementHubProfiles.
 */
export interface GetOsManagementHubProfilesResult {
    readonly archType?: string;
    readonly compartmentId?: string;
    readonly displayNameContains?: string;
    readonly displayNames?: string[];
    readonly filters?: outputs.GetOsManagementHubProfilesFilter[];
    readonly id: string;
    readonly isDefaultProfile?: boolean;
    readonly isServiceProvidedProfile?: boolean;
    readonly osFamily?: string;
    readonly profileCollections: outputs.GetOsManagementHubProfilesProfileCollection[];
    readonly profileId?: string;
    readonly profileTypes?: string[];
    readonly registrationTypes?: string[];
    readonly state?: string;
    readonly vendorName?: string;
}
export function getOsManagementHubProfilesOutput(args?: GetOsManagementHubProfilesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsManagementHubProfilesResult> {
    return pulumi.output(args).apply((a: any) => getOsManagementHubProfiles(a, opts))
}

/**
 * A collection of arguments for invoking getOsManagementHubProfiles.
 */
export interface GetOsManagementHubProfilesOutputArgs {
    archType?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    displayNameContains?: pulumi.Input<string>;
    displayNames?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOsManagementHubProfilesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    isDefaultProfile?: pulumi.Input<boolean>;
    isServiceProvidedProfile?: pulumi.Input<boolean>;
    osFamily?: pulumi.Input<string>;
    profileId?: pulumi.Input<string>;
    profileTypes?: pulumi.Input<pulumi.Input<string>[]>;
    registrationTypes?: pulumi.Input<pulumi.Input<string>[]>;
    state?: pulumi.Input<string>;
    vendorName?: pulumi.Input<string>;
}
