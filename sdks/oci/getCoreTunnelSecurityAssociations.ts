// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreTunnelSecurityAssociations(args: GetCoreTunnelSecurityAssociationsArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreTunnelSecurityAssociationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreTunnelSecurityAssociations:getCoreTunnelSecurityAssociations", {
        "filters": args.filters,
        "id": args.id,
        "ipsecId": args.ipsecId,
        "tunnelId": args.tunnelId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreTunnelSecurityAssociations.
 */
export interface GetCoreTunnelSecurityAssociationsArgs {
    filters?: inputs.GetCoreTunnelSecurityAssociationsFilter[];
    id?: string;
    ipsecId: string;
    tunnelId: string;
}

/**
 * A collection of values returned by getCoreTunnelSecurityAssociations.
 */
export interface GetCoreTunnelSecurityAssociationsResult {
    readonly filters?: outputs.GetCoreTunnelSecurityAssociationsFilter[];
    readonly id: string;
    readonly ipsecId: string;
    readonly tunnelId: string;
    readonly tunnelSecurityAssociations: outputs.GetCoreTunnelSecurityAssociationsTunnelSecurityAssociation[];
}
export function getCoreTunnelSecurityAssociationsOutput(args: GetCoreTunnelSecurityAssociationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreTunnelSecurityAssociationsResult> {
    return pulumi.output(args).apply((a: any) => getCoreTunnelSecurityAssociations(a, opts))
}

/**
 * A collection of arguments for invoking getCoreTunnelSecurityAssociations.
 */
export interface GetCoreTunnelSecurityAssociationsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetCoreTunnelSecurityAssociationsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    ipsecId: pulumi.Input<string>;
    tunnelId: pulumi.Input<string>;
}
