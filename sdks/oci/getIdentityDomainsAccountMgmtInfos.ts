// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityDomainsAccountMgmtInfos(args: GetIdentityDomainsAccountMgmtInfosArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityDomainsAccountMgmtInfosResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityDomainsAccountMgmtInfos:getIdentityDomainsAccountMgmtInfos", {
        "accountMgmtInfoCount": args.accountMgmtInfoCount,
        "accountMgmtInfoFilter": args.accountMgmtInfoFilter,
        "attributeSets": args.attributeSets,
        "attributes": args.attributes,
        "authorization": args.authorization,
        "compartmentId": args.compartmentId,
        "idcsEndpoint": args.idcsEndpoint,
        "resourceTypeSchemaVersion": args.resourceTypeSchemaVersion,
        "sortBy": args.sortBy,
        "sortOrder": args.sortOrder,
        "startIndex": args.startIndex,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityDomainsAccountMgmtInfos.
 */
export interface GetIdentityDomainsAccountMgmtInfosArgs {
    accountMgmtInfoCount?: number;
    accountMgmtInfoFilter?: string;
    attributeSets?: string[];
    attributes?: string;
    authorization?: string;
    compartmentId?: string;
    idcsEndpoint: string;
    resourceTypeSchemaVersion?: string;
    sortBy?: string;
    sortOrder?: string;
    startIndex?: number;
}

/**
 * A collection of values returned by getIdentityDomainsAccountMgmtInfos.
 */
export interface GetIdentityDomainsAccountMgmtInfosResult {
    readonly accountMgmtInfoCount?: number;
    readonly accountMgmtInfoFilter?: string;
    readonly accountMgmtInfos: outputs.GetIdentityDomainsAccountMgmtInfosAccountMgmtInfo[];
    readonly attributeSets?: string[];
    readonly attributes?: string;
    readonly authorization?: string;
    readonly compartmentId?: string;
    readonly id: string;
    readonly idcsEndpoint: string;
    readonly itemsPerPage: number;
    readonly resourceTypeSchemaVersion?: string;
    readonly schemas: string[];
    readonly sortBy?: string;
    readonly sortOrder?: string;
    readonly startIndex?: number;
    readonly totalResults: number;
}
export function getIdentityDomainsAccountMgmtInfosOutput(args: GetIdentityDomainsAccountMgmtInfosOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityDomainsAccountMgmtInfosResult> {
    return pulumi.output(args).apply((a: any) => getIdentityDomainsAccountMgmtInfos(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityDomainsAccountMgmtInfos.
 */
export interface GetIdentityDomainsAccountMgmtInfosOutputArgs {
    accountMgmtInfoCount?: pulumi.Input<number>;
    accountMgmtInfoFilter?: pulumi.Input<string>;
    attributeSets?: pulumi.Input<pulumi.Input<string>[]>;
    attributes?: pulumi.Input<string>;
    authorization?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    idcsEndpoint: pulumi.Input<string>;
    resourceTypeSchemaVersion?: pulumi.Input<string>;
    sortBy?: pulumi.Input<string>;
    sortOrder?: pulumi.Input<string>;
    startIndex?: pulumi.Input<number>;
}
