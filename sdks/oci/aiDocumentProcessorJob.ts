// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AiDocumentProcessorJob extends pulumi.CustomResource {
    /**
     * Get an existing AiDocumentProcessorJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AiDocumentProcessorJobState, opts?: pulumi.CustomResourceOptions): AiDocumentProcessorJob {
        return new AiDocumentProcessorJob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/aiDocumentProcessorJob:AiDocumentProcessorJob';

    /**
     * Returns true if the given object is an instance of AiDocumentProcessorJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AiDocumentProcessorJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AiDocumentProcessorJob.__pulumiType;
    }

    public readonly compartmentId!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly inputLocation!: pulumi.Output<outputs.AiDocumentProcessorJobInputLocation>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly outputLocation!: pulumi.Output<outputs.AiDocumentProcessorJobOutputLocation>;
    public /*out*/ readonly percentComplete!: pulumi.Output<number>;
    public readonly processorConfig!: pulumi.Output<outputs.AiDocumentProcessorJobProcessorConfig>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeAccepted!: pulumi.Output<string>;
    public /*out*/ readonly timeFinished!: pulumi.Output<string>;
    public /*out*/ readonly timeStarted!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.AiDocumentProcessorJobTimeouts | undefined>;

    /**
     * Create a AiDocumentProcessorJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AiDocumentProcessorJobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AiDocumentProcessorJobArgs | AiDocumentProcessorJobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AiDocumentProcessorJobState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["inputLocation"] = state ? state.inputLocation : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["outputLocation"] = state ? state.outputLocation : undefined;
            resourceInputs["percentComplete"] = state ? state.percentComplete : undefined;
            resourceInputs["processorConfig"] = state ? state.processorConfig : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeAccepted"] = state ? state.timeAccepted : undefined;
            resourceInputs["timeFinished"] = state ? state.timeFinished : undefined;
            resourceInputs["timeStarted"] = state ? state.timeStarted : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AiDocumentProcessorJobArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.inputLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'inputLocation'");
            }
            if ((!args || args.outputLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'outputLocation'");
            }
            if ((!args || args.processorConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'processorConfig'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["inputLocation"] = args ? args.inputLocation : undefined;
            resourceInputs["outputLocation"] = args ? args.outputLocation : undefined;
            resourceInputs["processorConfig"] = args ? args.processorConfig : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["percentComplete"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeAccepted"] = undefined /*out*/;
            resourceInputs["timeFinished"] = undefined /*out*/;
            resourceInputs["timeStarted"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AiDocumentProcessorJob.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AiDocumentProcessorJob resources.
 */
export interface AiDocumentProcessorJobState {
    compartmentId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    inputLocation?: pulumi.Input<inputs.AiDocumentProcessorJobInputLocation>;
    lifecycleDetails?: pulumi.Input<string>;
    outputLocation?: pulumi.Input<inputs.AiDocumentProcessorJobOutputLocation>;
    percentComplete?: pulumi.Input<number>;
    processorConfig?: pulumi.Input<inputs.AiDocumentProcessorJobProcessorConfig>;
    state?: pulumi.Input<string>;
    timeAccepted?: pulumi.Input<string>;
    timeFinished?: pulumi.Input<string>;
    timeStarted?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AiDocumentProcessorJobTimeouts>;
}

/**
 * The set of arguments for constructing a AiDocumentProcessorJob resource.
 */
export interface AiDocumentProcessorJobArgs {
    compartmentId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    inputLocation: pulumi.Input<inputs.AiDocumentProcessorJobInputLocation>;
    outputLocation: pulumi.Input<inputs.AiDocumentProcessorJobOutputLocation>;
    processorConfig: pulumi.Input<inputs.AiDocumentProcessorJobProcessorConfig>;
    timeouts?: pulumi.Input<inputs.AiDocumentProcessorJobTimeouts>;
}
