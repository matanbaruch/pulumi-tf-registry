// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOpsiHostInsight(args: GetOpsiHostInsightArgs, opts?: pulumi.InvokeOptions): Promise<GetOpsiHostInsightResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOpsiHostInsight:getOpsiHostInsight", {
        "hostInsightId": args.hostInsightId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpsiHostInsight.
 */
export interface GetOpsiHostInsightArgs {
    hostInsightId: string;
}

/**
 * A collection of values returned by getOpsiHostInsight.
 */
export interface GetOpsiHostInsightResult {
    readonly compartmentId: string;
    readonly computeId: string;
    readonly definedTags: {[key: string]: string};
    readonly enterpriseManagerBridgeId: string;
    readonly enterpriseManagerEntityDisplayName: string;
    readonly enterpriseManagerEntityIdentifier: string;
    readonly enterpriseManagerEntityName: string;
    readonly enterpriseManagerEntityType: string;
    readonly enterpriseManagerIdentifier: string;
    readonly entitySource: string;
    readonly exadataInsightId: string;
    readonly freeformTags: {[key: string]: string};
    readonly hostDisplayName: string;
    readonly hostInsightId: string;
    readonly hostName: string;
    readonly hostType: string;
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly managementAgentId: string;
    readonly platformName: string;
    readonly platformType: string;
    readonly platformVersion: string;
    readonly processorCount: number;
    readonly state: string;
    readonly status: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getOpsiHostInsightOutput(args: GetOpsiHostInsightOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpsiHostInsightResult> {
    return pulumi.output(args).apply((a: any) => getOpsiHostInsight(a, opts))
}

/**
 * A collection of arguments for invoking getOpsiHostInsight.
 */
export interface GetOpsiHostInsightOutputArgs {
    hostInsightId: pulumi.Input<string>;
}
