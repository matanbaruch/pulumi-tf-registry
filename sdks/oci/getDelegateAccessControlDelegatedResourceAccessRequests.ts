// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDelegateAccessControlDelegatedResourceAccessRequests(args: GetDelegateAccessControlDelegatedResourceAccessRequestsArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegateAccessControlDelegatedResourceAccessRequestsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDelegateAccessControlDelegatedResourceAccessRequests:getDelegateAccessControlDelegatedResourceAccessRequests", {
        "compartmentId": args.compartmentId,
        "delegationControlId": args.delegationControlId,
        "filters": args.filters,
        "id": args.id,
        "requestStatus": args.requestStatus,
        "resourceId": args.resourceId,
        "state": args.state,
        "timeEnd": args.timeEnd,
        "timeStart": args.timeStart,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDelegateAccessControlDelegatedResourceAccessRequests.
 */
export interface GetDelegateAccessControlDelegatedResourceAccessRequestsArgs {
    compartmentId: string;
    delegationControlId?: string;
    filters?: inputs.GetDelegateAccessControlDelegatedResourceAccessRequestsFilter[];
    id?: string;
    requestStatus?: string;
    resourceId?: string;
    state?: string;
    timeEnd?: string;
    timeStart?: string;
}

/**
 * A collection of values returned by getDelegateAccessControlDelegatedResourceAccessRequests.
 */
export interface GetDelegateAccessControlDelegatedResourceAccessRequestsResult {
    readonly compartmentId: string;
    readonly delegatedResourceAccessRequestSummaryCollections: outputs.GetDelegateAccessControlDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollection[];
    readonly delegationControlId?: string;
    readonly filters?: outputs.GetDelegateAccessControlDelegatedResourceAccessRequestsFilter[];
    readonly id: string;
    readonly requestStatus?: string;
    readonly resourceId?: string;
    readonly state?: string;
    readonly timeEnd?: string;
    readonly timeStart?: string;
}
export function getDelegateAccessControlDelegatedResourceAccessRequestsOutput(args: GetDelegateAccessControlDelegatedResourceAccessRequestsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDelegateAccessControlDelegatedResourceAccessRequestsResult> {
    return pulumi.output(args).apply((a: any) => getDelegateAccessControlDelegatedResourceAccessRequests(a, opts))
}

/**
 * A collection of arguments for invoking getDelegateAccessControlDelegatedResourceAccessRequests.
 */
export interface GetDelegateAccessControlDelegatedResourceAccessRequestsOutputArgs {
    compartmentId: pulumi.Input<string>;
    delegationControlId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDelegateAccessControlDelegatedResourceAccessRequestsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    requestStatus?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeEnd?: pulumi.Input<string>;
    timeStart?: pulumi.Input<string>;
}
