// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseToolsDatabaseToolsConnection(args: GetDatabaseToolsDatabaseToolsConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseToolsDatabaseToolsConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseToolsDatabaseToolsConnection:getDatabaseToolsDatabaseToolsConnection", {
        "databaseToolsConnectionId": args.databaseToolsConnectionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseToolsDatabaseToolsConnection.
 */
export interface GetDatabaseToolsDatabaseToolsConnectionArgs {
    databaseToolsConnectionId: string;
}

/**
 * A collection of values returned by getDatabaseToolsDatabaseToolsConnection.
 */
export interface GetDatabaseToolsDatabaseToolsConnectionResult {
    readonly advancedProperties: {[key: string]: string};
    readonly compartmentId: string;
    readonly connectionString: string;
    readonly databaseToolsConnectionId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly keyStores: outputs.GetDatabaseToolsDatabaseToolsConnectionKeyStore[];
    readonly lifecycleDetails: string;
    readonly locks: outputs.GetDatabaseToolsDatabaseToolsConnectionLock[];
    readonly privateEndpointId: string;
    readonly proxyClients: outputs.GetDatabaseToolsDatabaseToolsConnectionProxyClient[];
    readonly relatedResources: outputs.GetDatabaseToolsDatabaseToolsConnectionRelatedResource[];
    readonly runtimeSupport: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly type: string;
    readonly url: string;
    readonly userName: string;
    readonly userPasswords: outputs.GetDatabaseToolsDatabaseToolsConnectionUserPassword[];
}
export function getDatabaseToolsDatabaseToolsConnectionOutput(args: GetDatabaseToolsDatabaseToolsConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseToolsDatabaseToolsConnectionResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseToolsDatabaseToolsConnection(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseToolsDatabaseToolsConnection.
 */
export interface GetDatabaseToolsDatabaseToolsConnectionOutputArgs {
    databaseToolsConnectionId: pulumi.Input<string>;
}
