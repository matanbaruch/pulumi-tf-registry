// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatasciencePipeline extends pulumi.CustomResource {
    /**
     * Get an existing DatasciencePipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatasciencePipelineState, opts?: pulumi.CustomResourceOptions): DatasciencePipeline {
        return new DatasciencePipeline(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/datasciencePipeline:DatasciencePipeline';

    /**
     * Returns true if the given object is an instance of DatasciencePipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatasciencePipeline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatasciencePipeline.__pulumiType;
    }

    public readonly compartmentId!: pulumi.Output<string>;
    public readonly configurationDetails!: pulumi.Output<outputs.DatasciencePipelineConfigurationDetails | undefined>;
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly deleteRelatedPipelineRuns!: pulumi.Output<boolean | undefined>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly infrastructureConfigurationDetails!: pulumi.Output<outputs.DatasciencePipelineInfrastructureConfigurationDetails | undefined>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly logConfigurationDetails!: pulumi.Output<outputs.DatasciencePipelineLogConfigurationDetails | undefined>;
    public readonly projectId!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly stepArtifacts!: pulumi.Output<outputs.DatasciencePipelineStepArtifact[] | undefined>;
    public readonly stepDetails!: pulumi.Output<outputs.DatasciencePipelineStepDetail[]>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DatasciencePipelineTimeouts | undefined>;

    /**
     * Create a DatasciencePipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatasciencePipelineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatasciencePipelineArgs | DatasciencePipelineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatasciencePipelineState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["configurationDetails"] = state ? state.configurationDetails : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["deleteRelatedPipelineRuns"] = state ? state.deleteRelatedPipelineRuns : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["infrastructureConfigurationDetails"] = state ? state.infrastructureConfigurationDetails : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["logConfigurationDetails"] = state ? state.logConfigurationDetails : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stepArtifacts"] = state ? state.stepArtifacts : undefined;
            resourceInputs["stepDetails"] = state ? state.stepDetails : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DatasciencePipelineArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.stepDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stepDetails'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["configurationDetails"] = args ? args.configurationDetails : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["deleteRelatedPipelineRuns"] = args ? args.deleteRelatedPipelineRuns : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["infrastructureConfigurationDetails"] = args ? args.infrastructureConfigurationDetails : undefined;
            resourceInputs["logConfigurationDetails"] = args ? args.logConfigurationDetails : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["stepArtifacts"] = args ? args.stepArtifacts : undefined;
            resourceInputs["stepDetails"] = args ? args.stepDetails : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatasciencePipeline.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatasciencePipeline resources.
 */
export interface DatasciencePipelineState {
    compartmentId?: pulumi.Input<string>;
    configurationDetails?: pulumi.Input<inputs.DatasciencePipelineConfigurationDetails>;
    createdBy?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    deleteRelatedPipelineRuns?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    infrastructureConfigurationDetails?: pulumi.Input<inputs.DatasciencePipelineInfrastructureConfigurationDetails>;
    lifecycleDetails?: pulumi.Input<string>;
    logConfigurationDetails?: pulumi.Input<inputs.DatasciencePipelineLogConfigurationDetails>;
    projectId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    stepArtifacts?: pulumi.Input<pulumi.Input<inputs.DatasciencePipelineStepArtifact>[]>;
    stepDetails?: pulumi.Input<pulumi.Input<inputs.DatasciencePipelineStepDetail>[]>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatasciencePipelineTimeouts>;
}

/**
 * The set of arguments for constructing a DatasciencePipeline resource.
 */
export interface DatasciencePipelineArgs {
    compartmentId: pulumi.Input<string>;
    configurationDetails?: pulumi.Input<inputs.DatasciencePipelineConfigurationDetails>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    deleteRelatedPipelineRuns?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    infrastructureConfigurationDetails?: pulumi.Input<inputs.DatasciencePipelineInfrastructureConfigurationDetails>;
    logConfigurationDetails?: pulumi.Input<inputs.DatasciencePipelineLogConfigurationDetails>;
    projectId: pulumi.Input<string>;
    stepArtifacts?: pulumi.Input<pulumi.Input<inputs.DatasciencePipelineStepArtifact>[]>;
    stepDetails: pulumi.Input<pulumi.Input<inputs.DatasciencePipelineStepDetail>[]>;
    timeouts?: pulumi.Input<inputs.DatasciencePipelineTimeouts>;
}
