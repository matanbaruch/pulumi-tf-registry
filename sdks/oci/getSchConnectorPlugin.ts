// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSchConnectorPlugin(args: GetSchConnectorPluginArgs, opts?: pulumi.InvokeOptions): Promise<GetSchConnectorPluginResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getSchConnectorPlugin:getSchConnectorPlugin", {
        "connectorPluginName": args.connectorPluginName,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchConnectorPlugin.
 */
export interface GetSchConnectorPluginArgs {
    connectorPluginName: string;
    id?: string;
}

/**
 * A collection of values returned by getSchConnectorPlugin.
 */
export interface GetSchConnectorPluginResult {
    readonly connectorPluginName: string;
    readonly displayName: string;
    readonly estimatedThroughput: string;
    readonly id: string;
    readonly kind: string;
    readonly maxRetention: string;
    readonly name: string;
    readonly schema: string;
    readonly state: string;
    readonly timeCreated: string;
}
export function getSchConnectorPluginOutput(args: GetSchConnectorPluginOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchConnectorPluginResult> {
    return pulumi.output(args).apply((a: any) => getSchConnectorPlugin(a, opts))
}

/**
 * A collection of arguments for invoking getSchConnectorPlugin.
 */
export interface GetSchConnectorPluginOutputArgs {
    connectorPluginName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
