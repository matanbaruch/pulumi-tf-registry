// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityDomainsUser(args: GetIdentityDomainsUserArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityDomainsUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityDomainsUser:getIdentityDomainsUser", {
        "attributeSets": args.attributeSets,
        "attributes": args.attributes,
        "authorization": args.authorization,
        "idcsEndpoint": args.idcsEndpoint,
        "resourceTypeSchemaVersion": args.resourceTypeSchemaVersion,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityDomainsUser.
 */
export interface GetIdentityDomainsUserArgs {
    attributeSets?: string[];
    attributes?: string;
    authorization?: string;
    idcsEndpoint: string;
    resourceTypeSchemaVersion?: string;
    userId: string;
}

/**
 * A collection of values returned by getIdentityDomainsUser.
 */
export interface GetIdentityDomainsUserResult {
    readonly active: boolean;
    readonly addresses: outputs.GetIdentityDomainsUserAddress[];
    readonly attributeSets?: string[];
    readonly attributes?: string;
    readonly authorization?: string;
    readonly compartmentOcid: string;
    readonly deleteInProgress: boolean;
    readonly description: string;
    readonly displayName: string;
    readonly domainOcid: string;
    readonly emails: outputs.GetIdentityDomainsUserEmail[];
    readonly entitlements: outputs.GetIdentityDomainsUserEntitlement[];
    readonly externalId: string;
    readonly forceDelete: boolean;
    readonly groups: outputs.GetIdentityDomainsUserGroup[];
    readonly id: string;
    readonly idcsCreatedBies: outputs.GetIdentityDomainsUserIdcsCreatedBy[];
    readonly idcsEndpoint: string;
    readonly idcsLastModifiedBies: outputs.GetIdentityDomainsUserIdcsLastModifiedBy[];
    readonly idcsLastUpgradedInRelease: string;
    readonly idcsPreventedOperations: string[];
    readonly ims: outputs.GetIdentityDomainsUserIm[];
    readonly locale: string;
    readonly metas: outputs.GetIdentityDomainsUserMeta[];
    readonly names: outputs.GetIdentityDomainsUserName[];
    readonly nickName: string;
    readonly ocid: string;
    readonly password: string;
    readonly phoneNumbers: outputs.GetIdentityDomainsUserPhoneNumber[];
    readonly photos: outputs.GetIdentityDomainsUserPhoto[];
    readonly preferredLanguage: string;
    readonly profileUrl: string;
    readonly resourceTypeSchemaVersion?: string;
    readonly roles: outputs.GetIdentityDomainsUserRole[];
    readonly schemas: string[];
    readonly tags: outputs.GetIdentityDomainsUserTag[];
    readonly tenancyOcid: string;
    readonly timezone: string;
    readonly title: string;
    readonly urnietfparamsscimschemasextensionenterprise20users: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasextensionenterprise20user[];
    readonly urnietfparamsscimschemasoracleidcsextensionOciTags: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTag[];
    readonly urnietfparamsscimschemasoracleidcsextensionadaptiveUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser[];
    readonly urnietfparamsscimschemasoracleidcsextensioncapabilitiesUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser[];
    readonly urnietfparamsscimschemasoracleidcsextensiondbCredentialsUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser[];
    readonly urnietfparamsscimschemasoracleidcsextensiondbUserUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser[];
    readonly urnietfparamsscimschemasoracleidcsextensionkerberosUserUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUser[];
    readonly urnietfparamsscimschemasoracleidcsextensionmfaUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUser[];
    readonly urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUser[];
    readonly urnietfparamsscimschemasoracleidcsextensionpasswordlessUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUser[];
    readonly urnietfparamsscimschemasoracleidcsextensionposixUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUser[];
    readonly urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser[];
    readonly urnietfparamsscimschemasoracleidcsextensionselfChangeUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUser[];
    readonly urnietfparamsscimschemasoracleidcsextensionselfRegistrationUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser[];
    readonly urnietfparamsscimschemasoracleidcsextensionsffUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUser[];
    readonly urnietfparamsscimschemasoracleidcsextensionsocialAccountUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUser[];
    readonly urnietfparamsscimschemasoracleidcsextensiontermsOfUseUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser[];
    readonly urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser[];
    readonly urnietfparamsscimschemasoracleidcsextensionuserStateUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUser[];
    readonly urnietfparamsscimschemasoracleidcsextensionuserUsers: outputs.GetIdentityDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser[];
    readonly userId: string;
    readonly userName: string;
    readonly userType: string;
    readonly x509certificates: outputs.GetIdentityDomainsUserX509certificate[];
}
export function getIdentityDomainsUserOutput(args: GetIdentityDomainsUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityDomainsUserResult> {
    return pulumi.output(args).apply((a: any) => getIdentityDomainsUser(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityDomainsUser.
 */
export interface GetIdentityDomainsUserOutputArgs {
    attributeSets?: pulumi.Input<pulumi.Input<string>[]>;
    attributes?: pulumi.Input<string>;
    authorization?: pulumi.Input<string>;
    idcsEndpoint: pulumi.Input<string>;
    resourceTypeSchemaVersion?: pulumi.Input<string>;
    userId: pulumi.Input<string>;
}
