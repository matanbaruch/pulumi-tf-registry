// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OdaOdaInstance extends pulumi.CustomResource {
    /**
     * Get an existing OdaOdaInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OdaOdaInstanceState, opts?: pulumi.CustomResourceOptions): OdaOdaInstance {
        return new OdaOdaInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/odaOdaInstance:OdaOdaInstance';

    /**
     * Returns true if the given object is an instance of OdaOdaInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OdaOdaInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OdaOdaInstance.__pulumiType;
    }

    public /*out*/ readonly attachmentIds!: pulumi.Output<string[]>;
    public /*out*/ readonly attachmentTypes!: pulumi.Output<string[]>;
    public readonly compartmentId!: pulumi.Output<string>;
    public /*out*/ readonly connectorUrl!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly identityAppConsoleUrl!: pulumi.Output<string>;
    public /*out*/ readonly identityAppGuid!: pulumi.Output<string>;
    public readonly identityDomain!: pulumi.Output<string>;
    public /*out*/ readonly importedPackageIds!: pulumi.Output<string[]>;
    public /*out*/ readonly importedPackageNames!: pulumi.Output<string[]>;
    public readonly isRoleBasedAccess!: pulumi.Output<boolean>;
    public /*out*/ readonly lifecycleSubState!: pulumi.Output<string>;
    public /*out*/ readonly restrictedOperations!: pulumi.Output<outputs.OdaOdaInstanceRestrictedOperation[]>;
    public readonly shapeName!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string>;
    public /*out*/ readonly stateMessage!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.OdaOdaInstanceTimeouts | undefined>;
    public /*out*/ readonly webAppUrl!: pulumi.Output<string>;

    /**
     * Create a OdaOdaInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OdaOdaInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OdaOdaInstanceArgs | OdaOdaInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OdaOdaInstanceState | undefined;
            resourceInputs["attachmentIds"] = state ? state.attachmentIds : undefined;
            resourceInputs["attachmentTypes"] = state ? state.attachmentTypes : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["connectorUrl"] = state ? state.connectorUrl : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["identityAppConsoleUrl"] = state ? state.identityAppConsoleUrl : undefined;
            resourceInputs["identityAppGuid"] = state ? state.identityAppGuid : undefined;
            resourceInputs["identityDomain"] = state ? state.identityDomain : undefined;
            resourceInputs["importedPackageIds"] = state ? state.importedPackageIds : undefined;
            resourceInputs["importedPackageNames"] = state ? state.importedPackageNames : undefined;
            resourceInputs["isRoleBasedAccess"] = state ? state.isRoleBasedAccess : undefined;
            resourceInputs["lifecycleSubState"] = state ? state.lifecycleSubState : undefined;
            resourceInputs["restrictedOperations"] = state ? state.restrictedOperations : undefined;
            resourceInputs["shapeName"] = state ? state.shapeName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateMessage"] = state ? state.stateMessage : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["webAppUrl"] = state ? state.webAppUrl : undefined;
        } else {
            const args = argsOrState as OdaOdaInstanceArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.shapeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shapeName'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["identityDomain"] = args ? args.identityDomain : undefined;
            resourceInputs["isRoleBasedAccess"] = args ? args.isRoleBasedAccess : undefined;
            resourceInputs["shapeName"] = args ? args.shapeName : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["attachmentIds"] = undefined /*out*/;
            resourceInputs["attachmentTypes"] = undefined /*out*/;
            resourceInputs["connectorUrl"] = undefined /*out*/;
            resourceInputs["identityAppConsoleUrl"] = undefined /*out*/;
            resourceInputs["identityAppGuid"] = undefined /*out*/;
            resourceInputs["importedPackageIds"] = undefined /*out*/;
            resourceInputs["importedPackageNames"] = undefined /*out*/;
            resourceInputs["lifecycleSubState"] = undefined /*out*/;
            resourceInputs["restrictedOperations"] = undefined /*out*/;
            resourceInputs["stateMessage"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["webAppUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OdaOdaInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OdaOdaInstance resources.
 */
export interface OdaOdaInstanceState {
    attachmentIds?: pulumi.Input<pulumi.Input<string>[]>;
    attachmentTypes?: pulumi.Input<pulumi.Input<string>[]>;
    compartmentId?: pulumi.Input<string>;
    connectorUrl?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    identityAppConsoleUrl?: pulumi.Input<string>;
    identityAppGuid?: pulumi.Input<string>;
    identityDomain?: pulumi.Input<string>;
    importedPackageIds?: pulumi.Input<pulumi.Input<string>[]>;
    importedPackageNames?: pulumi.Input<pulumi.Input<string>[]>;
    isRoleBasedAccess?: pulumi.Input<boolean>;
    lifecycleSubState?: pulumi.Input<string>;
    restrictedOperations?: pulumi.Input<pulumi.Input<inputs.OdaOdaInstanceRestrictedOperation>[]>;
    shapeName?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    stateMessage?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OdaOdaInstanceTimeouts>;
    webAppUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OdaOdaInstance resource.
 */
export interface OdaOdaInstanceArgs {
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    identityDomain?: pulumi.Input<string>;
    isRoleBasedAccess?: pulumi.Input<boolean>;
    shapeName: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OdaOdaInstanceTimeouts>;
}
