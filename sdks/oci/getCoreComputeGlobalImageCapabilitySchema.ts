// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCoreComputeGlobalImageCapabilitySchema(args: GetCoreComputeGlobalImageCapabilitySchemaArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreComputeGlobalImageCapabilitySchemaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreComputeGlobalImageCapabilitySchema:getCoreComputeGlobalImageCapabilitySchema", {
        "computeGlobalImageCapabilitySchemaId": args.computeGlobalImageCapabilitySchemaId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreComputeGlobalImageCapabilitySchema.
 */
export interface GetCoreComputeGlobalImageCapabilitySchemaArgs {
    computeGlobalImageCapabilitySchemaId: string;
    id?: string;
}

/**
 * A collection of values returned by getCoreComputeGlobalImageCapabilitySchema.
 */
export interface GetCoreComputeGlobalImageCapabilitySchemaResult {
    readonly compartmentId: string;
    readonly computeGlobalImageCapabilitySchemaId: string;
    readonly currentVersionName: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly timeCreated: string;
}
export function getCoreComputeGlobalImageCapabilitySchemaOutput(args: GetCoreComputeGlobalImageCapabilitySchemaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreComputeGlobalImageCapabilitySchemaResult> {
    return pulumi.output(args).apply((a: any) => getCoreComputeGlobalImageCapabilitySchema(a, opts))
}

/**
 * A collection of arguments for invoking getCoreComputeGlobalImageCapabilitySchema.
 */
export interface GetCoreComputeGlobalImageCapabilitySchemaOutputArgs {
    computeGlobalImageCapabilitySchemaId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
