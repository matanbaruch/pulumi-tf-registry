// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMediaServicesMediaWorkflowJobFacts(args: GetMediaServicesMediaWorkflowJobFactsArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaServicesMediaWorkflowJobFactsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getMediaServicesMediaWorkflowJobFacts:getMediaServicesMediaWorkflowJobFacts", {
        "filters": args.filters,
        "id": args.id,
        "key": args.key,
        "mediaWorkflowJobId": args.mediaWorkflowJobId,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMediaServicesMediaWorkflowJobFacts.
 */
export interface GetMediaServicesMediaWorkflowJobFactsArgs {
    filters?: inputs.GetMediaServicesMediaWorkflowJobFactsFilter[];
    id?: string;
    key?: string;
    mediaWorkflowJobId: string;
    type?: string;
}

/**
 * A collection of values returned by getMediaServicesMediaWorkflowJobFacts.
 */
export interface GetMediaServicesMediaWorkflowJobFactsResult {
    readonly filters?: outputs.GetMediaServicesMediaWorkflowJobFactsFilter[];
    readonly id: string;
    readonly key?: string;
    readonly mediaWorkflowJobFactCollections: outputs.GetMediaServicesMediaWorkflowJobFactsMediaWorkflowJobFactCollection[];
    readonly mediaWorkflowJobId: string;
    readonly type?: string;
}
export function getMediaServicesMediaWorkflowJobFactsOutput(args: GetMediaServicesMediaWorkflowJobFactsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediaServicesMediaWorkflowJobFactsResult> {
    return pulumi.output(args).apply((a: any) => getMediaServicesMediaWorkflowJobFacts(a, opts))
}

/**
 * A collection of arguments for invoking getMediaServicesMediaWorkflowJobFacts.
 */
export interface GetMediaServicesMediaWorkflowJobFactsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetMediaServicesMediaWorkflowJobFactsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    mediaWorkflowJobId: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
