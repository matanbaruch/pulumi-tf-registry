// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getResourcemanagerStackTfState(args: GetResourcemanagerStackTfStateArgs, opts?: pulumi.InvokeOptions): Promise<GetResourcemanagerStackTfStateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getResourcemanagerStackTfState:getResourcemanagerStackTfState", {
        "id": args.id,
        "localPath": args.localPath,
        "stackId": args.stackId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getResourcemanagerStackTfState.
 */
export interface GetResourcemanagerStackTfStateArgs {
    id?: string;
    localPath: string;
    stackId: string;
}

/**
 * A collection of values returned by getResourcemanagerStackTfState.
 */
export interface GetResourcemanagerStackTfStateResult {
    readonly id: string;
    readonly localPath: string;
    readonly stackId: string;
}
export function getResourcemanagerStackTfStateOutput(args: GetResourcemanagerStackTfStateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourcemanagerStackTfStateResult> {
    return pulumi.output(args).apply((a: any) => getResourcemanagerStackTfState(a, opts))
}

/**
 * A collection of arguments for invoking getResourcemanagerStackTfState.
 */
export interface GetResourcemanagerStackTfStateOutputArgs {
    id?: pulumi.Input<string>;
    localPath: pulumi.Input<string>;
    stackId: pulumi.Input<string>;
}
