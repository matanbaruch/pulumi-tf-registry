// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCoreDedicatedVmHost(args: GetCoreDedicatedVmHostArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreDedicatedVmHostResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreDedicatedVmHost:getCoreDedicatedVmHost", {
        "dedicatedVmHostId": args.dedicatedVmHostId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreDedicatedVmHost.
 */
export interface GetCoreDedicatedVmHostArgs {
    dedicatedVmHostId: string;
}

/**
 * A collection of values returned by getCoreDedicatedVmHost.
 */
export interface GetCoreDedicatedVmHostResult {
    readonly availabilityDomain: string;
    readonly compartmentId: string;
    readonly dedicatedVmHostId: string;
    readonly dedicatedVmHostShape: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly faultDomain: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly remainingMemoryInGbs: number;
    readonly remainingOcpus: number;
    readonly state: string;
    readonly timeCreated: string;
    readonly totalMemoryInGbs: number;
    readonly totalOcpus: number;
}
export function getCoreDedicatedVmHostOutput(args: GetCoreDedicatedVmHostOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreDedicatedVmHostResult> {
    return pulumi.output(args).apply((a: any) => getCoreDedicatedVmHost(a, opts))
}

/**
 * A collection of arguments for invoking getCoreDedicatedVmHost.
 */
export interface GetCoreDedicatedVmHostOutputArgs {
    dedicatedVmHostId: pulumi.Input<string>;
}
