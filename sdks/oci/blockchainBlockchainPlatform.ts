// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BlockchainBlockchainPlatform extends pulumi.CustomResource {
    /**
     * Get an existing BlockchainBlockchainPlatform resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BlockchainBlockchainPlatformState, opts?: pulumi.CustomResourceOptions): BlockchainBlockchainPlatform {
        return new BlockchainBlockchainPlatform(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/blockchainBlockchainPlatform:BlockchainBlockchainPlatform';

    /**
     * Returns true if the given object is an instance of BlockchainBlockchainPlatform.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BlockchainBlockchainPlatform {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BlockchainBlockchainPlatform.__pulumiType;
    }

    public readonly caCertArchiveText!: pulumi.Output<string>;
    public readonly compartmentId!: pulumi.Output<string>;
    public /*out*/ readonly componentDetails!: pulumi.Output<outputs.BlockchainBlockchainPlatformComponentDetail[]>;
    public readonly computeShape!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly federatedUserId!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly hostOcpuUtilizationInfos!: pulumi.Output<outputs.BlockchainBlockchainPlatformHostOcpuUtilizationInfo[]>;
    public readonly idcsAccessToken!: pulumi.Output<string>;
    public readonly isByol!: pulumi.Output<boolean>;
    public /*out*/ readonly isMultiAd!: pulumi.Output<boolean>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly loadBalancerShape!: pulumi.Output<string>;
    public readonly platformRole!: pulumi.Output<string>;
    public /*out*/ readonly platformShapeType!: pulumi.Output<string>;
    public readonly platformVersion!: pulumi.Output<string>;
    public readonly replicas!: pulumi.Output<outputs.BlockchainBlockchainPlatformReplicas | undefined>;
    public /*out*/ readonly serviceEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly serviceVersion!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly storageSizeInTbs!: pulumi.Output<number>;
    public /*out*/ readonly storageUsedInTbs!: pulumi.Output<number>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.BlockchainBlockchainPlatformTimeouts | undefined>;
    public readonly totalOcpuCapacity!: pulumi.Output<number>;

    /**
     * Create a BlockchainBlockchainPlatform resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BlockchainBlockchainPlatformArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BlockchainBlockchainPlatformArgs | BlockchainBlockchainPlatformState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BlockchainBlockchainPlatformState | undefined;
            resourceInputs["caCertArchiveText"] = state ? state.caCertArchiveText : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["componentDetails"] = state ? state.componentDetails : undefined;
            resourceInputs["computeShape"] = state ? state.computeShape : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["federatedUserId"] = state ? state.federatedUserId : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["hostOcpuUtilizationInfos"] = state ? state.hostOcpuUtilizationInfos : undefined;
            resourceInputs["idcsAccessToken"] = state ? state.idcsAccessToken : undefined;
            resourceInputs["isByol"] = state ? state.isByol : undefined;
            resourceInputs["isMultiAd"] = state ? state.isMultiAd : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["loadBalancerShape"] = state ? state.loadBalancerShape : undefined;
            resourceInputs["platformRole"] = state ? state.platformRole : undefined;
            resourceInputs["platformShapeType"] = state ? state.platformShapeType : undefined;
            resourceInputs["platformVersion"] = state ? state.platformVersion : undefined;
            resourceInputs["replicas"] = state ? state.replicas : undefined;
            resourceInputs["serviceEndpoint"] = state ? state.serviceEndpoint : undefined;
            resourceInputs["serviceVersion"] = state ? state.serviceVersion : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["storageSizeInTbs"] = state ? state.storageSizeInTbs : undefined;
            resourceInputs["storageUsedInTbs"] = state ? state.storageUsedInTbs : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["totalOcpuCapacity"] = state ? state.totalOcpuCapacity : undefined;
        } else {
            const args = argsOrState as BlockchainBlockchainPlatformArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.computeShape === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computeShape'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.idcsAccessToken === undefined) && !opts.urn) {
                throw new Error("Missing required property 'idcsAccessToken'");
            }
            if ((!args || args.platformRole === undefined) && !opts.urn) {
                throw new Error("Missing required property 'platformRole'");
            }
            resourceInputs["caCertArchiveText"] = args ? args.caCertArchiveText : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["computeShape"] = args ? args.computeShape : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["federatedUserId"] = args ? args.federatedUserId : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["idcsAccessToken"] = args?.idcsAccessToken ? pulumi.secret(args.idcsAccessToken) : undefined;
            resourceInputs["isByol"] = args ? args.isByol : undefined;
            resourceInputs["loadBalancerShape"] = args ? args.loadBalancerShape : undefined;
            resourceInputs["platformRole"] = args ? args.platformRole : undefined;
            resourceInputs["platformVersion"] = args ? args.platformVersion : undefined;
            resourceInputs["replicas"] = args ? args.replicas : undefined;
            resourceInputs["storageSizeInTbs"] = args ? args.storageSizeInTbs : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["totalOcpuCapacity"] = args ? args.totalOcpuCapacity : undefined;
            resourceInputs["componentDetails"] = undefined /*out*/;
            resourceInputs["hostOcpuUtilizationInfos"] = undefined /*out*/;
            resourceInputs["isMultiAd"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["platformShapeType"] = undefined /*out*/;
            resourceInputs["serviceEndpoint"] = undefined /*out*/;
            resourceInputs["serviceVersion"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["storageUsedInTbs"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["idcsAccessToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(BlockchainBlockchainPlatform.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BlockchainBlockchainPlatform resources.
 */
export interface BlockchainBlockchainPlatformState {
    caCertArchiveText?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    componentDetails?: pulumi.Input<pulumi.Input<inputs.BlockchainBlockchainPlatformComponentDetail>[]>;
    computeShape?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    federatedUserId?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostOcpuUtilizationInfos?: pulumi.Input<pulumi.Input<inputs.BlockchainBlockchainPlatformHostOcpuUtilizationInfo>[]>;
    idcsAccessToken?: pulumi.Input<string>;
    isByol?: pulumi.Input<boolean>;
    isMultiAd?: pulumi.Input<boolean>;
    lifecycleDetails?: pulumi.Input<string>;
    loadBalancerShape?: pulumi.Input<string>;
    platformRole?: pulumi.Input<string>;
    platformShapeType?: pulumi.Input<string>;
    platformVersion?: pulumi.Input<string>;
    replicas?: pulumi.Input<inputs.BlockchainBlockchainPlatformReplicas>;
    serviceEndpoint?: pulumi.Input<string>;
    serviceVersion?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    storageSizeInTbs?: pulumi.Input<number>;
    storageUsedInTbs?: pulumi.Input<number>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.BlockchainBlockchainPlatformTimeouts>;
    totalOcpuCapacity?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a BlockchainBlockchainPlatform resource.
 */
export interface BlockchainBlockchainPlatformArgs {
    caCertArchiveText?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    computeShape: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    federatedUserId?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    idcsAccessToken: pulumi.Input<string>;
    isByol?: pulumi.Input<boolean>;
    loadBalancerShape?: pulumi.Input<string>;
    platformRole: pulumi.Input<string>;
    platformVersion?: pulumi.Input<string>;
    replicas?: pulumi.Input<inputs.BlockchainBlockchainPlatformReplicas>;
    storageSizeInTbs?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.BlockchainBlockchainPlatformTimeouts>;
    totalOcpuCapacity?: pulumi.Input<number>;
}
