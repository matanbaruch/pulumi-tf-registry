// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLogAnalyticsNamespacePropertiesMetadata(args: GetLogAnalyticsNamespacePropertiesMetadataArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsNamespacePropertiesMetadataResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLogAnalyticsNamespacePropertiesMetadata:getLogAnalyticsNamespacePropertiesMetadata", {
        "constraints": args.constraints,
        "displayText": args.displayText,
        "filters": args.filters,
        "id": args.id,
        "level": args.level,
        "name": args.name,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespacePropertiesMetadata.
 */
export interface GetLogAnalyticsNamespacePropertiesMetadataArgs {
    constraints?: string;
    displayText?: string;
    filters?: inputs.GetLogAnalyticsNamespacePropertiesMetadataFilter[];
    id?: string;
    level?: string;
    name?: string;
    namespace: string;
}

/**
 * A collection of values returned by getLogAnalyticsNamespacePropertiesMetadata.
 */
export interface GetLogAnalyticsNamespacePropertiesMetadataResult {
    readonly constraints?: string;
    readonly displayText?: string;
    readonly filters?: outputs.GetLogAnalyticsNamespacePropertiesMetadataFilter[];
    readonly id: string;
    readonly level?: string;
    readonly name?: string;
    readonly namespace: string;
    readonly propertyMetadataSummaryCollections: outputs.GetLogAnalyticsNamespacePropertiesMetadataPropertyMetadataSummaryCollection[];
}
export function getLogAnalyticsNamespacePropertiesMetadataOutput(args: GetLogAnalyticsNamespacePropertiesMetadataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsNamespacePropertiesMetadataResult> {
    return pulumi.output(args).apply((a: any) => getLogAnalyticsNamespacePropertiesMetadata(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespacePropertiesMetadata.
 */
export interface GetLogAnalyticsNamespacePropertiesMetadataOutputArgs {
    constraints?: pulumi.Input<string>;
    displayText?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetLogAnalyticsNamespacePropertiesMetadataFilterArgs>[]>;
    id?: pulumi.Input<string>;
    level?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
}
