// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getComputeinstanceagentInstanceAvailablePlugins(args: GetComputeinstanceagentInstanceAvailablePluginsArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeinstanceagentInstanceAvailablePluginsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getComputeinstanceagentInstanceAvailablePlugins:getComputeinstanceagentInstanceAvailablePlugins", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "osName": args.osName,
        "osVersion": args.osVersion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeinstanceagentInstanceAvailablePlugins.
 */
export interface GetComputeinstanceagentInstanceAvailablePluginsArgs {
    compartmentId: string;
    filters?: inputs.GetComputeinstanceagentInstanceAvailablePluginsFilter[];
    id?: string;
    name?: string;
    osName: string;
    osVersion: string;
}

/**
 * A collection of values returned by getComputeinstanceagentInstanceAvailablePlugins.
 */
export interface GetComputeinstanceagentInstanceAvailablePluginsResult {
    readonly availablePlugins: outputs.GetComputeinstanceagentInstanceAvailablePluginsAvailablePlugin[];
    readonly compartmentId: string;
    readonly filters?: outputs.GetComputeinstanceagentInstanceAvailablePluginsFilter[];
    readonly id: string;
    readonly name?: string;
    readonly osName: string;
    readonly osVersion: string;
}
export function getComputeinstanceagentInstanceAvailablePluginsOutput(args: GetComputeinstanceagentInstanceAvailablePluginsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeinstanceagentInstanceAvailablePluginsResult> {
    return pulumi.output(args).apply((a: any) => getComputeinstanceagentInstanceAvailablePlugins(a, opts))
}

/**
 * A collection of arguments for invoking getComputeinstanceagentInstanceAvailablePlugins.
 */
export interface GetComputeinstanceagentInstanceAvailablePluginsOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetComputeinstanceagentInstanceAvailablePluginsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    osName: pulumi.Input<string>;
    osVersion: pulumi.Input<string>;
}
