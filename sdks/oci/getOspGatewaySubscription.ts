// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOspGatewaySubscription(args: GetOspGatewaySubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetOspGatewaySubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOspGatewaySubscription:getOspGatewaySubscription", {
        "compartmentId": args.compartmentId,
        "ospHomeRegion": args.ospHomeRegion,
        "subscriptionId": args.subscriptionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOspGatewaySubscription.
 */
export interface GetOspGatewaySubscriptionArgs {
    compartmentId: string;
    ospHomeRegion: string;
    subscriptionId: string;
}

/**
 * A collection of values returned by getOspGatewaySubscription.
 */
export interface GetOspGatewaySubscriptionResult {
    readonly accountType: string;
    readonly billToCustAccountId: string;
    readonly billingAddresses: outputs.GetOspGatewaySubscriptionBillingAddress[];
    readonly compartmentId: string;
    readonly currencyCode: string;
    readonly email: string;
    readonly gsiOrgCode: string;
    readonly id: string;
    readonly isIntentToPay: boolean;
    readonly languageCode: string;
    readonly organizationId: string;
    readonly ospHomeRegion: string;
    readonly paymentGateways: outputs.GetOspGatewaySubscriptionPaymentGateway[];
    readonly paymentOptions: outputs.GetOspGatewaySubscriptionPaymentOption[];
    readonly planType: string;
    readonly shipToCustAcctRoleId: string;
    readonly shipToCustAcctSiteId: string;
    readonly subscriptionId: string;
    readonly subscriptionPlanNumber: string;
    readonly subscriptions: outputs.GetOspGatewaySubscriptionSubscription[];
    readonly taxInfos: outputs.GetOspGatewaySubscriptionTaxInfo[];
    readonly timePersonalToCorporateConv: string;
    readonly timePlanUpgrade: string;
    readonly timeStart: string;
    readonly upgradeState: string;
    readonly upgradeStateDetails: string;
}
export function getOspGatewaySubscriptionOutput(args: GetOspGatewaySubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOspGatewaySubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getOspGatewaySubscription(a, opts))
}

/**
 * A collection of arguments for invoking getOspGatewaySubscription.
 */
export interface GetOspGatewaySubscriptionOutputArgs {
    compartmentId: pulumi.Input<string>;
    ospHomeRegion: pulumi.Input<string>;
    subscriptionId: pulumi.Input<string>;
}
