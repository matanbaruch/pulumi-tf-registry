// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CoreInstanceConsoleConnection extends pulumi.CustomResource {
    /**
     * Get an existing CoreInstanceConsoleConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CoreInstanceConsoleConnectionState, opts?: pulumi.CustomResourceOptions): CoreInstanceConsoleConnection {
        return new CoreInstanceConsoleConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/coreInstanceConsoleConnection:CoreInstanceConsoleConnection';

    /**
     * Returns true if the given object is an instance of CoreInstanceConsoleConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CoreInstanceConsoleConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CoreInstanceConsoleConnection.__pulumiType;
    }

    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    public /*out*/ readonly connectionString!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly fingerprint!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly instanceId!: pulumi.Output<string>;
    public readonly publicKey!: pulumi.Output<string>;
    public /*out*/ readonly serviceHostKeyFingerprint!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CoreInstanceConsoleConnectionTimeouts | undefined>;
    public /*out*/ readonly vncConnectionString!: pulumi.Output<string>;

    /**
     * Create a CoreInstanceConsoleConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CoreInstanceConsoleConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CoreInstanceConsoleConnectionArgs | CoreInstanceConsoleConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CoreInstanceConsoleConnectionState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["fingerprint"] = state ? state.fingerprint : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["publicKey"] = state ? state.publicKey : undefined;
            resourceInputs["serviceHostKeyFingerprint"] = state ? state.serviceHostKeyFingerprint : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vncConnectionString"] = state ? state.vncConnectionString : undefined;
        } else {
            const args = argsOrState as CoreInstanceConsoleConnectionArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.publicKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publicKey'");
            }
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["publicKey"] = args ? args.publicKey : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["connectionString"] = undefined /*out*/;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["serviceHostKeyFingerprint"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["vncConnectionString"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CoreInstanceConsoleConnection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CoreInstanceConsoleConnection resources.
 */
export interface CoreInstanceConsoleConnectionState {
    compartmentId?: pulumi.Input<string>;
    connectionString?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    fingerprint?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceId?: pulumi.Input<string>;
    publicKey?: pulumi.Input<string>;
    serviceHostKeyFingerprint?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CoreInstanceConsoleConnectionTimeouts>;
    vncConnectionString?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CoreInstanceConsoleConnection resource.
 */
export interface CoreInstanceConsoleConnectionArgs {
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceId: pulumi.Input<string>;
    publicKey: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CoreInstanceConsoleConnectionTimeouts>;
}
