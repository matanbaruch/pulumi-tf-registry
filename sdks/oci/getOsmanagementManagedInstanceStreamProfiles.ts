// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsmanagementManagedInstanceStreamProfiles(args: GetOsmanagementManagedInstanceStreamProfilesArgs, opts?: pulumi.InvokeOptions): Promise<GetOsmanagementManagedInstanceStreamProfilesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsmanagementManagedInstanceStreamProfiles:getOsmanagementManagedInstanceStreamProfiles", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "managedInstanceId": args.managedInstanceId,
        "moduleName": args.moduleName,
        "profileName": args.profileName,
        "profileStatus": args.profileStatus,
        "streamName": args.streamName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsmanagementManagedInstanceStreamProfiles.
 */
export interface GetOsmanagementManagedInstanceStreamProfilesArgs {
    compartmentId?: string;
    filters?: inputs.GetOsmanagementManagedInstanceStreamProfilesFilter[];
    id?: string;
    managedInstanceId: string;
    moduleName?: string;
    profileName?: string;
    profileStatus?: string;
    streamName?: string;
}

/**
 * A collection of values returned by getOsmanagementManagedInstanceStreamProfiles.
 */
export interface GetOsmanagementManagedInstanceStreamProfilesResult {
    readonly compartmentId?: string;
    readonly filters?: outputs.GetOsmanagementManagedInstanceStreamProfilesFilter[];
    readonly id: string;
    readonly managedInstanceId: string;
    readonly moduleName?: string;
    readonly moduleStreamProfileOnManagedInstances: outputs.GetOsmanagementManagedInstanceStreamProfilesModuleStreamProfileOnManagedInstance[];
    readonly profileName?: string;
    readonly profileStatus?: string;
    readonly streamName?: string;
}
export function getOsmanagementManagedInstanceStreamProfilesOutput(args: GetOsmanagementManagedInstanceStreamProfilesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsmanagementManagedInstanceStreamProfilesResult> {
    return pulumi.output(args).apply((a: any) => getOsmanagementManagedInstanceStreamProfiles(a, opts))
}

/**
 * A collection of arguments for invoking getOsmanagementManagedInstanceStreamProfiles.
 */
export interface GetOsmanagementManagedInstanceStreamProfilesOutputArgs {
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOsmanagementManagedInstanceStreamProfilesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    managedInstanceId: pulumi.Input<string>;
    moduleName?: pulumi.Input<string>;
    profileName?: pulumi.Input<string>;
    profileStatus?: pulumi.Input<string>;
    streamName?: pulumi.Input<string>;
}
