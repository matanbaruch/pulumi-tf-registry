// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAiAnomalyDetectionDetectAnomalyJob(args: GetAiAnomalyDetectionDetectAnomalyJobArgs, opts?: pulumi.InvokeOptions): Promise<GetAiAnomalyDetectionDetectAnomalyJobResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getAiAnomalyDetectionDetectAnomalyJob:getAiAnomalyDetectionDetectAnomalyJob", {
        "detectAnomalyJobId": args.detectAnomalyJobId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAiAnomalyDetectionDetectAnomalyJob.
 */
export interface GetAiAnomalyDetectionDetectAnomalyJobArgs {
    detectAnomalyJobId: string;
}

/**
 * A collection of values returned by getAiAnomalyDetectionDetectAnomalyJob.
 */
export interface GetAiAnomalyDetectionDetectAnomalyJobResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly detectAnomalyJobId: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly inputDetails: outputs.GetAiAnomalyDetectionDetectAnomalyJobInputDetail[];
    readonly lifecycleStateDetails: string;
    readonly modelId: string;
    readonly outputDetails: outputs.GetAiAnomalyDetectionDetectAnomalyJobOutputDetail[];
    readonly projectId: string;
    readonly sensitivity: number;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeAccepted: string;
    readonly timeFinished: string;
    readonly timeStarted: string;
}
export function getAiAnomalyDetectionDetectAnomalyJobOutput(args: GetAiAnomalyDetectionDetectAnomalyJobOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAiAnomalyDetectionDetectAnomalyJobResult> {
    return pulumi.output(args).apply((a: any) => getAiAnomalyDetectionDetectAnomalyJob(a, opts))
}

/**
 * A collection of arguments for invoking getAiAnomalyDetectionDetectAnomalyJob.
 */
export interface GetAiAnomalyDetectionDetectAnomalyJobOutputArgs {
    detectAnomalyJobId: pulumi.Input<string>;
}
