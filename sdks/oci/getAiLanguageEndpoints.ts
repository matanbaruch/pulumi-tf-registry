// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAiLanguageEndpoints(args: GetAiLanguageEndpointsArgs, opts?: pulumi.InvokeOptions): Promise<GetAiLanguageEndpointsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getAiLanguageEndpoints:getAiLanguageEndpoints", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "modelId": args.modelId,
        "projectId": args.projectId,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAiLanguageEndpoints.
 */
export interface GetAiLanguageEndpointsArgs {
    compartmentId: string;
    displayName?: string;
    filters?: inputs.GetAiLanguageEndpointsFilter[];
    id?: string;
    modelId?: string;
    projectId?: string;
    state?: string;
}

/**
 * A collection of values returned by getAiLanguageEndpoints.
 */
export interface GetAiLanguageEndpointsResult {
    readonly compartmentId: string;
    readonly displayName?: string;
    readonly endpointCollections: outputs.GetAiLanguageEndpointsEndpointCollection[];
    readonly filters?: outputs.GetAiLanguageEndpointsFilter[];
    readonly id?: string;
    readonly modelId?: string;
    readonly projectId?: string;
    readonly state?: string;
}
export function getAiLanguageEndpointsOutput(args: GetAiLanguageEndpointsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAiLanguageEndpointsResult> {
    return pulumi.output(args).apply((a: any) => getAiLanguageEndpoints(a, opts))
}

/**
 * A collection of arguments for invoking getAiLanguageEndpoints.
 */
export interface GetAiLanguageEndpointsOutputArgs {
    compartmentId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetAiLanguageEndpointsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    modelId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
