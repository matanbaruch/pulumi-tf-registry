// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCoreFastConnectProviderService(args: GetCoreFastConnectProviderServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreFastConnectProviderServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreFastConnectProviderService:getCoreFastConnectProviderService", {
        "id": args.id,
        "providerServiceId": args.providerServiceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreFastConnectProviderService.
 */
export interface GetCoreFastConnectProviderServiceArgs {
    id?: string;
    providerServiceId: string;
}

/**
 * A collection of values returned by getCoreFastConnectProviderService.
 */
export interface GetCoreFastConnectProviderServiceResult {
    readonly bandwithShapeManagement: string;
    readonly customerAsnManagement: string;
    readonly description: string;
    readonly id: string;
    readonly privatePeeringBgpManagement: string;
    readonly providerName: string;
    readonly providerServiceId: string;
    readonly providerServiceKeyManagement: string;
    readonly providerServiceName: string;
    readonly publicPeeringBgpManagement: string;
    readonly requiredTotalCrossConnects: number;
    readonly supportedVirtualCircuitTypes: string[];
    readonly type: string;
}
export function getCoreFastConnectProviderServiceOutput(args: GetCoreFastConnectProviderServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreFastConnectProviderServiceResult> {
    return pulumi.output(args).apply((a: any) => getCoreFastConnectProviderService(a, opts))
}

/**
 * A collection of arguments for invoking getCoreFastConnectProviderService.
 */
export interface GetCoreFastConnectProviderServiceOutputArgs {
    id?: pulumi.Input<string>;
    providerServiceId: pulumi.Input<string>;
}
