// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAnnouncementsServiceServices(args: GetAnnouncementsServiceServicesArgs, opts?: pulumi.InvokeOptions): Promise<GetAnnouncementsServiceServicesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getAnnouncementsServiceServices:getAnnouncementsServiceServices", {
        "commsManagerName": args.commsManagerName,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "platformType": args.platformType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAnnouncementsServiceServices.
 */
export interface GetAnnouncementsServiceServicesArgs {
    commsManagerName?: string;
    compartmentId: string;
    filters?: inputs.GetAnnouncementsServiceServicesFilter[];
    id?: string;
    platformType?: string;
}

/**
 * A collection of values returned by getAnnouncementsServiceServices.
 */
export interface GetAnnouncementsServiceServicesResult {
    readonly commsManagerName?: string;
    readonly compartmentId: string;
    readonly filters?: outputs.GetAnnouncementsServiceServicesFilter[];
    readonly id: string;
    readonly platformType?: string;
    readonly servicesCollections: outputs.GetAnnouncementsServiceServicesServicesCollection[];
}
export function getAnnouncementsServiceServicesOutput(args: GetAnnouncementsServiceServicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAnnouncementsServiceServicesResult> {
    return pulumi.output(args).apply((a: any) => getAnnouncementsServiceServices(a, opts))
}

/**
 * A collection of arguments for invoking getAnnouncementsServiceServices.
 */
export interface GetAnnouncementsServiceServicesOutputArgs {
    commsManagerName?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetAnnouncementsServiceServicesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    platformType?: pulumi.Input<string>;
}
