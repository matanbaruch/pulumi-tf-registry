// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeTargetDatabase(args: GetDataSafeTargetDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeTargetDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeTargetDatabase:getDataSafeTargetDatabase", {
        "targetDatabaseId": args.targetDatabaseId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeTargetDatabase.
 */
export interface GetDataSafeTargetDatabaseArgs {
    targetDatabaseId: string;
}

/**
 * A collection of values returned by getDataSafeTargetDatabase.
 */
export interface GetDataSafeTargetDatabaseResult {
    readonly associatedResourceIds: string[];
    readonly compartmentId: string;
    readonly connectionOptions: outputs.GetDataSafeTargetDatabaseConnectionOption[];
    readonly credentials: outputs.GetDataSafeTargetDatabaseCredential[];
    readonly databaseDetails: outputs.GetDataSafeTargetDatabaseDatabaseDetail[];
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly peerTargetDatabaseDetails: outputs.GetDataSafeTargetDatabasePeerTargetDatabaseDetail[];
    readonly peerTargetDatabases: outputs.GetDataSafeTargetDatabasePeerTargetDatabase[];
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly targetDatabaseId: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly tlsConfigs: outputs.GetDataSafeTargetDatabaseTlsConfig[];
}
export function getDataSafeTargetDatabaseOutput(args: GetDataSafeTargetDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeTargetDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeTargetDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeTargetDatabase.
 */
export interface GetDataSafeTargetDatabaseOutputArgs {
    targetDatabaseId: pulumi.Input<string>;
}
