// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatascienceModelDeployment extends pulumi.CustomResource {
    /**
     * Get an existing DatascienceModelDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatascienceModelDeploymentState, opts?: pulumi.CustomResourceOptions): DatascienceModelDeployment {
        return new DatascienceModelDeployment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/datascienceModelDeployment:DatascienceModelDeployment';

    /**
     * Returns true if the given object is an instance of DatascienceModelDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatascienceModelDeployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatascienceModelDeployment.__pulumiType;
    }

    public readonly categoryLogDetails!: pulumi.Output<outputs.DatascienceModelDeploymentCategoryLogDetails | undefined>;
    public readonly compartmentId!: pulumi.Output<string>;
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly modelDeploymentConfigurationDetails!: pulumi.Output<outputs.DatascienceModelDeploymentModelDeploymentConfigurationDetails>;
    public /*out*/ readonly modelDeploymentSystemDatas!: pulumi.Output<outputs.DatascienceModelDeploymentModelDeploymentSystemData[]>;
    public /*out*/ readonly modelDeploymentUrl!: pulumi.Output<string>;
    public readonly opcParentRptUrl!: pulumi.Output<string | undefined>;
    public readonly projectId!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DatascienceModelDeploymentTimeouts | undefined>;

    /**
     * Create a DatascienceModelDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatascienceModelDeploymentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatascienceModelDeploymentArgs | DatascienceModelDeploymentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatascienceModelDeploymentState | undefined;
            resourceInputs["categoryLogDetails"] = state ? state.categoryLogDetails : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["modelDeploymentConfigurationDetails"] = state ? state.modelDeploymentConfigurationDetails : undefined;
            resourceInputs["modelDeploymentSystemDatas"] = state ? state.modelDeploymentSystemDatas : undefined;
            resourceInputs["modelDeploymentUrl"] = state ? state.modelDeploymentUrl : undefined;
            resourceInputs["opcParentRptUrl"] = state ? state.opcParentRptUrl : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DatascienceModelDeploymentArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.modelDeploymentConfigurationDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelDeploymentConfigurationDetails'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["categoryLogDetails"] = args ? args.categoryLogDetails : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["modelDeploymentConfigurationDetails"] = args ? args.modelDeploymentConfigurationDetails : undefined;
            resourceInputs["opcParentRptUrl"] = args ? args.opcParentRptUrl : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["modelDeploymentSystemDatas"] = undefined /*out*/;
            resourceInputs["modelDeploymentUrl"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatascienceModelDeployment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatascienceModelDeployment resources.
 */
export interface DatascienceModelDeploymentState {
    categoryLogDetails?: pulumi.Input<inputs.DatascienceModelDeploymentCategoryLogDetails>;
    compartmentId?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lifecycleDetails?: pulumi.Input<string>;
    modelDeploymentConfigurationDetails?: pulumi.Input<inputs.DatascienceModelDeploymentModelDeploymentConfigurationDetails>;
    modelDeploymentSystemDatas?: pulumi.Input<pulumi.Input<inputs.DatascienceModelDeploymentModelDeploymentSystemData>[]>;
    modelDeploymentUrl?: pulumi.Input<string>;
    opcParentRptUrl?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatascienceModelDeploymentTimeouts>;
}

/**
 * The set of arguments for constructing a DatascienceModelDeployment resource.
 */
export interface DatascienceModelDeploymentArgs {
    categoryLogDetails?: pulumi.Input<inputs.DatascienceModelDeploymentCategoryLogDetails>;
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    modelDeploymentConfigurationDetails: pulumi.Input<inputs.DatascienceModelDeploymentModelDeploymentConfigurationDetails>;
    opcParentRptUrl?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatascienceModelDeploymentTimeouts>;
}
