// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseAutonomousContainerDatabase(args: GetDatabaseAutonomousContainerDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseAutonomousContainerDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseAutonomousContainerDatabase:getDatabaseAutonomousContainerDatabase", {
        "autonomousContainerDatabaseId": args.autonomousContainerDatabaseId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseAutonomousContainerDatabase.
 */
export interface GetDatabaseAutonomousContainerDatabaseArgs {
    autonomousContainerDatabaseId: string;
}

/**
 * A collection of values returned by getDatabaseAutonomousContainerDatabase.
 */
export interface GetDatabaseAutonomousContainerDatabaseResult {
    readonly autonomousContainerDatabaseId: string;
    readonly autonomousExadataInfrastructureId: string;
    readonly autonomousVmClusterId: string;
    readonly availabilityDomain: string;
    readonly availableCpus: number;
    readonly backupConfigs: outputs.GetDatabaseAutonomousContainerDatabaseBackupConfig[];
    readonly cloudAutonomousVmClusterId: string;
    readonly compartmentId: string;
    readonly computeModel: string;
    readonly databaseSoftwareImageId: string;
    readonly dbName: string;
    readonly dbSplitThreshold: number;
    readonly dbUniqueName: string;
    readonly dbVersion: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly distributionAffinity: string;
    readonly dstFileVersion: string;
    readonly fastStartFailOverLagLimitInSeconds: number;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly infrastructureType: string;
    readonly isAutomaticFailoverEnabled: boolean;
    readonly isDstFileUpdateEnabled: boolean;
    readonly keyHistoryEntries: outputs.GetDatabaseAutonomousContainerDatabaseKeyHistoryEntry[];
    readonly keyStoreId: string;
    readonly keyStoreWalletName: string;
    readonly kmsKeyId: string;
    readonly largestProvisionableAutonomousDatabaseInCpus: number;
    readonly lastMaintenanceRunId: string;
    readonly lifecycleDetails: string;
    readonly listOneOffPatches: string[];
    readonly maintenanceWindowDetails: outputs.GetDatabaseAutonomousContainerDatabaseMaintenanceWindowDetail[];
    readonly maintenanceWindows: outputs.GetDatabaseAutonomousContainerDatabaseMaintenanceWindow[];
    readonly memoryPerOracleComputeUnitInGbs: number;
    readonly netServicesArchitecture: string;
    readonly nextMaintenanceRunId: string;
    readonly patchId: string;
    readonly patchModel: string;
    readonly peerAutonomousContainerDatabaseBackupConfigs: outputs.GetDatabaseAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig[];
    readonly peerAutonomousContainerDatabaseCompartmentId: string;
    readonly peerAutonomousContainerDatabaseDisplayName: string;
    readonly peerAutonomousExadataInfrastructureId: string;
    readonly peerAutonomousVmClusterId: string;
    readonly peerCloudAutonomousVmClusterId: string;
    readonly peerDbUniqueName: string;
    readonly protectionMode: string;
    readonly provisionableCpuses: number[];
    readonly provisionedCpus: number;
    readonly reclaimableCpus: number;
    readonly reservedCpus: number;
    readonly role: string;
    readonly rotateKeyTrigger: boolean;
    readonly serviceLevelAgreementType: string;
    readonly standbyMaintenanceBufferInDays: number;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeOfLastBackup: string;
    readonly timeSnapshotStandbyRevert: string;
    readonly totalCpus: number;
    readonly vaultId: string;
    readonly versionPreference: string;
    readonly vmFailoverReservation: number;
}
export function getDatabaseAutonomousContainerDatabaseOutput(args: GetDatabaseAutonomousContainerDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseAutonomousContainerDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseAutonomousContainerDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseAutonomousContainerDatabase.
 */
export interface GetDatabaseAutonomousContainerDatabaseOutputArgs {
    autonomousContainerDatabaseId: pulumi.Input<string>;
}
