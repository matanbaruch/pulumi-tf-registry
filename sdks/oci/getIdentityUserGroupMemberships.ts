// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityUserGroupMemberships(args: GetIdentityUserGroupMembershipsArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityUserGroupMembershipsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityUserGroupMemberships:getIdentityUserGroupMemberships", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "groupId": args.groupId,
        "id": args.id,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityUserGroupMemberships.
 */
export interface GetIdentityUserGroupMembershipsArgs {
    compartmentId: string;
    filters?: inputs.GetIdentityUserGroupMembershipsFilter[];
    groupId?: string;
    id?: string;
    userId?: string;
}

/**
 * A collection of values returned by getIdentityUserGroupMemberships.
 */
export interface GetIdentityUserGroupMembershipsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.GetIdentityUserGroupMembershipsFilter[];
    readonly groupId?: string;
    readonly id: string;
    readonly memberships: outputs.GetIdentityUserGroupMembershipsMembership[];
    readonly userId?: string;
}
export function getIdentityUserGroupMembershipsOutput(args: GetIdentityUserGroupMembershipsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityUserGroupMembershipsResult> {
    return pulumi.output(args).apply((a: any) => getIdentityUserGroupMemberships(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityUserGroupMemberships.
 */
export interface GetIdentityUserGroupMembershipsOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetIdentityUserGroupMembershipsFilterArgs>[]>;
    groupId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
}
