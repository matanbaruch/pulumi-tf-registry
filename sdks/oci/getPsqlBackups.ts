// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPsqlBackups(args?: GetPsqlBackupsArgs, opts?: pulumi.InvokeOptions): Promise<GetPsqlBackupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getPsqlBackups:getPsqlBackups", {
        "backupId": args.backupId,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
        "timeEnded": args.timeEnded,
        "timeStarted": args.timeStarted,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPsqlBackups.
 */
export interface GetPsqlBackupsArgs {
    backupId?: string;
    compartmentId?: string;
    displayName?: string;
    filters?: inputs.GetPsqlBackupsFilter[];
    id?: string;
    state?: string;
    timeEnded?: string;
    timeStarted?: string;
}

/**
 * A collection of values returned by getPsqlBackups.
 */
export interface GetPsqlBackupsResult {
    readonly backupCollections: outputs.GetPsqlBackupsBackupCollection[];
    readonly backupId?: string;
    readonly compartmentId?: string;
    readonly displayName?: string;
    readonly filters?: outputs.GetPsqlBackupsFilter[];
    readonly id?: string;
    readonly state?: string;
    readonly timeEnded?: string;
    readonly timeStarted?: string;
}
export function getPsqlBackupsOutput(args?: GetPsqlBackupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPsqlBackupsResult> {
    return pulumi.output(args).apply((a: any) => getPsqlBackups(a, opts))
}

/**
 * A collection of arguments for invoking getPsqlBackups.
 */
export interface GetPsqlBackupsOutputArgs {
    backupId?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetPsqlBackupsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeEnded?: pulumi.Input<string>;
    timeStarted?: pulumi.Input<string>;
}
