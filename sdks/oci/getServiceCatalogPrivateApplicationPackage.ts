// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getServiceCatalogPrivateApplicationPackage(args: GetServiceCatalogPrivateApplicationPackageArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceCatalogPrivateApplicationPackageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getServiceCatalogPrivateApplicationPackage:getServiceCatalogPrivateApplicationPackage", {
        "id": args.id,
        "privateApplicationPackageId": args.privateApplicationPackageId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceCatalogPrivateApplicationPackage.
 */
export interface GetServiceCatalogPrivateApplicationPackageArgs {
    id?: string;
    privateApplicationPackageId: string;
}

/**
 * A collection of values returned by getServiceCatalogPrivateApplicationPackage.
 */
export interface GetServiceCatalogPrivateApplicationPackageResult {
    readonly contentUrl: string;
    readonly displayName: string;
    readonly id: string;
    readonly mimeType: string;
    readonly packageType: string;
    readonly privateApplicationId: string;
    readonly privateApplicationPackageId: string;
    readonly timeCreated: string;
    readonly version: string;
}
export function getServiceCatalogPrivateApplicationPackageOutput(args: GetServiceCatalogPrivateApplicationPackageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceCatalogPrivateApplicationPackageResult> {
    return pulumi.output(args).apply((a: any) => getServiceCatalogPrivateApplicationPackage(a, opts))
}

/**
 * A collection of arguments for invoking getServiceCatalogPrivateApplicationPackage.
 */
export interface GetServiceCatalogPrivateApplicationPackageOutputArgs {
    id?: pulumi.Input<string>;
    privateApplicationPackageId: pulumi.Input<string>;
}
