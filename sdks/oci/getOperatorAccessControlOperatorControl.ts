// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOperatorAccessControlOperatorControl(args: GetOperatorAccessControlOperatorControlArgs, opts?: pulumi.InvokeOptions): Promise<GetOperatorAccessControlOperatorControlResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOperatorAccessControlOperatorControl:getOperatorAccessControlOperatorControl", {
        "operatorControlId": args.operatorControlId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOperatorAccessControlOperatorControl.
 */
export interface GetOperatorAccessControlOperatorControlArgs {
    operatorControlId: string;
}

/**
 * A collection of values returned by getOperatorAccessControlOperatorControl.
 */
export interface GetOperatorAccessControlOperatorControlResult {
    readonly approvalRequiredOpActionLists: string[];
    readonly approverGroupsLists: string[];
    readonly approversLists: string[];
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly emailIdLists: string[];
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isDefaultOperatorControl: boolean;
    readonly isFullyPreApproved: boolean;
    readonly lastModifiedInfo: string;
    readonly numberOfApprovers: number;
    readonly operatorControlId: string;
    readonly operatorControlName: string;
    readonly preApprovedOpActionLists: string[];
    readonly resourceType: string;
    readonly state: string;
    readonly systemMessage: string;
    readonly timeOfCreation: string;
    readonly timeOfDeletion: string;
    readonly timeOfModification: string;
}
export function getOperatorAccessControlOperatorControlOutput(args: GetOperatorAccessControlOperatorControlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOperatorAccessControlOperatorControlResult> {
    return pulumi.output(args).apply((a: any) => getOperatorAccessControlOperatorControl(a, opts))
}

/**
 * A collection of arguments for invoking getOperatorAccessControlOperatorControl.
 */
export interface GetOperatorAccessControlOperatorControlOutputArgs {
    operatorControlId: pulumi.Input<string>;
}
