// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatabaseToolsDatabaseToolsConnection extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseToolsDatabaseToolsConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseToolsDatabaseToolsConnectionState, opts?: pulumi.CustomResourceOptions): DatabaseToolsDatabaseToolsConnection {
        return new DatabaseToolsDatabaseToolsConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/databaseToolsDatabaseToolsConnection:DatabaseToolsDatabaseToolsConnection';

    /**
     * Returns true if the given object is an instance of DatabaseToolsDatabaseToolsConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseToolsDatabaseToolsConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseToolsDatabaseToolsConnection.__pulumiType;
    }

    public readonly advancedProperties!: pulumi.Output<{[key: string]: string}>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly connectionString!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly keyStores!: pulumi.Output<outputs.DatabaseToolsDatabaseToolsConnectionKeyStore[] | undefined>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly locks!: pulumi.Output<outputs.DatabaseToolsDatabaseToolsConnectionLock[] | undefined>;
    public readonly privateEndpointId!: pulumi.Output<string>;
    public readonly proxyClient!: pulumi.Output<outputs.DatabaseToolsDatabaseToolsConnectionProxyClient | undefined>;
    public readonly relatedResource!: pulumi.Output<outputs.DatabaseToolsDatabaseToolsConnectionRelatedResource | undefined>;
    public readonly runtimeSupport!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DatabaseToolsDatabaseToolsConnectionTimeouts | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly url!: pulumi.Output<string>;
    public readonly userName!: pulumi.Output<string>;
    public readonly userPassword!: pulumi.Output<outputs.DatabaseToolsDatabaseToolsConnectionUserPassword>;

    /**
     * Create a DatabaseToolsDatabaseToolsConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseToolsDatabaseToolsConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseToolsDatabaseToolsConnectionArgs | DatabaseToolsDatabaseToolsConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseToolsDatabaseToolsConnectionState | undefined;
            resourceInputs["advancedProperties"] = state ? state.advancedProperties : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["keyStores"] = state ? state.keyStores : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["locks"] = state ? state.locks : undefined;
            resourceInputs["privateEndpointId"] = state ? state.privateEndpointId : undefined;
            resourceInputs["proxyClient"] = state ? state.proxyClient : undefined;
            resourceInputs["relatedResource"] = state ? state.relatedResource : undefined;
            resourceInputs["runtimeSupport"] = state ? state.runtimeSupport : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
            resourceInputs["userPassword"] = state ? state.userPassword : undefined;
        } else {
            const args = argsOrState as DatabaseToolsDatabaseToolsConnectionArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            if ((!args || args.userName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userName'");
            }
            if ((!args || args.userPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userPassword'");
            }
            resourceInputs["advancedProperties"] = args ? args.advancedProperties : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["connectionString"] = args ? args.connectionString : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["keyStores"] = args ? args.keyStores : undefined;
            resourceInputs["locks"] = args ? args.locks : undefined;
            resourceInputs["privateEndpointId"] = args ? args.privateEndpointId : undefined;
            resourceInputs["proxyClient"] = args ? args.proxyClient : undefined;
            resourceInputs["relatedResource"] = args ? args.relatedResource : undefined;
            resourceInputs["runtimeSupport"] = args ? args.runtimeSupport : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
            resourceInputs["userPassword"] = args ? args.userPassword : undefined;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseToolsDatabaseToolsConnection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatabaseToolsDatabaseToolsConnection resources.
 */
export interface DatabaseToolsDatabaseToolsConnectionState {
    advancedProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    compartmentId?: pulumi.Input<string>;
    connectionString?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    keyStores?: pulumi.Input<pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionKeyStore>[]>;
    lifecycleDetails?: pulumi.Input<string>;
    locks?: pulumi.Input<pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionLock>[]>;
    privateEndpointId?: pulumi.Input<string>;
    proxyClient?: pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionProxyClient>;
    relatedResource?: pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionRelatedResource>;
    runtimeSupport?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionTimeouts>;
    type?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
    userPassword?: pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionUserPassword>;
}

/**
 * The set of arguments for constructing a DatabaseToolsDatabaseToolsConnection resource.
 */
export interface DatabaseToolsDatabaseToolsConnectionArgs {
    advancedProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    compartmentId: pulumi.Input<string>;
    connectionString?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    keyStores?: pulumi.Input<pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionKeyStore>[]>;
    locks?: pulumi.Input<pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionLock>[]>;
    privateEndpointId?: pulumi.Input<string>;
    proxyClient?: pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionProxyClient>;
    relatedResource?: pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionRelatedResource>;
    runtimeSupport?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionTimeouts>;
    type: pulumi.Input<string>;
    url?: pulumi.Input<string>;
    userName: pulumi.Input<string>;
    userPassword: pulumi.Input<inputs.DatabaseToolsDatabaseToolsConnectionUserPassword>;
}
