// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceMeshIngressGatewayRouteTables(args: GetServiceMeshIngressGatewayRouteTablesArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceMeshIngressGatewayRouteTablesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getServiceMeshIngressGatewayRouteTables:getServiceMeshIngressGatewayRouteTables", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "ingressGatewayId": args.ingressGatewayId,
        "name": args.name,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceMeshIngressGatewayRouteTables.
 */
export interface GetServiceMeshIngressGatewayRouteTablesArgs {
    compartmentId: string;
    filters?: inputs.GetServiceMeshIngressGatewayRouteTablesFilter[];
    id?: string;
    ingressGatewayId?: string;
    name?: string;
    state?: string;
}

/**
 * A collection of values returned by getServiceMeshIngressGatewayRouteTables.
 */
export interface GetServiceMeshIngressGatewayRouteTablesResult {
    readonly compartmentId: string;
    readonly filters?: outputs.GetServiceMeshIngressGatewayRouteTablesFilter[];
    readonly id?: string;
    readonly ingressGatewayId?: string;
    readonly ingressGatewayRouteTableCollections: outputs.GetServiceMeshIngressGatewayRouteTablesIngressGatewayRouteTableCollection[];
    readonly name?: string;
    readonly state?: string;
}
export function getServiceMeshIngressGatewayRouteTablesOutput(args: GetServiceMeshIngressGatewayRouteTablesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceMeshIngressGatewayRouteTablesResult> {
    return pulumi.output(args).apply((a: any) => getServiceMeshIngressGatewayRouteTables(a, opts))
}

/**
 * A collection of arguments for invoking getServiceMeshIngressGatewayRouteTables.
 */
export interface GetServiceMeshIngressGatewayRouteTablesOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetServiceMeshIngressGatewayRouteTablesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    ingressGatewayId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
