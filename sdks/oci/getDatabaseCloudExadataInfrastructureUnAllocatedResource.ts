// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseCloudExadataInfrastructureUnAllocatedResource(args: GetDatabaseCloudExadataInfrastructureUnAllocatedResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseCloudExadataInfrastructureUnAllocatedResourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseCloudExadataInfrastructureUnAllocatedResource:getDatabaseCloudExadataInfrastructureUnAllocatedResource", {
        "cloudExadataInfrastructureId": args.cloudExadataInfrastructureId,
        "dbServers": args.dbServers,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseCloudExadataInfrastructureUnAllocatedResource.
 */
export interface GetDatabaseCloudExadataInfrastructureUnAllocatedResourceArgs {
    cloudExadataInfrastructureId: string;
    dbServers?: string[];
    id?: string;
}

/**
 * A collection of values returned by getDatabaseCloudExadataInfrastructureUnAllocatedResource.
 */
export interface GetDatabaseCloudExadataInfrastructureUnAllocatedResourceResult {
    readonly cloudAutonomousVmClusters: outputs.GetDatabaseCloudExadataInfrastructureUnAllocatedResourceCloudAutonomousVmCluster[];
    readonly cloudExadataInfrastructureDisplayName: string;
    readonly cloudExadataInfrastructureId: string;
    readonly dbServers?: string[];
    readonly exadataStorageInTbs: number;
    readonly id: string;
    readonly localStorageInGbs: number;
    readonly memoryInGbs: number;
    readonly ocpus: number;
}
export function getDatabaseCloudExadataInfrastructureUnAllocatedResourceOutput(args: GetDatabaseCloudExadataInfrastructureUnAllocatedResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseCloudExadataInfrastructureUnAllocatedResourceResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseCloudExadataInfrastructureUnAllocatedResource(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseCloudExadataInfrastructureUnAllocatedResource.
 */
export interface GetDatabaseCloudExadataInfrastructureUnAllocatedResourceOutputArgs {
    cloudExadataInfrastructureId: pulumi.Input<string>;
    dbServers?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
}
