// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataflowPool(args: GetDataflowPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetDataflowPoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataflowPool:getDataflowPool", {
        "poolId": args.poolId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataflowPool.
 */
export interface GetDataflowPoolArgs {
    poolId: string;
}

/**
 * A collection of values returned by getDataflowPool.
 */
export interface GetDataflowPoolResult {
    readonly compartmentId: string;
    readonly configurations: outputs.GetDataflowPoolConfiguration[];
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly idleTimeoutInMinutes: number;
    readonly lifecycleDetails: string;
    readonly ownerPrincipalId: string;
    readonly ownerUserName: string;
    readonly poolId: string;
    readonly poolMetrics: outputs.GetDataflowPoolPoolMetric[];
    readonly schedules: outputs.GetDataflowPoolSchedule[];
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getDataflowPoolOutput(args: GetDataflowPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataflowPoolResult> {
    return pulumi.output(args).apply((a: any) => getDataflowPool(a, opts))
}

/**
 * A collection of arguments for invoking getDataflowPool.
 */
export interface GetDataflowPoolOutputArgs {
    poolId: pulumi.Input<string>;
}
