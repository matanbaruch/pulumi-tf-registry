// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOpsiAwrHubs(args: GetOpsiAwrHubsArgs, opts?: pulumi.InvokeOptions): Promise<GetOpsiAwrHubsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOpsiAwrHubs:getOpsiAwrHubs", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "operationsInsightsWarehouseId": args.operationsInsightsWarehouseId,
        "states": args.states,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpsiAwrHubs.
 */
export interface GetOpsiAwrHubsArgs {
    compartmentId?: string;
    displayName?: string;
    filters?: inputs.GetOpsiAwrHubsFilter[];
    id?: string;
    operationsInsightsWarehouseId: string;
    states?: string[];
}

/**
 * A collection of values returned by getOpsiAwrHubs.
 */
export interface GetOpsiAwrHubsResult {
    readonly awrHubSummaryCollections: outputs.GetOpsiAwrHubsAwrHubSummaryCollection[];
    readonly compartmentId?: string;
    readonly displayName?: string;
    readonly filters?: outputs.GetOpsiAwrHubsFilter[];
    readonly id?: string;
    readonly operationsInsightsWarehouseId: string;
    readonly states?: string[];
}
export function getOpsiAwrHubsOutput(args: GetOpsiAwrHubsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpsiAwrHubsResult> {
    return pulumi.output(args).apply((a: any) => getOpsiAwrHubs(a, opts))
}

/**
 * A collection of arguments for invoking getOpsiAwrHubs.
 */
export interface GetOpsiAwrHubsOutputArgs {
    compartmentId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOpsiAwrHubsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    operationsInsightsWarehouseId: pulumi.Input<string>;
    states?: pulumi.Input<pulumi.Input<string>[]>;
}
