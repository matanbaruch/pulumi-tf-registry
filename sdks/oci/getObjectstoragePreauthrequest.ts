// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getObjectstoragePreauthrequest(args: GetObjectstoragePreauthrequestArgs, opts?: pulumi.InvokeOptions): Promise<GetObjectstoragePreauthrequestResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getObjectstoragePreauthrequest:getObjectstoragePreauthrequest", {
        "bucket": args.bucket,
        "namespace": args.namespace,
        "parId": args.parId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getObjectstoragePreauthrequest.
 */
export interface GetObjectstoragePreauthrequestArgs {
    bucket: string;
    namespace: string;
    parId: string;
}

/**
 * A collection of values returned by getObjectstoragePreauthrequest.
 */
export interface GetObjectstoragePreauthrequestResult {
    readonly accessType: string;
    readonly accessUri: string;
    readonly bucket: string;
    readonly bucketListingAction: string;
    readonly fullPath: string;
    readonly id: string;
    readonly name: string;
    readonly namespace: string;
    /**
     * @deprecated Deprecated
     */
    readonly object: string;
    readonly objectName: string;
    readonly parId: string;
    readonly timeCreated: string;
    readonly timeExpires: string;
}
export function getObjectstoragePreauthrequestOutput(args: GetObjectstoragePreauthrequestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetObjectstoragePreauthrequestResult> {
    return pulumi.output(args).apply((a: any) => getObjectstoragePreauthrequest(a, opts))
}

/**
 * A collection of arguments for invoking getObjectstoragePreauthrequest.
 */
export interface GetObjectstoragePreauthrequestOutputArgs {
    bucket: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    parId: pulumi.Input<string>;
}
