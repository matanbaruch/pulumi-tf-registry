// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIdentityUiPassword(args: GetIdentityUiPasswordArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityUiPasswordResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityUiPassword:getIdentityUiPassword", {
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityUiPassword.
 */
export interface GetIdentityUiPasswordArgs {
    userId: string;
}

/**
 * A collection of values returned by getIdentityUiPassword.
 */
export interface GetIdentityUiPasswordResult {
    readonly id: string;
    readonly inactiveStatus: string;
    readonly password: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly userId: string;
}
export function getIdentityUiPasswordOutput(args: GetIdentityUiPasswordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityUiPasswordResult> {
    return pulumi.output(args).apply((a: any) => getIdentityUiPassword(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityUiPassword.
 */
export interface GetIdentityUiPasswordOutputArgs {
    userId: pulumi.Input<string>;
}
