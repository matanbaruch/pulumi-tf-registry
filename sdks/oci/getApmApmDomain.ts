// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApmApmDomain(args: GetApmApmDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetApmApmDomainResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getApmApmDomain:getApmApmDomain", {
        "apmDomainId": args.apmDomainId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApmApmDomain.
 */
export interface GetApmApmDomainArgs {
    apmDomainId: string;
}

/**
 * A collection of values returned by getApmApmDomain.
 */
export interface GetApmApmDomainResult {
    readonly apmDomainId: string;
    readonly compartmentId: string;
    readonly dataUploadEndpoint: string;
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isFreeTier: boolean;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getApmApmDomainOutput(args: GetApmApmDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApmApmDomainResult> {
    return pulumi.output(args).apply((a: any) => getApmApmDomain(a, opts))
}

/**
 * A collection of arguments for invoking getApmApmDomain.
 */
export interface GetApmApmDomainOutputArgs {
    apmDomainId: pulumi.Input<string>;
}
