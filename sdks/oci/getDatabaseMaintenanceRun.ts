// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseMaintenanceRun(args: GetDatabaseMaintenanceRunArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseMaintenanceRunResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseMaintenanceRun:getDatabaseMaintenanceRun", {
        "maintenanceRunId": args.maintenanceRunId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseMaintenanceRun.
 */
export interface GetDatabaseMaintenanceRunArgs {
    maintenanceRunId: string;
}

/**
 * A collection of values returned by getDatabaseMaintenanceRun.
 */
export interface GetDatabaseMaintenanceRunResult {
    readonly compartmentId: string;
    readonly currentCustomActionTimeoutInMins: number;
    readonly currentPatchingComponent: string;
    readonly customActionTimeoutInMins: number;
    readonly databaseSoftwareImageId: string;
    readonly description: string;
    readonly displayName: string;
    readonly estimatedComponentPatchingStartTime: string;
    readonly estimatedPatchingTimes: outputs.GetDatabaseMaintenanceRunEstimatedPatchingTime[];
    readonly id: string;
    readonly isCustomActionTimeoutEnabled: boolean;
    readonly isDstFileUpdateEnabled: boolean;
    readonly lifecycleDetails: string;
    readonly maintenanceRunId: string;
    readonly maintenanceSubtype: string;
    readonly maintenanceType: string;
    readonly patchFailureCount: number;
    readonly patchId: string;
    readonly patchType: string;
    readonly patchingEndTime: string;
    readonly patchingMode: string;
    readonly patchingStartTime: string;
    readonly patchingStatus: string;
    readonly peerMaintenanceRunId: string;
    readonly state: string;
    readonly targetDbServerVersion: string;
    readonly targetResourceId: string;
    readonly targetResourceType: string;
    readonly targetStorageServerVersion: string;
    readonly timeEnded: string;
    readonly timeScheduled: string;
    readonly timeStarted: string;
}
export function getDatabaseMaintenanceRunOutput(args: GetDatabaseMaintenanceRunOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseMaintenanceRunResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseMaintenanceRun(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseMaintenanceRun.
 */
export interface GetDatabaseMaintenanceRunOutputArgs {
    maintenanceRunId: pulumi.Input<string>;
}
