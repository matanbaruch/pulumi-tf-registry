// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getQueueQueue(args: GetQueueQueueArgs, opts?: pulumi.InvokeOptions): Promise<GetQueueQueueResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getQueueQueue:getQueueQueue", {
        "queueId": args.queueId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getQueueQueue.
 */
export interface GetQueueQueueArgs {
    queueId: string;
}

/**
 * A collection of values returned by getQueueQueue.
 */
export interface GetQueueQueueResult {
    readonly channelConsumptionLimit: number;
    readonly compartmentId: string;
    readonly customEncryptionKeyId: string;
    readonly deadLetterQueueDeliveryCount: number;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly messagesEndpoint: string;
    readonly purgeTrigger: number;
    readonly purgeType: string;
    readonly queueId: string;
    readonly retentionInSeconds: number;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
    readonly timeoutInSeconds: number;
    readonly visibilityInSeconds: number;
}
export function getQueueQueueOutput(args: GetQueueQueueOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQueueQueueResult> {
    return pulumi.output(args).apply((a: any) => getQueueQueue(a, opts))
}

/**
 * A collection of arguments for invoking getQueueQueue.
 */
export interface GetQueueQueueOutputArgs {
    queueId: pulumi.Input<string>;
}
