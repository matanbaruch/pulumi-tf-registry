// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getContainerengineClusterKubeConfig(args: GetContainerengineClusterKubeConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerengineClusterKubeConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getContainerengineClusterKubeConfig:getContainerengineClusterKubeConfig", {
        "clusterId": args.clusterId,
        "endpoint": args.endpoint,
        "expiration": args.expiration,
        "id": args.id,
        "tokenVersion": args.tokenVersion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContainerengineClusterKubeConfig.
 */
export interface GetContainerengineClusterKubeConfigArgs {
    clusterId: string;
    endpoint?: string;
    expiration?: number;
    id?: string;
    tokenVersion?: string;
}

/**
 * A collection of values returned by getContainerengineClusterKubeConfig.
 */
export interface GetContainerengineClusterKubeConfigResult {
    readonly clusterId: string;
    readonly content: string;
    readonly endpoint?: string;
    readonly expiration?: number;
    readonly id: string;
    readonly tokenVersion?: string;
}
export function getContainerengineClusterKubeConfigOutput(args: GetContainerengineClusterKubeConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerengineClusterKubeConfigResult> {
    return pulumi.output(args).apply((a: any) => getContainerengineClusterKubeConfig(a, opts))
}

/**
 * A collection of arguments for invoking getContainerengineClusterKubeConfig.
 */
export interface GetContainerengineClusterKubeConfigOutputArgs {
    clusterId: pulumi.Input<string>;
    endpoint?: pulumi.Input<string>;
    expiration?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    tokenVersion?: pulumi.Input<string>;
}
