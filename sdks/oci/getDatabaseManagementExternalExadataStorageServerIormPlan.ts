// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementExternalExadataStorageServerIormPlan(args: GetDatabaseManagementExternalExadataStorageServerIormPlanArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementExternalExadataStorageServerIormPlanResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementExternalExadataStorageServerIormPlan:getDatabaseManagementExternalExadataStorageServerIormPlan", {
        "externalExadataStorageServerId": args.externalExadataStorageServerId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementExternalExadataStorageServerIormPlan.
 */
export interface GetDatabaseManagementExternalExadataStorageServerIormPlanArgs {
    externalExadataStorageServerId: string;
    id?: string;
}

/**
 * A collection of values returned by getDatabaseManagementExternalExadataStorageServerIormPlan.
 */
export interface GetDatabaseManagementExternalExadataStorageServerIormPlanResult {
    readonly dbPlans: outputs.GetDatabaseManagementExternalExadataStorageServerIormPlanDbPlan[];
    readonly externalExadataStorageServerId: string;
    readonly id: string;
    readonly planObjective: string;
    readonly planStatus: string;
}
export function getDatabaseManagementExternalExadataStorageServerIormPlanOutput(args: GetDatabaseManagementExternalExadataStorageServerIormPlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementExternalExadataStorageServerIormPlanResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementExternalExadataStorageServerIormPlan(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementExternalExadataStorageServerIormPlan.
 */
export interface GetDatabaseManagementExternalExadataStorageServerIormPlanOutputArgs {
    externalExadataStorageServerId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
