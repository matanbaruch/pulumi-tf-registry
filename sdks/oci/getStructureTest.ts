// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStructureTest(args: GetStructureTestArgs, opts?: pulumi.InvokeOptions): Promise<GetStructureTestResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getStructureTest:getStructureTest", {
        "conditions": args.conditions,
        "digest": args.digest,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStructureTest.
 */
export interface GetStructureTestArgs {
    conditions: inputs.GetStructureTestCondition[];
    digest: string;
}

/**
 * A collection of values returned by getStructureTest.
 */
export interface GetStructureTestResult {
    readonly conditions: outputs.GetStructureTestCondition[];
    readonly digest: string;
    readonly id: string;
    readonly testedRef: string;
}
export function getStructureTestOutput(args: GetStructureTestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStructureTestResult> {
    return pulumi.output(args).apply((a: any) => getStructureTest(a, opts))
}

/**
 * A collection of arguments for invoking getStructureTest.
 */
export interface GetStructureTestOutputArgs {
    conditions: pulumi.Input<pulumi.Input<inputs.GetStructureTestConditionArgs>[]>;
    digest: pulumi.Input<string>;
}
