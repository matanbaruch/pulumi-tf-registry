// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeMaskingPolicyMaskingSchemas(args: GetDataSafeMaskingPolicyMaskingSchemasArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeMaskingPolicyMaskingSchemasResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeMaskingPolicyMaskingSchemas:getDataSafeMaskingPolicyMaskingSchemas", {
        "filters": args.filters,
        "id": args.id,
        "maskingPolicyId": args.maskingPolicyId,
        "schemaNames": args.schemaNames,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeMaskingPolicyMaskingSchemas.
 */
export interface GetDataSafeMaskingPolicyMaskingSchemasArgs {
    filters?: inputs.GetDataSafeMaskingPolicyMaskingSchemasFilter[];
    id?: string;
    maskingPolicyId: string;
    schemaNames?: string[];
}

/**
 * A collection of values returned by getDataSafeMaskingPolicyMaskingSchemas.
 */
export interface GetDataSafeMaskingPolicyMaskingSchemasResult {
    readonly filters?: outputs.GetDataSafeMaskingPolicyMaskingSchemasFilter[];
    readonly id: string;
    readonly maskingPolicyId: string;
    readonly maskingSchemaCollections: outputs.GetDataSafeMaskingPolicyMaskingSchemasMaskingSchemaCollection[];
    readonly schemaNames?: string[];
}
export function getDataSafeMaskingPolicyMaskingSchemasOutput(args: GetDataSafeMaskingPolicyMaskingSchemasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeMaskingPolicyMaskingSchemasResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeMaskingPolicyMaskingSchemas(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeMaskingPolicyMaskingSchemas.
 */
export interface GetDataSafeMaskingPolicyMaskingSchemasOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataSafeMaskingPolicyMaskingSchemasFilterArgs>[]>;
    id?: pulumi.Input<string>;
    maskingPolicyId: pulumi.Input<string>;
    schemaNames?: pulumi.Input<pulumi.Input<string>[]>;
}
