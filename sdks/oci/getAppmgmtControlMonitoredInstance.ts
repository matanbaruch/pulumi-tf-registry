// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAppmgmtControlMonitoredInstance(args: GetAppmgmtControlMonitoredInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetAppmgmtControlMonitoredInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getAppmgmtControlMonitoredInstance:getAppmgmtControlMonitoredInstance", {
        "id": args.id,
        "monitoredInstanceId": args.monitoredInstanceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppmgmtControlMonitoredInstance.
 */
export interface GetAppmgmtControlMonitoredInstanceArgs {
    id?: string;
    monitoredInstanceId: string;
}

/**
 * A collection of values returned by getAppmgmtControlMonitoredInstance.
 */
export interface GetAppmgmtControlMonitoredInstanceResult {
    readonly compartmentId: string;
    readonly displayName: string;
    readonly id: string;
    readonly instanceId: string;
    readonly lifecycleDetails: string;
    readonly managementAgentId: string;
    readonly monitoredInstanceId: string;
    readonly monitoringState: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getAppmgmtControlMonitoredInstanceOutput(args: GetAppmgmtControlMonitoredInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppmgmtControlMonitoredInstanceResult> {
    return pulumi.output(args).apply((a: any) => getAppmgmtControlMonitoredInstance(a, opts))
}

/**
 * A collection of arguments for invoking getAppmgmtControlMonitoredInstance.
 */
export interface GetAppmgmtControlMonitoredInstanceOutputArgs {
    id?: pulumi.Input<string>;
    monitoredInstanceId: pulumi.Input<string>;
}
