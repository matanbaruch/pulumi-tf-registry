// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementManagedDatabaseSqlPlanBaselineConfiguration(args: GetDatabaseManagementManagedDatabaseSqlPlanBaselineConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementManagedDatabaseSqlPlanBaselineConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementManagedDatabaseSqlPlanBaselineConfiguration:getDatabaseManagementManagedDatabaseSqlPlanBaselineConfiguration", {
        "id": args.id,
        "managedDatabaseId": args.managedDatabaseId,
        "opcNamedCredentialId": args.opcNamedCredentialId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedDatabaseSqlPlanBaselineConfiguration.
 */
export interface GetDatabaseManagementManagedDatabaseSqlPlanBaselineConfigurationArgs {
    id?: string;
    managedDatabaseId: string;
    opcNamedCredentialId?: string;
}

/**
 * A collection of values returned by getDatabaseManagementManagedDatabaseSqlPlanBaselineConfiguration.
 */
export interface GetDatabaseManagementManagedDatabaseSqlPlanBaselineConfigurationResult {
    readonly autoCaptureFilters: outputs.GetDatabaseManagementManagedDatabaseSqlPlanBaselineConfigurationAutoCaptureFilter[];
    readonly autoSpmEvolveTaskParameters: outputs.GetDatabaseManagementManagedDatabaseSqlPlanBaselineConfigurationAutoSpmEvolveTaskParameter[];
    readonly id: string;
    readonly isAutoSpmEvolveTaskEnabled: boolean;
    readonly isAutomaticInitialPlanCaptureEnabled: boolean;
    readonly isHighFrequencyAutoSpmEvolveTaskEnabled: boolean;
    readonly isSqlPlanBaselinesUsageEnabled: boolean;
    readonly managedDatabaseId: string;
    readonly opcNamedCredentialId?: string;
    readonly planRetentionWeeks: number;
    readonly spaceBudgetMb: number;
    readonly spaceBudgetPercent: number;
    readonly spaceUsedMb: number;
}
export function getDatabaseManagementManagedDatabaseSqlPlanBaselineConfigurationOutput(args: GetDatabaseManagementManagedDatabaseSqlPlanBaselineConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementManagedDatabaseSqlPlanBaselineConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementManagedDatabaseSqlPlanBaselineConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedDatabaseSqlPlanBaselineConfiguration.
 */
export interface GetDatabaseManagementManagedDatabaseSqlPlanBaselineConfigurationOutputArgs {
    id?: pulumi.Input<string>;
    managedDatabaseId: pulumi.Input<string>;
    opcNamedCredentialId?: pulumi.Input<string>;
}
