// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CapacityManagementOccAvailabilityCatalog extends pulumi.CustomResource {
    /**
     * Get an existing CapacityManagementOccAvailabilityCatalog resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CapacityManagementOccAvailabilityCatalogState, opts?: pulumi.CustomResourceOptions): CapacityManagementOccAvailabilityCatalog {
        return new CapacityManagementOccAvailabilityCatalog(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/capacityManagementOccAvailabilityCatalog:CapacityManagementOccAvailabilityCatalog';

    /**
     * Returns true if the given object is an instance of CapacityManagementOccAvailabilityCatalog.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CapacityManagementOccAvailabilityCatalog {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CapacityManagementOccAvailabilityCatalog.__pulumiType;
    }

    public readonly base64encodedCatalogDetails!: pulumi.Output<string>;
    public /*out*/ readonly catalogState!: pulumi.Output<string>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly description!: pulumi.Output<string>;
    public /*out*/ readonly details!: pulumi.Output<outputs.CapacityManagementOccAvailabilityCatalogDetail[]>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly metadataDetails!: pulumi.Output<outputs.CapacityManagementOccAvailabilityCatalogMetadataDetails | undefined>;
    public readonly namespace!: pulumi.Output<string>;
    public readonly occCustomerGroupId!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CapacityManagementOccAvailabilityCatalogTimeouts | undefined>;

    /**
     * Create a CapacityManagementOccAvailabilityCatalog resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CapacityManagementOccAvailabilityCatalogArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CapacityManagementOccAvailabilityCatalogArgs | CapacityManagementOccAvailabilityCatalogState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CapacityManagementOccAvailabilityCatalogState | undefined;
            resourceInputs["base64encodedCatalogDetails"] = state ? state.base64encodedCatalogDetails : undefined;
            resourceInputs["catalogState"] = state ? state.catalogState : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["details"] = state ? state.details : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["metadataDetails"] = state ? state.metadataDetails : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["occCustomerGroupId"] = state ? state.occCustomerGroupId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CapacityManagementOccAvailabilityCatalogArgs | undefined;
            if ((!args || args.base64encodedCatalogDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'base64encodedCatalogDetails'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if ((!args || args.occCustomerGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'occCustomerGroupId'");
            }
            resourceInputs["base64encodedCatalogDetails"] = args ? args.base64encodedCatalogDetails : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["metadataDetails"] = args ? args.metadataDetails : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["occCustomerGroupId"] = args ? args.occCustomerGroupId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["catalogState"] = undefined /*out*/;
            resourceInputs["details"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CapacityManagementOccAvailabilityCatalog.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CapacityManagementOccAvailabilityCatalog resources.
 */
export interface CapacityManagementOccAvailabilityCatalogState {
    base64encodedCatalogDetails?: pulumi.Input<string>;
    catalogState?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    details?: pulumi.Input<pulumi.Input<inputs.CapacityManagementOccAvailabilityCatalogDetail>[]>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lifecycleDetails?: pulumi.Input<string>;
    metadataDetails?: pulumi.Input<inputs.CapacityManagementOccAvailabilityCatalogMetadataDetails>;
    namespace?: pulumi.Input<string>;
    occCustomerGroupId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CapacityManagementOccAvailabilityCatalogTimeouts>;
}

/**
 * The set of arguments for constructing a CapacityManagementOccAvailabilityCatalog resource.
 */
export interface CapacityManagementOccAvailabilityCatalogArgs {
    base64encodedCatalogDetails: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    metadataDetails?: pulumi.Input<inputs.CapacityManagementOccAvailabilityCatalogMetadataDetails>;
    namespace: pulumi.Input<string>;
    occCustomerGroupId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CapacityManagementOccAvailabilityCatalogTimeouts>;
}
