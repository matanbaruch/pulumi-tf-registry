// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKmsKey(args: GetKmsKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetKmsKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getKmsKey:getKmsKey", {
        "keyId": args.keyId,
        "managementEndpoint": args.managementEndpoint,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsKey.
 */
export interface GetKmsKeyArgs {
    keyId: string;
    managementEndpoint: string;
}

/**
 * A collection of values returned by getKmsKey.
 */
export interface GetKmsKeyResult {
    readonly autoKeyRotationDetails: outputs.GetKmsKeyAutoKeyRotationDetail[];
    readonly compartmentId: string;
    readonly currentKeyVersion: string;
    readonly definedTags: {[key: string]: string};
    readonly desiredState: string;
    readonly displayName: string;
    readonly externalKeyReferenceDetails: outputs.GetKmsKeyExternalKeyReferenceDetail[];
    readonly externalKeyReferences: outputs.GetKmsKeyExternalKeyReference[];
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isAutoRotationEnabled: boolean;
    readonly isPrimary: boolean;
    readonly keyId: string;
    readonly keyShapes: outputs.GetKmsKeyKeyShape[];
    readonly managementEndpoint: string;
    readonly protectionMode: string;
    readonly replicaDetails: outputs.GetKmsKeyReplicaDetail[];
    readonly restoreFromFiles: outputs.GetKmsKeyRestoreFromFile[];
    readonly restoreFromObjectStores: outputs.GetKmsKeyRestoreFromObjectStore[];
    readonly restoreTrigger: boolean;
    readonly restoredFromKeyId: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly timeOfDeletion: string;
    readonly vaultId: string;
}
export function getKmsKeyOutput(args: GetKmsKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKmsKeyResult> {
    return pulumi.output(args).apply((a: any) => getKmsKey(a, opts))
}

/**
 * A collection of arguments for invoking getKmsKey.
 */
export interface GetKmsKeyOutputArgs {
    keyId: pulumi.Input<string>;
    managementEndpoint: pulumi.Input<string>;
}
