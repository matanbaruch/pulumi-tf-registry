// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseExternalContainerDatabase(args: GetDatabaseExternalContainerDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseExternalContainerDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseExternalContainerDatabase:getDatabaseExternalContainerDatabase", {
        "externalContainerDatabaseId": args.externalContainerDatabaseId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseExternalContainerDatabase.
 */
export interface GetDatabaseExternalContainerDatabaseArgs {
    externalContainerDatabaseId: string;
}

/**
 * A collection of values returned by getDatabaseExternalContainerDatabase.
 */
export interface GetDatabaseExternalContainerDatabaseResult {
    readonly characterSet: string;
    readonly compartmentId: string;
    readonly databaseConfiguration: string;
    readonly databaseEdition: string;
    readonly databaseManagementConfigs: outputs.GetDatabaseExternalContainerDatabaseDatabaseManagementConfig[];
    readonly databaseVersion: string;
    readonly dbId: string;
    readonly dbPacks: string;
    readonly dbUniqueName: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly externalContainerDatabaseId: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleDetails: string;
    readonly ncharacterSet: string;
    readonly stackMonitoringConfigs: outputs.GetDatabaseExternalContainerDatabaseStackMonitoringConfig[];
    readonly state: string;
    readonly timeCreated: string;
    readonly timeZone: string;
}
export function getDatabaseExternalContainerDatabaseOutput(args: GetDatabaseExternalContainerDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseExternalContainerDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseExternalContainerDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseExternalContainerDatabase.
 */
export interface GetDatabaseExternalContainerDatabaseOutputArgs {
    externalContainerDatabaseId: pulumi.Input<string>;
}
