// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreVirtualCircuitAssociatedTunnels(args: GetCoreVirtualCircuitAssociatedTunnelsArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreVirtualCircuitAssociatedTunnelsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreVirtualCircuitAssociatedTunnels:getCoreVirtualCircuitAssociatedTunnels", {
        "filters": args.filters,
        "id": args.id,
        "virtualCircuitId": args.virtualCircuitId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreVirtualCircuitAssociatedTunnels.
 */
export interface GetCoreVirtualCircuitAssociatedTunnelsArgs {
    filters?: inputs.GetCoreVirtualCircuitAssociatedTunnelsFilter[];
    id?: string;
    virtualCircuitId: string;
}

/**
 * A collection of values returned by getCoreVirtualCircuitAssociatedTunnels.
 */
export interface GetCoreVirtualCircuitAssociatedTunnelsResult {
    readonly filters?: outputs.GetCoreVirtualCircuitAssociatedTunnelsFilter[];
    readonly id: string;
    readonly virtualCircuitAssociatedTunnelDetails: outputs.GetCoreVirtualCircuitAssociatedTunnelsVirtualCircuitAssociatedTunnelDetail[];
    readonly virtualCircuitId: string;
}
export function getCoreVirtualCircuitAssociatedTunnelsOutput(args: GetCoreVirtualCircuitAssociatedTunnelsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreVirtualCircuitAssociatedTunnelsResult> {
    return pulumi.output(args).apply((a: any) => getCoreVirtualCircuitAssociatedTunnels(a, opts))
}

/**
 * A collection of arguments for invoking getCoreVirtualCircuitAssociatedTunnels.
 */
export interface GetCoreVirtualCircuitAssociatedTunnelsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetCoreVirtualCircuitAssociatedTunnelsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    virtualCircuitId: pulumi.Input<string>;
}
