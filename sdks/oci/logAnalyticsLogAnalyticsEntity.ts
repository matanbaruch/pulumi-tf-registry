// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LogAnalyticsLogAnalyticsEntity extends pulumi.CustomResource {
    /**
     * Get an existing LogAnalyticsLogAnalyticsEntity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogAnalyticsLogAnalyticsEntityState, opts?: pulumi.CustomResourceOptions): LogAnalyticsLogAnalyticsEntity {
        return new LogAnalyticsLogAnalyticsEntity(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/logAnalyticsLogAnalyticsEntity:LogAnalyticsLogAnalyticsEntity';

    /**
     * Returns true if the given object is an instance of LogAnalyticsLogAnalyticsEntity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogAnalyticsLogAnalyticsEntity {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogAnalyticsLogAnalyticsEntity.__pulumiType;
    }

    public /*out*/ readonly areLogsCollected!: pulumi.Output<boolean>;
    public readonly cloudResourceId!: pulumi.Output<string>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly entityTypeInternalName!: pulumi.Output<string>;
    public readonly entityTypeName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly hostname!: pulumi.Output<string>;
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public /*out*/ readonly managementAgentCompartmentId!: pulumi.Output<string>;
    public /*out*/ readonly managementAgentDisplayName!: pulumi.Output<string>;
    public readonly managementAgentId!: pulumi.Output<string>;
    public readonly metadata!: pulumi.Output<outputs.LogAnalyticsLogAnalyticsEntityMetadata | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly namespace!: pulumi.Output<string>;
    public readonly properties!: pulumi.Output<{[key: string]: string}>;
    public readonly sourceId!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public readonly timeLastDiscovered!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.LogAnalyticsLogAnalyticsEntityTimeouts | undefined>;
    public readonly timezoneRegion!: pulumi.Output<string>;

    /**
     * Create a LogAnalyticsLogAnalyticsEntity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogAnalyticsLogAnalyticsEntityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogAnalyticsLogAnalyticsEntityArgs | LogAnalyticsLogAnalyticsEntityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogAnalyticsLogAnalyticsEntityState | undefined;
            resourceInputs["areLogsCollected"] = state ? state.areLogsCollected : undefined;
            resourceInputs["cloudResourceId"] = state ? state.cloudResourceId : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["entityTypeInternalName"] = state ? state.entityTypeInternalName : undefined;
            resourceInputs["entityTypeName"] = state ? state.entityTypeName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["managementAgentCompartmentId"] = state ? state.managementAgentCompartmentId : undefined;
            resourceInputs["managementAgentDisplayName"] = state ? state.managementAgentDisplayName : undefined;
            resourceInputs["managementAgentId"] = state ? state.managementAgentId : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
            resourceInputs["sourceId"] = state ? state.sourceId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeLastDiscovered"] = state ? state.timeLastDiscovered : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["timezoneRegion"] = state ? state.timezoneRegion : undefined;
        } else {
            const args = argsOrState as LogAnalyticsLogAnalyticsEntityArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.entityTypeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entityTypeName'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["cloudResourceId"] = args ? args.cloudResourceId : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["entityTypeName"] = args ? args.entityTypeName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["managementAgentId"] = args ? args.managementAgentId : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["sourceId"] = args ? args.sourceId : undefined;
            resourceInputs["timeLastDiscovered"] = args ? args.timeLastDiscovered : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["timezoneRegion"] = args ? args.timezoneRegion : undefined;
            resourceInputs["areLogsCollected"] = undefined /*out*/;
            resourceInputs["entityTypeInternalName"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["managementAgentCompartmentId"] = undefined /*out*/;
            resourceInputs["managementAgentDisplayName"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogAnalyticsLogAnalyticsEntity.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LogAnalyticsLogAnalyticsEntity resources.
 */
export interface LogAnalyticsLogAnalyticsEntityState {
    areLogsCollected?: pulumi.Input<boolean>;
    cloudResourceId?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    entityTypeInternalName?: pulumi.Input<string>;
    entityTypeName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostname?: pulumi.Input<string>;
    lifecycleDetails?: pulumi.Input<string>;
    managementAgentCompartmentId?: pulumi.Input<string>;
    managementAgentDisplayName?: pulumi.Input<string>;
    managementAgentId?: pulumi.Input<string>;
    metadata?: pulumi.Input<inputs.LogAnalyticsLogAnalyticsEntityMetadata>;
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    sourceId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeLastDiscovered?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.LogAnalyticsLogAnalyticsEntityTimeouts>;
    timezoneRegion?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogAnalyticsLogAnalyticsEntity resource.
 */
export interface LogAnalyticsLogAnalyticsEntityArgs {
    cloudResourceId?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    entityTypeName: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hostname?: pulumi.Input<string>;
    managementAgentId?: pulumi.Input<string>;
    metadata?: pulumi.Input<inputs.LogAnalyticsLogAnalyticsEntityMetadata>;
    name?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    sourceId?: pulumi.Input<string>;
    timeLastDiscovered?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.LogAnalyticsLogAnalyticsEntityTimeouts>;
    timezoneRegion?: pulumi.Input<string>;
}
