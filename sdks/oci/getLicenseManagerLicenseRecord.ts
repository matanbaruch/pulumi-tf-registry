// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLicenseManagerLicenseRecord(args: GetLicenseManagerLicenseRecordArgs, opts?: pulumi.InvokeOptions): Promise<GetLicenseManagerLicenseRecordResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLicenseManagerLicenseRecord:getLicenseManagerLicenseRecord", {
        "licenseRecordId": args.licenseRecordId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLicenseManagerLicenseRecord.
 */
export interface GetLicenseManagerLicenseRecordArgs {
    licenseRecordId: string;
}

/**
 * A collection of values returned by getLicenseManagerLicenseRecord.
 */
export interface GetLicenseManagerLicenseRecordResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly expirationDate: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isPerpetual: boolean;
    readonly isUnlimited: boolean;
    readonly licenseCount: number;
    readonly licenseRecordId: string;
    readonly licenseUnit: string;
    readonly productId: string;
    readonly productLicense: string;
    readonly productLicenseId: string;
    readonly state: string;
    readonly supportEndDate: string;
    readonly systemTags: {[key: string]: string};
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getLicenseManagerLicenseRecordOutput(args: GetLicenseManagerLicenseRecordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLicenseManagerLicenseRecordResult> {
    return pulumi.output(args).apply((a: any) => getLicenseManagerLicenseRecord(a, opts))
}

/**
 * A collection of arguments for invoking getLicenseManagerLicenseRecord.
 */
export interface GetLicenseManagerLicenseRecordOutputArgs {
    licenseRecordId: pulumi.Input<string>;
}
