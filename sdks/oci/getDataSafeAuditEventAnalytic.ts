// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeAuditEventAnalytic(args: GetDataSafeAuditEventAnalyticArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeAuditEventAnalyticResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeAuditEventAnalytic:getDataSafeAuditEventAnalytic", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "groupBies": args.groupBies,
        "id": args.id,
        "queryTimeZone": args.queryTimeZone,
        "scimQuery": args.scimQuery,
        "summaryFields": args.summaryFields,
        "timeEnded": args.timeEnded,
        "timeStarted": args.timeStarted,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeAuditEventAnalytic.
 */
export interface GetDataSafeAuditEventAnalyticArgs {
    accessLevel?: string;
    compartmentId: string;
    compartmentIdInSubtree?: boolean;
    groupBies?: string[];
    id?: string;
    queryTimeZone?: string;
    scimQuery?: string;
    summaryFields?: string[];
    timeEnded?: string;
    timeStarted?: string;
}

/**
 * A collection of values returned by getDataSafeAuditEventAnalytic.
 */
export interface GetDataSafeAuditEventAnalyticResult {
    readonly accessLevel?: string;
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly groupBies?: string[];
    readonly id: string;
    readonly items: outputs.GetDataSafeAuditEventAnalyticItem[];
    readonly queryTimeZone?: string;
    readonly scimQuery?: string;
    readonly summaryFields?: string[];
    readonly timeEnded?: string;
    readonly timeStarted?: string;
}
export function getDataSafeAuditEventAnalyticOutput(args: GetDataSafeAuditEventAnalyticOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeAuditEventAnalyticResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeAuditEventAnalytic(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeAuditEventAnalytic.
 */
export interface GetDataSafeAuditEventAnalyticOutputArgs {
    accessLevel?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    groupBies?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    queryTimeZone?: pulumi.Input<string>;
    scimQuery?: pulumi.Input<string>;
    summaryFields?: pulumi.Input<pulumi.Input<string>[]>;
    timeEnded?: pulumi.Input<string>;
    timeStarted?: pulumi.Input<string>;
}
