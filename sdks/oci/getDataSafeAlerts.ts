// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataSafeAlerts(args: GetDataSafeAlertsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSafeAlertsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDataSafeAlerts:getDataSafeAlerts", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "fields": args.fields,
        "filters": args.filters,
        "id": args.id,
        "scimQuery": args.scimQuery,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataSafeAlerts.
 */
export interface GetDataSafeAlertsArgs {
    accessLevel?: string;
    compartmentId: string;
    compartmentIdInSubtree?: boolean;
    fields?: string[];
    filters?: inputs.GetDataSafeAlertsFilter[];
    id?: string;
    scimQuery?: string;
}

/**
 * A collection of values returned by getDataSafeAlerts.
 */
export interface GetDataSafeAlertsResult {
    readonly accessLevel?: string;
    readonly alertCollections: outputs.GetDataSafeAlertsAlertCollection[];
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly fields?: string[];
    readonly filters?: outputs.GetDataSafeAlertsFilter[];
    readonly id?: string;
    readonly scimQuery?: string;
}
export function getDataSafeAlertsOutput(args: GetDataSafeAlertsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSafeAlertsResult> {
    return pulumi.output(args).apply((a: any) => getDataSafeAlerts(a, opts))
}

/**
 * A collection of arguments for invoking getDataSafeAlerts.
 */
export interface GetDataSafeAlertsOutputArgs {
    accessLevel?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDataSafeAlertsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    scimQuery?: pulumi.Input<string>;
}
