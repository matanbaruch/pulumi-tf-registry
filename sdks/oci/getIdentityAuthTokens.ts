// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityAuthTokens(args: GetIdentityAuthTokensArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityAuthTokensResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityAuthTokens:getIdentityAuthTokens", {
        "filters": args.filters,
        "id": args.id,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityAuthTokens.
 */
export interface GetIdentityAuthTokensArgs {
    filters?: inputs.GetIdentityAuthTokensFilter[];
    id?: string;
    userId: string;
}

/**
 * A collection of values returned by getIdentityAuthTokens.
 */
export interface GetIdentityAuthTokensResult {
    readonly filters?: outputs.GetIdentityAuthTokensFilter[];
    readonly id: string;
    readonly tokens: outputs.GetIdentityAuthTokensToken[];
    readonly userId: string;
}
export function getIdentityAuthTokensOutput(args: GetIdentityAuthTokensOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityAuthTokensResult> {
    return pulumi.output(args).apply((a: any) => getIdentityAuthTokens(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityAuthTokens.
 */
export interface GetIdentityAuthTokensOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetIdentityAuthTokensFilterArgs>[]>;
    id?: pulumi.Input<string>;
    userId: pulumi.Input<string>;
}
