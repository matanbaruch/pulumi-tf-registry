// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStreamingStream(args: GetStreamingStreamArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamingStreamResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getStreamingStream:getStreamingStream", {
        "streamId": args.streamId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStreamingStream.
 */
export interface GetStreamingStreamArgs {
    streamId: string;
}

/**
 * A collection of values returned by getStreamingStream.
 */
export interface GetStreamingStreamResult {
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly lifecycleStateDetails: string;
    readonly messagesEndpoint: string;
    readonly name: string;
    readonly partitions: number;
    readonly retentionInHours: number;
    readonly state: string;
    readonly streamId: string;
    readonly streamPoolId: string;
    readonly timeCreated: string;
}
export function getStreamingStreamOutput(args: GetStreamingStreamOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStreamingStreamResult> {
    return pulumi.output(args).apply((a: any) => getStreamingStream(a, opts))
}

/**
 * A collection of arguments for invoking getStreamingStream.
 */
export interface GetStreamingStreamOutputArgs {
    streamId: pulumi.Input<string>;
}
