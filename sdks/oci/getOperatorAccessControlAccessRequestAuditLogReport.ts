// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOperatorAccessControlAccessRequestAuditLogReport(args: GetOperatorAccessControlAccessRequestAuditLogReportArgs, opts?: pulumi.InvokeOptions): Promise<GetOperatorAccessControlAccessRequestAuditLogReportResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOperatorAccessControlAccessRequestAuditLogReport:getOperatorAccessControlAccessRequestAuditLogReport", {
        "accessRequestId": args.accessRequestId,
        "enableProcessTree": args.enableProcessTree,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOperatorAccessControlAccessRequestAuditLogReport.
 */
export interface GetOperatorAccessControlAccessRequestAuditLogReportArgs {
    accessRequestId: string;
    enableProcessTree?: number;
    id?: string;
}

/**
 * A collection of values returned by getOperatorAccessControlAccessRequestAuditLogReport.
 */
export interface GetOperatorAccessControlAccessRequestAuditLogReportResult {
    readonly accessRequestId: string;
    readonly auditReportStatus: string;
    readonly enableProcessTree?: number;
    readonly id: string;
    readonly processTree: string;
    readonly report: string;
    readonly timeOfReportGeneration: string;
}
export function getOperatorAccessControlAccessRequestAuditLogReportOutput(args: GetOperatorAccessControlAccessRequestAuditLogReportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOperatorAccessControlAccessRequestAuditLogReportResult> {
    return pulumi.output(args).apply((a: any) => getOperatorAccessControlAccessRequestAuditLogReport(a, opts))
}

/**
 * A collection of arguments for invoking getOperatorAccessControlAccessRequestAuditLogReport.
 */
export interface GetOperatorAccessControlAccessRequestAuditLogReportOutputArgs {
    accessRequestId: pulumi.Input<string>;
    enableProcessTree?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
}
