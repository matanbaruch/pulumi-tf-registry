// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataSafeAlert extends pulumi.CustomResource {
    /**
     * Get an existing DataSafeAlert resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataSafeAlertState, opts?: pulumi.CustomResourceOptions): DataSafeAlert {
        return new DataSafeAlert(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/dataSafeAlert:DataSafeAlert';

    /**
     * Returns true if the given object is an instance of DataSafeAlert.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataSafeAlert {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataSafeAlert.__pulumiType;
    }

    public readonly alertId!: pulumi.Output<string>;
    public /*out*/ readonly alertPolicyRuleKey!: pulumi.Output<string>;
    public /*out*/ readonly alertPolicyRuleName!: pulumi.Output<string>;
    public /*out*/ readonly alertType!: pulumi.Output<string>;
    public readonly comment!: pulumi.Output<string>;
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly description!: pulumi.Output<string>;
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    public /*out*/ readonly featureDetails!: pulumi.Output<{[key: string]: string}>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly operation!: pulumi.Output<string>;
    public /*out*/ readonly operationStatus!: pulumi.Output<string>;
    public /*out*/ readonly operationTime!: pulumi.Output<string>;
    public /*out*/ readonly policyId!: pulumi.Output<string>;
    public /*out*/ readonly resourceName!: pulumi.Output<string>;
    public /*out*/ readonly severity!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly targetIds!: pulumi.Output<string[]>;
    public /*out*/ readonly targetNames!: pulumi.Output<string[]>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DataSafeAlertTimeouts | undefined>;

    /**
     * Create a DataSafeAlert resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataSafeAlertArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataSafeAlertArgs | DataSafeAlertState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataSafeAlertState | undefined;
            resourceInputs["alertId"] = state ? state.alertId : undefined;
            resourceInputs["alertPolicyRuleKey"] = state ? state.alertPolicyRuleKey : undefined;
            resourceInputs["alertPolicyRuleName"] = state ? state.alertPolicyRuleName : undefined;
            resourceInputs["alertType"] = state ? state.alertType : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["featureDetails"] = state ? state.featureDetails : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["operation"] = state ? state.operation : undefined;
            resourceInputs["operationStatus"] = state ? state.operationStatus : undefined;
            resourceInputs["operationTime"] = state ? state.operationTime : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["resourceName"] = state ? state.resourceName : undefined;
            resourceInputs["severity"] = state ? state.severity : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["targetIds"] = state ? state.targetIds : undefined;
            resourceInputs["targetNames"] = state ? state.targetNames : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DataSafeAlertArgs | undefined;
            if ((!args || args.alertId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'alertId'");
            }
            resourceInputs["alertId"] = args ? args.alertId : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["alertPolicyRuleKey"] = undefined /*out*/;
            resourceInputs["alertPolicyRuleName"] = undefined /*out*/;
            resourceInputs["alertType"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["featureDetails"] = undefined /*out*/;
            resourceInputs["operation"] = undefined /*out*/;
            resourceInputs["operationStatus"] = undefined /*out*/;
            resourceInputs["operationTime"] = undefined /*out*/;
            resourceInputs["policyId"] = undefined /*out*/;
            resourceInputs["resourceName"] = undefined /*out*/;
            resourceInputs["severity"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["targetIds"] = undefined /*out*/;
            resourceInputs["targetNames"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataSafeAlert.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataSafeAlert resources.
 */
export interface DataSafeAlertState {
    alertId?: pulumi.Input<string>;
    alertPolicyRuleKey?: pulumi.Input<string>;
    alertPolicyRuleName?: pulumi.Input<string>;
    alertType?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    featureDetails?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    operation?: pulumi.Input<string>;
    operationStatus?: pulumi.Input<string>;
    operationTime?: pulumi.Input<string>;
    policyId?: pulumi.Input<string>;
    resourceName?: pulumi.Input<string>;
    severity?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetIds?: pulumi.Input<pulumi.Input<string>[]>;
    targetNames?: pulumi.Input<pulumi.Input<string>[]>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataSafeAlertTimeouts>;
}

/**
 * The set of arguments for constructing a DataSafeAlert resource.
 */
export interface DataSafeAlertArgs {
    alertId: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataSafeAlertTimeouts>;
}
