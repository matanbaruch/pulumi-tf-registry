// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityApiKeys(args: GetIdentityApiKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityApiKeysResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityApiKeys:getIdentityApiKeys", {
        "filters": args.filters,
        "id": args.id,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityApiKeys.
 */
export interface GetIdentityApiKeysArgs {
    filters?: inputs.GetIdentityApiKeysFilter[];
    id?: string;
    userId: string;
}

/**
 * A collection of values returned by getIdentityApiKeys.
 */
export interface GetIdentityApiKeysResult {
    readonly apiKeys: outputs.GetIdentityApiKeysApiKey[];
    readonly filters?: outputs.GetIdentityApiKeysFilter[];
    readonly id: string;
    readonly userId: string;
}
export function getIdentityApiKeysOutput(args: GetIdentityApiKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityApiKeysResult> {
    return pulumi.output(args).apply((a: any) => getIdentityApiKeys(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityApiKeys.
 */
export interface GetIdentityApiKeysOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetIdentityApiKeysFilterArgs>[]>;
    id?: pulumi.Input<string>;
    userId: pulumi.Input<string>;
}
