// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreComputeGlobalImageCapabilitySchemasVersions(args: GetCoreComputeGlobalImageCapabilitySchemasVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreComputeGlobalImageCapabilitySchemasVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreComputeGlobalImageCapabilitySchemasVersions:getCoreComputeGlobalImageCapabilitySchemasVersions", {
        "computeGlobalImageCapabilitySchemaId": args.computeGlobalImageCapabilitySchemaId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreComputeGlobalImageCapabilitySchemasVersions.
 */
export interface GetCoreComputeGlobalImageCapabilitySchemasVersionsArgs {
    computeGlobalImageCapabilitySchemaId: string;
    displayName?: string;
    filters?: inputs.GetCoreComputeGlobalImageCapabilitySchemasVersionsFilter[];
    id?: string;
}

/**
 * A collection of values returned by getCoreComputeGlobalImageCapabilitySchemasVersions.
 */
export interface GetCoreComputeGlobalImageCapabilitySchemasVersionsResult {
    readonly computeGlobalImageCapabilitySchemaId: string;
    readonly computeGlobalImageCapabilitySchemaVersions: outputs.GetCoreComputeGlobalImageCapabilitySchemasVersionsComputeGlobalImageCapabilitySchemaVersion[];
    readonly displayName?: string;
    readonly filters?: outputs.GetCoreComputeGlobalImageCapabilitySchemasVersionsFilter[];
    readonly id: string;
}
export function getCoreComputeGlobalImageCapabilitySchemasVersionsOutput(args: GetCoreComputeGlobalImageCapabilitySchemasVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreComputeGlobalImageCapabilitySchemasVersionsResult> {
    return pulumi.output(args).apply((a: any) => getCoreComputeGlobalImageCapabilitySchemasVersions(a, opts))
}

/**
 * A collection of arguments for invoking getCoreComputeGlobalImageCapabilitySchemasVersions.
 */
export interface GetCoreComputeGlobalImageCapabilitySchemasVersionsOutputArgs {
    computeGlobalImageCapabilitySchemaId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetCoreComputeGlobalImageCapabilitySchemasVersionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
