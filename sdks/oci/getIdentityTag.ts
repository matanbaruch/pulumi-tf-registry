// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityTag(args: GetIdentityTagArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityTagResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getIdentityTag:getIdentityTag", {
        "tagName": args.tagName,
        "tagNamespaceId": args.tagNamespaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityTag.
 */
export interface GetIdentityTagArgs {
    tagName: string;
    tagNamespaceId: string;
}

/**
 * A collection of values returned by getIdentityTag.
 */
export interface GetIdentityTagResult {
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isCostTracking: boolean;
    readonly isRetired: boolean;
    readonly name: string;
    readonly state: string;
    readonly tagName: string;
    readonly tagNamespaceId: string;
    readonly timeCreated: string;
    readonly validators: outputs.GetIdentityTagValidator[];
}
export function getIdentityTagOutput(args: GetIdentityTagOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityTagResult> {
    return pulumi.output(args).apply((a: any) => getIdentityTag(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityTag.
 */
export interface GetIdentityTagOutputArgs {
    tagName: pulumi.Input<string>;
    tagNamespaceId: pulumi.Input<string>;
}
