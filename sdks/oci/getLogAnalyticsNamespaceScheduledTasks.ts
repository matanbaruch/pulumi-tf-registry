// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLogAnalyticsNamespaceScheduledTasks(args: GetLogAnalyticsNamespaceScheduledTasksArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsNamespaceScheduledTasksResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLogAnalyticsNamespaceScheduledTasks:getLogAnalyticsNamespaceScheduledTasks", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "namespace": args.namespace,
        "targetService": args.targetService,
        "taskType": args.taskType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespaceScheduledTasks.
 */
export interface GetLogAnalyticsNamespaceScheduledTasksArgs {
    compartmentId: string;
    displayName?: string;
    filters?: inputs.GetLogAnalyticsNamespaceScheduledTasksFilter[];
    id?: string;
    namespace: string;
    targetService?: string;
    taskType: string;
}

/**
 * A collection of values returned by getLogAnalyticsNamespaceScheduledTasks.
 */
export interface GetLogAnalyticsNamespaceScheduledTasksResult {
    readonly compartmentId: string;
    readonly displayName?: string;
    readonly filters?: outputs.GetLogAnalyticsNamespaceScheduledTasksFilter[];
    readonly id: string;
    readonly namespace: string;
    readonly scheduledTaskCollections: outputs.GetLogAnalyticsNamespaceScheduledTasksScheduledTaskCollection[];
    readonly targetService?: string;
    readonly taskType: string;
}
export function getLogAnalyticsNamespaceScheduledTasksOutput(args: GetLogAnalyticsNamespaceScheduledTasksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsNamespaceScheduledTasksResult> {
    return pulumi.output(args).apply((a: any) => getLogAnalyticsNamespaceScheduledTasks(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsNamespaceScheduledTasks.
 */
export interface GetLogAnalyticsNamespaceScheduledTasksOutputArgs {
    compartmentId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetLogAnalyticsNamespaceScheduledTasksFilterArgs>[]>;
    id?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    targetService?: pulumi.Input<string>;
    taskType: pulumi.Input<string>;
}
