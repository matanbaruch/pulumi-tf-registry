// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDelegateAccessControlDelegatedResourceAccessRequest(args: GetDelegateAccessControlDelegatedResourceAccessRequestArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegateAccessControlDelegatedResourceAccessRequestResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDelegateAccessControlDelegatedResourceAccessRequest:getDelegateAccessControlDelegatedResourceAccessRequest", {
        "delegatedResourceAccessRequestId": args.delegatedResourceAccessRequestId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDelegateAccessControlDelegatedResourceAccessRequest.
 */
export interface GetDelegateAccessControlDelegatedResourceAccessRequestArgs {
    delegatedResourceAccessRequestId: string;
    id?: string;
}

/**
 * A collection of values returned by getDelegateAccessControlDelegatedResourceAccessRequest.
 */
export interface GetDelegateAccessControlDelegatedResourceAccessRequestResult {
    readonly approvalInfos: outputs.GetDelegateAccessControlDelegatedResourceAccessRequestApprovalInfo[];
    readonly auditTypes: string[];
    readonly closureComment: string;
    readonly compartmentId: string;
    readonly databaseNameLists: string[];
    readonly definedTags: {[key: string]: string};
    readonly delegatedResourceAccessRequestId: string;
    readonly delegationControlId: string;
    readonly delegationSubscriptionIds: string[];
    readonly description: string;
    readonly displayName: string;
    readonly durationInHours: number;
    readonly extendDurationInHours: number;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isAutoApproved: boolean;
    readonly isPendingMoreInfo: boolean;
    readonly lifecycleStateDetails: string;
    readonly numExtensionApprovals: number;
    readonly numInitialApprovals: number;
    readonly providedServiceTypes: string[];
    readonly reasonForRequest: string;
    readonly requestStatus: string;
    readonly requestedActionNames: string[];
    readonly requesterType: string;
    readonly resourceId: string;
    readonly resourceName: string;
    readonly resourceType: string;
    readonly severity: string;
    readonly state: string;
    readonly systemTags: {[key: string]: string};
    readonly ticketNumbers: string[];
    readonly timeAccessRequested: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getDelegateAccessControlDelegatedResourceAccessRequestOutput(args: GetDelegateAccessControlDelegatedResourceAccessRequestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDelegateAccessControlDelegatedResourceAccessRequestResult> {
    return pulumi.output(args).apply((a: any) => getDelegateAccessControlDelegatedResourceAccessRequest(a, opts))
}

/**
 * A collection of arguments for invoking getDelegateAccessControlDelegatedResourceAccessRequest.
 */
export interface GetDelegateAccessControlDelegatedResourceAccessRequestOutputArgs {
    delegatedResourceAccessRequestId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
