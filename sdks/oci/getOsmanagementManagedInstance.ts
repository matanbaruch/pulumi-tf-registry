// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsmanagementManagedInstance(args: GetOsmanagementManagedInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetOsmanagementManagedInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsmanagementManagedInstance:getOsmanagementManagedInstance", {
        "managedInstanceId": args.managedInstanceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsmanagementManagedInstance.
 */
export interface GetOsmanagementManagedInstanceArgs {
    managedInstanceId: string;
}

/**
 * A collection of values returned by getOsmanagementManagedInstance.
 */
export interface GetOsmanagementManagedInstanceResult {
    readonly autonomouses: outputs.GetOsmanagementManagedInstanceAutonomouse[];
    readonly bugUpdatesAvailable: number;
    readonly childSoftwareSources: outputs.GetOsmanagementManagedInstanceChildSoftwareSource[];
    readonly compartmentId: string;
    readonly description: string;
    readonly displayName: string;
    readonly enhancementUpdatesAvailable: number;
    readonly id: string;
    readonly isDataCollectionAuthorized: boolean;
    readonly isRebootRequired: boolean;
    readonly kspliceEffectiveKernelVersion: string;
    readonly lastBoot: string;
    readonly lastCheckin: string;
    readonly managedInstanceGroups: outputs.GetOsmanagementManagedInstanceManagedInstanceGroup[];
    readonly managedInstanceId: string;
    readonly notificationTopicId: string;
    readonly osFamily: string;
    readonly osKernelVersion: string;
    readonly osName: string;
    readonly osVersion: string;
    readonly otherUpdatesAvailable: number;
    readonly parentSoftwareSources: outputs.GetOsmanagementManagedInstanceParentSoftwareSource[];
    readonly scheduledJobCount: number;
    readonly securityUpdatesAvailable: number;
    readonly status: string;
    readonly updatesAvailable: number;
    readonly workRequestCount: number;
}
export function getOsmanagementManagedInstanceOutput(args: GetOsmanagementManagedInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsmanagementManagedInstanceResult> {
    return pulumi.output(args).apply((a: any) => getOsmanagementManagedInstance(a, opts))
}

/**
 * A collection of arguments for invoking getOsmanagementManagedInstance.
 */
export interface GetOsmanagementManagedInstanceOutputArgs {
    managedInstanceId: pulumi.Input<string>;
}
