// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getJmsJmsPlugins(args?: GetJmsJmsPluginsArgs, opts?: pulumi.InvokeOptions): Promise<GetJmsJmsPluginsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getJmsJmsPlugins:getJmsJmsPlugins", {
        "agentId": args.agentId,
        "availabilityStatus": args.availabilityStatus,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "fleetId": args.fleetId,
        "hostnameContains": args.hostnameContains,
        "id": args.id,
        "state": args.state,
        "timeLastSeenLessThanOrEqualTo": args.timeLastSeenLessThanOrEqualTo,
        "timeRegisteredLessThanOrEqualTo": args.timeRegisteredLessThanOrEqualTo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getJmsJmsPlugins.
 */
export interface GetJmsJmsPluginsArgs {
    agentId?: string;
    availabilityStatus?: string;
    compartmentId?: string;
    compartmentIdInSubtree?: boolean;
    filters?: inputs.GetJmsJmsPluginsFilter[];
    fleetId?: string;
    hostnameContains?: string;
    id?: string;
    state?: string;
    timeLastSeenLessThanOrEqualTo?: string;
    timeRegisteredLessThanOrEqualTo?: string;
}

/**
 * A collection of values returned by getJmsJmsPlugins.
 */
export interface GetJmsJmsPluginsResult {
    readonly agentId?: string;
    readonly availabilityStatus?: string;
    readonly compartmentId?: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.GetJmsJmsPluginsFilter[];
    readonly fleetId?: string;
    readonly hostnameContains?: string;
    readonly id?: string;
    readonly jmsPluginCollections: outputs.GetJmsJmsPluginsJmsPluginCollection[];
    readonly state?: string;
    readonly timeLastSeenLessThanOrEqualTo?: string;
    readonly timeRegisteredLessThanOrEqualTo?: string;
}
export function getJmsJmsPluginsOutput(args?: GetJmsJmsPluginsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJmsJmsPluginsResult> {
    return pulumi.output(args).apply((a: any) => getJmsJmsPlugins(a, opts))
}

/**
 * A collection of arguments for invoking getJmsJmsPlugins.
 */
export interface GetJmsJmsPluginsOutputArgs {
    agentId?: pulumi.Input<string>;
    availabilityStatus?: pulumi.Input<string>;
    compartmentId?: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetJmsJmsPluginsFilterArgs>[]>;
    fleetId?: pulumi.Input<string>;
    hostnameContains?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeLastSeenLessThanOrEqualTo?: pulumi.Input<string>;
    timeRegisteredLessThanOrEqualTo?: pulumi.Input<string>;
}
