// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOperatorAccessControlOperatorControlAssignment(args: GetOperatorAccessControlOperatorControlAssignmentArgs, opts?: pulumi.InvokeOptions): Promise<GetOperatorAccessControlOperatorControlAssignmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOperatorAccessControlOperatorControlAssignment:getOperatorAccessControlOperatorControlAssignment", {
        "operatorControlAssignmentId": args.operatorControlAssignmentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOperatorAccessControlOperatorControlAssignment.
 */
export interface GetOperatorAccessControlOperatorControlAssignmentArgs {
    operatorControlAssignmentId: string;
}

/**
 * A collection of values returned by getOperatorAccessControlOperatorControlAssignment.
 */
export interface GetOperatorAccessControlOperatorControlAssignmentResult {
    readonly assignerId: string;
    readonly comment: string;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly detachmentDescription: string;
    readonly errorCode: number;
    readonly errorMessage: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly isAutoApproveDuringMaintenance: boolean;
    readonly isDefaultAssignment: boolean;
    readonly isEnforcedAlways: boolean;
    readonly isHypervisorLogForwarded: boolean;
    readonly isLogForwarded: boolean;
    readonly lifecycleDetails: string;
    readonly opControlName: string;
    readonly operatorControlAssignmentId: string;
    readonly operatorControlId: string;
    readonly remoteSyslogServerAddress: string;
    readonly remoteSyslogServerCaCert: string;
    readonly remoteSyslogServerPort: number;
    readonly resourceCompartmentId: string;
    readonly resourceId: string;
    readonly resourceName: string;
    readonly resourceType: string;
    readonly state: string;
    readonly timeAssignmentFrom: string;
    readonly timeAssignmentTo: string;
    readonly timeOfAssignment: string;
    readonly timeOfDeletion: string;
    readonly unassignerId: string;
    readonly validateAssignmentTrigger: number;
}
export function getOperatorAccessControlOperatorControlAssignmentOutput(args: GetOperatorAccessControlOperatorControlAssignmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOperatorAccessControlOperatorControlAssignmentResult> {
    return pulumi.output(args).apply((a: any) => getOperatorAccessControlOperatorControlAssignment(a, opts))
}

/**
 * A collection of arguments for invoking getOperatorAccessControlOperatorControlAssignment.
 */
export interface GetOperatorAccessControlOperatorControlAssignmentOutputArgs {
    operatorControlAssignmentId: pulumi.Input<string>;
}
