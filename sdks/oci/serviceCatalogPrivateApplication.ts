// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ServiceCatalogPrivateApplication extends pulumi.CustomResource {
    /**
     * Get an existing ServiceCatalogPrivateApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceCatalogPrivateApplicationState, opts?: pulumi.CustomResourceOptions): ServiceCatalogPrivateApplication {
        return new ServiceCatalogPrivateApplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/serviceCatalogPrivateApplication:ServiceCatalogPrivateApplication';

    /**
     * Returns true if the given object is an instance of ServiceCatalogPrivateApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceCatalogPrivateApplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceCatalogPrivateApplication.__pulumiType;
    }

    public readonly compartmentId!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly logoFileBase64encoded!: pulumi.Output<string>;
    public /*out*/ readonly logos!: pulumi.Output<outputs.ServiceCatalogPrivateApplicationLogo[]>;
    public readonly longDescription!: pulumi.Output<string>;
    public readonly packageDetails!: pulumi.Output<outputs.ServiceCatalogPrivateApplicationPackageDetails>;
    public /*out*/ readonly packageType!: pulumi.Output<string>;
    public readonly shortDescription!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ServiceCatalogPrivateApplicationTimeouts | undefined>;

    /**
     * Create a ServiceCatalogPrivateApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceCatalogPrivateApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceCatalogPrivateApplicationArgs | ServiceCatalogPrivateApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceCatalogPrivateApplicationState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["logoFileBase64encoded"] = state ? state.logoFileBase64encoded : undefined;
            resourceInputs["logos"] = state ? state.logos : undefined;
            resourceInputs["longDescription"] = state ? state.longDescription : undefined;
            resourceInputs["packageDetails"] = state ? state.packageDetails : undefined;
            resourceInputs["packageType"] = state ? state.packageType : undefined;
            resourceInputs["shortDescription"] = state ? state.shortDescription : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ServiceCatalogPrivateApplicationArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.packageDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'packageDetails'");
            }
            if ((!args || args.shortDescription === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shortDescription'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["logoFileBase64encoded"] = args ? args.logoFileBase64encoded : undefined;
            resourceInputs["longDescription"] = args ? args.longDescription : undefined;
            resourceInputs["packageDetails"] = args ? args.packageDetails : undefined;
            resourceInputs["shortDescription"] = args ? args.shortDescription : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["logos"] = undefined /*out*/;
            resourceInputs["packageType"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceCatalogPrivateApplication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ServiceCatalogPrivateApplication resources.
 */
export interface ServiceCatalogPrivateApplicationState {
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    logoFileBase64encoded?: pulumi.Input<string>;
    logos?: pulumi.Input<pulumi.Input<inputs.ServiceCatalogPrivateApplicationLogo>[]>;
    longDescription?: pulumi.Input<string>;
    packageDetails?: pulumi.Input<inputs.ServiceCatalogPrivateApplicationPackageDetails>;
    packageType?: pulumi.Input<string>;
    shortDescription?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ServiceCatalogPrivateApplicationTimeouts>;
}

/**
 * The set of arguments for constructing a ServiceCatalogPrivateApplication resource.
 */
export interface ServiceCatalogPrivateApplicationArgs {
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    logoFileBase64encoded?: pulumi.Input<string>;
    longDescription?: pulumi.Input<string>;
    packageDetails: pulumi.Input<inputs.ServiceCatalogPrivateApplicationPackageDetails>;
    shortDescription: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ServiceCatalogPrivateApplicationTimeouts>;
}
