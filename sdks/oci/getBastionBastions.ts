// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBastionBastions(args: GetBastionBastionsArgs, opts?: pulumi.InvokeOptions): Promise<GetBastionBastionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getBastionBastions:getBastionBastions", {
        "bastionId": args.bastionId,
        "bastionLifecycleState": args.bastionLifecycleState,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBastionBastions.
 */
export interface GetBastionBastionsArgs {
    bastionId?: string;
    bastionLifecycleState?: string;
    compartmentId: string;
    filters?: inputs.GetBastionBastionsFilter[];
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getBastionBastions.
 */
export interface GetBastionBastionsResult {
    readonly bastionId?: string;
    readonly bastionLifecycleState?: string;
    readonly bastions: outputs.GetBastionBastionsBastion[];
    readonly compartmentId: string;
    readonly filters?: outputs.GetBastionBastionsFilter[];
    readonly id: string;
    readonly name?: string;
}
export function getBastionBastionsOutput(args: GetBastionBastionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBastionBastionsResult> {
    return pulumi.output(args).apply((a: any) => getBastionBastions(a, opts))
}

/**
 * A collection of arguments for invoking getBastionBastions.
 */
export interface GetBastionBastionsOutputArgs {
    bastionId?: pulumi.Input<string>;
    bastionLifecycleState?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetBastionBastionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
