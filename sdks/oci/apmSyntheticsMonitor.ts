// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApmSyntheticsMonitor extends pulumi.CustomResource {
    /**
     * Get an existing ApmSyntheticsMonitor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApmSyntheticsMonitorState, opts?: pulumi.CustomResourceOptions): ApmSyntheticsMonitor {
        return new ApmSyntheticsMonitor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/apmSyntheticsMonitor:ApmSyntheticsMonitor';

    /**
     * Returns true if the given object is an instance of ApmSyntheticsMonitor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApmSyntheticsMonitor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApmSyntheticsMonitor.__pulumiType;
    }

    public readonly apmDomainId!: pulumi.Output<string>;
    public readonly availabilityConfiguration!: pulumi.Output<outputs.ApmSyntheticsMonitorAvailabilityConfiguration | undefined>;
    public readonly batchIntervalInSeconds!: pulumi.Output<number>;
    public readonly configuration!: pulumi.Output<outputs.ApmSyntheticsMonitorConfiguration | undefined>;
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public readonly isIpv6!: pulumi.Output<boolean>;
    public readonly isRunNow!: pulumi.Output<boolean>;
    public readonly isRunOnce!: pulumi.Output<boolean>;
    public /*out*/ readonly lastUpdatedBy!: pulumi.Output<string>;
    public readonly maintenanceWindowSchedule!: pulumi.Output<outputs.ApmSyntheticsMonitorMaintenanceWindowSchedule | undefined>;
    public readonly monitorType!: pulumi.Output<string>;
    public readonly repeatIntervalInSeconds!: pulumi.Output<number>;
    public readonly schedulingPolicy!: pulumi.Output<string>;
    public readonly scriptId!: pulumi.Output<string>;
    public readonly scriptName!: pulumi.Output<string>;
    public readonly scriptParameters!: pulumi.Output<outputs.ApmSyntheticsMonitorScriptParameter[] | undefined>;
    public readonly status!: pulumi.Output<string>;
    public readonly target!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly timeoutInSeconds!: pulumi.Output<number>;
    public readonly timeouts!: pulumi.Output<outputs.ApmSyntheticsMonitorTimeouts | undefined>;
    public /*out*/ readonly vantagePointCount!: pulumi.Output<number>;
    public readonly vantagePoints!: pulumi.Output<outputs.ApmSyntheticsMonitorVantagePoint[]>;

    /**
     * Create a ApmSyntheticsMonitor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApmSyntheticsMonitorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApmSyntheticsMonitorArgs | ApmSyntheticsMonitorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApmSyntheticsMonitorState | undefined;
            resourceInputs["apmDomainId"] = state ? state.apmDomainId : undefined;
            resourceInputs["availabilityConfiguration"] = state ? state.availabilityConfiguration : undefined;
            resourceInputs["batchIntervalInSeconds"] = state ? state.batchIntervalInSeconds : undefined;
            resourceInputs["configuration"] = state ? state.configuration : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isIpv6"] = state ? state.isIpv6 : undefined;
            resourceInputs["isRunNow"] = state ? state.isRunNow : undefined;
            resourceInputs["isRunOnce"] = state ? state.isRunOnce : undefined;
            resourceInputs["lastUpdatedBy"] = state ? state.lastUpdatedBy : undefined;
            resourceInputs["maintenanceWindowSchedule"] = state ? state.maintenanceWindowSchedule : undefined;
            resourceInputs["monitorType"] = state ? state.monitorType : undefined;
            resourceInputs["repeatIntervalInSeconds"] = state ? state.repeatIntervalInSeconds : undefined;
            resourceInputs["schedulingPolicy"] = state ? state.schedulingPolicy : undefined;
            resourceInputs["scriptId"] = state ? state.scriptId : undefined;
            resourceInputs["scriptName"] = state ? state.scriptName : undefined;
            resourceInputs["scriptParameters"] = state ? state.scriptParameters : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["target"] = state ? state.target : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timeoutInSeconds"] = state ? state.timeoutInSeconds : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vantagePointCount"] = state ? state.vantagePointCount : undefined;
            resourceInputs["vantagePoints"] = state ? state.vantagePoints : undefined;
        } else {
            const args = argsOrState as ApmSyntheticsMonitorArgs | undefined;
            if ((!args || args.apmDomainId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apmDomainId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.monitorType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'monitorType'");
            }
            if ((!args || args.repeatIntervalInSeconds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repeatIntervalInSeconds'");
            }
            if ((!args || args.vantagePoints === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vantagePoints'");
            }
            resourceInputs["apmDomainId"] = args ? args.apmDomainId : undefined;
            resourceInputs["availabilityConfiguration"] = args ? args.availabilityConfiguration : undefined;
            resourceInputs["batchIntervalInSeconds"] = args ? args.batchIntervalInSeconds : undefined;
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isIpv6"] = args ? args.isIpv6 : undefined;
            resourceInputs["isRunNow"] = args ? args.isRunNow : undefined;
            resourceInputs["isRunOnce"] = args ? args.isRunOnce : undefined;
            resourceInputs["maintenanceWindowSchedule"] = args ? args.maintenanceWindowSchedule : undefined;
            resourceInputs["monitorType"] = args ? args.monitorType : undefined;
            resourceInputs["repeatIntervalInSeconds"] = args ? args.repeatIntervalInSeconds : undefined;
            resourceInputs["schedulingPolicy"] = args ? args.schedulingPolicy : undefined;
            resourceInputs["scriptId"] = args ? args.scriptId : undefined;
            resourceInputs["scriptName"] = args ? args.scriptName : undefined;
            resourceInputs["scriptParameters"] = args ? args.scriptParameters : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["target"] = args ? args.target : undefined;
            resourceInputs["timeoutInSeconds"] = args ? args.timeoutInSeconds : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vantagePoints"] = args ? args.vantagePoints : undefined;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["lastUpdatedBy"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["vantagePointCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApmSyntheticsMonitor.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApmSyntheticsMonitor resources.
 */
export interface ApmSyntheticsMonitorState {
    apmDomainId?: pulumi.Input<string>;
    availabilityConfiguration?: pulumi.Input<inputs.ApmSyntheticsMonitorAvailabilityConfiguration>;
    batchIntervalInSeconds?: pulumi.Input<number>;
    configuration?: pulumi.Input<inputs.ApmSyntheticsMonitorConfiguration>;
    createdBy?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isIpv6?: pulumi.Input<boolean>;
    isRunNow?: pulumi.Input<boolean>;
    isRunOnce?: pulumi.Input<boolean>;
    lastUpdatedBy?: pulumi.Input<string>;
    maintenanceWindowSchedule?: pulumi.Input<inputs.ApmSyntheticsMonitorMaintenanceWindowSchedule>;
    monitorType?: pulumi.Input<string>;
    repeatIntervalInSeconds?: pulumi.Input<number>;
    schedulingPolicy?: pulumi.Input<string>;
    scriptId?: pulumi.Input<string>;
    scriptName?: pulumi.Input<string>;
    scriptParameters?: pulumi.Input<pulumi.Input<inputs.ApmSyntheticsMonitorScriptParameter>[]>;
    status?: pulumi.Input<string>;
    target?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
    timeoutInSeconds?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.ApmSyntheticsMonitorTimeouts>;
    vantagePointCount?: pulumi.Input<number>;
    vantagePoints?: pulumi.Input<pulumi.Input<inputs.ApmSyntheticsMonitorVantagePoint>[]>;
}

/**
 * The set of arguments for constructing a ApmSyntheticsMonitor resource.
 */
export interface ApmSyntheticsMonitorArgs {
    apmDomainId: pulumi.Input<string>;
    availabilityConfiguration?: pulumi.Input<inputs.ApmSyntheticsMonitorAvailabilityConfiguration>;
    batchIntervalInSeconds?: pulumi.Input<number>;
    configuration?: pulumi.Input<inputs.ApmSyntheticsMonitorConfiguration>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    isIpv6?: pulumi.Input<boolean>;
    isRunNow?: pulumi.Input<boolean>;
    isRunOnce?: pulumi.Input<boolean>;
    maintenanceWindowSchedule?: pulumi.Input<inputs.ApmSyntheticsMonitorMaintenanceWindowSchedule>;
    monitorType: pulumi.Input<string>;
    repeatIntervalInSeconds: pulumi.Input<number>;
    schedulingPolicy?: pulumi.Input<string>;
    scriptId?: pulumi.Input<string>;
    scriptName?: pulumi.Input<string>;
    scriptParameters?: pulumi.Input<pulumi.Input<inputs.ApmSyntheticsMonitorScriptParameter>[]>;
    status?: pulumi.Input<string>;
    target?: pulumi.Input<string>;
    timeoutInSeconds?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.ApmSyntheticsMonitorTimeouts>;
    vantagePoints: pulumi.Input<pulumi.Input<inputs.ApmSyntheticsMonitorVantagePoint>[]>;
}
