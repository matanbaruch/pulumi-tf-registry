// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudBridgeAssets(args: GetCloudBridgeAssetsArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudBridgeAssetsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCloudBridgeAssets:getCloudBridgeAssets", {
        "assetId": args.assetId,
        "assetType": args.assetType,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "externalAssetKey": args.externalAssetKey,
        "filters": args.filters,
        "id": args.id,
        "inventoryId": args.inventoryId,
        "sourceKey": args.sourceKey,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudBridgeAssets.
 */
export interface GetCloudBridgeAssetsArgs {
    assetId?: string;
    assetType?: string;
    compartmentId: string;
    displayName?: string;
    externalAssetKey?: string;
    filters?: inputs.GetCloudBridgeAssetsFilter[];
    id?: string;
    inventoryId?: string;
    sourceKey?: string;
    state?: string;
}

/**
 * A collection of values returned by getCloudBridgeAssets.
 */
export interface GetCloudBridgeAssetsResult {
    readonly assetCollections: outputs.GetCloudBridgeAssetsAssetCollection[];
    readonly assetId?: string;
    readonly assetType?: string;
    readonly compartmentId: string;
    readonly displayName?: string;
    readonly externalAssetKey?: string;
    readonly filters?: outputs.GetCloudBridgeAssetsFilter[];
    readonly id: string;
    readonly inventoryId?: string;
    readonly sourceKey?: string;
    readonly state?: string;
}
export function getCloudBridgeAssetsOutput(args: GetCloudBridgeAssetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudBridgeAssetsResult> {
    return pulumi.output(args).apply((a: any) => getCloudBridgeAssets(a, opts))
}

/**
 * A collection of arguments for invoking getCloudBridgeAssets.
 */
export interface GetCloudBridgeAssetsOutputArgs {
    assetId?: pulumi.Input<string>;
    assetType?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    externalAssetKey?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetCloudBridgeAssetsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    inventoryId?: pulumi.Input<string>;
    sourceKey?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
