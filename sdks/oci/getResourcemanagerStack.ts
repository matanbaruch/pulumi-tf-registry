// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getResourcemanagerStack(args: GetResourcemanagerStackArgs, opts?: pulumi.InvokeOptions): Promise<GetResourcemanagerStackResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getResourcemanagerStack:getResourcemanagerStack", {
        "id": args.id,
        "stackId": args.stackId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getResourcemanagerStack.
 */
export interface GetResourcemanagerStackArgs {
    id?: string;
    stackId: string;
}

/**
 * A collection of values returned by getResourcemanagerStack.
 */
export interface GetResourcemanagerStackResult {
    readonly compartmentId: string;
    readonly configSources: outputs.GetResourcemanagerStackConfigSource[];
    readonly definedTags: {[key: string]: string};
    readonly description: string;
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly stackId: string;
    readonly state: string;
    readonly timeCreated: string;
    readonly variables: {[key: string]: string};
}
export function getResourcemanagerStackOutput(args: GetResourcemanagerStackOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourcemanagerStackResult> {
    return pulumi.output(args).apply((a: any) => getResourcemanagerStack(a, opts))
}

/**
 * A collection of arguments for invoking getResourcemanagerStack.
 */
export interface GetResourcemanagerStackOutputArgs {
    id?: pulumi.Input<string>;
    stackId: pulumi.Input<string>;
}
