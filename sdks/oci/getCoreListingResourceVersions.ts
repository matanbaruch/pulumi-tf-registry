// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreListingResourceVersions(args: GetCoreListingResourceVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreListingResourceVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreListingResourceVersions:getCoreListingResourceVersions", {
        "filters": args.filters,
        "id": args.id,
        "listingId": args.listingId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreListingResourceVersions.
 */
export interface GetCoreListingResourceVersionsArgs {
    filters?: inputs.GetCoreListingResourceVersionsFilter[];
    id?: string;
    listingId: string;
}

/**
 * A collection of values returned by getCoreListingResourceVersions.
 */
export interface GetCoreListingResourceVersionsResult {
    readonly appCatalogListingResourceVersions: outputs.GetCoreListingResourceVersionsAppCatalogListingResourceVersion[];
    readonly filters?: outputs.GetCoreListingResourceVersionsFilter[];
    readonly id: string;
    readonly listingId: string;
}
export function getCoreListingResourceVersionsOutput(args: GetCoreListingResourceVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreListingResourceVersionsResult> {
    return pulumi.output(args).apply((a: any) => getCoreListingResourceVersions(a, opts))
}

/**
 * A collection of arguments for invoking getCoreListingResourceVersions.
 */
export interface GetCoreListingResourceVersionsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetCoreListingResourceVersionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    listingId: pulumi.Input<string>;
}
