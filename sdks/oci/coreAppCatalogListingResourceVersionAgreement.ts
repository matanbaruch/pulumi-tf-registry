// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CoreAppCatalogListingResourceVersionAgreement extends pulumi.CustomResource {
    /**
     * Get an existing CoreAppCatalogListingResourceVersionAgreement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CoreAppCatalogListingResourceVersionAgreementState, opts?: pulumi.CustomResourceOptions): CoreAppCatalogListingResourceVersionAgreement {
        return new CoreAppCatalogListingResourceVersionAgreement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:index/coreAppCatalogListingResourceVersionAgreement:CoreAppCatalogListingResourceVersionAgreement';

    /**
     * Returns true if the given object is an instance of CoreAppCatalogListingResourceVersionAgreement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CoreAppCatalogListingResourceVersionAgreement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CoreAppCatalogListingResourceVersionAgreement.__pulumiType;
    }

    public /*out*/ readonly eulaLink!: pulumi.Output<string>;
    public readonly listingId!: pulumi.Output<string>;
    public readonly listingResourceVersion!: pulumi.Output<string>;
    public /*out*/ readonly oracleTermsOfUseLink!: pulumi.Output<string>;
    public /*out*/ readonly signature!: pulumi.Output<string>;
    public /*out*/ readonly timeRetrieved!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CoreAppCatalogListingResourceVersionAgreementTimeouts | undefined>;

    /**
     * Create a CoreAppCatalogListingResourceVersionAgreement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CoreAppCatalogListingResourceVersionAgreementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CoreAppCatalogListingResourceVersionAgreementArgs | CoreAppCatalogListingResourceVersionAgreementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CoreAppCatalogListingResourceVersionAgreementState | undefined;
            resourceInputs["eulaLink"] = state ? state.eulaLink : undefined;
            resourceInputs["listingId"] = state ? state.listingId : undefined;
            resourceInputs["listingResourceVersion"] = state ? state.listingResourceVersion : undefined;
            resourceInputs["oracleTermsOfUseLink"] = state ? state.oracleTermsOfUseLink : undefined;
            resourceInputs["signature"] = state ? state.signature : undefined;
            resourceInputs["timeRetrieved"] = state ? state.timeRetrieved : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CoreAppCatalogListingResourceVersionAgreementArgs | undefined;
            if ((!args || args.listingId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listingId'");
            }
            if ((!args || args.listingResourceVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listingResourceVersion'");
            }
            resourceInputs["listingId"] = args ? args.listingId : undefined;
            resourceInputs["listingResourceVersion"] = args ? args.listingResourceVersion : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["eulaLink"] = undefined /*out*/;
            resourceInputs["oracleTermsOfUseLink"] = undefined /*out*/;
            resourceInputs["signature"] = undefined /*out*/;
            resourceInputs["timeRetrieved"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CoreAppCatalogListingResourceVersionAgreement.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CoreAppCatalogListingResourceVersionAgreement resources.
 */
export interface CoreAppCatalogListingResourceVersionAgreementState {
    eulaLink?: pulumi.Input<string>;
    listingId?: pulumi.Input<string>;
    listingResourceVersion?: pulumi.Input<string>;
    oracleTermsOfUseLink?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    timeRetrieved?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CoreAppCatalogListingResourceVersionAgreementTimeouts>;
}

/**
 * The set of arguments for constructing a CoreAppCatalogListingResourceVersionAgreement resource.
 */
export interface CoreAppCatalogListingResourceVersionAgreementArgs {
    listingId: pulumi.Input<string>;
    listingResourceVersion: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CoreAppCatalogListingResourceVersionAgreementTimeouts>;
}
