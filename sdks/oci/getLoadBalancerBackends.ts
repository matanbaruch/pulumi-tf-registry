// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLoadBalancerBackends(args: GetLoadBalancerBackendsArgs, opts?: pulumi.InvokeOptions): Promise<GetLoadBalancerBackendsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getLoadBalancerBackends:getLoadBalancerBackends", {
        "backendsetName": args.backendsetName,
        "filters": args.filters,
        "id": args.id,
        "loadBalancerId": args.loadBalancerId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLoadBalancerBackends.
 */
export interface GetLoadBalancerBackendsArgs {
    backendsetName: string;
    filters?: inputs.GetLoadBalancerBackendsFilter[];
    id?: string;
    loadBalancerId: string;
}

/**
 * A collection of values returned by getLoadBalancerBackends.
 */
export interface GetLoadBalancerBackendsResult {
    readonly backends: outputs.GetLoadBalancerBackendsBackend[];
    readonly backendsetName: string;
    readonly filters?: outputs.GetLoadBalancerBackendsFilter[];
    readonly id: string;
    readonly loadBalancerId: string;
}
export function getLoadBalancerBackendsOutput(args: GetLoadBalancerBackendsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoadBalancerBackendsResult> {
    return pulumi.output(args).apply((a: any) => getLoadBalancerBackends(a, opts))
}

/**
 * A collection of arguments for invoking getLoadBalancerBackends.
 */
export interface GetLoadBalancerBackendsOutputArgs {
    backendsetName: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetLoadBalancerBackendsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    loadBalancerId: pulumi.Input<string>;
}
