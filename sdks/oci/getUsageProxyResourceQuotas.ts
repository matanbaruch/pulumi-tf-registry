// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUsageProxyResourceQuotas(args: GetUsageProxyResourceQuotasArgs, opts?: pulumi.InvokeOptions): Promise<GetUsageProxyResourceQuotasResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getUsageProxyResourceQuotas:getUsageProxyResourceQuotas", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "serviceEntitlement": args.serviceEntitlement,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUsageProxyResourceQuotas.
 */
export interface GetUsageProxyResourceQuotasArgs {
    compartmentId: string;
    filters?: inputs.GetUsageProxyResourceQuotasFilter[];
    id?: string;
    serviceEntitlement?: string;
    serviceName: string;
}

/**
 * A collection of values returned by getUsageProxyResourceQuotas.
 */
export interface GetUsageProxyResourceQuotasResult {
    readonly compartmentId: string;
    readonly filters?: outputs.GetUsageProxyResourceQuotasFilter[];
    readonly id: string;
    readonly resourceQuotumCollections: outputs.GetUsageProxyResourceQuotasResourceQuotumCollection[];
    readonly serviceEntitlement?: string;
    readonly serviceName: string;
}
export function getUsageProxyResourceQuotasOutput(args: GetUsageProxyResourceQuotasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUsageProxyResourceQuotasResult> {
    return pulumi.output(args).apply((a: any) => getUsageProxyResourceQuotas(a, opts))
}

/**
 * A collection of arguments for invoking getUsageProxyResourceQuotas.
 */
export interface GetUsageProxyResourceQuotasOutputArgs {
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetUsageProxyResourceQuotasFilterArgs>[]>;
    id?: pulumi.Input<string>;
    serviceEntitlement?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
