// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementManagedMySqlDatabaseConfigurationData(args: GetDatabaseManagementManagedMySqlDatabaseConfigurationDataArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementManagedMySqlDatabaseConfigurationDataResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementManagedMySqlDatabaseConfigurationData:getDatabaseManagementManagedMySqlDatabaseConfigurationData", {
        "filters": args.filters,
        "id": args.id,
        "managedMySqlDatabaseId": args.managedMySqlDatabaseId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedMySqlDatabaseConfigurationData.
 */
export interface GetDatabaseManagementManagedMySqlDatabaseConfigurationDataArgs {
    filters?: inputs.GetDatabaseManagementManagedMySqlDatabaseConfigurationDataFilter[];
    id?: string;
    managedMySqlDatabaseId: string;
}

/**
 * A collection of values returned by getDatabaseManagementManagedMySqlDatabaseConfigurationData.
 */
export interface GetDatabaseManagementManagedMySqlDatabaseConfigurationDataResult {
    readonly filters?: outputs.GetDatabaseManagementManagedMySqlDatabaseConfigurationDataFilter[];
    readonly id: string;
    readonly managedMySqlDatabaseId: string;
    readonly mySqlConfigurationDataCollections: outputs.GetDatabaseManagementManagedMySqlDatabaseConfigurationDataMySqlConfigurationDataCollection[];
}
export function getDatabaseManagementManagedMySqlDatabaseConfigurationDataOutput(args: GetDatabaseManagementManagedMySqlDatabaseConfigurationDataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementManagedMySqlDatabaseConfigurationDataResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementManagedMySqlDatabaseConfigurationData(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedMySqlDatabaseConfigurationData.
 */
export interface GetDatabaseManagementManagedMySqlDatabaseConfigurationDataOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseManagementManagedMySqlDatabaseConfigurationDataFilterArgs>[]>;
    id?: pulumi.Input<string>;
    managedMySqlDatabaseId: pulumi.Input<string>;
}
