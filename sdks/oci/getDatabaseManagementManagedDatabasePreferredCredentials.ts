// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseManagementManagedDatabasePreferredCredentials(args: GetDatabaseManagementManagedDatabasePreferredCredentialsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseManagementManagedDatabasePreferredCredentialsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getDatabaseManagementManagedDatabasePreferredCredentials:getDatabaseManagementManagedDatabasePreferredCredentials", {
        "filters": args.filters,
        "id": args.id,
        "managedDatabaseId": args.managedDatabaseId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedDatabasePreferredCredentials.
 */
export interface GetDatabaseManagementManagedDatabasePreferredCredentialsArgs {
    filters?: inputs.GetDatabaseManagementManagedDatabasePreferredCredentialsFilter[];
    id?: string;
    managedDatabaseId: string;
}

/**
 * A collection of values returned by getDatabaseManagementManagedDatabasePreferredCredentials.
 */
export interface GetDatabaseManagementManagedDatabasePreferredCredentialsResult {
    readonly filters?: outputs.GetDatabaseManagementManagedDatabasePreferredCredentialsFilter[];
    readonly id: string;
    readonly managedDatabaseId: string;
    readonly preferredCredentialCollections: outputs.GetDatabaseManagementManagedDatabasePreferredCredentialsPreferredCredentialCollection[];
}
export function getDatabaseManagementManagedDatabasePreferredCredentialsOutput(args: GetDatabaseManagementManagedDatabasePreferredCredentialsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseManagementManagedDatabasePreferredCredentialsResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseManagementManagedDatabasePreferredCredentials(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseManagementManagedDatabasePreferredCredentials.
 */
export interface GetDatabaseManagementManagedDatabasePreferredCredentialsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseManagementManagedDatabasePreferredCredentialsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    managedDatabaseId: pulumi.Input<string>;
}
