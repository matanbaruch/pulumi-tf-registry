// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getServiceCatalogServiceCatalogAssociation(args: GetServiceCatalogServiceCatalogAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceCatalogServiceCatalogAssociationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getServiceCatalogServiceCatalogAssociation:getServiceCatalogServiceCatalogAssociation", {
        "serviceCatalogAssociationId": args.serviceCatalogAssociationId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceCatalogServiceCatalogAssociation.
 */
export interface GetServiceCatalogServiceCatalogAssociationArgs {
    serviceCatalogAssociationId: string;
}

/**
 * A collection of values returned by getServiceCatalogServiceCatalogAssociation.
 */
export interface GetServiceCatalogServiceCatalogAssociationResult {
    readonly entityId: string;
    readonly entityType: string;
    readonly id: string;
    readonly serviceCatalogAssociationId: string;
    readonly serviceCatalogId: string;
    readonly timeCreated: string;
}
export function getServiceCatalogServiceCatalogAssociationOutput(args: GetServiceCatalogServiceCatalogAssociationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceCatalogServiceCatalogAssociationResult> {
    return pulumi.output(args).apply((a: any) => getServiceCatalogServiceCatalogAssociation(a, opts))
}

/**
 * A collection of arguments for invoking getServiceCatalogServiceCatalogAssociation.
 */
export interface GetServiceCatalogServiceCatalogAssociationOutputArgs {
    serviceCatalogAssociationId: pulumi.Input<string>;
}
