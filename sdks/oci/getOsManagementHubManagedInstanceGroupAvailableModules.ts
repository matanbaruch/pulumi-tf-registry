// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsManagementHubManagedInstanceGroupAvailableModules(args: GetOsManagementHubManagedInstanceGroupAvailableModulesArgs, opts?: pulumi.InvokeOptions): Promise<GetOsManagementHubManagedInstanceGroupAvailableModulesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOsManagementHubManagedInstanceGroupAvailableModules:getOsManagementHubManagedInstanceGroupAvailableModules", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "managedInstanceGroupId": args.managedInstanceGroupId,
        "name": args.name,
        "nameContains": args.nameContains,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsManagementHubManagedInstanceGroupAvailableModules.
 */
export interface GetOsManagementHubManagedInstanceGroupAvailableModulesArgs {
    compartmentId?: string;
    filters?: inputs.GetOsManagementHubManagedInstanceGroupAvailableModulesFilter[];
    id?: string;
    managedInstanceGroupId: string;
    name?: string;
    nameContains?: string;
}

/**
 * A collection of values returned by getOsManagementHubManagedInstanceGroupAvailableModules.
 */
export interface GetOsManagementHubManagedInstanceGroupAvailableModulesResult {
    readonly compartmentId?: string;
    readonly filters?: outputs.GetOsManagementHubManagedInstanceGroupAvailableModulesFilter[];
    readonly id: string;
    readonly managedInstanceGroupAvailableModuleCollections: outputs.GetOsManagementHubManagedInstanceGroupAvailableModulesManagedInstanceGroupAvailableModuleCollection[];
    readonly managedInstanceGroupId: string;
    readonly name?: string;
    readonly nameContains?: string;
}
export function getOsManagementHubManagedInstanceGroupAvailableModulesOutput(args: GetOsManagementHubManagedInstanceGroupAvailableModulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsManagementHubManagedInstanceGroupAvailableModulesResult> {
    return pulumi.output(args).apply((a: any) => getOsManagementHubManagedInstanceGroupAvailableModules(a, opts))
}

/**
 * A collection of arguments for invoking getOsManagementHubManagedInstanceGroupAvailableModules.
 */
export interface GetOsManagementHubManagedInstanceGroupAvailableModulesOutputArgs {
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetOsManagementHubManagedInstanceGroupAvailableModulesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    managedInstanceGroupId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameContains?: pulumi.Input<string>;
}
