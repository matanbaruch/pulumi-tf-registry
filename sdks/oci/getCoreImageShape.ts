// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreImageShape(args: GetCoreImageShapeArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreImageShapeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreImageShape:getCoreImageShape", {
        "id": args.id,
        "imageId": args.imageId,
        "shapeName": args.shapeName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreImageShape.
 */
export interface GetCoreImageShapeArgs {
    id?: string;
    imageId: string;
    shapeName: string;
}

/**
 * A collection of values returned by getCoreImageShape.
 */
export interface GetCoreImageShapeResult {
    readonly id: string;
    readonly imageId: string;
    readonly memoryConstraints: outputs.GetCoreImageShapeMemoryConstraint[];
    readonly ocpuConstraints: outputs.GetCoreImageShapeOcpuConstraint[];
    readonly shape: string;
    readonly shapeName: string;
}
export function getCoreImageShapeOutput(args: GetCoreImageShapeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreImageShapeResult> {
    return pulumi.output(args).apply((a: any) => getCoreImageShape(a, opts))
}

/**
 * A collection of arguments for invoking getCoreImageShape.
 */
export interface GetCoreImageShapeOutputArgs {
    id?: pulumi.Input<string>;
    imageId: pulumi.Input<string>;
    shapeName: pulumi.Input<string>;
}
