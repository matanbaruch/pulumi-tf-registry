// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOptimizerCategory(args: GetOptimizerCategoryArgs, opts?: pulumi.InvokeOptions): Promise<GetOptimizerCategoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getOptimizerCategory:getOptimizerCategory", {
        "categoryId": args.categoryId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOptimizerCategory.
 */
export interface GetOptimizerCategoryArgs {
    categoryId: string;
    id?: string;
}

/**
 * A collection of values returned by getOptimizerCategory.
 */
export interface GetOptimizerCategoryResult {
    readonly categoryId: string;
    readonly compartmentId: string;
    readonly compartmentName: string;
    readonly description: string;
    readonly estimatedCostSaving: number;
    readonly extendedMetadata: {[key: string]: string};
    readonly id: string;
    readonly name: string;
    readonly recommendationCounts: outputs.GetOptimizerCategoryRecommendationCount[];
    readonly resourceCounts: outputs.GetOptimizerCategoryResourceCount[];
    readonly state: string;
    readonly timeCreated: string;
    readonly timeUpdated: string;
}
export function getOptimizerCategoryOutput(args: GetOptimizerCategoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOptimizerCategoryResult> {
    return pulumi.output(args).apply((a: any) => getOptimizerCategory(a, opts))
}

/**
 * A collection of arguments for invoking getOptimizerCategory.
 */
export interface GetOptimizerCategoryOutputArgs {
    categoryId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
