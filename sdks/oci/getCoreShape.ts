// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreShape(args: GetCoreShapeArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreShapeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreShape:getCoreShape", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "imageId": args.imageId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreShape.
 */
export interface GetCoreShapeArgs {
    availabilityDomain?: string;
    compartmentId: string;
    filters?: inputs.GetCoreShapeFilter[];
    id?: string;
    imageId?: string;
}

/**
 * A collection of values returned by getCoreShape.
 */
export interface GetCoreShapeResult {
    readonly availabilityDomain?: string;
    readonly compartmentId: string;
    readonly filters?: outputs.GetCoreShapeFilter[];
    readonly id: string;
    readonly imageId?: string;
    readonly shapes: outputs.GetCoreShapeShape[];
}
export function getCoreShapeOutput(args: GetCoreShapeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreShapeResult> {
    return pulumi.output(args).apply((a: any) => getCoreShape(a, opts))
}

/**
 * A collection of arguments for invoking getCoreShape.
 */
export interface GetCoreShapeOutputArgs {
    availabilityDomain?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetCoreShapeFilterArgs>[]>;
    id?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
}
