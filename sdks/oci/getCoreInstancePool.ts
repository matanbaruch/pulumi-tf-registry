// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreInstancePool(args: GetCoreInstancePoolArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreInstancePoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:index/getCoreInstancePool:getCoreInstancePool", {
        "instancePoolId": args.instancePoolId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreInstancePool.
 */
export interface GetCoreInstancePoolArgs {
    instancePoolId: string;
}

/**
 * A collection of values returned by getCoreInstancePool.
 */
export interface GetCoreInstancePoolResult {
    readonly actualSize: number;
    readonly compartmentId: string;
    readonly definedTags: {[key: string]: string};
    readonly displayName: string;
    readonly freeformTags: {[key: string]: string};
    readonly id: string;
    readonly instanceConfigurationId: string;
    readonly instanceDisplayNameFormatter: string;
    readonly instanceHostnameFormatter: string;
    readonly instancePoolId: string;
    readonly loadBalancers: outputs.GetCoreInstancePoolLoadBalancer[];
    readonly placementConfigurations: outputs.GetCoreInstancePoolPlacementConfiguration[];
    readonly size: number;
    readonly state: string;
    readonly timeCreated: string;
}
export function getCoreInstancePoolOutput(args: GetCoreInstancePoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreInstancePoolResult> {
    return pulumi.output(args).apply((a: any) => getCoreInstancePool(a, opts))
}

/**
 * A collection of arguments for invoking getCoreInstancePool.
 */
export interface GetCoreInstancePoolOutputArgs {
    instancePoolId: pulumi.Input<string>;
}
