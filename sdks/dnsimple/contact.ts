// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Contact extends pulumi.CustomResource {
    /**
     * Get an existing Contact resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContactState, opts?: pulumi.CustomResourceOptions): Contact {
        return new Contact(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dnsimple:index/contact:Contact';

    /**
     * Returns true if the given object is an instance of Contact.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Contact {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Contact.__pulumiType;
    }

    public /*out*/ readonly accountId!: pulumi.Output<number>;
    public readonly address1!: pulumi.Output<string>;
    public readonly address2!: pulumi.Output<string>;
    public readonly city!: pulumi.Output<string>;
    public readonly country!: pulumi.Output<string>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly email!: pulumi.Output<string>;
    public readonly fax!: pulumi.Output<string>;
    public /*out*/ readonly faxNormalized!: pulumi.Output<string>;
    public readonly firstName!: pulumi.Output<string>;
    public readonly jobTitle!: pulumi.Output<string>;
    public readonly label!: pulumi.Output<string>;
    public readonly lastName!: pulumi.Output<string>;
    public readonly organizationName!: pulumi.Output<string>;
    public readonly phone!: pulumi.Output<string>;
    public /*out*/ readonly phoneNormalized!: pulumi.Output<string>;
    public readonly postalCode!: pulumi.Output<string>;
    public readonly stateProvince!: pulumi.Output<string>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a Contact resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContactArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContactArgs | ContactState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContactState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["address1"] = state ? state.address1 : undefined;
            resourceInputs["address2"] = state ? state.address2 : undefined;
            resourceInputs["city"] = state ? state.city : undefined;
            resourceInputs["country"] = state ? state.country : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["fax"] = state ? state.fax : undefined;
            resourceInputs["faxNormalized"] = state ? state.faxNormalized : undefined;
            resourceInputs["firstName"] = state ? state.firstName : undefined;
            resourceInputs["jobTitle"] = state ? state.jobTitle : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["lastName"] = state ? state.lastName : undefined;
            resourceInputs["organizationName"] = state ? state.organizationName : undefined;
            resourceInputs["phone"] = state ? state.phone : undefined;
            resourceInputs["phoneNormalized"] = state ? state.phoneNormalized : undefined;
            resourceInputs["postalCode"] = state ? state.postalCode : undefined;
            resourceInputs["stateProvince"] = state ? state.stateProvince : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as ContactArgs | undefined;
            if ((!args || args.address1 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'address1'");
            }
            if ((!args || args.city === undefined) && !opts.urn) {
                throw new Error("Missing required property 'city'");
            }
            if ((!args || args.country === undefined) && !opts.urn) {
                throw new Error("Missing required property 'country'");
            }
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            if ((!args || args.firstName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firstName'");
            }
            if ((!args || args.lastName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lastName'");
            }
            if ((!args || args.phone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'phone'");
            }
            if ((!args || args.postalCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'postalCode'");
            }
            if ((!args || args.stateProvince === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stateProvince'");
            }
            resourceInputs["address1"] = args ? args.address1 : undefined;
            resourceInputs["address2"] = args ? args.address2 : undefined;
            resourceInputs["city"] = args ? args.city : undefined;
            resourceInputs["country"] = args ? args.country : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["fax"] = args ? args.fax : undefined;
            resourceInputs["firstName"] = args ? args.firstName : undefined;
            resourceInputs["jobTitle"] = args ? args.jobTitle : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["lastName"] = args ? args.lastName : undefined;
            resourceInputs["organizationName"] = args ? args.organizationName : undefined;
            resourceInputs["phone"] = args ? args.phone : undefined;
            resourceInputs["postalCode"] = args ? args.postalCode : undefined;
            resourceInputs["stateProvince"] = args ? args.stateProvince : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["faxNormalized"] = undefined /*out*/;
            resourceInputs["phoneNormalized"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Contact.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Contact resources.
 */
export interface ContactState {
    accountId?: pulumi.Input<number>;
    address1?: pulumi.Input<string>;
    address2?: pulumi.Input<string>;
    city?: pulumi.Input<string>;
    country?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    fax?: pulumi.Input<string>;
    faxNormalized?: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    jobTitle?: pulumi.Input<string>;
    label?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
    organizationName?: pulumi.Input<string>;
    phone?: pulumi.Input<string>;
    phoneNormalized?: pulumi.Input<string>;
    postalCode?: pulumi.Input<string>;
    stateProvince?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Contact resource.
 */
export interface ContactArgs {
    address1: pulumi.Input<string>;
    address2?: pulumi.Input<string>;
    city: pulumi.Input<string>;
    country: pulumi.Input<string>;
    email: pulumi.Input<string>;
    fax?: pulumi.Input<string>;
    firstName: pulumi.Input<string>;
    jobTitle?: pulumi.Input<string>;
    label?: pulumi.Input<string>;
    lastName: pulumi.Input<string>;
    organizationName?: pulumi.Input<string>;
    phone: pulumi.Input<string>;
    postalCode: pulumi.Input<string>;
    stateProvince: pulumi.Input<string>;
}
