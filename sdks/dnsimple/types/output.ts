// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetCertificateTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    read?: string;
}

export interface GetRegistrantChangeCheckExtendedAttribute {
    description: string;
    name: string;
    options: outputs.GetRegistrantChangeCheckExtendedAttributeOption[];
    required: boolean;
}

export interface GetRegistrantChangeCheckExtendedAttributeOption {
    description: string;
    title: string;
    value: string;
}

export interface RegisteredDomainDomainRegistration {
    id: number;
    period: number;
    state: string;
}

export interface RegisteredDomainRegistrantChange {
    /**
     * DNSimple Account ID to which the registrant change belongs to
     */
    accountId: number;
    /**
     * DNSimple contact ID for which the registrant change is being performed
     */
    contactId: number;
    /**
     * DNSimple domain ID for which the registrant change is being performed
     */
    domainId: string;
    /**
     * Extended attributes for the registrant change
     */
    extendedAttributes: {[key: string]: string};
    id: number;
    /**
     * Date when the registrant change lock was lifted for the domain
     */
    irtLockLiftedBy: string;
    /**
     * True if the registrant change will result in a registry owner change
     */
    registryOwnerChange: boolean;
    /**
     * State of the registrant change
     */
    state: string;
}

export interface RegisteredDomainTimeouts {
    /**
     * Create timeout.
     */
    create?: string;
    /**
     * Delete timeout (currently unused).
     */
    delete?: string;
    /**
     * Update timeout.
     */
    update?: string;
}

