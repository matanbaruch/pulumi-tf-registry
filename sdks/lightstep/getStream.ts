// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStream(args: GetStreamArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("lightstep:index/getStream:getStream", {
        "id": args.id,
        "projectName": args.projectName,
        "streamId": args.streamId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStream.
 */
export interface GetStreamArgs {
    id?: string;
    projectName: string;
    streamId: string;
}

/**
 * A collection of values returned by getStream.
 */
export interface GetStreamResult {
    readonly id: string;
    readonly projectName: string;
    readonly streamId: string;
    readonly streamName: string;
    readonly streamQuery: string;
}
export function getStreamOutput(args: GetStreamOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStreamResult> {
    return pulumi.output(args).apply((a: any) => getStream(a, opts))
}

/**
 * A collection of arguments for invoking getStream.
 */
export interface GetStreamOutputArgs {
    id?: pulumi.Input<string>;
    projectName: pulumi.Input<string>;
    streamId: pulumi.Input<string>;
}
