// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGslb(args?: GetGslbArgs, opts?: pulumi.InvokeOptions): Promise<GetGslbResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sakuracloud:index/getGslb:getGslb", {
        "filter": args.filter,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGslb.
 */
export interface GetGslbArgs {
    filter?: inputs.GetGslbFilter;
    id?: string;
}

/**
 * A collection of values returned by getGslb.
 */
export interface GetGslbResult {
    readonly description: string;
    readonly filter?: outputs.GetGslbFilter;
    readonly fqdn: string;
    readonly healthChecks: outputs.GetGslbHealthCheck[];
    readonly iconId: string;
    readonly id: string;
    readonly name: string;
    readonly servers: outputs.GetGslbServer[];
    readonly sorryServer: string;
    readonly tags: string[];
    readonly weighted: boolean;
}
export function getGslbOutput(args?: GetGslbOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGslbResult> {
    return pulumi.output(args).apply((a: any) => getGslb(a, opts))
}

/**
 * A collection of arguments for invoking getGslb.
 */
export interface GetGslbOutputArgs {
    filter?: pulumi.Input<inputs.GetGslbFilterArgs>;
    id?: pulumi.Input<string>;
}
