// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getWebaccel(args?: GetWebaccelArgs, opts?: pulumi.InvokeOptions): Promise<GetWebaccelResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sakuracloud:index/getWebaccel:getWebaccel", {
        "domain": args.domain,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWebaccel.
 */
export interface GetWebaccelArgs {
    domain?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getWebaccel.
 */
export interface GetWebaccelResult {
    readonly cnameRecordValue: string;
    readonly domain: string;
    readonly domainType: string;
    readonly hasCertificate: boolean;
    readonly hostHeader: string;
    readonly id: string;
    readonly name: string;
    readonly origin: string;
    readonly siteId: string;
    readonly status: string;
    readonly subdomain: string;
    readonly txtRecordValue: string;
}
export function getWebaccelOutput(args?: GetWebaccelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWebaccelResult> {
    return pulumi.output(args).apply((a: any) => getWebaccel(a, opts))
}

/**
 * A collection of arguments for invoking getWebaccel.
 */
export interface GetWebaccelOutputArgs {
    domain?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
