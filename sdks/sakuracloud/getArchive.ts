// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getArchive(args?: GetArchiveArgs, opts?: pulumi.InvokeOptions): Promise<GetArchiveResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sakuracloud:index/getArchive:getArchive", {
        "filter": args.filter,
        "id": args.id,
        "osType": args.osType,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getArchive.
 */
export interface GetArchiveArgs {
    filter?: inputs.GetArchiveFilter;
    id?: string;
    osType?: string;
    zone?: string;
}

/**
 * A collection of values returned by getArchive.
 */
export interface GetArchiveResult {
    readonly description: string;
    readonly filter?: outputs.GetArchiveFilter;
    readonly iconId: string;
    readonly id: string;
    readonly name: string;
    readonly osType?: string;
    readonly size: number;
    readonly tags: string[];
    readonly zone: string;
}
export function getArchiveOutput(args?: GetArchiveOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetArchiveResult> {
    return pulumi.output(args).apply((a: any) => getArchive(a, opts))
}

/**
 * A collection of arguments for invoking getArchive.
 */
export interface GetArchiveOutputArgs {
    filter?: pulumi.Input<inputs.GetArchiveFilterArgs>;
    id?: pulumi.Input<string>;
    osType?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
