// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSimpleMonitor(args?: GetSimpleMonitorArgs, opts?: pulumi.InvokeOptions): Promise<GetSimpleMonitorResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sakuracloud:index/getSimpleMonitor:getSimpleMonitor", {
        "filter": args.filter,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSimpleMonitor.
 */
export interface GetSimpleMonitorArgs {
    filter?: inputs.GetSimpleMonitorFilter;
    id?: string;
}

/**
 * A collection of values returned by getSimpleMonitor.
 */
export interface GetSimpleMonitorResult {
    readonly delayLoop: number;
    readonly description: string;
    readonly enabled: boolean;
    readonly filter?: outputs.GetSimpleMonitorFilter;
    readonly healthChecks: outputs.GetSimpleMonitorHealthCheck[];
    readonly iconId: string;
    readonly id: string;
    readonly maxCheckAttempts: number;
    readonly notifyEmailEnabled: boolean;
    readonly notifyEmailHtml: boolean;
    readonly notifyInterval: number;
    readonly notifySlackEnabled: boolean;
    readonly notifySlackWebhook: string;
    readonly retryInterval: number;
    readonly tags: string[];
    readonly target: string;
    readonly timeout: number;
}
export function getSimpleMonitorOutput(args?: GetSimpleMonitorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSimpleMonitorResult> {
    return pulumi.output(args).apply((a: any) => getSimpleMonitor(a, opts))
}

/**
 * A collection of arguments for invoking getSimpleMonitor.
 */
export interface GetSimpleMonitorOutputArgs {
    filter?: pulumi.Input<inputs.GetSimpleMonitorFilterArgs>;
    id?: pulumi.Input<string>;
}
