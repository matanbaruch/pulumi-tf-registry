// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIcon(args?: GetIconArgs, opts?: pulumi.InvokeOptions): Promise<GetIconResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sakuracloud:index/getIcon:getIcon", {
        "filter": args.filter,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIcon.
 */
export interface GetIconArgs {
    filter?: inputs.GetIconFilter;
    id?: string;
}

/**
 * A collection of values returned by getIcon.
 */
export interface GetIconResult {
    readonly filter?: outputs.GetIconFilter;
    readonly id: string;
    readonly name: string;
    readonly tags: string[];
    readonly url: string;
}
export function getIconOutput(args?: GetIconOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIconResult> {
    return pulumi.output(args).apply((a: any) => getIcon(a, opts))
}

/**
 * A collection of arguments for invoking getIcon.
 */
export interface GetIconOutputArgs {
    filter?: pulumi.Input<inputs.GetIconFilterArgs>;
    id?: pulumi.Input<string>;
}
