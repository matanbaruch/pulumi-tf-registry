// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCertificateAuthority(args?: GetCertificateAuthorityArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateAuthorityResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sakuracloud:index/getCertificateAuthority:getCertificateAuthority", {
        "filter": args.filter,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCertificateAuthority.
 */
export interface GetCertificateAuthorityArgs {
    filter?: inputs.GetCertificateAuthorityFilter;
    id?: string;
}

/**
 * A collection of values returned by getCertificateAuthority.
 */
export interface GetCertificateAuthorityResult {
    readonly certificate: string;
    readonly clients: outputs.GetCertificateAuthorityClient[];
    readonly crlUrl: string;
    readonly description: string;
    readonly filter?: outputs.GetCertificateAuthorityFilter;
    readonly iconId: string;
    readonly id: string;
    readonly name: string;
    readonly notAfter: string;
    readonly notBefore: string;
    readonly serialNumber: string;
    readonly servers: outputs.GetCertificateAuthorityServer[];
    readonly subjectString: string;
    readonly tags: string[];
}
export function getCertificateAuthorityOutput(args?: GetCertificateAuthorityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateAuthorityResult> {
    return pulumi.output(args).apply((a: any) => getCertificateAuthority(a, opts))
}

/**
 * A collection of arguments for invoking getCertificateAuthority.
 */
export interface GetCertificateAuthorityOutputArgs {
    filter?: pulumi.Input<inputs.GetCertificateAuthorityFilterArgs>;
    id?: pulumi.Input<string>;
}
