// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEsme(args?: GetEsmeArgs, opts?: pulumi.InvokeOptions): Promise<GetEsmeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sakuracloud:index/getEsme:getEsme", {
        "filter": args.filter,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEsme.
 */
export interface GetEsmeArgs {
    filter?: inputs.GetEsmeFilter;
    id?: string;
}

/**
 * A collection of values returned by getEsme.
 */
export interface GetEsmeResult {
    readonly description: string;
    readonly filter?: outputs.GetEsmeFilter;
    readonly iconId: string;
    readonly id: string;
    readonly name: string;
    readonly sendMessageWithGeneratedOtpApiUrl: string;
    readonly sendMessageWithInputtedOtpApiUrl: string;
    readonly tags: string[];
}
export function getEsmeOutput(args?: GetEsmeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEsmeResult> {
    return pulumi.output(args).apply((a: any) => getEsme(a, opts))
}

/**
 * A collection of arguments for invoking getEsme.
 */
export interface GetEsmeOutputArgs {
    filter?: pulumi.Input<inputs.GetEsmeFilterArgs>;
    id?: pulumi.Input<string>;
}
