// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SshKeyGen extends pulumi.CustomResource {
    /**
     * Get an existing SshKeyGen resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SshKeyGenState, opts?: pulumi.CustomResourceOptions): SshKeyGen {
        return new SshKeyGen(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sakuracloud:index/sshKeyGen:SshKeyGen';

    /**
     * Returns true if the given object is an instance of SshKeyGen.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SshKeyGen {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SshKeyGen.__pulumiType;
    }

    /**
     * The description of the SSHKey. The length of this value must be in the range [`1`-`512`]
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The fingerprint of the public key
     */
    public /*out*/ readonly fingerprint!: pulumi.Output<string>;
    /**
     * The name of the SSHKey. The length of this value must be in the range [`1`-`64`]
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The pass phrase of the private key. The length of this value must be in the range [`8`-`64`]
     */
    public readonly passPhrase!: pulumi.Output<string | undefined>;
    /**
     * The body of the private key
     */
    public /*out*/ readonly privateKey!: pulumi.Output<string>;
    /**
     * The body of the public key
     */
    public /*out*/ readonly publicKey!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.SshKeyGenTimeouts | undefined>;

    /**
     * Create a SshKeyGen resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SshKeyGenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SshKeyGenArgs | SshKeyGenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SshKeyGenState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fingerprint"] = state ? state.fingerprint : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["passPhrase"] = state ? state.passPhrase : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["publicKey"] = state ? state.publicKey : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as SshKeyGenArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passPhrase"] = args ? args.passPhrase : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["privateKey"] = undefined /*out*/;
            resourceInputs["publicKey"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["privateKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SshKeyGen.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SshKeyGen resources.
 */
export interface SshKeyGenState {
    /**
     * The description of the SSHKey. The length of this value must be in the range [`1`-`512`]
     */
    description?: pulumi.Input<string>;
    /**
     * The fingerprint of the public key
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * The name of the SSHKey. The length of this value must be in the range [`1`-`64`]
     */
    name?: pulumi.Input<string>;
    /**
     * The pass phrase of the private key. The length of this value must be in the range [`8`-`64`]
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * The body of the private key
     */
    privateKey?: pulumi.Input<string>;
    /**
     * The body of the public key
     */
    publicKey?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SshKeyGenTimeouts>;
}

/**
 * The set of arguments for constructing a SshKeyGen resource.
 */
export interface SshKeyGenArgs {
    /**
     * The description of the SSHKey. The length of this value must be in the range [`1`-`512`]
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the SSHKey. The length of this value must be in the range [`1`-`64`]
     */
    name?: pulumi.Input<string>;
    /**
     * The pass phrase of the private key. The length of this value must be in the range [`8`-`64`]
     */
    passPhrase?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SshKeyGenTimeouts>;
}
