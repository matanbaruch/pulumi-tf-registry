// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PacketFilterRules extends pulumi.CustomResource {
    /**
     * Get an existing PacketFilterRules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PacketFilterRulesState, opts?: pulumi.CustomResourceOptions): PacketFilterRules {
        return new PacketFilterRules(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sakuracloud:index/packetFilterRules:PacketFilterRules';

    /**
     * Returns true if the given object is an instance of PacketFilterRules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PacketFilterRules {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PacketFilterRules.__pulumiType;
    }

    public readonly expressions!: pulumi.Output<outputs.PacketFilterRulesExpression[] | undefined>;
    /**
     * The id of the packet filter that set expressions to
     */
    public readonly packetFilterId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.PacketFilterRulesTimeouts | undefined>;
    /**
     * The name of zone that the PacketFilter Rule will be created (e.g. `is1a`, `tk1a`)
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a PacketFilterRules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PacketFilterRulesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PacketFilterRulesArgs | PacketFilterRulesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PacketFilterRulesState | undefined;
            resourceInputs["expressions"] = state ? state.expressions : undefined;
            resourceInputs["packetFilterId"] = state ? state.packetFilterId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as PacketFilterRulesArgs | undefined;
            if ((!args || args.packetFilterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'packetFilterId'");
            }
            resourceInputs["expressions"] = args ? args.expressions : undefined;
            resourceInputs["packetFilterId"] = args ? args.packetFilterId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PacketFilterRules.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PacketFilterRules resources.
 */
export interface PacketFilterRulesState {
    expressions?: pulumi.Input<pulumi.Input<inputs.PacketFilterRulesExpression>[]>;
    /**
     * The id of the packet filter that set expressions to
     */
    packetFilterId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.PacketFilterRulesTimeouts>;
    /**
     * The name of zone that the PacketFilter Rule will be created (e.g. `is1a`, `tk1a`)
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PacketFilterRules resource.
 */
export interface PacketFilterRulesArgs {
    expressions?: pulumi.Input<pulumi.Input<inputs.PacketFilterRulesExpression>[]>;
    /**
     * The id of the packet filter that set expressions to
     */
    packetFilterId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.PacketFilterRulesTimeouts>;
    /**
     * The name of zone that the PacketFilter Rule will be created (e.g. `is1a`, `tk1a`)
     */
    zone?: pulumi.Input<string>;
}
