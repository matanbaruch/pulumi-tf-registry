// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getServerVncInfo(args: GetServerVncInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetServerVncInfoResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sakuracloud:index/getServerVncInfo:getServerVncInfo", {
        "id": args.id,
        "serverId": args.serverId,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServerVncInfo.
 */
export interface GetServerVncInfoArgs {
    id?: string;
    serverId: string;
    zone?: string;
}

/**
 * A collection of values returned by getServerVncInfo.
 */
export interface GetServerVncInfoResult {
    readonly host: string;
    readonly id: string;
    readonly password: string;
    readonly port: number;
    readonly serverId: string;
    readonly zone: string;
}
export function getServerVncInfoOutput(args: GetServerVncInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerVncInfoResult> {
    return pulumi.output(args).apply((a: any) => getServerVncInfo(a, opts))
}

/**
 * A collection of arguments for invoking getServerVncInfo.
 */
export interface GetServerVncInfoOutputArgs {
    id?: pulumi.Input<string>;
    serverId: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
