// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CloudIntegrationCloudtrail extends pulumi.CustomResource {
    /**
     * Get an existing CloudIntegrationCloudtrail resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudIntegrationCloudtrailState, opts?: pulumi.CustomResourceOptions): CloudIntegrationCloudtrail {
        return new CloudIntegrationCloudtrail(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'wavefront:index/cloudIntegrationCloudtrail:CloudIntegrationCloudtrail';

    /**
     * Returns true if the given object is an instance of CloudIntegrationCloudtrail.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudIntegrationCloudtrail {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudIntegrationCloudtrail.__pulumiType;
    }

    public readonly additionalTags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly bucketName!: pulumi.Output<string>;
    public readonly externalId!: pulumi.Output<string>;
    public readonly filterRule!: pulumi.Output<string | undefined>;
    public readonly forceSave!: pulumi.Output<boolean | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly prefix!: pulumi.Output<string | undefined>;
    public readonly region!: pulumi.Output<string>;
    public readonly roleArn!: pulumi.Output<string>;
    public readonly service!: pulumi.Output<string | undefined>;
    public readonly serviceRefreshRateInMinutes!: pulumi.Output<number | undefined>;

    /**
     * Create a CloudIntegrationCloudtrail resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudIntegrationCloudtrailArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudIntegrationCloudtrailArgs | CloudIntegrationCloudtrailState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudIntegrationCloudtrailState | undefined;
            resourceInputs["additionalTags"] = state ? state.additionalTags : undefined;
            resourceInputs["bucketName"] = state ? state.bucketName : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["filterRule"] = state ? state.filterRule : undefined;
            resourceInputs["forceSave"] = state ? state.forceSave : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["prefix"] = state ? state.prefix : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["serviceRefreshRateInMinutes"] = state ? state.serviceRefreshRateInMinutes : undefined;
        } else {
            const args = argsOrState as CloudIntegrationCloudtrailArgs | undefined;
            if ((!args || args.bucketName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucketName'");
            }
            if ((!args || args.externalId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'externalId'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["additionalTags"] = args ? args.additionalTags : undefined;
            resourceInputs["bucketName"] = args ? args.bucketName : undefined;
            resourceInputs["externalId"] = args ? args.externalId : undefined;
            resourceInputs["filterRule"] = args ? args.filterRule : undefined;
            resourceInputs["forceSave"] = args ? args.forceSave : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["prefix"] = args ? args.prefix : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["serviceRefreshRateInMinutes"] = args ? args.serviceRefreshRateInMinutes : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudIntegrationCloudtrail.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudIntegrationCloudtrail resources.
 */
export interface CloudIntegrationCloudtrailState {
    additionalTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    bucketName?: pulumi.Input<string>;
    externalId?: pulumi.Input<string>;
    filterRule?: pulumi.Input<string>;
    forceSave?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    service?: pulumi.Input<string>;
    serviceRefreshRateInMinutes?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CloudIntegrationCloudtrail resource.
 */
export interface CloudIntegrationCloudtrailArgs {
    additionalTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    bucketName: pulumi.Input<string>;
    externalId: pulumi.Input<string>;
    filterRule?: pulumi.Input<string>;
    forceSave?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
    region: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
    service?: pulumi.Input<string>;
    serviceRefreshRateInMinutes?: pulumi.Input<number>;
}
