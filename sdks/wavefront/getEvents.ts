// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEvents(args: GetEventsArgs, opts?: pulumi.InvokeOptions): Promise<GetEventsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("wavefront:index/getEvents:getEvents", {
        "earliestStartTimeEpochMillis": args.earliestStartTimeEpochMillis,
        "id": args.id,
        "latestStartTimeEpochMillis": args.latestStartTimeEpochMillis,
        "limit": args.limit,
        "offset": args.offset,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEvents.
 */
export interface GetEventsArgs {
    earliestStartTimeEpochMillis: number;
    id?: string;
    latestStartTimeEpochMillis: number;
    limit?: number;
    offset?: number;
}

/**
 * A collection of values returned by getEvents.
 */
export interface GetEventsResult {
    readonly earliestStartTimeEpochMillis: number;
    readonly events: outputs.GetEventsEvent[];
    readonly id: string;
    readonly latestStartTimeEpochMillis: number;
    readonly limit?: number;
    readonly offset?: number;
}
export function getEventsOutput(args: GetEventsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventsResult> {
    return pulumi.output(args).apply((a: any) => getEvents(a, opts))
}

/**
 * A collection of arguments for invoking getEvents.
 */
export interface GetEventsOutputArgs {
    earliestStartTimeEpochMillis: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    latestStartTimeEpochMillis: pulumi.Input<number>;
    limit?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
}
