// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CloudIntegrationAppDynamics extends pulumi.CustomResource {
    /**
     * Get an existing CloudIntegrationAppDynamics resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudIntegrationAppDynamicsState, opts?: pulumi.CustomResourceOptions): CloudIntegrationAppDynamics {
        return new CloudIntegrationAppDynamics(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'wavefront:index/cloudIntegrationAppDynamics:CloudIntegrationAppDynamics';

    /**
     * Returns true if the given object is an instance of CloudIntegrationAppDynamics.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudIntegrationAppDynamics {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudIntegrationAppDynamics.__pulumiType;
    }

    public readonly additionalTags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly appFilterRegexes!: pulumi.Output<string[] | undefined>;
    public readonly controllerName!: pulumi.Output<string>;
    public readonly enableAppInfraMetrics!: pulumi.Output<boolean | undefined>;
    public readonly enableBackendMetrics!: pulumi.Output<boolean | undefined>;
    public readonly enableBusinessTrxMetrics!: pulumi.Output<boolean | undefined>;
    public readonly enableErrorMetrics!: pulumi.Output<boolean | undefined>;
    public readonly enableIndividualNodeMetrics!: pulumi.Output<boolean | undefined>;
    public readonly enableOverallPerfMetrics!: pulumi.Output<boolean | undefined>;
    public readonly enableRollup!: pulumi.Output<boolean | undefined>;
    public readonly enableServiceEndpointMetrics!: pulumi.Output<boolean | undefined>;
    public readonly encryptedPassword!: pulumi.Output<string>;
    public readonly forceSave!: pulumi.Output<boolean | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly service!: pulumi.Output<string | undefined>;
    public readonly serviceRefreshRateInMinutes!: pulumi.Output<number | undefined>;
    public readonly userName!: pulumi.Output<string>;

    /**
     * Create a CloudIntegrationAppDynamics resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudIntegrationAppDynamicsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudIntegrationAppDynamicsArgs | CloudIntegrationAppDynamicsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudIntegrationAppDynamicsState | undefined;
            resourceInputs["additionalTags"] = state ? state.additionalTags : undefined;
            resourceInputs["appFilterRegexes"] = state ? state.appFilterRegexes : undefined;
            resourceInputs["controllerName"] = state ? state.controllerName : undefined;
            resourceInputs["enableAppInfraMetrics"] = state ? state.enableAppInfraMetrics : undefined;
            resourceInputs["enableBackendMetrics"] = state ? state.enableBackendMetrics : undefined;
            resourceInputs["enableBusinessTrxMetrics"] = state ? state.enableBusinessTrxMetrics : undefined;
            resourceInputs["enableErrorMetrics"] = state ? state.enableErrorMetrics : undefined;
            resourceInputs["enableIndividualNodeMetrics"] = state ? state.enableIndividualNodeMetrics : undefined;
            resourceInputs["enableOverallPerfMetrics"] = state ? state.enableOverallPerfMetrics : undefined;
            resourceInputs["enableRollup"] = state ? state.enableRollup : undefined;
            resourceInputs["enableServiceEndpointMetrics"] = state ? state.enableServiceEndpointMetrics : undefined;
            resourceInputs["encryptedPassword"] = state ? state.encryptedPassword : undefined;
            resourceInputs["forceSave"] = state ? state.forceSave : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["serviceRefreshRateInMinutes"] = state ? state.serviceRefreshRateInMinutes : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
        } else {
            const args = argsOrState as CloudIntegrationAppDynamicsArgs | undefined;
            if ((!args || args.controllerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'controllerName'");
            }
            if ((!args || args.encryptedPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'encryptedPassword'");
            }
            if ((!args || args.userName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userName'");
            }
            resourceInputs["additionalTags"] = args ? args.additionalTags : undefined;
            resourceInputs["appFilterRegexes"] = args ? args.appFilterRegexes : undefined;
            resourceInputs["controllerName"] = args ? args.controllerName : undefined;
            resourceInputs["enableAppInfraMetrics"] = args ? args.enableAppInfraMetrics : undefined;
            resourceInputs["enableBackendMetrics"] = args ? args.enableBackendMetrics : undefined;
            resourceInputs["enableBusinessTrxMetrics"] = args ? args.enableBusinessTrxMetrics : undefined;
            resourceInputs["enableErrorMetrics"] = args ? args.enableErrorMetrics : undefined;
            resourceInputs["enableIndividualNodeMetrics"] = args ? args.enableIndividualNodeMetrics : undefined;
            resourceInputs["enableOverallPerfMetrics"] = args ? args.enableOverallPerfMetrics : undefined;
            resourceInputs["enableRollup"] = args ? args.enableRollup : undefined;
            resourceInputs["enableServiceEndpointMetrics"] = args ? args.enableServiceEndpointMetrics : undefined;
            resourceInputs["encryptedPassword"] = args?.encryptedPassword ? pulumi.secret(args.encryptedPassword) : undefined;
            resourceInputs["forceSave"] = args ? args.forceSave : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["serviceRefreshRateInMinutes"] = args ? args.serviceRefreshRateInMinutes : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["encryptedPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CloudIntegrationAppDynamics.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudIntegrationAppDynamics resources.
 */
export interface CloudIntegrationAppDynamicsState {
    additionalTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appFilterRegexes?: pulumi.Input<pulumi.Input<string>[]>;
    controllerName?: pulumi.Input<string>;
    enableAppInfraMetrics?: pulumi.Input<boolean>;
    enableBackendMetrics?: pulumi.Input<boolean>;
    enableBusinessTrxMetrics?: pulumi.Input<boolean>;
    enableErrorMetrics?: pulumi.Input<boolean>;
    enableIndividualNodeMetrics?: pulumi.Input<boolean>;
    enableOverallPerfMetrics?: pulumi.Input<boolean>;
    enableRollup?: pulumi.Input<boolean>;
    enableServiceEndpointMetrics?: pulumi.Input<boolean>;
    encryptedPassword?: pulumi.Input<string>;
    forceSave?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    service?: pulumi.Input<string>;
    serviceRefreshRateInMinutes?: pulumi.Input<number>;
    userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudIntegrationAppDynamics resource.
 */
export interface CloudIntegrationAppDynamicsArgs {
    additionalTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appFilterRegexes?: pulumi.Input<pulumi.Input<string>[]>;
    controllerName: pulumi.Input<string>;
    enableAppInfraMetrics?: pulumi.Input<boolean>;
    enableBackendMetrics?: pulumi.Input<boolean>;
    enableBusinessTrxMetrics?: pulumi.Input<boolean>;
    enableErrorMetrics?: pulumi.Input<boolean>;
    enableIndividualNodeMetrics?: pulumi.Input<boolean>;
    enableOverallPerfMetrics?: pulumi.Input<boolean>;
    enableRollup?: pulumi.Input<boolean>;
    enableServiceEndpointMetrics?: pulumi.Input<boolean>;
    encryptedPassword: pulumi.Input<string>;
    forceSave?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    service?: pulumi.Input<string>;
    serviceRefreshRateInMinutes?: pulumi.Input<number>;
    userName: pulumi.Input<string>;
}
