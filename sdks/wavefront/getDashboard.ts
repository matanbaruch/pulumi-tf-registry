// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDashboard(args: GetDashboardArgs, opts?: pulumi.InvokeOptions): Promise<GetDashboardResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("wavefront:index/getDashboard:getDashboard", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDashboard.
 */
export interface GetDashboardArgs {
    id: string;
}

/**
 * A collection of values returned by getDashboard.
 */
export interface GetDashboardResult {
    readonly canModifies: string[];
    readonly canViews: string[];
    readonly chartTitleBgColor: string;
    readonly chartTitleColor: string;
    readonly chartTitleScalar: number;
    readonly createdEpochMillis: number;
    readonly creatorId: string;
    readonly customer: string;
    readonly defaultEndTime: number;
    readonly defaultStartTime: number;
    readonly defaultTimeWindow: string;
    readonly deleted: boolean;
    readonly description: string;
    readonly displayDescription: boolean;
    readonly displayQueryParameters: boolean;
    readonly displaySectionTableOfContents: boolean;
    readonly eventFilterType: string;
    readonly eventQuery: string;
    readonly favorite: boolean;
    readonly hidden: boolean;
    readonly id: string;
    readonly name: string;
    readonly numCharts: number;
    readonly numFavorites: number;
    readonly parameterDetails: outputs.GetDashboardParameterDetail[];
    readonly parameters: {[key: string]: string};
    readonly sections: outputs.GetDashboardSection[];
    readonly systemOwned: boolean;
    readonly tags: string[];
    readonly updatedEpochMillis: number;
    readonly updaterId: string;
    readonly url: string;
    readonly viewsLastDay: number;
    readonly viewsLastMonth: number;
    readonly viewsLastWeek: number;
}
export function getDashboardOutput(args: GetDashboardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDashboardResult> {
    return pulumi.output(args).apply((a: any) => getDashboard(a, opts))
}

/**
 * A collection of arguments for invoking getDashboard.
 */
export interface GetDashboardOutputArgs {
    id: pulumi.Input<string>;
}
