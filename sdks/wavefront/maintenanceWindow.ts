// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MaintenanceWindow extends pulumi.CustomResource {
    /**
     * Get an existing MaintenanceWindow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MaintenanceWindowState, opts?: pulumi.CustomResourceOptions): MaintenanceWindow {
        return new MaintenanceWindow(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'wavefront:index/maintenanceWindow:MaintenanceWindow';

    /**
     * Returns true if the given object is an instance of MaintenanceWindow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MaintenanceWindow {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MaintenanceWindow.__pulumiType;
    }

    public readonly endTimeInSeconds!: pulumi.Output<number>;
    public readonly hostTagGroupHostNamesGroupAnded!: pulumi.Output<boolean | undefined>;
    public readonly reason!: pulumi.Output<string>;
    public readonly relevantCustomerTags!: pulumi.Output<string[] | undefined>;
    public readonly relevantHostNames!: pulumi.Output<string[] | undefined>;
    public readonly relevantHostTags!: pulumi.Output<string[] | undefined>;
    public readonly relevantHostTagsAnded!: pulumi.Output<boolean | undefined>;
    public readonly startTimeInSeconds!: pulumi.Output<number>;
    public readonly title!: pulumi.Output<string>;

    /**
     * Create a MaintenanceWindow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MaintenanceWindowArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MaintenanceWindowArgs | MaintenanceWindowState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MaintenanceWindowState | undefined;
            resourceInputs["endTimeInSeconds"] = state ? state.endTimeInSeconds : undefined;
            resourceInputs["hostTagGroupHostNamesGroupAnded"] = state ? state.hostTagGroupHostNamesGroupAnded : undefined;
            resourceInputs["reason"] = state ? state.reason : undefined;
            resourceInputs["relevantCustomerTags"] = state ? state.relevantCustomerTags : undefined;
            resourceInputs["relevantHostNames"] = state ? state.relevantHostNames : undefined;
            resourceInputs["relevantHostTags"] = state ? state.relevantHostTags : undefined;
            resourceInputs["relevantHostTagsAnded"] = state ? state.relevantHostTagsAnded : undefined;
            resourceInputs["startTimeInSeconds"] = state ? state.startTimeInSeconds : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
        } else {
            const args = argsOrState as MaintenanceWindowArgs | undefined;
            if ((!args || args.endTimeInSeconds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endTimeInSeconds'");
            }
            if ((!args || args.reason === undefined) && !opts.urn) {
                throw new Error("Missing required property 'reason'");
            }
            if ((!args || args.startTimeInSeconds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startTimeInSeconds'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["endTimeInSeconds"] = args ? args.endTimeInSeconds : undefined;
            resourceInputs["hostTagGroupHostNamesGroupAnded"] = args ? args.hostTagGroupHostNamesGroupAnded : undefined;
            resourceInputs["reason"] = args ? args.reason : undefined;
            resourceInputs["relevantCustomerTags"] = args ? args.relevantCustomerTags : undefined;
            resourceInputs["relevantHostNames"] = args ? args.relevantHostNames : undefined;
            resourceInputs["relevantHostTags"] = args ? args.relevantHostTags : undefined;
            resourceInputs["relevantHostTagsAnded"] = args ? args.relevantHostTagsAnded : undefined;
            resourceInputs["startTimeInSeconds"] = args ? args.startTimeInSeconds : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MaintenanceWindow.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MaintenanceWindow resources.
 */
export interface MaintenanceWindowState {
    endTimeInSeconds?: pulumi.Input<number>;
    hostTagGroupHostNamesGroupAnded?: pulumi.Input<boolean>;
    reason?: pulumi.Input<string>;
    relevantCustomerTags?: pulumi.Input<pulumi.Input<string>[]>;
    relevantHostNames?: pulumi.Input<pulumi.Input<string>[]>;
    relevantHostTags?: pulumi.Input<pulumi.Input<string>[]>;
    relevantHostTagsAnded?: pulumi.Input<boolean>;
    startTimeInSeconds?: pulumi.Input<number>;
    title?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MaintenanceWindow resource.
 */
export interface MaintenanceWindowArgs {
    endTimeInSeconds: pulumi.Input<number>;
    hostTagGroupHostNamesGroupAnded?: pulumi.Input<boolean>;
    reason: pulumi.Input<string>;
    relevantCustomerTags?: pulumi.Input<pulumi.Input<string>[]>;
    relevantHostNames?: pulumi.Input<pulumi.Input<string>[]>;
    relevantHostTags?: pulumi.Input<pulumi.Input<string>[]>;
    relevantHostTagsAnded?: pulumi.Input<boolean>;
    startTimeInSeconds: pulumi.Input<number>;
    title: pulumi.Input<string>;
}
