// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getExternalLink(args: GetExternalLinkArgs, opts?: pulumi.InvokeOptions): Promise<GetExternalLinkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("wavefront:index/getExternalLink:getExternalLink", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getExternalLink.
 */
export interface GetExternalLinkArgs {
    id: string;
}

/**
 * A collection of values returned by getExternalLink.
 */
export interface GetExternalLinkResult {
    readonly createdEpochMillis: number;
    readonly creatorId: string;
    readonly description: string;
    readonly id: string;
    readonly isLogIntegration: boolean;
    readonly metricFilterRegex: string;
    readonly name: string;
    readonly pointTagFilterRegexes: {[key: string]: string};
    readonly sourceFilterRegex: string;
    readonly template: string;
    readonly updatedEpochMillis: number;
    readonly updaterId: string;
}
export function getExternalLinkOutput(args: GetExternalLinkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetExternalLinkResult> {
    return pulumi.output(args).apply((a: any) => getExternalLink(a, opts))
}

/**
 * A collection of arguments for invoking getExternalLink.
 */
export interface GetExternalLinkOutputArgs {
    id: pulumi.Input<string>;
}
