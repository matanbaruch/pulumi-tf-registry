// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplicationLoadbalancerForwardingrule(args: GetApplicationLoadbalancerForwardingruleArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationLoadbalancerForwardingruleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getApplicationLoadbalancerForwardingrule:getApplicationLoadbalancerForwardingrule", {
        "applicationLoadbalancerId": args.applicationLoadbalancerId,
        "datacenterId": args.datacenterId,
        "id": args.id,
        "name": args.name,
        "partialMatch": args.partialMatch,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplicationLoadbalancerForwardingrule.
 */
export interface GetApplicationLoadbalancerForwardingruleArgs {
    applicationLoadbalancerId: string;
    datacenterId: string;
    id?: string;
    name?: string;
    partialMatch?: boolean;
    timeouts?: inputs.GetApplicationLoadbalancerForwardingruleTimeouts;
}

/**
 * A collection of values returned by getApplicationLoadbalancerForwardingrule.
 */
export interface GetApplicationLoadbalancerForwardingruleResult {
    readonly applicationLoadbalancerId: string;
    readonly clientTimeout: number;
    readonly datacenterId: string;
    readonly httpRules: outputs.GetApplicationLoadbalancerForwardingruleHttpRule[];
    readonly id?: string;
    readonly listenerIp: string;
    readonly listenerPort: number;
    readonly name?: string;
    readonly partialMatch?: boolean;
    readonly protocol: string;
    readonly serverCertificates: string[];
    readonly timeouts?: outputs.GetApplicationLoadbalancerForwardingruleTimeouts;
}
export function getApplicationLoadbalancerForwardingruleOutput(args: GetApplicationLoadbalancerForwardingruleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationLoadbalancerForwardingruleResult> {
    return pulumi.output(args).apply((a: any) => getApplicationLoadbalancerForwardingrule(a, opts))
}

/**
 * A collection of arguments for invoking getApplicationLoadbalancerForwardingrule.
 */
export interface GetApplicationLoadbalancerForwardingruleOutputArgs {
    applicationLoadbalancerId: pulumi.Input<string>;
    datacenterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    partialMatch?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.GetApplicationLoadbalancerForwardingruleTimeoutsArgs>;
}
