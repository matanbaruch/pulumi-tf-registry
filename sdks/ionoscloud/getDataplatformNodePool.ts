// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataplatformNodePool(args: GetDataplatformNodePoolArgs, opts?: pulumi.InvokeOptions): Promise<GetDataplatformNodePoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getDataplatformNodePool:getDataplatformNodePool", {
        "clusterId": args.clusterId,
        "id": args.id,
        "name": args.name,
        "partialMatch": args.partialMatch,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataplatformNodePool.
 */
export interface GetDataplatformNodePoolArgs {
    clusterId: string;
    id?: string;
    name?: string;
    partialMatch?: boolean;
    timeouts?: inputs.GetDataplatformNodePoolTimeouts;
}

/**
 * A collection of values returned by getDataplatformNodePool.
 */
export interface GetDataplatformNodePoolResult {
    readonly annotations: {[key: string]: string};
    readonly availabilityZone: string;
    readonly clusterId: string;
    readonly coresCount: number;
    readonly cpuFamily: string;
    readonly datacenterId: string;
    readonly id?: string;
    readonly labels: {[key: string]: string};
    readonly maintenanceWindows: outputs.GetDataplatformNodePoolMaintenanceWindow[];
    readonly name?: string;
    readonly nodeCount: number;
    readonly partialMatch?: boolean;
    readonly ramSize: number;
    readonly storageSize: number;
    readonly storageType: string;
    readonly timeouts?: outputs.GetDataplatformNodePoolTimeouts;
    readonly version: string;
}
export function getDataplatformNodePoolOutput(args: GetDataplatformNodePoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataplatformNodePoolResult> {
    return pulumi.output(args).apply((a: any) => getDataplatformNodePool(a, opts))
}

/**
 * A collection of arguments for invoking getDataplatformNodePool.
 */
export interface GetDataplatformNodePoolOutputArgs {
    clusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    partialMatch?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.GetDataplatformNodePoolTimeoutsArgs>;
}
