// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLoggingPipeline(args?: GetLoggingPipelineArgs, opts?: pulumi.InvokeOptions): Promise<GetLoggingPipelineResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getLoggingPipeline:getLoggingPipeline", {
        "id": args.id,
        "location": args.location,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLoggingPipeline.
 */
export interface GetLoggingPipelineArgs {
    id?: string;
    location?: string;
    name?: string;
}

/**
 * A collection of values returned by getLoggingPipeline.
 */
export interface GetLoggingPipelineResult {
    readonly grafanaAddress: string;
    readonly id?: string;
    readonly location?: string;
    readonly logs: outputs.GetLoggingPipelineLog[];
    readonly name: string;
}
export function getLoggingPipelineOutput(args?: GetLoggingPipelineOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoggingPipelineResult> {
    return pulumi.output(args).apply((a: any) => getLoggingPipeline(a, opts))
}

/**
 * A collection of arguments for invoking getLoggingPipeline.
 */
export interface GetLoggingPipelineOutputArgs {
    id?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
