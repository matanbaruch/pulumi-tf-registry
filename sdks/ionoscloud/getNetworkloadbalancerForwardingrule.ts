// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkloadbalancerForwardingrule(args: GetNetworkloadbalancerForwardingruleArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkloadbalancerForwardingruleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getNetworkloadbalancerForwardingrule:getNetworkloadbalancerForwardingrule", {
        "datacenterId": args.datacenterId,
        "id": args.id,
        "name": args.name,
        "networkloadbalancerId": args.networkloadbalancerId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkloadbalancerForwardingrule.
 */
export interface GetNetworkloadbalancerForwardingruleArgs {
    datacenterId: string;
    id?: string;
    name?: string;
    networkloadbalancerId: string;
    timeouts?: inputs.GetNetworkloadbalancerForwardingruleTimeouts;
}

/**
 * A collection of values returned by getNetworkloadbalancerForwardingrule.
 */
export interface GetNetworkloadbalancerForwardingruleResult {
    readonly algorithm: string;
    readonly datacenterId: string;
    readonly healthChecks: outputs.GetNetworkloadbalancerForwardingruleHealthCheck[];
    readonly id?: string;
    readonly listenerIp: string;
    readonly listenerPort: number;
    readonly name?: string;
    readonly networkloadbalancerId: string;
    readonly protocol: string;
    readonly targets: outputs.GetNetworkloadbalancerForwardingruleTarget[];
    readonly timeouts?: outputs.GetNetworkloadbalancerForwardingruleTimeouts;
}
export function getNetworkloadbalancerForwardingruleOutput(args: GetNetworkloadbalancerForwardingruleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkloadbalancerForwardingruleResult> {
    return pulumi.output(args).apply((a: any) => getNetworkloadbalancerForwardingrule(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkloadbalancerForwardingrule.
 */
export interface GetNetworkloadbalancerForwardingruleOutputArgs {
    datacenterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkloadbalancerId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetNetworkloadbalancerForwardingruleTimeoutsArgs>;
}
