// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIpblock(args?: GetIpblockArgs, opts?: pulumi.InvokeOptions): Promise<GetIpblockResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getIpblock:getIpblock", {
        "id": args.id,
        "ipConsumers": args.ipConsumers,
        "location": args.location,
        "name": args.name,
        "size": args.size,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpblock.
 */
export interface GetIpblockArgs {
    id?: string;
    ipConsumers?: inputs.GetIpblockIpConsumer[];
    location?: string;
    name?: string;
    size?: number;
    timeouts?: inputs.GetIpblockTimeouts;
}

/**
 * A collection of values returned by getIpblock.
 */
export interface GetIpblockResult {
    readonly id?: string;
    readonly ipConsumers?: outputs.GetIpblockIpConsumer[];
    readonly ips: string[];
    readonly location?: string;
    readonly name?: string;
    readonly size?: number;
    readonly timeouts?: outputs.GetIpblockTimeouts;
}
export function getIpblockOutput(args?: GetIpblockOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpblockResult> {
    return pulumi.output(args).apply((a: any) => getIpblock(a, opts))
}

/**
 * A collection of arguments for invoking getIpblock.
 */
export interface GetIpblockOutputArgs {
    id?: pulumi.Input<string>;
    ipConsumers?: pulumi.Input<pulumi.Input<inputs.GetIpblockIpConsumerArgs>[]>;
    location?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.GetIpblockTimeoutsArgs>;
}
