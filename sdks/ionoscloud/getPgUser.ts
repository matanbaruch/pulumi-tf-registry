// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPgUser(args: GetPgUserArgs, opts?: pulumi.InvokeOptions): Promise<GetPgUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getPgUser:getPgUser", {
        "clusterId": args.clusterId,
        "timeouts": args.timeouts,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPgUser.
 */
export interface GetPgUserArgs {
    clusterId: string;
    timeouts?: inputs.GetPgUserTimeouts;
    username: string;
}

/**
 * A collection of values returned by getPgUser.
 */
export interface GetPgUserResult {
    readonly clusterId: string;
    readonly id: string;
    readonly isSystemUser: boolean;
    readonly timeouts?: outputs.GetPgUserTimeouts;
    readonly username: string;
}
export function getPgUserOutput(args: GetPgUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPgUserResult> {
    return pulumi.output(args).apply((a: any) => getPgUser(a, opts))
}

/**
 * A collection of arguments for invoking getPgUser.
 */
export interface GetPgUserOutputArgs {
    clusterId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetPgUserTimeoutsArgs>;
    username: pulumi.Input<string>;
}
