// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTargetGroup(args?: GetTargetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetTargetGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getTargetGroup:getTargetGroup", {
        "id": args.id,
        "name": args.name,
        "partialMatch": args.partialMatch,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTargetGroup.
 */
export interface GetTargetGroupArgs {
    id?: string;
    name?: string;
    partialMatch?: boolean;
    timeouts?: inputs.GetTargetGroupTimeouts;
}

/**
 * A collection of values returned by getTargetGroup.
 */
export interface GetTargetGroupResult {
    readonly algorithm: string;
    readonly healthChecks: outputs.GetTargetGroupHealthCheck[];
    readonly httpHealthChecks: outputs.GetTargetGroupHttpHealthCheck[];
    readonly id?: string;
    readonly name?: string;
    readonly partialMatch?: boolean;
    readonly protocol: string;
    readonly protocolVersion: string;
    readonly targets: outputs.GetTargetGroupTarget[];
    readonly timeouts?: outputs.GetTargetGroupTimeouts;
}
export function getTargetGroupOutput(args?: GetTargetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTargetGroupResult> {
    return pulumi.output(args).apply((a: any) => getTargetGroup(a, opts))
}

/**
 * A collection of arguments for invoking getTargetGroup.
 */
export interface GetTargetGroupOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    partialMatch?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.GetTargetGroupTimeoutsArgs>;
}
