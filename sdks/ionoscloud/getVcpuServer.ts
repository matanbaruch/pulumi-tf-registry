// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVcpuServer(args: GetVcpuServerArgs, opts?: pulumi.InvokeOptions): Promise<GetVcpuServerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getVcpuServer:getVcpuServer", {
        "datacenterId": args.datacenterId,
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVcpuServer.
 */
export interface GetVcpuServerArgs {
    datacenterId: string;
    id?: string;
    name?: string;
    timeouts?: inputs.GetVcpuServerTimeouts;
}

/**
 * A collection of values returned by getVcpuServer.
 */
export interface GetVcpuServerResult {
    readonly availabilityZone: string;
    readonly bootCdrom: string;
    readonly bootImage: string;
    readonly bootVolume: string;
    readonly cdroms: outputs.GetVcpuServerCdrom[];
    readonly cores: number;
    readonly cpuFamily: string;
    readonly datacenterId: string;
    readonly id?: string;
    readonly labels: outputs.GetVcpuServerLabel[];
    readonly name?: string;
    readonly nics: outputs.GetVcpuServerNic[];
    readonly ram: number;
    readonly timeouts?: outputs.GetVcpuServerTimeouts;
    readonly token: string;
    readonly type: string;
    readonly vmState: string;
    readonly volumes: outputs.GetVcpuServerVolume[];
}
export function getVcpuServerOutput(args: GetVcpuServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVcpuServerResult> {
    return pulumi.output(args).apply((a: any) => getVcpuServer(a, opts))
}

/**
 * A collection of arguments for invoking getVcpuServer.
 */
export interface GetVcpuServerOutputArgs {
    datacenterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetVcpuServerTimeoutsArgs>;
}
