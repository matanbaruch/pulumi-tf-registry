// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGroup(args?: GetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getGroup:getGroup", {
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupArgs {
    id?: string;
    name?: string;
    timeouts?: inputs.GetGroupTimeouts;
}

/**
 * A collection of values returned by getGroup.
 */
export interface GetGroupResult {
    readonly accessActivityLog: boolean;
    readonly accessAndManageCertificates: boolean;
    readonly accessAndManageMonitoring: boolean;
    readonly createBackupUnit: boolean;
    readonly createDatacenter: boolean;
    readonly createFlowLog: boolean;
    readonly createInternetAccess: boolean;
    readonly createK8sCluster: boolean;
    readonly createPcc: boolean;
    readonly createSnapshot: boolean;
    readonly id?: string;
    readonly manageDbaas: boolean;
    readonly name?: string;
    readonly reserveIp: boolean;
    readonly s3Privilege: boolean;
    readonly timeouts?: outputs.GetGroupTimeouts;
    readonly users: outputs.GetGroupUser[];
}
export function getGroupOutput(args?: GetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupResult> {
    return pulumi.output(args).apply((a: any) => getGroup(a, opts))
}

/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetGroupTimeoutsArgs>;
}
