// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class S3ObjectCopy extends pulumi.CustomResource {
    /**
     * Get an existing S3ObjectCopy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: S3ObjectCopyState, opts?: pulumi.CustomResourceOptions): S3ObjectCopy {
        return new S3ObjectCopy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ionoscloud:index/s3ObjectCopy:S3ObjectCopy';

    /**
     * Returns true if the given object is an instance of S3ObjectCopy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is S3ObjectCopy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === S3ObjectCopy.__pulumiType;
    }

    /**
     * The name of the bucket
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * Can be used to specify caching behavior along the request/reply chain
     */
    public readonly cacheControl!: pulumi.Output<string | undefined>;
    /**
     * Specifies presentational information for the object copy
     */
    public readonly contentDisposition!: pulumi.Output<string | undefined>;
    /**
     * Specifies what content encodings have been applied to the object copy and thus what decoding mechanisms must be applied
     * to obtain the media-type referenced by the Content-Type header field
     */
    public readonly contentEncoding!: pulumi.Output<string | undefined>;
    /**
     * The natural language or languages of the intended audience for the object copy
     */
    public readonly contentLanguage!: pulumi.Output<string | undefined>;
    /**
     * A standard MIME type describing the format of the contents
     */
    public readonly contentType!: pulumi.Output<string>;
    /**
     * Copies the object if its entity tag (ETag) matches the specified tag
     */
    public readonly copyIfMatch!: pulumi.Output<string | undefined>;
    /**
     * Copies the object if it has been modified since the specified time
     */
    public readonly copyIfModifiedSince!: pulumi.Output<string | undefined>;
    /**
     * Copies the object if its entity tag (ETag) is different than the specified ETag
     */
    public readonly copyIfNoneMatch!: pulumi.Output<string | undefined>;
    /**
     * Copies the object if it hasn't been modified since the specified time
     */
    public readonly copyIfUnmodifiedSince!: pulumi.Output<string | undefined>;
    /**
     * An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a
     * URL.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * The date and time at which the object copy is no longer cacheable
     */
    public readonly expires!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether to delete the object copy even if it has a governance-type Object Copy Lock in place. You must
     * explicitly pass a value of true for this parameter to delete the object copy.
     */
    public readonly forceDestroy!: pulumi.Output<boolean>;
    /**
     * The key of the object copy
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * The date and time at which the object copy was last modified
     */
    public /*out*/ readonly lastModified!: pulumi.Output<string>;
    /**
     * A map of metadata to store with the object copy in IONOS S3 Object Copy Storage
     */
    public readonly metadata!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request
     */
    public readonly metadataDirective!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether a legal hold will be applied to this object copy.
     */
    public readonly objectLockLegalHold!: pulumi.Output<string | undefined>;
    /**
     * Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this
     * parameter in their requests.
     */
    public readonly objectLockMode!: pulumi.Output<string | undefined>;
    /**
     * The date and time when you want this object copy's Object Copy Lock to expire. Must be formatted as a timestamp
     * parameter.
     */
    public readonly objectLockRetainUntilDate!: pulumi.Output<string | undefined>;
    /**
     * The server-side encryption algorithm used when storing this object copy in IONOS S3 Object Copy Storage (AES256).
     */
    public readonly serverSideEncryption!: pulumi.Output<string | undefined>;
    /**
     * Specifies the algorithm to use to when encrypting the object copy (e.g., AES256).
     */
    public readonly serverSideEncryptionCustomerAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data
     */
    public readonly serverSideEncryptionCustomerKey!: pulumi.Output<string | undefined>;
    /**
     * Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. IONOS S3 Object Copy Storage uses this
     * header for a message integrity check to ensure that the encryption key was transmitted without error
     */
    public readonly serverSideEncryptionCustomerKeyMd5!: pulumi.Output<string | undefined>;
    /**
     * The key of the source object
     */
    public readonly source!: pulumi.Output<string>;
    /**
     * Specifies the algorithm to use to when decrypting the source object (e.g., AES256).
     */
    public readonly sourceCustomerAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * Specifies the 256-bit, base64-encoded encryption key to use to decrypt the source object
     */
    public readonly sourceCustomerKey!: pulumi.Output<string | undefined>;
    /**
     * Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. IONOS S3 Object Copy Storage uses this
     * header for a message integrity check to ensure that the encryption key was transmitted without error
     */
    public readonly sourceCustomerKeyMd5!: pulumi.Output<string | undefined>;
    /**
     * The storage class of the object copy. Valid value is 'STANDARD'.
     */
    public readonly storageClass!: pulumi.Output<string>;
    /**
     * Specifies whether the object copy tag-set is copied from the source object or replaced with tag-set provided in the
     * request
     */
    public readonly taggingDirective!: pulumi.Output<string | undefined>;
    /**
     * The tag-set for the object copy
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The version of the object copy
     */
    public /*out*/ readonly versionId!: pulumi.Output<string>;
    /**
     * If the bucket is configured as a website, redirects requests for this object copy to another object copy in the same
     * bucket or to an external URL. IONOS S3 Object Copy Storage stores the value of this header in the object copy metadata
     */
    public readonly websiteRedirect!: pulumi.Output<string | undefined>;

    /**
     * Create a S3ObjectCopy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: S3ObjectCopyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: S3ObjectCopyArgs | S3ObjectCopyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as S3ObjectCopyState | undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["cacheControl"] = state ? state.cacheControl : undefined;
            resourceInputs["contentDisposition"] = state ? state.contentDisposition : undefined;
            resourceInputs["contentEncoding"] = state ? state.contentEncoding : undefined;
            resourceInputs["contentLanguage"] = state ? state.contentLanguage : undefined;
            resourceInputs["contentType"] = state ? state.contentType : undefined;
            resourceInputs["copyIfMatch"] = state ? state.copyIfMatch : undefined;
            resourceInputs["copyIfModifiedSince"] = state ? state.copyIfModifiedSince : undefined;
            resourceInputs["copyIfNoneMatch"] = state ? state.copyIfNoneMatch : undefined;
            resourceInputs["copyIfUnmodifiedSince"] = state ? state.copyIfUnmodifiedSince : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["expires"] = state ? state.expires : undefined;
            resourceInputs["forceDestroy"] = state ? state.forceDestroy : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["lastModified"] = state ? state.lastModified : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["metadataDirective"] = state ? state.metadataDirective : undefined;
            resourceInputs["objectLockLegalHold"] = state ? state.objectLockLegalHold : undefined;
            resourceInputs["objectLockMode"] = state ? state.objectLockMode : undefined;
            resourceInputs["objectLockRetainUntilDate"] = state ? state.objectLockRetainUntilDate : undefined;
            resourceInputs["serverSideEncryption"] = state ? state.serverSideEncryption : undefined;
            resourceInputs["serverSideEncryptionCustomerAlgorithm"] = state ? state.serverSideEncryptionCustomerAlgorithm : undefined;
            resourceInputs["serverSideEncryptionCustomerKey"] = state ? state.serverSideEncryptionCustomerKey : undefined;
            resourceInputs["serverSideEncryptionCustomerKeyMd5"] = state ? state.serverSideEncryptionCustomerKeyMd5 : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["sourceCustomerAlgorithm"] = state ? state.sourceCustomerAlgorithm : undefined;
            resourceInputs["sourceCustomerKey"] = state ? state.sourceCustomerKey : undefined;
            resourceInputs["sourceCustomerKeyMd5"] = state ? state.sourceCustomerKeyMd5 : undefined;
            resourceInputs["storageClass"] = state ? state.storageClass : undefined;
            resourceInputs["taggingDirective"] = state ? state.taggingDirective : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
            resourceInputs["websiteRedirect"] = state ? state.websiteRedirect : undefined;
        } else {
            const args = argsOrState as S3ObjectCopyArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["cacheControl"] = args ? args.cacheControl : undefined;
            resourceInputs["contentDisposition"] = args ? args.contentDisposition : undefined;
            resourceInputs["contentEncoding"] = args ? args.contentEncoding : undefined;
            resourceInputs["contentLanguage"] = args ? args.contentLanguage : undefined;
            resourceInputs["contentType"] = args ? args.contentType : undefined;
            resourceInputs["copyIfMatch"] = args ? args.copyIfMatch : undefined;
            resourceInputs["copyIfModifiedSince"] = args ? args.copyIfModifiedSince : undefined;
            resourceInputs["copyIfNoneMatch"] = args ? args.copyIfNoneMatch : undefined;
            resourceInputs["copyIfUnmodifiedSince"] = args ? args.copyIfUnmodifiedSince : undefined;
            resourceInputs["expires"] = args ? args.expires : undefined;
            resourceInputs["forceDestroy"] = args ? args.forceDestroy : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["metadataDirective"] = args ? args.metadataDirective : undefined;
            resourceInputs["objectLockLegalHold"] = args ? args.objectLockLegalHold : undefined;
            resourceInputs["objectLockMode"] = args ? args.objectLockMode : undefined;
            resourceInputs["objectLockRetainUntilDate"] = args ? args.objectLockRetainUntilDate : undefined;
            resourceInputs["serverSideEncryption"] = args ? args.serverSideEncryption : undefined;
            resourceInputs["serverSideEncryptionCustomerAlgorithm"] = args ? args.serverSideEncryptionCustomerAlgorithm : undefined;
            resourceInputs["serverSideEncryptionCustomerKey"] = args ? args.serverSideEncryptionCustomerKey : undefined;
            resourceInputs["serverSideEncryptionCustomerKeyMd5"] = args ? args.serverSideEncryptionCustomerKeyMd5 : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["sourceCustomerAlgorithm"] = args ? args.sourceCustomerAlgorithm : undefined;
            resourceInputs["sourceCustomerKey"] = args ? args.sourceCustomerKey : undefined;
            resourceInputs["sourceCustomerKeyMd5"] = args ? args.sourceCustomerKeyMd5 : undefined;
            resourceInputs["storageClass"] = args ? args.storageClass : undefined;
            resourceInputs["taggingDirective"] = args ? args.taggingDirective : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["websiteRedirect"] = args ? args.websiteRedirect : undefined;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["lastModified"] = undefined /*out*/;
            resourceInputs["versionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(S3ObjectCopy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering S3ObjectCopy resources.
 */
export interface S3ObjectCopyState {
    /**
     * The name of the bucket
     */
    bucket?: pulumi.Input<string>;
    /**
     * Can be used to specify caching behavior along the request/reply chain
     */
    cacheControl?: pulumi.Input<string>;
    /**
     * Specifies presentational information for the object copy
     */
    contentDisposition?: pulumi.Input<string>;
    /**
     * Specifies what content encodings have been applied to the object copy and thus what decoding mechanisms must be applied
     * to obtain the media-type referenced by the Content-Type header field
     */
    contentEncoding?: pulumi.Input<string>;
    /**
     * The natural language or languages of the intended audience for the object copy
     */
    contentLanguage?: pulumi.Input<string>;
    /**
     * A standard MIME type describing the format of the contents
     */
    contentType?: pulumi.Input<string>;
    /**
     * Copies the object if its entity tag (ETag) matches the specified tag
     */
    copyIfMatch?: pulumi.Input<string>;
    /**
     * Copies the object if it has been modified since the specified time
     */
    copyIfModifiedSince?: pulumi.Input<string>;
    /**
     * Copies the object if its entity tag (ETag) is different than the specified ETag
     */
    copyIfNoneMatch?: pulumi.Input<string>;
    /**
     * Copies the object if it hasn't been modified since the specified time
     */
    copyIfUnmodifiedSince?: pulumi.Input<string>;
    /**
     * An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a
     * URL.
     */
    etag?: pulumi.Input<string>;
    /**
     * The date and time at which the object copy is no longer cacheable
     */
    expires?: pulumi.Input<string>;
    /**
     * Specifies whether to delete the object copy even if it has a governance-type Object Copy Lock in place. You must
     * explicitly pass a value of true for this parameter to delete the object copy.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * The key of the object copy
     */
    key?: pulumi.Input<string>;
    /**
     * The date and time at which the object copy was last modified
     */
    lastModified?: pulumi.Input<string>;
    /**
     * A map of metadata to store with the object copy in IONOS S3 Object Copy Storage
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request
     */
    metadataDirective?: pulumi.Input<string>;
    /**
     * Specifies whether a legal hold will be applied to this object copy.
     */
    objectLockLegalHold?: pulumi.Input<string>;
    /**
     * Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this
     * parameter in their requests.
     */
    objectLockMode?: pulumi.Input<string>;
    /**
     * The date and time when you want this object copy's Object Copy Lock to expire. Must be formatted as a timestamp
     * parameter.
     */
    objectLockRetainUntilDate?: pulumi.Input<string>;
    /**
     * The server-side encryption algorithm used when storing this object copy in IONOS S3 Object Copy Storage (AES256).
     */
    serverSideEncryption?: pulumi.Input<string>;
    /**
     * Specifies the algorithm to use to when encrypting the object copy (e.g., AES256).
     */
    serverSideEncryptionCustomerAlgorithm?: pulumi.Input<string>;
    /**
     * Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data
     */
    serverSideEncryptionCustomerKey?: pulumi.Input<string>;
    /**
     * Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. IONOS S3 Object Copy Storage uses this
     * header for a message integrity check to ensure that the encryption key was transmitted without error
     */
    serverSideEncryptionCustomerKeyMd5?: pulumi.Input<string>;
    /**
     * The key of the source object
     */
    source?: pulumi.Input<string>;
    /**
     * Specifies the algorithm to use to when decrypting the source object (e.g., AES256).
     */
    sourceCustomerAlgorithm?: pulumi.Input<string>;
    /**
     * Specifies the 256-bit, base64-encoded encryption key to use to decrypt the source object
     */
    sourceCustomerKey?: pulumi.Input<string>;
    /**
     * Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. IONOS S3 Object Copy Storage uses this
     * header for a message integrity check to ensure that the encryption key was transmitted without error
     */
    sourceCustomerKeyMd5?: pulumi.Input<string>;
    /**
     * The storage class of the object copy. Valid value is 'STANDARD'.
     */
    storageClass?: pulumi.Input<string>;
    /**
     * Specifies whether the object copy tag-set is copied from the source object or replaced with tag-set provided in the
     * request
     */
    taggingDirective?: pulumi.Input<string>;
    /**
     * The tag-set for the object copy
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The version of the object copy
     */
    versionId?: pulumi.Input<string>;
    /**
     * If the bucket is configured as a website, redirects requests for this object copy to another object copy in the same
     * bucket or to an external URL. IONOS S3 Object Copy Storage stores the value of this header in the object copy metadata
     */
    websiteRedirect?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a S3ObjectCopy resource.
 */
export interface S3ObjectCopyArgs {
    /**
     * The name of the bucket
     */
    bucket: pulumi.Input<string>;
    /**
     * Can be used to specify caching behavior along the request/reply chain
     */
    cacheControl?: pulumi.Input<string>;
    /**
     * Specifies presentational information for the object copy
     */
    contentDisposition?: pulumi.Input<string>;
    /**
     * Specifies what content encodings have been applied to the object copy and thus what decoding mechanisms must be applied
     * to obtain the media-type referenced by the Content-Type header field
     */
    contentEncoding?: pulumi.Input<string>;
    /**
     * The natural language or languages of the intended audience for the object copy
     */
    contentLanguage?: pulumi.Input<string>;
    /**
     * A standard MIME type describing the format of the contents
     */
    contentType?: pulumi.Input<string>;
    /**
     * Copies the object if its entity tag (ETag) matches the specified tag
     */
    copyIfMatch?: pulumi.Input<string>;
    /**
     * Copies the object if it has been modified since the specified time
     */
    copyIfModifiedSince?: pulumi.Input<string>;
    /**
     * Copies the object if its entity tag (ETag) is different than the specified ETag
     */
    copyIfNoneMatch?: pulumi.Input<string>;
    /**
     * Copies the object if it hasn't been modified since the specified time
     */
    copyIfUnmodifiedSince?: pulumi.Input<string>;
    /**
     * The date and time at which the object copy is no longer cacheable
     */
    expires?: pulumi.Input<string>;
    /**
     * Specifies whether to delete the object copy even if it has a governance-type Object Copy Lock in place. You must
     * explicitly pass a value of true for this parameter to delete the object copy.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * The key of the object copy
     */
    key: pulumi.Input<string>;
    /**
     * A map of metadata to store with the object copy in IONOS S3 Object Copy Storage
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request
     */
    metadataDirective?: pulumi.Input<string>;
    /**
     * Specifies whether a legal hold will be applied to this object copy.
     */
    objectLockLegalHold?: pulumi.Input<string>;
    /**
     * Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this
     * parameter in their requests.
     */
    objectLockMode?: pulumi.Input<string>;
    /**
     * The date and time when you want this object copy's Object Copy Lock to expire. Must be formatted as a timestamp
     * parameter.
     */
    objectLockRetainUntilDate?: pulumi.Input<string>;
    /**
     * The server-side encryption algorithm used when storing this object copy in IONOS S3 Object Copy Storage (AES256).
     */
    serverSideEncryption?: pulumi.Input<string>;
    /**
     * Specifies the algorithm to use to when encrypting the object copy (e.g., AES256).
     */
    serverSideEncryptionCustomerAlgorithm?: pulumi.Input<string>;
    /**
     * Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data
     */
    serverSideEncryptionCustomerKey?: pulumi.Input<string>;
    /**
     * Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. IONOS S3 Object Copy Storage uses this
     * header for a message integrity check to ensure that the encryption key was transmitted without error
     */
    serverSideEncryptionCustomerKeyMd5?: pulumi.Input<string>;
    /**
     * The key of the source object
     */
    source: pulumi.Input<string>;
    /**
     * Specifies the algorithm to use to when decrypting the source object (e.g., AES256).
     */
    sourceCustomerAlgorithm?: pulumi.Input<string>;
    /**
     * Specifies the 256-bit, base64-encoded encryption key to use to decrypt the source object
     */
    sourceCustomerKey?: pulumi.Input<string>;
    /**
     * Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. IONOS S3 Object Copy Storage uses this
     * header for a message integrity check to ensure that the encryption key was transmitted without error
     */
    sourceCustomerKeyMd5?: pulumi.Input<string>;
    /**
     * The storage class of the object copy. Valid value is 'STANDARD'.
     */
    storageClass?: pulumi.Input<string>;
    /**
     * Specifies whether the object copy tag-set is copied from the source object or replaced with tag-set provided in the
     * request
     */
    taggingDirective?: pulumi.Input<string>;
    /**
     * The tag-set for the object copy
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * If the bucket is configured as a website, redirects requests for this object copy to another object copy in the same
     * bucket or to an external URL. IONOS S3 Object Copy Storage stores the value of this header in the object copy metadata
     */
    websiteRedirect?: pulumi.Input<string>;
}
