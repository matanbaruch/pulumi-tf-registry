// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMongoUser(args: GetMongoUserArgs, opts?: pulumi.InvokeOptions): Promise<GetMongoUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getMongoUser:getMongoUser", {
        "clusterId": args.clusterId,
        "database": args.database,
        "id": args.id,
        "roles": args.roles,
        "timeouts": args.timeouts,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMongoUser.
 */
export interface GetMongoUserArgs {
    clusterId: string;
    database?: string;
    id?: string;
    roles?: inputs.GetMongoUserRole[];
    timeouts?: inputs.GetMongoUserTimeouts;
    username: string;
}

/**
 * A collection of values returned by getMongoUser.
 */
export interface GetMongoUserResult {
    readonly clusterId: string;
    readonly database: string;
    readonly id?: string;
    readonly roles?: outputs.GetMongoUserRole[];
    readonly timeouts?: outputs.GetMongoUserTimeouts;
    readonly username: string;
}
export function getMongoUserOutput(args: GetMongoUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMongoUserResult> {
    return pulumi.output(args).apply((a: any) => getMongoUser(a, opts))
}

/**
 * A collection of arguments for invoking getMongoUser.
 */
export interface GetMongoUserOutputArgs {
    clusterId: pulumi.Input<string>;
    database?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    roles?: pulumi.Input<pulumi.Input<inputs.GetMongoUserRoleArgs>[]>;
    timeouts?: pulumi.Input<inputs.GetMongoUserTimeoutsArgs>;
    username: pulumi.Input<string>;
}
