// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIpfailover(args: GetIpfailoverArgs, opts?: pulumi.InvokeOptions): Promise<GetIpfailoverResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getIpfailover:getIpfailover", {
        "datacenterId": args.datacenterId,
        "ip": args.ip,
        "lanId": args.lanId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpfailover.
 */
export interface GetIpfailoverArgs {
    datacenterId: string;
    ip: string;
    lanId: string;
    timeouts?: inputs.GetIpfailoverTimeouts;
}

/**
 * A collection of values returned by getIpfailover.
 */
export interface GetIpfailoverResult {
    readonly datacenterId: string;
    readonly id: string;
    readonly ip: string;
    readonly lanId: string;
    readonly nicuuid: string;
    readonly timeouts?: outputs.GetIpfailoverTimeouts;
}
export function getIpfailoverOutput(args: GetIpfailoverOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpfailoverResult> {
    return pulumi.output(args).apply((a: any) => getIpfailover(a, opts))
}

/**
 * A collection of arguments for invoking getIpfailover.
 */
export interface GetIpfailoverOutputArgs {
    datacenterId: pulumi.Input<string>;
    ip: pulumi.Input<string>;
    lanId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetIpfailoverTimeoutsArgs>;
}
