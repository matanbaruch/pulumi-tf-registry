// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataplatformCluster extends pulumi.CustomResource {
    /**
     * Get an existing DataplatformCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataplatformClusterState, opts?: pulumi.CustomResourceOptions): DataplatformCluster {
        return new DataplatformCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ionoscloud:index/dataplatformCluster:DataplatformCluster';

    /**
     * Returns true if the given object is an instance of DataplatformCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataplatformCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataplatformCluster.__pulumiType;
    }

    /**
     * The UUID of the virtual data center (VDC) in which the cluster is provisioned
     */
    public readonly datacenterId!: pulumi.Output<string>;
    /**
     * A list of LANs you want this node pool to be part of
     */
    public readonly lans!: pulumi.Output<outputs.DataplatformClusterLan[] | undefined>;
    /**
     * Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
     */
    public readonly maintenanceWindows!: pulumi.Output<outputs.DataplatformClusterMaintenanceWindow[] | undefined>;
    /**
     * The name of your cluster. Must be 63 characters or less and must be empty or begin and end with an alphanumeric
     * character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DataplatformClusterTimeouts | undefined>;
    /**
     * The version of the Data Platform.
     */
    public readonly version!: pulumi.Output<string>;

    /**
     * Create a DataplatformCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataplatformClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataplatformClusterArgs | DataplatformClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataplatformClusterState | undefined;
            resourceInputs["datacenterId"] = state ? state.datacenterId : undefined;
            resourceInputs["lans"] = state ? state.lans : undefined;
            resourceInputs["maintenanceWindows"] = state ? state.maintenanceWindows : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as DataplatformClusterArgs | undefined;
            if ((!args || args.datacenterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datacenterId'");
            }
            resourceInputs["datacenterId"] = args ? args.datacenterId : undefined;
            resourceInputs["lans"] = args ? args.lans : undefined;
            resourceInputs["maintenanceWindows"] = args ? args.maintenanceWindows : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataplatformCluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataplatformCluster resources.
 */
export interface DataplatformClusterState {
    /**
     * The UUID of the virtual data center (VDC) in which the cluster is provisioned
     */
    datacenterId?: pulumi.Input<string>;
    /**
     * A list of LANs you want this node pool to be part of
     */
    lans?: pulumi.Input<pulumi.Input<inputs.DataplatformClusterLan>[]>;
    /**
     * Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
     */
    maintenanceWindows?: pulumi.Input<pulumi.Input<inputs.DataplatformClusterMaintenanceWindow>[]>;
    /**
     * The name of your cluster. Must be 63 characters or less and must be empty or begin and end with an alphanumeric
     * character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
     */
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataplatformClusterTimeouts>;
    /**
     * The version of the Data Platform.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataplatformCluster resource.
 */
export interface DataplatformClusterArgs {
    /**
     * The UUID of the virtual data center (VDC) in which the cluster is provisioned
     */
    datacenterId: pulumi.Input<string>;
    /**
     * A list of LANs you want this node pool to be part of
     */
    lans?: pulumi.Input<pulumi.Input<inputs.DataplatformClusterLan>[]>;
    /**
     * Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
     */
    maintenanceWindows?: pulumi.Input<pulumi.Input<inputs.DataplatformClusterMaintenanceWindow>[]>;
    /**
     * The name of your cluster. Must be 63 characters or less and must be empty or begin and end with an alphanumeric
     * character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
     */
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataplatformClusterTimeouts>;
    /**
     * The version of the Data Platform.
     */
    version?: pulumi.Input<string>;
}
