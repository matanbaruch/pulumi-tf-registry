// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirewall(args: GetFirewallArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getFirewall:getFirewall", {
        "datacenterId": args.datacenterId,
        "id": args.id,
        "name": args.name,
        "nicId": args.nicId,
        "serverId": args.serverId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirewall.
 */
export interface GetFirewallArgs {
    datacenterId: string;
    id?: string;
    name?: string;
    nicId: string;
    serverId: string;
    timeouts?: inputs.GetFirewallTimeouts;
}

/**
 * A collection of values returned by getFirewall.
 */
export interface GetFirewallResult {
    readonly datacenterId: string;
    readonly icmpCode: string;
    readonly icmpType: string;
    readonly id?: string;
    readonly name?: string;
    readonly nicId: string;
    readonly portRangeEnd: number;
    readonly portRangeStart: number;
    readonly protocol: string;
    readonly serverId: string;
    readonly sourceIp: string;
    readonly sourceMac: string;
    readonly targetIp: string;
    readonly timeouts?: outputs.GetFirewallTimeouts;
    readonly type: string;
}
export function getFirewallOutput(args: GetFirewallOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallResult> {
    return pulumi.output(args).apply((a: any) => getFirewall(a, opts))
}

/**
 * A collection of arguments for invoking getFirewall.
 */
export interface GetFirewallOutputArgs {
    datacenterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nicId: pulumi.Input<string>;
    serverId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetFirewallTimeoutsArgs>;
}
