// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVolume(args: GetVolumeArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getVolume:getVolume", {
        "datacenterId": args.datacenterId,
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeArgs {
    datacenterId: string;
    id?: string;
    name?: string;
    timeouts?: inputs.GetVolumeTimeouts;
}

/**
 * A collection of values returned by getVolume.
 */
export interface GetVolumeResult {
    readonly availabilityZone: string;
    readonly backupUnitId: string;
    readonly bootServer: string;
    readonly bus: string;
    readonly cpuHotPlug: boolean;
    readonly datacenterId: string;
    readonly deviceNumber: number;
    readonly discVirtioHotPlug: boolean;
    readonly discVirtioHotUnplug: boolean;
    readonly diskType: string;
    readonly id?: string;
    readonly image: string;
    readonly imageAlias: string;
    readonly imagePassword: string;
    readonly licenceType: string;
    readonly name?: string;
    readonly nicHotPlug: boolean;
    readonly nicHotUnplug: boolean;
    readonly ramHotPlug: boolean;
    readonly size: number;
    readonly sshkey: string;
    readonly timeouts?: outputs.GetVolumeTimeouts;
    readonly userData: string;
}
export function getVolumeOutput(args: GetVolumeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVolumeResult> {
    return pulumi.output(args).apply((a: any) => getVolume(a, opts))
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeOutputArgs {
    datacenterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetVolumeTimeoutsArgs>;
}
