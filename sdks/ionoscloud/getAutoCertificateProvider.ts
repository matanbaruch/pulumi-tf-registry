// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAutoCertificateProvider(args: GetAutoCertificateProviderArgs, opts?: pulumi.InvokeOptions): Promise<GetAutoCertificateProviderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getAutoCertificateProvider:getAutoCertificateProvider", {
        "id": args.id,
        "location": args.location,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAutoCertificateProvider.
 */
export interface GetAutoCertificateProviderArgs {
    id?: string;
    location: string;
    name?: string;
    timeouts?: inputs.GetAutoCertificateProviderTimeouts;
}

/**
 * A collection of values returned by getAutoCertificateProvider.
 */
export interface GetAutoCertificateProviderResult {
    readonly email: string;
    readonly externalAccountBindings: outputs.GetAutoCertificateProviderExternalAccountBinding[];
    readonly id?: string;
    readonly location: string;
    readonly name?: string;
    readonly server: string;
    readonly timeouts?: outputs.GetAutoCertificateProviderTimeouts;
}
export function getAutoCertificateProviderOutput(args: GetAutoCertificateProviderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutoCertificateProviderResult> {
    return pulumi.output(args).apply((a: any) => getAutoCertificateProvider(a, opts))
}

/**
 * A collection of arguments for invoking getAutoCertificateProvider.
 */
export interface GetAutoCertificateProviderOutputArgs {
    id?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetAutoCertificateProviderTimeoutsArgs>;
}
