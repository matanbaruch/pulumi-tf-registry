// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetProductsProduct {
    description: string;
    id: string;
    name: string;
    plans: outputs.GetProductsProductPlan[];
}

export interface GetProductsProductPlan {
    id: string;
    memoryGb: number;
    milliCpu: number;
    price: number;
    productId: string;
    regionCode: string;
}

export interface GetServiceResource {
    id: string;
    spec: outputs.GetServiceResourceSpec;
}

export interface GetServiceResourceSpec {
    /**
     * EnableHAReplica defines if a replica will be provisioned for this service.
     */
    enableHaReplica: boolean;
    /**
     * MemoryGB is the memory allocated for this service.
     */
    memoryGb: number;
    /**
     * MilliCPU is the cpu allocated for this service.
     */
    milliCpu: number;
}

export interface GetServiceSpec {
    /**
     * Hostname is the hostname of this service.
     */
    hostname: string;
    /**
     * Hostname of the pooler of this service.
     */
    poolerHostname: string;
    /**
     * Port of the pooler of this service.
     */
    poolerPort: number;
    /**
     * Port is the port assigned to this service.
     */
    port: number;
    /**
     * Username is the Postgres username.
     */
    username: string;
}

export interface GetVpcsVpc {
    cidr: string;
    created: string;
    errorMessage: string;
    id: number;
    name: string;
    peeringConnections: outputs.GetVpcsVpcPeeringConnection[];
    projectId: string;
    provisionedId: string;
    regionCode: string;
    status: string;
    updated: string;
}

export interface GetVpcsVpcPeeringConnection {
    errorMessage: string;
    peerAccountId: string;
    peerCidr: string;
    peerRegionCode: string;
    peerVpcId: string;
    provisionedId: string;
    status: string;
    vpcId: string;
}

export interface ServiceTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: string;
}

export interface VpcsTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: string;
}

