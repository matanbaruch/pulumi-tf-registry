// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CredentialJson extends pulumi.CustomResource {
    /**
     * Get an existing CredentialJson resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CredentialJsonState, opts?: pulumi.CustomResourceOptions): CredentialJson {
        return new CredentialJson(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'boundary:index/credentialJson:CredentialJson';

    /**
     * Returns true if the given object is an instance of CredentialJson.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CredentialJson {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CredentialJson.__pulumiType;
    }

    /**
     * The credential store in which to save this json credential.
     */
    public readonly credentialStoreId!: pulumi.Output<string>;
    /**
     * The description of this json credential.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of this json credential. Defaults to the resource name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The object for the this json credential. Either values encoded with the "jsonencode" function, pre-escaped JSON string,
     * or a file
     */
    public readonly object!: pulumi.Output<string>;
    /**
     * The object hmac.
     */
    public /*out*/ readonly objectHmac!: pulumi.Output<string>;

    /**
     * Create a CredentialJson resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CredentialJsonArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CredentialJsonArgs | CredentialJsonState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CredentialJsonState | undefined;
            resourceInputs["credentialStoreId"] = state ? state.credentialStoreId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["object"] = state ? state.object : undefined;
            resourceInputs["objectHmac"] = state ? state.objectHmac : undefined;
        } else {
            const args = argsOrState as CredentialJsonArgs | undefined;
            if ((!args || args.credentialStoreId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'credentialStoreId'");
            }
            if ((!args || args.object === undefined) && !opts.urn) {
                throw new Error("Missing required property 'object'");
            }
            resourceInputs["credentialStoreId"] = args ? args.credentialStoreId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["object"] = args?.object ? pulumi.secret(args.object) : undefined;
            resourceInputs["objectHmac"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["object"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CredentialJson.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CredentialJson resources.
 */
export interface CredentialJsonState {
    /**
     * The credential store in which to save this json credential.
     */
    credentialStoreId?: pulumi.Input<string>;
    /**
     * The description of this json credential.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of this json credential. Defaults to the resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The object for the this json credential. Either values encoded with the "jsonencode" function, pre-escaped JSON string,
     * or a file
     */
    object?: pulumi.Input<string>;
    /**
     * The object hmac.
     */
    objectHmac?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CredentialJson resource.
 */
export interface CredentialJsonArgs {
    /**
     * The credential store in which to save this json credential.
     */
    credentialStoreId: pulumi.Input<string>;
    /**
     * The description of this json credential.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of this json credential. Defaults to the resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The object for the this json credential. Either values encoded with the "jsonencode" function, pre-escaped JSON string,
     * or a file
     */
    object: pulumi.Input<string>;
}
