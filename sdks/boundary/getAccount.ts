// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAccount(args: GetAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("boundary:index/getAccount:getAccount", {
        "authMethodId": args.authMethodId,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountArgs {
    authMethodId: string;
    name: string;
}

/**
 * A collection of values returned by getAccount.
 */
export interface GetAccountResult {
    readonly authMethodId: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly scopes: outputs.GetAccountScope[];
    readonly type: string;
}
export function getAccountOutput(args: GetAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountResult> {
    return pulumi.output(args).apply((a: any) => getAccount(a, opts))
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountOutputArgs {
    authMethodId: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
