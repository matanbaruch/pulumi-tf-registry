// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class K8sCluster extends pulumi.CustomResource {
    /**
     * Get an existing K8sCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: K8sClusterState, opts?: pulumi.CustomResourceOptions): K8sCluster {
        return new K8sCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volterra:index/k8sCluster:K8sCluster';

    /**
     * Returns true if the given object is an instance of K8sCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is K8sCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === K8sCluster.__pulumiType;
    }

    public readonly annotations!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly clusterScopedAccessDeny!: pulumi.Output<boolean | undefined>;
    public readonly clusterScopedAccessPermit!: pulumi.Output<boolean | undefined>;
    public readonly clusterWideAppLists!: pulumi.Output<outputs.K8sClusterClusterWideAppList[] | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly disable!: pulumi.Output<boolean | undefined>;
    public readonly globalAccessEnable!: pulumi.Output<boolean | undefined>;
    public readonly insecureRegistryLists!: pulumi.Output<outputs.K8sClusterInsecureRegistryList[] | undefined>;
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly localAccessConfigs!: pulumi.Output<outputs.K8sClusterLocalAccessConfig[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly namespace!: pulumi.Output<string>;
    public readonly noClusterWideApps!: pulumi.Output<boolean | undefined>;
    public readonly noGlobalAccess!: pulumi.Output<boolean | undefined>;
    public readonly noInsecureRegistries!: pulumi.Output<boolean | undefined>;
    public readonly noLocalAccess!: pulumi.Output<boolean | undefined>;
    public readonly useCustomClusterRoleBindings!: pulumi.Output<outputs.K8sClusterUseCustomClusterRoleBinding[] | undefined>;
    public readonly useCustomClusterRoleLists!: pulumi.Output<outputs.K8sClusterUseCustomClusterRoleList[] | undefined>;
    public readonly useCustomPodSecurityAdmissions!: pulumi.Output<outputs.K8sClusterUseCustomPodSecurityAdmission[] | undefined>;
    public readonly useCustomPspLists!: pulumi.Output<outputs.K8sClusterUseCustomPspList[] | undefined>;
    public readonly useDefaultClusterRoleBindings!: pulumi.Output<boolean | undefined>;
    public readonly useDefaultClusterRoles!: pulumi.Output<boolean | undefined>;
    public readonly useDefaultPodSecurityAdmission!: pulumi.Output<boolean | undefined>;
    public readonly useDefaultPsp!: pulumi.Output<boolean | undefined>;
    public readonly vk8sNamespaceAccessDeny!: pulumi.Output<boolean | undefined>;
    public readonly vk8sNamespaceAccessPermit!: pulumi.Output<boolean | undefined>;

    /**
     * Create a K8sCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: K8sClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: K8sClusterArgs | K8sClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as K8sClusterState | undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["clusterScopedAccessDeny"] = state ? state.clusterScopedAccessDeny : undefined;
            resourceInputs["clusterScopedAccessPermit"] = state ? state.clusterScopedAccessPermit : undefined;
            resourceInputs["clusterWideAppLists"] = state ? state.clusterWideAppLists : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disable"] = state ? state.disable : undefined;
            resourceInputs["globalAccessEnable"] = state ? state.globalAccessEnable : undefined;
            resourceInputs["insecureRegistryLists"] = state ? state.insecureRegistryLists : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["localAccessConfigs"] = state ? state.localAccessConfigs : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["noClusterWideApps"] = state ? state.noClusterWideApps : undefined;
            resourceInputs["noGlobalAccess"] = state ? state.noGlobalAccess : undefined;
            resourceInputs["noInsecureRegistries"] = state ? state.noInsecureRegistries : undefined;
            resourceInputs["noLocalAccess"] = state ? state.noLocalAccess : undefined;
            resourceInputs["useCustomClusterRoleBindings"] = state ? state.useCustomClusterRoleBindings : undefined;
            resourceInputs["useCustomClusterRoleLists"] = state ? state.useCustomClusterRoleLists : undefined;
            resourceInputs["useCustomPodSecurityAdmissions"] = state ? state.useCustomPodSecurityAdmissions : undefined;
            resourceInputs["useCustomPspLists"] = state ? state.useCustomPspLists : undefined;
            resourceInputs["useDefaultClusterRoleBindings"] = state ? state.useDefaultClusterRoleBindings : undefined;
            resourceInputs["useDefaultClusterRoles"] = state ? state.useDefaultClusterRoles : undefined;
            resourceInputs["useDefaultPodSecurityAdmission"] = state ? state.useDefaultPodSecurityAdmission : undefined;
            resourceInputs["useDefaultPsp"] = state ? state.useDefaultPsp : undefined;
            resourceInputs["vk8sNamespaceAccessDeny"] = state ? state.vk8sNamespaceAccessDeny : undefined;
            resourceInputs["vk8sNamespaceAccessPermit"] = state ? state.vk8sNamespaceAccessPermit : undefined;
        } else {
            const args = argsOrState as K8sClusterArgs | undefined;
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["clusterScopedAccessDeny"] = args ? args.clusterScopedAccessDeny : undefined;
            resourceInputs["clusterScopedAccessPermit"] = args ? args.clusterScopedAccessPermit : undefined;
            resourceInputs["clusterWideAppLists"] = args ? args.clusterWideAppLists : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disable"] = args ? args.disable : undefined;
            resourceInputs["globalAccessEnable"] = args ? args.globalAccessEnable : undefined;
            resourceInputs["insecureRegistryLists"] = args ? args.insecureRegistryLists : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["localAccessConfigs"] = args ? args.localAccessConfigs : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["noClusterWideApps"] = args ? args.noClusterWideApps : undefined;
            resourceInputs["noGlobalAccess"] = args ? args.noGlobalAccess : undefined;
            resourceInputs["noInsecureRegistries"] = args ? args.noInsecureRegistries : undefined;
            resourceInputs["noLocalAccess"] = args ? args.noLocalAccess : undefined;
            resourceInputs["useCustomClusterRoleBindings"] = args ? args.useCustomClusterRoleBindings : undefined;
            resourceInputs["useCustomClusterRoleLists"] = args ? args.useCustomClusterRoleLists : undefined;
            resourceInputs["useCustomPodSecurityAdmissions"] = args ? args.useCustomPodSecurityAdmissions : undefined;
            resourceInputs["useCustomPspLists"] = args ? args.useCustomPspLists : undefined;
            resourceInputs["useDefaultClusterRoleBindings"] = args ? args.useDefaultClusterRoleBindings : undefined;
            resourceInputs["useDefaultClusterRoles"] = args ? args.useDefaultClusterRoles : undefined;
            resourceInputs["useDefaultPodSecurityAdmission"] = args ? args.useDefaultPodSecurityAdmission : undefined;
            resourceInputs["useDefaultPsp"] = args ? args.useDefaultPsp : undefined;
            resourceInputs["vk8sNamespaceAccessDeny"] = args ? args.vk8sNamespaceAccessDeny : undefined;
            resourceInputs["vk8sNamespaceAccessPermit"] = args ? args.vk8sNamespaceAccessPermit : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(K8sCluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering K8sCluster resources.
 */
export interface K8sClusterState {
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    clusterScopedAccessDeny?: pulumi.Input<boolean>;
    clusterScopedAccessPermit?: pulumi.Input<boolean>;
    clusterWideAppLists?: pulumi.Input<pulumi.Input<inputs.K8sClusterClusterWideAppList>[]>;
    description?: pulumi.Input<string>;
    disable?: pulumi.Input<boolean>;
    globalAccessEnable?: pulumi.Input<boolean>;
    insecureRegistryLists?: pulumi.Input<pulumi.Input<inputs.K8sClusterInsecureRegistryList>[]>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    localAccessConfigs?: pulumi.Input<pulumi.Input<inputs.K8sClusterLocalAccessConfig>[]>;
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    noClusterWideApps?: pulumi.Input<boolean>;
    noGlobalAccess?: pulumi.Input<boolean>;
    noInsecureRegistries?: pulumi.Input<boolean>;
    noLocalAccess?: pulumi.Input<boolean>;
    useCustomClusterRoleBindings?: pulumi.Input<pulumi.Input<inputs.K8sClusterUseCustomClusterRoleBinding>[]>;
    useCustomClusterRoleLists?: pulumi.Input<pulumi.Input<inputs.K8sClusterUseCustomClusterRoleList>[]>;
    useCustomPodSecurityAdmissions?: pulumi.Input<pulumi.Input<inputs.K8sClusterUseCustomPodSecurityAdmission>[]>;
    useCustomPspLists?: pulumi.Input<pulumi.Input<inputs.K8sClusterUseCustomPspList>[]>;
    useDefaultClusterRoleBindings?: pulumi.Input<boolean>;
    useDefaultClusterRoles?: pulumi.Input<boolean>;
    useDefaultPodSecurityAdmission?: pulumi.Input<boolean>;
    useDefaultPsp?: pulumi.Input<boolean>;
    vk8sNamespaceAccessDeny?: pulumi.Input<boolean>;
    vk8sNamespaceAccessPermit?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a K8sCluster resource.
 */
export interface K8sClusterArgs {
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    clusterScopedAccessDeny?: pulumi.Input<boolean>;
    clusterScopedAccessPermit?: pulumi.Input<boolean>;
    clusterWideAppLists?: pulumi.Input<pulumi.Input<inputs.K8sClusterClusterWideAppList>[]>;
    description?: pulumi.Input<string>;
    disable?: pulumi.Input<boolean>;
    globalAccessEnable?: pulumi.Input<boolean>;
    insecureRegistryLists?: pulumi.Input<pulumi.Input<inputs.K8sClusterInsecureRegistryList>[]>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    localAccessConfigs?: pulumi.Input<pulumi.Input<inputs.K8sClusterLocalAccessConfig>[]>;
    name?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    noClusterWideApps?: pulumi.Input<boolean>;
    noGlobalAccess?: pulumi.Input<boolean>;
    noInsecureRegistries?: pulumi.Input<boolean>;
    noLocalAccess?: pulumi.Input<boolean>;
    useCustomClusterRoleBindings?: pulumi.Input<pulumi.Input<inputs.K8sClusterUseCustomClusterRoleBinding>[]>;
    useCustomClusterRoleLists?: pulumi.Input<pulumi.Input<inputs.K8sClusterUseCustomClusterRoleList>[]>;
    useCustomPodSecurityAdmissions?: pulumi.Input<pulumi.Input<inputs.K8sClusterUseCustomPodSecurityAdmission>[]>;
    useCustomPspLists?: pulumi.Input<pulumi.Input<inputs.K8sClusterUseCustomPspList>[]>;
    useDefaultClusterRoleBindings?: pulumi.Input<boolean>;
    useDefaultClusterRoles?: pulumi.Input<boolean>;
    useDefaultPodSecurityAdmission?: pulumi.Input<boolean>;
    useDefaultPsp?: pulumi.Input<boolean>;
    vk8sNamespaceAccessDeny?: pulumi.Input<boolean>;
    vk8sNamespaceAccessPermit?: pulumi.Input<boolean>;
}
