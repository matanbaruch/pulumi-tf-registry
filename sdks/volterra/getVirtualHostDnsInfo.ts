// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVirtualHostDnsInfo(args: GetVirtualHostDnsInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualHostDnsInfoResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volterra:index/getVirtualHostDnsInfo:getVirtualHostDnsInfo", {
        "id": args.id,
        "name": args.name,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVirtualHostDnsInfo.
 */
export interface GetVirtualHostDnsInfoArgs {
    id?: string;
    name: string;
    namespace: string;
}

/**
 * A collection of values returned by getVirtualHostDnsInfo.
 */
export interface GetVirtualHostDnsInfoResult {
    readonly dnsInfos: outputs.GetVirtualHostDnsInfoDnsInfo[];
    readonly hostName: string;
    readonly id: string;
    readonly name: string;
    readonly namespace: string;
}
export function getVirtualHostDnsInfoOutput(args: GetVirtualHostDnsInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVirtualHostDnsInfoResult> {
    return pulumi.output(args).apply((a: any) => getVirtualHostDnsInfo(a, opts))
}

/**
 * A collection of arguments for invoking getVirtualHostDnsInfo.
 */
export interface GetVirtualHostDnsInfoOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
}
