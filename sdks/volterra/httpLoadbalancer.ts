// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class HttpLoadbalancer extends pulumi.CustomResource {
    /**
     * Get an existing HttpLoadbalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HttpLoadbalancerState, opts?: pulumi.CustomResourceOptions): HttpLoadbalancer {
        return new HttpLoadbalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volterra:index/httpLoadbalancer:HttpLoadbalancer';

    /**
     * Returns true if the given object is an instance of HttpLoadbalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HttpLoadbalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HttpLoadbalancer.__pulumiType;
    }

    public readonly activeServicePolicies!: pulumi.Output<outputs.HttpLoadbalancerActiveServicePolicy[] | undefined>;
    public readonly addLocation!: pulumi.Output<boolean | undefined>;
    public readonly advertiseCustoms!: pulumi.Output<outputs.HttpLoadbalancerAdvertiseCustom[] | undefined>;
    public readonly advertiseOnPublicDefaultVip!: pulumi.Output<boolean | undefined>;
    public readonly advertiseOnPublics!: pulumi.Output<outputs.HttpLoadbalancerAdvertiseOnPublic[] | undefined>;
    public readonly annotations!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly apiDefinition!: pulumi.Output<outputs.HttpLoadbalancerApiDefinition[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly apiDefinitions!: pulumi.Output<outputs.HttpLoadbalancerApiDefinition[] | undefined>;
    public readonly apiProtectionRules!: pulumi.Output<outputs.HttpLoadbalancerApiProtectionRule[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly apiRateLimitLegacies!: pulumi.Output<outputs.HttpLoadbalancerApiRateLimitLegacy[] | undefined>;
    public readonly apiRateLimits!: pulumi.Output<outputs.HttpLoadbalancerApiRateLimit[] | undefined>;
    public readonly apiSpecifications!: pulumi.Output<outputs.HttpLoadbalancerApiSpecification[] | undefined>;
    public readonly appFirewalls!: pulumi.Output<outputs.HttpLoadbalancerAppFirewall[] | undefined>;
    public readonly blockedClients!: pulumi.Output<outputs.HttpLoadbalancerBlockedClient[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly botDefenseAdvanceds!: pulumi.Output<outputs.HttpLoadbalancerBotDefenseAdvanced[] | undefined>;
    public readonly botDefenses!: pulumi.Output<outputs.HttpLoadbalancerBotDefense[] | undefined>;
    public readonly captchaChallenges!: pulumi.Output<outputs.HttpLoadbalancerCaptchaChallenge[] | undefined>;
    public readonly clientSideDefenses!: pulumi.Output<outputs.HttpLoadbalancerClientSideDefense[] | undefined>;
    public /*out*/ readonly cname!: pulumi.Output<string>;
    public readonly cookieStickinesses!: pulumi.Output<outputs.HttpLoadbalancerCookieStickiness[] | undefined>;
    public readonly corsPolicies!: pulumi.Output<outputs.HttpLoadbalancerCorsPolicy[] | undefined>;
    public readonly csrfPolicies!: pulumi.Output<outputs.HttpLoadbalancerCsrfPolicy[] | undefined>;
    public readonly dataGuardRules!: pulumi.Output<outputs.HttpLoadbalancerDataGuardRule[] | undefined>;
    public readonly ddosMitigationRules!: pulumi.Output<outputs.HttpLoadbalancerDdosMitigationRule[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly defaultPoolLists!: pulumi.Output<outputs.HttpLoadbalancerDefaultPoolList[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly defaultPools!: pulumi.Output<outputs.HttpLoadbalancerDefaultPool[] | undefined>;
    public readonly defaultRoutePools!: pulumi.Output<outputs.HttpLoadbalancerDefaultRoutePool[] | undefined>;
    public readonly defaultSensitiveDataPolicy!: pulumi.Output<boolean | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly disable!: pulumi.Output<boolean | undefined>;
    public readonly disableApiDefinition!: pulumi.Output<boolean | undefined>;
    public readonly disableApiDiscovery!: pulumi.Output<boolean | undefined>;
    public readonly disableBotDefense!: pulumi.Output<boolean | undefined>;
    public readonly disableClientSideDefense!: pulumi.Output<boolean | undefined>;
    public readonly disableIpReputation!: pulumi.Output<boolean | undefined>;
    public readonly disableMaliciousUserDetection!: pulumi.Output<boolean | undefined>;
    public readonly disableRateLimit!: pulumi.Output<boolean | undefined>;
    public readonly disableThreatMesh!: pulumi.Output<boolean | undefined>;
    public readonly disableTrustClientIpHeaders!: pulumi.Output<boolean | undefined>;
    public readonly disableWaf!: pulumi.Output<boolean | undefined>;
    public readonly doNotAdvertise!: pulumi.Output<boolean | undefined>;
    public readonly domains!: pulumi.Output<string[]>;
    public readonly enableApiDiscoveries!: pulumi.Output<outputs.HttpLoadbalancerEnableApiDiscovery[] | undefined>;
    public readonly enableChallenges!: pulumi.Output<outputs.HttpLoadbalancerEnableChallenge[] | undefined>;
    public readonly enableIpReputations!: pulumi.Output<outputs.HttpLoadbalancerEnableIpReputation[] | undefined>;
    public readonly enableMaliciousUserDetection!: pulumi.Output<boolean | undefined>;
    public readonly enableThreatMesh!: pulumi.Output<boolean | undefined>;
    public readonly enableTrustClientIpHeaders!: pulumi.Output<outputs.HttpLoadbalancerEnableTrustClientIpHeader[] | undefined>;
    public readonly graphqlRules!: pulumi.Output<outputs.HttpLoadbalancerGraphqlRule[] | undefined>;
    public readonly http!: pulumi.Output<outputs.HttpLoadbalancerHttp[] | undefined>;
    public readonly https!: pulumi.Output<outputs.HttpLoadbalancerHttp[] | undefined>;
    public readonly httpsAutoCerts!: pulumi.Output<outputs.HttpLoadbalancerHttpsAutoCert[] | undefined>;
    public readonly jsChallenges!: pulumi.Output<outputs.HttpLoadbalancerJsChallenge[] | undefined>;
    public readonly jwtValidations!: pulumi.Output<outputs.HttpLoadbalancerJwtValidation[] | undefined>;
    public readonly l7DdosActionBlock!: pulumi.Output<boolean | undefined>;
    public readonly l7DdosActionDefault!: pulumi.Output<boolean | undefined>;
    public readonly l7DdosActionJsChallenges!: pulumi.Output<outputs.HttpLoadbalancerL7DdosActionJsChallenge[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly l7DdosActionNone!: pulumi.Output<boolean | undefined>;
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly leastActive!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly maliciousUserMitigations!: pulumi.Output<outputs.HttpLoadbalancerMaliciousUserMitigation[] | undefined>;
    public readonly moreOptions!: pulumi.Output<outputs.HttpLoadbalancerMoreOption[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly multiLbApp!: pulumi.Output<boolean | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly namespace!: pulumi.Output<string>;
    public readonly noChallenge!: pulumi.Output<boolean | undefined>;
    public readonly noServicePolicies!: pulumi.Output<boolean | undefined>;
    public readonly originServerSubsetRuleLists!: pulumi.Output<outputs.HttpLoadbalancerOriginServerSubsetRuleList[] | undefined>;
    public readonly policyBasedChallenges!: pulumi.Output<outputs.HttpLoadbalancerPolicyBasedChallenge[] | undefined>;
    public readonly protectedCookies!: pulumi.Output<outputs.HttpLoadbalancerProtectedCooky[] | undefined>;
    public readonly random!: pulumi.Output<boolean | undefined>;
    public readonly rateLimits!: pulumi.Output<outputs.HttpLoadbalancerRateLimit[] | undefined>;
    public readonly ringHashes!: pulumi.Output<outputs.HttpLoadbalancerRingHash[] | undefined>;
    public readonly roundRobin!: pulumi.Output<boolean | undefined>;
    public readonly routes!: pulumi.Output<outputs.HttpLoadbalancerRoute[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly sensitiveDataDisclosureRules!: pulumi.Output<outputs.HttpLoadbalancerSensitiveDataDisclosureRule[] | undefined>;
    public readonly sensitiveDataPolicies!: pulumi.Output<outputs.HttpLoadbalancerSensitiveDataPolicy[] | undefined>;
    public readonly servicePoliciesFromNamespace!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly singleLbApps!: pulumi.Output<outputs.HttpLoadbalancerSingleLbApp[] | undefined>;
    public readonly slowDdosMitigations!: pulumi.Output<outputs.HttpLoadbalancerSlowDdosMitigation[] | undefined>;
    public readonly sourceIpStickiness!: pulumi.Output<boolean | undefined>;
    public readonly systemDefaultTimeouts!: pulumi.Output<boolean | undefined>;
    public readonly trustedClients!: pulumi.Output<outputs.HttpLoadbalancerTrustedClient[] | undefined>;
    public readonly userIdClientIp!: pulumi.Output<boolean | undefined>;
    public readonly userIdentifications!: pulumi.Output<outputs.HttpLoadbalancerUserIdentification[] | undefined>;
    public readonly wafExclusionRules!: pulumi.Output<outputs.HttpLoadbalancerWafExclusionRule[] | undefined>;

    /**
     * Create a HttpLoadbalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HttpLoadbalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HttpLoadbalancerArgs | HttpLoadbalancerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HttpLoadbalancerState | undefined;
            resourceInputs["activeServicePolicies"] = state ? state.activeServicePolicies : undefined;
            resourceInputs["addLocation"] = state ? state.addLocation : undefined;
            resourceInputs["advertiseCustoms"] = state ? state.advertiseCustoms : undefined;
            resourceInputs["advertiseOnPublicDefaultVip"] = state ? state.advertiseOnPublicDefaultVip : undefined;
            resourceInputs["advertiseOnPublics"] = state ? state.advertiseOnPublics : undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["apiDefinition"] = state ? state.apiDefinition : undefined;
            resourceInputs["apiDefinitions"] = state ? state.apiDefinitions : undefined;
            resourceInputs["apiProtectionRules"] = state ? state.apiProtectionRules : undefined;
            resourceInputs["apiRateLimitLegacies"] = state ? state.apiRateLimitLegacies : undefined;
            resourceInputs["apiRateLimits"] = state ? state.apiRateLimits : undefined;
            resourceInputs["apiSpecifications"] = state ? state.apiSpecifications : undefined;
            resourceInputs["appFirewalls"] = state ? state.appFirewalls : undefined;
            resourceInputs["blockedClients"] = state ? state.blockedClients : undefined;
            resourceInputs["botDefenseAdvanceds"] = state ? state.botDefenseAdvanceds : undefined;
            resourceInputs["botDefenses"] = state ? state.botDefenses : undefined;
            resourceInputs["captchaChallenges"] = state ? state.captchaChallenges : undefined;
            resourceInputs["clientSideDefenses"] = state ? state.clientSideDefenses : undefined;
            resourceInputs["cname"] = state ? state.cname : undefined;
            resourceInputs["cookieStickinesses"] = state ? state.cookieStickinesses : undefined;
            resourceInputs["corsPolicies"] = state ? state.corsPolicies : undefined;
            resourceInputs["csrfPolicies"] = state ? state.csrfPolicies : undefined;
            resourceInputs["dataGuardRules"] = state ? state.dataGuardRules : undefined;
            resourceInputs["ddosMitigationRules"] = state ? state.ddosMitigationRules : undefined;
            resourceInputs["defaultPoolLists"] = state ? state.defaultPoolLists : undefined;
            resourceInputs["defaultPools"] = state ? state.defaultPools : undefined;
            resourceInputs["defaultRoutePools"] = state ? state.defaultRoutePools : undefined;
            resourceInputs["defaultSensitiveDataPolicy"] = state ? state.defaultSensitiveDataPolicy : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disable"] = state ? state.disable : undefined;
            resourceInputs["disableApiDefinition"] = state ? state.disableApiDefinition : undefined;
            resourceInputs["disableApiDiscovery"] = state ? state.disableApiDiscovery : undefined;
            resourceInputs["disableBotDefense"] = state ? state.disableBotDefense : undefined;
            resourceInputs["disableClientSideDefense"] = state ? state.disableClientSideDefense : undefined;
            resourceInputs["disableIpReputation"] = state ? state.disableIpReputation : undefined;
            resourceInputs["disableMaliciousUserDetection"] = state ? state.disableMaliciousUserDetection : undefined;
            resourceInputs["disableRateLimit"] = state ? state.disableRateLimit : undefined;
            resourceInputs["disableThreatMesh"] = state ? state.disableThreatMesh : undefined;
            resourceInputs["disableTrustClientIpHeaders"] = state ? state.disableTrustClientIpHeaders : undefined;
            resourceInputs["disableWaf"] = state ? state.disableWaf : undefined;
            resourceInputs["doNotAdvertise"] = state ? state.doNotAdvertise : undefined;
            resourceInputs["domains"] = state ? state.domains : undefined;
            resourceInputs["enableApiDiscoveries"] = state ? state.enableApiDiscoveries : undefined;
            resourceInputs["enableChallenges"] = state ? state.enableChallenges : undefined;
            resourceInputs["enableIpReputations"] = state ? state.enableIpReputations : undefined;
            resourceInputs["enableMaliciousUserDetection"] = state ? state.enableMaliciousUserDetection : undefined;
            resourceInputs["enableThreatMesh"] = state ? state.enableThreatMesh : undefined;
            resourceInputs["enableTrustClientIpHeaders"] = state ? state.enableTrustClientIpHeaders : undefined;
            resourceInputs["graphqlRules"] = state ? state.graphqlRules : undefined;
            resourceInputs["http"] = state ? state.http : undefined;
            resourceInputs["https"] = state ? state.https : undefined;
            resourceInputs["httpsAutoCerts"] = state ? state.httpsAutoCerts : undefined;
            resourceInputs["jsChallenges"] = state ? state.jsChallenges : undefined;
            resourceInputs["jwtValidations"] = state ? state.jwtValidations : undefined;
            resourceInputs["l7DdosActionBlock"] = state ? state.l7DdosActionBlock : undefined;
            resourceInputs["l7DdosActionDefault"] = state ? state.l7DdosActionDefault : undefined;
            resourceInputs["l7DdosActionJsChallenges"] = state ? state.l7DdosActionJsChallenges : undefined;
            resourceInputs["l7DdosActionNone"] = state ? state.l7DdosActionNone : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["leastActive"] = state ? state.leastActive : undefined;
            resourceInputs["maliciousUserMitigations"] = state ? state.maliciousUserMitigations : undefined;
            resourceInputs["moreOptions"] = state ? state.moreOptions : undefined;
            resourceInputs["multiLbApp"] = state ? state.multiLbApp : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["noChallenge"] = state ? state.noChallenge : undefined;
            resourceInputs["noServicePolicies"] = state ? state.noServicePolicies : undefined;
            resourceInputs["originServerSubsetRuleLists"] = state ? state.originServerSubsetRuleLists : undefined;
            resourceInputs["policyBasedChallenges"] = state ? state.policyBasedChallenges : undefined;
            resourceInputs["protectedCookies"] = state ? state.protectedCookies : undefined;
            resourceInputs["random"] = state ? state.random : undefined;
            resourceInputs["rateLimits"] = state ? state.rateLimits : undefined;
            resourceInputs["ringHashes"] = state ? state.ringHashes : undefined;
            resourceInputs["roundRobin"] = state ? state.roundRobin : undefined;
            resourceInputs["routes"] = state ? state.routes : undefined;
            resourceInputs["sensitiveDataDisclosureRules"] = state ? state.sensitiveDataDisclosureRules : undefined;
            resourceInputs["sensitiveDataPolicies"] = state ? state.sensitiveDataPolicies : undefined;
            resourceInputs["servicePoliciesFromNamespace"] = state ? state.servicePoliciesFromNamespace : undefined;
            resourceInputs["singleLbApps"] = state ? state.singleLbApps : undefined;
            resourceInputs["slowDdosMitigations"] = state ? state.slowDdosMitigations : undefined;
            resourceInputs["sourceIpStickiness"] = state ? state.sourceIpStickiness : undefined;
            resourceInputs["systemDefaultTimeouts"] = state ? state.systemDefaultTimeouts : undefined;
            resourceInputs["trustedClients"] = state ? state.trustedClients : undefined;
            resourceInputs["userIdClientIp"] = state ? state.userIdClientIp : undefined;
            resourceInputs["userIdentifications"] = state ? state.userIdentifications : undefined;
            resourceInputs["wafExclusionRules"] = state ? state.wafExclusionRules : undefined;
        } else {
            const args = argsOrState as HttpLoadbalancerArgs | undefined;
            if ((!args || args.domains === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domains'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["activeServicePolicies"] = args ? args.activeServicePolicies : undefined;
            resourceInputs["addLocation"] = args ? args.addLocation : undefined;
            resourceInputs["advertiseCustoms"] = args ? args.advertiseCustoms : undefined;
            resourceInputs["advertiseOnPublicDefaultVip"] = args ? args.advertiseOnPublicDefaultVip : undefined;
            resourceInputs["advertiseOnPublics"] = args ? args.advertiseOnPublics : undefined;
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["apiDefinition"] = args ? args.apiDefinition : undefined;
            resourceInputs["apiDefinitions"] = args ? args.apiDefinitions : undefined;
            resourceInputs["apiProtectionRules"] = args ? args.apiProtectionRules : undefined;
            resourceInputs["apiRateLimitLegacies"] = args ? args.apiRateLimitLegacies : undefined;
            resourceInputs["apiRateLimits"] = args ? args.apiRateLimits : undefined;
            resourceInputs["apiSpecifications"] = args ? args.apiSpecifications : undefined;
            resourceInputs["appFirewalls"] = args ? args.appFirewalls : undefined;
            resourceInputs["blockedClients"] = args ? args.blockedClients : undefined;
            resourceInputs["botDefenseAdvanceds"] = args ? args.botDefenseAdvanceds : undefined;
            resourceInputs["botDefenses"] = args ? args.botDefenses : undefined;
            resourceInputs["captchaChallenges"] = args ? args.captchaChallenges : undefined;
            resourceInputs["clientSideDefenses"] = args ? args.clientSideDefenses : undefined;
            resourceInputs["cookieStickinesses"] = args ? args.cookieStickinesses : undefined;
            resourceInputs["corsPolicies"] = args ? args.corsPolicies : undefined;
            resourceInputs["csrfPolicies"] = args ? args.csrfPolicies : undefined;
            resourceInputs["dataGuardRules"] = args ? args.dataGuardRules : undefined;
            resourceInputs["ddosMitigationRules"] = args ? args.ddosMitigationRules : undefined;
            resourceInputs["defaultPoolLists"] = args ? args.defaultPoolLists : undefined;
            resourceInputs["defaultPools"] = args ? args.defaultPools : undefined;
            resourceInputs["defaultRoutePools"] = args ? args.defaultRoutePools : undefined;
            resourceInputs["defaultSensitiveDataPolicy"] = args ? args.defaultSensitiveDataPolicy : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disable"] = args ? args.disable : undefined;
            resourceInputs["disableApiDefinition"] = args ? args.disableApiDefinition : undefined;
            resourceInputs["disableApiDiscovery"] = args ? args.disableApiDiscovery : undefined;
            resourceInputs["disableBotDefense"] = args ? args.disableBotDefense : undefined;
            resourceInputs["disableClientSideDefense"] = args ? args.disableClientSideDefense : undefined;
            resourceInputs["disableIpReputation"] = args ? args.disableIpReputation : undefined;
            resourceInputs["disableMaliciousUserDetection"] = args ? args.disableMaliciousUserDetection : undefined;
            resourceInputs["disableRateLimit"] = args ? args.disableRateLimit : undefined;
            resourceInputs["disableThreatMesh"] = args ? args.disableThreatMesh : undefined;
            resourceInputs["disableTrustClientIpHeaders"] = args ? args.disableTrustClientIpHeaders : undefined;
            resourceInputs["disableWaf"] = args ? args.disableWaf : undefined;
            resourceInputs["doNotAdvertise"] = args ? args.doNotAdvertise : undefined;
            resourceInputs["domains"] = args ? args.domains : undefined;
            resourceInputs["enableApiDiscoveries"] = args ? args.enableApiDiscoveries : undefined;
            resourceInputs["enableChallenges"] = args ? args.enableChallenges : undefined;
            resourceInputs["enableIpReputations"] = args ? args.enableIpReputations : undefined;
            resourceInputs["enableMaliciousUserDetection"] = args ? args.enableMaliciousUserDetection : undefined;
            resourceInputs["enableThreatMesh"] = args ? args.enableThreatMesh : undefined;
            resourceInputs["enableTrustClientIpHeaders"] = args ? args.enableTrustClientIpHeaders : undefined;
            resourceInputs["graphqlRules"] = args ? args.graphqlRules : undefined;
            resourceInputs["http"] = args ? args.http : undefined;
            resourceInputs["https"] = args ? args.https : undefined;
            resourceInputs["httpsAutoCerts"] = args ? args.httpsAutoCerts : undefined;
            resourceInputs["jsChallenges"] = args ? args.jsChallenges : undefined;
            resourceInputs["jwtValidations"] = args ? args.jwtValidations : undefined;
            resourceInputs["l7DdosActionBlock"] = args ? args.l7DdosActionBlock : undefined;
            resourceInputs["l7DdosActionDefault"] = args ? args.l7DdosActionDefault : undefined;
            resourceInputs["l7DdosActionJsChallenges"] = args ? args.l7DdosActionJsChallenges : undefined;
            resourceInputs["l7DdosActionNone"] = args ? args.l7DdosActionNone : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["leastActive"] = args ? args.leastActive : undefined;
            resourceInputs["maliciousUserMitigations"] = args ? args.maliciousUserMitigations : undefined;
            resourceInputs["moreOptions"] = args ? args.moreOptions : undefined;
            resourceInputs["multiLbApp"] = args ? args.multiLbApp : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["noChallenge"] = args ? args.noChallenge : undefined;
            resourceInputs["noServicePolicies"] = args ? args.noServicePolicies : undefined;
            resourceInputs["originServerSubsetRuleLists"] = args ? args.originServerSubsetRuleLists : undefined;
            resourceInputs["policyBasedChallenges"] = args ? args.policyBasedChallenges : undefined;
            resourceInputs["protectedCookies"] = args ? args.protectedCookies : undefined;
            resourceInputs["random"] = args ? args.random : undefined;
            resourceInputs["rateLimits"] = args ? args.rateLimits : undefined;
            resourceInputs["ringHashes"] = args ? args.ringHashes : undefined;
            resourceInputs["roundRobin"] = args ? args.roundRobin : undefined;
            resourceInputs["routes"] = args ? args.routes : undefined;
            resourceInputs["sensitiveDataDisclosureRules"] = args ? args.sensitiveDataDisclosureRules : undefined;
            resourceInputs["sensitiveDataPolicies"] = args ? args.sensitiveDataPolicies : undefined;
            resourceInputs["servicePoliciesFromNamespace"] = args ? args.servicePoliciesFromNamespace : undefined;
            resourceInputs["singleLbApps"] = args ? args.singleLbApps : undefined;
            resourceInputs["slowDdosMitigations"] = args ? args.slowDdosMitigations : undefined;
            resourceInputs["sourceIpStickiness"] = args ? args.sourceIpStickiness : undefined;
            resourceInputs["systemDefaultTimeouts"] = args ? args.systemDefaultTimeouts : undefined;
            resourceInputs["trustedClients"] = args ? args.trustedClients : undefined;
            resourceInputs["userIdClientIp"] = args ? args.userIdClientIp : undefined;
            resourceInputs["userIdentifications"] = args ? args.userIdentifications : undefined;
            resourceInputs["wafExclusionRules"] = args ? args.wafExclusionRules : undefined;
            resourceInputs["cname"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HttpLoadbalancer.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering HttpLoadbalancer resources.
 */
export interface HttpLoadbalancerState {
    activeServicePolicies?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerActiveServicePolicy>[]>;
    addLocation?: pulumi.Input<boolean>;
    advertiseCustoms?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerAdvertiseCustom>[]>;
    advertiseOnPublicDefaultVip?: pulumi.Input<boolean>;
    advertiseOnPublics?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerAdvertiseOnPublic>[]>;
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Deprecated
     */
    apiDefinition?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerApiDefinition>[]>;
    /**
     * @deprecated Deprecated
     */
    apiDefinitions?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerApiDefinition>[]>;
    apiProtectionRules?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerApiProtectionRule>[]>;
    /**
     * @deprecated Deprecated
     */
    apiRateLimitLegacies?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerApiRateLimitLegacy>[]>;
    apiRateLimits?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerApiRateLimit>[]>;
    apiSpecifications?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerApiSpecification>[]>;
    appFirewalls?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerAppFirewall>[]>;
    blockedClients?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerBlockedClient>[]>;
    /**
     * @deprecated Deprecated
     */
    botDefenseAdvanceds?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerBotDefenseAdvanced>[]>;
    botDefenses?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerBotDefense>[]>;
    captchaChallenges?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerCaptchaChallenge>[]>;
    clientSideDefenses?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerClientSideDefense>[]>;
    cname?: pulumi.Input<string>;
    cookieStickinesses?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerCookieStickiness>[]>;
    corsPolicies?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerCorsPolicy>[]>;
    csrfPolicies?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerCsrfPolicy>[]>;
    dataGuardRules?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerDataGuardRule>[]>;
    ddosMitigationRules?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerDdosMitigationRule>[]>;
    /**
     * @deprecated Deprecated
     */
    defaultPoolLists?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerDefaultPoolList>[]>;
    /**
     * @deprecated Deprecated
     */
    defaultPools?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerDefaultPool>[]>;
    defaultRoutePools?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerDefaultRoutePool>[]>;
    defaultSensitiveDataPolicy?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    disable?: pulumi.Input<boolean>;
    disableApiDefinition?: pulumi.Input<boolean>;
    disableApiDiscovery?: pulumi.Input<boolean>;
    disableBotDefense?: pulumi.Input<boolean>;
    disableClientSideDefense?: pulumi.Input<boolean>;
    disableIpReputation?: pulumi.Input<boolean>;
    disableMaliciousUserDetection?: pulumi.Input<boolean>;
    disableRateLimit?: pulumi.Input<boolean>;
    disableThreatMesh?: pulumi.Input<boolean>;
    disableTrustClientIpHeaders?: pulumi.Input<boolean>;
    disableWaf?: pulumi.Input<boolean>;
    doNotAdvertise?: pulumi.Input<boolean>;
    domains?: pulumi.Input<pulumi.Input<string>[]>;
    enableApiDiscoveries?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerEnableApiDiscovery>[]>;
    enableChallenges?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerEnableChallenge>[]>;
    enableIpReputations?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerEnableIpReputation>[]>;
    enableMaliciousUserDetection?: pulumi.Input<boolean>;
    enableThreatMesh?: pulumi.Input<boolean>;
    enableTrustClientIpHeaders?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerEnableTrustClientIpHeader>[]>;
    graphqlRules?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerGraphqlRule>[]>;
    http?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerHttp>[]>;
    https?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerHttp>[]>;
    httpsAutoCerts?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerHttpsAutoCert>[]>;
    jsChallenges?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerJsChallenge>[]>;
    jwtValidations?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerJwtValidation>[]>;
    l7DdosActionBlock?: pulumi.Input<boolean>;
    l7DdosActionDefault?: pulumi.Input<boolean>;
    l7DdosActionJsChallenges?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerL7DdosActionJsChallenge>[]>;
    /**
     * @deprecated Deprecated
     */
    l7DdosActionNone?: pulumi.Input<boolean>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    leastActive?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    maliciousUserMitigations?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerMaliciousUserMitigation>[]>;
    moreOptions?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerMoreOption>[]>;
    /**
     * @deprecated Deprecated
     */
    multiLbApp?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    noChallenge?: pulumi.Input<boolean>;
    noServicePolicies?: pulumi.Input<boolean>;
    originServerSubsetRuleLists?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerOriginServerSubsetRuleList>[]>;
    policyBasedChallenges?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerPolicyBasedChallenge>[]>;
    protectedCookies?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerProtectedCooky>[]>;
    random?: pulumi.Input<boolean>;
    rateLimits?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerRateLimit>[]>;
    ringHashes?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerRingHash>[]>;
    roundRobin?: pulumi.Input<boolean>;
    routes?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerRoute>[]>;
    /**
     * @deprecated Deprecated
     */
    sensitiveDataDisclosureRules?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerSensitiveDataDisclosureRule>[]>;
    sensitiveDataPolicies?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerSensitiveDataPolicy>[]>;
    servicePoliciesFromNamespace?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    singleLbApps?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerSingleLbApp>[]>;
    slowDdosMitigations?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerSlowDdosMitigation>[]>;
    sourceIpStickiness?: pulumi.Input<boolean>;
    systemDefaultTimeouts?: pulumi.Input<boolean>;
    trustedClients?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerTrustedClient>[]>;
    userIdClientIp?: pulumi.Input<boolean>;
    userIdentifications?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerUserIdentification>[]>;
    wafExclusionRules?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerWafExclusionRule>[]>;
}

/**
 * The set of arguments for constructing a HttpLoadbalancer resource.
 */
export interface HttpLoadbalancerArgs {
    activeServicePolicies?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerActiveServicePolicy>[]>;
    addLocation?: pulumi.Input<boolean>;
    advertiseCustoms?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerAdvertiseCustom>[]>;
    advertiseOnPublicDefaultVip?: pulumi.Input<boolean>;
    advertiseOnPublics?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerAdvertiseOnPublic>[]>;
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Deprecated
     */
    apiDefinition?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerApiDefinition>[]>;
    /**
     * @deprecated Deprecated
     */
    apiDefinitions?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerApiDefinition>[]>;
    apiProtectionRules?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerApiProtectionRule>[]>;
    /**
     * @deprecated Deprecated
     */
    apiRateLimitLegacies?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerApiRateLimitLegacy>[]>;
    apiRateLimits?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerApiRateLimit>[]>;
    apiSpecifications?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerApiSpecification>[]>;
    appFirewalls?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerAppFirewall>[]>;
    blockedClients?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerBlockedClient>[]>;
    /**
     * @deprecated Deprecated
     */
    botDefenseAdvanceds?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerBotDefenseAdvanced>[]>;
    botDefenses?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerBotDefense>[]>;
    captchaChallenges?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerCaptchaChallenge>[]>;
    clientSideDefenses?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerClientSideDefense>[]>;
    cookieStickinesses?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerCookieStickiness>[]>;
    corsPolicies?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerCorsPolicy>[]>;
    csrfPolicies?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerCsrfPolicy>[]>;
    dataGuardRules?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerDataGuardRule>[]>;
    ddosMitigationRules?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerDdosMitigationRule>[]>;
    /**
     * @deprecated Deprecated
     */
    defaultPoolLists?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerDefaultPoolList>[]>;
    /**
     * @deprecated Deprecated
     */
    defaultPools?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerDefaultPool>[]>;
    defaultRoutePools?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerDefaultRoutePool>[]>;
    defaultSensitiveDataPolicy?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    disable?: pulumi.Input<boolean>;
    disableApiDefinition?: pulumi.Input<boolean>;
    disableApiDiscovery?: pulumi.Input<boolean>;
    disableBotDefense?: pulumi.Input<boolean>;
    disableClientSideDefense?: pulumi.Input<boolean>;
    disableIpReputation?: pulumi.Input<boolean>;
    disableMaliciousUserDetection?: pulumi.Input<boolean>;
    disableRateLimit?: pulumi.Input<boolean>;
    disableThreatMesh?: pulumi.Input<boolean>;
    disableTrustClientIpHeaders?: pulumi.Input<boolean>;
    disableWaf?: pulumi.Input<boolean>;
    doNotAdvertise?: pulumi.Input<boolean>;
    domains: pulumi.Input<pulumi.Input<string>[]>;
    enableApiDiscoveries?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerEnableApiDiscovery>[]>;
    enableChallenges?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerEnableChallenge>[]>;
    enableIpReputations?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerEnableIpReputation>[]>;
    enableMaliciousUserDetection?: pulumi.Input<boolean>;
    enableThreatMesh?: pulumi.Input<boolean>;
    enableTrustClientIpHeaders?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerEnableTrustClientIpHeader>[]>;
    graphqlRules?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerGraphqlRule>[]>;
    http?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerHttp>[]>;
    https?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerHttp>[]>;
    httpsAutoCerts?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerHttpsAutoCert>[]>;
    jsChallenges?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerJsChallenge>[]>;
    jwtValidations?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerJwtValidation>[]>;
    l7DdosActionBlock?: pulumi.Input<boolean>;
    l7DdosActionDefault?: pulumi.Input<boolean>;
    l7DdosActionJsChallenges?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerL7DdosActionJsChallenge>[]>;
    /**
     * @deprecated Deprecated
     */
    l7DdosActionNone?: pulumi.Input<boolean>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    leastActive?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    maliciousUserMitigations?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerMaliciousUserMitigation>[]>;
    moreOptions?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerMoreOption>[]>;
    /**
     * @deprecated Deprecated
     */
    multiLbApp?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    noChallenge?: pulumi.Input<boolean>;
    noServicePolicies?: pulumi.Input<boolean>;
    originServerSubsetRuleLists?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerOriginServerSubsetRuleList>[]>;
    policyBasedChallenges?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerPolicyBasedChallenge>[]>;
    protectedCookies?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerProtectedCooky>[]>;
    random?: pulumi.Input<boolean>;
    rateLimits?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerRateLimit>[]>;
    ringHashes?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerRingHash>[]>;
    roundRobin?: pulumi.Input<boolean>;
    routes?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerRoute>[]>;
    /**
     * @deprecated Deprecated
     */
    sensitiveDataDisclosureRules?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerSensitiveDataDisclosureRule>[]>;
    sensitiveDataPolicies?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerSensitiveDataPolicy>[]>;
    servicePoliciesFromNamespace?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    singleLbApps?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerSingleLbApp>[]>;
    slowDdosMitigations?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerSlowDdosMitigation>[]>;
    sourceIpStickiness?: pulumi.Input<boolean>;
    systemDefaultTimeouts?: pulumi.Input<boolean>;
    trustedClients?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerTrustedClient>[]>;
    userIdClientIp?: pulumi.Input<boolean>;
    userIdentifications?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerUserIdentification>[]>;
    wafExclusionRules?: pulumi.Input<pulumi.Input<inputs.HttpLoadbalancerWafExclusionRule>[]>;
}
