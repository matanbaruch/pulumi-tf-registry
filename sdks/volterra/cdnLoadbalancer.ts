// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CdnLoadbalancer extends pulumi.CustomResource {
    /**
     * Get an existing CdnLoadbalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CdnLoadbalancerState, opts?: pulumi.CustomResourceOptions): CdnLoadbalancer {
        return new CdnLoadbalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volterra:index/cdnLoadbalancer:CdnLoadbalancer';

    /**
     * Returns true if the given object is an instance of CdnLoadbalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CdnLoadbalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CdnLoadbalancer.__pulumiType;
    }

    public readonly activeServicePolicies!: pulumi.Output<outputs.CdnLoadbalancerActiveServicePolicy[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly addLocation!: pulumi.Output<boolean | undefined>;
    public readonly annotations!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly apiDiscoveryOnCacheMisses!: pulumi.Output<outputs.CdnLoadbalancerApiDiscoveryOnCacheMiss[] | undefined>;
    public readonly apiProtectionRules!: pulumi.Output<outputs.CdnLoadbalancerApiProtectionRule[] | undefined>;
    public readonly apiRateLimits!: pulumi.Output<outputs.CdnLoadbalancerApiRateLimit[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly apiSpecificationOnCacheMisses!: pulumi.Output<outputs.CdnLoadbalancerApiSpecificationOnCacheMiss[] | undefined>;
    public readonly apiSpecifications!: pulumi.Output<outputs.CdnLoadbalancerApiSpecification[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly appFirewallOnCacheMisses!: pulumi.Output<outputs.CdnLoadbalancerAppFirewallOnCacheMiss[] | undefined>;
    public readonly appFirewalls!: pulumi.Output<outputs.CdnLoadbalancerAppFirewall[] | undefined>;
    public readonly blockedClients!: pulumi.Output<outputs.CdnLoadbalancerBlockedClient[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly botDefenseAdvanceds!: pulumi.Output<outputs.CdnLoadbalancerBotDefenseAdvanced[] | undefined>;
    public readonly botDefenses!: pulumi.Output<outputs.CdnLoadbalancerBotDefense[] | undefined>;
    public readonly cacheRules!: pulumi.Output<outputs.CdnLoadbalancerCacheRule[] | undefined>;
    public readonly captchaChallenges!: pulumi.Output<outputs.CdnLoadbalancerCaptchaChallenge[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly challengeOnCacheMisses!: pulumi.Output<outputs.CdnLoadbalancerChallengeOnCacheMiss[] | undefined>;
    public readonly clientSideDefenses!: pulumi.Output<outputs.CdnLoadbalancerClientSideDefense[] | undefined>;
    public readonly corsPolicies!: pulumi.Output<outputs.CdnLoadbalancerCorsPolicy[] | undefined>;
    public readonly csrfPolicies!: pulumi.Output<outputs.CdnLoadbalancerCsrfPolicy[] | undefined>;
    public readonly dataGuardRules!: pulumi.Output<outputs.CdnLoadbalancerDataGuardRule[] | undefined>;
    public readonly ddosMitigationRules!: pulumi.Output<outputs.CdnLoadbalancerDdosMitigationRule[] | undefined>;
    public readonly defaultCacheActions!: pulumi.Output<outputs.CdnLoadbalancerDefaultCacheAction[] | undefined>;
    public readonly defaultSensitiveDataPolicy!: pulumi.Output<boolean | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly disable!: pulumi.Output<boolean | undefined>;
    public readonly disableApiDefinition!: pulumi.Output<boolean | undefined>;
    public readonly disableApiDiscovery!: pulumi.Output<boolean | undefined>;
    public readonly disableBotDefense!: pulumi.Output<boolean | undefined>;
    public readonly disableClientSideDefense!: pulumi.Output<boolean | undefined>;
    public readonly disableIpReputation!: pulumi.Output<boolean | undefined>;
    public readonly disableMaliciousUserDetection!: pulumi.Output<boolean | undefined>;
    public readonly disableRateLimit!: pulumi.Output<boolean | undefined>;
    public readonly disableThreatMesh!: pulumi.Output<boolean | undefined>;
    public readonly disableWaf!: pulumi.Output<boolean | undefined>;
    public readonly domains!: pulumi.Output<string[]>;
    public readonly enableApiDiscoveries!: pulumi.Output<outputs.CdnLoadbalancerEnableApiDiscovery[] | undefined>;
    public readonly enableChallenges!: pulumi.Output<outputs.CdnLoadbalancerEnableChallenge[] | undefined>;
    public readonly enableIpReputations!: pulumi.Output<outputs.CdnLoadbalancerEnableIpReputation[] | undefined>;
    public readonly enableMaliciousUserDetection!: pulumi.Output<boolean | undefined>;
    public readonly enableThreatMesh!: pulumi.Output<boolean | undefined>;
    public readonly graphqlRules!: pulumi.Output<outputs.CdnLoadbalancerGraphqlRule[] | undefined>;
    public readonly http!: pulumi.Output<outputs.CdnLoadbalancerHttp[] | undefined>;
    public readonly https!: pulumi.Output<outputs.CdnLoadbalancerHttp[] | undefined>;
    public readonly httpsAutoCerts!: pulumi.Output<outputs.CdnLoadbalancerHttpsAutoCert[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly ipReputationOnCacheMisses!: pulumi.Output<outputs.CdnLoadbalancerIpReputationOnCacheMiss[] | undefined>;
    public readonly jsChallenges!: pulumi.Output<outputs.CdnLoadbalancerJsChallenge[] | undefined>;
    public readonly jwtValidations!: pulumi.Output<outputs.CdnLoadbalancerJwtValidation[] | undefined>;
    public readonly l7DdosActionBlock!: pulumi.Output<boolean | undefined>;
    public readonly l7DdosActionDefault!: pulumi.Output<boolean | undefined>;
    public readonly l7DdosActionJsChallenges!: pulumi.Output<outputs.CdnLoadbalancerL7DdosActionJsChallenge[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly l7DdosActionNone!: pulumi.Output<boolean | undefined>;
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly maliciousUserDetectionOnCacheMiss!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly moreOptions!: pulumi.Output<outputs.CdnLoadbalancerMoreOption[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly namespace!: pulumi.Output<string>;
    public readonly noChallenge!: pulumi.Output<boolean | undefined>;
    public readonly noServicePolicies!: pulumi.Output<boolean | undefined>;
    public readonly originPools!: pulumi.Output<outputs.CdnLoadbalancerOriginPool[]>;
    public readonly otherSettings!: pulumi.Output<outputs.CdnLoadbalancerOtherSetting[] | undefined>;
    public readonly policyBasedChallenges!: pulumi.Output<outputs.CdnLoadbalancerPolicyBasedChallenge[] | undefined>;
    public readonly protectedCookies!: pulumi.Output<outputs.CdnLoadbalancerProtectedCooky[] | undefined>;
    public readonly rateLimits!: pulumi.Output<outputs.CdnLoadbalancerRateLimit[] | undefined>;
    public readonly sensitiveDataPolicies!: pulumi.Output<outputs.CdnLoadbalancerSensitiveDataPolicy[] | undefined>;
    public readonly servicePoliciesFromNamespace!: pulumi.Output<boolean | undefined>;
    public readonly slowDdosMitigations!: pulumi.Output<outputs.CdnLoadbalancerSlowDdosMitigation[] | undefined>;
    public readonly systemDefaultTimeouts!: pulumi.Output<boolean | undefined>;
    public readonly trustedClients!: pulumi.Output<outputs.CdnLoadbalancerTrustedClient[] | undefined>;
    public readonly userIdClientIp!: pulumi.Output<boolean | undefined>;
    public readonly userIdentifications!: pulumi.Output<outputs.CdnLoadbalancerUserIdentification[] | undefined>;
    public readonly wafExclusionRules!: pulumi.Output<outputs.CdnLoadbalancerWafExclusionRule[] | undefined>;

    /**
     * Create a CdnLoadbalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CdnLoadbalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CdnLoadbalancerArgs | CdnLoadbalancerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CdnLoadbalancerState | undefined;
            resourceInputs["activeServicePolicies"] = state ? state.activeServicePolicies : undefined;
            resourceInputs["addLocation"] = state ? state.addLocation : undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["apiDiscoveryOnCacheMisses"] = state ? state.apiDiscoveryOnCacheMisses : undefined;
            resourceInputs["apiProtectionRules"] = state ? state.apiProtectionRules : undefined;
            resourceInputs["apiRateLimits"] = state ? state.apiRateLimits : undefined;
            resourceInputs["apiSpecificationOnCacheMisses"] = state ? state.apiSpecificationOnCacheMisses : undefined;
            resourceInputs["apiSpecifications"] = state ? state.apiSpecifications : undefined;
            resourceInputs["appFirewallOnCacheMisses"] = state ? state.appFirewallOnCacheMisses : undefined;
            resourceInputs["appFirewalls"] = state ? state.appFirewalls : undefined;
            resourceInputs["blockedClients"] = state ? state.blockedClients : undefined;
            resourceInputs["botDefenseAdvanceds"] = state ? state.botDefenseAdvanceds : undefined;
            resourceInputs["botDefenses"] = state ? state.botDefenses : undefined;
            resourceInputs["cacheRules"] = state ? state.cacheRules : undefined;
            resourceInputs["captchaChallenges"] = state ? state.captchaChallenges : undefined;
            resourceInputs["challengeOnCacheMisses"] = state ? state.challengeOnCacheMisses : undefined;
            resourceInputs["clientSideDefenses"] = state ? state.clientSideDefenses : undefined;
            resourceInputs["corsPolicies"] = state ? state.corsPolicies : undefined;
            resourceInputs["csrfPolicies"] = state ? state.csrfPolicies : undefined;
            resourceInputs["dataGuardRules"] = state ? state.dataGuardRules : undefined;
            resourceInputs["ddosMitigationRules"] = state ? state.ddosMitigationRules : undefined;
            resourceInputs["defaultCacheActions"] = state ? state.defaultCacheActions : undefined;
            resourceInputs["defaultSensitiveDataPolicy"] = state ? state.defaultSensitiveDataPolicy : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disable"] = state ? state.disable : undefined;
            resourceInputs["disableApiDefinition"] = state ? state.disableApiDefinition : undefined;
            resourceInputs["disableApiDiscovery"] = state ? state.disableApiDiscovery : undefined;
            resourceInputs["disableBotDefense"] = state ? state.disableBotDefense : undefined;
            resourceInputs["disableClientSideDefense"] = state ? state.disableClientSideDefense : undefined;
            resourceInputs["disableIpReputation"] = state ? state.disableIpReputation : undefined;
            resourceInputs["disableMaliciousUserDetection"] = state ? state.disableMaliciousUserDetection : undefined;
            resourceInputs["disableRateLimit"] = state ? state.disableRateLimit : undefined;
            resourceInputs["disableThreatMesh"] = state ? state.disableThreatMesh : undefined;
            resourceInputs["disableWaf"] = state ? state.disableWaf : undefined;
            resourceInputs["domains"] = state ? state.domains : undefined;
            resourceInputs["enableApiDiscoveries"] = state ? state.enableApiDiscoveries : undefined;
            resourceInputs["enableChallenges"] = state ? state.enableChallenges : undefined;
            resourceInputs["enableIpReputations"] = state ? state.enableIpReputations : undefined;
            resourceInputs["enableMaliciousUserDetection"] = state ? state.enableMaliciousUserDetection : undefined;
            resourceInputs["enableThreatMesh"] = state ? state.enableThreatMesh : undefined;
            resourceInputs["graphqlRules"] = state ? state.graphqlRules : undefined;
            resourceInputs["http"] = state ? state.http : undefined;
            resourceInputs["https"] = state ? state.https : undefined;
            resourceInputs["httpsAutoCerts"] = state ? state.httpsAutoCerts : undefined;
            resourceInputs["ipReputationOnCacheMisses"] = state ? state.ipReputationOnCacheMisses : undefined;
            resourceInputs["jsChallenges"] = state ? state.jsChallenges : undefined;
            resourceInputs["jwtValidations"] = state ? state.jwtValidations : undefined;
            resourceInputs["l7DdosActionBlock"] = state ? state.l7DdosActionBlock : undefined;
            resourceInputs["l7DdosActionDefault"] = state ? state.l7DdosActionDefault : undefined;
            resourceInputs["l7DdosActionJsChallenges"] = state ? state.l7DdosActionJsChallenges : undefined;
            resourceInputs["l7DdosActionNone"] = state ? state.l7DdosActionNone : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["maliciousUserDetectionOnCacheMiss"] = state ? state.maliciousUserDetectionOnCacheMiss : undefined;
            resourceInputs["moreOptions"] = state ? state.moreOptions : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["noChallenge"] = state ? state.noChallenge : undefined;
            resourceInputs["noServicePolicies"] = state ? state.noServicePolicies : undefined;
            resourceInputs["originPools"] = state ? state.originPools : undefined;
            resourceInputs["otherSettings"] = state ? state.otherSettings : undefined;
            resourceInputs["policyBasedChallenges"] = state ? state.policyBasedChallenges : undefined;
            resourceInputs["protectedCookies"] = state ? state.protectedCookies : undefined;
            resourceInputs["rateLimits"] = state ? state.rateLimits : undefined;
            resourceInputs["sensitiveDataPolicies"] = state ? state.sensitiveDataPolicies : undefined;
            resourceInputs["servicePoliciesFromNamespace"] = state ? state.servicePoliciesFromNamespace : undefined;
            resourceInputs["slowDdosMitigations"] = state ? state.slowDdosMitigations : undefined;
            resourceInputs["systemDefaultTimeouts"] = state ? state.systemDefaultTimeouts : undefined;
            resourceInputs["trustedClients"] = state ? state.trustedClients : undefined;
            resourceInputs["userIdClientIp"] = state ? state.userIdClientIp : undefined;
            resourceInputs["userIdentifications"] = state ? state.userIdentifications : undefined;
            resourceInputs["wafExclusionRules"] = state ? state.wafExclusionRules : undefined;
        } else {
            const args = argsOrState as CdnLoadbalancerArgs | undefined;
            if ((!args || args.domains === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domains'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if ((!args || args.originPools === undefined) && !opts.urn) {
                throw new Error("Missing required property 'originPools'");
            }
            resourceInputs["activeServicePolicies"] = args ? args.activeServicePolicies : undefined;
            resourceInputs["addLocation"] = args ? args.addLocation : undefined;
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["apiDiscoveryOnCacheMisses"] = args ? args.apiDiscoveryOnCacheMisses : undefined;
            resourceInputs["apiProtectionRules"] = args ? args.apiProtectionRules : undefined;
            resourceInputs["apiRateLimits"] = args ? args.apiRateLimits : undefined;
            resourceInputs["apiSpecificationOnCacheMisses"] = args ? args.apiSpecificationOnCacheMisses : undefined;
            resourceInputs["apiSpecifications"] = args ? args.apiSpecifications : undefined;
            resourceInputs["appFirewallOnCacheMisses"] = args ? args.appFirewallOnCacheMisses : undefined;
            resourceInputs["appFirewalls"] = args ? args.appFirewalls : undefined;
            resourceInputs["blockedClients"] = args ? args.blockedClients : undefined;
            resourceInputs["botDefenseAdvanceds"] = args ? args.botDefenseAdvanceds : undefined;
            resourceInputs["botDefenses"] = args ? args.botDefenses : undefined;
            resourceInputs["cacheRules"] = args ? args.cacheRules : undefined;
            resourceInputs["captchaChallenges"] = args ? args.captchaChallenges : undefined;
            resourceInputs["challengeOnCacheMisses"] = args ? args.challengeOnCacheMisses : undefined;
            resourceInputs["clientSideDefenses"] = args ? args.clientSideDefenses : undefined;
            resourceInputs["corsPolicies"] = args ? args.corsPolicies : undefined;
            resourceInputs["csrfPolicies"] = args ? args.csrfPolicies : undefined;
            resourceInputs["dataGuardRules"] = args ? args.dataGuardRules : undefined;
            resourceInputs["ddosMitigationRules"] = args ? args.ddosMitigationRules : undefined;
            resourceInputs["defaultCacheActions"] = args ? args.defaultCacheActions : undefined;
            resourceInputs["defaultSensitiveDataPolicy"] = args ? args.defaultSensitiveDataPolicy : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disable"] = args ? args.disable : undefined;
            resourceInputs["disableApiDefinition"] = args ? args.disableApiDefinition : undefined;
            resourceInputs["disableApiDiscovery"] = args ? args.disableApiDiscovery : undefined;
            resourceInputs["disableBotDefense"] = args ? args.disableBotDefense : undefined;
            resourceInputs["disableClientSideDefense"] = args ? args.disableClientSideDefense : undefined;
            resourceInputs["disableIpReputation"] = args ? args.disableIpReputation : undefined;
            resourceInputs["disableMaliciousUserDetection"] = args ? args.disableMaliciousUserDetection : undefined;
            resourceInputs["disableRateLimit"] = args ? args.disableRateLimit : undefined;
            resourceInputs["disableThreatMesh"] = args ? args.disableThreatMesh : undefined;
            resourceInputs["disableWaf"] = args ? args.disableWaf : undefined;
            resourceInputs["domains"] = args ? args.domains : undefined;
            resourceInputs["enableApiDiscoveries"] = args ? args.enableApiDiscoveries : undefined;
            resourceInputs["enableChallenges"] = args ? args.enableChallenges : undefined;
            resourceInputs["enableIpReputations"] = args ? args.enableIpReputations : undefined;
            resourceInputs["enableMaliciousUserDetection"] = args ? args.enableMaliciousUserDetection : undefined;
            resourceInputs["enableThreatMesh"] = args ? args.enableThreatMesh : undefined;
            resourceInputs["graphqlRules"] = args ? args.graphqlRules : undefined;
            resourceInputs["http"] = args ? args.http : undefined;
            resourceInputs["https"] = args ? args.https : undefined;
            resourceInputs["httpsAutoCerts"] = args ? args.httpsAutoCerts : undefined;
            resourceInputs["ipReputationOnCacheMisses"] = args ? args.ipReputationOnCacheMisses : undefined;
            resourceInputs["jsChallenges"] = args ? args.jsChallenges : undefined;
            resourceInputs["jwtValidations"] = args ? args.jwtValidations : undefined;
            resourceInputs["l7DdosActionBlock"] = args ? args.l7DdosActionBlock : undefined;
            resourceInputs["l7DdosActionDefault"] = args ? args.l7DdosActionDefault : undefined;
            resourceInputs["l7DdosActionJsChallenges"] = args ? args.l7DdosActionJsChallenges : undefined;
            resourceInputs["l7DdosActionNone"] = args ? args.l7DdosActionNone : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["maliciousUserDetectionOnCacheMiss"] = args ? args.maliciousUserDetectionOnCacheMiss : undefined;
            resourceInputs["moreOptions"] = args ? args.moreOptions : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["noChallenge"] = args ? args.noChallenge : undefined;
            resourceInputs["noServicePolicies"] = args ? args.noServicePolicies : undefined;
            resourceInputs["originPools"] = args ? args.originPools : undefined;
            resourceInputs["otherSettings"] = args ? args.otherSettings : undefined;
            resourceInputs["policyBasedChallenges"] = args ? args.policyBasedChallenges : undefined;
            resourceInputs["protectedCookies"] = args ? args.protectedCookies : undefined;
            resourceInputs["rateLimits"] = args ? args.rateLimits : undefined;
            resourceInputs["sensitiveDataPolicies"] = args ? args.sensitiveDataPolicies : undefined;
            resourceInputs["servicePoliciesFromNamespace"] = args ? args.servicePoliciesFromNamespace : undefined;
            resourceInputs["slowDdosMitigations"] = args ? args.slowDdosMitigations : undefined;
            resourceInputs["systemDefaultTimeouts"] = args ? args.systemDefaultTimeouts : undefined;
            resourceInputs["trustedClients"] = args ? args.trustedClients : undefined;
            resourceInputs["userIdClientIp"] = args ? args.userIdClientIp : undefined;
            resourceInputs["userIdentifications"] = args ? args.userIdentifications : undefined;
            resourceInputs["wafExclusionRules"] = args ? args.wafExclusionRules : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CdnLoadbalancer.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CdnLoadbalancer resources.
 */
export interface CdnLoadbalancerState {
    activeServicePolicies?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerActiveServicePolicy>[]>;
    /**
     * @deprecated Deprecated
     */
    addLocation?: pulumi.Input<boolean>;
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Deprecated
     */
    apiDiscoveryOnCacheMisses?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerApiDiscoveryOnCacheMiss>[]>;
    apiProtectionRules?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerApiProtectionRule>[]>;
    apiRateLimits?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerApiRateLimit>[]>;
    /**
     * @deprecated Deprecated
     */
    apiSpecificationOnCacheMisses?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerApiSpecificationOnCacheMiss>[]>;
    apiSpecifications?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerApiSpecification>[]>;
    /**
     * @deprecated Deprecated
     */
    appFirewallOnCacheMisses?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerAppFirewallOnCacheMiss>[]>;
    appFirewalls?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerAppFirewall>[]>;
    blockedClients?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerBlockedClient>[]>;
    /**
     * @deprecated Deprecated
     */
    botDefenseAdvanceds?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerBotDefenseAdvanced>[]>;
    botDefenses?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerBotDefense>[]>;
    cacheRules?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerCacheRule>[]>;
    captchaChallenges?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerCaptchaChallenge>[]>;
    /**
     * @deprecated Deprecated
     */
    challengeOnCacheMisses?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerChallengeOnCacheMiss>[]>;
    clientSideDefenses?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerClientSideDefense>[]>;
    corsPolicies?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerCorsPolicy>[]>;
    csrfPolicies?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerCsrfPolicy>[]>;
    dataGuardRules?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerDataGuardRule>[]>;
    ddosMitigationRules?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerDdosMitigationRule>[]>;
    defaultCacheActions?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerDefaultCacheAction>[]>;
    defaultSensitiveDataPolicy?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    disable?: pulumi.Input<boolean>;
    disableApiDefinition?: pulumi.Input<boolean>;
    disableApiDiscovery?: pulumi.Input<boolean>;
    disableBotDefense?: pulumi.Input<boolean>;
    disableClientSideDefense?: pulumi.Input<boolean>;
    disableIpReputation?: pulumi.Input<boolean>;
    disableMaliciousUserDetection?: pulumi.Input<boolean>;
    disableRateLimit?: pulumi.Input<boolean>;
    disableThreatMesh?: pulumi.Input<boolean>;
    disableWaf?: pulumi.Input<boolean>;
    domains?: pulumi.Input<pulumi.Input<string>[]>;
    enableApiDiscoveries?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerEnableApiDiscovery>[]>;
    enableChallenges?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerEnableChallenge>[]>;
    enableIpReputations?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerEnableIpReputation>[]>;
    enableMaliciousUserDetection?: pulumi.Input<boolean>;
    enableThreatMesh?: pulumi.Input<boolean>;
    graphqlRules?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerGraphqlRule>[]>;
    http?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerHttp>[]>;
    https?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerHttp>[]>;
    httpsAutoCerts?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerHttpsAutoCert>[]>;
    /**
     * @deprecated Deprecated
     */
    ipReputationOnCacheMisses?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerIpReputationOnCacheMiss>[]>;
    jsChallenges?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerJsChallenge>[]>;
    jwtValidations?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerJwtValidation>[]>;
    l7DdosActionBlock?: pulumi.Input<boolean>;
    l7DdosActionDefault?: pulumi.Input<boolean>;
    l7DdosActionJsChallenges?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerL7DdosActionJsChallenge>[]>;
    /**
     * @deprecated Deprecated
     */
    l7DdosActionNone?: pulumi.Input<boolean>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Deprecated
     */
    maliciousUserDetectionOnCacheMiss?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    moreOptions?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerMoreOption>[]>;
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    noChallenge?: pulumi.Input<boolean>;
    noServicePolicies?: pulumi.Input<boolean>;
    originPools?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerOriginPool>[]>;
    otherSettings?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerOtherSetting>[]>;
    policyBasedChallenges?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerPolicyBasedChallenge>[]>;
    protectedCookies?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerProtectedCooky>[]>;
    rateLimits?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerRateLimit>[]>;
    sensitiveDataPolicies?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerSensitiveDataPolicy>[]>;
    servicePoliciesFromNamespace?: pulumi.Input<boolean>;
    slowDdosMitigations?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerSlowDdosMitigation>[]>;
    systemDefaultTimeouts?: pulumi.Input<boolean>;
    trustedClients?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerTrustedClient>[]>;
    userIdClientIp?: pulumi.Input<boolean>;
    userIdentifications?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerUserIdentification>[]>;
    wafExclusionRules?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerWafExclusionRule>[]>;
}

/**
 * The set of arguments for constructing a CdnLoadbalancer resource.
 */
export interface CdnLoadbalancerArgs {
    activeServicePolicies?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerActiveServicePolicy>[]>;
    /**
     * @deprecated Deprecated
     */
    addLocation?: pulumi.Input<boolean>;
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Deprecated
     */
    apiDiscoveryOnCacheMisses?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerApiDiscoveryOnCacheMiss>[]>;
    apiProtectionRules?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerApiProtectionRule>[]>;
    apiRateLimits?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerApiRateLimit>[]>;
    /**
     * @deprecated Deprecated
     */
    apiSpecificationOnCacheMisses?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerApiSpecificationOnCacheMiss>[]>;
    apiSpecifications?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerApiSpecification>[]>;
    /**
     * @deprecated Deprecated
     */
    appFirewallOnCacheMisses?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerAppFirewallOnCacheMiss>[]>;
    appFirewalls?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerAppFirewall>[]>;
    blockedClients?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerBlockedClient>[]>;
    /**
     * @deprecated Deprecated
     */
    botDefenseAdvanceds?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerBotDefenseAdvanced>[]>;
    botDefenses?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerBotDefense>[]>;
    cacheRules?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerCacheRule>[]>;
    captchaChallenges?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerCaptchaChallenge>[]>;
    /**
     * @deprecated Deprecated
     */
    challengeOnCacheMisses?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerChallengeOnCacheMiss>[]>;
    clientSideDefenses?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerClientSideDefense>[]>;
    corsPolicies?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerCorsPolicy>[]>;
    csrfPolicies?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerCsrfPolicy>[]>;
    dataGuardRules?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerDataGuardRule>[]>;
    ddosMitigationRules?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerDdosMitigationRule>[]>;
    defaultCacheActions?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerDefaultCacheAction>[]>;
    defaultSensitiveDataPolicy?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    disable?: pulumi.Input<boolean>;
    disableApiDefinition?: pulumi.Input<boolean>;
    disableApiDiscovery?: pulumi.Input<boolean>;
    disableBotDefense?: pulumi.Input<boolean>;
    disableClientSideDefense?: pulumi.Input<boolean>;
    disableIpReputation?: pulumi.Input<boolean>;
    disableMaliciousUserDetection?: pulumi.Input<boolean>;
    disableRateLimit?: pulumi.Input<boolean>;
    disableThreatMesh?: pulumi.Input<boolean>;
    disableWaf?: pulumi.Input<boolean>;
    domains: pulumi.Input<pulumi.Input<string>[]>;
    enableApiDiscoveries?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerEnableApiDiscovery>[]>;
    enableChallenges?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerEnableChallenge>[]>;
    enableIpReputations?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerEnableIpReputation>[]>;
    enableMaliciousUserDetection?: pulumi.Input<boolean>;
    enableThreatMesh?: pulumi.Input<boolean>;
    graphqlRules?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerGraphqlRule>[]>;
    http?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerHttp>[]>;
    https?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerHttp>[]>;
    httpsAutoCerts?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerHttpsAutoCert>[]>;
    /**
     * @deprecated Deprecated
     */
    ipReputationOnCacheMisses?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerIpReputationOnCacheMiss>[]>;
    jsChallenges?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerJsChallenge>[]>;
    jwtValidations?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerJwtValidation>[]>;
    l7DdosActionBlock?: pulumi.Input<boolean>;
    l7DdosActionDefault?: pulumi.Input<boolean>;
    l7DdosActionJsChallenges?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerL7DdosActionJsChallenge>[]>;
    /**
     * @deprecated Deprecated
     */
    l7DdosActionNone?: pulumi.Input<boolean>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Deprecated
     */
    maliciousUserDetectionOnCacheMiss?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    moreOptions?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerMoreOption>[]>;
    name?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    noChallenge?: pulumi.Input<boolean>;
    noServicePolicies?: pulumi.Input<boolean>;
    originPools: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerOriginPool>[]>;
    otherSettings?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerOtherSetting>[]>;
    policyBasedChallenges?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerPolicyBasedChallenge>[]>;
    protectedCookies?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerProtectedCooky>[]>;
    rateLimits?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerRateLimit>[]>;
    sensitiveDataPolicies?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerSensitiveDataPolicy>[]>;
    servicePoliciesFromNamespace?: pulumi.Input<boolean>;
    slowDdosMitigations?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerSlowDdosMitigation>[]>;
    systemDefaultTimeouts?: pulumi.Input<boolean>;
    trustedClients?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerTrustedClient>[]>;
    userIdClientIp?: pulumi.Input<boolean>;
    userIdentifications?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerUserIdentification>[]>;
    wafExclusionRules?: pulumi.Input<pulumi.Input<inputs.CdnLoadbalancerWafExclusionRule>[]>;
}
