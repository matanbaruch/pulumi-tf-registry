// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetworkFirewall extends pulumi.CustomResource {
    /**
     * Get an existing NetworkFirewall resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkFirewallState, opts?: pulumi.CustomResourceOptions): NetworkFirewall {
        return new NetworkFirewall(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volterra:index/networkFirewall:NetworkFirewall';

    /**
     * Returns true if the given object is an instance of NetworkFirewall.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkFirewall {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkFirewall.__pulumiType;
    }

    public readonly activeEnhancedFirewallPolicies!: pulumi.Output<outputs.NetworkFirewallActiveEnhancedFirewallPolicy[] | undefined>;
    public readonly activeFastAcls!: pulumi.Output<outputs.NetworkFirewallActiveFastAcl[] | undefined>;
    public readonly activeForwardProxyPolicies!: pulumi.Output<outputs.NetworkFirewallActiveForwardProxyPolicy[] | undefined>;
    public readonly activeNetworkPolicies!: pulumi.Output<outputs.NetworkFirewallActiveNetworkPolicy[] | undefined>;
    public readonly annotations!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly disable!: pulumi.Output<boolean | undefined>;
    public readonly disableFastAcl!: pulumi.Output<boolean | undefined>;
    public readonly disableForwardProxyPolicy!: pulumi.Output<boolean | undefined>;
    public readonly disableNetworkPolicy!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly fastAclSets!: pulumi.Output<outputs.NetworkFirewallFastAclSet[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly forwardProxyPolicySets!: pulumi.Output<outputs.NetworkFirewallForwardProxyPolicySet[] | undefined>;
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly namespace!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly networkPolicySets!: pulumi.Output<outputs.NetworkFirewallNetworkPolicySet[] | undefined>;

    /**
     * Create a NetworkFirewall resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkFirewallArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkFirewallArgs | NetworkFirewallState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkFirewallState | undefined;
            resourceInputs["activeEnhancedFirewallPolicies"] = state ? state.activeEnhancedFirewallPolicies : undefined;
            resourceInputs["activeFastAcls"] = state ? state.activeFastAcls : undefined;
            resourceInputs["activeForwardProxyPolicies"] = state ? state.activeForwardProxyPolicies : undefined;
            resourceInputs["activeNetworkPolicies"] = state ? state.activeNetworkPolicies : undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disable"] = state ? state.disable : undefined;
            resourceInputs["disableFastAcl"] = state ? state.disableFastAcl : undefined;
            resourceInputs["disableForwardProxyPolicy"] = state ? state.disableForwardProxyPolicy : undefined;
            resourceInputs["disableNetworkPolicy"] = state ? state.disableNetworkPolicy : undefined;
            resourceInputs["fastAclSets"] = state ? state.fastAclSets : undefined;
            resourceInputs["forwardProxyPolicySets"] = state ? state.forwardProxyPolicySets : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["networkPolicySets"] = state ? state.networkPolicySets : undefined;
        } else {
            const args = argsOrState as NetworkFirewallArgs | undefined;
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["activeEnhancedFirewallPolicies"] = args ? args.activeEnhancedFirewallPolicies : undefined;
            resourceInputs["activeFastAcls"] = args ? args.activeFastAcls : undefined;
            resourceInputs["activeForwardProxyPolicies"] = args ? args.activeForwardProxyPolicies : undefined;
            resourceInputs["activeNetworkPolicies"] = args ? args.activeNetworkPolicies : undefined;
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disable"] = args ? args.disable : undefined;
            resourceInputs["disableFastAcl"] = args ? args.disableFastAcl : undefined;
            resourceInputs["disableForwardProxyPolicy"] = args ? args.disableForwardProxyPolicy : undefined;
            resourceInputs["disableNetworkPolicy"] = args ? args.disableNetworkPolicy : undefined;
            resourceInputs["fastAclSets"] = args ? args.fastAclSets : undefined;
            resourceInputs["forwardProxyPolicySets"] = args ? args.forwardProxyPolicySets : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["networkPolicySets"] = args ? args.networkPolicySets : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkFirewall.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworkFirewall resources.
 */
export interface NetworkFirewallState {
    activeEnhancedFirewallPolicies?: pulumi.Input<pulumi.Input<inputs.NetworkFirewallActiveEnhancedFirewallPolicy>[]>;
    activeFastAcls?: pulumi.Input<pulumi.Input<inputs.NetworkFirewallActiveFastAcl>[]>;
    activeForwardProxyPolicies?: pulumi.Input<pulumi.Input<inputs.NetworkFirewallActiveForwardProxyPolicy>[]>;
    activeNetworkPolicies?: pulumi.Input<pulumi.Input<inputs.NetworkFirewallActiveNetworkPolicy>[]>;
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    disable?: pulumi.Input<boolean>;
    disableFastAcl?: pulumi.Input<boolean>;
    disableForwardProxyPolicy?: pulumi.Input<boolean>;
    disableNetworkPolicy?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    fastAclSets?: pulumi.Input<pulumi.Input<inputs.NetworkFirewallFastAclSet>[]>;
    /**
     * @deprecated Deprecated
     */
    forwardProxyPolicySets?: pulumi.Input<pulumi.Input<inputs.NetworkFirewallForwardProxyPolicySet>[]>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    networkPolicySets?: pulumi.Input<pulumi.Input<inputs.NetworkFirewallNetworkPolicySet>[]>;
}

/**
 * The set of arguments for constructing a NetworkFirewall resource.
 */
export interface NetworkFirewallArgs {
    activeEnhancedFirewallPolicies?: pulumi.Input<pulumi.Input<inputs.NetworkFirewallActiveEnhancedFirewallPolicy>[]>;
    activeFastAcls?: pulumi.Input<pulumi.Input<inputs.NetworkFirewallActiveFastAcl>[]>;
    activeForwardProxyPolicies?: pulumi.Input<pulumi.Input<inputs.NetworkFirewallActiveForwardProxyPolicy>[]>;
    activeNetworkPolicies?: pulumi.Input<pulumi.Input<inputs.NetworkFirewallActiveNetworkPolicy>[]>;
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    disable?: pulumi.Input<boolean>;
    disableFastAcl?: pulumi.Input<boolean>;
    disableForwardProxyPolicy?: pulumi.Input<boolean>;
    disableNetworkPolicy?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    fastAclSets?: pulumi.Input<pulumi.Input<inputs.NetworkFirewallFastAclSet>[]>;
    /**
     * @deprecated Deprecated
     */
    forwardProxyPolicySets?: pulumi.Input<pulumi.Input<inputs.NetworkFirewallForwardProxyPolicySet>[]>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    networkPolicySets?: pulumi.Input<pulumi.Input<inputs.NetworkFirewallNetworkPolicySet>[]>;
}
