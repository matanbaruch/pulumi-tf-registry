// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VirtualHost extends pulumi.CustomResource {
    /**
     * Get an existing VirtualHost resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VirtualHostState, opts?: pulumi.CustomResourceOptions): VirtualHost {
        return new VirtualHost(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volterra:index/virtualHost:VirtualHost';

    /**
     * Returns true if the given object is an instance of VirtualHost.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualHost {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualHost.__pulumiType;
    }

    public readonly addLocation!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly additionalDomains!: pulumi.Output<outputs.VirtualHostAdditionalDomain[] | undefined>;
    public readonly advertisePolicies!: pulumi.Output<outputs.VirtualHostAdvertisePolicy[] | undefined>;
    public readonly annotations!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly apiSpecs!: pulumi.Output<outputs.VirtualHostApiSpec[] | undefined>;
    public readonly appendServerName!: pulumi.Output<string | undefined>;
    public readonly authentications!: pulumi.Output<outputs.VirtualHostAuthentication[] | undefined>;
    public readonly bufferPolicies!: pulumi.Output<outputs.VirtualHostBufferPolicy[] | undefined>;
    public readonly captchaChallenges!: pulumi.Output<outputs.VirtualHostCaptchaChallenge[] | undefined>;
    public readonly compressionParams!: pulumi.Output<outputs.VirtualHostCompressionParam[] | undefined>;
    public readonly connectionIdleTimeout!: pulumi.Output<number | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly cookiesToModifies!: pulumi.Output<outputs.VirtualHostCookiesToModify[] | undefined>;
    public readonly corsPolicies!: pulumi.Output<outputs.VirtualHostCorsPolicy[] | undefined>;
    public readonly csrfPolicies!: pulumi.Output<outputs.VirtualHostCsrfPolicy[] | undefined>;
    public readonly customErrors!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly defaultHeader!: pulumi.Output<boolean | undefined>;
    public readonly defaultLoadbalancer!: pulumi.Output<boolean | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly disable!: pulumi.Output<boolean | undefined>;
    public readonly disableDefaultErrorPages!: pulumi.Output<boolean | undefined>;
    public readonly disableDnsResolve!: pulumi.Output<boolean | undefined>;
    public readonly disablePathNormalize!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly dnsProxyConfigurations!: pulumi.Output<outputs.VirtualHostDnsProxyConfiguration[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly domainCertMaps!: pulumi.Output<outputs.VirtualHostDomainCertMap[] | undefined>;
    public readonly domains!: pulumi.Output<string[] | undefined>;
    public readonly dynamicReverseProxies!: pulumi.Output<outputs.VirtualHostDynamicReverseProxy[] | undefined>;
    public readonly enablePathNormalize!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly enableStrictSniHostHeaderCheck!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly headerTransformationTypes!: pulumi.Output<outputs.VirtualHostHeaderTransformationType[] | undefined>;
    public readonly httpProtocolOptions!: pulumi.Output<outputs.VirtualHostHttpProtocolOption[] | undefined>;
    public readonly idleTimeout!: pulumi.Output<number | undefined>;
    public readonly jsChallenges!: pulumi.Output<outputs.VirtualHostJsChallenge[] | undefined>;
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly maskingConfigs!: pulumi.Output<outputs.VirtualHostMaskingConfig[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly maxDirectResponseBodySize!: pulumi.Output<number | undefined>;
    public readonly maxRequestHeaderSize!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly namespace!: pulumi.Output<string>;
    public readonly noAuthentication!: pulumi.Output<boolean | undefined>;
    public readonly noChallenge!: pulumi.Output<boolean | undefined>;
    public readonly nonDefaultLoadbalancer!: pulumi.Output<boolean | undefined>;
    public readonly passThrough!: pulumi.Output<boolean | undefined>;
    public readonly proxy!: pulumi.Output<string | undefined>;
    public readonly rateLimiterAllowedPrefixes!: pulumi.Output<outputs.VirtualHostRateLimiterAllowedPrefix[] | undefined>;
    public readonly requestHeadersToAdds!: pulumi.Output<outputs.VirtualHostRequestHeadersToAdd[] | undefined>;
    public readonly requestHeadersToRemoves!: pulumi.Output<string[] | undefined>;
    public readonly responseHeadersToAdds!: pulumi.Output<outputs.VirtualHostResponseHeadersToAdd[] | undefined>;
    public readonly responseHeadersToRemoves!: pulumi.Output<string[] | undefined>;
    public readonly retryPolicies!: pulumi.Output<outputs.VirtualHostRetryPolicy[] | undefined>;
    public readonly routes!: pulumi.Output<outputs.VirtualHostRoute[] | undefined>;
    public readonly serverName!: pulumi.Output<string | undefined>;
    public readonly slowDdosMitigations!: pulumi.Output<outputs.VirtualHostSlowDdosMitigation[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly temporaryUserBlockings!: pulumi.Output<outputs.VirtualHostTemporaryUserBlocking[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly tlsCertParams!: pulumi.Output<outputs.VirtualHostTlsCertParam[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly tlsParameters!: pulumi.Output<outputs.VirtualHostTlsParameter[] | undefined>;
    public readonly userIdentifications!: pulumi.Output<outputs.VirtualHostUserIdentification[] | undefined>;
    public readonly wafTypes!: pulumi.Output<outputs.VirtualHostWafType[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly ztnaProxyConfigurations!: pulumi.Output<outputs.VirtualHostZtnaProxyConfiguration[] | undefined>;

    /**
     * Create a VirtualHost resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualHostArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VirtualHostArgs | VirtualHostState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VirtualHostState | undefined;
            resourceInputs["addLocation"] = state ? state.addLocation : undefined;
            resourceInputs["additionalDomains"] = state ? state.additionalDomains : undefined;
            resourceInputs["advertisePolicies"] = state ? state.advertisePolicies : undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["apiSpecs"] = state ? state.apiSpecs : undefined;
            resourceInputs["appendServerName"] = state ? state.appendServerName : undefined;
            resourceInputs["authentications"] = state ? state.authentications : undefined;
            resourceInputs["bufferPolicies"] = state ? state.bufferPolicies : undefined;
            resourceInputs["captchaChallenges"] = state ? state.captchaChallenges : undefined;
            resourceInputs["compressionParams"] = state ? state.compressionParams : undefined;
            resourceInputs["connectionIdleTimeout"] = state ? state.connectionIdleTimeout : undefined;
            resourceInputs["cookiesToModifies"] = state ? state.cookiesToModifies : undefined;
            resourceInputs["corsPolicies"] = state ? state.corsPolicies : undefined;
            resourceInputs["csrfPolicies"] = state ? state.csrfPolicies : undefined;
            resourceInputs["customErrors"] = state ? state.customErrors : undefined;
            resourceInputs["defaultHeader"] = state ? state.defaultHeader : undefined;
            resourceInputs["defaultLoadbalancer"] = state ? state.defaultLoadbalancer : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disable"] = state ? state.disable : undefined;
            resourceInputs["disableDefaultErrorPages"] = state ? state.disableDefaultErrorPages : undefined;
            resourceInputs["disableDnsResolve"] = state ? state.disableDnsResolve : undefined;
            resourceInputs["disablePathNormalize"] = state ? state.disablePathNormalize : undefined;
            resourceInputs["dnsProxyConfigurations"] = state ? state.dnsProxyConfigurations : undefined;
            resourceInputs["domainCertMaps"] = state ? state.domainCertMaps : undefined;
            resourceInputs["domains"] = state ? state.domains : undefined;
            resourceInputs["dynamicReverseProxies"] = state ? state.dynamicReverseProxies : undefined;
            resourceInputs["enablePathNormalize"] = state ? state.enablePathNormalize : undefined;
            resourceInputs["enableStrictSniHostHeaderCheck"] = state ? state.enableStrictSniHostHeaderCheck : undefined;
            resourceInputs["headerTransformationTypes"] = state ? state.headerTransformationTypes : undefined;
            resourceInputs["httpProtocolOptions"] = state ? state.httpProtocolOptions : undefined;
            resourceInputs["idleTimeout"] = state ? state.idleTimeout : undefined;
            resourceInputs["jsChallenges"] = state ? state.jsChallenges : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["maskingConfigs"] = state ? state.maskingConfigs : undefined;
            resourceInputs["maxDirectResponseBodySize"] = state ? state.maxDirectResponseBodySize : undefined;
            resourceInputs["maxRequestHeaderSize"] = state ? state.maxRequestHeaderSize : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["noAuthentication"] = state ? state.noAuthentication : undefined;
            resourceInputs["noChallenge"] = state ? state.noChallenge : undefined;
            resourceInputs["nonDefaultLoadbalancer"] = state ? state.nonDefaultLoadbalancer : undefined;
            resourceInputs["passThrough"] = state ? state.passThrough : undefined;
            resourceInputs["proxy"] = state ? state.proxy : undefined;
            resourceInputs["rateLimiterAllowedPrefixes"] = state ? state.rateLimiterAllowedPrefixes : undefined;
            resourceInputs["requestHeadersToAdds"] = state ? state.requestHeadersToAdds : undefined;
            resourceInputs["requestHeadersToRemoves"] = state ? state.requestHeadersToRemoves : undefined;
            resourceInputs["responseHeadersToAdds"] = state ? state.responseHeadersToAdds : undefined;
            resourceInputs["responseHeadersToRemoves"] = state ? state.responseHeadersToRemoves : undefined;
            resourceInputs["retryPolicies"] = state ? state.retryPolicies : undefined;
            resourceInputs["routes"] = state ? state.routes : undefined;
            resourceInputs["serverName"] = state ? state.serverName : undefined;
            resourceInputs["slowDdosMitigations"] = state ? state.slowDdosMitigations : undefined;
            resourceInputs["temporaryUserBlockings"] = state ? state.temporaryUserBlockings : undefined;
            resourceInputs["tlsCertParams"] = state ? state.tlsCertParams : undefined;
            resourceInputs["tlsParameters"] = state ? state.tlsParameters : undefined;
            resourceInputs["userIdentifications"] = state ? state.userIdentifications : undefined;
            resourceInputs["wafTypes"] = state ? state.wafTypes : undefined;
            resourceInputs["ztnaProxyConfigurations"] = state ? state.ztnaProxyConfigurations : undefined;
        } else {
            const args = argsOrState as VirtualHostArgs | undefined;
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["addLocation"] = args ? args.addLocation : undefined;
            resourceInputs["additionalDomains"] = args ? args.additionalDomains : undefined;
            resourceInputs["advertisePolicies"] = args ? args.advertisePolicies : undefined;
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["apiSpecs"] = args ? args.apiSpecs : undefined;
            resourceInputs["appendServerName"] = args ? args.appendServerName : undefined;
            resourceInputs["authentications"] = args ? args.authentications : undefined;
            resourceInputs["bufferPolicies"] = args ? args.bufferPolicies : undefined;
            resourceInputs["captchaChallenges"] = args ? args.captchaChallenges : undefined;
            resourceInputs["compressionParams"] = args ? args.compressionParams : undefined;
            resourceInputs["connectionIdleTimeout"] = args ? args.connectionIdleTimeout : undefined;
            resourceInputs["cookiesToModifies"] = args ? args.cookiesToModifies : undefined;
            resourceInputs["corsPolicies"] = args ? args.corsPolicies : undefined;
            resourceInputs["csrfPolicies"] = args ? args.csrfPolicies : undefined;
            resourceInputs["customErrors"] = args ? args.customErrors : undefined;
            resourceInputs["defaultHeader"] = args ? args.defaultHeader : undefined;
            resourceInputs["defaultLoadbalancer"] = args ? args.defaultLoadbalancer : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disable"] = args ? args.disable : undefined;
            resourceInputs["disableDefaultErrorPages"] = args ? args.disableDefaultErrorPages : undefined;
            resourceInputs["disableDnsResolve"] = args ? args.disableDnsResolve : undefined;
            resourceInputs["disablePathNormalize"] = args ? args.disablePathNormalize : undefined;
            resourceInputs["dnsProxyConfigurations"] = args ? args.dnsProxyConfigurations : undefined;
            resourceInputs["domainCertMaps"] = args ? args.domainCertMaps : undefined;
            resourceInputs["domains"] = args ? args.domains : undefined;
            resourceInputs["dynamicReverseProxies"] = args ? args.dynamicReverseProxies : undefined;
            resourceInputs["enablePathNormalize"] = args ? args.enablePathNormalize : undefined;
            resourceInputs["enableStrictSniHostHeaderCheck"] = args ? args.enableStrictSniHostHeaderCheck : undefined;
            resourceInputs["headerTransformationTypes"] = args ? args.headerTransformationTypes : undefined;
            resourceInputs["httpProtocolOptions"] = args ? args.httpProtocolOptions : undefined;
            resourceInputs["idleTimeout"] = args ? args.idleTimeout : undefined;
            resourceInputs["jsChallenges"] = args ? args.jsChallenges : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["maskingConfigs"] = args ? args.maskingConfigs : undefined;
            resourceInputs["maxDirectResponseBodySize"] = args ? args.maxDirectResponseBodySize : undefined;
            resourceInputs["maxRequestHeaderSize"] = args ? args.maxRequestHeaderSize : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["noAuthentication"] = args ? args.noAuthentication : undefined;
            resourceInputs["noChallenge"] = args ? args.noChallenge : undefined;
            resourceInputs["nonDefaultLoadbalancer"] = args ? args.nonDefaultLoadbalancer : undefined;
            resourceInputs["passThrough"] = args ? args.passThrough : undefined;
            resourceInputs["proxy"] = args ? args.proxy : undefined;
            resourceInputs["rateLimiterAllowedPrefixes"] = args ? args.rateLimiterAllowedPrefixes : undefined;
            resourceInputs["requestHeadersToAdds"] = args ? args.requestHeadersToAdds : undefined;
            resourceInputs["requestHeadersToRemoves"] = args ? args.requestHeadersToRemoves : undefined;
            resourceInputs["responseHeadersToAdds"] = args ? args.responseHeadersToAdds : undefined;
            resourceInputs["responseHeadersToRemoves"] = args ? args.responseHeadersToRemoves : undefined;
            resourceInputs["retryPolicies"] = args ? args.retryPolicies : undefined;
            resourceInputs["routes"] = args ? args.routes : undefined;
            resourceInputs["serverName"] = args ? args.serverName : undefined;
            resourceInputs["slowDdosMitigations"] = args ? args.slowDdosMitigations : undefined;
            resourceInputs["temporaryUserBlockings"] = args ? args.temporaryUserBlockings : undefined;
            resourceInputs["tlsCertParams"] = args ? args.tlsCertParams : undefined;
            resourceInputs["tlsParameters"] = args ? args.tlsParameters : undefined;
            resourceInputs["userIdentifications"] = args ? args.userIdentifications : undefined;
            resourceInputs["wafTypes"] = args ? args.wafTypes : undefined;
            resourceInputs["ztnaProxyConfigurations"] = args ? args.ztnaProxyConfigurations : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VirtualHost.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VirtualHost resources.
 */
export interface VirtualHostState {
    addLocation?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    additionalDomains?: pulumi.Input<pulumi.Input<inputs.VirtualHostAdditionalDomain>[]>;
    advertisePolicies?: pulumi.Input<pulumi.Input<inputs.VirtualHostAdvertisePolicy>[]>;
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Deprecated
     */
    apiSpecs?: pulumi.Input<pulumi.Input<inputs.VirtualHostApiSpec>[]>;
    appendServerName?: pulumi.Input<string>;
    authentications?: pulumi.Input<pulumi.Input<inputs.VirtualHostAuthentication>[]>;
    bufferPolicies?: pulumi.Input<pulumi.Input<inputs.VirtualHostBufferPolicy>[]>;
    captchaChallenges?: pulumi.Input<pulumi.Input<inputs.VirtualHostCaptchaChallenge>[]>;
    compressionParams?: pulumi.Input<pulumi.Input<inputs.VirtualHostCompressionParam>[]>;
    connectionIdleTimeout?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    cookiesToModifies?: pulumi.Input<pulumi.Input<inputs.VirtualHostCookiesToModify>[]>;
    corsPolicies?: pulumi.Input<pulumi.Input<inputs.VirtualHostCorsPolicy>[]>;
    csrfPolicies?: pulumi.Input<pulumi.Input<inputs.VirtualHostCsrfPolicy>[]>;
    customErrors?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    defaultHeader?: pulumi.Input<boolean>;
    defaultLoadbalancer?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    disable?: pulumi.Input<boolean>;
    disableDefaultErrorPages?: pulumi.Input<boolean>;
    disableDnsResolve?: pulumi.Input<boolean>;
    disablePathNormalize?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    dnsProxyConfigurations?: pulumi.Input<pulumi.Input<inputs.VirtualHostDnsProxyConfiguration>[]>;
    /**
     * @deprecated Deprecated
     */
    domainCertMaps?: pulumi.Input<pulumi.Input<inputs.VirtualHostDomainCertMap>[]>;
    domains?: pulumi.Input<pulumi.Input<string>[]>;
    dynamicReverseProxies?: pulumi.Input<pulumi.Input<inputs.VirtualHostDynamicReverseProxy>[]>;
    enablePathNormalize?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    enableStrictSniHostHeaderCheck?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    headerTransformationTypes?: pulumi.Input<pulumi.Input<inputs.VirtualHostHeaderTransformationType>[]>;
    httpProtocolOptions?: pulumi.Input<pulumi.Input<inputs.VirtualHostHttpProtocolOption>[]>;
    idleTimeout?: pulumi.Input<number>;
    jsChallenges?: pulumi.Input<pulumi.Input<inputs.VirtualHostJsChallenge>[]>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Deprecated
     */
    maskingConfigs?: pulumi.Input<pulumi.Input<inputs.VirtualHostMaskingConfig>[]>;
    /**
     * @deprecated Deprecated
     */
    maxDirectResponseBodySize?: pulumi.Input<number>;
    maxRequestHeaderSize?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    noAuthentication?: pulumi.Input<boolean>;
    noChallenge?: pulumi.Input<boolean>;
    nonDefaultLoadbalancer?: pulumi.Input<boolean>;
    passThrough?: pulumi.Input<boolean>;
    proxy?: pulumi.Input<string>;
    rateLimiterAllowedPrefixes?: pulumi.Input<pulumi.Input<inputs.VirtualHostRateLimiterAllowedPrefix>[]>;
    requestHeadersToAdds?: pulumi.Input<pulumi.Input<inputs.VirtualHostRequestHeadersToAdd>[]>;
    requestHeadersToRemoves?: pulumi.Input<pulumi.Input<string>[]>;
    responseHeadersToAdds?: pulumi.Input<pulumi.Input<inputs.VirtualHostResponseHeadersToAdd>[]>;
    responseHeadersToRemoves?: pulumi.Input<pulumi.Input<string>[]>;
    retryPolicies?: pulumi.Input<pulumi.Input<inputs.VirtualHostRetryPolicy>[]>;
    routes?: pulumi.Input<pulumi.Input<inputs.VirtualHostRoute>[]>;
    serverName?: pulumi.Input<string>;
    slowDdosMitigations?: pulumi.Input<pulumi.Input<inputs.VirtualHostSlowDdosMitigation>[]>;
    /**
     * @deprecated Deprecated
     */
    temporaryUserBlockings?: pulumi.Input<pulumi.Input<inputs.VirtualHostTemporaryUserBlocking>[]>;
    /**
     * @deprecated Deprecated
     */
    tlsCertParams?: pulumi.Input<pulumi.Input<inputs.VirtualHostTlsCertParam>[]>;
    /**
     * @deprecated Deprecated
     */
    tlsParameters?: pulumi.Input<pulumi.Input<inputs.VirtualHostTlsParameter>[]>;
    userIdentifications?: pulumi.Input<pulumi.Input<inputs.VirtualHostUserIdentification>[]>;
    wafTypes?: pulumi.Input<pulumi.Input<inputs.VirtualHostWafType>[]>;
    /**
     * @deprecated Deprecated
     */
    ztnaProxyConfigurations?: pulumi.Input<pulumi.Input<inputs.VirtualHostZtnaProxyConfiguration>[]>;
}

/**
 * The set of arguments for constructing a VirtualHost resource.
 */
export interface VirtualHostArgs {
    addLocation?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    additionalDomains?: pulumi.Input<pulumi.Input<inputs.VirtualHostAdditionalDomain>[]>;
    advertisePolicies?: pulumi.Input<pulumi.Input<inputs.VirtualHostAdvertisePolicy>[]>;
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Deprecated
     */
    apiSpecs?: pulumi.Input<pulumi.Input<inputs.VirtualHostApiSpec>[]>;
    appendServerName?: pulumi.Input<string>;
    authentications?: pulumi.Input<pulumi.Input<inputs.VirtualHostAuthentication>[]>;
    bufferPolicies?: pulumi.Input<pulumi.Input<inputs.VirtualHostBufferPolicy>[]>;
    captchaChallenges?: pulumi.Input<pulumi.Input<inputs.VirtualHostCaptchaChallenge>[]>;
    compressionParams?: pulumi.Input<pulumi.Input<inputs.VirtualHostCompressionParam>[]>;
    connectionIdleTimeout?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    cookiesToModifies?: pulumi.Input<pulumi.Input<inputs.VirtualHostCookiesToModify>[]>;
    corsPolicies?: pulumi.Input<pulumi.Input<inputs.VirtualHostCorsPolicy>[]>;
    csrfPolicies?: pulumi.Input<pulumi.Input<inputs.VirtualHostCsrfPolicy>[]>;
    customErrors?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    defaultHeader?: pulumi.Input<boolean>;
    defaultLoadbalancer?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    disable?: pulumi.Input<boolean>;
    disableDefaultErrorPages?: pulumi.Input<boolean>;
    disableDnsResolve?: pulumi.Input<boolean>;
    disablePathNormalize?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    dnsProxyConfigurations?: pulumi.Input<pulumi.Input<inputs.VirtualHostDnsProxyConfiguration>[]>;
    /**
     * @deprecated Deprecated
     */
    domainCertMaps?: pulumi.Input<pulumi.Input<inputs.VirtualHostDomainCertMap>[]>;
    domains?: pulumi.Input<pulumi.Input<string>[]>;
    dynamicReverseProxies?: pulumi.Input<pulumi.Input<inputs.VirtualHostDynamicReverseProxy>[]>;
    enablePathNormalize?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    enableStrictSniHostHeaderCheck?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    headerTransformationTypes?: pulumi.Input<pulumi.Input<inputs.VirtualHostHeaderTransformationType>[]>;
    httpProtocolOptions?: pulumi.Input<pulumi.Input<inputs.VirtualHostHttpProtocolOption>[]>;
    idleTimeout?: pulumi.Input<number>;
    jsChallenges?: pulumi.Input<pulumi.Input<inputs.VirtualHostJsChallenge>[]>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Deprecated
     */
    maskingConfigs?: pulumi.Input<pulumi.Input<inputs.VirtualHostMaskingConfig>[]>;
    /**
     * @deprecated Deprecated
     */
    maxDirectResponseBodySize?: pulumi.Input<number>;
    maxRequestHeaderSize?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    noAuthentication?: pulumi.Input<boolean>;
    noChallenge?: pulumi.Input<boolean>;
    nonDefaultLoadbalancer?: pulumi.Input<boolean>;
    passThrough?: pulumi.Input<boolean>;
    proxy?: pulumi.Input<string>;
    rateLimiterAllowedPrefixes?: pulumi.Input<pulumi.Input<inputs.VirtualHostRateLimiterAllowedPrefix>[]>;
    requestHeadersToAdds?: pulumi.Input<pulumi.Input<inputs.VirtualHostRequestHeadersToAdd>[]>;
    requestHeadersToRemoves?: pulumi.Input<pulumi.Input<string>[]>;
    responseHeadersToAdds?: pulumi.Input<pulumi.Input<inputs.VirtualHostResponseHeadersToAdd>[]>;
    responseHeadersToRemoves?: pulumi.Input<pulumi.Input<string>[]>;
    retryPolicies?: pulumi.Input<pulumi.Input<inputs.VirtualHostRetryPolicy>[]>;
    routes?: pulumi.Input<pulumi.Input<inputs.VirtualHostRoute>[]>;
    serverName?: pulumi.Input<string>;
    slowDdosMitigations?: pulumi.Input<pulumi.Input<inputs.VirtualHostSlowDdosMitigation>[]>;
    /**
     * @deprecated Deprecated
     */
    temporaryUserBlockings?: pulumi.Input<pulumi.Input<inputs.VirtualHostTemporaryUserBlocking>[]>;
    /**
     * @deprecated Deprecated
     */
    tlsCertParams?: pulumi.Input<pulumi.Input<inputs.VirtualHostTlsCertParam>[]>;
    /**
     * @deprecated Deprecated
     */
    tlsParameters?: pulumi.Input<pulumi.Input<inputs.VirtualHostTlsParameter>[]>;
    userIdentifications?: pulumi.Input<pulumi.Input<inputs.VirtualHostUserIdentification>[]>;
    wafTypes?: pulumi.Input<pulumi.Input<inputs.VirtualHostWafType>[]>;
    /**
     * @deprecated Deprecated
     */
    ztnaProxyConfigurations?: pulumi.Input<pulumi.Input<inputs.VirtualHostZtnaProxyConfiguration>[]>;
}
