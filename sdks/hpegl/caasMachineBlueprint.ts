// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CaasMachineBlueprint extends pulumi.CustomResource {
    /**
     * Get an existing CaasMachineBlueprint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CaasMachineBlueprintState, opts?: pulumi.CustomResourceOptions): CaasMachineBlueprint {
        return new CaasMachineBlueprint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'hpegl:index/caasMachineBlueprint:CaasMachineBlueprint';

    /**
     * Returns true if the given object is an instance of CaasMachineBlueprint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CaasMachineBlueprint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CaasMachineBlueprint.__pulumiType;
    }

    public readonly computeType!: pulumi.Output<string>;
    public /*out*/ readonly createdDate!: pulumi.Output<string>;
    public /*out*/ readonly lastUpdateDate!: pulumi.Output<string>;
    public readonly machineProvider!: pulumi.Output<string>;
    public readonly machineRoles!: pulumi.Output<string[]>;
    public readonly name!: pulumi.Output<string>;
    public readonly siteId!: pulumi.Output<string>;
    public readonly size!: pulumi.Output<string>;
    public /*out*/ readonly sizeDetails!: pulumi.Output<outputs.CaasMachineBlueprintSizeDetail[]>;
    public readonly storageType!: pulumi.Output<string>;
    public readonly workerType!: pulumi.Output<string>;

    /**
     * Create a CaasMachineBlueprint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CaasMachineBlueprintArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CaasMachineBlueprintArgs | CaasMachineBlueprintState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CaasMachineBlueprintState | undefined;
            resourceInputs["computeType"] = state ? state.computeType : undefined;
            resourceInputs["createdDate"] = state ? state.createdDate : undefined;
            resourceInputs["lastUpdateDate"] = state ? state.lastUpdateDate : undefined;
            resourceInputs["machineProvider"] = state ? state.machineProvider : undefined;
            resourceInputs["machineRoles"] = state ? state.machineRoles : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["siteId"] = state ? state.siteId : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["sizeDetails"] = state ? state.sizeDetails : undefined;
            resourceInputs["storageType"] = state ? state.storageType : undefined;
            resourceInputs["workerType"] = state ? state.workerType : undefined;
        } else {
            const args = argsOrState as CaasMachineBlueprintArgs | undefined;
            if ((!args || args.computeType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computeType'");
            }
            if ((!args || args.machineProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'machineProvider'");
            }
            if ((!args || args.machineRoles === undefined) && !opts.urn) {
                throw new Error("Missing required property 'machineRoles'");
            }
            if ((!args || args.siteId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteId'");
            }
            if ((!args || args.size === undefined) && !opts.urn) {
                throw new Error("Missing required property 'size'");
            }
            if ((!args || args.storageType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageType'");
            }
            if ((!args || args.workerType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workerType'");
            }
            resourceInputs["computeType"] = args ? args.computeType : undefined;
            resourceInputs["machineProvider"] = args ? args.machineProvider : undefined;
            resourceInputs["machineRoles"] = args ? args.machineRoles : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["siteId"] = args ? args.siteId : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
            resourceInputs["storageType"] = args ? args.storageType : undefined;
            resourceInputs["workerType"] = args ? args.workerType : undefined;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["lastUpdateDate"] = undefined /*out*/;
            resourceInputs["sizeDetails"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CaasMachineBlueprint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CaasMachineBlueprint resources.
 */
export interface CaasMachineBlueprintState {
    computeType?: pulumi.Input<string>;
    createdDate?: pulumi.Input<string>;
    lastUpdateDate?: pulumi.Input<string>;
    machineProvider?: pulumi.Input<string>;
    machineRoles?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    siteId?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    sizeDetails?: pulumi.Input<pulumi.Input<inputs.CaasMachineBlueprintSizeDetail>[]>;
    storageType?: pulumi.Input<string>;
    workerType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CaasMachineBlueprint resource.
 */
export interface CaasMachineBlueprintArgs {
    computeType: pulumi.Input<string>;
    machineProvider: pulumi.Input<string>;
    machineRoles: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    siteId: pulumi.Input<string>;
    size: pulumi.Input<string>;
    storageType: pulumi.Input<string>;
    workerType: pulumi.Input<string>;
}
