// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCaasMachineBlueprint(args: GetCaasMachineBlueprintArgs, opts?: pulumi.InvokeOptions): Promise<GetCaasMachineBlueprintResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hpegl:index/getCaasMachineBlueprint:getCaasMachineBlueprint", {
        "id": args.id,
        "name": args.name,
        "siteId": args.siteId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCaasMachineBlueprint.
 */
export interface GetCaasMachineBlueprintArgs {
    id?: string;
    name: string;
    siteId: string;
}

/**
 * A collection of values returned by getCaasMachineBlueprint.
 */
export interface GetCaasMachineBlueprintResult {
    readonly computeType: string;
    readonly createdDate: string;
    readonly id: string;
    readonly lastUpdateDate: string;
    readonly machineProvider: string;
    readonly machineRoles: string[];
    readonly name: string;
    readonly siteId: string;
    readonly size: string;
    readonly sizeDetails: outputs.GetCaasMachineBlueprintSizeDetail[];
    readonly storageType: string;
    readonly workerType: string;
}
export function getCaasMachineBlueprintOutput(args: GetCaasMachineBlueprintOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCaasMachineBlueprintResult> {
    return pulumi.output(args).apply((a: any) => getCaasMachineBlueprint(a, opts))
}

/**
 * A collection of arguments for invoking getCaasMachineBlueprint.
 */
export interface GetCaasMachineBlueprintOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    siteId: pulumi.Input<string>;
}
