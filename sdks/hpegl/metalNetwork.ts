// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MetalNetwork extends pulumi.CustomResource {
    /**
     * Get an existing MetalNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MetalNetworkState, opts?: pulumi.CustomResourceOptions): MetalNetwork {
        return new MetalNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'hpegl:index/metalNetwork:MetalNetwork';

    /**
     * Returns true if the given object is an instance of MetalNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MetalNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MetalNetwork.__pulumiType;
    }

    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Required, Optional or Default
     */
    public readonly hostUse!: pulumi.Output<string | undefined>;
    /**
     * Create the specified IP Pool to be used for the network
     */
    public readonly ipPool!: pulumi.Output<outputs.MetalNetworkIpPool | undefined>;
    /**
     * IP pool ID associated with the network
     */
    public /*out*/ readonly ipPoolId!: pulumi.Output<string>;
    /**
     * Textual representation of the location country:region:enter
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The PodID of the network
     */
    public /*out*/ readonly locationId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    /**
     * Purpose of the network. Allowed values: Backup, Storage, vmKernel, vmNSX-T, vMotion, vCHA, vmFT, iSCSI-A, iSCSI-B,
     * Telemetry or External
     */
    public readonly purpose!: pulumi.Output<string | undefined>;
    /**
     * Optional VLAN ID of the network. If not specified, it is allocated from reserved pool
     */
    public readonly vlan!: pulumi.Output<number>;
    /**
     * Optional VNI ID of the network. If not specified, it is allocated from reserved pool if required
     */
    public readonly vni!: pulumi.Output<number>;

    /**
     * Create a MetalNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MetalNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MetalNetworkArgs | MetalNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MetalNetworkState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["hostUse"] = state ? state.hostUse : undefined;
            resourceInputs["ipPool"] = state ? state.ipPool : undefined;
            resourceInputs["ipPoolId"] = state ? state.ipPoolId : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["locationId"] = state ? state.locationId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["purpose"] = state ? state.purpose : undefined;
            resourceInputs["vlan"] = state ? state.vlan : undefined;
            resourceInputs["vni"] = state ? state.vni : undefined;
        } else {
            const args = argsOrState as MetalNetworkArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["hostUse"] = args ? args.hostUse : undefined;
            resourceInputs["ipPool"] = args ? args.ipPool : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["purpose"] = args ? args.purpose : undefined;
            resourceInputs["vlan"] = args ? args.vlan : undefined;
            resourceInputs["vni"] = args ? args.vni : undefined;
            resourceInputs["ipPoolId"] = undefined /*out*/;
            resourceInputs["locationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MetalNetwork.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MetalNetwork resources.
 */
export interface MetalNetworkState {
    description?: pulumi.Input<string>;
    /**
     * Required, Optional or Default
     */
    hostUse?: pulumi.Input<string>;
    /**
     * Create the specified IP Pool to be used for the network
     */
    ipPool?: pulumi.Input<inputs.MetalNetworkIpPool>;
    /**
     * IP pool ID associated with the network
     */
    ipPoolId?: pulumi.Input<string>;
    /**
     * Textual representation of the location country:region:enter
     */
    location?: pulumi.Input<string>;
    /**
     * The PodID of the network
     */
    locationId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Purpose of the network. Allowed values: Backup, Storage, vmKernel, vmNSX-T, vMotion, vCHA, vmFT, iSCSI-A, iSCSI-B,
     * Telemetry or External
     */
    purpose?: pulumi.Input<string>;
    /**
     * Optional VLAN ID of the network. If not specified, it is allocated from reserved pool
     */
    vlan?: pulumi.Input<number>;
    /**
     * Optional VNI ID of the network. If not specified, it is allocated from reserved pool if required
     */
    vni?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a MetalNetwork resource.
 */
export interface MetalNetworkArgs {
    description?: pulumi.Input<string>;
    /**
     * Required, Optional or Default
     */
    hostUse?: pulumi.Input<string>;
    /**
     * Create the specified IP Pool to be used for the network
     */
    ipPool?: pulumi.Input<inputs.MetalNetworkIpPool>;
    /**
     * Textual representation of the location country:region:enter
     */
    location: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Purpose of the network. Allowed values: Backup, Storage, vmKernel, vmNSX-T, vMotion, vCHA, vmFT, iSCSI-A, iSCSI-B,
     * Telemetry or External
     */
    purpose?: pulumi.Input<string>;
    /**
     * Optional VLAN ID of the network. If not specified, it is allocated from reserved pool
     */
    vlan?: pulumi.Input<number>;
    /**
     * Optional VNI ID of the network. If not specified, it is allocated from reserved pool if required
     */
    vni?: pulumi.Input<number>;
}
