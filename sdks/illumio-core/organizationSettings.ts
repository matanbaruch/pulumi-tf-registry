// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OrganizationSettings extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationSettingsState, opts?: pulumi.CustomResourceOptions): OrganizationSettings {
        return new OrganizationSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'illumio-core:index/organizationSettings:OrganizationSettings';

    /**
     * Returns true if the given object is an instance of OrganizationSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationSettings.__pulumiType;
    }

    /**
     * Minimum severity level of audit event messages. Allowed values are "error", "warning", and "informational"
     */
    public readonly auditEventMinSeverity!: pulumi.Output<string>;
    /**
     * The time in seconds an audit event is stored in the database. The value should be between 86400 and 17280000
     */
    public readonly auditEventRetentionSeconds!: pulumi.Output<number>;
    /**
     * The log format (JSON, CEF, LEEF), which applies to all remote Syslog destinations. Allowed values are "JSON", "CEF", and
     * "LEEF"
     */
    public readonly format!: pulumi.Output<string>;

    /**
     * Create a OrganizationSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OrganizationSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationSettingsArgs | OrganizationSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationSettingsState | undefined;
            resourceInputs["auditEventMinSeverity"] = state ? state.auditEventMinSeverity : undefined;
            resourceInputs["auditEventRetentionSeconds"] = state ? state.auditEventRetentionSeconds : undefined;
            resourceInputs["format"] = state ? state.format : undefined;
        } else {
            const args = argsOrState as OrganizationSettingsArgs | undefined;
            resourceInputs["auditEventMinSeverity"] = args ? args.auditEventMinSeverity : undefined;
            resourceInputs["auditEventRetentionSeconds"] = args ? args.auditEventRetentionSeconds : undefined;
            resourceInputs["format"] = args ? args.format : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OrganizationSettings resources.
 */
export interface OrganizationSettingsState {
    /**
     * Minimum severity level of audit event messages. Allowed values are "error", "warning", and "informational"
     */
    auditEventMinSeverity?: pulumi.Input<string>;
    /**
     * The time in seconds an audit event is stored in the database. The value should be between 86400 and 17280000
     */
    auditEventRetentionSeconds?: pulumi.Input<number>;
    /**
     * The log format (JSON, CEF, LEEF), which applies to all remote Syslog destinations. Allowed values are "JSON", "CEF", and
     * "LEEF"
     */
    format?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationSettings resource.
 */
export interface OrganizationSettingsArgs {
    /**
     * Minimum severity level of audit event messages. Allowed values are "error", "warning", and "informational"
     */
    auditEventMinSeverity?: pulumi.Input<string>;
    /**
     * The time in seconds an audit event is stored in the database. The value should be between 86400 and 17280000
     */
    auditEventRetentionSeconds?: pulumi.Input<number>;
    /**
     * The log format (JSON, CEF, LEEF), which applies to all remote Syslog destinations. Allowed values are "JSON", "CEF", and
     * "LEEF"
     */
    format?: pulumi.Input<string>;
}
