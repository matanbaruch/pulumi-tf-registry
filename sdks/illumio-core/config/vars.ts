// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("illumio-core");

/**
 * Secret of API Key. This can also be set by environment variable `ILLUMIO_API_KEY_SECRET`
 */
export declare const apiSecret: string | undefined;
Object.defineProperty(exports, "apiSecret", {
    get() {
        return __config.get("apiSecret");
    },
    enumerable: true,
});

/**
 * Username of API Key. This can also be set by environment variable `ILLUMIO_API_KEY_USERNAME`
 */
export declare const apiUsername: string | undefined;
Object.defineProperty(exports, "apiUsername", {
    get() {
        return __config.get("apiUsername");
    },
    enumerable: true,
});

/**
 * Backoff Time (in seconds) on getting 429 (Too Many Requests). Default value: 10. Note: A default rate limit of 125
 * requests/min is already in place. A jitter of 1-5 seconds will be added to backoff time to randomize backoff.
 */
export declare const backoffTime: number | undefined;
Object.defineProperty(exports, "backoffTime", {
    get() {
        return __config.getObject<number>("backoffTime");
    },
    enumerable: true,
});

/**
 * The path to CA certificate file (PEM). In case, certificate is based on legacy CN instead of ASN, set env. variable
 * `GODEBUG=x509ignoreCN=0`. This can also be set by environment variable `ILLUMIO_CA_FILE`
 */
export declare const caFile: string | undefined;
Object.defineProperty(exports, "caFile", {
    get() {
        return __config.get("caFile");
    },
    enumerable: true,
});

/**
 * Allow insecure TLS. Only `yes` will mark it insecure. This can also be set by environment variable
 * `ILLUMIO_ALLOW_INSECURE_TLS`
 */
export declare const insecure: string | undefined;
Object.defineProperty(exports, "insecure", {
    get() {
        return __config.get("insecure");
    },
    enumerable: true,
});

/**
 * Maximum retries for an API request. Default value: 3
 */
export declare const maxRetries: number | undefined;
Object.defineProperty(exports, "maxRetries", {
    get() {
        return __config.getObject<number>("maxRetries");
    },
    enumerable: true,
});

/**
 * ID of the Organization. Can also be set by environment variable `ILLUMIO_PCE_ORG_ID`. Default value: 1
 */
export declare const orgId: number | undefined;
Object.defineProperty(exports, "orgId", {
    get() {
        return __config.getObject<number>("orgId");
    },
    enumerable: true,
});

/**
 * Host URL of Illumio PCE. This can also be set by environment variable `ILLUMIO_PCE_HOST`
 */
export declare const pceHost: string | undefined;
Object.defineProperty(exports, "pceHost", {
    get() {
        return __config.get("pceHost");
    },
    enumerable: true,
});

/**
 * Proxy credential in format `username:password`. This can also be set by environment variable `ILLUMIO_PROXY_CREDENTIALS`
 */
export declare const proxyCreds: string | undefined;
Object.defineProperty(exports, "proxyCreds", {
    get() {
        return __config.get("proxyCreds");
    },
    enumerable: true,
});

/**
 * Proxy Server URL with port number. This can also be set by environment variable `ILLUMIO_PROXY_URL`
 */
export declare const proxyUrl: string | undefined;
Object.defineProperty(exports, "proxyUrl", {
    get() {
        return __config.get("proxyUrl");
    },
    enumerable: true,
});

/**
 * Timeout for HTTP requests. Default value: 30
 */
export declare const requestTimeout: number | undefined;
Object.defineProperty(exports, "requestTimeout", {
    get() {
        return __config.getObject<number>("requestTimeout");
    },
    enumerable: true,
});

