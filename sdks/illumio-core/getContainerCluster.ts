// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getContainerCluster(args: GetContainerClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("illumio-core:index/getContainerCluster:getContainerCluster", {
        "href": args.href,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContainerCluster.
 */
export interface GetContainerClusterArgs {
    href: string;
    id?: string;
}

/**
 * A collection of values returned by getContainerCluster.
 */
export interface GetContainerClusterResult {
    readonly caps: string[];
    readonly containerClusterId: string;
    readonly containerRuntime: string;
    readonly description: string;
    readonly errors: outputs.GetContainerClusterError[];
    readonly href: string;
    readonly id: string;
    readonly kubelinkVersion: string;
    readonly lastConnected: string;
    readonly managerType: string;
    readonly name: string;
    readonly nodes: outputs.GetContainerClusterNode[];
    readonly online: boolean;
    readonly pceFqdn: string;
}
export function getContainerClusterOutput(args: GetContainerClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerClusterResult> {
    return pulumi.output(args).apply((a: any) => getContainerCluster(a, opts))
}

/**
 * A collection of arguments for invoking getContainerCluster.
 */
export interface GetContainerClusterOutputArgs {
    href: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
