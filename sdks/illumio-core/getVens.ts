// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVens(args?: GetVensArgs, opts?: pulumi.InvokeOptions): Promise<GetVensResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("illumio-core:index/getVens:getVens", {
        "activationType": args.activationType,
        "activePceFqdn": args.activePceFqdn,
        "condition": args.condition,
        "containerClusters": args.containerClusters,
        "description": args.description,
        "disconnectedBefore": args.disconnectedBefore,
        "health": args.health,
        "hostname": args.hostname,
        "id": args.id,
        "ipAddress": args.ipAddress,
        "labels": args.labels,
        "lastGoodbyeAtGte": args.lastGoodbyeAtGte,
        "lastGoodbyeAtLte": args.lastGoodbyeAtLte,
        "lastHeartbeatAtGte": args.lastHeartbeatAtGte,
        "lastHeartbeatAtLte": args.lastHeartbeatAtLte,
        "matchType": args.matchType,
        "maxResults": args.maxResults,
        "name": args.name,
        "os": args.os,
        "status": args.status,
        "upgradePending": args.upgradePending,
        "versionGte": args.versionGte,
        "versionLte": args.versionLte,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVens.
 */
export interface GetVensArgs {
    activationType?: string;
    activePceFqdn?: string;
    condition?: string;
    containerClusters?: string;
    description?: string;
    disconnectedBefore?: string;
    health?: string;
    hostname?: string;
    id?: string;
    ipAddress?: string;
    labels?: string;
    lastGoodbyeAtGte?: string;
    lastGoodbyeAtLte?: string;
    lastHeartbeatAtGte?: string;
    lastHeartbeatAtLte?: string;
    matchType?: string;
    maxResults?: string;
    name?: string;
    os?: string;
    status?: string;
    upgradePending?: string;
    versionGte?: string;
    versionLte?: string;
}

/**
 * A collection of values returned by getVens.
 */
export interface GetVensResult {
    readonly activationType?: string;
    readonly activePceFqdn?: string;
    readonly condition?: string;
    readonly containerClusters?: string;
    readonly description?: string;
    readonly disconnectedBefore?: string;
    readonly health?: string;
    readonly hostname?: string;
    readonly id: string;
    readonly ipAddress?: string;
    readonly items: outputs.GetVensItem[];
    readonly labels?: string;
    readonly lastGoodbyeAtGte?: string;
    readonly lastGoodbyeAtLte?: string;
    readonly lastHeartbeatAtGte?: string;
    readonly lastHeartbeatAtLte?: string;
    readonly matchType?: string;
    readonly maxResults?: string;
    readonly name?: string;
    readonly os?: string;
    readonly status?: string;
    readonly upgradePending?: string;
    readonly versionGte?: string;
    readonly versionLte?: string;
}
export function getVensOutput(args?: GetVensOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVensResult> {
    return pulumi.output(args).apply((a: any) => getVens(a, opts))
}

/**
 * A collection of arguments for invoking getVens.
 */
export interface GetVensOutputArgs {
    activationType?: pulumi.Input<string>;
    activePceFqdn?: pulumi.Input<string>;
    condition?: pulumi.Input<string>;
    containerClusters?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    disconnectedBefore?: pulumi.Input<string>;
    health?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    labels?: pulumi.Input<string>;
    lastGoodbyeAtGte?: pulumi.Input<string>;
    lastGoodbyeAtLte?: pulumi.Input<string>;
    lastHeartbeatAtGte?: pulumi.Input<string>;
    lastHeartbeatAtLte?: pulumi.Input<string>;
    matchType?: pulumi.Input<string>;
    maxResults?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    os?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    upgradePending?: pulumi.Input<string>;
    versionGte?: pulumi.Input<string>;
    versionLte?: pulumi.Input<string>;
}
