// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getContainerClusterWorkloadProfiles(args: GetContainerClusterWorkloadProfilesArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerClusterWorkloadProfilesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("illumio-core:index/getContainerClusterWorkloadProfiles:getContainerClusterWorkloadProfiles", {
        "assignLabels": args.assignLabels,
        "containerClusterHref": args.containerClusterHref,
        "enforcementMode": args.enforcementMode,
        "id": args.id,
        "linked": args.linked,
        "managed": args.managed,
        "matchType": args.matchType,
        "maxResults": args.maxResults,
        "name": args.name,
        "namespace": args.namespace,
        "visibilityLevel": args.visibilityLevel,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContainerClusterWorkloadProfiles.
 */
export interface GetContainerClusterWorkloadProfilesArgs {
    assignLabels?: string;
    containerClusterHref: string;
    enforcementMode?: string;
    id?: string;
    linked?: string;
    managed?: string;
    matchType?: string;
    maxResults?: string;
    name?: string;
    namespace?: string;
    visibilityLevel?: string;
}

/**
 * A collection of values returned by getContainerClusterWorkloadProfiles.
 */
export interface GetContainerClusterWorkloadProfilesResult {
    readonly assignLabels?: string;
    readonly containerClusterHref: string;
    readonly enforcementMode?: string;
    readonly id: string;
    readonly items: outputs.GetContainerClusterWorkloadProfilesItem[];
    readonly linked?: string;
    readonly managed?: string;
    readonly matchType?: string;
    readonly maxResults?: string;
    readonly name?: string;
    readonly namespace?: string;
    readonly visibilityLevel?: string;
}
export function getContainerClusterWorkloadProfilesOutput(args: GetContainerClusterWorkloadProfilesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerClusterWorkloadProfilesResult> {
    return pulumi.output(args).apply((a: any) => getContainerClusterWorkloadProfiles(a, opts))
}

/**
 * A collection of arguments for invoking getContainerClusterWorkloadProfiles.
 */
export interface GetContainerClusterWorkloadProfilesOutputArgs {
    assignLabels?: pulumi.Input<string>;
    containerClusterHref: pulumi.Input<string>;
    enforcementMode?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    linked?: pulumi.Input<string>;
    managed?: pulumi.Input<string>;
    matchType?: pulumi.Input<string>;
    maxResults?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    visibilityLevel?: pulumi.Input<string>;
}
