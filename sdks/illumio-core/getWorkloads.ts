// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWorkloads(args?: GetWorkloadsArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkloadsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("illumio-core:index/getWorkloads:getWorkloads", {
        "agentActivePceFqdn": args.agentActivePceFqdn,
        "containerClusters": args.containerClusters,
        "description": args.description,
        "enforcementMode": args.enforcementMode,
        "externalDataReference": args.externalDataReference,
        "externalDataSet": args.externalDataSet,
        "hostname": args.hostname,
        "id": args.id,
        "includeDeleted": args.includeDeleted,
        "ipAddress": args.ipAddress,
        "labels": args.labels,
        "lastHeartbeatOnGte": args.lastHeartbeatOnGte,
        "lastHeartbeatOnLte": args.lastHeartbeatOnLte,
        "logTraffic": args.logTraffic,
        "managed": args.managed,
        "matchType": args.matchType,
        "maxResults": args.maxResults,
        "name": args.name,
        "online": args.online,
        "osId": args.osId,
        "policyHealth": args.policyHealth,
        "securityPolicySyncState": args.securityPolicySyncState,
        "securityPolicyUpdateMode": args.securityPolicyUpdateMode,
        "ven": args.ven,
        "visibilityLevel": args.visibilityLevel,
        "vulnerabilitySummaryVulnerabilityExposureScoreGte": args.vulnerabilitySummaryVulnerabilityExposureScoreGte,
        "vulnerabilitySummaryVulnerabilityExposureScoreLte": args.vulnerabilitySummaryVulnerabilityExposureScoreLte,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkloads.
 */
export interface GetWorkloadsArgs {
    agentActivePceFqdn?: string;
    containerClusters?: string;
    description?: string;
    enforcementMode?: string;
    externalDataReference?: string;
    externalDataSet?: string;
    hostname?: string;
    id?: string;
    includeDeleted?: string;
    ipAddress?: string;
    labels?: string;
    lastHeartbeatOnGte?: string;
    lastHeartbeatOnLte?: string;
    logTraffic?: string;
    managed?: string;
    matchType?: string;
    maxResults?: string;
    name?: string;
    online?: string;
    osId?: string;
    policyHealth?: string;
    securityPolicySyncState?: string;
    securityPolicyUpdateMode?: string;
    ven?: string;
    visibilityLevel?: string;
    vulnerabilitySummaryVulnerabilityExposureScoreGte?: string;
    vulnerabilitySummaryVulnerabilityExposureScoreLte?: string;
}

/**
 * A collection of values returned by getWorkloads.
 */
export interface GetWorkloadsResult {
    readonly agentActivePceFqdn?: string;
    readonly containerClusters?: string;
    readonly description?: string;
    readonly enforcementMode?: string;
    readonly externalDataReference?: string;
    readonly externalDataSet?: string;
    readonly hostname?: string;
    readonly id: string;
    readonly includeDeleted?: string;
    readonly ipAddress?: string;
    readonly items: outputs.GetWorkloadsItem[];
    readonly labels?: string;
    readonly lastHeartbeatOnGte?: string;
    readonly lastHeartbeatOnLte?: string;
    readonly logTraffic?: string;
    readonly managed?: string;
    readonly matchType?: string;
    readonly maxResults?: string;
    readonly name?: string;
    readonly online?: string;
    readonly osId?: string;
    readonly policyHealth?: string;
    readonly securityPolicySyncState?: string;
    readonly securityPolicyUpdateMode?: string;
    readonly ven?: string;
    readonly visibilityLevel?: string;
    readonly vulnerabilitySummaryVulnerabilityExposureScoreGte?: string;
    readonly vulnerabilitySummaryVulnerabilityExposureScoreLte?: string;
}
export function getWorkloadsOutput(args?: GetWorkloadsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkloadsResult> {
    return pulumi.output(args).apply((a: any) => getWorkloads(a, opts))
}

/**
 * A collection of arguments for invoking getWorkloads.
 */
export interface GetWorkloadsOutputArgs {
    agentActivePceFqdn?: pulumi.Input<string>;
    containerClusters?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    enforcementMode?: pulumi.Input<string>;
    externalDataReference?: pulumi.Input<string>;
    externalDataSet?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    includeDeleted?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    labels?: pulumi.Input<string>;
    lastHeartbeatOnGte?: pulumi.Input<string>;
    lastHeartbeatOnLte?: pulumi.Input<string>;
    logTraffic?: pulumi.Input<string>;
    managed?: pulumi.Input<string>;
    matchType?: pulumi.Input<string>;
    maxResults?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    online?: pulumi.Input<string>;
    osId?: pulumi.Input<string>;
    policyHealth?: pulumi.Input<string>;
    securityPolicySyncState?: pulumi.Input<string>;
    securityPolicyUpdateMode?: pulumi.Input<string>;
    ven?: pulumi.Input<string>;
    visibilityLevel?: pulumi.Input<string>;
    vulnerabilitySummaryVulnerabilityExposureScoreGte?: pulumi.Input<string>;
    vulnerabilitySummaryVulnerabilityExposureScoreLte?: pulumi.Input<string>;
}
