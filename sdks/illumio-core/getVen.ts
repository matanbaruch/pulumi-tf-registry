// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVen(args: GetVenArgs, opts?: pulumi.InvokeOptions): Promise<GetVenResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("illumio-core:index/getVen:getVen", {
        "href": args.href,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVen.
 */
export interface GetVenArgs {
    href: string;
    id?: string;
}

/**
 * A collection of values returned by getVen.
 */
export interface GetVenResult {
    readonly activationType: string;
    readonly activePceFqdn: string;
    readonly caps: string[];
    readonly conditions: outputs.GetVenCondition[];
    readonly containerClusters: outputs.GetVenContainerCluster[];
    readonly createdAt: string;
    readonly createdBy: {[key: string]: string};
    readonly description: string;
    readonly hostname: string;
    readonly href: string;
    readonly id: string;
    readonly interfaces: outputs.GetVenInterface[];
    readonly labels: outputs.GetVenLabel[];
    readonly lastGoodbyeAt: string;
    readonly lastHeartbeatAt: string;
    readonly name: string;
    readonly osDetail: string;
    readonly osId: string;
    readonly osPlatform: string;
    readonly secureConnects: outputs.GetVenSecureConnect[];
    readonly status: string;
    readonly targetPceFqdn: string;
    readonly uid: string;
    readonly unpairAllowed: boolean;
    readonly updatedAt: string;
    readonly updatedBy: {[key: string]: string};
    readonly version: string;
    readonly workloads: outputs.GetVenWorkload[];
}
export function getVenOutput(args: GetVenOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVenResult> {
    return pulumi.output(args).apply((a: any) => getVen(a, opts))
}

/**
 * A collection of arguments for invoking getVen.
 */
export interface GetVenOutputArgs {
    href: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
