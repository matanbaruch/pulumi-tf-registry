// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecurityRule(args: GetSecurityRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("illumio-core:index/getSecurityRule:getSecurityRule", {
        "href": args.href,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecurityRule.
 */
export interface GetSecurityRuleArgs {
    href: string;
    id?: string;
}

/**
 * A collection of values returned by getSecurityRule.
 */
export interface GetSecurityRuleResult {
    readonly consumers: outputs.GetSecurityRuleConsumer[];
    readonly createdAt: string;
    readonly createdBy: {[key: string]: string};
    readonly deletedAt: string;
    readonly deletedBy: {[key: string]: string};
    readonly description: string;
    readonly enabled: boolean;
    readonly externalDataReference: string;
    readonly externalDataSet: string;
    readonly href: string;
    readonly id: string;
    readonly ingressServices: outputs.GetSecurityRuleIngressService[];
    readonly machineAuth: boolean;
    readonly providers: outputs.GetSecurityRuleProvider[];
    readonly resolveLabelsAs: outputs.GetSecurityRuleResolveLabelsA[];
    readonly ruleSetHref: string;
    readonly secConnect: boolean;
    readonly stateless: boolean;
    readonly unscopedConsumers: boolean;
    readonly updateType: string;
    readonly updatedAt: string;
    readonly updatedBy: {[key: string]: string};
    readonly useWorkloadSubnets: string[];
}
export function getSecurityRuleOutput(args: GetSecurityRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityRuleResult> {
    return pulumi.output(args).apply((a: any) => getSecurityRule(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityRule.
 */
export interface GetSecurityRuleOutputArgs {
    href: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
