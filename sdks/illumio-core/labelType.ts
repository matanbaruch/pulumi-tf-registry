// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LabelType extends pulumi.CustomResource {
    /**
     * Get an existing LabelType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LabelTypeState, opts?: pulumi.CustomResourceOptions): LabelType {
        return new LabelType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'illumio-core:index/labelType:LabelType';

    /**
     * Returns true if the given object is an instance of LabelType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LabelType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LabelType.__pulumiType;
    }

    /**
     * User permissions for the object
     */
    public /*out*/ readonly caps!: pulumi.Output<string[]>;
    /**
     * Timestamp when this label type was first created
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * User who created this label type
     */
    public /*out*/ readonly createdBy!: pulumi.Output<{[key: string]: string}>;
    /**
     * Flag to indicate whether the label type has been deleted or not
     */
    public /*out*/ readonly deleted!: pulumi.Output<boolean>;
    /**
     * Timestamp when this label type was deleted
     */
    public /*out*/ readonly deletedAt!: pulumi.Output<string>;
    /**
     * User who deleted this label type
     */
    public /*out*/ readonly deletedBy!: pulumi.Output<{[key: string]: string}>;
    /**
     * Object containing UI display information for the label type
     */
    public readonly displayInfo!: pulumi.Output<outputs.LabelTypeDisplayInfo | undefined>;
    /**
     * The display name of the label type
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * A unique identifier within the external data source
     */
    public readonly externalDataReference!: pulumi.Output<string | undefined>;
    /**
     * The data source from which a resource originates
     */
    public readonly externalDataSet!: pulumi.Output<string | undefined>;
    /**
     * URI of this label type
     */
    public /*out*/ readonly href!: pulumi.Output<string>;
    /**
     * Key in key-value pair. The value must be a string between 1 and 64 characters long
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * Timestamp when this label type was last updated
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * User who last updated this label type
     */
    public /*out*/ readonly updatedBy!: pulumi.Output<{[key: string]: string}>;
    /**
     * Usage of the label type
     */
    public /*out*/ readonly usage!: pulumi.Output<{[key: string]: boolean}>;

    /**
     * Create a LabelType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LabelTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LabelTypeArgs | LabelTypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LabelTypeState | undefined;
            resourceInputs["caps"] = state ? state.caps : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["deleted"] = state ? state.deleted : undefined;
            resourceInputs["deletedAt"] = state ? state.deletedAt : undefined;
            resourceInputs["deletedBy"] = state ? state.deletedBy : undefined;
            resourceInputs["displayInfo"] = state ? state.displayInfo : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["externalDataReference"] = state ? state.externalDataReference : undefined;
            resourceInputs["externalDataSet"] = state ? state.externalDataSet : undefined;
            resourceInputs["href"] = state ? state.href : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
            resourceInputs["usage"] = state ? state.usage : undefined;
        } else {
            const args = argsOrState as LabelTypeArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            resourceInputs["displayInfo"] = args ? args.displayInfo : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["externalDataReference"] = args ? args.externalDataReference : undefined;
            resourceInputs["externalDataSet"] = args ? args.externalDataSet : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["caps"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["deleted"] = undefined /*out*/;
            resourceInputs["deletedAt"] = undefined /*out*/;
            resourceInputs["deletedBy"] = undefined /*out*/;
            resourceInputs["href"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["updatedBy"] = undefined /*out*/;
            resourceInputs["usage"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LabelType.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LabelType resources.
 */
export interface LabelTypeState {
    /**
     * User permissions for the object
     */
    caps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Timestamp when this label type was first created
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User who created this label type
     */
    createdBy?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Flag to indicate whether the label type has been deleted or not
     */
    deleted?: pulumi.Input<boolean>;
    /**
     * Timestamp when this label type was deleted
     */
    deletedAt?: pulumi.Input<string>;
    /**
     * User who deleted this label type
     */
    deletedBy?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Object containing UI display information for the label type
     */
    displayInfo?: pulumi.Input<inputs.LabelTypeDisplayInfo>;
    /**
     * The display name of the label type
     */
    displayName?: pulumi.Input<string>;
    /**
     * A unique identifier within the external data source
     */
    externalDataReference?: pulumi.Input<string>;
    /**
     * The data source from which a resource originates
     */
    externalDataSet?: pulumi.Input<string>;
    /**
     * URI of this label type
     */
    href?: pulumi.Input<string>;
    /**
     * Key in key-value pair. The value must be a string between 1 and 64 characters long
     */
    key?: pulumi.Input<string>;
    /**
     * Timestamp when this label type was last updated
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User who last updated this label type
     */
    updatedBy?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Usage of the label type
     */
    usage?: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
}

/**
 * The set of arguments for constructing a LabelType resource.
 */
export interface LabelTypeArgs {
    /**
     * Object containing UI display information for the label type
     */
    displayInfo?: pulumi.Input<inputs.LabelTypeDisplayInfo>;
    /**
     * The display name of the label type
     */
    displayName: pulumi.Input<string>;
    /**
     * A unique identifier within the external data source
     */
    externalDataReference?: pulumi.Input<string>;
    /**
     * The data source from which a resource originates
     */
    externalDataSet?: pulumi.Input<string>;
    /**
     * Key in key-value pair. The value must be a string between 1 and 64 characters long
     */
    key: pulumi.Input<string>;
}
