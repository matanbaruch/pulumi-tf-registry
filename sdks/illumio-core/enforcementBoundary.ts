// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EnforcementBoundary extends pulumi.CustomResource {
    /**
     * Get an existing EnforcementBoundary resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnforcementBoundaryState, opts?: pulumi.CustomResourceOptions): EnforcementBoundary {
        return new EnforcementBoundary(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'illumio-core:index/enforcementBoundary:EnforcementBoundary';

    /**
     * Returns true if the given object is an instance of EnforcementBoundary.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnforcementBoundary {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnforcementBoundary.__pulumiType;
    }

    /**
     * User permissions for the object
     */
    public /*out*/ readonly caps!: pulumi.Output<string[]>;
    /**
     * Consumers for Enforcement Boundary. Only one actor can be specified in one consumers block
     */
    public readonly consumers!: pulumi.Output<outputs.EnforcementBoundaryConsumer[]>;
    /**
     * Timestamp when this Enforcement Boundary was first created
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * User who created this Enforcement Boundary
     */
    public /*out*/ readonly createdBy!: pulumi.Output<{[key: string]: string}>;
    /**
     * Timestamp when this Enforcement Boundary was last deleted
     */
    public /*out*/ readonly deletedAt!: pulumi.Output<string>;
    /**
     * User who last deleted this Enforcement Boundary
     */
    public /*out*/ readonly deletedBy!: pulumi.Output<{[key: string]: string}>;
    /**
     * Enabled flag. Determines whether the rule will be enabled in ruleset or not
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * URI of this Enforcement Boundary
     */
    public /*out*/ readonly href!: pulumi.Output<string>;
    /**
     * Collection of Ingress Service. Only one of the {"href"} or {"proto", "port", "to_port"} parameter combination is allowed
     */
    public readonly ingressServices!: pulumi.Output<outputs.EnforcementBoundaryIngressService[]>;
    /**
     * Name of the Enforcement Boundary
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * providers for Enforcement Boundary. Only one actor can be specified in one providers block
     */
    public readonly providers!: pulumi.Output<outputs.EnforcementBoundaryProvider[]>;
    /**
     * Timestamp when this Enforcement Boundary was last updated
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * User who last updated this Enforcement Boundary
     */
    public /*out*/ readonly updatedBy!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a EnforcementBoundary resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnforcementBoundaryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnforcementBoundaryArgs | EnforcementBoundaryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnforcementBoundaryState | undefined;
            resourceInputs["caps"] = state ? state.caps : undefined;
            resourceInputs["consumers"] = state ? state.consumers : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["deletedAt"] = state ? state.deletedAt : undefined;
            resourceInputs["deletedBy"] = state ? state.deletedBy : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["href"] = state ? state.href : undefined;
            resourceInputs["ingressServices"] = state ? state.ingressServices : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["providers"] = state ? state.providers : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
        } else {
            const args = argsOrState as EnforcementBoundaryArgs | undefined;
            if ((!args || args.consumers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'consumers'");
            }
            if ((!args || args.ingressServices === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ingressServices'");
            }
            if ((!args || args.providers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providers'");
            }
            resourceInputs["consumers"] = args ? args.consumers : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["ingressServices"] = args ? args.ingressServices : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["providers"] = args ? args.providers : undefined;
            resourceInputs["caps"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["deletedAt"] = undefined /*out*/;
            resourceInputs["deletedBy"] = undefined /*out*/;
            resourceInputs["href"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["updatedBy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EnforcementBoundary.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EnforcementBoundary resources.
 */
export interface EnforcementBoundaryState {
    /**
     * User permissions for the object
     */
    caps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Consumers for Enforcement Boundary. Only one actor can be specified in one consumers block
     */
    consumers?: pulumi.Input<pulumi.Input<inputs.EnforcementBoundaryConsumer>[]>;
    /**
     * Timestamp when this Enforcement Boundary was first created
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User who created this Enforcement Boundary
     */
    createdBy?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Timestamp when this Enforcement Boundary was last deleted
     */
    deletedAt?: pulumi.Input<string>;
    /**
     * User who last deleted this Enforcement Boundary
     */
    deletedBy?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Enabled flag. Determines whether the rule will be enabled in ruleset or not
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * URI of this Enforcement Boundary
     */
    href?: pulumi.Input<string>;
    /**
     * Collection of Ingress Service. Only one of the {"href"} or {"proto", "port", "to_port"} parameter combination is allowed
     */
    ingressServices?: pulumi.Input<pulumi.Input<inputs.EnforcementBoundaryIngressService>[]>;
    /**
     * Name of the Enforcement Boundary
     */
    name?: pulumi.Input<string>;
    /**
     * providers for Enforcement Boundary. Only one actor can be specified in one providers block
     */
    providers?: pulumi.Input<pulumi.Input<inputs.EnforcementBoundaryProvider>[]>;
    /**
     * Timestamp when this Enforcement Boundary was last updated
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User who last updated this Enforcement Boundary
     */
    updatedBy?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a EnforcementBoundary resource.
 */
export interface EnforcementBoundaryArgs {
    /**
     * Consumers for Enforcement Boundary. Only one actor can be specified in one consumers block
     */
    consumers: pulumi.Input<pulumi.Input<inputs.EnforcementBoundaryConsumer>[]>;
    /**
     * Enabled flag. Determines whether the rule will be enabled in ruleset or not
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Collection of Ingress Service. Only one of the {"href"} or {"proto", "port", "to_port"} parameter combination is allowed
     */
    ingressServices: pulumi.Input<pulumi.Input<inputs.EnforcementBoundaryIngressService>[]>;
    /**
     * Name of the Enforcement Boundary
     */
    name?: pulumi.Input<string>;
    /**
     * providers for Enforcement Boundary. Only one actor can be specified in one providers block
     */
    providers: pulumi.Input<pulumi.Input<inputs.EnforcementBoundaryProvider>[]>;
}
