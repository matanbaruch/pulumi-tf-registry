// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVulnerabilityReport(args: GetVulnerabilityReportArgs, opts?: pulumi.InvokeOptions): Promise<GetVulnerabilityReportResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("illumio-core:index/getVulnerabilityReport:getVulnerabilityReport", {
        "href": args.href,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVulnerabilityReport.
 */
export interface GetVulnerabilityReportArgs {
    href: string;
    id?: string;
}

/**
 * A collection of values returned by getVulnerabilityReport.
 */
export interface GetVulnerabilityReportResult {
    readonly authoritative: boolean;
    readonly createdAt: string;
    readonly createdBy: {[key: string]: string};
    readonly exportedAt: string;
    readonly href: string;
    readonly id: string;
    readonly name: string;
    readonly numVulnerabilities: number;
    readonly reportType: string;
    readonly scannedIps: string[];
    readonly updatedAt: string;
    readonly updatedBy: {[key: string]: string};
}
export function getVulnerabilityReportOutput(args: GetVulnerabilityReportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVulnerabilityReportResult> {
    return pulumi.output(args).apply((a: any) => getVulnerabilityReport(a, opts))
}

/**
 * A collection of arguments for invoking getVulnerabilityReport.
 */
export interface GetVulnerabilityReportOutputArgs {
    href: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
