// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceBindings(args?: GetServiceBindingsArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceBindingsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("illumio-core:index/getServiceBindings:getServiceBindings", {
        "externalDataReference": args.externalDataReference,
        "externalDataSet": args.externalDataSet,
        "id": args.id,
        "maxResults": args.maxResults,
        "virtualService": args.virtualService,
        "workload": args.workload,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceBindings.
 */
export interface GetServiceBindingsArgs {
    externalDataReference?: string;
    externalDataSet?: string;
    id?: string;
    maxResults?: string;
    virtualService?: string;
    workload?: string;
}

/**
 * A collection of values returned by getServiceBindings.
 */
export interface GetServiceBindingsResult {
    readonly externalDataReference?: string;
    readonly externalDataSet?: string;
    readonly id: string;
    readonly items: outputs.GetServiceBindingsItem[];
    readonly maxResults?: string;
    readonly virtualService?: string;
    readonly workload?: string;
}
export function getServiceBindingsOutput(args?: GetServiceBindingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceBindingsResult> {
    return pulumi.output(args).apply((a: any) => getServiceBindings(a, opts))
}

/**
 * A collection of arguments for invoking getServiceBindings.
 */
export interface GetServiceBindingsOutputArgs {
    externalDataReference?: pulumi.Input<string>;
    externalDataSet?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    maxResults?: pulumi.Input<string>;
    virtualService?: pulumi.Input<string>;
    workload?: pulumi.Input<string>;
}
