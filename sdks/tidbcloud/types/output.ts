// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ClusterConfig {
    /**
     * The components of the cluster.
     *   - For a Serverless Tier cluster, the components value can not be set.  - For a Dedicated Tier cluster, the components value must be set.
     */
    components: outputs.ClusterConfigComponents;
    /**
     * A list of IP addresses and Classless Inter-Domain Routing (CIDR) addresses that are allowed to access the TiDB Cloud cluster via [standard connection](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection).
     */
    ipAccessLists?: outputs.ClusterConfigIpAccessList[];
    /**
     * lag that indicates whether the cluster is paused. true means to pause the cluster, and false means to resume the cluster.
     *   - The cluster can be paused only when the cluster_status is "AVAILABLE".  - The cluster can be resumed only when the cluster_status is "PAUSED".
     */
    paused?: boolean;
    /**
     * The TiDB port for connection. The port must be in the range of 1024-65535 except 10080, 4000 in default.
     *   - For a Serverless Tier cluster, only port 4000 is available.
     */
    port: number;
    /**
     * The root password to access the cluster. It must be 8-64 characters.
     */
    rootPassword?: string;
}

export interface ClusterConfigComponents {
    /**
     * The TiDB component of the cluster
     */
    tidb: outputs.ClusterConfigComponentsTidb;
    /**
     * The TiFlash component of the cluster.
     */
    tiflash?: outputs.ClusterConfigComponentsTiflash;
    /**
     * The TiKV component of the cluster
     */
    tikv: outputs.ClusterConfigComponentsTikv;
}

export interface ClusterConfigComponentsTidb {
    /**
     * The number of nodes in the cluster. You can get the minimum and step of a node quantity from the tidbcloud.getClusterSpecs datasource.
     */
    nodeQuantity: number;
    /**
     * The size of the TiDB component in the cluster, You can get the available node size of each region from the tidbcloud.getClusterSpecs datasource.
     *   - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
     *   - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.
     *   - Can not modify node_size of an existing cluster.
     */
    nodeSize: string;
}

export interface ClusterConfigComponentsTiflash {
    /**
     * The number of nodes in the cluster. You can get the minimum and step of a node quantity from the tidbcloud.getClusterSpecs datasource.
     *   - TiFlash do not support decreasing node quantity.
     */
    nodeQuantity: number;
    /**
     * The size of the TiFlash component in the cluster, You can get the available node size of each region from the tidbcloud.getClusterSpecs datasource.
     *   - Can not modify node_size of an existing cluster.
     */
    nodeSize: string;
    /**
     * The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the tidbcloud.getClusterSpecs datasource.
     *   - Can not modify storage_size_gib of an existing cluster.
     */
    storageSizeGib: number;
}

export interface ClusterConfigComponentsTikv {
    /**
     * The number of nodes in the cluster. You can get the minimum and step of a node quantity from the tidbcloud.getClusterSpecs datasource.
     *   - TiKV do not support decreasing node quantity.
     *   - The node_quantity of TiKV must be a multiple of 3.
     */
    nodeQuantity: number;
    /**
     * The size of the TiKV component in the cluster, You can get the available node size of each region from the tidbcloud.getClusterSpecs datasource.
     *   - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
     *   - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.
     *   - Can not modify node_size of an existing cluster.
     */
    nodeSize: string;
    /**
     * The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the tidbcloud.getClusterSpecs datasource.
     *   - Can not modify storage_size_gib of an existing cluster.
     */
    storageSizeGib: number;
}

export interface ClusterConfigIpAccessList {
    /**
     * The IP address or CIDR range that you want to add to the cluster's IP access list.
     */
    cidr: string;
    /**
     * Description that explains the purpose of the entry.
     */
    description: string;
}

export interface ClusterStatus {
    /**
     * Status of the cluster.
     */
    clusterStatus: string;
    /**
     * Connection strings.
     */
    connectionStrings: outputs.ClusterStatusConnectionStrings;
    /**
     * TiDB version.
     */
    tidbVersion: string;
}

export interface ClusterStatusConnectionStrings {
    /**
     * The default TiDB user for connection.
     */
    defaultUser: string;
    /**
     * Standard connection string.
     */
    standard: outputs.ClusterStatusConnectionStringsStandard;
    /**
     * VPC peering connection string.
     */
    vpcPeering: outputs.ClusterStatusConnectionStringsVpcPeering;
}

export interface ClusterStatusConnectionStringsStandard {
    /**
     * The host of standard connection.
     */
    host: string;
    /**
     * The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.
     */
    port: number;
}

export interface ClusterStatusConnectionStringsVpcPeering {
    /**
     * The host of VPC peering connection.
     */
    host: string;
    /**
     * The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.
     */
    port: number;
}

export interface GetBackupsItem {
    /**
     * The creation time of the backup in UTC. The time format follows the ISO8601 standard, which is YYYY-MM-DD (year-month-day) + T +HH:MM:SS (hour-minutes-seconds) + Z. For example, 2020-01-01T00:00:00Z.
     */
    createTimestamp: string;
    /**
     * The description of the backup. It is specified by the user when taking a manual type backup. It helps you add additional information to the backup.
     */
    description: string;
    /**
     * The ID of the backup. It is generated by TiDB Cloud.
     */
    id: string;
    /**
     * The name of the backup.
     */
    name: string;
    /**
     * The bytes of the backup.
     */
    size: string;
    /**
     * Enum: PENDING/RUNNING/FAILED/SUCCESS.The status of backup.
     */
    status: string;
    /**
     * Enum: MANUAL/AUTO.The type of backup. TiDB Cloud only supports manual and auto backup. For more information, see [TiDB Cloud Documentation](https://docs.pingcap.com/tidbcloud/backup-and-restore#backup).
     */
    type: string;
}

export interface GetClusterSpecsItem {
    /**
     * Enum: "AWS" "GCP", The cloud provider on which your TiDB cluster is hosted.
     */
    cloudProvider: string;
    /**
     * Enum: "DEDICATED" "DEVELOPER", The cluster type.
     */
    clusterType: string;
    /**
     * the region value should match the cloud provider's region code.
     */
    region: string;
    /**
     * The list of TiDB specifications in the region.
     */
    tidbs: outputs.GetClusterSpecsItemTidb[];
    /**
     * The list of TiFlash specifications in the region.
     */
    tiflashes: outputs.GetClusterSpecsItemTiflash[];
    /**
     * The list of TiKV specifications in the region.
     */
    tikvs: outputs.GetClusterSpecsItemTikv[];
}

export interface GetClusterSpecsItemTidb {
    /**
     * The range and step of node quantity of the TiDB component in the cluster.
     */
    nodeQuantityRange: outputs.GetClusterSpecsItemTidbNodeQuantityRange;
    /**
     * The size of the TiDB component in the cluster.
     */
    nodeSize: string;
}

export interface GetClusterSpecsItemTidbNodeQuantityRange {
    /**
     * The minimum node quantity of the component in the cluster.
     */
    min: number;
    /**
     * The step of node quantity of the component in the cluster.
     */
    step: number;
}

export interface GetClusterSpecsItemTiflash {
    /**
     * The range and step of node quantity of the TiFlash component in the cluster.
     */
    nodeQuantityRange: outputs.GetClusterSpecsItemTiflashNodeQuantityRange;
    /**
     * The size of the TiFlash component in the cluster.
     */
    nodeSize: string;
    /**
     * The storage size range for each node of the TiFlash component in the cluster.
     */
    storageSizeGibRange: outputs.GetClusterSpecsItemTiflashStorageSizeGibRange;
}

export interface GetClusterSpecsItemTiflashNodeQuantityRange {
    /**
     * The minimum node quantity of the component in the cluster.
     */
    min: number;
    /**
     * The step of node quantity of the component in the cluster.
     */
    step: number;
}

export interface GetClusterSpecsItemTiflashStorageSizeGibRange {
    /**
     * The maximum storage size for each node of the component in the cluster.
     */
    max: number;
    /**
     * The minimum storage size for each node of the component in the cluster.
     */
    min: number;
}

export interface GetClusterSpecsItemTikv {
    /**
     * The range and step of node quantity of the TiKV component in the cluster.
     */
    nodeQuantityRange: outputs.GetClusterSpecsItemTikvNodeQuantityRange;
    /**
     * The size of the TiKV component in the cluster.
     */
    nodeSize: string;
    /**
     * The storage size range for each node of the TiKV component in the cluster.
     */
    storageSizeGibRange: outputs.GetClusterSpecsItemTikvStorageSizeGibRange;
}

export interface GetClusterSpecsItemTikvNodeQuantityRange {
    /**
     * The minimum node quantity of the component in the cluster.
     */
    min: number;
    /**
     * The step of node quantity of the component in the cluster.
     */
    step: number;
}

export interface GetClusterSpecsItemTikvStorageSizeGibRange {
    /**
     * The maximum storage size for each node of the component in the cluster.
     */
    max: number;
    /**
     * The minimum storage size for each node of the component in the cluster.
     */
    min: number;
}

export interface GetClustersItem {
    /**
     * Enum: "AWS" "GCP", The cloud provider on which your TiDB cluster is hosted.
     */
    cloudProvider: string;
    /**
     * The cluster type.
     */
    clusterType: string;
    /**
     * The configuration of the cluster.
     */
    config: outputs.GetClustersItemConfig;
    /**
     * The creation time of the cluster in Unix timestamp seconds (epoch time).
     */
    createTimestamp: string;
    /**
     * The ID of the cluster.
     */
    id: string;
    /**
     * The name of the cluster.
     */
    name: string;
    /**
     * The ID of the project.
     */
    projectId: string;
    /**
     * Region of the cluster.
     */
    region: string;
    /**
     * The status of the cluster.
     */
    status: outputs.GetClustersItemStatus;
}

export interface GetClustersItemConfig {
    /**
     * The components of the cluster.
     */
    components: outputs.GetClustersItemConfigComponents;
    /**
     * The TiDB port for connection. The port must be in the range of 1024-65535 except 10080, 4000 in default.
     *   - For a Serverless Tier cluster, only port 4000 is available.
     */
    port: number;
}

export interface GetClustersItemConfigComponents {
    /**
     * The TiDB component of the cluster
     */
    tidb: outputs.GetClustersItemConfigComponentsTidb;
    /**
     * The TiFlash component of the cluster.
     */
    tiflash: outputs.GetClustersItemConfigComponentsTiflash;
    /**
     * The TiKV component of the cluster
     */
    tikv: outputs.GetClustersItemConfigComponentsTikv;
}

export interface GetClustersItemConfigComponentsTidb {
    /**
     * The number of nodes in the cluster. You can get the minimum and step of a node quantity from the tidbcloud.getClusterSpecs datasource.
     */
    nodeQuantity: number;
    /**
     * The size of the TiDB component in the cluster, You can get the available node size of each region from the tidbcloud.getClusterSpecs datasource.
     *   - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
     *   - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.
     *   - Can not modify node_size of an existing cluster.
     */
    nodeSize: string;
}

export interface GetClustersItemConfigComponentsTiflash {
    /**
     * The number of nodes in the cluster. You can get the minimum and step of a node quantity from the tidbcloud.getClusterSpecs datasource.
     *   - TiFlash do not support decreasing node quantity.
     */
    nodeQuantity: number;
    /**
     * The size of the TiFlash component in the cluster, You can get the available node size of each region from the tidbcloud.getClusterSpecs datasource.
     *   - Can not modify node_size of an existing cluster.
     */
    nodeSize: string;
    /**
     * The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the tidbcloud.getClusterSpecs datasource.
     *   - Can not modify storage_size_gib of an existing cluster.
     */
    storageSizeGib: number;
}

export interface GetClustersItemConfigComponentsTikv {
    /**
     * The number of nodes in the cluster. You can get the minimum and step of a node quantity from the tidbcloud.getClusterSpecs datasource.
     *   - TiKV do not support decreasing node quantity.
     *   - The node_quantity of TiKV must be a multiple of 3.
     */
    nodeQuantity: number;
    /**
     * The size of the TiKV component in the cluster, You can get the available node size of each region from the tidbcloud.getClusterSpecs datasource.
     *   - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
     *   - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.
     *   - Can not modify node_size of an existing cluster.
     */
    nodeSize: string;
    /**
     * The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the tidbcloud.getClusterSpecs datasource.
     *   - Can not modify storage_size_gib of an existing cluster.
     */
    storageSizeGib: number;
}

export interface GetClustersItemStatus {
    /**
     * Status of the cluster.
     */
    clusterStatus: string;
    /**
     * Connection strings.
     */
    connectionStrings: outputs.GetClustersItemStatusConnectionStrings;
    /**
     * TiDB version.
     */
    tidbVersion: string;
}

export interface GetClustersItemStatusConnectionStrings {
    /**
     * The default TiDB user for connection.
     */
    defaultUser: string;
    /**
     * Standard connection string.
     */
    standard: outputs.GetClustersItemStatusConnectionStringsStandard;
    /**
     * VPC peering connection string.
     */
    vpcPeering: outputs.GetClustersItemStatusConnectionStringsVpcPeering;
}

export interface GetClustersItemStatusConnectionStringsStandard {
    /**
     * The host of standard connection.
     */
    host: string;
    /**
     * The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.
     */
    port: number;
}

export interface GetClustersItemStatusConnectionStringsVpcPeering {
    /**
     * The host of VPC peering connection.
     */
    host: string;
    /**
     * The TiDB port for connection. The port must be in the range of 1024-65535 except 10080.
     */
    port: number;
}

export interface GetProjectsItem {
    /**
     * The number of TiDB Cloud clusters deployed in the project.
     */
    clusterCount: number;
    /**
     * The creation time of the cluster in Unix timestamp seconds (epoch time).
     */
    createTimestamp: string;
    /**
     * The ID of the project.
     */
    id: string;
    /**
     * The name of the project.
     */
    name: string;
    /**
     * The ID of the TiDB Cloud organization to which the project belongs.
     */
    orgId: string;
    /**
     * The number of users in the project.
     */
    userCount: number;
}

export interface GetRestoresItem {
    /**
     * The ID of the backup.
     */
    backupId: string;
    /**
     * The information of the restored cluster. The restored cluster is the new cluster your backup data is restored to.
     */
    cluster: outputs.GetRestoresItemCluster;
    /**
     * The cluster ID of the backup.
     */
    clusterId: string;
    /**
     * The creation time of the backup in UTC.The time format follows the ISO8601 standard, which is YYYY-MM-DD (year-month-day) + T +HH:MM:SS (hour-minutes-seconds) + Z. For example, 2020-01-01T00:00:00Z.
     */
    createTimestamp: string;
    /**
     * The error message of restore if failed.
     */
    errorMessage: string;
    /**
     * The ID of the restore task.
     */
    id: string;
    /**
     * Enum: "PENDING" "RUNNING" "FAILED" "SUCCESS", The status of the restore task.
     */
    status: string;
}

export interface GetRestoresItemCluster {
    /**
     * The ID of the restored cluster. The restored cluster is the new cluster your backup data is restored to.
     */
    id: string;
    /**
     * The name of the restored cluster. The restored cluster is the new cluster your backup data is restored to.
     */
    name: string;
    /**
     * The status of the restored cluster. Possible values are "AVAILABLE", "CREATING", "MODIFYING", "PAUSED", "RESUMING", and "CLEARED".
     */
    status: string;
}

export interface ImportAllCompletedTable {
    message: string;
    result: string;
    tableName: string;
}

export interface ImportCsvFormat {
    /**
     * In CSV file whether to parse backslash inside fields as escape characters (default true).
     */
    backslashEscape?: boolean;
    /**
     * The delimiter used for quoting of CSV file (default "\"").
     */
    delimiter?: string;
    /**
     * In CSV file whether regard the first row as header (default true).
     */
    header?: boolean;
    /**
     * The field separator of CSV file (default ",").
     */
    separator?: string;
    /**
     * In CSV file whether to treat Separator as the line terminator and trim all trailing separators (default false).
     */
    trimLastSeparator?: boolean;
}

export interface ImportTargetTable {
    /**
     * The database of your cluster.
     */
    database?: string;
    /**
     * The table of your cluster.
     */
    table?: string;
}

export interface RestoreCluster {
    /**
     * The ID of the restored cluster. The restored cluster is the new cluster your backup data is restored to.
     */
    id: string;
    /**
     * The name of the restored cluster. The restored cluster is the new cluster your backup data is restored to.
     */
    name: string;
    /**
     * The status of the restored cluster. Possible values are "AVAILABLE", "CREATING", "MODIFYING", "PAUSED", "RESUMING","UNAVAILABLE", "IMPORTING" and "CLEARED".
     */
    status: string;
}

export interface RestoreConfig {
    /**
     * The components of the cluster.
     *   - For a Serverless Tier cluster, the components value can not be set.  - For a Dedicated Tier cluster, the components value must be set.
     */
    components: outputs.RestoreConfigComponents;
    /**
     * A list of IP addresses and Classless Inter-Domain Routing (CIDR) addresses that are allowed to access the TiDB Cloud cluster via [standard connection](https://docs.pingcap.com/tidbcloud/connect-to-tidb-cluster#connect-via-standard-connection).
     */
    ipAccessLists?: outputs.RestoreConfigIpAccessList[];
    /**
     * The TiDB port for connection. The port must be in the range of 1024-65535 except 10080, 4000 in default.
     *   - For a Serverless Tier cluster, only port 4000 is available.
     */
    port: number;
    /**
     * The root password to access the cluster. It must be 8-64 characters.
     */
    rootPassword: string;
}

export interface RestoreConfigComponents {
    tidb: outputs.RestoreConfigComponentsTidb;
    tiflash?: outputs.RestoreConfigComponentsTiflash;
    tikv: outputs.RestoreConfigComponentsTikv;
}

export interface RestoreConfigComponentsTidb {
    /**
     * The number of nodes in the cluster. You can get the minimum and step of a node quantity from the tidbcloud.getClusterSpecs datasource.
     */
    nodeQuantity: number;
    /**
     * The size of the TiDB component in the cluster, You can get the available node size of each region from the tidbcloud.getClusterSpecs datasource.
     *   - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
     *   - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.
     *   - Can not modify node_size of an existing cluster.
     */
    nodeSize: string;
}

export interface RestoreConfigComponentsTiflash {
    /**
     * The number of nodes in the cluster. You can get the minimum and step of a node quantity from the tidbcloud.getClusterSpecs datasource.
     */
    nodeQuantity: number;
    /**
     * The size of the TiFlash component in the cluster, You can get the available node size of each region from the tidbcloud.getClusterSpecs datasource.
     *   - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
     *   - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.
     *   - Can not modify node_size of an existing cluster.
     */
    nodeSize: string;
    /**
     * The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the tidbcloud.getClusterSpecs datasource.
     *   - Can not modify storage_size_gib of an existing cluster.
     */
    storageSizeGib: number;
}

export interface RestoreConfigComponentsTikv {
    /**
     * The number of nodes in the cluster. You can get the minimum and step of a node quantity from the tidbcloud.getClusterSpecs datasource.
     */
    nodeQuantity: number;
    /**
     * The size of the TiKV component in the cluster, You can get the available node size of each region from the tidbcloud.getClusterSpecs datasource.
     *   - If the vCPUs of TiDB or TiKV component is 2 or 4, then their vCPUs need to be the same.
     *   - If the vCPUs of TiDB or TiKV component is 2 or 4, then the cluster does not support TiFlash.
     *   - Can not modify node_size of an existing cluster.
     */
    nodeSize: string;
    /**
     * The storage size of a node in the cluster. You can get the minimum and maximum of storage size from the tidbcloud.getClusterSpecs datasource.
     *   - Can not modify storage_size_gib of an existing cluster.
     */
    storageSizeGib: number;
}

export interface RestoreConfigIpAccessList {
    /**
     * The IP address or CIDR range that you want to add to the cluster's IP access list.
     */
    cidr: string;
    /**
     * Description that explains the purpose of the entry.
     */
    description: string;
}

