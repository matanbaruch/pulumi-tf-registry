// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRestores(args: GetRestoresArgs, opts?: pulumi.InvokeOptions): Promise<GetRestoresResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tidbcloud:index/getRestores:getRestores", {
        "page": args.page,
        "pageSize": args.pageSize,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRestores.
 */
export interface GetRestoresArgs {
    page?: number;
    pageSize?: number;
    projectId: string;
}

/**
 * A collection of values returned by getRestores.
 */
export interface GetRestoresResult {
    readonly id: string;
    readonly items: outputs.GetRestoresItem[];
    readonly page: number;
    readonly pageSize: number;
    readonly projectId: string;
    readonly total: number;
}
export function getRestoresOutput(args: GetRestoresOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRestoresResult> {
    return pulumi.output(args).apply((a: any) => getRestores(a, opts))
}

/**
 * A collection of arguments for invoking getRestores.
 */
export interface GetRestoresOutputArgs {
    page?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
    projectId: pulumi.Input<string>;
}
