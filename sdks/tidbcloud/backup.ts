// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Backup extends pulumi.CustomResource {
    /**
     * Get an existing Backup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupState, opts?: pulumi.CustomResourceOptions): Backup {
        return new Backup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tidbcloud:index/backup:Backup';

    /**
     * Returns true if the given object is an instance of Backup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Backup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Backup.__pulumiType;
    }

    /**
     * The ID of your cluster that you want to take a manual backup.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * The creation time of the backup in UTC. The time format follows the ISO8601 standard, which is YYYY-MM-DD
     * (year-month-day) + T +HH:MM:SS (hour-minutes-seconds) + Z. For example, 2020-01-01T00:00:00Z.
     */
    public /*out*/ readonly createTimestamp!: pulumi.Output<string>;
    /**
     * The description of the backup. It helps you add additional information to the backup. Allows up to 256 characters.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Specify the name for a manual backup. It is recommended that you use a unique name, so that it is easy to distinguish
     * the backup when you query the backups.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project. You can get the project ID from tidbcloud.getProjects datasource.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The bytes of the backup.
     */
    public /*out*/ readonly size!: pulumi.Output<string>;
    /**
     * Enum: PENDING/RUNNING/FAILED/SUCCESS.The status of backup.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Enum: MANUAL/AUTO.The type of backup. TiDB Cloud only supports manual and auto backup. For more information, see [TiDB
     * Cloud Documentation](https://docs.pingcap.com/tidbcloud/backup-and-restore#backup).
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Backup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackupArgs | BackupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackupState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["createTimestamp"] = state ? state.createTimestamp : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as BackupArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["createTimestamp"] = undefined /*out*/;
            resourceInputs["size"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Backup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Backup resources.
 */
export interface BackupState {
    /**
     * The ID of your cluster that you want to take a manual backup.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The creation time of the backup in UTC. The time format follows the ISO8601 standard, which is YYYY-MM-DD
     * (year-month-day) + T +HH:MM:SS (hour-minutes-seconds) + Z. For example, 2020-01-01T00:00:00Z.
     */
    createTimestamp?: pulumi.Input<string>;
    /**
     * The description of the backup. It helps you add additional information to the backup. Allows up to 256 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Specify the name for a manual backup. It is recommended that you use a unique name, so that it is easy to distinguish
     * the backup when you query the backups.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project. You can get the project ID from tidbcloud.getProjects datasource.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The bytes of the backup.
     */
    size?: pulumi.Input<string>;
    /**
     * Enum: PENDING/RUNNING/FAILED/SUCCESS.The status of backup.
     */
    status?: pulumi.Input<string>;
    /**
     * Enum: MANUAL/AUTO.The type of backup. TiDB Cloud only supports manual and auto backup. For more information, see [TiDB
     * Cloud Documentation](https://docs.pingcap.com/tidbcloud/backup-and-restore#backup).
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Backup resource.
 */
export interface BackupArgs {
    /**
     * The ID of your cluster that you want to take a manual backup.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The description of the backup. It helps you add additional information to the backup. Allows up to 256 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Specify the name for a manual backup. It is recommended that you use a unique name, so that it is easy to distinguish
     * the backup when you query the backups.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project. You can get the project ID from tidbcloud.getProjects datasource.
     */
    projectId: pulumi.Input<string>;
}
