// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPassword(args: GetPasswordArgs, opts?: pulumi.InvokeOptions): Promise<GetPasswordResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pass:index/getPassword:getPassword", {
        "id": args.id,
        "path": args.path,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPassword.
 */
export interface GetPasswordArgs {
    id?: string;
    path: string;
}

/**
 * A collection of values returned by getPassword.
 */
export interface GetPasswordResult {
    readonly body: string;
    readonly data: {[key: string]: string};
    readonly full: string;
    readonly id: string;
    readonly password: string;
    readonly path: string;
}
export function getPasswordOutput(args: GetPasswordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPasswordResult> {
    return pulumi.output(args).apply((a: any) => getPassword(a, opts))
}

/**
 * A collection of arguments for invoking getPassword.
 */
export interface GetPasswordOutputArgs {
    id?: pulumi.Input<string>;
    path: pulumi.Input<string>;
}
