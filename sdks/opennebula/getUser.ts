// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getUser(args?: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opennebula:index/getUser:getUser", {
        "groups": args.groups,
        "id": args.id,
        "name": args.name,
        "primaryGroup": args.primaryGroup,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    groups?: number[];
    id?: number;
    name?: string;
    primaryGroup?: number;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    readonly groups?: number[];
    readonly id?: number;
    readonly name?: string;
    readonly primaryGroup?: number;
    readonly tags?: {[key: string]: string};
}
export function getUserOutput(args?: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply((a: any) => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    groups?: pulumi.Input<pulumi.Input<number>[]>;
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    primaryGroup?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
