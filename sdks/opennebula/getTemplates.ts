// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTemplates(args?: GetTemplatesArgs, opts?: pulumi.InvokeOptions): Promise<GetTemplatesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opennebula:index/getTemplates:getTemplates", {
        "cpu": args.cpu,
        "hasCpu": args.hasCpu,
        "hasMemory": args.hasMemory,
        "hasVcpu": args.hasVcpu,
        "id": args.id,
        "memory": args.memory,
        "nameRegex": args.nameRegex,
        "order": args.order,
        "sortOn": args.sortOn,
        "tags": args.tags,
        "vcpu": args.vcpu,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTemplates.
 */
export interface GetTemplatesArgs {
    cpu?: number;
    hasCpu?: boolean;
    hasMemory?: boolean;
    hasVcpu?: boolean;
    id?: string;
    memory?: number;
    nameRegex?: string;
    order?: string;
    sortOn?: string;
    tags?: {[key: string]: string};
    vcpu?: number;
}

/**
 * A collection of values returned by getTemplates.
 */
export interface GetTemplatesResult {
    readonly cpu: number;
    readonly hasCpu?: boolean;
    readonly hasMemory?: boolean;
    readonly hasVcpu?: boolean;
    readonly id: string;
    readonly memory: number;
    readonly nameRegex?: string;
    readonly order?: string;
    readonly sortOn?: string;
    readonly tags?: {[key: string]: string};
    readonly templates: outputs.GetTemplatesTemplate[];
    readonly vcpu: number;
}
export function getTemplatesOutput(args?: GetTemplatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTemplatesResult> {
    return pulumi.output(args).apply((a: any) => getTemplates(a, opts))
}

/**
 * A collection of arguments for invoking getTemplates.
 */
export interface GetTemplatesOutputArgs {
    cpu?: pulumi.Input<number>;
    hasCpu?: pulumi.Input<boolean>;
    hasMemory?: pulumi.Input<boolean>;
    hasVcpu?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    memory?: pulumi.Input<number>;
    nameRegex?: pulumi.Input<string>;
    order?: pulumi.Input<string>;
    sortOn?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vcpu?: pulumi.Input<number>;
}
