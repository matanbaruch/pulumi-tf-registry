// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTemplate(args: GetTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dme:index/getTemplate:getTemplate", {
        "domainIds": args.domainIds,
        "id": args.id,
        "name": args.name,
        "publicTemplate": args.publicTemplate,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTemplate.
 */
export interface GetTemplateArgs {
    domainIds?: number[];
    id?: string;
    name: string;
    publicTemplate?: string;
}

/**
 * A collection of values returned by getTemplate.
 */
export interface GetTemplateResult {
    readonly domainIds: number[];
    readonly id: string;
    readonly name: string;
    readonly publicTemplate: string;
}
export function getTemplateOutput(args: GetTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTemplateResult> {
    return pulumi.output(args).apply((a: any) => getTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getTemplate.
 */
export interface GetTemplateOutputArgs {
    domainIds?: pulumi.Input<pulumi.Input<number>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    publicTemplate?: pulumi.Input<string>;
}
