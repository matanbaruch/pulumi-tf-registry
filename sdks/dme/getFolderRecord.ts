// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFolderRecord(args: GetFolderRecordArgs, opts?: pulumi.InvokeOptions): Promise<GetFolderRecordResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dme:index/getFolderRecord:getFolderRecord", {
        "defaultFolder": args.defaultFolder,
        "domains": args.domains,
        "folderPermissions": args.folderPermissions,
        "id": args.id,
        "name": args.name,
        "secondaries": args.secondaries,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFolderRecord.
 */
export interface GetFolderRecordArgs {
    defaultFolder?: string;
    domains?: string[];
    folderPermissions?: inputs.GetFolderRecordFolderPermission[];
    id?: string;
    name: string;
    secondaries?: string[];
}

/**
 * A collection of values returned by getFolderRecord.
 */
export interface GetFolderRecordResult {
    readonly defaultFolder: string;
    readonly domains: string[];
    readonly folderPermissions?: outputs.GetFolderRecordFolderPermission[];
    readonly id: string;
    readonly name: string;
    readonly secondaries: string[];
}
export function getFolderRecordOutput(args: GetFolderRecordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFolderRecordResult> {
    return pulumi.output(args).apply((a: any) => getFolderRecord(a, opts))
}

/**
 * A collection of arguments for invoking getFolderRecord.
 */
export interface GetFolderRecordOutputArgs {
    defaultFolder?: pulumi.Input<string>;
    domains?: pulumi.Input<pulumi.Input<string>[]>;
    folderPermissions?: pulumi.Input<pulumi.Input<inputs.GetFolderRecordFolderPermissionArgs>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    secondaries?: pulumi.Input<pulumi.Input<string>[]>;
}
