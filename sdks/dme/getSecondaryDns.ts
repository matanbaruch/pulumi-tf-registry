// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSecondaryDns(args: GetSecondaryDnsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecondaryDnsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dme:index/getSecondaryDns:getSecondaryDns", {
        "folderId": args.folderId,
        "id": args.id,
        "ipsetId": args.ipsetId,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecondaryDns.
 */
export interface GetSecondaryDnsArgs {
    folderId?: string;
    id?: string;
    ipsetId?: string;
    name: string;
}

/**
 * A collection of values returned by getSecondaryDns.
 */
export interface GetSecondaryDnsResult {
    readonly folderId: string;
    readonly id: string;
    readonly ipsetId: string;
    readonly name: string;
}
export function getSecondaryDnsOutput(args: GetSecondaryDnsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecondaryDnsResult> {
    return pulumi.output(args).apply((a: any) => getSecondaryDns(a, opts))
}

/**
 * A collection of arguments for invoking getSecondaryDns.
 */
export interface GetSecondaryDnsOutputArgs {
    folderId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ipsetId?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
