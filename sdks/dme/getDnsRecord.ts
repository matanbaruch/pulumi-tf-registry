// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDnsRecord(args: GetDnsRecordArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsRecordResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dme:index/getDnsRecord:getDnsRecord", {
        "caaType": args.caaType,
        "description": args.description,
        "domainId": args.domainId,
        "dynamicDns": args.dynamicDns,
        "gtdLocation": args.gtdLocation,
        "hardlink": args.hardlink,
        "id": args.id,
        "issuerCritical": args.issuerCritical,
        "keywords": args.keywords,
        "mxLevel": args.mxLevel,
        "name": args.name,
        "password": args.password,
        "port": args.port,
        "priority": args.priority,
        "redirectType": args.redirectType,
        "title": args.title,
        "ttl": args.ttl,
        "type": args.type,
        "value": args.value,
        "weight": args.weight,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnsRecord.
 */
export interface GetDnsRecordArgs {
    caaType?: string;
    description?: string;
    domainId: string;
    dynamicDns?: string;
    gtdLocation?: string;
    hardlink?: string;
    id?: string;
    issuerCritical?: string;
    keywords?: string;
    mxLevel?: string;
    name: string;
    password?: string;
    port?: string;
    priority?: string;
    redirectType?: string;
    title?: string;
    ttl?: string;
    type: string;
    value?: string;
    weight?: string;
}

/**
 * A collection of values returned by getDnsRecord.
 */
export interface GetDnsRecordResult {
    readonly caaType: string;
    readonly description: string;
    readonly domainId: string;
    readonly dynamicDns: string;
    readonly gtdLocation: string;
    readonly hardlink: string;
    readonly id: string;
    readonly issuerCritical: string;
    readonly keywords: string;
    readonly mxLevel: string;
    readonly name: string;
    readonly password: string;
    readonly port: string;
    readonly priority: string;
    readonly redirectType: string;
    readonly title: string;
    readonly ttl: string;
    readonly type: string;
    readonly value: string;
    readonly weight: string;
}
export function getDnsRecordOutput(args: GetDnsRecordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDnsRecordResult> {
    return pulumi.output(args).apply((a: any) => getDnsRecord(a, opts))
}

/**
 * A collection of arguments for invoking getDnsRecord.
 */
export interface GetDnsRecordOutputArgs {
    caaType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainId: pulumi.Input<string>;
    dynamicDns?: pulumi.Input<string>;
    gtdLocation?: pulumi.Input<string>;
    hardlink?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    issuerCritical?: pulumi.Input<string>;
    keywords?: pulumi.Input<string>;
    mxLevel?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    priority?: pulumi.Input<string>;
    redirectType?: pulumi.Input<string>;
    title?: pulumi.Input<string>;
    ttl?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value?: pulumi.Input<string>;
    weight?: pulumi.Input<string>;
}
