// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCustomSoaRecord(args: GetCustomSoaRecordArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomSoaRecordResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dme:index/getCustomSoaRecord:getCustomSoaRecord", {
        "comp": args.comp,
        "email": args.email,
        "expire": args.expire,
        "id": args.id,
        "name": args.name,
        "negativeCache": args.negativeCache,
        "refresh": args.refresh,
        "retry": args.retry,
        "serial": args.serial,
        "ttl": args.ttl,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCustomSoaRecord.
 */
export interface GetCustomSoaRecordArgs {
    comp?: string;
    email?: string;
    expire?: string;
    id?: string;
    name: string;
    negativeCache?: string;
    refresh?: string;
    retry?: string;
    serial?: string;
    ttl?: string;
}

/**
 * A collection of values returned by getCustomSoaRecord.
 */
export interface GetCustomSoaRecordResult {
    readonly comp: string;
    readonly email: string;
    readonly expire: string;
    readonly id: string;
    readonly name: string;
    readonly negativeCache: string;
    readonly refresh: string;
    readonly retry: string;
    readonly serial: string;
    readonly ttl: string;
}
export function getCustomSoaRecordOutput(args: GetCustomSoaRecordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomSoaRecordResult> {
    return pulumi.output(args).apply((a: any) => getCustomSoaRecord(a, opts))
}

/**
 * A collection of arguments for invoking getCustomSoaRecord.
 */
export interface GetCustomSoaRecordOutputArgs {
    comp?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    expire?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    negativeCache?: pulumi.Input<string>;
    refresh?: pulumi.Input<string>;
    retry?: pulumi.Input<string>;
    serial?: pulumi.Input<string>;
    ttl?: pulumi.Input<string>;
}
