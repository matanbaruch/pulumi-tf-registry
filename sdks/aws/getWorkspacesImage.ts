// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getWorkspacesImage(args: GetWorkspacesImageArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspacesImageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getWorkspacesImage:getWorkspacesImage", {
        "id": args.id,
        "imageId": args.imageId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkspacesImage.
 */
export interface GetWorkspacesImageArgs {
    id?: string;
    imageId: string;
}

/**
 * A collection of values returned by getWorkspacesImage.
 */
export interface GetWorkspacesImageResult {
    readonly description: string;
    readonly id: string;
    readonly imageId: string;
    readonly name: string;
    readonly operatingSystemType: string;
    readonly requiredTenancy: string;
    readonly state: string;
}
export function getWorkspacesImageOutput(args: GetWorkspacesImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspacesImageResult> {
    return pulumi.output(args).apply((a: any) => getWorkspacesImage(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspacesImage.
 */
export interface GetWorkspacesImageOutputArgs {
    id?: pulumi.Input<string>;
    imageId: pulumi.Input<string>;
}
