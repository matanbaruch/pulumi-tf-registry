// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRoute53ResolverFirewallRuleGroup(args: GetRoute53ResolverFirewallRuleGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetRoute53ResolverFirewallRuleGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getRoute53ResolverFirewallRuleGroup:getRoute53ResolverFirewallRuleGroup", {
        "firewallRuleGroupId": args.firewallRuleGroupId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoute53ResolverFirewallRuleGroup.
 */
export interface GetRoute53ResolverFirewallRuleGroupArgs {
    firewallRuleGroupId: string;
    id?: string;
}

/**
 * A collection of values returned by getRoute53ResolverFirewallRuleGroup.
 */
export interface GetRoute53ResolverFirewallRuleGroupResult {
    readonly arn: string;
    readonly creationTime: string;
    readonly creatorRequestId: string;
    readonly firewallRuleGroupId: string;
    readonly id: string;
    readonly modificationTime: string;
    readonly name: string;
    readonly ownerId: string;
    readonly ruleCount: number;
    readonly shareStatus: string;
    readonly status: string;
    readonly statusMessage: string;
}
export function getRoute53ResolverFirewallRuleGroupOutput(args: GetRoute53ResolverFirewallRuleGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoute53ResolverFirewallRuleGroupResult> {
    return pulumi.output(args).apply((a: any) => getRoute53ResolverFirewallRuleGroup(a, opts))
}

/**
 * A collection of arguments for invoking getRoute53ResolverFirewallRuleGroup.
 */
export interface GetRoute53ResolverFirewallRuleGroupOutputArgs {
    firewallRuleGroupId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
