// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DxGatewayAssociation extends pulumi.CustomResource {
    /**
     * Get an existing DxGatewayAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DxGatewayAssociationState, opts?: pulumi.CustomResourceOptions): DxGatewayAssociation {
        return new DxGatewayAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/dxGatewayAssociation:DxGatewayAssociation';

    /**
     * Returns true if the given object is an instance of DxGatewayAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DxGatewayAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DxGatewayAssociation.__pulumiType;
    }

    public readonly allowedPrefixes!: pulumi.Output<string[]>;
    public readonly associatedGatewayId!: pulumi.Output<string>;
    public readonly associatedGatewayOwnerAccountId!: pulumi.Output<string>;
    public /*out*/ readonly associatedGatewayType!: pulumi.Output<string>;
    public /*out*/ readonly dxGatewayAssociationId!: pulumi.Output<string>;
    public readonly dxGatewayId!: pulumi.Output<string>;
    public /*out*/ readonly dxGatewayOwnerAccountId!: pulumi.Output<string>;
    public readonly proposalId!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.DxGatewayAssociationTimeouts | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly vpnGatewayId!: pulumi.Output<string | undefined>;

    /**
     * Create a DxGatewayAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DxGatewayAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DxGatewayAssociationArgs | DxGatewayAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DxGatewayAssociationState | undefined;
            resourceInputs["allowedPrefixes"] = state ? state.allowedPrefixes : undefined;
            resourceInputs["associatedGatewayId"] = state ? state.associatedGatewayId : undefined;
            resourceInputs["associatedGatewayOwnerAccountId"] = state ? state.associatedGatewayOwnerAccountId : undefined;
            resourceInputs["associatedGatewayType"] = state ? state.associatedGatewayType : undefined;
            resourceInputs["dxGatewayAssociationId"] = state ? state.dxGatewayAssociationId : undefined;
            resourceInputs["dxGatewayId"] = state ? state.dxGatewayId : undefined;
            resourceInputs["dxGatewayOwnerAccountId"] = state ? state.dxGatewayOwnerAccountId : undefined;
            resourceInputs["proposalId"] = state ? state.proposalId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vpnGatewayId"] = state ? state.vpnGatewayId : undefined;
        } else {
            const args = argsOrState as DxGatewayAssociationArgs | undefined;
            if ((!args || args.dxGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dxGatewayId'");
            }
            resourceInputs["allowedPrefixes"] = args ? args.allowedPrefixes : undefined;
            resourceInputs["associatedGatewayId"] = args ? args.associatedGatewayId : undefined;
            resourceInputs["associatedGatewayOwnerAccountId"] = args ? args.associatedGatewayOwnerAccountId : undefined;
            resourceInputs["dxGatewayId"] = args ? args.dxGatewayId : undefined;
            resourceInputs["proposalId"] = args ? args.proposalId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vpnGatewayId"] = args ? args.vpnGatewayId : undefined;
            resourceInputs["associatedGatewayType"] = undefined /*out*/;
            resourceInputs["dxGatewayAssociationId"] = undefined /*out*/;
            resourceInputs["dxGatewayOwnerAccountId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DxGatewayAssociation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DxGatewayAssociation resources.
 */
export interface DxGatewayAssociationState {
    allowedPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    associatedGatewayId?: pulumi.Input<string>;
    associatedGatewayOwnerAccountId?: pulumi.Input<string>;
    associatedGatewayType?: pulumi.Input<string>;
    dxGatewayAssociationId?: pulumi.Input<string>;
    dxGatewayId?: pulumi.Input<string>;
    dxGatewayOwnerAccountId?: pulumi.Input<string>;
    proposalId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DxGatewayAssociationTimeouts>;
    /**
     * @deprecated Deprecated
     */
    vpnGatewayId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DxGatewayAssociation resource.
 */
export interface DxGatewayAssociationArgs {
    allowedPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    associatedGatewayId?: pulumi.Input<string>;
    associatedGatewayOwnerAccountId?: pulumi.Input<string>;
    dxGatewayId: pulumi.Input<string>;
    proposalId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DxGatewayAssociationTimeouts>;
    /**
     * @deprecated Deprecated
     */
    vpnGatewayId?: pulumi.Input<string>;
}
