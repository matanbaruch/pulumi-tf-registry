// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCodecommitRepository(args: GetCodecommitRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetCodecommitRepositoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getCodecommitRepository:getCodecommitRepository", {
        "id": args.id,
        "repositoryName": args.repositoryName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCodecommitRepository.
 */
export interface GetCodecommitRepositoryArgs {
    id?: string;
    repositoryName: string;
}

/**
 * A collection of values returned by getCodecommitRepository.
 */
export interface GetCodecommitRepositoryResult {
    readonly arn: string;
    readonly cloneUrlHttp: string;
    readonly cloneUrlSsh: string;
    readonly id: string;
    readonly kmsKeyId: string;
    readonly repositoryId: string;
    readonly repositoryName: string;
}
export function getCodecommitRepositoryOutput(args: GetCodecommitRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCodecommitRepositoryResult> {
    return pulumi.output(args).apply((a: any) => getCodecommitRepository(a, opts))
}

/**
 * A collection of arguments for invoking getCodecommitRepository.
 */
export interface GetCodecommitRepositoryOutputArgs {
    id?: pulumi.Input<string>;
    repositoryName: pulumi.Input<string>;
}
