// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConnectContactFlow(args: GetConnectContactFlowArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectContactFlowResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getConnectContactFlow:getConnectContactFlow", {
        "contactFlowId": args.contactFlowId,
        "id": args.id,
        "instanceId": args.instanceId,
        "name": args.name,
        "tags": args.tags,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectContactFlow.
 */
export interface GetConnectContactFlowArgs {
    contactFlowId?: string;
    id?: string;
    instanceId: string;
    name?: string;
    tags?: {[key: string]: string};
    type?: string;
}

/**
 * A collection of values returned by getConnectContactFlow.
 */
export interface GetConnectContactFlowResult {
    readonly arn: string;
    readonly contactFlowId: string;
    readonly content: string;
    readonly description: string;
    readonly id: string;
    readonly instanceId: string;
    readonly name: string;
    readonly tags: {[key: string]: string};
    readonly type?: string;
}
export function getConnectContactFlowOutput(args: GetConnectContactFlowOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectContactFlowResult> {
    return pulumi.output(args).apply((a: any) => getConnectContactFlow(a, opts))
}

/**
 * A collection of arguments for invoking getConnectContactFlow.
 */
export interface GetConnectContactFlowOutputArgs {
    contactFlowId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type?: pulumi.Input<string>;
}
