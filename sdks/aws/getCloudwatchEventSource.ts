// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudwatchEventSource(args?: GetCloudwatchEventSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudwatchEventSourceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getCloudwatchEventSource:getCloudwatchEventSource", {
        "id": args.id,
        "namePrefix": args.namePrefix,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudwatchEventSource.
 */
export interface GetCloudwatchEventSourceArgs {
    id?: string;
    namePrefix?: string;
}

/**
 * A collection of values returned by getCloudwatchEventSource.
 */
export interface GetCloudwatchEventSourceResult {
    readonly arn: string;
    readonly createdBy: string;
    readonly id: string;
    readonly name: string;
    readonly namePrefix?: string;
    readonly state: string;
}
export function getCloudwatchEventSourceOutput(args?: GetCloudwatchEventSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudwatchEventSourceResult> {
    return pulumi.output(args).apply((a: any) => getCloudwatchEventSource(a, opts))
}

/**
 * A collection of arguments for invoking getCloudwatchEventSource.
 */
export interface GetCloudwatchEventSourceOutputArgs {
    id?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
}
