// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudfrontOriginRequestPolicy extends pulumi.CustomResource {
    /**
     * Get an existing CloudfrontOriginRequestPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudfrontOriginRequestPolicyState, opts?: pulumi.CustomResourceOptions): CloudfrontOriginRequestPolicy {
        return new CloudfrontOriginRequestPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/cloudfrontOriginRequestPolicy:CloudfrontOriginRequestPolicy';

    /**
     * Returns true if the given object is an instance of CloudfrontOriginRequestPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudfrontOriginRequestPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudfrontOriginRequestPolicy.__pulumiType;
    }

    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly cookiesConfig!: pulumi.Output<outputs.CloudfrontOriginRequestPolicyCookiesConfig>;
    public /*out*/ readonly etag!: pulumi.Output<string>;
    public readonly headersConfig!: pulumi.Output<outputs.CloudfrontOriginRequestPolicyHeadersConfig>;
    public readonly name!: pulumi.Output<string>;
    public readonly queryStringsConfig!: pulumi.Output<outputs.CloudfrontOriginRequestPolicyQueryStringsConfig>;

    /**
     * Create a CloudfrontOriginRequestPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudfrontOriginRequestPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudfrontOriginRequestPolicyArgs | CloudfrontOriginRequestPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudfrontOriginRequestPolicyState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["cookiesConfig"] = state ? state.cookiesConfig : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["headersConfig"] = state ? state.headersConfig : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["queryStringsConfig"] = state ? state.queryStringsConfig : undefined;
        } else {
            const args = argsOrState as CloudfrontOriginRequestPolicyArgs | undefined;
            if ((!args || args.cookiesConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cookiesConfig'");
            }
            if ((!args || args.headersConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'headersConfig'");
            }
            if ((!args || args.queryStringsConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'queryStringsConfig'");
            }
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["cookiesConfig"] = args ? args.cookiesConfig : undefined;
            resourceInputs["headersConfig"] = args ? args.headersConfig : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["queryStringsConfig"] = args ? args.queryStringsConfig : undefined;
            resourceInputs["etag"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudfrontOriginRequestPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudfrontOriginRequestPolicy resources.
 */
export interface CloudfrontOriginRequestPolicyState {
    comment?: pulumi.Input<string>;
    cookiesConfig?: pulumi.Input<inputs.CloudfrontOriginRequestPolicyCookiesConfig>;
    etag?: pulumi.Input<string>;
    headersConfig?: pulumi.Input<inputs.CloudfrontOriginRequestPolicyHeadersConfig>;
    name?: pulumi.Input<string>;
    queryStringsConfig?: pulumi.Input<inputs.CloudfrontOriginRequestPolicyQueryStringsConfig>;
}

/**
 * The set of arguments for constructing a CloudfrontOriginRequestPolicy resource.
 */
export interface CloudfrontOriginRequestPolicyArgs {
    comment?: pulumi.Input<string>;
    cookiesConfig: pulumi.Input<inputs.CloudfrontOriginRequestPolicyCookiesConfig>;
    headersConfig: pulumi.Input<inputs.CloudfrontOriginRequestPolicyHeadersConfig>;
    name?: pulumi.Input<string>;
    queryStringsConfig: pulumi.Input<inputs.CloudfrontOriginRequestPolicyQueryStringsConfig>;
}
