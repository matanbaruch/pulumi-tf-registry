// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCognitoUserGroup(args: GetCognitoUserGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetCognitoUserGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getCognitoUserGroup:getCognitoUserGroup", {
        "name": args.name,
        "userPoolId": args.userPoolId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCognitoUserGroup.
 */
export interface GetCognitoUserGroupArgs {
    name: string;
    userPoolId: string;
}

/**
 * A collection of values returned by getCognitoUserGroup.
 */
export interface GetCognitoUserGroupResult {
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly precedence: number;
    readonly roleArn: string;
    readonly userPoolId: string;
}
export function getCognitoUserGroupOutput(args: GetCognitoUserGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCognitoUserGroupResult> {
    return pulumi.output(args).apply((a: any) => getCognitoUserGroup(a, opts))
}

/**
 * A collection of arguments for invoking getCognitoUserGroup.
 */
export interface GetCognitoUserGroupOutputArgs {
    name: pulumi.Input<string>;
    userPoolId: pulumi.Input<string>;
}
