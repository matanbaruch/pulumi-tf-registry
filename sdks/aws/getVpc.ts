// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpc(args?: GetVpcArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getVpc:getVpc", {
        "cidrBlock": args.cidrBlock,
        "default": args.default,
        "dhcpOptionsId": args.dhcpOptionsId,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
        "tags": args.tags,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpc.
 */
export interface GetVpcArgs {
    cidrBlock?: string;
    default?: boolean;
    dhcpOptionsId?: string;
    filters?: inputs.GetVpcFilter[];
    id?: string;
    state?: string;
    tags?: {[key: string]: string};
    timeouts?: inputs.GetVpcTimeouts;
}

/**
 * A collection of values returned by getVpc.
 */
export interface GetVpcResult {
    readonly arn: string;
    readonly cidrBlock: string;
    readonly cidrBlockAssociations: outputs.GetVpcCidrBlockAssociation[];
    readonly default: boolean;
    readonly dhcpOptionsId: string;
    readonly enableDnsHostnames: boolean;
    readonly enableDnsSupport: boolean;
    readonly enableNetworkAddressUsageMetrics: boolean;
    readonly filters?: outputs.GetVpcFilter[];
    readonly id: string;
    readonly instanceTenancy: string;
    readonly ipv6AssociationId: string;
    readonly ipv6CidrBlock: string;
    readonly mainRouteTableId: string;
    readonly ownerId: string;
    readonly state: string;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetVpcTimeouts;
}
export function getVpcOutput(args?: GetVpcOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcResult> {
    return pulumi.output(args).apply((a: any) => getVpc(a, opts))
}

/**
 * A collection of arguments for invoking getVpc.
 */
export interface GetVpcOutputArgs {
    cidrBlock?: pulumi.Input<string>;
    default?: pulumi.Input<boolean>;
    dhcpOptionsId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetVpcFilterArgs>[]>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.GetVpcTimeoutsArgs>;
}
