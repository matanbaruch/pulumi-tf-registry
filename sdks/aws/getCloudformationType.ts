// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudformationType(args?: GetCloudformationTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudformationTypeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getCloudformationType:getCloudformationType", {
        "arn": args.arn,
        "id": args.id,
        "type": args.type,
        "typeName": args.typeName,
        "versionId": args.versionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudformationType.
 */
export interface GetCloudformationTypeArgs {
    arn?: string;
    id?: string;
    type?: string;
    typeName?: string;
    versionId?: string;
}

/**
 * A collection of values returned by getCloudformationType.
 */
export interface GetCloudformationTypeResult {
    readonly arn: string;
    readonly defaultVersionId: string;
    readonly deprecatedStatus: string;
    readonly description: string;
    readonly documentationUrl: string;
    readonly executionRoleArn: string;
    readonly id: string;
    readonly isDefaultVersion: boolean;
    readonly loggingConfigs: outputs.GetCloudformationTypeLoggingConfig[];
    readonly provisioningType: string;
    readonly schema: string;
    readonly sourceUrl: string;
    readonly type: string;
    readonly typeArn: string;
    readonly typeName: string;
    readonly versionId?: string;
    readonly visibility: string;
}
export function getCloudformationTypeOutput(args?: GetCloudformationTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudformationTypeResult> {
    return pulumi.output(args).apply((a: any) => getCloudformationType(a, opts))
}

/**
 * A collection of arguments for invoking getCloudformationType.
 */
export interface GetCloudformationTypeOutputArgs {
    arn?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    typeName?: pulumi.Input<string>;
    versionId?: pulumi.Input<string>;
}
