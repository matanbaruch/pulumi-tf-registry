// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SnsTopic extends pulumi.CustomResource {
    /**
     * Get an existing SnsTopic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnsTopicState, opts?: pulumi.CustomResourceOptions): SnsTopic {
        return new SnsTopic(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/snsTopic:SnsTopic';

    /**
     * Returns true if the given object is an instance of SnsTopic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SnsTopic {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SnsTopic.__pulumiType;
    }

    public readonly applicationFailureFeedbackRoleArn!: pulumi.Output<string | undefined>;
    public readonly applicationSuccessFeedbackRoleArn!: pulumi.Output<string | undefined>;
    public readonly applicationSuccessFeedbackSampleRate!: pulumi.Output<number | undefined>;
    public readonly archivePolicy!: pulumi.Output<string | undefined>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly beginningArchiveTime!: pulumi.Output<string>;
    public readonly contentBasedDeduplication!: pulumi.Output<boolean | undefined>;
    public readonly deliveryPolicy!: pulumi.Output<string | undefined>;
    public readonly displayName!: pulumi.Output<string | undefined>;
    public readonly fifoTopic!: pulumi.Output<boolean | undefined>;
    public readonly firehoseFailureFeedbackRoleArn!: pulumi.Output<string | undefined>;
    public readonly firehoseSuccessFeedbackRoleArn!: pulumi.Output<string | undefined>;
    public readonly firehoseSuccessFeedbackSampleRate!: pulumi.Output<number | undefined>;
    public readonly httpFailureFeedbackRoleArn!: pulumi.Output<string | undefined>;
    public readonly httpSuccessFeedbackRoleArn!: pulumi.Output<string | undefined>;
    public readonly httpSuccessFeedbackSampleRate!: pulumi.Output<number | undefined>;
    public readonly kmsMasterKeyId!: pulumi.Output<string | undefined>;
    public readonly lambdaFailureFeedbackRoleArn!: pulumi.Output<string | undefined>;
    public readonly lambdaSuccessFeedbackRoleArn!: pulumi.Output<string | undefined>;
    public readonly lambdaSuccessFeedbackSampleRate!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly namePrefix!: pulumi.Output<string>;
    public /*out*/ readonly owner!: pulumi.Output<string>;
    public readonly policy!: pulumi.Output<string>;
    public readonly signatureVersion!: pulumi.Output<number>;
    public readonly sqsFailureFeedbackRoleArn!: pulumi.Output<string | undefined>;
    public readonly sqsSuccessFeedbackRoleArn!: pulumi.Output<string | undefined>;
    public readonly sqsSuccessFeedbackSampleRate!: pulumi.Output<number | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly tracingConfig!: pulumi.Output<string>;

    /**
     * Create a SnsTopic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SnsTopicArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnsTopicArgs | SnsTopicState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SnsTopicState | undefined;
            resourceInputs["applicationFailureFeedbackRoleArn"] = state ? state.applicationFailureFeedbackRoleArn : undefined;
            resourceInputs["applicationSuccessFeedbackRoleArn"] = state ? state.applicationSuccessFeedbackRoleArn : undefined;
            resourceInputs["applicationSuccessFeedbackSampleRate"] = state ? state.applicationSuccessFeedbackSampleRate : undefined;
            resourceInputs["archivePolicy"] = state ? state.archivePolicy : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["beginningArchiveTime"] = state ? state.beginningArchiveTime : undefined;
            resourceInputs["contentBasedDeduplication"] = state ? state.contentBasedDeduplication : undefined;
            resourceInputs["deliveryPolicy"] = state ? state.deliveryPolicy : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["fifoTopic"] = state ? state.fifoTopic : undefined;
            resourceInputs["firehoseFailureFeedbackRoleArn"] = state ? state.firehoseFailureFeedbackRoleArn : undefined;
            resourceInputs["firehoseSuccessFeedbackRoleArn"] = state ? state.firehoseSuccessFeedbackRoleArn : undefined;
            resourceInputs["firehoseSuccessFeedbackSampleRate"] = state ? state.firehoseSuccessFeedbackSampleRate : undefined;
            resourceInputs["httpFailureFeedbackRoleArn"] = state ? state.httpFailureFeedbackRoleArn : undefined;
            resourceInputs["httpSuccessFeedbackRoleArn"] = state ? state.httpSuccessFeedbackRoleArn : undefined;
            resourceInputs["httpSuccessFeedbackSampleRate"] = state ? state.httpSuccessFeedbackSampleRate : undefined;
            resourceInputs["kmsMasterKeyId"] = state ? state.kmsMasterKeyId : undefined;
            resourceInputs["lambdaFailureFeedbackRoleArn"] = state ? state.lambdaFailureFeedbackRoleArn : undefined;
            resourceInputs["lambdaSuccessFeedbackRoleArn"] = state ? state.lambdaSuccessFeedbackRoleArn : undefined;
            resourceInputs["lambdaSuccessFeedbackSampleRate"] = state ? state.lambdaSuccessFeedbackSampleRate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namePrefix"] = state ? state.namePrefix : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["signatureVersion"] = state ? state.signatureVersion : undefined;
            resourceInputs["sqsFailureFeedbackRoleArn"] = state ? state.sqsFailureFeedbackRoleArn : undefined;
            resourceInputs["sqsSuccessFeedbackRoleArn"] = state ? state.sqsSuccessFeedbackRoleArn : undefined;
            resourceInputs["sqsSuccessFeedbackSampleRate"] = state ? state.sqsSuccessFeedbackSampleRate : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["tracingConfig"] = state ? state.tracingConfig : undefined;
        } else {
            const args = argsOrState as SnsTopicArgs | undefined;
            resourceInputs["applicationFailureFeedbackRoleArn"] = args ? args.applicationFailureFeedbackRoleArn : undefined;
            resourceInputs["applicationSuccessFeedbackRoleArn"] = args ? args.applicationSuccessFeedbackRoleArn : undefined;
            resourceInputs["applicationSuccessFeedbackSampleRate"] = args ? args.applicationSuccessFeedbackSampleRate : undefined;
            resourceInputs["archivePolicy"] = args ? args.archivePolicy : undefined;
            resourceInputs["contentBasedDeduplication"] = args ? args.contentBasedDeduplication : undefined;
            resourceInputs["deliveryPolicy"] = args ? args.deliveryPolicy : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["fifoTopic"] = args ? args.fifoTopic : undefined;
            resourceInputs["firehoseFailureFeedbackRoleArn"] = args ? args.firehoseFailureFeedbackRoleArn : undefined;
            resourceInputs["firehoseSuccessFeedbackRoleArn"] = args ? args.firehoseSuccessFeedbackRoleArn : undefined;
            resourceInputs["firehoseSuccessFeedbackSampleRate"] = args ? args.firehoseSuccessFeedbackSampleRate : undefined;
            resourceInputs["httpFailureFeedbackRoleArn"] = args ? args.httpFailureFeedbackRoleArn : undefined;
            resourceInputs["httpSuccessFeedbackRoleArn"] = args ? args.httpSuccessFeedbackRoleArn : undefined;
            resourceInputs["httpSuccessFeedbackSampleRate"] = args ? args.httpSuccessFeedbackSampleRate : undefined;
            resourceInputs["kmsMasterKeyId"] = args ? args.kmsMasterKeyId : undefined;
            resourceInputs["lambdaFailureFeedbackRoleArn"] = args ? args.lambdaFailureFeedbackRoleArn : undefined;
            resourceInputs["lambdaSuccessFeedbackRoleArn"] = args ? args.lambdaSuccessFeedbackRoleArn : undefined;
            resourceInputs["lambdaSuccessFeedbackSampleRate"] = args ? args.lambdaSuccessFeedbackSampleRate : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namePrefix"] = args ? args.namePrefix : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["signatureVersion"] = args ? args.signatureVersion : undefined;
            resourceInputs["sqsFailureFeedbackRoleArn"] = args ? args.sqsFailureFeedbackRoleArn : undefined;
            resourceInputs["sqsSuccessFeedbackRoleArn"] = args ? args.sqsSuccessFeedbackRoleArn : undefined;
            resourceInputs["sqsSuccessFeedbackSampleRate"] = args ? args.sqsSuccessFeedbackSampleRate : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["tracingConfig"] = args ? args.tracingConfig : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["beginningArchiveTime"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SnsTopic.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SnsTopic resources.
 */
export interface SnsTopicState {
    applicationFailureFeedbackRoleArn?: pulumi.Input<string>;
    applicationSuccessFeedbackRoleArn?: pulumi.Input<string>;
    applicationSuccessFeedbackSampleRate?: pulumi.Input<number>;
    archivePolicy?: pulumi.Input<string>;
    arn?: pulumi.Input<string>;
    beginningArchiveTime?: pulumi.Input<string>;
    contentBasedDeduplication?: pulumi.Input<boolean>;
    deliveryPolicy?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    fifoTopic?: pulumi.Input<boolean>;
    firehoseFailureFeedbackRoleArn?: pulumi.Input<string>;
    firehoseSuccessFeedbackRoleArn?: pulumi.Input<string>;
    firehoseSuccessFeedbackSampleRate?: pulumi.Input<number>;
    httpFailureFeedbackRoleArn?: pulumi.Input<string>;
    httpSuccessFeedbackRoleArn?: pulumi.Input<string>;
    httpSuccessFeedbackSampleRate?: pulumi.Input<number>;
    kmsMasterKeyId?: pulumi.Input<string>;
    lambdaFailureFeedbackRoleArn?: pulumi.Input<string>;
    lambdaSuccessFeedbackRoleArn?: pulumi.Input<string>;
    lambdaSuccessFeedbackSampleRate?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
    policy?: pulumi.Input<string>;
    signatureVersion?: pulumi.Input<number>;
    sqsFailureFeedbackRoleArn?: pulumi.Input<string>;
    sqsSuccessFeedbackRoleArn?: pulumi.Input<string>;
    sqsSuccessFeedbackSampleRate?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tracingConfig?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SnsTopic resource.
 */
export interface SnsTopicArgs {
    applicationFailureFeedbackRoleArn?: pulumi.Input<string>;
    applicationSuccessFeedbackRoleArn?: pulumi.Input<string>;
    applicationSuccessFeedbackSampleRate?: pulumi.Input<number>;
    archivePolicy?: pulumi.Input<string>;
    contentBasedDeduplication?: pulumi.Input<boolean>;
    deliveryPolicy?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    fifoTopic?: pulumi.Input<boolean>;
    firehoseFailureFeedbackRoleArn?: pulumi.Input<string>;
    firehoseSuccessFeedbackRoleArn?: pulumi.Input<string>;
    firehoseSuccessFeedbackSampleRate?: pulumi.Input<number>;
    httpFailureFeedbackRoleArn?: pulumi.Input<string>;
    httpSuccessFeedbackRoleArn?: pulumi.Input<string>;
    httpSuccessFeedbackSampleRate?: pulumi.Input<number>;
    kmsMasterKeyId?: pulumi.Input<string>;
    lambdaFailureFeedbackRoleArn?: pulumi.Input<string>;
    lambdaSuccessFeedbackRoleArn?: pulumi.Input<string>;
    lambdaSuccessFeedbackSampleRate?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    policy?: pulumi.Input<string>;
    signatureVersion?: pulumi.Input<number>;
    sqsFailureFeedbackRoleArn?: pulumi.Input<string>;
    sqsSuccessFeedbackRoleArn?: pulumi.Input<string>;
    sqsSuccessFeedbackSampleRate?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tracingConfig?: pulumi.Input<string>;
}
