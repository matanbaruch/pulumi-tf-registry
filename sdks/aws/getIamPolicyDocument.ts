// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamPolicyDocument(args?: GetIamPolicyDocumentArgs, opts?: pulumi.InvokeOptions): Promise<GetIamPolicyDocumentResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getIamPolicyDocument:getIamPolicyDocument", {
        "id": args.id,
        "overrideJson": args.overrideJson,
        "overridePolicyDocuments": args.overridePolicyDocuments,
        "policyId": args.policyId,
        "sourceJson": args.sourceJson,
        "sourcePolicyDocuments": args.sourcePolicyDocuments,
        "statements": args.statements,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamPolicyDocument.
 */
export interface GetIamPolicyDocumentArgs {
    id?: string;
    /**
     * @deprecated Deprecated
     */
    overrideJson?: string;
    overridePolicyDocuments?: string[];
    policyId?: string;
    /**
     * @deprecated Deprecated
     */
    sourceJson?: string;
    sourcePolicyDocuments?: string[];
    statements?: inputs.GetIamPolicyDocumentStatement[];
    version?: string;
}

/**
 * A collection of values returned by getIamPolicyDocument.
 */
export interface GetIamPolicyDocumentResult {
    readonly id: string;
    readonly json: string;
    readonly minifiedJson: string;
    /**
     * @deprecated Deprecated
     */
    readonly overrideJson?: string;
    readonly overridePolicyDocuments?: string[];
    readonly policyId?: string;
    /**
     * @deprecated Deprecated
     */
    readonly sourceJson?: string;
    readonly sourcePolicyDocuments?: string[];
    readonly statements?: outputs.GetIamPolicyDocumentStatement[];
    readonly version?: string;
}
export function getIamPolicyDocumentOutput(args?: GetIamPolicyDocumentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamPolicyDocumentResult> {
    return pulumi.output(args).apply((a: any) => getIamPolicyDocument(a, opts))
}

/**
 * A collection of arguments for invoking getIamPolicyDocument.
 */
export interface GetIamPolicyDocumentOutputArgs {
    id?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    overrideJson?: pulumi.Input<string>;
    overridePolicyDocuments?: pulumi.Input<pulumi.Input<string>[]>;
    policyId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    sourceJson?: pulumi.Input<string>;
    sourcePolicyDocuments?: pulumi.Input<pulumi.Input<string>[]>;
    statements?: pulumi.Input<pulumi.Input<inputs.GetIamPolicyDocumentStatementArgs>[]>;
    version?: pulumi.Input<string>;
}
