// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getWafSubscribedRuleGroup(args?: GetWafSubscribedRuleGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetWafSubscribedRuleGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getWafSubscribedRuleGroup:getWafSubscribedRuleGroup", {
        "id": args.id,
        "metricName": args.metricName,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWafSubscribedRuleGroup.
 */
export interface GetWafSubscribedRuleGroupArgs {
    id?: string;
    metricName?: string;
    name?: string;
}

/**
 * A collection of values returned by getWafSubscribedRuleGroup.
 */
export interface GetWafSubscribedRuleGroupResult {
    readonly id: string;
    readonly metricName?: string;
    readonly name?: string;
}
export function getWafSubscribedRuleGroupOutput(args?: GetWafSubscribedRuleGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWafSubscribedRuleGroupResult> {
    return pulumi.output(args).apply((a: any) => getWafSubscribedRuleGroup(a, opts))
}

/**
 * A collection of arguments for invoking getWafSubscribedRuleGroup.
 */
export interface GetWafSubscribedRuleGroupOutputArgs {
    id?: pulumi.Input<string>;
    metricName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
