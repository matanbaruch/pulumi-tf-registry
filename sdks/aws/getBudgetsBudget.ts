// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBudgetsBudget(args: GetBudgetsBudgetArgs, opts?: pulumi.InvokeOptions): Promise<GetBudgetsBudgetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getBudgetsBudget:getBudgetsBudget", {
        "accountId": args.accountId,
        "id": args.id,
        "name": args.name,
        "namePrefix": args.namePrefix,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBudgetsBudget.
 */
export interface GetBudgetsBudgetArgs {
    accountId?: string;
    id?: string;
    name: string;
    namePrefix?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getBudgetsBudget.
 */
export interface GetBudgetsBudgetResult {
    readonly accountId: string;
    readonly arn: string;
    readonly autoAdjustDatas: outputs.GetBudgetsBudgetAutoAdjustData[];
    readonly budgetExceeded: boolean;
    readonly budgetLimits: outputs.GetBudgetsBudgetBudgetLimit[];
    readonly budgetType: string;
    readonly calculatedSpends: outputs.GetBudgetsBudgetCalculatedSpend[];
    readonly costFilters: outputs.GetBudgetsBudgetCostFilter[];
    readonly costTypes: outputs.GetBudgetsBudgetCostType[];
    readonly id: string;
    readonly name: string;
    readonly namePrefix?: string;
    readonly notifications: outputs.GetBudgetsBudgetNotification[];
    readonly plannedLimits: outputs.GetBudgetsBudgetPlannedLimit[];
    readonly tags: {[key: string]: string};
    readonly timePeriodEnd: string;
    readonly timePeriodStart: string;
    readonly timeUnit: string;
}
export function getBudgetsBudgetOutput(args: GetBudgetsBudgetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBudgetsBudgetResult> {
    return pulumi.output(args).apply((a: any) => getBudgetsBudget(a, opts))
}

/**
 * A collection of arguments for invoking getBudgetsBudget.
 */
export interface GetBudgetsBudgetOutputArgs {
    accountId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
