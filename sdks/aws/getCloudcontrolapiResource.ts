// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudcontrolapiResource(args: GetCloudcontrolapiResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudcontrolapiResourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getCloudcontrolapiResource:getCloudcontrolapiResource", {
        "id": args.id,
        "identifier": args.identifier,
        "roleArn": args.roleArn,
        "typeName": args.typeName,
        "typeVersionId": args.typeVersionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudcontrolapiResource.
 */
export interface GetCloudcontrolapiResourceArgs {
    id?: string;
    identifier: string;
    roleArn?: string;
    typeName: string;
    typeVersionId?: string;
}

/**
 * A collection of values returned by getCloudcontrolapiResource.
 */
export interface GetCloudcontrolapiResourceResult {
    readonly id: string;
    readonly identifier: string;
    readonly properties: string;
    readonly roleArn?: string;
    readonly typeName: string;
    readonly typeVersionId?: string;
}
export function getCloudcontrolapiResourceOutput(args: GetCloudcontrolapiResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudcontrolapiResourceResult> {
    return pulumi.output(args).apply((a: any) => getCloudcontrolapiResource(a, opts))
}

/**
 * A collection of arguments for invoking getCloudcontrolapiResource.
 */
export interface GetCloudcontrolapiResourceOutputArgs {
    id?: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    typeName: pulumi.Input<string>;
    typeVersionId?: pulumi.Input<string>;
}
