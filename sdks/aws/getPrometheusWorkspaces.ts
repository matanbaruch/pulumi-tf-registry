// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPrometheusWorkspaces(args?: GetPrometheusWorkspacesArgs, opts?: pulumi.InvokeOptions): Promise<GetPrometheusWorkspacesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getPrometheusWorkspaces:getPrometheusWorkspaces", {
        "aliasPrefix": args.aliasPrefix,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPrometheusWorkspaces.
 */
export interface GetPrometheusWorkspacesArgs {
    aliasPrefix?: string;
    id?: string;
}

/**
 * A collection of values returned by getPrometheusWorkspaces.
 */
export interface GetPrometheusWorkspacesResult {
    readonly aliasPrefix?: string;
    readonly aliases: string[];
    readonly arns: string[];
    readonly id: string;
    readonly workspaceIds: string[];
}
export function getPrometheusWorkspacesOutput(args?: GetPrometheusWorkspacesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrometheusWorkspacesResult> {
    return pulumi.output(args).apply((a: any) => getPrometheusWorkspaces(a, opts))
}

/**
 * A collection of arguments for invoking getPrometheusWorkspaces.
 */
export interface GetPrometheusWorkspacesOutputArgs {
    aliasPrefix?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
