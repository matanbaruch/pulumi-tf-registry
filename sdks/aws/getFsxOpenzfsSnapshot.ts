// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFsxOpenzfsSnapshot(args?: GetFsxOpenzfsSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetFsxOpenzfsSnapshotResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getFsxOpenzfsSnapshot:getFsxOpenzfsSnapshot", {
        "filters": args.filters,
        "id": args.id,
        "mostRecent": args.mostRecent,
        "name": args.name,
        "snapshotIds": args.snapshotIds,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFsxOpenzfsSnapshot.
 */
export interface GetFsxOpenzfsSnapshotArgs {
    filters?: inputs.GetFsxOpenzfsSnapshotFilter[];
    id?: string;
    mostRecent?: boolean;
    name?: string;
    snapshotIds?: string[];
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getFsxOpenzfsSnapshot.
 */
export interface GetFsxOpenzfsSnapshotResult {
    readonly arn: string;
    readonly creationTime: string;
    readonly filters?: outputs.GetFsxOpenzfsSnapshotFilter[];
    readonly id: string;
    readonly mostRecent?: boolean;
    readonly name?: string;
    readonly snapshotId: string;
    readonly snapshotIds?: string[];
    readonly tags: {[key: string]: string};
    readonly volumeId: string;
}
export function getFsxOpenzfsSnapshotOutput(args?: GetFsxOpenzfsSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFsxOpenzfsSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getFsxOpenzfsSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getFsxOpenzfsSnapshot.
 */
export interface GetFsxOpenzfsSnapshotOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetFsxOpenzfsSnapshotFilterArgs>[]>;
    id?: pulumi.Input<string>;
    mostRecent?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    snapshotIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
