// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKmsSecret(args: GetKmsSecretArgs, opts?: pulumi.InvokeOptions): Promise<GetKmsSecretResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getKmsSecret:getKmsSecret", {
        "id": args.id,
        "secrets": args.secrets,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsSecret.
 */
export interface GetKmsSecretArgs {
    id?: string;
    secrets: inputs.GetKmsSecretSecret[];
}

/**
 * A collection of values returned by getKmsSecret.
 */
export interface GetKmsSecretResult {
    readonly id: string;
    readonly secrets: outputs.GetKmsSecretSecret[];
}
export function getKmsSecretOutput(args: GetKmsSecretOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKmsSecretResult> {
    return pulumi.output(args).apply((a: any) => getKmsSecret(a, opts))
}

/**
 * A collection of arguments for invoking getKmsSecret.
 */
export interface GetKmsSecretOutputArgs {
    id?: pulumi.Input<string>;
    secrets: pulumi.Input<pulumi.Input<inputs.GetKmsSecretSecretArgs>[]>;
}
