// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBackupSelection(args: GetBackupSelectionArgs, opts?: pulumi.InvokeOptions): Promise<GetBackupSelectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getBackupSelection:getBackupSelection", {
        "id": args.id,
        "planId": args.planId,
        "selectionId": args.selectionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBackupSelection.
 */
export interface GetBackupSelectionArgs {
    id?: string;
    planId: string;
    selectionId: string;
}

/**
 * A collection of values returned by getBackupSelection.
 */
export interface GetBackupSelectionResult {
    readonly iamRoleArn: string;
    readonly id: string;
    readonly name: string;
    readonly planId: string;
    readonly resources: string[];
    readonly selectionId: string;
}
export function getBackupSelectionOutput(args: GetBackupSelectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBackupSelectionResult> {
    return pulumi.output(args).apply((a: any) => getBackupSelection(a, opts))
}

/**
 * A collection of arguments for invoking getBackupSelection.
 */
export interface GetBackupSelectionOutputArgs {
    id?: pulumi.Input<string>;
    planId: pulumi.Input<string>;
    selectionId: pulumi.Input<string>;
}
