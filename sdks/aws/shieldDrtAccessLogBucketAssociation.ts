// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ShieldDrtAccessLogBucketAssociation extends pulumi.CustomResource {
    /**
     * Get an existing ShieldDrtAccessLogBucketAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ShieldDrtAccessLogBucketAssociationState, opts?: pulumi.CustomResourceOptions): ShieldDrtAccessLogBucketAssociation {
        return new ShieldDrtAccessLogBucketAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/shieldDrtAccessLogBucketAssociation:ShieldDrtAccessLogBucketAssociation';

    /**
     * Returns true if the given object is an instance of ShieldDrtAccessLogBucketAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ShieldDrtAccessLogBucketAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ShieldDrtAccessLogBucketAssociation.__pulumiType;
    }

    public readonly logBucket!: pulumi.Output<string>;
    /**
     * Unused
     */
    public readonly roleArnAssociationId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ShieldDrtAccessLogBucketAssociationTimeouts | undefined>;

    /**
     * Create a ShieldDrtAccessLogBucketAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ShieldDrtAccessLogBucketAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ShieldDrtAccessLogBucketAssociationArgs | ShieldDrtAccessLogBucketAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ShieldDrtAccessLogBucketAssociationState | undefined;
            resourceInputs["logBucket"] = state ? state.logBucket : undefined;
            resourceInputs["roleArnAssociationId"] = state ? state.roleArnAssociationId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ShieldDrtAccessLogBucketAssociationArgs | undefined;
            if ((!args || args.logBucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logBucket'");
            }
            if ((!args || args.roleArnAssociationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArnAssociationId'");
            }
            resourceInputs["logBucket"] = args ? args.logBucket : undefined;
            resourceInputs["roleArnAssociationId"] = args ? args.roleArnAssociationId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ShieldDrtAccessLogBucketAssociation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ShieldDrtAccessLogBucketAssociation resources.
 */
export interface ShieldDrtAccessLogBucketAssociationState {
    logBucket?: pulumi.Input<string>;
    /**
     * Unused
     */
    roleArnAssociationId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ShieldDrtAccessLogBucketAssociationTimeouts>;
}

/**
 * The set of arguments for constructing a ShieldDrtAccessLogBucketAssociation resource.
 */
export interface ShieldDrtAccessLogBucketAssociationArgs {
    logBucket: pulumi.Input<string>;
    /**
     * Unused
     */
    roleArnAssociationId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ShieldDrtAccessLogBucketAssociationTimeouts>;
}
