// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SesConfigurationSet extends pulumi.CustomResource {
    /**
     * Get an existing SesConfigurationSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SesConfigurationSetState, opts?: pulumi.CustomResourceOptions): SesConfigurationSet {
        return new SesConfigurationSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/sesConfigurationSet:SesConfigurationSet';

    /**
     * Returns true if the given object is an instance of SesConfigurationSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SesConfigurationSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SesConfigurationSet.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly deliveryOptions!: pulumi.Output<outputs.SesConfigurationSetDeliveryOptions | undefined>;
    public /*out*/ readonly lastFreshStart!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly reputationMetricsEnabled!: pulumi.Output<boolean | undefined>;
    public readonly sendingEnabled!: pulumi.Output<boolean | undefined>;
    public readonly trackingOptions!: pulumi.Output<outputs.SesConfigurationSetTrackingOptions | undefined>;

    /**
     * Create a SesConfigurationSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SesConfigurationSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SesConfigurationSetArgs | SesConfigurationSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SesConfigurationSetState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["deliveryOptions"] = state ? state.deliveryOptions : undefined;
            resourceInputs["lastFreshStart"] = state ? state.lastFreshStart : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["reputationMetricsEnabled"] = state ? state.reputationMetricsEnabled : undefined;
            resourceInputs["sendingEnabled"] = state ? state.sendingEnabled : undefined;
            resourceInputs["trackingOptions"] = state ? state.trackingOptions : undefined;
        } else {
            const args = argsOrState as SesConfigurationSetArgs | undefined;
            resourceInputs["deliveryOptions"] = args ? args.deliveryOptions : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["reputationMetricsEnabled"] = args ? args.reputationMetricsEnabled : undefined;
            resourceInputs["sendingEnabled"] = args ? args.sendingEnabled : undefined;
            resourceInputs["trackingOptions"] = args ? args.trackingOptions : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["lastFreshStart"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SesConfigurationSet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SesConfigurationSet resources.
 */
export interface SesConfigurationSetState {
    arn?: pulumi.Input<string>;
    deliveryOptions?: pulumi.Input<inputs.SesConfigurationSetDeliveryOptions>;
    lastFreshStart?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    reputationMetricsEnabled?: pulumi.Input<boolean>;
    sendingEnabled?: pulumi.Input<boolean>;
    trackingOptions?: pulumi.Input<inputs.SesConfigurationSetTrackingOptions>;
}

/**
 * The set of arguments for constructing a SesConfigurationSet resource.
 */
export interface SesConfigurationSetArgs {
    deliveryOptions?: pulumi.Input<inputs.SesConfigurationSetDeliveryOptions>;
    name?: pulumi.Input<string>;
    reputationMetricsEnabled?: pulumi.Input<boolean>;
    sendingEnabled?: pulumi.Input<boolean>;
    trackingOptions?: pulumi.Input<inputs.SesConfigurationSetTrackingOptions>;
}
