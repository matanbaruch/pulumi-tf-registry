// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getS3Bucket(args: GetS3BucketArgs, opts?: pulumi.InvokeOptions): Promise<GetS3BucketResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getS3Bucket:getS3Bucket", {
        "bucket": args.bucket,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getS3Bucket.
 */
export interface GetS3BucketArgs {
    bucket: string;
    id?: string;
}

/**
 * A collection of values returned by getS3Bucket.
 */
export interface GetS3BucketResult {
    readonly arn: string;
    readonly bucket: string;
    readonly bucketDomainName: string;
    readonly bucketRegionalDomainName: string;
    readonly hostedZoneId: string;
    readonly id: string;
    readonly region: string;
    readonly websiteDomain: string;
    readonly websiteEndpoint: string;
}
export function getS3BucketOutput(args: GetS3BucketOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetS3BucketResult> {
    return pulumi.output(args).apply((a: any) => getS3Bucket(a, opts))
}

/**
 * A collection of arguments for invoking getS3Bucket.
 */
export interface GetS3BucketOutputArgs {
    bucket: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
