// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOpensearchserverlessAccessPolicy(args: GetOpensearchserverlessAccessPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetOpensearchserverlessAccessPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getOpensearchserverlessAccessPolicy:getOpensearchserverlessAccessPolicy", {
        "name": args.name,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpensearchserverlessAccessPolicy.
 */
export interface GetOpensearchserverlessAccessPolicyArgs {
    name: string;
    type: string;
}

/**
 * A collection of values returned by getOpensearchserverlessAccessPolicy.
 */
export interface GetOpensearchserverlessAccessPolicyResult {
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly policy: string;
    readonly policyVersion: string;
    readonly type: string;
}
export function getOpensearchserverlessAccessPolicyOutput(args: GetOpensearchserverlessAccessPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpensearchserverlessAccessPolicyResult> {
    return pulumi.output(args).apply((a: any) => getOpensearchserverlessAccessPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getOpensearchserverlessAccessPolicy.
 */
export interface GetOpensearchserverlessAccessPolicyOutputArgs {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}
