// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIamSessionContext(args: GetIamSessionContextArgs, opts?: pulumi.InvokeOptions): Promise<GetIamSessionContextResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getIamSessionContext:getIamSessionContext", {
        "arn": args.arn,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamSessionContext.
 */
export interface GetIamSessionContextArgs {
    arn: string;
    id?: string;
}

/**
 * A collection of values returned by getIamSessionContext.
 */
export interface GetIamSessionContextResult {
    readonly arn: string;
    readonly id: string;
    readonly issuerArn: string;
    readonly issuerId: string;
    readonly issuerName: string;
    readonly sessionName: string;
}
export function getIamSessionContextOutput(args: GetIamSessionContextOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamSessionContextResult> {
    return pulumi.output(args).apply((a: any) => getIamSessionContext(a, opts))
}

/**
 * A collection of arguments for invoking getIamSessionContext.
 */
export interface GetIamSessionContextOutputArgs {
    arn: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
