// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LicensemanagerGrant extends pulumi.CustomResource {
    /**
     * Get an existing LicensemanagerGrant resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LicensemanagerGrantState, opts?: pulumi.CustomResourceOptions): LicensemanagerGrant {
        return new LicensemanagerGrant(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/licensemanagerGrant:LicensemanagerGrant';

    /**
     * Returns true if the given object is an instance of LicensemanagerGrant.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LicensemanagerGrant {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LicensemanagerGrant.__pulumiType;
    }

    /**
     * Allowed operations for the grant. This is a subset of the allowed operations on the license.
     */
    public readonly allowedOperations!: pulumi.Output<string[]>;
    /**
     * Amazon Resource Name (ARN) of the grant.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Home Region of the grant.
     */
    public /*out*/ readonly homeRegion!: pulumi.Output<string>;
    /**
     * License ARN.
     */
    public readonly licenseArn!: pulumi.Output<string>;
    /**
     * Name of the grant.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Parent ARN.
     */
    public /*out*/ readonly parentArn!: pulumi.Output<string>;
    /**
     * The grantee principal ARN. The target account for the grant in the form of the ARN for an account principal of the root
     * user.
     */
    public readonly principal!: pulumi.Output<string>;
    /**
     * Grant status.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Grant version.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a LicensemanagerGrant resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LicensemanagerGrantArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LicensemanagerGrantArgs | LicensemanagerGrantState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LicensemanagerGrantState | undefined;
            resourceInputs["allowedOperations"] = state ? state.allowedOperations : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["homeRegion"] = state ? state.homeRegion : undefined;
            resourceInputs["licenseArn"] = state ? state.licenseArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parentArn"] = state ? state.parentArn : undefined;
            resourceInputs["principal"] = state ? state.principal : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as LicensemanagerGrantArgs | undefined;
            if ((!args || args.allowedOperations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'allowedOperations'");
            }
            if ((!args || args.licenseArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'licenseArn'");
            }
            if ((!args || args.principal === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principal'");
            }
            resourceInputs["allowedOperations"] = args ? args.allowedOperations : undefined;
            resourceInputs["licenseArn"] = args ? args.licenseArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["principal"] = args ? args.principal : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["homeRegion"] = undefined /*out*/;
            resourceInputs["parentArn"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LicensemanagerGrant.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LicensemanagerGrant resources.
 */
export interface LicensemanagerGrantState {
    /**
     * Allowed operations for the grant. This is a subset of the allowed operations on the license.
     */
    allowedOperations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Amazon Resource Name (ARN) of the grant.
     */
    arn?: pulumi.Input<string>;
    /**
     * Home Region of the grant.
     */
    homeRegion?: pulumi.Input<string>;
    /**
     * License ARN.
     */
    licenseArn?: pulumi.Input<string>;
    /**
     * Name of the grant.
     */
    name?: pulumi.Input<string>;
    /**
     * Parent ARN.
     */
    parentArn?: pulumi.Input<string>;
    /**
     * The grantee principal ARN. The target account for the grant in the form of the ARN for an account principal of the root
     * user.
     */
    principal?: pulumi.Input<string>;
    /**
     * Grant status.
     */
    status?: pulumi.Input<string>;
    /**
     * Grant version.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LicensemanagerGrant resource.
 */
export interface LicensemanagerGrantArgs {
    /**
     * Allowed operations for the grant. This is a subset of the allowed operations on the license.
     */
    allowedOperations: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * License ARN.
     */
    licenseArn: pulumi.Input<string>;
    /**
     * Name of the grant.
     */
    name?: pulumi.Input<string>;
    /**
     * The grantee principal ARN. The target account for the grant in the form of the ARN for an account principal of the root
     * user.
     */
    principal: pulumi.Input<string>;
}
