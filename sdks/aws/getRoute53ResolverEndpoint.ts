// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRoute53ResolverEndpoint(args?: GetRoute53ResolverEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetRoute53ResolverEndpointResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getRoute53ResolverEndpoint:getRoute53ResolverEndpoint", {
        "filters": args.filters,
        "id": args.id,
        "resolverEndpointId": args.resolverEndpointId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoute53ResolverEndpoint.
 */
export interface GetRoute53ResolverEndpointArgs {
    filters?: inputs.GetRoute53ResolverEndpointFilter[];
    id?: string;
    resolverEndpointId?: string;
}

/**
 * A collection of values returned by getRoute53ResolverEndpoint.
 */
export interface GetRoute53ResolverEndpointResult {
    readonly arn: string;
    readonly direction: string;
    readonly filters?: outputs.GetRoute53ResolverEndpointFilter[];
    readonly id: string;
    readonly ipAddresses: string[];
    readonly name: string;
    readonly protocols: string[];
    readonly resolverEndpointId?: string;
    readonly resolverEndpointType: string;
    readonly status: string;
    readonly vpcId: string;
}
export function getRoute53ResolverEndpointOutput(args?: GetRoute53ResolverEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoute53ResolverEndpointResult> {
    return pulumi.output(args).apply((a: any) => getRoute53ResolverEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getRoute53ResolverEndpoint.
 */
export interface GetRoute53ResolverEndpointOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetRoute53ResolverEndpointFilterArgs>[]>;
    id?: pulumi.Input<string>;
    resolverEndpointId?: pulumi.Input<string>;
}
