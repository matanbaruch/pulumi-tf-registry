// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CognitoRiskConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing CognitoRiskConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CognitoRiskConfigurationState, opts?: pulumi.CustomResourceOptions): CognitoRiskConfiguration {
        return new CognitoRiskConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/cognitoRiskConfiguration:CognitoRiskConfiguration';

    /**
     * Returns true if the given object is an instance of CognitoRiskConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CognitoRiskConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CognitoRiskConfiguration.__pulumiType;
    }

    public readonly accountTakeoverRiskConfiguration!: pulumi.Output<outputs.CognitoRiskConfigurationAccountTakeoverRiskConfiguration | undefined>;
    public readonly clientId!: pulumi.Output<string | undefined>;
    public readonly compromisedCredentialsRiskConfiguration!: pulumi.Output<outputs.CognitoRiskConfigurationCompromisedCredentialsRiskConfiguration | undefined>;
    public readonly riskExceptionConfiguration!: pulumi.Output<outputs.CognitoRiskConfigurationRiskExceptionConfiguration | undefined>;
    public readonly userPoolId!: pulumi.Output<string>;

    /**
     * Create a CognitoRiskConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CognitoRiskConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CognitoRiskConfigurationArgs | CognitoRiskConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CognitoRiskConfigurationState | undefined;
            resourceInputs["accountTakeoverRiskConfiguration"] = state ? state.accountTakeoverRiskConfiguration : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["compromisedCredentialsRiskConfiguration"] = state ? state.compromisedCredentialsRiskConfiguration : undefined;
            resourceInputs["riskExceptionConfiguration"] = state ? state.riskExceptionConfiguration : undefined;
            resourceInputs["userPoolId"] = state ? state.userPoolId : undefined;
        } else {
            const args = argsOrState as CognitoRiskConfigurationArgs | undefined;
            if ((!args || args.userPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userPoolId'");
            }
            resourceInputs["accountTakeoverRiskConfiguration"] = args ? args.accountTakeoverRiskConfiguration : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["compromisedCredentialsRiskConfiguration"] = args ? args.compromisedCredentialsRiskConfiguration : undefined;
            resourceInputs["riskExceptionConfiguration"] = args ? args.riskExceptionConfiguration : undefined;
            resourceInputs["userPoolId"] = args ? args.userPoolId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CognitoRiskConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CognitoRiskConfiguration resources.
 */
export interface CognitoRiskConfigurationState {
    accountTakeoverRiskConfiguration?: pulumi.Input<inputs.CognitoRiskConfigurationAccountTakeoverRiskConfiguration>;
    clientId?: pulumi.Input<string>;
    compromisedCredentialsRiskConfiguration?: pulumi.Input<inputs.CognitoRiskConfigurationCompromisedCredentialsRiskConfiguration>;
    riskExceptionConfiguration?: pulumi.Input<inputs.CognitoRiskConfigurationRiskExceptionConfiguration>;
    userPoolId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CognitoRiskConfiguration resource.
 */
export interface CognitoRiskConfigurationArgs {
    accountTakeoverRiskConfiguration?: pulumi.Input<inputs.CognitoRiskConfigurationAccountTakeoverRiskConfiguration>;
    clientId?: pulumi.Input<string>;
    compromisedCredentialsRiskConfiguration?: pulumi.Input<inputs.CognitoRiskConfigurationCompromisedCredentialsRiskConfiguration>;
    riskExceptionConfiguration?: pulumi.Input<inputs.CognitoRiskConfigurationRiskExceptionConfiguration>;
    userPoolId: pulumi.Input<string>;
}
