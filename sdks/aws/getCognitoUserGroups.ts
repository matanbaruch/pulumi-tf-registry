// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCognitoUserGroups(args: GetCognitoUserGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetCognitoUserGroupsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getCognitoUserGroups:getCognitoUserGroups", {
        "userPoolId": args.userPoolId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCognitoUserGroups.
 */
export interface GetCognitoUserGroupsArgs {
    userPoolId: string;
}

/**
 * A collection of values returned by getCognitoUserGroups.
 */
export interface GetCognitoUserGroupsResult {
    readonly groups: outputs.GetCognitoUserGroupsGroup[];
    readonly id: string;
    readonly userPoolId: string;
}
export function getCognitoUserGroupsOutput(args: GetCognitoUserGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCognitoUserGroupsResult> {
    return pulumi.output(args).apply((a: any) => getCognitoUserGroups(a, opts))
}

/**
 * A collection of arguments for invoking getCognitoUserGroups.
 */
export interface GetCognitoUserGroupsOutputArgs {
    userPoolId: pulumi.Input<string>;
}
