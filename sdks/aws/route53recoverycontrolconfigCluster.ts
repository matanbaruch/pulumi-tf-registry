// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Route53recoverycontrolconfigCluster extends pulumi.CustomResource {
    /**
     * Get an existing Route53recoverycontrolconfigCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Route53recoverycontrolconfigClusterState, opts?: pulumi.CustomResourceOptions): Route53recoverycontrolconfigCluster {
        return new Route53recoverycontrolconfigCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/route53recoverycontrolconfigCluster:Route53recoverycontrolconfigCluster';

    /**
     * Returns true if the given object is an instance of Route53recoverycontrolconfigCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Route53recoverycontrolconfigCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Route53recoverycontrolconfigCluster.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly clusterEndpoints!: pulumi.Output<outputs.Route53recoverycontrolconfigClusterClusterEndpoint[]>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a Route53recoverycontrolconfigCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Route53recoverycontrolconfigClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Route53recoverycontrolconfigClusterArgs | Route53recoverycontrolconfigClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Route53recoverycontrolconfigClusterState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["clusterEndpoints"] = state ? state.clusterEndpoints : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as Route53recoverycontrolconfigClusterArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["clusterEndpoints"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Route53recoverycontrolconfigCluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Route53recoverycontrolconfigCluster resources.
 */
export interface Route53recoverycontrolconfigClusterState {
    arn?: pulumi.Input<string>;
    clusterEndpoints?: pulumi.Input<pulumi.Input<inputs.Route53recoverycontrolconfigClusterClusterEndpoint>[]>;
    name?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Route53recoverycontrolconfigCluster resource.
 */
export interface Route53recoverycontrolconfigClusterArgs {
    name?: pulumi.Input<string>;
}
