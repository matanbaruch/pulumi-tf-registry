// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSfnStateMachineVersions(args: GetSfnStateMachineVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetSfnStateMachineVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getSfnStateMachineVersions:getSfnStateMachineVersions", {
        "id": args.id,
        "statemachineArn": args.statemachineArn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSfnStateMachineVersions.
 */
export interface GetSfnStateMachineVersionsArgs {
    id?: string;
    statemachineArn: string;
}

/**
 * A collection of values returned by getSfnStateMachineVersions.
 */
export interface GetSfnStateMachineVersionsResult {
    readonly id: string;
    readonly statemachineArn: string;
    readonly statemachineVersions: string[];
}
export function getSfnStateMachineVersionsOutput(args: GetSfnStateMachineVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSfnStateMachineVersionsResult> {
    return pulumi.output(args).apply((a: any) => getSfnStateMachineVersions(a, opts))
}

/**
 * A collection of arguments for invoking getSfnStateMachineVersions.
 */
export interface GetSfnStateMachineVersionsOutputArgs {
    id?: pulumi.Input<string>;
    statemachineArn: pulumi.Input<string>;
}
