// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2PublicIpv4Pool(args: GetEc2PublicIpv4PoolArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2PublicIpv4PoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getEc2PublicIpv4Pool:getEc2PublicIpv4Pool", {
        "id": args.id,
        "poolId": args.poolId,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2PublicIpv4Pool.
 */
export interface GetEc2PublicIpv4PoolArgs {
    id?: string;
    poolId: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getEc2PublicIpv4Pool.
 */
export interface GetEc2PublicIpv4PoolResult {
    readonly description: string;
    readonly id: string;
    readonly networkBorderGroup: string;
    readonly poolAddressRanges: outputs.GetEc2PublicIpv4PoolPoolAddressRange[];
    readonly poolId: string;
    readonly tags: {[key: string]: string};
    readonly totalAddressCount: number;
    readonly totalAvailableAddressCount: number;
}
export function getEc2PublicIpv4PoolOutput(args: GetEc2PublicIpv4PoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2PublicIpv4PoolResult> {
    return pulumi.output(args).apply((a: any) => getEc2PublicIpv4Pool(a, opts))
}

/**
 * A collection of arguments for invoking getEc2PublicIpv4Pool.
 */
export interface GetEc2PublicIpv4PoolOutputArgs {
    id?: pulumi.Input<string>;
    poolId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
