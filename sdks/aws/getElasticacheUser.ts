// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getElasticacheUser(args: GetElasticacheUserArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticacheUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getElasticacheUser:getElasticacheUser", {
        "accessString": args.accessString,
        "authenticationModes": args.authenticationModes,
        "engine": args.engine,
        "id": args.id,
        "noPasswordRequired": args.noPasswordRequired,
        "passwords": args.passwords,
        "userId": args.userId,
        "userName": args.userName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getElasticacheUser.
 */
export interface GetElasticacheUserArgs {
    accessString?: string;
    authenticationModes?: inputs.GetElasticacheUserAuthenticationMode[];
    engine?: string;
    id?: string;
    noPasswordRequired?: boolean;
    passwords?: string[];
    userId: string;
    userName?: string;
}

/**
 * A collection of values returned by getElasticacheUser.
 */
export interface GetElasticacheUserResult {
    readonly accessString?: string;
    readonly authenticationModes?: outputs.GetElasticacheUserAuthenticationMode[];
    readonly engine?: string;
    readonly id: string;
    readonly noPasswordRequired?: boolean;
    readonly passwords?: string[];
    readonly userId: string;
    readonly userName?: string;
}
export function getElasticacheUserOutput(args: GetElasticacheUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetElasticacheUserResult> {
    return pulumi.output(args).apply((a: any) => getElasticacheUser(a, opts))
}

/**
 * A collection of arguments for invoking getElasticacheUser.
 */
export interface GetElasticacheUserOutputArgs {
    accessString?: pulumi.Input<string>;
    authenticationModes?: pulumi.Input<pulumi.Input<inputs.GetElasticacheUserAuthenticationModeArgs>[]>;
    engine?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    noPasswordRequired?: pulumi.Input<boolean>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    userId: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}
