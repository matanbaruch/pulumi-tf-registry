// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAuditmanagerFramework(args: GetAuditmanagerFrameworkArgs, opts?: pulumi.InvokeOptions): Promise<GetAuditmanagerFrameworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getAuditmanagerFramework:getAuditmanagerFramework", {
        "controlSets": args.controlSets,
        "frameworkType": args.frameworkType,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAuditmanagerFramework.
 */
export interface GetAuditmanagerFrameworkArgs {
    controlSets?: inputs.GetAuditmanagerFrameworkControlSet[];
    frameworkType: string;
    name: string;
}

/**
 * A collection of values returned by getAuditmanagerFramework.
 */
export interface GetAuditmanagerFrameworkResult {
    readonly arn: string;
    readonly complianceType: string;
    readonly controlSets?: outputs.GetAuditmanagerFrameworkControlSet[];
    readonly description: string;
    readonly frameworkType: string;
    readonly id: string;
    readonly name: string;
    readonly tags: {[key: string]: string};
}
export function getAuditmanagerFrameworkOutput(args: GetAuditmanagerFrameworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuditmanagerFrameworkResult> {
    return pulumi.output(args).apply((a: any) => getAuditmanagerFramework(a, opts))
}

/**
 * A collection of arguments for invoking getAuditmanagerFramework.
 */
export interface GetAuditmanagerFrameworkOutputArgs {
    controlSets?: pulumi.Input<pulumi.Input<inputs.GetAuditmanagerFrameworkControlSetArgs>[]>;
    frameworkType: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
