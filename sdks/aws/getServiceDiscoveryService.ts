// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceDiscoveryService(args: GetServiceDiscoveryServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceDiscoveryServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getServiceDiscoveryService:getServiceDiscoveryService", {
        "id": args.id,
        "name": args.name,
        "namespaceId": args.namespaceId,
        "tags": args.tags,
        "tagsAll": args.tagsAll,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceDiscoveryService.
 */
export interface GetServiceDiscoveryServiceArgs {
    id?: string;
    name: string;
    namespaceId: string;
    tags?: {[key: string]: string};
    /**
     * @deprecated Deprecated
     */
    tagsAll?: {[key: string]: string};
}

/**
 * A collection of values returned by getServiceDiscoveryService.
 */
export interface GetServiceDiscoveryServiceResult {
    readonly arn: string;
    readonly description: string;
    readonly dnsConfigs: outputs.GetServiceDiscoveryServiceDnsConfig[];
    readonly healthCheckConfigs: outputs.GetServiceDiscoveryServiceHealthCheckConfig[];
    readonly healthCheckCustomConfigs: outputs.GetServiceDiscoveryServiceHealthCheckCustomConfig[];
    readonly id: string;
    readonly name: string;
    readonly namespaceId: string;
    readonly tags?: {[key: string]: string};
    /**
     * @deprecated Deprecated
     */
    readonly tagsAll: {[key: string]: string};
}
export function getServiceDiscoveryServiceOutput(args: GetServiceDiscoveryServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceDiscoveryServiceResult> {
    return pulumi.output(args).apply((a: any) => getServiceDiscoveryService(a, opts))
}

/**
 * A collection of arguments for invoking getServiceDiscoveryService.
 */
export interface GetServiceDiscoveryServiceOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namespaceId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Deprecated
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
