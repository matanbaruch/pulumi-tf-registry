// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DynamodbTable extends pulumi.CustomResource {
    /**
     * Get an existing DynamodbTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DynamodbTableState, opts?: pulumi.CustomResourceOptions): DynamodbTable {
        return new DynamodbTable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/dynamodbTable:DynamodbTable';

    /**
     * Returns true if the given object is an instance of DynamodbTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DynamodbTable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DynamodbTable.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly attributes!: pulumi.Output<outputs.DynamodbTableAttribute[] | undefined>;
    public readonly billingMode!: pulumi.Output<string | undefined>;
    public readonly deletionProtectionEnabled!: pulumi.Output<boolean | undefined>;
    public readonly globalSecondaryIndices!: pulumi.Output<outputs.DynamodbTableGlobalSecondaryIndex[] | undefined>;
    public readonly hashKey!: pulumi.Output<string>;
    public readonly importTable!: pulumi.Output<outputs.DynamodbTableImportTable | undefined>;
    public readonly localSecondaryIndices!: pulumi.Output<outputs.DynamodbTableLocalSecondaryIndex[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly pointInTimeRecovery!: pulumi.Output<outputs.DynamodbTablePointInTimeRecovery | undefined>;
    public readonly rangeKey!: pulumi.Output<string | undefined>;
    public readonly readCapacity!: pulumi.Output<number>;
    public readonly replicas!: pulumi.Output<outputs.DynamodbTableReplica[] | undefined>;
    public readonly restoreDateTime!: pulumi.Output<string | undefined>;
    public readonly restoreSourceName!: pulumi.Output<string | undefined>;
    public readonly restoreSourceTableArn!: pulumi.Output<string | undefined>;
    public readonly restoreToLatestTime!: pulumi.Output<boolean | undefined>;
    public readonly serverSideEncryption!: pulumi.Output<outputs.DynamodbTableServerSideEncryption | undefined>;
    public /*out*/ readonly streamArn!: pulumi.Output<string>;
    public readonly streamEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly streamLabel!: pulumi.Output<string>;
    public readonly streamViewType!: pulumi.Output<string>;
    public readonly tableClass!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.DynamodbTableTimeouts | undefined>;
    public readonly ttl!: pulumi.Output<outputs.DynamodbTableTtl | undefined>;
    public readonly writeCapacity!: pulumi.Output<number>;

    /**
     * Create a DynamodbTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DynamodbTableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DynamodbTableArgs | DynamodbTableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DynamodbTableState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["attributes"] = state ? state.attributes : undefined;
            resourceInputs["billingMode"] = state ? state.billingMode : undefined;
            resourceInputs["deletionProtectionEnabled"] = state ? state.deletionProtectionEnabled : undefined;
            resourceInputs["globalSecondaryIndices"] = state ? state.globalSecondaryIndices : undefined;
            resourceInputs["hashKey"] = state ? state.hashKey : undefined;
            resourceInputs["importTable"] = state ? state.importTable : undefined;
            resourceInputs["localSecondaryIndices"] = state ? state.localSecondaryIndices : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pointInTimeRecovery"] = state ? state.pointInTimeRecovery : undefined;
            resourceInputs["rangeKey"] = state ? state.rangeKey : undefined;
            resourceInputs["readCapacity"] = state ? state.readCapacity : undefined;
            resourceInputs["replicas"] = state ? state.replicas : undefined;
            resourceInputs["restoreDateTime"] = state ? state.restoreDateTime : undefined;
            resourceInputs["restoreSourceName"] = state ? state.restoreSourceName : undefined;
            resourceInputs["restoreSourceTableArn"] = state ? state.restoreSourceTableArn : undefined;
            resourceInputs["restoreToLatestTime"] = state ? state.restoreToLatestTime : undefined;
            resourceInputs["serverSideEncryption"] = state ? state.serverSideEncryption : undefined;
            resourceInputs["streamArn"] = state ? state.streamArn : undefined;
            resourceInputs["streamEnabled"] = state ? state.streamEnabled : undefined;
            resourceInputs["streamLabel"] = state ? state.streamLabel : undefined;
            resourceInputs["streamViewType"] = state ? state.streamViewType : undefined;
            resourceInputs["tableClass"] = state ? state.tableClass : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
            resourceInputs["writeCapacity"] = state ? state.writeCapacity : undefined;
        } else {
            const args = argsOrState as DynamodbTableArgs | undefined;
            resourceInputs["attributes"] = args ? args.attributes : undefined;
            resourceInputs["billingMode"] = args ? args.billingMode : undefined;
            resourceInputs["deletionProtectionEnabled"] = args ? args.deletionProtectionEnabled : undefined;
            resourceInputs["globalSecondaryIndices"] = args ? args.globalSecondaryIndices : undefined;
            resourceInputs["hashKey"] = args ? args.hashKey : undefined;
            resourceInputs["importTable"] = args ? args.importTable : undefined;
            resourceInputs["localSecondaryIndices"] = args ? args.localSecondaryIndices : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pointInTimeRecovery"] = args ? args.pointInTimeRecovery : undefined;
            resourceInputs["rangeKey"] = args ? args.rangeKey : undefined;
            resourceInputs["readCapacity"] = args ? args.readCapacity : undefined;
            resourceInputs["replicas"] = args ? args.replicas : undefined;
            resourceInputs["restoreDateTime"] = args ? args.restoreDateTime : undefined;
            resourceInputs["restoreSourceName"] = args ? args.restoreSourceName : undefined;
            resourceInputs["restoreSourceTableArn"] = args ? args.restoreSourceTableArn : undefined;
            resourceInputs["restoreToLatestTime"] = args ? args.restoreToLatestTime : undefined;
            resourceInputs["serverSideEncryption"] = args ? args.serverSideEncryption : undefined;
            resourceInputs["streamEnabled"] = args ? args.streamEnabled : undefined;
            resourceInputs["streamViewType"] = args ? args.streamViewType : undefined;
            resourceInputs["tableClass"] = args ? args.tableClass : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["writeCapacity"] = args ? args.writeCapacity : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["streamArn"] = undefined /*out*/;
            resourceInputs["streamLabel"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DynamodbTable.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DynamodbTable resources.
 */
export interface DynamodbTableState {
    arn?: pulumi.Input<string>;
    attributes?: pulumi.Input<pulumi.Input<inputs.DynamodbTableAttribute>[]>;
    billingMode?: pulumi.Input<string>;
    deletionProtectionEnabled?: pulumi.Input<boolean>;
    globalSecondaryIndices?: pulumi.Input<pulumi.Input<inputs.DynamodbTableGlobalSecondaryIndex>[]>;
    hashKey?: pulumi.Input<string>;
    importTable?: pulumi.Input<inputs.DynamodbTableImportTable>;
    localSecondaryIndices?: pulumi.Input<pulumi.Input<inputs.DynamodbTableLocalSecondaryIndex>[]>;
    name?: pulumi.Input<string>;
    pointInTimeRecovery?: pulumi.Input<inputs.DynamodbTablePointInTimeRecovery>;
    rangeKey?: pulumi.Input<string>;
    readCapacity?: pulumi.Input<number>;
    replicas?: pulumi.Input<pulumi.Input<inputs.DynamodbTableReplica>[]>;
    restoreDateTime?: pulumi.Input<string>;
    restoreSourceName?: pulumi.Input<string>;
    restoreSourceTableArn?: pulumi.Input<string>;
    restoreToLatestTime?: pulumi.Input<boolean>;
    serverSideEncryption?: pulumi.Input<inputs.DynamodbTableServerSideEncryption>;
    streamArn?: pulumi.Input<string>;
    streamEnabled?: pulumi.Input<boolean>;
    streamLabel?: pulumi.Input<string>;
    streamViewType?: pulumi.Input<string>;
    tableClass?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.DynamodbTableTimeouts>;
    ttl?: pulumi.Input<inputs.DynamodbTableTtl>;
    writeCapacity?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DynamodbTable resource.
 */
export interface DynamodbTableArgs {
    attributes?: pulumi.Input<pulumi.Input<inputs.DynamodbTableAttribute>[]>;
    billingMode?: pulumi.Input<string>;
    deletionProtectionEnabled?: pulumi.Input<boolean>;
    globalSecondaryIndices?: pulumi.Input<pulumi.Input<inputs.DynamodbTableGlobalSecondaryIndex>[]>;
    hashKey?: pulumi.Input<string>;
    importTable?: pulumi.Input<inputs.DynamodbTableImportTable>;
    localSecondaryIndices?: pulumi.Input<pulumi.Input<inputs.DynamodbTableLocalSecondaryIndex>[]>;
    name?: pulumi.Input<string>;
    pointInTimeRecovery?: pulumi.Input<inputs.DynamodbTablePointInTimeRecovery>;
    rangeKey?: pulumi.Input<string>;
    readCapacity?: pulumi.Input<number>;
    replicas?: pulumi.Input<pulumi.Input<inputs.DynamodbTableReplica>[]>;
    restoreDateTime?: pulumi.Input<string>;
    restoreSourceName?: pulumi.Input<string>;
    restoreSourceTableArn?: pulumi.Input<string>;
    restoreToLatestTime?: pulumi.Input<boolean>;
    serverSideEncryption?: pulumi.Input<inputs.DynamodbTableServerSideEncryption>;
    streamEnabled?: pulumi.Input<boolean>;
    streamViewType?: pulumi.Input<string>;
    tableClass?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.DynamodbTableTimeouts>;
    ttl?: pulumi.Input<inputs.DynamodbTableTtl>;
    writeCapacity?: pulumi.Input<number>;
}
