// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LightsailLbCertificateAttachment extends pulumi.CustomResource {
    /**
     * Get an existing LightsailLbCertificateAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LightsailLbCertificateAttachmentState, opts?: pulumi.CustomResourceOptions): LightsailLbCertificateAttachment {
        return new LightsailLbCertificateAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/lightsailLbCertificateAttachment:LightsailLbCertificateAttachment';

    /**
     * Returns true if the given object is an instance of LightsailLbCertificateAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LightsailLbCertificateAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LightsailLbCertificateAttachment.__pulumiType;
    }

    public readonly certificateName!: pulumi.Output<string>;
    public readonly lbName!: pulumi.Output<string>;

    /**
     * Create a LightsailLbCertificateAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LightsailLbCertificateAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LightsailLbCertificateAttachmentArgs | LightsailLbCertificateAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LightsailLbCertificateAttachmentState | undefined;
            resourceInputs["certificateName"] = state ? state.certificateName : undefined;
            resourceInputs["lbName"] = state ? state.lbName : undefined;
        } else {
            const args = argsOrState as LightsailLbCertificateAttachmentArgs | undefined;
            if ((!args || args.certificateName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'certificateName'");
            }
            if ((!args || args.lbName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lbName'");
            }
            resourceInputs["certificateName"] = args ? args.certificateName : undefined;
            resourceInputs["lbName"] = args ? args.lbName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LightsailLbCertificateAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LightsailLbCertificateAttachment resources.
 */
export interface LightsailLbCertificateAttachmentState {
    certificateName?: pulumi.Input<string>;
    lbName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LightsailLbCertificateAttachment resource.
 */
export interface LightsailLbCertificateAttachmentArgs {
    certificateName: pulumi.Input<string>;
    lbName: pulumi.Input<string>;
}
