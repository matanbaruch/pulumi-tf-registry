// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ElastictranscoderPipeline extends pulumi.CustomResource {
    /**
     * Get an existing ElastictranscoderPipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElastictranscoderPipelineState, opts?: pulumi.CustomResourceOptions): ElastictranscoderPipeline {
        return new ElastictranscoderPipeline(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/elastictranscoderPipeline:ElastictranscoderPipeline';

    /**
     * Returns true if the given object is an instance of ElastictranscoderPipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ElastictranscoderPipeline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ElastictranscoderPipeline.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly awsKmsKeyArn!: pulumi.Output<string | undefined>;
    public readonly contentConfig!: pulumi.Output<outputs.ElastictranscoderPipelineContentConfig | undefined>;
    public readonly contentConfigPermissions!: pulumi.Output<outputs.ElastictranscoderPipelineContentConfigPermission[] | undefined>;
    public readonly inputBucket!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly notifications!: pulumi.Output<outputs.ElastictranscoderPipelineNotifications | undefined>;
    public readonly outputBucket!: pulumi.Output<string>;
    public readonly role!: pulumi.Output<string>;
    public readonly thumbnailConfig!: pulumi.Output<outputs.ElastictranscoderPipelineThumbnailConfig | undefined>;
    public readonly thumbnailConfigPermissions!: pulumi.Output<outputs.ElastictranscoderPipelineThumbnailConfigPermission[] | undefined>;

    /**
     * Create a ElastictranscoderPipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ElastictranscoderPipelineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElastictranscoderPipelineArgs | ElastictranscoderPipelineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ElastictranscoderPipelineState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["awsKmsKeyArn"] = state ? state.awsKmsKeyArn : undefined;
            resourceInputs["contentConfig"] = state ? state.contentConfig : undefined;
            resourceInputs["contentConfigPermissions"] = state ? state.contentConfigPermissions : undefined;
            resourceInputs["inputBucket"] = state ? state.inputBucket : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["outputBucket"] = state ? state.outputBucket : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["thumbnailConfig"] = state ? state.thumbnailConfig : undefined;
            resourceInputs["thumbnailConfigPermissions"] = state ? state.thumbnailConfigPermissions : undefined;
        } else {
            const args = argsOrState as ElastictranscoderPipelineArgs | undefined;
            if ((!args || args.inputBucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'inputBucket'");
            }
            if ((!args || args.role === undefined) && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            resourceInputs["awsKmsKeyArn"] = args ? args.awsKmsKeyArn : undefined;
            resourceInputs["contentConfig"] = args ? args.contentConfig : undefined;
            resourceInputs["contentConfigPermissions"] = args ? args.contentConfigPermissions : undefined;
            resourceInputs["inputBucket"] = args ? args.inputBucket : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["notifications"] = args ? args.notifications : undefined;
            resourceInputs["outputBucket"] = args ? args.outputBucket : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["thumbnailConfig"] = args ? args.thumbnailConfig : undefined;
            resourceInputs["thumbnailConfigPermissions"] = args ? args.thumbnailConfigPermissions : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ElastictranscoderPipeline.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ElastictranscoderPipeline resources.
 */
export interface ElastictranscoderPipelineState {
    arn?: pulumi.Input<string>;
    awsKmsKeyArn?: pulumi.Input<string>;
    contentConfig?: pulumi.Input<inputs.ElastictranscoderPipelineContentConfig>;
    contentConfigPermissions?: pulumi.Input<pulumi.Input<inputs.ElastictranscoderPipelineContentConfigPermission>[]>;
    inputBucket?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    notifications?: pulumi.Input<inputs.ElastictranscoderPipelineNotifications>;
    outputBucket?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    thumbnailConfig?: pulumi.Input<inputs.ElastictranscoderPipelineThumbnailConfig>;
    thumbnailConfigPermissions?: pulumi.Input<pulumi.Input<inputs.ElastictranscoderPipelineThumbnailConfigPermission>[]>;
}

/**
 * The set of arguments for constructing a ElastictranscoderPipeline resource.
 */
export interface ElastictranscoderPipelineArgs {
    awsKmsKeyArn?: pulumi.Input<string>;
    contentConfig?: pulumi.Input<inputs.ElastictranscoderPipelineContentConfig>;
    contentConfigPermissions?: pulumi.Input<pulumi.Input<inputs.ElastictranscoderPipelineContentConfigPermission>[]>;
    inputBucket: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    notifications?: pulumi.Input<inputs.ElastictranscoderPipelineNotifications>;
    outputBucket?: pulumi.Input<string>;
    role: pulumi.Input<string>;
    thumbnailConfig?: pulumi.Input<inputs.ElastictranscoderPipelineThumbnailConfig>;
    thumbnailConfigPermissions?: pulumi.Input<pulumi.Input<inputs.ElastictranscoderPipelineThumbnailConfigPermission>[]>;
}
