// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDxLocation(args: GetDxLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetDxLocationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getDxLocation:getDxLocation", {
        "id": args.id,
        "locationCode": args.locationCode,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDxLocation.
 */
export interface GetDxLocationArgs {
    id?: string;
    locationCode: string;
}

/**
 * A collection of values returned by getDxLocation.
 */
export interface GetDxLocationResult {
    readonly availableMacsecPortSpeeds: string[];
    readonly availablePortSpeeds: string[];
    readonly availableProviders: string[];
    readonly id: string;
    readonly locationCode: string;
    readonly locationName: string;
}
export function getDxLocationOutput(args: GetDxLocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDxLocationResult> {
    return pulumi.output(args).apply((a: any) => getDxLocation(a, opts))
}

/**
 * A collection of arguments for invoking getDxLocation.
 */
export interface GetDxLocationOutputArgs {
    id?: pulumi.Input<string>;
    locationCode: pulumi.Input<string>;
}
