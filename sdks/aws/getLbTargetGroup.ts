// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLbTargetGroup(args?: GetLbTargetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetLbTargetGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getLbTargetGroup:getLbTargetGroup", {
        "arn": args.arn,
        "id": args.id,
        "loadBalancingAnomalyMitigation": args.loadBalancingAnomalyMitigation,
        "name": args.name,
        "tags": args.tags,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLbTargetGroup.
 */
export interface GetLbTargetGroupArgs {
    arn?: string;
    id?: string;
    loadBalancingAnomalyMitigation?: string;
    name?: string;
    tags?: {[key: string]: string};
    timeouts?: inputs.GetLbTargetGroupTimeouts;
}

/**
 * A collection of values returned by getLbTargetGroup.
 */
export interface GetLbTargetGroupResult {
    readonly arn: string;
    readonly arnSuffix: string;
    readonly connectionTermination: boolean;
    readonly deregistrationDelay: string;
    readonly healthChecks: outputs.GetLbTargetGroupHealthCheck[];
    readonly id: string;
    readonly lambdaMultiValueHeadersEnabled: boolean;
    readonly loadBalancerArns: string[];
    readonly loadBalancingAlgorithmType: string;
    readonly loadBalancingAnomalyMitigation: string;
    readonly loadBalancingCrossZoneEnabled: string;
    readonly name: string;
    readonly port: number;
    readonly preserveClientIp: string;
    readonly protocol: string;
    readonly protocolVersion: string;
    readonly proxyProtocolV2: boolean;
    readonly slowStart: number;
    readonly stickinesses: outputs.GetLbTargetGroupStickiness[];
    readonly tags: {[key: string]: string};
    readonly targetType: string;
    readonly timeouts?: outputs.GetLbTargetGroupTimeouts;
    readonly vpcId: string;
}
export function getLbTargetGroupOutput(args?: GetLbTargetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbTargetGroupResult> {
    return pulumi.output(args).apply((a: any) => getLbTargetGroup(a, opts))
}

/**
 * A collection of arguments for invoking getLbTargetGroup.
 */
export interface GetLbTargetGroupOutputArgs {
    arn?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    loadBalancingAnomalyMitigation?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.GetLbTargetGroupTimeoutsArgs>;
}
