// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DbProxyEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing DbProxyEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DbProxyEndpointState, opts?: pulumi.CustomResourceOptions): DbProxyEndpoint {
        return new DbProxyEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/dbProxyEndpoint:DbProxyEndpoint';

    /**
     * Returns true if the given object is an instance of DbProxyEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DbProxyEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DbProxyEndpoint.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly dbProxyEndpointName!: pulumi.Output<string>;
    public readonly dbProxyName!: pulumi.Output<string>;
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    public /*out*/ readonly isDefault!: pulumi.Output<boolean>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly targetRole!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.DbProxyEndpointTimeouts | undefined>;
    public /*out*/ readonly vpcId!: pulumi.Output<string>;
    public readonly vpcSecurityGroupIds!: pulumi.Output<string[]>;
    public readonly vpcSubnetIds!: pulumi.Output<string[]>;

    /**
     * Create a DbProxyEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DbProxyEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DbProxyEndpointArgs | DbProxyEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DbProxyEndpointState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["dbProxyEndpointName"] = state ? state.dbProxyEndpointName : undefined;
            resourceInputs["dbProxyName"] = state ? state.dbProxyName : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["isDefault"] = state ? state.isDefault : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["targetRole"] = state ? state.targetRole : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpcSecurityGroupIds"] = state ? state.vpcSecurityGroupIds : undefined;
            resourceInputs["vpcSubnetIds"] = state ? state.vpcSubnetIds : undefined;
        } else {
            const args = argsOrState as DbProxyEndpointArgs | undefined;
            if ((!args || args.dbProxyEndpointName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbProxyEndpointName'");
            }
            if ((!args || args.dbProxyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbProxyName'");
            }
            if ((!args || args.vpcSubnetIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcSubnetIds'");
            }
            resourceInputs["dbProxyEndpointName"] = args ? args.dbProxyEndpointName : undefined;
            resourceInputs["dbProxyName"] = args ? args.dbProxyName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["targetRole"] = args ? args.targetRole : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vpcSecurityGroupIds"] = args ? args.vpcSecurityGroupIds : undefined;
            resourceInputs["vpcSubnetIds"] = args ? args.vpcSubnetIds : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["isDefault"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DbProxyEndpoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DbProxyEndpoint resources.
 */
export interface DbProxyEndpointState {
    arn?: pulumi.Input<string>;
    dbProxyEndpointName?: pulumi.Input<string>;
    dbProxyName?: pulumi.Input<string>;
    endpoint?: pulumi.Input<string>;
    isDefault?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetRole?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DbProxyEndpointTimeouts>;
    vpcId?: pulumi.Input<string>;
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    vpcSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a DbProxyEndpoint resource.
 */
export interface DbProxyEndpointArgs {
    dbProxyEndpointName: pulumi.Input<string>;
    dbProxyName: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetRole?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DbProxyEndpointTimeouts>;
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    vpcSubnetIds: pulumi.Input<pulumi.Input<string>[]>;
}
