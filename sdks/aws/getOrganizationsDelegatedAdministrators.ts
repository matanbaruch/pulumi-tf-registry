// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOrganizationsDelegatedAdministrators(args?: GetOrganizationsDelegatedAdministratorsArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationsDelegatedAdministratorsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getOrganizationsDelegatedAdministrators:getOrganizationsDelegatedAdministrators", {
        "id": args.id,
        "servicePrincipal": args.servicePrincipal,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrganizationsDelegatedAdministrators.
 */
export interface GetOrganizationsDelegatedAdministratorsArgs {
    id?: string;
    servicePrincipal?: string;
}

/**
 * A collection of values returned by getOrganizationsDelegatedAdministrators.
 */
export interface GetOrganizationsDelegatedAdministratorsResult {
    readonly delegatedAdministrators: outputs.GetOrganizationsDelegatedAdministratorsDelegatedAdministrator[];
    readonly id: string;
    readonly servicePrincipal?: string;
}
export function getOrganizationsDelegatedAdministratorsOutput(args?: GetOrganizationsDelegatedAdministratorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationsDelegatedAdministratorsResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationsDelegatedAdministrators(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationsDelegatedAdministrators.
 */
export interface GetOrganizationsDelegatedAdministratorsOutputArgs {
    id?: pulumi.Input<string>;
    servicePrincipal?: pulumi.Input<string>;
}
