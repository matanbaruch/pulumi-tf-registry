// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSecretsmanagerRandomPassword(args?: GetSecretsmanagerRandomPasswordArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretsmanagerRandomPasswordResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getSecretsmanagerRandomPassword:getSecretsmanagerRandomPassword", {
        "excludeCharacters": args.excludeCharacters,
        "excludeLowercase": args.excludeLowercase,
        "excludeNumbers": args.excludeNumbers,
        "excludePunctuation": args.excludePunctuation,
        "excludeUppercase": args.excludeUppercase,
        "id": args.id,
        "includeSpace": args.includeSpace,
        "passwordLength": args.passwordLength,
        "requireEachIncludedType": args.requireEachIncludedType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecretsmanagerRandomPassword.
 */
export interface GetSecretsmanagerRandomPasswordArgs {
    excludeCharacters?: string;
    excludeLowercase?: boolean;
    excludeNumbers?: boolean;
    excludePunctuation?: boolean;
    excludeUppercase?: boolean;
    id?: string;
    includeSpace?: boolean;
    passwordLength?: number;
    requireEachIncludedType?: boolean;
}

/**
 * A collection of values returned by getSecretsmanagerRandomPassword.
 */
export interface GetSecretsmanagerRandomPasswordResult {
    readonly excludeCharacters?: string;
    readonly excludeLowercase?: boolean;
    readonly excludeNumbers?: boolean;
    readonly excludePunctuation?: boolean;
    readonly excludeUppercase?: boolean;
    readonly id: string;
    readonly includeSpace?: boolean;
    readonly passwordLength?: number;
    readonly randomPassword: string;
    readonly requireEachIncludedType?: boolean;
}
export function getSecretsmanagerRandomPasswordOutput(args?: GetSecretsmanagerRandomPasswordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretsmanagerRandomPasswordResult> {
    return pulumi.output(args).apply((a: any) => getSecretsmanagerRandomPassword(a, opts))
}

/**
 * A collection of arguments for invoking getSecretsmanagerRandomPassword.
 */
export interface GetSecretsmanagerRandomPasswordOutputArgs {
    excludeCharacters?: pulumi.Input<string>;
    excludeLowercase?: pulumi.Input<boolean>;
    excludeNumbers?: pulumi.Input<boolean>;
    excludePunctuation?: pulumi.Input<boolean>;
    excludeUppercase?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    includeSpace?: pulumi.Input<boolean>;
    passwordLength?: pulumi.Input<number>;
    requireEachIncludedType?: pulumi.Input<boolean>;
}
