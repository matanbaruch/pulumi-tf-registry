// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrganizationsPoliciesForTarget(args: GetOrganizationsPoliciesForTargetArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationsPoliciesForTargetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getOrganizationsPoliciesForTarget:getOrganizationsPoliciesForTarget", {
        "filter": args.filter,
        "id": args.id,
        "targetId": args.targetId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrganizationsPoliciesForTarget.
 */
export interface GetOrganizationsPoliciesForTargetArgs {
    filter: string;
    id?: string;
    targetId: string;
}

/**
 * A collection of values returned by getOrganizationsPoliciesForTarget.
 */
export interface GetOrganizationsPoliciesForTargetResult {
    readonly filter: string;
    readonly id: string;
    readonly ids: string[];
    readonly targetId: string;
}
export function getOrganizationsPoliciesForTargetOutput(args: GetOrganizationsPoliciesForTargetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationsPoliciesForTargetResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationsPoliciesForTarget(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationsPoliciesForTarget.
 */
export interface GetOrganizationsPoliciesForTargetOutputArgs {
    filter: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    targetId: pulumi.Input<string>;
}
