// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getQuicksightTheme(args: GetQuicksightThemeArgs, opts?: pulumi.InvokeOptions): Promise<GetQuicksightThemeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getQuicksightTheme:getQuicksightTheme", {
        "awsAccountId": args.awsAccountId,
        "id": args.id,
        "tags": args.tags,
        "themeId": args.themeId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getQuicksightTheme.
 */
export interface GetQuicksightThemeArgs {
    awsAccountId?: string;
    id?: string;
    tags?: {[key: string]: string};
    themeId: string;
}

/**
 * A collection of values returned by getQuicksightTheme.
 */
export interface GetQuicksightThemeResult {
    readonly arn: string;
    readonly awsAccountId: string;
    readonly baseThemeId: string;
    readonly configurations: outputs.GetQuicksightThemeConfiguration[];
    readonly createdTime: string;
    readonly id: string;
    readonly lastUpdatedTime: string;
    readonly name: string;
    readonly permissions: outputs.GetQuicksightThemePermission[];
    readonly status: string;
    readonly tags: {[key: string]: string};
    readonly themeId: string;
    readonly versionDescription: string;
    readonly versionNumber: number;
}
export function getQuicksightThemeOutput(args: GetQuicksightThemeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQuicksightThemeResult> {
    return pulumi.output(args).apply((a: any) => getQuicksightTheme(a, opts))
}

/**
 * A collection of arguments for invoking getQuicksightTheme.
 */
export interface GetQuicksightThemeOutputArgs {
    awsAccountId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    themeId: pulumi.Input<string>;
}
