// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAcmpcaCertificate(args: GetAcmpcaCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetAcmpcaCertificateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getAcmpcaCertificate:getAcmpcaCertificate", {
        "arn": args.arn,
        "certificateAuthorityArn": args.certificateAuthorityArn,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAcmpcaCertificate.
 */
export interface GetAcmpcaCertificateArgs {
    arn: string;
    certificateAuthorityArn: string;
    id?: string;
}

/**
 * A collection of values returned by getAcmpcaCertificate.
 */
export interface GetAcmpcaCertificateResult {
    readonly arn: string;
    readonly certificate: string;
    readonly certificateAuthorityArn: string;
    readonly certificateChain: string;
    readonly id: string;
}
export function getAcmpcaCertificateOutput(args: GetAcmpcaCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAcmpcaCertificateResult> {
    return pulumi.output(args).apply((a: any) => getAcmpcaCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getAcmpcaCertificate.
 */
export interface GetAcmpcaCertificateOutputArgs {
    arn: pulumi.Input<string>;
    certificateAuthorityArn: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
