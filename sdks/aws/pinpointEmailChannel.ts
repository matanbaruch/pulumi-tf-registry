// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PinpointEmailChannel extends pulumi.CustomResource {
    /**
     * Get an existing PinpointEmailChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PinpointEmailChannelState, opts?: pulumi.CustomResourceOptions): PinpointEmailChannel {
        return new PinpointEmailChannel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/pinpointEmailChannel:PinpointEmailChannel';

    /**
     * Returns true if the given object is an instance of PinpointEmailChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PinpointEmailChannel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PinpointEmailChannel.__pulumiType;
    }

    public readonly applicationId!: pulumi.Output<string>;
    public readonly configurationSet!: pulumi.Output<string | undefined>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public readonly fromAddress!: pulumi.Output<string>;
    public readonly identity!: pulumi.Output<string>;
    public /*out*/ readonly messagesPerSecond!: pulumi.Output<number>;
    public readonly roleArn!: pulumi.Output<string | undefined>;

    /**
     * Create a PinpointEmailChannel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PinpointEmailChannelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PinpointEmailChannelArgs | PinpointEmailChannelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PinpointEmailChannelState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["configurationSet"] = state ? state.configurationSet : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["fromAddress"] = state ? state.fromAddress : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["messagesPerSecond"] = state ? state.messagesPerSecond : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
        } else {
            const args = argsOrState as PinpointEmailChannelArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.fromAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fromAddress'");
            }
            if ((!args || args.identity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identity'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["configurationSet"] = args ? args.configurationSet : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["fromAddress"] = args ? args.fromAddress : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["messagesPerSecond"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PinpointEmailChannel.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PinpointEmailChannel resources.
 */
export interface PinpointEmailChannelState {
    applicationId?: pulumi.Input<string>;
    configurationSet?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    fromAddress?: pulumi.Input<string>;
    identity?: pulumi.Input<string>;
    messagesPerSecond?: pulumi.Input<number>;
    roleArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PinpointEmailChannel resource.
 */
export interface PinpointEmailChannelArgs {
    applicationId: pulumi.Input<string>;
    configurationSet?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    fromAddress: pulumi.Input<string>;
    identity: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
}
