// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApiGatewayAuthorizer(args: GetApiGatewayAuthorizerArgs, opts?: pulumi.InvokeOptions): Promise<GetApiGatewayAuthorizerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getApiGatewayAuthorizer:getApiGatewayAuthorizer", {
        "authorizerId": args.authorizerId,
        "id": args.id,
        "restApiId": args.restApiId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApiGatewayAuthorizer.
 */
export interface GetApiGatewayAuthorizerArgs {
    authorizerId: string;
    id?: string;
    restApiId: string;
}

/**
 * A collection of values returned by getApiGatewayAuthorizer.
 */
export interface GetApiGatewayAuthorizerResult {
    readonly arn: string;
    readonly authorizerCredentials: string;
    readonly authorizerId: string;
    readonly authorizerResultTtlInSeconds: number;
    readonly authorizerUri: string;
    readonly id: string;
    readonly identitySource: string;
    readonly identityValidationExpression: string;
    readonly name: string;
    readonly providerArns: string[];
    readonly restApiId: string;
    readonly type: string;
}
export function getApiGatewayAuthorizerOutput(args: GetApiGatewayAuthorizerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApiGatewayAuthorizerResult> {
    return pulumi.output(args).apply((a: any) => getApiGatewayAuthorizer(a, opts))
}

/**
 * A collection of arguments for invoking getApiGatewayAuthorizer.
 */
export interface GetApiGatewayAuthorizerOutputArgs {
    authorizerId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    restApiId: pulumi.Input<string>;
}
