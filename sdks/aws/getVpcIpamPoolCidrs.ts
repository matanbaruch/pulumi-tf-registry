// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcIpamPoolCidrs(args: GetVpcIpamPoolCidrsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcIpamPoolCidrsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getVpcIpamPoolCidrs:getVpcIpamPoolCidrs", {
        "filters": args.filters,
        "id": args.id,
        "ipamPoolId": args.ipamPoolId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcIpamPoolCidrs.
 */
export interface GetVpcIpamPoolCidrsArgs {
    filters?: inputs.GetVpcIpamPoolCidrsFilter[];
    id?: string;
    ipamPoolId: string;
    timeouts?: inputs.GetVpcIpamPoolCidrsTimeouts;
}

/**
 * A collection of values returned by getVpcIpamPoolCidrs.
 */
export interface GetVpcIpamPoolCidrsResult {
    readonly filters?: outputs.GetVpcIpamPoolCidrsFilter[];
    readonly id: string;
    readonly ipamPoolCidrs: outputs.GetVpcIpamPoolCidrsIpamPoolCidr[];
    readonly ipamPoolId: string;
    readonly timeouts?: outputs.GetVpcIpamPoolCidrsTimeouts;
}
export function getVpcIpamPoolCidrsOutput(args: GetVpcIpamPoolCidrsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcIpamPoolCidrsResult> {
    return pulumi.output(args).apply((a: any) => getVpcIpamPoolCidrs(a, opts))
}

/**
 * A collection of arguments for invoking getVpcIpamPoolCidrs.
 */
export interface GetVpcIpamPoolCidrsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetVpcIpamPoolCidrsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    ipamPoolId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetVpcIpamPoolCidrsTimeoutsArgs>;
}
