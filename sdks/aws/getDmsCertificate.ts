// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDmsCertificate(args: GetDmsCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetDmsCertificateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getDmsCertificate:getDmsCertificate", {
        "certificateId": args.certificateId,
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDmsCertificate.
 */
export interface GetDmsCertificateArgs {
    certificateId: string;
    id?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getDmsCertificate.
 */
export interface GetDmsCertificateResult {
    readonly certificateArn: string;
    readonly certificateCreationDate: string;
    readonly certificateId: string;
    readonly certificateOwner: string;
    readonly certificatePem: string;
    readonly certificateWallet: string;
    readonly id: string;
    readonly keyLength: number;
    readonly signingAlgorithm: string;
    readonly tags: {[key: string]: string};
    readonly validFromDate: string;
    readonly validToDate: string;
}
export function getDmsCertificateOutput(args: GetDmsCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDmsCertificateResult> {
    return pulumi.output(args).apply((a: any) => getDmsCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getDmsCertificate.
 */
export interface GetDmsCertificateOutputArgs {
    certificateId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
