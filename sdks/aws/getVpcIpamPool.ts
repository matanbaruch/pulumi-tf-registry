// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcIpamPool(args?: GetVpcIpamPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcIpamPoolResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getVpcIpamPool:getVpcIpamPool", {
        "allocationResourceTags": args.allocationResourceTags,
        "filters": args.filters,
        "id": args.id,
        "ipamPoolId": args.ipamPoolId,
        "tags": args.tags,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcIpamPool.
 */
export interface GetVpcIpamPoolArgs {
    allocationResourceTags?: {[key: string]: string};
    filters?: inputs.GetVpcIpamPoolFilter[];
    id?: string;
    ipamPoolId?: string;
    tags?: {[key: string]: string};
    timeouts?: inputs.GetVpcIpamPoolTimeouts;
}

/**
 * A collection of values returned by getVpcIpamPool.
 */
export interface GetVpcIpamPoolResult {
    readonly addressFamily: string;
    readonly allocationDefaultNetmaskLength: number;
    readonly allocationMaxNetmaskLength: number;
    readonly allocationMinNetmaskLength: number;
    readonly allocationResourceTags: {[key: string]: string};
    readonly arn: string;
    readonly autoImport: boolean;
    readonly awsService: string;
    readonly description: string;
    readonly filters?: outputs.GetVpcIpamPoolFilter[];
    readonly id?: string;
    readonly ipamPoolId?: string;
    readonly ipamScopeId: string;
    readonly ipamScopeType: string;
    readonly locale: string;
    readonly poolDepth: number;
    readonly publiclyAdvertisable: boolean;
    readonly sourceIpamPoolId: string;
    readonly state: string;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetVpcIpamPoolTimeouts;
}
export function getVpcIpamPoolOutput(args?: GetVpcIpamPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcIpamPoolResult> {
    return pulumi.output(args).apply((a: any) => getVpcIpamPool(a, opts))
}

/**
 * A collection of arguments for invoking getVpcIpamPool.
 */
export interface GetVpcIpamPoolOutputArgs {
    allocationResourceTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetVpcIpamPoolFilterArgs>[]>;
    id?: pulumi.Input<string>;
    ipamPoolId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.GetVpcIpamPoolTimeoutsArgs>;
}
