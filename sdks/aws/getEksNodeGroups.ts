// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEksNodeGroups(args: GetEksNodeGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetEksNodeGroupsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getEksNodeGroups:getEksNodeGroups", {
        "clusterName": args.clusterName,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEksNodeGroups.
 */
export interface GetEksNodeGroupsArgs {
    clusterName: string;
    id?: string;
}

/**
 * A collection of values returned by getEksNodeGroups.
 */
export interface GetEksNodeGroupsResult {
    readonly clusterName: string;
    readonly id: string;
    readonly names: string[];
}
export function getEksNodeGroupsOutput(args: GetEksNodeGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEksNodeGroupsResult> {
    return pulumi.output(args).apply((a: any) => getEksNodeGroups(a, opts))
}

/**
 * A collection of arguments for invoking getEksNodeGroups.
 */
export interface GetEksNodeGroupsOutputArgs {
    clusterName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
