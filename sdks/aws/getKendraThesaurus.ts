// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKendraThesaurus(args: GetKendraThesaurusArgs, opts?: pulumi.InvokeOptions): Promise<GetKendraThesaurusResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getKendraThesaurus:getKendraThesaurus", {
        "id": args.id,
        "indexId": args.indexId,
        "tags": args.tags,
        "thesaurusId": args.thesaurusId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKendraThesaurus.
 */
export interface GetKendraThesaurusArgs {
    id?: string;
    indexId: string;
    tags?: {[key: string]: string};
    thesaurusId: string;
}

/**
 * A collection of values returned by getKendraThesaurus.
 */
export interface GetKendraThesaurusResult {
    readonly arn: string;
    readonly createdAt: string;
    readonly description: string;
    readonly errorMessage: string;
    readonly fileSizeBytes: number;
    readonly id: string;
    readonly indexId: string;
    readonly name: string;
    readonly roleArn: string;
    readonly sourceS3Paths: outputs.GetKendraThesaurusSourceS3Path[];
    readonly status: string;
    readonly synonymRuleCount: number;
    readonly tags: {[key: string]: string};
    readonly termCount: number;
    readonly thesaurusId: string;
    readonly updatedAt: string;
}
export function getKendraThesaurusOutput(args: GetKendraThesaurusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKendraThesaurusResult> {
    return pulumi.output(args).apply((a: any) => getKendraThesaurus(a, opts))
}

/**
 * A collection of arguments for invoking getKendraThesaurus.
 */
export interface GetKendraThesaurusOutputArgs {
    id?: pulumi.Input<string>;
    indexId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    thesaurusId: pulumi.Input<string>;
}
