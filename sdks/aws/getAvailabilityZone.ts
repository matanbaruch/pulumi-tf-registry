// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAvailabilityZone(args?: GetAvailabilityZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetAvailabilityZoneResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getAvailabilityZone:getAvailabilityZone", {
        "allAvailabilityZones": args.allAvailabilityZones,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "state": args.state,
        "timeouts": args.timeouts,
        "zoneId": args.zoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAvailabilityZone.
 */
export interface GetAvailabilityZoneArgs {
    allAvailabilityZones?: boolean;
    filters?: inputs.GetAvailabilityZoneFilter[];
    id?: string;
    name?: string;
    state?: string;
    timeouts?: inputs.GetAvailabilityZoneTimeouts;
    zoneId?: string;
}

/**
 * A collection of values returned by getAvailabilityZone.
 */
export interface GetAvailabilityZoneResult {
    readonly allAvailabilityZones?: boolean;
    readonly filters?: outputs.GetAvailabilityZoneFilter[];
    readonly groupName: string;
    readonly id: string;
    readonly name: string;
    readonly nameSuffix: string;
    readonly networkBorderGroup: string;
    readonly optInStatus: string;
    readonly parentZoneId: string;
    readonly parentZoneName: string;
    readonly region: string;
    readonly state: string;
    readonly timeouts?: outputs.GetAvailabilityZoneTimeouts;
    readonly zoneId: string;
    readonly zoneType: string;
}
export function getAvailabilityZoneOutput(args?: GetAvailabilityZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAvailabilityZoneResult> {
    return pulumi.output(args).apply((a: any) => getAvailabilityZone(a, opts))
}

/**
 * A collection of arguments for invoking getAvailabilityZone.
 */
export interface GetAvailabilityZoneOutputArgs {
    allAvailabilityZones?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetAvailabilityZoneFilterArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetAvailabilityZoneTimeoutsArgs>;
    zoneId?: pulumi.Input<string>;
}
