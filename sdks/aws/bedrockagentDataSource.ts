// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BedrockagentDataSource extends pulumi.CustomResource {
    /**
     * Get an existing BedrockagentDataSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BedrockagentDataSourceState, opts?: pulumi.CustomResourceOptions): BedrockagentDataSource {
        return new BedrockagentDataSource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/bedrockagentDataSource:BedrockagentDataSource';

    /**
     * Returns true if the given object is an instance of BedrockagentDataSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BedrockagentDataSource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BedrockagentDataSource.__pulumiType;
    }

    public readonly dataDeletionPolicy!: pulumi.Output<string>;
    public readonly dataSourceConfigurations!: pulumi.Output<outputs.BedrockagentDataSourceDataSourceConfiguration[] | undefined>;
    public /*out*/ readonly dataSourceId!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly knowledgeBaseId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly serverSideEncryptionConfigurations!: pulumi.Output<outputs.BedrockagentDataSourceServerSideEncryptionConfiguration[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.BedrockagentDataSourceTimeouts | undefined>;
    public readonly vectorIngestionConfigurations!: pulumi.Output<outputs.BedrockagentDataSourceVectorIngestionConfiguration[] | undefined>;

    /**
     * Create a BedrockagentDataSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BedrockagentDataSourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BedrockagentDataSourceArgs | BedrockagentDataSourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BedrockagentDataSourceState | undefined;
            resourceInputs["dataDeletionPolicy"] = state ? state.dataDeletionPolicy : undefined;
            resourceInputs["dataSourceConfigurations"] = state ? state.dataSourceConfigurations : undefined;
            resourceInputs["dataSourceId"] = state ? state.dataSourceId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["knowledgeBaseId"] = state ? state.knowledgeBaseId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serverSideEncryptionConfigurations"] = state ? state.serverSideEncryptionConfigurations : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vectorIngestionConfigurations"] = state ? state.vectorIngestionConfigurations : undefined;
        } else {
            const args = argsOrState as BedrockagentDataSourceArgs | undefined;
            if ((!args || args.knowledgeBaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'knowledgeBaseId'");
            }
            resourceInputs["dataDeletionPolicy"] = args ? args.dataDeletionPolicy : undefined;
            resourceInputs["dataSourceConfigurations"] = args ? args.dataSourceConfigurations : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["knowledgeBaseId"] = args ? args.knowledgeBaseId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serverSideEncryptionConfigurations"] = args ? args.serverSideEncryptionConfigurations : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vectorIngestionConfigurations"] = args ? args.vectorIngestionConfigurations : undefined;
            resourceInputs["dataSourceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BedrockagentDataSource.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BedrockagentDataSource resources.
 */
export interface BedrockagentDataSourceState {
    dataDeletionPolicy?: pulumi.Input<string>;
    dataSourceConfigurations?: pulumi.Input<pulumi.Input<inputs.BedrockagentDataSourceDataSourceConfiguration>[]>;
    dataSourceId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    knowledgeBaseId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    serverSideEncryptionConfigurations?: pulumi.Input<pulumi.Input<inputs.BedrockagentDataSourceServerSideEncryptionConfiguration>[]>;
    timeouts?: pulumi.Input<inputs.BedrockagentDataSourceTimeouts>;
    vectorIngestionConfigurations?: pulumi.Input<pulumi.Input<inputs.BedrockagentDataSourceVectorIngestionConfiguration>[]>;
}

/**
 * The set of arguments for constructing a BedrockagentDataSource resource.
 */
export interface BedrockagentDataSourceArgs {
    dataDeletionPolicy?: pulumi.Input<string>;
    dataSourceConfigurations?: pulumi.Input<pulumi.Input<inputs.BedrockagentDataSourceDataSourceConfiguration>[]>;
    description?: pulumi.Input<string>;
    knowledgeBaseId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    serverSideEncryptionConfigurations?: pulumi.Input<pulumi.Input<inputs.BedrockagentDataSourceServerSideEncryptionConfiguration>[]>;
    timeouts?: pulumi.Input<inputs.BedrockagentDataSourceTimeouts>;
    vectorIngestionConfigurations?: pulumi.Input<pulumi.Input<inputs.BedrockagentDataSourceVectorIngestionConfiguration>[]>;
}
