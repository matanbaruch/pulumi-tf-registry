// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSsmParameter(args: GetSsmParameterArgs, opts?: pulumi.InvokeOptions): Promise<GetSsmParameterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getSsmParameter:getSsmParameter", {
        "id": args.id,
        "name": args.name,
        "withDecryption": args.withDecryption,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSsmParameter.
 */
export interface GetSsmParameterArgs {
    id?: string;
    name: string;
    withDecryption?: boolean;
}

/**
 * A collection of values returned by getSsmParameter.
 */
export interface GetSsmParameterResult {
    readonly arn: string;
    readonly id: string;
    readonly insecureValue: string;
    readonly name: string;
    readonly type: string;
    readonly value: string;
    readonly version: number;
    readonly withDecryption?: boolean;
}
export function getSsmParameterOutput(args: GetSsmParameterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSsmParameterResult> {
    return pulumi.output(args).apply((a: any) => getSsmParameter(a, opts))
}

/**
 * A collection of arguments for invoking getSsmParameter.
 */
export interface GetSsmParameterOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    withDecryption?: pulumi.Input<boolean>;
}
