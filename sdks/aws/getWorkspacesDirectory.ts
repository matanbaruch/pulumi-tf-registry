// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWorkspacesDirectory(args: GetWorkspacesDirectoryArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspacesDirectoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getWorkspacesDirectory:getWorkspacesDirectory", {
        "directoryId": args.directoryId,
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkspacesDirectory.
 */
export interface GetWorkspacesDirectoryArgs {
    directoryId: string;
    id?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getWorkspacesDirectory.
 */
export interface GetWorkspacesDirectoryResult {
    readonly alias: string;
    readonly customerUserName: string;
    readonly directoryId: string;
    readonly directoryName: string;
    readonly directoryType: string;
    readonly dnsIpAddresses: string[];
    readonly iamRoleId: string;
    readonly id: string;
    readonly ipGroupIds: string[];
    readonly registrationCode: string;
    readonly selfServicePermissions: outputs.GetWorkspacesDirectorySelfServicePermission[];
    readonly subnetIds: string[];
    readonly tags?: {[key: string]: string};
    readonly workspaceAccessProperties: outputs.GetWorkspacesDirectoryWorkspaceAccessProperty[];
    readonly workspaceCreationProperties: outputs.GetWorkspacesDirectoryWorkspaceCreationProperty[];
    readonly workspaceSecurityGroupId: string;
}
export function getWorkspacesDirectoryOutput(args: GetWorkspacesDirectoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspacesDirectoryResult> {
    return pulumi.output(args).apply((a: any) => getWorkspacesDirectory(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspacesDirectory.
 */
export interface GetWorkspacesDirectoryOutputArgs {
    directoryId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
