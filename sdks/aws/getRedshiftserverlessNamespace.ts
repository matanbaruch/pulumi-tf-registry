// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRedshiftserverlessNamespace(args: GetRedshiftserverlessNamespaceArgs, opts?: pulumi.InvokeOptions): Promise<GetRedshiftserverlessNamespaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getRedshiftserverlessNamespace:getRedshiftserverlessNamespace", {
        "id": args.id,
        "namespaceName": args.namespaceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRedshiftserverlessNamespace.
 */
export interface GetRedshiftserverlessNamespaceArgs {
    id?: string;
    namespaceName: string;
}

/**
 * A collection of values returned by getRedshiftserverlessNamespace.
 */
export interface GetRedshiftserverlessNamespaceResult {
    readonly adminUsername: string;
    readonly arn: string;
    readonly dbName: string;
    readonly defaultIamRoleArn: string;
    readonly iamRoles: string[];
    readonly id: string;
    readonly kmsKeyId: string;
    readonly logExports: string[];
    readonly namespaceId: string;
    readonly namespaceName: string;
}
export function getRedshiftserverlessNamespaceOutput(args: GetRedshiftserverlessNamespaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRedshiftserverlessNamespaceResult> {
    return pulumi.output(args).apply((a: any) => getRedshiftserverlessNamespace(a, opts))
}

/**
 * A collection of arguments for invoking getRedshiftserverlessNamespace.
 */
export interface GetRedshiftserverlessNamespaceOutputArgs {
    id?: pulumi.Input<string>;
    namespaceName: pulumi.Input<string>;
}
