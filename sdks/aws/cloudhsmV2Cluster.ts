// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudhsmV2Cluster extends pulumi.CustomResource {
    /**
     * Get an existing CloudhsmV2Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudhsmV2ClusterState, opts?: pulumi.CustomResourceOptions): CloudhsmV2Cluster {
        return new CloudhsmV2Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/cloudhsmV2Cluster:CloudhsmV2Cluster';

    /**
     * Returns true if the given object is an instance of CloudhsmV2Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudhsmV2Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudhsmV2Cluster.__pulumiType;
    }

    public /*out*/ readonly clusterCertificates!: pulumi.Output<outputs.CloudhsmV2ClusterClusterCertificate[]>;
    public /*out*/ readonly clusterId!: pulumi.Output<string>;
    public /*out*/ readonly clusterState!: pulumi.Output<string>;
    public readonly hsmType!: pulumi.Output<string>;
    public /*out*/ readonly securityGroupId!: pulumi.Output<string>;
    public readonly sourceBackupIdentifier!: pulumi.Output<string | undefined>;
    public readonly subnetIds!: pulumi.Output<string[]>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.CloudhsmV2ClusterTimeouts | undefined>;
    public /*out*/ readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a CloudhsmV2Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudhsmV2ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudhsmV2ClusterArgs | CloudhsmV2ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudhsmV2ClusterState | undefined;
            resourceInputs["clusterCertificates"] = state ? state.clusterCertificates : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["clusterState"] = state ? state.clusterState : undefined;
            resourceInputs["hsmType"] = state ? state.hsmType : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["sourceBackupIdentifier"] = state ? state.sourceBackupIdentifier : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as CloudhsmV2ClusterArgs | undefined;
            if ((!args || args.hsmType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hsmType'");
            }
            if ((!args || args.subnetIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetIds'");
            }
            resourceInputs["hsmType"] = args ? args.hsmType : undefined;
            resourceInputs["sourceBackupIdentifier"] = args ? args.sourceBackupIdentifier : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["clusterCertificates"] = undefined /*out*/;
            resourceInputs["clusterId"] = undefined /*out*/;
            resourceInputs["clusterState"] = undefined /*out*/;
            resourceInputs["securityGroupId"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudhsmV2Cluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudhsmV2Cluster resources.
 */
export interface CloudhsmV2ClusterState {
    clusterCertificates?: pulumi.Input<pulumi.Input<inputs.CloudhsmV2ClusterClusterCertificate>[]>;
    clusterId?: pulumi.Input<string>;
    clusterState?: pulumi.Input<string>;
    hsmType?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    sourceBackupIdentifier?: pulumi.Input<string>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.CloudhsmV2ClusterTimeouts>;
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudhsmV2Cluster resource.
 */
export interface CloudhsmV2ClusterArgs {
    hsmType: pulumi.Input<string>;
    sourceBackupIdentifier?: pulumi.Input<string>;
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.CloudhsmV2ClusterTimeouts>;
}
