// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConnectLambdaFunctionAssociation(args: GetConnectLambdaFunctionAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectLambdaFunctionAssociationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getConnectLambdaFunctionAssociation:getConnectLambdaFunctionAssociation", {
        "functionArn": args.functionArn,
        "id": args.id,
        "instanceId": args.instanceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectLambdaFunctionAssociation.
 */
export interface GetConnectLambdaFunctionAssociationArgs {
    functionArn: string;
    id?: string;
    instanceId: string;
}

/**
 * A collection of values returned by getConnectLambdaFunctionAssociation.
 */
export interface GetConnectLambdaFunctionAssociationResult {
    readonly functionArn: string;
    readonly id: string;
    readonly instanceId: string;
}
export function getConnectLambdaFunctionAssociationOutput(args: GetConnectLambdaFunctionAssociationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectLambdaFunctionAssociationResult> {
    return pulumi.output(args).apply((a: any) => getConnectLambdaFunctionAssociation(a, opts))
}

/**
 * A collection of arguments for invoking getConnectLambdaFunctionAssociation.
 */
export interface GetConnectLambdaFunctionAssociationOutputArgs {
    functionArn: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
}
