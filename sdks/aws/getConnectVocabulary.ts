// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConnectVocabulary(args: GetConnectVocabularyArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectVocabularyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getConnectVocabulary:getConnectVocabulary", {
        "id": args.id,
        "instanceId": args.instanceId,
        "name": args.name,
        "tags": args.tags,
        "vocabularyId": args.vocabularyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectVocabulary.
 */
export interface GetConnectVocabularyArgs {
    id?: string;
    instanceId: string;
    name?: string;
    tags?: {[key: string]: string};
    vocabularyId?: string;
}

/**
 * A collection of values returned by getConnectVocabulary.
 */
export interface GetConnectVocabularyResult {
    readonly arn: string;
    readonly content: string;
    readonly failureReason: string;
    readonly id: string;
    readonly instanceId: string;
    readonly languageCode: string;
    readonly lastModifiedTime: string;
    readonly name: string;
    readonly state: string;
    readonly tags: {[key: string]: string};
    readonly vocabularyId: string;
}
export function getConnectVocabularyOutput(args: GetConnectVocabularyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectVocabularyResult> {
    return pulumi.output(args).apply((a: any) => getConnectVocabulary(a, opts))
}

/**
 * A collection of arguments for invoking getConnectVocabulary.
 */
export interface GetConnectVocabularyOutputArgs {
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vocabularyId?: pulumi.Input<string>;
}
