// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNatGateway(args?: GetNatGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetNatGatewayResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getNatGateway:getNatGateway", {
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
        "subnetId": args.subnetId,
        "tags": args.tags,
        "timeouts": args.timeouts,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNatGateway.
 */
export interface GetNatGatewayArgs {
    filters?: inputs.GetNatGatewayFilter[];
    id?: string;
    state?: string;
    subnetId?: string;
    tags?: {[key: string]: string};
    timeouts?: inputs.GetNatGatewayTimeouts;
    vpcId?: string;
}

/**
 * A collection of values returned by getNatGateway.
 */
export interface GetNatGatewayResult {
    readonly allocationId: string;
    readonly associationId: string;
    readonly connectivityType: string;
    readonly filters?: outputs.GetNatGatewayFilter[];
    readonly id: string;
    readonly networkInterfaceId: string;
    readonly privateIp: string;
    readonly publicIp: string;
    readonly secondaryAllocationIds: string[];
    readonly secondaryPrivateIpAddressCount: number;
    readonly secondaryPrivateIpAddresses: string[];
    readonly state: string;
    readonly subnetId: string;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetNatGatewayTimeouts;
    readonly vpcId: string;
}
export function getNatGatewayOutput(args?: GetNatGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNatGatewayResult> {
    return pulumi.output(args).apply((a: any) => getNatGateway(a, opts))
}

/**
 * A collection of arguments for invoking getNatGateway.
 */
export interface GetNatGatewayOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetNatGatewayFilterArgs>[]>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.GetNatGatewayTimeoutsArgs>;
    vpcId?: pulumi.Input<string>;
}
