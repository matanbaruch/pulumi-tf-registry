// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRoute53Zone(args?: GetRoute53ZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetRoute53ZoneResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getRoute53Zone:getRoute53Zone", {
        "id": args.id,
        "name": args.name,
        "privateZone": args.privateZone,
        "tags": args.tags,
        "vpcId": args.vpcId,
        "zoneId": args.zoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoute53Zone.
 */
export interface GetRoute53ZoneArgs {
    id?: string;
    name?: string;
    privateZone?: boolean;
    tags?: {[key: string]: string};
    vpcId?: string;
    zoneId?: string;
}

/**
 * A collection of values returned by getRoute53Zone.
 */
export interface GetRoute53ZoneResult {
    readonly arn: string;
    readonly callerReference: string;
    readonly comment: string;
    readonly id: string;
    readonly linkedServiceDescription: string;
    readonly linkedServicePrincipal: string;
    readonly name: string;
    readonly nameServers: string[];
    readonly primaryNameServer: string;
    readonly privateZone?: boolean;
    readonly resourceRecordSetCount: number;
    readonly tags: {[key: string]: string};
    readonly vpcId: string;
    readonly zoneId: string;
}
export function getRoute53ZoneOutput(args?: GetRoute53ZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoute53ZoneResult> {
    return pulumi.output(args).apply((a: any) => getRoute53Zone(a, opts))
}

/**
 * A collection of arguments for invoking getRoute53Zone.
 */
export interface GetRoute53ZoneOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    privateZone?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcId?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}
