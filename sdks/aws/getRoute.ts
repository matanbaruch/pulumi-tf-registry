// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRoute(args: GetRouteArgs, opts?: pulumi.InvokeOptions): Promise<GetRouteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getRoute:getRoute", {
        "carrierGatewayId": args.carrierGatewayId,
        "coreNetworkArn": args.coreNetworkArn,
        "destinationCidrBlock": args.destinationCidrBlock,
        "destinationIpv6CidrBlock": args.destinationIpv6CidrBlock,
        "destinationPrefixListId": args.destinationPrefixListId,
        "egressOnlyGatewayId": args.egressOnlyGatewayId,
        "gatewayId": args.gatewayId,
        "id": args.id,
        "instanceId": args.instanceId,
        "localGatewayId": args.localGatewayId,
        "natGatewayId": args.natGatewayId,
        "networkInterfaceId": args.networkInterfaceId,
        "routeTableId": args.routeTableId,
        "timeouts": args.timeouts,
        "transitGatewayId": args.transitGatewayId,
        "vpcPeeringConnectionId": args.vpcPeeringConnectionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoute.
 */
export interface GetRouteArgs {
    carrierGatewayId?: string;
    coreNetworkArn?: string;
    destinationCidrBlock?: string;
    destinationIpv6CidrBlock?: string;
    destinationPrefixListId?: string;
    egressOnlyGatewayId?: string;
    gatewayId?: string;
    id?: string;
    instanceId?: string;
    localGatewayId?: string;
    natGatewayId?: string;
    networkInterfaceId?: string;
    routeTableId: string;
    timeouts?: inputs.GetRouteTimeouts;
    transitGatewayId?: string;
    vpcPeeringConnectionId?: string;
}

/**
 * A collection of values returned by getRoute.
 */
export interface GetRouteResult {
    readonly carrierGatewayId: string;
    readonly coreNetworkArn: string;
    readonly destinationCidrBlock: string;
    readonly destinationIpv6CidrBlock: string;
    readonly destinationPrefixListId: string;
    readonly egressOnlyGatewayId: string;
    readonly gatewayId: string;
    readonly id: string;
    readonly instanceId: string;
    readonly localGatewayId: string;
    readonly natGatewayId: string;
    readonly networkInterfaceId: string;
    readonly routeTableId: string;
    readonly timeouts?: outputs.GetRouteTimeouts;
    readonly transitGatewayId: string;
    readonly vpcPeeringConnectionId: string;
}
export function getRouteOutput(args: GetRouteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouteResult> {
    return pulumi.output(args).apply((a: any) => getRoute(a, opts))
}

/**
 * A collection of arguments for invoking getRoute.
 */
export interface GetRouteOutputArgs {
    carrierGatewayId?: pulumi.Input<string>;
    coreNetworkArn?: pulumi.Input<string>;
    destinationCidrBlock?: pulumi.Input<string>;
    destinationIpv6CidrBlock?: pulumi.Input<string>;
    destinationPrefixListId?: pulumi.Input<string>;
    egressOnlyGatewayId?: pulumi.Input<string>;
    gatewayId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    localGatewayId?: pulumi.Input<string>;
    natGatewayId?: pulumi.Input<string>;
    networkInterfaceId?: pulumi.Input<string>;
    routeTableId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetRouteTimeoutsArgs>;
    transitGatewayId?: pulumi.Input<string>;
    vpcPeeringConnectionId?: pulumi.Input<string>;
}
