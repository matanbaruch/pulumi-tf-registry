// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGrafanaWorkspace(args: GetGrafanaWorkspaceArgs, opts?: pulumi.InvokeOptions): Promise<GetGrafanaWorkspaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getGrafanaWorkspace:getGrafanaWorkspace", {
        "id": args.id,
        "tags": args.tags,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGrafanaWorkspace.
 */
export interface GetGrafanaWorkspaceArgs {
    id?: string;
    tags?: {[key: string]: string};
    workspaceId: string;
}

/**
 * A collection of values returned by getGrafanaWorkspace.
 */
export interface GetGrafanaWorkspaceResult {
    readonly accountAccessType: string;
    readonly arn: string;
    readonly authenticationProviders: string[];
    readonly createdDate: string;
    readonly dataSources: string[];
    readonly description: string;
    readonly endpoint: string;
    readonly grafanaVersion: string;
    readonly id: string;
    readonly lastUpdatedDate: string;
    readonly name: string;
    readonly notificationDestinations: string[];
    readonly organizationRoleName: string;
    readonly organizationalUnits: string[];
    readonly permissionType: string;
    readonly roleArn: string;
    readonly samlConfigurationStatus: string;
    readonly stackSetName: string;
    readonly status: string;
    readonly tags: {[key: string]: string};
    readonly workspaceId: string;
}
export function getGrafanaWorkspaceOutput(args: GetGrafanaWorkspaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGrafanaWorkspaceResult> {
    return pulumi.output(args).apply((a: any) => getGrafanaWorkspace(a, opts))
}

/**
 * A collection of arguments for invoking getGrafanaWorkspace.
 */
export interface GetGrafanaWorkspaceOutputArgs {
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    workspaceId: pulumi.Input<string>;
}
