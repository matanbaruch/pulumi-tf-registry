// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AppsyncApiKey extends pulumi.CustomResource {
    /**
     * Get an existing AppsyncApiKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppsyncApiKeyState, opts?: pulumi.CustomResourceOptions): AppsyncApiKey {
        return new AppsyncApiKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/appsyncApiKey:AppsyncApiKey';

    /**
     * Returns true if the given object is an instance of AppsyncApiKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppsyncApiKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppsyncApiKey.__pulumiType;
    }

    public readonly apiId!: pulumi.Output<string>;
    public /*out*/ readonly apiKeyId!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly expires!: pulumi.Output<string | undefined>;
    public /*out*/ readonly key!: pulumi.Output<string>;

    /**
     * Create a AppsyncApiKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppsyncApiKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppsyncApiKeyArgs | AppsyncApiKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppsyncApiKeyState | undefined;
            resourceInputs["apiId"] = state ? state.apiId : undefined;
            resourceInputs["apiKeyId"] = state ? state.apiKeyId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["expires"] = state ? state.expires : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
        } else {
            const args = argsOrState as AppsyncApiKeyArgs | undefined;
            if ((!args || args.apiId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiId'");
            }
            resourceInputs["apiId"] = args ? args.apiId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["expires"] = args ? args.expires : undefined;
            resourceInputs["apiKeyId"] = undefined /*out*/;
            resourceInputs["key"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["key"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AppsyncApiKey.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AppsyncApiKey resources.
 */
export interface AppsyncApiKeyState {
    apiId?: pulumi.Input<string>;
    apiKeyId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    expires?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppsyncApiKey resource.
 */
export interface AppsyncApiKeyArgs {
    apiId: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    expires?: pulumi.Input<string>;
}
