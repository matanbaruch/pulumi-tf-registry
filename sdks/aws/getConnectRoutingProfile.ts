// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConnectRoutingProfile(args: GetConnectRoutingProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectRoutingProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getConnectRoutingProfile:getConnectRoutingProfile", {
        "id": args.id,
        "instanceId": args.instanceId,
        "name": args.name,
        "routingProfileId": args.routingProfileId,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectRoutingProfile.
 */
export interface GetConnectRoutingProfileArgs {
    id?: string;
    instanceId: string;
    name?: string;
    routingProfileId?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getConnectRoutingProfile.
 */
export interface GetConnectRoutingProfileResult {
    readonly arn: string;
    readonly defaultOutboundQueueId: string;
    readonly description: string;
    readonly id: string;
    readonly instanceId: string;
    readonly mediaConcurrencies: outputs.GetConnectRoutingProfileMediaConcurrency[];
    readonly name: string;
    readonly queueConfigs: outputs.GetConnectRoutingProfileQueueConfig[];
    readonly routingProfileId: string;
    readonly tags: {[key: string]: string};
}
export function getConnectRoutingProfileOutput(args: GetConnectRoutingProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectRoutingProfileResult> {
    return pulumi.output(args).apply((a: any) => getConnectRoutingProfile(a, opts))
}

/**
 * A collection of arguments for invoking getConnectRoutingProfile.
 */
export interface GetConnectRoutingProfileOutputArgs {
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    routingProfileId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
