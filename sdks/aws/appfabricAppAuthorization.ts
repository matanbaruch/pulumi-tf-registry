// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AppfabricAppAuthorization extends pulumi.CustomResource {
    /**
     * Get an existing AppfabricAppAuthorization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppfabricAppAuthorizationState, opts?: pulumi.CustomResourceOptions): AppfabricAppAuthorization {
        return new AppfabricAppAuthorization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/appfabricAppAuthorization:AppfabricAppAuthorization';

    /**
     * Returns true if the given object is an instance of AppfabricAppAuthorization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppfabricAppAuthorization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppfabricAppAuthorization.__pulumiType;
    }

    public readonly app!: pulumi.Output<string>;
    public readonly appBundleArn!: pulumi.Output<string>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly authType!: pulumi.Output<string>;
    public /*out*/ readonly authUrl!: pulumi.Output<string>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly credentials!: pulumi.Output<outputs.AppfabricAppAuthorizationCredential[] | undefined>;
    public /*out*/ readonly persona!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly tenants!: pulumi.Output<outputs.AppfabricAppAuthorizationTenant[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.AppfabricAppAuthorizationTimeouts | undefined>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a AppfabricAppAuthorization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppfabricAppAuthorizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppfabricAppAuthorizationArgs | AppfabricAppAuthorizationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppfabricAppAuthorizationState | undefined;
            resourceInputs["app"] = state ? state.app : undefined;
            resourceInputs["appBundleArn"] = state ? state.appBundleArn : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["authType"] = state ? state.authType : undefined;
            resourceInputs["authUrl"] = state ? state.authUrl : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["credentials"] = state ? state.credentials : undefined;
            resourceInputs["persona"] = state ? state.persona : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["tenants"] = state ? state.tenants : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as AppfabricAppAuthorizationArgs | undefined;
            if ((!args || args.app === undefined) && !opts.urn) {
                throw new Error("Missing required property 'app'");
            }
            if ((!args || args.appBundleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appBundleArn'");
            }
            if ((!args || args.authType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authType'");
            }
            resourceInputs["app"] = args ? args.app : undefined;
            resourceInputs["appBundleArn"] = args ? args.appBundleArn : undefined;
            resourceInputs["authType"] = args ? args.authType : undefined;
            resourceInputs["credentials"] = args ? args.credentials : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenants"] = args ? args.tenants : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["authUrl"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["persona"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppfabricAppAuthorization.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AppfabricAppAuthorization resources.
 */
export interface AppfabricAppAuthorizationState {
    app?: pulumi.Input<string>;
    appBundleArn?: pulumi.Input<string>;
    arn?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    authUrl?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    credentials?: pulumi.Input<pulumi.Input<inputs.AppfabricAppAuthorizationCredential>[]>;
    persona?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenants?: pulumi.Input<pulumi.Input<inputs.AppfabricAppAuthorizationTenant>[]>;
    timeouts?: pulumi.Input<inputs.AppfabricAppAuthorizationTimeouts>;
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppfabricAppAuthorization resource.
 */
export interface AppfabricAppAuthorizationArgs {
    app: pulumi.Input<string>;
    appBundleArn: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    credentials?: pulumi.Input<pulumi.Input<inputs.AppfabricAppAuthorizationCredential>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenants?: pulumi.Input<pulumi.Input<inputs.AppfabricAppAuthorizationTenant>[]>;
    timeouts?: pulumi.Input<inputs.AppfabricAppAuthorizationTimeouts>;
}
