// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IotThing extends pulumi.CustomResource {
    /**
     * Get an existing IotThing resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IotThingState, opts?: pulumi.CustomResourceOptions): IotThing {
        return new IotThing(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/iotThing:IotThing';

    /**
     * Returns true if the given object is an instance of IotThing.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotThing {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotThing.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly attributes!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly defaultClientId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly thingTypeName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a IotThing resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IotThingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IotThingArgs | IotThingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IotThingState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["attributes"] = state ? state.attributes : undefined;
            resourceInputs["defaultClientId"] = state ? state.defaultClientId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["thingTypeName"] = state ? state.thingTypeName : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as IotThingArgs | undefined;
            resourceInputs["attributes"] = args ? args.attributes : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["thingTypeName"] = args ? args.thingTypeName : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["defaultClientId"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IotThing.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IotThing resources.
 */
export interface IotThingState {
    arn?: pulumi.Input<string>;
    attributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    defaultClientId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    thingTypeName?: pulumi.Input<string>;
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a IotThing resource.
 */
export interface IotThingArgs {
    attributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    thingTypeName?: pulumi.Input<string>;
}
