// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEmrcontainersVirtualCluster(args: GetEmrcontainersVirtualClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetEmrcontainersVirtualClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getEmrcontainersVirtualCluster:getEmrcontainersVirtualCluster", {
        "id": args.id,
        "tags": args.tags,
        "virtualClusterId": args.virtualClusterId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEmrcontainersVirtualCluster.
 */
export interface GetEmrcontainersVirtualClusterArgs {
    id?: string;
    tags?: {[key: string]: string};
    virtualClusterId: string;
}

/**
 * A collection of values returned by getEmrcontainersVirtualCluster.
 */
export interface GetEmrcontainersVirtualClusterResult {
    readonly arn: string;
    readonly containerProviders: outputs.GetEmrcontainersVirtualClusterContainerProvider[];
    readonly createdAt: string;
    readonly id: string;
    readonly name: string;
    readonly state: string;
    readonly tags: {[key: string]: string};
    readonly virtualClusterId: string;
}
export function getEmrcontainersVirtualClusterOutput(args: GetEmrcontainersVirtualClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmrcontainersVirtualClusterResult> {
    return pulumi.output(args).apply((a: any) => getEmrcontainersVirtualCluster(a, opts))
}

/**
 * A collection of arguments for invoking getEmrcontainersVirtualCluster.
 */
export interface GetEmrcontainersVirtualClusterOutputArgs {
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    virtualClusterId: pulumi.Input<string>;
}
