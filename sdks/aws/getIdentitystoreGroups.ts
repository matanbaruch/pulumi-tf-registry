// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentitystoreGroups(args: GetIdentitystoreGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentitystoreGroupsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getIdentitystoreGroups:getIdentitystoreGroups", {
        "identityStoreId": args.identityStoreId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentitystoreGroups.
 */
export interface GetIdentitystoreGroupsArgs {
    identityStoreId: string;
}

/**
 * A collection of values returned by getIdentitystoreGroups.
 */
export interface GetIdentitystoreGroupsResult {
    readonly groups: outputs.GetIdentitystoreGroupsGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly identityStoreId: string;
}
export function getIdentitystoreGroupsOutput(args: GetIdentitystoreGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentitystoreGroupsResult> {
    return pulumi.output(args).apply((a: any) => getIdentitystoreGroups(a, opts))
}

/**
 * A collection of arguments for invoking getIdentitystoreGroups.
 */
export interface GetIdentitystoreGroupsOutputArgs {
    identityStoreId: pulumi.Input<string>;
}
