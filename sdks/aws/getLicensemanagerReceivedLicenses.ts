// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLicensemanagerReceivedLicenses(args?: GetLicensemanagerReceivedLicensesArgs, opts?: pulumi.InvokeOptions): Promise<GetLicensemanagerReceivedLicensesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getLicensemanagerReceivedLicenses:getLicensemanagerReceivedLicenses", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLicensemanagerReceivedLicenses.
 */
export interface GetLicensemanagerReceivedLicensesArgs {
    filters?: inputs.GetLicensemanagerReceivedLicensesFilter[];
    id?: string;
}

/**
 * A collection of values returned by getLicensemanagerReceivedLicenses.
 */
export interface GetLicensemanagerReceivedLicensesResult {
    readonly arns: string[];
    readonly filters?: outputs.GetLicensemanagerReceivedLicensesFilter[];
    readonly id: string;
}
export function getLicensemanagerReceivedLicensesOutput(args?: GetLicensemanagerReceivedLicensesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLicensemanagerReceivedLicensesResult> {
    return pulumi.output(args).apply((a: any) => getLicensemanagerReceivedLicenses(a, opts))
}

/**
 * A collection of arguments for invoking getLicensemanagerReceivedLicenses.
 */
export interface GetLicensemanagerReceivedLicensesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetLicensemanagerReceivedLicensesFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
