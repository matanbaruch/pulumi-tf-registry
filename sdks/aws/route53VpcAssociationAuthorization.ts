// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Route53VpcAssociationAuthorization extends pulumi.CustomResource {
    /**
     * Get an existing Route53VpcAssociationAuthorization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Route53VpcAssociationAuthorizationState, opts?: pulumi.CustomResourceOptions): Route53VpcAssociationAuthorization {
        return new Route53VpcAssociationAuthorization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/route53VpcAssociationAuthorization:Route53VpcAssociationAuthorization';

    /**
     * Returns true if the given object is an instance of Route53VpcAssociationAuthorization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Route53VpcAssociationAuthorization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Route53VpcAssociationAuthorization.__pulumiType;
    }

    public readonly vpcId!: pulumi.Output<string>;
    public readonly vpcRegion!: pulumi.Output<string>;
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a Route53VpcAssociationAuthorization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Route53VpcAssociationAuthorizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Route53VpcAssociationAuthorizationArgs | Route53VpcAssociationAuthorizationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Route53VpcAssociationAuthorizationState | undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpcRegion"] = state ? state.vpcRegion : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as Route53VpcAssociationAuthorizationArgs | undefined;
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vpcRegion"] = args ? args.vpcRegion : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Route53VpcAssociationAuthorization.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Route53VpcAssociationAuthorization resources.
 */
export interface Route53VpcAssociationAuthorizationState {
    vpcId?: pulumi.Input<string>;
    vpcRegion?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Route53VpcAssociationAuthorization resource.
 */
export interface Route53VpcAssociationAuthorizationArgs {
    vpcId: pulumi.Input<string>;
    vpcRegion?: pulumi.Input<string>;
    zoneId: pulumi.Input<string>;
}
