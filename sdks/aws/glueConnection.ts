// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GlueConnection extends pulumi.CustomResource {
    /**
     * Get an existing GlueConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GlueConnectionState, opts?: pulumi.CustomResourceOptions): GlueConnection {
        return new GlueConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/glueConnection:GlueConnection';

    /**
     * Returns true if the given object is an instance of GlueConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GlueConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GlueConnection.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly catalogId!: pulumi.Output<string>;
    public readonly connectionProperties!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly connectionType!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly matchCriterias!: pulumi.Output<string[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly physicalConnectionRequirements!: pulumi.Output<outputs.GlueConnectionPhysicalConnectionRequirements | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a GlueConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GlueConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GlueConnectionArgs | GlueConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GlueConnectionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["catalogId"] = state ? state.catalogId : undefined;
            resourceInputs["connectionProperties"] = state ? state.connectionProperties : undefined;
            resourceInputs["connectionType"] = state ? state.connectionType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["matchCriterias"] = state ? state.matchCriterias : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["physicalConnectionRequirements"] = state ? state.physicalConnectionRequirements : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as GlueConnectionArgs | undefined;
            resourceInputs["catalogId"] = args ? args.catalogId : undefined;
            resourceInputs["connectionProperties"] = args?.connectionProperties ? pulumi.secret(args.connectionProperties) : undefined;
            resourceInputs["connectionType"] = args ? args.connectionType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["matchCriterias"] = args ? args.matchCriterias : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["physicalConnectionRequirements"] = args ? args.physicalConnectionRequirements : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["connectionProperties"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(GlueConnection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GlueConnection resources.
 */
export interface GlueConnectionState {
    arn?: pulumi.Input<string>;
    catalogId?: pulumi.Input<string>;
    connectionProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    connectionType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    matchCriterias?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    physicalConnectionRequirements?: pulumi.Input<inputs.GlueConnectionPhysicalConnectionRequirements>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a GlueConnection resource.
 */
export interface GlueConnectionArgs {
    catalogId?: pulumi.Input<string>;
    connectionProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    connectionType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    matchCriterias?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    physicalConnectionRequirements?: pulumi.Input<inputs.GlueConnectionPhysicalConnectionRequirements>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
