// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getControltowerControls(args: GetControltowerControlsArgs, opts?: pulumi.InvokeOptions): Promise<GetControltowerControlsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getControltowerControls:getControltowerControls", {
        "id": args.id,
        "targetIdentifier": args.targetIdentifier,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getControltowerControls.
 */
export interface GetControltowerControlsArgs {
    id?: string;
    targetIdentifier: string;
}

/**
 * A collection of values returned by getControltowerControls.
 */
export interface GetControltowerControlsResult {
    readonly enabledControls: string[];
    readonly id: string;
    readonly targetIdentifier: string;
}
export function getControltowerControlsOutput(args: GetControltowerControlsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetControltowerControlsResult> {
    return pulumi.output(args).apply((a: any) => getControltowerControls(a, opts))
}

/**
 * A collection of arguments for invoking getControltowerControls.
 */
export interface GetControltowerControlsOutputArgs {
    id?: pulumi.Input<string>;
    targetIdentifier: pulumi.Input<string>;
}
