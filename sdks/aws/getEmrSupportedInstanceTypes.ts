// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEmrSupportedInstanceTypes(args: GetEmrSupportedInstanceTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetEmrSupportedInstanceTypesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getEmrSupportedInstanceTypes:getEmrSupportedInstanceTypes", {
        "releaseLabel": args.releaseLabel,
        "supportedInstanceTypes": args.supportedInstanceTypes,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEmrSupportedInstanceTypes.
 */
export interface GetEmrSupportedInstanceTypesArgs {
    releaseLabel: string;
    supportedInstanceTypes?: inputs.GetEmrSupportedInstanceTypesSupportedInstanceType[];
}

/**
 * A collection of values returned by getEmrSupportedInstanceTypes.
 */
export interface GetEmrSupportedInstanceTypesResult {
    readonly id: string;
    readonly releaseLabel: string;
    readonly supportedInstanceTypes?: outputs.GetEmrSupportedInstanceTypesSupportedInstanceType[];
}
export function getEmrSupportedInstanceTypesOutput(args: GetEmrSupportedInstanceTypesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmrSupportedInstanceTypesResult> {
    return pulumi.output(args).apply((a: any) => getEmrSupportedInstanceTypes(a, opts))
}

/**
 * A collection of arguments for invoking getEmrSupportedInstanceTypes.
 */
export interface GetEmrSupportedInstanceTypesOutputArgs {
    releaseLabel: pulumi.Input<string>;
    supportedInstanceTypes?: pulumi.Input<pulumi.Input<inputs.GetEmrSupportedInstanceTypesSupportedInstanceTypeArgs>[]>;
}
