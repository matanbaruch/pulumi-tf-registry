// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getQuicksightDataSet(args: GetQuicksightDataSetArgs, opts?: pulumi.InvokeOptions): Promise<GetQuicksightDataSetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getQuicksightDataSet:getQuicksightDataSet", {
        "awsAccountId": args.awsAccountId,
        "columnLevelPermissionRules": args.columnLevelPermissionRules,
        "dataSetId": args.dataSetId,
        "id": args.id,
        "tags": args.tags,
        "tagsAll": args.tagsAll,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getQuicksightDataSet.
 */
export interface GetQuicksightDataSetArgs {
    awsAccountId?: string;
    columnLevelPermissionRules?: inputs.GetQuicksightDataSetColumnLevelPermissionRule[];
    dataSetId: string;
    id?: string;
    tags?: {[key: string]: string};
    /**
     * @deprecated Deprecated
     */
    tagsAll?: {[key: string]: string};
}

/**
 * A collection of values returned by getQuicksightDataSet.
 */
export interface GetQuicksightDataSetResult {
    readonly arn: string;
    readonly awsAccountId: string;
    readonly columnGroups: outputs.GetQuicksightDataSetColumnGroup[];
    readonly columnLevelPermissionRules?: outputs.GetQuicksightDataSetColumnLevelPermissionRule[];
    readonly dataSetId: string;
    readonly dataSetUsageConfigurations: outputs.GetQuicksightDataSetDataSetUsageConfiguration[];
    readonly fieldFolders: outputs.GetQuicksightDataSetFieldFolder[];
    readonly id: string;
    readonly importMode: string;
    readonly logicalTableMaps: outputs.GetQuicksightDataSetLogicalTableMap[];
    readonly name: string;
    readonly permissions: outputs.GetQuicksightDataSetPermission[];
    readonly physicalTableMaps: outputs.GetQuicksightDataSetPhysicalTableMap[];
    readonly rowLevelPermissionDataSets: outputs.GetQuicksightDataSetRowLevelPermissionDataSet[];
    readonly rowLevelPermissionTagConfigurations: outputs.GetQuicksightDataSetRowLevelPermissionTagConfiguration[];
    readonly tags: {[key: string]: string};
    /**
     * @deprecated Deprecated
     */
    readonly tagsAll: {[key: string]: string};
}
export function getQuicksightDataSetOutput(args: GetQuicksightDataSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQuicksightDataSetResult> {
    return pulumi.output(args).apply((a: any) => getQuicksightDataSet(a, opts))
}

/**
 * A collection of arguments for invoking getQuicksightDataSet.
 */
export interface GetQuicksightDataSetOutputArgs {
    awsAccountId?: pulumi.Input<string>;
    columnLevelPermissionRules?: pulumi.Input<pulumi.Input<inputs.GetQuicksightDataSetColumnLevelPermissionRuleArgs>[]>;
    dataSetId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Deprecated
     */
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
