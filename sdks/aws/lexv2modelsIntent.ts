// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Lexv2modelsIntent extends pulumi.CustomResource {
    /**
     * Get an existing Lexv2modelsIntent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Lexv2modelsIntentState, opts?: pulumi.CustomResourceOptions): Lexv2modelsIntent {
        return new Lexv2modelsIntent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/lexv2modelsIntent:Lexv2modelsIntent';

    /**
     * Returns true if the given object is an instance of Lexv2modelsIntent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Lexv2modelsIntent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Lexv2modelsIntent.__pulumiType;
    }

    public readonly botId!: pulumi.Output<string>;
    public readonly botVersion!: pulumi.Output<string>;
    public readonly closingSettings!: pulumi.Output<outputs.Lexv2modelsIntentClosingSetting[] | undefined>;
    public readonly confirmationSettings!: pulumi.Output<outputs.Lexv2modelsIntentConfirmationSetting[] | undefined>;
    public /*out*/ readonly creationDateTime!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly dialogCodeHooks!: pulumi.Output<outputs.Lexv2modelsIntentDialogCodeHook[] | undefined>;
    public readonly fulfillmentCodeHooks!: pulumi.Output<outputs.Lexv2modelsIntentFulfillmentCodeHook[] | undefined>;
    public readonly initialResponseSettings!: pulumi.Output<outputs.Lexv2modelsIntentInitialResponseSetting[] | undefined>;
    public readonly inputContexts!: pulumi.Output<outputs.Lexv2modelsIntentInputContext[] | undefined>;
    public /*out*/ readonly intentId!: pulumi.Output<string>;
    public readonly kendraConfigurations!: pulumi.Output<outputs.Lexv2modelsIntentKendraConfiguration[] | undefined>;
    public /*out*/ readonly lastUpdatedDateTime!: pulumi.Output<string>;
    public readonly localeId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly outputContexts!: pulumi.Output<outputs.Lexv2modelsIntentOutputContext[] | undefined>;
    public readonly parentIntentSignature!: pulumi.Output<string | undefined>;
    public readonly sampleUtterances!: pulumi.Output<outputs.Lexv2modelsIntentSampleUtterance[] | undefined>;
    public readonly slotPriorities!: pulumi.Output<outputs.Lexv2modelsIntentSlotPriority[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.Lexv2modelsIntentTimeouts | undefined>;

    /**
     * Create a Lexv2modelsIntent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Lexv2modelsIntentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Lexv2modelsIntentArgs | Lexv2modelsIntentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Lexv2modelsIntentState | undefined;
            resourceInputs["botId"] = state ? state.botId : undefined;
            resourceInputs["botVersion"] = state ? state.botVersion : undefined;
            resourceInputs["closingSettings"] = state ? state.closingSettings : undefined;
            resourceInputs["confirmationSettings"] = state ? state.confirmationSettings : undefined;
            resourceInputs["creationDateTime"] = state ? state.creationDateTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dialogCodeHooks"] = state ? state.dialogCodeHooks : undefined;
            resourceInputs["fulfillmentCodeHooks"] = state ? state.fulfillmentCodeHooks : undefined;
            resourceInputs["initialResponseSettings"] = state ? state.initialResponseSettings : undefined;
            resourceInputs["inputContexts"] = state ? state.inputContexts : undefined;
            resourceInputs["intentId"] = state ? state.intentId : undefined;
            resourceInputs["kendraConfigurations"] = state ? state.kendraConfigurations : undefined;
            resourceInputs["lastUpdatedDateTime"] = state ? state.lastUpdatedDateTime : undefined;
            resourceInputs["localeId"] = state ? state.localeId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["outputContexts"] = state ? state.outputContexts : undefined;
            resourceInputs["parentIntentSignature"] = state ? state.parentIntentSignature : undefined;
            resourceInputs["sampleUtterances"] = state ? state.sampleUtterances : undefined;
            resourceInputs["slotPriorities"] = state ? state.slotPriorities : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as Lexv2modelsIntentArgs | undefined;
            if ((!args || args.botId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botId'");
            }
            if ((!args || args.botVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botVersion'");
            }
            if ((!args || args.localeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'localeId'");
            }
            resourceInputs["botId"] = args ? args.botId : undefined;
            resourceInputs["botVersion"] = args ? args.botVersion : undefined;
            resourceInputs["closingSettings"] = args ? args.closingSettings : undefined;
            resourceInputs["confirmationSettings"] = args ? args.confirmationSettings : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dialogCodeHooks"] = args ? args.dialogCodeHooks : undefined;
            resourceInputs["fulfillmentCodeHooks"] = args ? args.fulfillmentCodeHooks : undefined;
            resourceInputs["initialResponseSettings"] = args ? args.initialResponseSettings : undefined;
            resourceInputs["inputContexts"] = args ? args.inputContexts : undefined;
            resourceInputs["kendraConfigurations"] = args ? args.kendraConfigurations : undefined;
            resourceInputs["localeId"] = args ? args.localeId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["outputContexts"] = args ? args.outputContexts : undefined;
            resourceInputs["parentIntentSignature"] = args ? args.parentIntentSignature : undefined;
            resourceInputs["sampleUtterances"] = args ? args.sampleUtterances : undefined;
            resourceInputs["slotPriorities"] = args ? args.slotPriorities : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["creationDateTime"] = undefined /*out*/;
            resourceInputs["intentId"] = undefined /*out*/;
            resourceInputs["lastUpdatedDateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Lexv2modelsIntent.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Lexv2modelsIntent resources.
 */
export interface Lexv2modelsIntentState {
    botId?: pulumi.Input<string>;
    botVersion?: pulumi.Input<string>;
    closingSettings?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentClosingSetting>[]>;
    confirmationSettings?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentConfirmationSetting>[]>;
    creationDateTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    dialogCodeHooks?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentDialogCodeHook>[]>;
    fulfillmentCodeHooks?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentFulfillmentCodeHook>[]>;
    initialResponseSettings?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentInitialResponseSetting>[]>;
    inputContexts?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentInputContext>[]>;
    intentId?: pulumi.Input<string>;
    kendraConfigurations?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentKendraConfiguration>[]>;
    lastUpdatedDateTime?: pulumi.Input<string>;
    localeId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    outputContexts?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentOutputContext>[]>;
    parentIntentSignature?: pulumi.Input<string>;
    sampleUtterances?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentSampleUtterance>[]>;
    slotPriorities?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentSlotPriority>[]>;
    timeouts?: pulumi.Input<inputs.Lexv2modelsIntentTimeouts>;
}

/**
 * The set of arguments for constructing a Lexv2modelsIntent resource.
 */
export interface Lexv2modelsIntentArgs {
    botId: pulumi.Input<string>;
    botVersion: pulumi.Input<string>;
    closingSettings?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentClosingSetting>[]>;
    confirmationSettings?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentConfirmationSetting>[]>;
    description?: pulumi.Input<string>;
    dialogCodeHooks?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentDialogCodeHook>[]>;
    fulfillmentCodeHooks?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentFulfillmentCodeHook>[]>;
    initialResponseSettings?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentInitialResponseSetting>[]>;
    inputContexts?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentInputContext>[]>;
    kendraConfigurations?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentKendraConfiguration>[]>;
    localeId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    outputContexts?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentOutputContext>[]>;
    parentIntentSignature?: pulumi.Input<string>;
    sampleUtterances?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentSampleUtterance>[]>;
    slotPriorities?: pulumi.Input<pulumi.Input<inputs.Lexv2modelsIntentSlotPriority>[]>;
    timeouts?: pulumi.Input<inputs.Lexv2modelsIntentTimeouts>;
}
