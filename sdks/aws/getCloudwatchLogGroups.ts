// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudwatchLogGroups(args?: GetCloudwatchLogGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudwatchLogGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getCloudwatchLogGroups:getCloudwatchLogGroups", {
        "id": args.id,
        "logGroupNamePrefix": args.logGroupNamePrefix,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudwatchLogGroups.
 */
export interface GetCloudwatchLogGroupsArgs {
    id?: string;
    logGroupNamePrefix?: string;
}

/**
 * A collection of values returned by getCloudwatchLogGroups.
 */
export interface GetCloudwatchLogGroupsResult {
    readonly arns: string[];
    readonly id: string;
    readonly logGroupNamePrefix?: string;
    readonly logGroupNames: string[];
}
export function getCloudwatchLogGroupsOutput(args?: GetCloudwatchLogGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudwatchLogGroupsResult> {
    return pulumi.output(args).apply((a: any) => getCloudwatchLogGroups(a, opts))
}

/**
 * A collection of arguments for invoking getCloudwatchLogGroups.
 */
export interface GetCloudwatchLogGroupsOutputArgs {
    id?: pulumi.Input<string>;
    logGroupNamePrefix?: pulumi.Input<string>;
}
