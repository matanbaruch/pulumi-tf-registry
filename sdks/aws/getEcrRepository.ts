// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEcrRepository(args: GetEcrRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetEcrRepositoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getEcrRepository:getEcrRepository", {
        "id": args.id,
        "name": args.name,
        "registryId": args.registryId,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEcrRepository.
 */
export interface GetEcrRepositoryArgs {
    id?: string;
    name: string;
    registryId?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getEcrRepository.
 */
export interface GetEcrRepositoryResult {
    readonly arn: string;
    readonly encryptionConfigurations: outputs.GetEcrRepositoryEncryptionConfiguration[];
    readonly id: string;
    readonly imageScanningConfigurations: outputs.GetEcrRepositoryImageScanningConfiguration[];
    readonly imageTagMutability: string;
    readonly mostRecentImageTags: string[];
    readonly name: string;
    readonly registryId: string;
    readonly repositoryUrl: string;
    readonly tags: {[key: string]: string};
}
export function getEcrRepositoryOutput(args: GetEcrRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEcrRepositoryResult> {
    return pulumi.output(args).apply((a: any) => getEcrRepository(a, opts))
}

/**
 * A collection of arguments for invoking getEcrRepository.
 */
export interface GetEcrRepositoryOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    registryId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
