// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEcrImage(args: GetEcrImageArgs, opts?: pulumi.InvokeOptions): Promise<GetEcrImageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getEcrImage:getEcrImage", {
        "id": args.id,
        "imageDigest": args.imageDigest,
        "imageTag": args.imageTag,
        "mostRecent": args.mostRecent,
        "registryId": args.registryId,
        "repositoryName": args.repositoryName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEcrImage.
 */
export interface GetEcrImageArgs {
    id?: string;
    imageDigest?: string;
    imageTag?: string;
    mostRecent?: boolean;
    registryId?: string;
    repositoryName: string;
}

/**
 * A collection of values returned by getEcrImage.
 */
export interface GetEcrImageResult {
    readonly id: string;
    readonly imageDigest: string;
    readonly imagePushedAt: number;
    readonly imageSizeInBytes: number;
    readonly imageTag?: string;
    readonly imageTags: string[];
    readonly imageUri: string;
    readonly mostRecent?: boolean;
    readonly registryId: string;
    readonly repositoryName: string;
}
export function getEcrImageOutput(args: GetEcrImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEcrImageResult> {
    return pulumi.output(args).apply((a: any) => getEcrImage(a, opts))
}

/**
 * A collection of arguments for invoking getEcrImage.
 */
export interface GetEcrImageOutputArgs {
    id?: pulumi.Input<string>;
    imageDigest?: pulumi.Input<string>;
    imageTag?: pulumi.Input<string>;
    mostRecent?: pulumi.Input<boolean>;
    registryId?: pulumi.Input<string>;
    repositoryName: pulumi.Input<string>;
}
