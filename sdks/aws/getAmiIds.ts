// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAmiIds(args: GetAmiIdsArgs, opts?: pulumi.InvokeOptions): Promise<GetAmiIdsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getAmiIds:getAmiIds", {
        "executableUsers": args.executableUsers,
        "filters": args.filters,
        "id": args.id,
        "includeDeprecated": args.includeDeprecated,
        "nameRegex": args.nameRegex,
        "owners": args.owners,
        "sortAscending": args.sortAscending,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAmiIds.
 */
export interface GetAmiIdsArgs {
    executableUsers?: string[];
    filters?: inputs.GetAmiIdsFilter[];
    id?: string;
    includeDeprecated?: boolean;
    nameRegex?: string;
    owners: string[];
    sortAscending?: boolean;
    timeouts?: inputs.GetAmiIdsTimeouts;
}

/**
 * A collection of values returned by getAmiIds.
 */
export interface GetAmiIdsResult {
    readonly executableUsers?: string[];
    readonly filters?: outputs.GetAmiIdsFilter[];
    readonly id: string;
    readonly ids: string[];
    readonly includeDeprecated?: boolean;
    readonly nameRegex?: string;
    readonly owners: string[];
    readonly sortAscending?: boolean;
    readonly timeouts?: outputs.GetAmiIdsTimeouts;
}
export function getAmiIdsOutput(args: GetAmiIdsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAmiIdsResult> {
    return pulumi.output(args).apply((a: any) => getAmiIds(a, opts))
}

/**
 * A collection of arguments for invoking getAmiIds.
 */
export interface GetAmiIdsOutputArgs {
    executableUsers?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetAmiIdsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    includeDeprecated?: pulumi.Input<boolean>;
    nameRegex?: pulumi.Input<string>;
    owners: pulumi.Input<pulumi.Input<string>[]>;
    sortAscending?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.GetAmiIdsTimeoutsArgs>;
}
