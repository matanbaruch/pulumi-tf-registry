// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLambdaFunctionUrl(args: GetLambdaFunctionUrlArgs, opts?: pulumi.InvokeOptions): Promise<GetLambdaFunctionUrlResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getLambdaFunctionUrl:getLambdaFunctionUrl", {
        "functionName": args.functionName,
        "id": args.id,
        "qualifier": args.qualifier,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLambdaFunctionUrl.
 */
export interface GetLambdaFunctionUrlArgs {
    functionName: string;
    id?: string;
    qualifier?: string;
}

/**
 * A collection of values returned by getLambdaFunctionUrl.
 */
export interface GetLambdaFunctionUrlResult {
    readonly authorizationType: string;
    readonly cors: outputs.GetLambdaFunctionUrlCor[];
    readonly creationTime: string;
    readonly functionArn: string;
    readonly functionName: string;
    readonly functionUrl: string;
    readonly id: string;
    readonly invokeMode: string;
    readonly lastModifiedTime: string;
    readonly qualifier?: string;
    readonly urlId: string;
}
export function getLambdaFunctionUrlOutput(args: GetLambdaFunctionUrlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLambdaFunctionUrlResult> {
    return pulumi.output(args).apply((a: any) => getLambdaFunctionUrl(a, opts))
}

/**
 * A collection of arguments for invoking getLambdaFunctionUrl.
 */
export interface GetLambdaFunctionUrlOutputArgs {
    functionName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    qualifier?: pulumi.Input<string>;
}
