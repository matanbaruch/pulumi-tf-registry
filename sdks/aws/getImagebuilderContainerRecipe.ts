// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getImagebuilderContainerRecipe(args: GetImagebuilderContainerRecipeArgs, opts?: pulumi.InvokeOptions): Promise<GetImagebuilderContainerRecipeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getImagebuilderContainerRecipe:getImagebuilderContainerRecipe", {
        "arn": args.arn,
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImagebuilderContainerRecipe.
 */
export interface GetImagebuilderContainerRecipeArgs {
    arn: string;
    id?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getImagebuilderContainerRecipe.
 */
export interface GetImagebuilderContainerRecipeResult {
    readonly arn: string;
    readonly components: outputs.GetImagebuilderContainerRecipeComponent[];
    readonly containerType: string;
    readonly dateCreated: string;
    readonly description: string;
    readonly dockerfileTemplateData: string;
    readonly encrypted: boolean;
    readonly id: string;
    readonly instanceConfigurations: outputs.GetImagebuilderContainerRecipeInstanceConfiguration[];
    readonly kmsKeyId: string;
    readonly name: string;
    readonly owner: string;
    readonly parentImage: string;
    readonly platform: string;
    readonly tags?: {[key: string]: string};
    readonly targetRepositories: outputs.GetImagebuilderContainerRecipeTargetRepository[];
    readonly version: string;
    readonly workingDirectory: string;
}
export function getImagebuilderContainerRecipeOutput(args: GetImagebuilderContainerRecipeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImagebuilderContainerRecipeResult> {
    return pulumi.output(args).apply((a: any) => getImagebuilderContainerRecipe(a, opts))
}

/**
 * A collection of arguments for invoking getImagebuilderContainerRecipe.
 */
export interface GetImagebuilderContainerRecipeOutputArgs {
    arn: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
