// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFsxWindowsFileSystem(args: GetFsxWindowsFileSystemArgs, opts?: pulumi.InvokeOptions): Promise<GetFsxWindowsFileSystemResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getFsxWindowsFileSystem:getFsxWindowsFileSystem", {
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFsxWindowsFileSystem.
 */
export interface GetFsxWindowsFileSystemArgs {
    id: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getFsxWindowsFileSystem.
 */
export interface GetFsxWindowsFileSystemResult {
    readonly activeDirectoryId: string;
    readonly aliases: string[];
    readonly arn: string;
    readonly auditLogConfigurations: outputs.GetFsxWindowsFileSystemAuditLogConfiguration[];
    readonly automaticBackupRetentionDays: number;
    readonly backupId: string;
    readonly copyTagsToBackups: boolean;
    readonly dailyAutomaticBackupStartTime: string;
    readonly deploymentType: string;
    readonly diskIopsConfigurations: outputs.GetFsxWindowsFileSystemDiskIopsConfiguration[];
    readonly dnsName: string;
    readonly id: string;
    readonly kmsKeyId: string;
    readonly networkInterfaceIds: string[];
    readonly ownerId: string;
    readonly preferredFileServerIp: string;
    readonly preferredSubnetId: string;
    readonly securityGroupIds: string[];
    readonly skipFinalBackup: boolean;
    readonly storageCapacity: number;
    readonly storageType: string;
    readonly subnetIds: string[];
    readonly tags: {[key: string]: string};
    readonly throughputCapacity: number;
    readonly vpcId: string;
    readonly weeklyMaintenanceStartTime: string;
}
export function getFsxWindowsFileSystemOutput(args: GetFsxWindowsFileSystemOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFsxWindowsFileSystemResult> {
    return pulumi.output(args).apply((a: any) => getFsxWindowsFileSystem(a, opts))
}

/**
 * A collection of arguments for invoking getFsxWindowsFileSystem.
 */
export interface GetFsxWindowsFileSystemOutputArgs {
    id: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
