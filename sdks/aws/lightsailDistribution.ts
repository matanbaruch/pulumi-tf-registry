// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LightsailDistribution extends pulumi.CustomResource {
    /**
     * Get an existing LightsailDistribution resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LightsailDistributionState, opts?: pulumi.CustomResourceOptions): LightsailDistribution {
        return new LightsailDistribution(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/lightsailDistribution:LightsailDistribution';

    /**
     * Returns true if the given object is an instance of LightsailDistribution.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LightsailDistribution {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LightsailDistribution.__pulumiType;
    }

    /**
     * The alternate domain names of the distribution.
     */
    public /*out*/ readonly alternativeDomainNames!: pulumi.Output<string[]>;
    /**
     * The Amazon Resource Name (ARN) of the distribution.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The bundle ID to use for the distribution.
     */
    public readonly bundleId!: pulumi.Output<string>;
    /**
     * An object that describes the cache behavior settings of the distribution.
     */
    public readonly cacheBehaviorSettings!: pulumi.Output<outputs.LightsailDistributionCacheBehaviorSettings | undefined>;
    /**
     * An array of objects that describe the per-path cache behavior of the distribution.
     */
    public readonly cacheBehaviors!: pulumi.Output<outputs.LightsailDistributionCacheBehavior[] | undefined>;
    /**
     * The name of the SSL/TLS certificate attached to the distribution, if any.
     */
    public readonly certificateName!: pulumi.Output<string | undefined>;
    /**
     * The timestamp when the distribution was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * An object that describes the default cache behavior of the distribution.
     */
    public readonly defaultCacheBehavior!: pulumi.Output<outputs.LightsailDistributionDefaultCacheBehavior>;
    /**
     * The domain name of the distribution.
     */
    public /*out*/ readonly domainName!: pulumi.Output<string>;
    /**
     * The IP address type of the distribution.
     */
    public readonly ipAddressType!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the distribution is enabled.
     */
    public readonly isEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * An object that describes the location of the distribution, such as the AWS Region and Availability Zone.
     */
    public /*out*/ readonly locations!: pulumi.Output<outputs.LightsailDistributionLocation[]>;
    /**
     * The name of the distribution.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An object that describes the origin resource of the distribution, such as a Lightsail instance, bucket, or load
     * balancer.
     */
    public readonly origin!: pulumi.Output<outputs.LightsailDistributionOrigin>;
    /**
     * The public DNS of the origin.
     */
    public /*out*/ readonly originPublicDns!: pulumi.Output<string>;
    /**
     * The Lightsail resource type (e.g., Distribution).
     */
    public /*out*/ readonly resourceType!: pulumi.Output<string>;
    /**
     * The status of the distribution.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The support code. Include this code in your email to support when you have questions about your Lightsail distribution.
     * This code enables our support team to look up your Lightsail information more easily.
     */
    public /*out*/ readonly supportCode!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.LightsailDistributionTimeouts | undefined>;

    /**
     * Create a LightsailDistribution resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LightsailDistributionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LightsailDistributionArgs | LightsailDistributionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LightsailDistributionState | undefined;
            resourceInputs["alternativeDomainNames"] = state ? state.alternativeDomainNames : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["bundleId"] = state ? state.bundleId : undefined;
            resourceInputs["cacheBehaviorSettings"] = state ? state.cacheBehaviorSettings : undefined;
            resourceInputs["cacheBehaviors"] = state ? state.cacheBehaviors : undefined;
            resourceInputs["certificateName"] = state ? state.certificateName : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["defaultCacheBehavior"] = state ? state.defaultCacheBehavior : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["ipAddressType"] = state ? state.ipAddressType : undefined;
            resourceInputs["isEnabled"] = state ? state.isEnabled : undefined;
            resourceInputs["locations"] = state ? state.locations : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["origin"] = state ? state.origin : undefined;
            resourceInputs["originPublicDns"] = state ? state.originPublicDns : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["supportCode"] = state ? state.supportCode : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as LightsailDistributionArgs | undefined;
            if ((!args || args.bundleId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bundleId'");
            }
            if ((!args || args.defaultCacheBehavior === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultCacheBehavior'");
            }
            if ((!args || args.origin === undefined) && !opts.urn) {
                throw new Error("Missing required property 'origin'");
            }
            resourceInputs["bundleId"] = args ? args.bundleId : undefined;
            resourceInputs["cacheBehaviorSettings"] = args ? args.cacheBehaviorSettings : undefined;
            resourceInputs["cacheBehaviors"] = args ? args.cacheBehaviors : undefined;
            resourceInputs["certificateName"] = args ? args.certificateName : undefined;
            resourceInputs["defaultCacheBehavior"] = args ? args.defaultCacheBehavior : undefined;
            resourceInputs["ipAddressType"] = args ? args.ipAddressType : undefined;
            resourceInputs["isEnabled"] = args ? args.isEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["origin"] = args ? args.origin : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["alternativeDomainNames"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["locations"] = undefined /*out*/;
            resourceInputs["originPublicDns"] = undefined /*out*/;
            resourceInputs["resourceType"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["supportCode"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LightsailDistribution.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LightsailDistribution resources.
 */
export interface LightsailDistributionState {
    /**
     * The alternate domain names of the distribution.
     */
    alternativeDomainNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Amazon Resource Name (ARN) of the distribution.
     */
    arn?: pulumi.Input<string>;
    /**
     * The bundle ID to use for the distribution.
     */
    bundleId?: pulumi.Input<string>;
    /**
     * An object that describes the cache behavior settings of the distribution.
     */
    cacheBehaviorSettings?: pulumi.Input<inputs.LightsailDistributionCacheBehaviorSettings>;
    /**
     * An array of objects that describe the per-path cache behavior of the distribution.
     */
    cacheBehaviors?: pulumi.Input<pulumi.Input<inputs.LightsailDistributionCacheBehavior>[]>;
    /**
     * The name of the SSL/TLS certificate attached to the distribution, if any.
     */
    certificateName?: pulumi.Input<string>;
    /**
     * The timestamp when the distribution was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * An object that describes the default cache behavior of the distribution.
     */
    defaultCacheBehavior?: pulumi.Input<inputs.LightsailDistributionDefaultCacheBehavior>;
    /**
     * The domain name of the distribution.
     */
    domainName?: pulumi.Input<string>;
    /**
     * The IP address type of the distribution.
     */
    ipAddressType?: pulumi.Input<string>;
    /**
     * Indicates whether the distribution is enabled.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * An object that describes the location of the distribution, such as the AWS Region and Availability Zone.
     */
    locations?: pulumi.Input<pulumi.Input<inputs.LightsailDistributionLocation>[]>;
    /**
     * The name of the distribution.
     */
    name?: pulumi.Input<string>;
    /**
     * An object that describes the origin resource of the distribution, such as a Lightsail instance, bucket, or load
     * balancer.
     */
    origin?: pulumi.Input<inputs.LightsailDistributionOrigin>;
    /**
     * The public DNS of the origin.
     */
    originPublicDns?: pulumi.Input<string>;
    /**
     * The Lightsail resource type (e.g., Distribution).
     */
    resourceType?: pulumi.Input<string>;
    /**
     * The status of the distribution.
     */
    status?: pulumi.Input<string>;
    /**
     * The support code. Include this code in your email to support when you have questions about your Lightsail distribution.
     * This code enables our support team to look up your Lightsail information more easily.
     */
    supportCode?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.LightsailDistributionTimeouts>;
}

/**
 * The set of arguments for constructing a LightsailDistribution resource.
 */
export interface LightsailDistributionArgs {
    /**
     * The bundle ID to use for the distribution.
     */
    bundleId: pulumi.Input<string>;
    /**
     * An object that describes the cache behavior settings of the distribution.
     */
    cacheBehaviorSettings?: pulumi.Input<inputs.LightsailDistributionCacheBehaviorSettings>;
    /**
     * An array of objects that describe the per-path cache behavior of the distribution.
     */
    cacheBehaviors?: pulumi.Input<pulumi.Input<inputs.LightsailDistributionCacheBehavior>[]>;
    /**
     * The name of the SSL/TLS certificate attached to the distribution, if any.
     */
    certificateName?: pulumi.Input<string>;
    /**
     * An object that describes the default cache behavior of the distribution.
     */
    defaultCacheBehavior: pulumi.Input<inputs.LightsailDistributionDefaultCacheBehavior>;
    /**
     * The IP address type of the distribution.
     */
    ipAddressType?: pulumi.Input<string>;
    /**
     * Indicates whether the distribution is enabled.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the distribution.
     */
    name?: pulumi.Input<string>;
    /**
     * An object that describes the origin resource of the distribution, such as a Lightsail instance, bucket, or load
     * balancer.
     */
    origin: pulumi.Input<inputs.LightsailDistributionOrigin>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.LightsailDistributionTimeouts>;
}
