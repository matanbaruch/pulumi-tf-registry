// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamPrincipalPolicySimulation(args: GetIamPrincipalPolicySimulationArgs, opts?: pulumi.InvokeOptions): Promise<GetIamPrincipalPolicySimulationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getIamPrincipalPolicySimulation:getIamPrincipalPolicySimulation", {
        "actionNames": args.actionNames,
        "additionalPoliciesJsons": args.additionalPoliciesJsons,
        "callerArn": args.callerArn,
        "contexts": args.contexts,
        "permissionsBoundaryPoliciesJsons": args.permissionsBoundaryPoliciesJsons,
        "policySourceArn": args.policySourceArn,
        "resourceArns": args.resourceArns,
        "resourceHandlingOption": args.resourceHandlingOption,
        "resourceOwnerAccountId": args.resourceOwnerAccountId,
        "resourcePolicyJson": args.resourcePolicyJson,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamPrincipalPolicySimulation.
 */
export interface GetIamPrincipalPolicySimulationArgs {
    actionNames: string[];
    additionalPoliciesJsons?: string[];
    callerArn?: string;
    contexts?: inputs.GetIamPrincipalPolicySimulationContext[];
    permissionsBoundaryPoliciesJsons?: string[];
    policySourceArn: string;
    resourceArns?: string[];
    resourceHandlingOption?: string;
    resourceOwnerAccountId?: string;
    resourcePolicyJson?: string;
}

/**
 * A collection of values returned by getIamPrincipalPolicySimulation.
 */
export interface GetIamPrincipalPolicySimulationResult {
    readonly actionNames: string[];
    readonly additionalPoliciesJsons?: string[];
    readonly allAllowed: boolean;
    readonly callerArn?: string;
    readonly contexts?: outputs.GetIamPrincipalPolicySimulationContext[];
    readonly id: string;
    readonly permissionsBoundaryPoliciesJsons?: string[];
    readonly policySourceArn: string;
    readonly resourceArns?: string[];
    readonly resourceHandlingOption?: string;
    readonly resourceOwnerAccountId?: string;
    readonly resourcePolicyJson?: string;
    readonly results: outputs.GetIamPrincipalPolicySimulationResult[];
}
export function getIamPrincipalPolicySimulationOutput(args: GetIamPrincipalPolicySimulationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamPrincipalPolicySimulationResult> {
    return pulumi.output(args).apply((a: any) => getIamPrincipalPolicySimulation(a, opts))
}

/**
 * A collection of arguments for invoking getIamPrincipalPolicySimulation.
 */
export interface GetIamPrincipalPolicySimulationOutputArgs {
    actionNames: pulumi.Input<pulumi.Input<string>[]>;
    additionalPoliciesJsons?: pulumi.Input<pulumi.Input<string>[]>;
    callerArn?: pulumi.Input<string>;
    contexts?: pulumi.Input<pulumi.Input<inputs.GetIamPrincipalPolicySimulationContextArgs>[]>;
    permissionsBoundaryPoliciesJsons?: pulumi.Input<pulumi.Input<string>[]>;
    policySourceArn: pulumi.Input<string>;
    resourceArns?: pulumi.Input<pulumi.Input<string>[]>;
    resourceHandlingOption?: pulumi.Input<string>;
    resourceOwnerAccountId?: pulumi.Input<string>;
    resourcePolicyJson?: pulumi.Input<string>;
}
