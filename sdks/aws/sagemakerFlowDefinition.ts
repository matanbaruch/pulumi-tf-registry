// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SagemakerFlowDefinition extends pulumi.CustomResource {
    /**
     * Get an existing SagemakerFlowDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SagemakerFlowDefinitionState, opts?: pulumi.CustomResourceOptions): SagemakerFlowDefinition {
        return new SagemakerFlowDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/sagemakerFlowDefinition:SagemakerFlowDefinition';

    /**
     * Returns true if the given object is an instance of SagemakerFlowDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SagemakerFlowDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SagemakerFlowDefinition.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly flowDefinitionName!: pulumi.Output<string>;
    public readonly humanLoopActivationConfig!: pulumi.Output<outputs.SagemakerFlowDefinitionHumanLoopActivationConfig | undefined>;
    public readonly humanLoopConfig!: pulumi.Output<outputs.SagemakerFlowDefinitionHumanLoopConfig>;
    public readonly humanLoopRequestSource!: pulumi.Output<outputs.SagemakerFlowDefinitionHumanLoopRequestSource | undefined>;
    public readonly outputConfig!: pulumi.Output<outputs.SagemakerFlowDefinitionOutputConfig>;
    public readonly roleArn!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a SagemakerFlowDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SagemakerFlowDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SagemakerFlowDefinitionArgs | SagemakerFlowDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SagemakerFlowDefinitionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["flowDefinitionName"] = state ? state.flowDefinitionName : undefined;
            resourceInputs["humanLoopActivationConfig"] = state ? state.humanLoopActivationConfig : undefined;
            resourceInputs["humanLoopConfig"] = state ? state.humanLoopConfig : undefined;
            resourceInputs["humanLoopRequestSource"] = state ? state.humanLoopRequestSource : undefined;
            resourceInputs["outputConfig"] = state ? state.outputConfig : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as SagemakerFlowDefinitionArgs | undefined;
            if ((!args || args.flowDefinitionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flowDefinitionName'");
            }
            if ((!args || args.humanLoopConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'humanLoopConfig'");
            }
            if ((!args || args.outputConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'outputConfig'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["flowDefinitionName"] = args ? args.flowDefinitionName : undefined;
            resourceInputs["humanLoopActivationConfig"] = args ? args.humanLoopActivationConfig : undefined;
            resourceInputs["humanLoopConfig"] = args ? args.humanLoopConfig : undefined;
            resourceInputs["humanLoopRequestSource"] = args ? args.humanLoopRequestSource : undefined;
            resourceInputs["outputConfig"] = args ? args.outputConfig : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SagemakerFlowDefinition.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SagemakerFlowDefinition resources.
 */
export interface SagemakerFlowDefinitionState {
    arn?: pulumi.Input<string>;
    flowDefinitionName?: pulumi.Input<string>;
    humanLoopActivationConfig?: pulumi.Input<inputs.SagemakerFlowDefinitionHumanLoopActivationConfig>;
    humanLoopConfig?: pulumi.Input<inputs.SagemakerFlowDefinitionHumanLoopConfig>;
    humanLoopRequestSource?: pulumi.Input<inputs.SagemakerFlowDefinitionHumanLoopRequestSource>;
    outputConfig?: pulumi.Input<inputs.SagemakerFlowDefinitionOutputConfig>;
    roleArn?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a SagemakerFlowDefinition resource.
 */
export interface SagemakerFlowDefinitionArgs {
    flowDefinitionName: pulumi.Input<string>;
    humanLoopActivationConfig?: pulumi.Input<inputs.SagemakerFlowDefinitionHumanLoopActivationConfig>;
    humanLoopConfig: pulumi.Input<inputs.SagemakerFlowDefinitionHumanLoopConfig>;
    humanLoopRequestSource?: pulumi.Input<inputs.SagemakerFlowDefinitionHumanLoopRequestSource>;
    outputConfig: pulumi.Input<inputs.SagemakerFlowDefinitionOutputConfig>;
    roleArn: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
