// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLocationTrackerAssociations(args: GetLocationTrackerAssociationsArgs, opts?: pulumi.InvokeOptions): Promise<GetLocationTrackerAssociationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getLocationTrackerAssociations:getLocationTrackerAssociations", {
        "id": args.id,
        "trackerName": args.trackerName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLocationTrackerAssociations.
 */
export interface GetLocationTrackerAssociationsArgs {
    id?: string;
    trackerName: string;
}

/**
 * A collection of values returned by getLocationTrackerAssociations.
 */
export interface GetLocationTrackerAssociationsResult {
    readonly consumerArns: string[];
    readonly id: string;
    readonly trackerName: string;
}
export function getLocationTrackerAssociationsOutput(args: GetLocationTrackerAssociationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocationTrackerAssociationsResult> {
    return pulumi.output(args).apply((a: any) => getLocationTrackerAssociations(a, opts))
}

/**
 * A collection of arguments for invoking getLocationTrackerAssociations.
 */
export interface GetLocationTrackerAssociationsOutputArgs {
    id?: pulumi.Input<string>;
    trackerName: pulumi.Input<string>;
}
