// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DynamodbTableExport extends pulumi.CustomResource {
    /**
     * Get an existing DynamodbTableExport resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DynamodbTableExportState, opts?: pulumi.CustomResourceOptions): DynamodbTableExport {
        return new DynamodbTableExport(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/dynamodbTableExport:DynamodbTableExport';

    /**
     * Returns true if the given object is an instance of DynamodbTableExport.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DynamodbTableExport {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DynamodbTableExport.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly billedSizeInBytes!: pulumi.Output<number>;
    public /*out*/ readonly endTime!: pulumi.Output<string>;
    public readonly exportFormat!: pulumi.Output<string | undefined>;
    public /*out*/ readonly exportStatus!: pulumi.Output<string>;
    public readonly exportTime!: pulumi.Output<string>;
    public /*out*/ readonly itemCount!: pulumi.Output<number>;
    public /*out*/ readonly manifestFilesS3Key!: pulumi.Output<string>;
    public readonly s3Bucket!: pulumi.Output<string>;
    public readonly s3BucketOwner!: pulumi.Output<string>;
    public readonly s3Prefix!: pulumi.Output<string>;
    public readonly s3SseAlgorithm!: pulumi.Output<string>;
    public readonly s3SseKmsKeyId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly startTime!: pulumi.Output<string>;
    public readonly tableArn!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DynamodbTableExportTimeouts | undefined>;

    /**
     * Create a DynamodbTableExport resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DynamodbTableExportArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DynamodbTableExportArgs | DynamodbTableExportState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DynamodbTableExportState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["billedSizeInBytes"] = state ? state.billedSizeInBytes : undefined;
            resourceInputs["endTime"] = state ? state.endTime : undefined;
            resourceInputs["exportFormat"] = state ? state.exportFormat : undefined;
            resourceInputs["exportStatus"] = state ? state.exportStatus : undefined;
            resourceInputs["exportTime"] = state ? state.exportTime : undefined;
            resourceInputs["itemCount"] = state ? state.itemCount : undefined;
            resourceInputs["manifestFilesS3Key"] = state ? state.manifestFilesS3Key : undefined;
            resourceInputs["s3Bucket"] = state ? state.s3Bucket : undefined;
            resourceInputs["s3BucketOwner"] = state ? state.s3BucketOwner : undefined;
            resourceInputs["s3Prefix"] = state ? state.s3Prefix : undefined;
            resourceInputs["s3SseAlgorithm"] = state ? state.s3SseAlgorithm : undefined;
            resourceInputs["s3SseKmsKeyId"] = state ? state.s3SseKmsKeyId : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["tableArn"] = state ? state.tableArn : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DynamodbTableExportArgs | undefined;
            if ((!args || args.s3Bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 's3Bucket'");
            }
            if ((!args || args.tableArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tableArn'");
            }
            resourceInputs["exportFormat"] = args ? args.exportFormat : undefined;
            resourceInputs["exportTime"] = args ? args.exportTime : undefined;
            resourceInputs["s3Bucket"] = args ? args.s3Bucket : undefined;
            resourceInputs["s3BucketOwner"] = args ? args.s3BucketOwner : undefined;
            resourceInputs["s3Prefix"] = args ? args.s3Prefix : undefined;
            resourceInputs["s3SseAlgorithm"] = args ? args.s3SseAlgorithm : undefined;
            resourceInputs["s3SseKmsKeyId"] = args ? args.s3SseKmsKeyId : undefined;
            resourceInputs["tableArn"] = args ? args.tableArn : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["billedSizeInBytes"] = undefined /*out*/;
            resourceInputs["endTime"] = undefined /*out*/;
            resourceInputs["exportStatus"] = undefined /*out*/;
            resourceInputs["itemCount"] = undefined /*out*/;
            resourceInputs["manifestFilesS3Key"] = undefined /*out*/;
            resourceInputs["startTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DynamodbTableExport.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DynamodbTableExport resources.
 */
export interface DynamodbTableExportState {
    arn?: pulumi.Input<string>;
    billedSizeInBytes?: pulumi.Input<number>;
    endTime?: pulumi.Input<string>;
    exportFormat?: pulumi.Input<string>;
    exportStatus?: pulumi.Input<string>;
    exportTime?: pulumi.Input<string>;
    itemCount?: pulumi.Input<number>;
    manifestFilesS3Key?: pulumi.Input<string>;
    s3Bucket?: pulumi.Input<string>;
    s3BucketOwner?: pulumi.Input<string>;
    s3Prefix?: pulumi.Input<string>;
    s3SseAlgorithm?: pulumi.Input<string>;
    s3SseKmsKeyId?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    tableArn?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DynamodbTableExportTimeouts>;
}

/**
 * The set of arguments for constructing a DynamodbTableExport resource.
 */
export interface DynamodbTableExportArgs {
    exportFormat?: pulumi.Input<string>;
    exportTime?: pulumi.Input<string>;
    s3Bucket: pulumi.Input<string>;
    s3BucketOwner?: pulumi.Input<string>;
    s3Prefix?: pulumi.Input<string>;
    s3SseAlgorithm?: pulumi.Input<string>;
    s3SseKmsKeyId?: pulumi.Input<string>;
    tableArn: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DynamodbTableExportTimeouts>;
}
