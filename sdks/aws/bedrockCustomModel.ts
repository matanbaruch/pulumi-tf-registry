// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BedrockCustomModel extends pulumi.CustomResource {
    /**
     * Get an existing BedrockCustomModel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BedrockCustomModelState, opts?: pulumi.CustomResourceOptions): BedrockCustomModel {
        return new BedrockCustomModel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/bedrockCustomModel:BedrockCustomModel';

    /**
     * Returns true if the given object is an instance of BedrockCustomModel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BedrockCustomModel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BedrockCustomModel.__pulumiType;
    }

    public readonly baseModelIdentifier!: pulumi.Output<string>;
    public /*out*/ readonly customModelArn!: pulumi.Output<string>;
    public readonly customModelKmsKeyId!: pulumi.Output<string | undefined>;
    public readonly customModelName!: pulumi.Output<string>;
    public readonly customizationType!: pulumi.Output<string>;
    public readonly hyperparameters!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly jobArn!: pulumi.Output<string>;
    public readonly jobName!: pulumi.Output<string>;
    public /*out*/ readonly jobStatus!: pulumi.Output<string>;
    public readonly outputDataConfigs!: pulumi.Output<outputs.BedrockCustomModelOutputDataConfig[] | undefined>;
    public readonly roleArn!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.BedrockCustomModelTimeouts | undefined>;
    public readonly trainingDataConfigs!: pulumi.Output<outputs.BedrockCustomModelTrainingDataConfig[] | undefined>;
    public /*out*/ readonly trainingMetrics!: pulumi.Output<outputs.BedrockCustomModelTrainingMetric[]>;
    public readonly validationDataConfigs!: pulumi.Output<outputs.BedrockCustomModelValidationDataConfig[] | undefined>;
    public /*out*/ readonly validationMetrics!: pulumi.Output<outputs.BedrockCustomModelValidationMetric[]>;
    public readonly vpcConfigs!: pulumi.Output<outputs.BedrockCustomModelVpcConfig[] | undefined>;

    /**
     * Create a BedrockCustomModel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BedrockCustomModelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BedrockCustomModelArgs | BedrockCustomModelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BedrockCustomModelState | undefined;
            resourceInputs["baseModelIdentifier"] = state ? state.baseModelIdentifier : undefined;
            resourceInputs["customModelArn"] = state ? state.customModelArn : undefined;
            resourceInputs["customModelKmsKeyId"] = state ? state.customModelKmsKeyId : undefined;
            resourceInputs["customModelName"] = state ? state.customModelName : undefined;
            resourceInputs["customizationType"] = state ? state.customizationType : undefined;
            resourceInputs["hyperparameters"] = state ? state.hyperparameters : undefined;
            resourceInputs["jobArn"] = state ? state.jobArn : undefined;
            resourceInputs["jobName"] = state ? state.jobName : undefined;
            resourceInputs["jobStatus"] = state ? state.jobStatus : undefined;
            resourceInputs["outputDataConfigs"] = state ? state.outputDataConfigs : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["trainingDataConfigs"] = state ? state.trainingDataConfigs : undefined;
            resourceInputs["trainingMetrics"] = state ? state.trainingMetrics : undefined;
            resourceInputs["validationDataConfigs"] = state ? state.validationDataConfigs : undefined;
            resourceInputs["validationMetrics"] = state ? state.validationMetrics : undefined;
            resourceInputs["vpcConfigs"] = state ? state.vpcConfigs : undefined;
        } else {
            const args = argsOrState as BedrockCustomModelArgs | undefined;
            if ((!args || args.baseModelIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baseModelIdentifier'");
            }
            if ((!args || args.customModelName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customModelName'");
            }
            if ((!args || args.hyperparameters === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hyperparameters'");
            }
            if ((!args || args.jobName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobName'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["baseModelIdentifier"] = args ? args.baseModelIdentifier : undefined;
            resourceInputs["customModelKmsKeyId"] = args ? args.customModelKmsKeyId : undefined;
            resourceInputs["customModelName"] = args ? args.customModelName : undefined;
            resourceInputs["customizationType"] = args ? args.customizationType : undefined;
            resourceInputs["hyperparameters"] = args ? args.hyperparameters : undefined;
            resourceInputs["jobName"] = args ? args.jobName : undefined;
            resourceInputs["outputDataConfigs"] = args ? args.outputDataConfigs : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["trainingDataConfigs"] = args ? args.trainingDataConfigs : undefined;
            resourceInputs["validationDataConfigs"] = args ? args.validationDataConfigs : undefined;
            resourceInputs["vpcConfigs"] = args ? args.vpcConfigs : undefined;
            resourceInputs["customModelArn"] = undefined /*out*/;
            resourceInputs["jobArn"] = undefined /*out*/;
            resourceInputs["jobStatus"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["trainingMetrics"] = undefined /*out*/;
            resourceInputs["validationMetrics"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BedrockCustomModel.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BedrockCustomModel resources.
 */
export interface BedrockCustomModelState {
    baseModelIdentifier?: pulumi.Input<string>;
    customModelArn?: pulumi.Input<string>;
    customModelKmsKeyId?: pulumi.Input<string>;
    customModelName?: pulumi.Input<string>;
    customizationType?: pulumi.Input<string>;
    hyperparameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    jobArn?: pulumi.Input<string>;
    jobName?: pulumi.Input<string>;
    jobStatus?: pulumi.Input<string>;
    outputDataConfigs?: pulumi.Input<pulumi.Input<inputs.BedrockCustomModelOutputDataConfig>[]>;
    roleArn?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.BedrockCustomModelTimeouts>;
    trainingDataConfigs?: pulumi.Input<pulumi.Input<inputs.BedrockCustomModelTrainingDataConfig>[]>;
    trainingMetrics?: pulumi.Input<pulumi.Input<inputs.BedrockCustomModelTrainingMetric>[]>;
    validationDataConfigs?: pulumi.Input<pulumi.Input<inputs.BedrockCustomModelValidationDataConfig>[]>;
    validationMetrics?: pulumi.Input<pulumi.Input<inputs.BedrockCustomModelValidationMetric>[]>;
    vpcConfigs?: pulumi.Input<pulumi.Input<inputs.BedrockCustomModelVpcConfig>[]>;
}

/**
 * The set of arguments for constructing a BedrockCustomModel resource.
 */
export interface BedrockCustomModelArgs {
    baseModelIdentifier: pulumi.Input<string>;
    customModelKmsKeyId?: pulumi.Input<string>;
    customModelName: pulumi.Input<string>;
    customizationType?: pulumi.Input<string>;
    hyperparameters: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    jobName: pulumi.Input<string>;
    outputDataConfigs?: pulumi.Input<pulumi.Input<inputs.BedrockCustomModelOutputDataConfig>[]>;
    roleArn: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.BedrockCustomModelTimeouts>;
    trainingDataConfigs?: pulumi.Input<pulumi.Input<inputs.BedrockCustomModelTrainingDataConfig>[]>;
    validationDataConfigs?: pulumi.Input<pulumi.Input<inputs.BedrockCustomModelValidationDataConfig>[]>;
    vpcConfigs?: pulumi.Input<pulumi.Input<inputs.BedrockCustomModelVpcConfig>[]>;
}
