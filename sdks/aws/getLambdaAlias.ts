// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLambdaAlias(args: GetLambdaAliasArgs, opts?: pulumi.InvokeOptions): Promise<GetLambdaAliasResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getLambdaAlias:getLambdaAlias", {
        "functionName": args.functionName,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLambdaAlias.
 */
export interface GetLambdaAliasArgs {
    functionName: string;
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getLambdaAlias.
 */
export interface GetLambdaAliasResult {
    readonly arn: string;
    readonly description: string;
    readonly functionName: string;
    readonly functionVersion: string;
    readonly id: string;
    readonly invokeArn: string;
    readonly name: string;
}
export function getLambdaAliasOutput(args: GetLambdaAliasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLambdaAliasResult> {
    return pulumi.output(args).apply((a: any) => getLambdaAlias(a, opts))
}

/**
 * A collection of arguments for invoking getLambdaAlias.
 */
export interface GetLambdaAliasOutputArgs {
    functionName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
