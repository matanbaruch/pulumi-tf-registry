// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcEndpoint(args?: GetVpcEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcEndpointResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getVpcEndpoint:getVpcEndpoint", {
        "filters": args.filters,
        "id": args.id,
        "serviceName": args.serviceName,
        "state": args.state,
        "tags": args.tags,
        "timeouts": args.timeouts,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcEndpoint.
 */
export interface GetVpcEndpointArgs {
    filters?: inputs.GetVpcEndpointFilter[];
    id?: string;
    serviceName?: string;
    state?: string;
    tags?: {[key: string]: string};
    timeouts?: inputs.GetVpcEndpointTimeouts;
    vpcId?: string;
}

/**
 * A collection of values returned by getVpcEndpoint.
 */
export interface GetVpcEndpointResult {
    readonly arn: string;
    readonly cidrBlocks: string[];
    readonly dnsEntries: outputs.GetVpcEndpointDnsEntry[];
    readonly dnsOptions: outputs.GetVpcEndpointDnsOption[];
    readonly filters?: outputs.GetVpcEndpointFilter[];
    readonly id: string;
    readonly ipAddressType: string;
    readonly networkInterfaceIds: string[];
    readonly ownerId: string;
    readonly policy: string;
    readonly prefixListId: string;
    readonly privateDnsEnabled: boolean;
    readonly requesterManaged: boolean;
    readonly routeTableIds: string[];
    readonly securityGroupIds: string[];
    readonly serviceName: string;
    readonly state: string;
    readonly subnetIds: string[];
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetVpcEndpointTimeouts;
    readonly vpcEndpointType: string;
    readonly vpcId: string;
}
export function getVpcEndpointOutput(args?: GetVpcEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcEndpointResult> {
    return pulumi.output(args).apply((a: any) => getVpcEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getVpcEndpoint.
 */
export interface GetVpcEndpointOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetVpcEndpointFilterArgs>[]>;
    id?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.GetVpcEndpointTimeoutsArgs>;
    vpcId?: pulumi.Input<string>;
}
