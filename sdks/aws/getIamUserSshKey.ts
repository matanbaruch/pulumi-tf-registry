// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIamUserSshKey(args: GetIamUserSshKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetIamUserSshKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getIamUserSshKey:getIamUserSshKey", {
        "encoding": args.encoding,
        "id": args.id,
        "sshPublicKeyId": args.sshPublicKeyId,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamUserSshKey.
 */
export interface GetIamUserSshKeyArgs {
    encoding: string;
    id?: string;
    sshPublicKeyId: string;
    username: string;
}

/**
 * A collection of values returned by getIamUserSshKey.
 */
export interface GetIamUserSshKeyResult {
    readonly encoding: string;
    readonly fingerprint: string;
    readonly id: string;
    readonly publicKey: string;
    readonly sshPublicKeyId: string;
    readonly status: string;
    readonly username: string;
}
export function getIamUserSshKeyOutput(args: GetIamUserSshKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamUserSshKeyResult> {
    return pulumi.output(args).apply((a: any) => getIamUserSshKey(a, opts))
}

/**
 * A collection of arguments for invoking getIamUserSshKey.
 */
export interface GetIamUserSshKeyOutputArgs {
    encoding: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    sshPublicKeyId: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
