// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKendraIndex(args: GetKendraIndexArgs, opts?: pulumi.InvokeOptions): Promise<GetKendraIndexResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getKendraIndex:getKendraIndex", {
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKendraIndex.
 */
export interface GetKendraIndexArgs {
    id: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getKendraIndex.
 */
export interface GetKendraIndexResult {
    readonly arn: string;
    readonly capacityUnits: outputs.GetKendraIndexCapacityUnit[];
    readonly createdAt: string;
    readonly description: string;
    readonly documentMetadataConfigurationUpdates: outputs.GetKendraIndexDocumentMetadataConfigurationUpdate[];
    readonly edition: string;
    readonly errorMessage: string;
    readonly id: string;
    readonly indexStatistics: outputs.GetKendraIndexIndexStatistic[];
    readonly name: string;
    readonly roleArn: string;
    readonly serverSideEncryptionConfigurations: outputs.GetKendraIndexServerSideEncryptionConfiguration[];
    readonly status: string;
    readonly tags: {[key: string]: string};
    readonly updatedAt: string;
    readonly userContextPolicy: string;
    readonly userGroupResolutionConfigurations: outputs.GetKendraIndexUserGroupResolutionConfiguration[];
    readonly userTokenConfigurations: outputs.GetKendraIndexUserTokenConfiguration[];
}
export function getKendraIndexOutput(args: GetKendraIndexOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKendraIndexResult> {
    return pulumi.output(args).apply((a: any) => getKendraIndex(a, opts))
}

/**
 * A collection of arguments for invoking getKendraIndex.
 */
export interface GetKendraIndexOutputArgs {
    id: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
