// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDbSnapshot(args?: GetDbSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetDbSnapshotResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getDbSnapshot:getDbSnapshot", {
        "dbInstanceIdentifier": args.dbInstanceIdentifier,
        "dbSnapshotIdentifier": args.dbSnapshotIdentifier,
        "id": args.id,
        "includePublic": args.includePublic,
        "includeShared": args.includeShared,
        "mostRecent": args.mostRecent,
        "snapshotType": args.snapshotType,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDbSnapshot.
 */
export interface GetDbSnapshotArgs {
    dbInstanceIdentifier?: string;
    dbSnapshotIdentifier?: string;
    id?: string;
    includePublic?: boolean;
    includeShared?: boolean;
    mostRecent?: boolean;
    snapshotType?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getDbSnapshot.
 */
export interface GetDbSnapshotResult {
    readonly allocatedStorage: number;
    readonly availabilityZone: string;
    readonly dbInstanceIdentifier?: string;
    readonly dbSnapshotArn: string;
    readonly dbSnapshotIdentifier?: string;
    readonly encrypted: boolean;
    readonly engine: string;
    readonly engineVersion: string;
    readonly id: string;
    readonly includePublic?: boolean;
    readonly includeShared?: boolean;
    readonly iops: number;
    readonly kmsKeyId: string;
    readonly licenseModel: string;
    readonly mostRecent?: boolean;
    readonly optionGroupName: string;
    readonly originalSnapshotCreateTime: string;
    readonly port: number;
    readonly snapshotCreateTime: string;
    readonly snapshotType?: string;
    readonly sourceDbSnapshotIdentifier: string;
    readonly sourceRegion: string;
    readonly status: string;
    readonly storageType: string;
    readonly tags: {[key: string]: string};
    readonly vpcId: string;
}
export function getDbSnapshotOutput(args?: GetDbSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDbSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getDbSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getDbSnapshot.
 */
export interface GetDbSnapshotOutputArgs {
    dbInstanceIdentifier?: pulumi.Input<string>;
    dbSnapshotIdentifier?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    includePublic?: pulumi.Input<boolean>;
    includeShared?: pulumi.Input<boolean>;
    mostRecent?: pulumi.Input<boolean>;
    snapshotType?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
