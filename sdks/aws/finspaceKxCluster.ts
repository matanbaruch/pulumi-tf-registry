// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FinspaceKxCluster extends pulumi.CustomResource {
    /**
     * Get an existing FinspaceKxCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FinspaceKxClusterState, opts?: pulumi.CustomResourceOptions): FinspaceKxCluster {
        return new FinspaceKxCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/finspaceKxCluster:FinspaceKxCluster';

    /**
     * Returns true if the given object is an instance of FinspaceKxCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FinspaceKxCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FinspaceKxCluster.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly autoScalingConfiguration!: pulumi.Output<outputs.FinspaceKxClusterAutoScalingConfiguration | undefined>;
    public readonly availabilityZoneId!: pulumi.Output<string | undefined>;
    public readonly azMode!: pulumi.Output<string>;
    public readonly cacheStorageConfigurations!: pulumi.Output<outputs.FinspaceKxClusterCacheStorageConfiguration[] | undefined>;
    public readonly capacityConfiguration!: pulumi.Output<outputs.FinspaceKxClusterCapacityConfiguration | undefined>;
    public readonly code!: pulumi.Output<outputs.FinspaceKxClusterCode | undefined>;
    public readonly commandLineArguments!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly createdTimestamp!: pulumi.Output<string>;
    public readonly databases!: pulumi.Output<outputs.FinspaceKxClusterDatabase[] | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly environmentId!: pulumi.Output<string>;
    public readonly executionRole!: pulumi.Output<string | undefined>;
    public readonly initializationScript!: pulumi.Output<string | undefined>;
    public /*out*/ readonly lastModifiedTimestamp!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly releaseLabel!: pulumi.Output<string>;
    public readonly savedownStorageConfiguration!: pulumi.Output<outputs.FinspaceKxClusterSavedownStorageConfiguration | undefined>;
    public readonly scalingGroupConfiguration!: pulumi.Output<outputs.FinspaceKxClusterScalingGroupConfiguration | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly statusReason!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly tickerplantLogConfigurations!: pulumi.Output<outputs.FinspaceKxClusterTickerplantLogConfiguration[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.FinspaceKxClusterTimeouts | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly vpcConfiguration!: pulumi.Output<outputs.FinspaceKxClusterVpcConfiguration>;

    /**
     * Create a FinspaceKxCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FinspaceKxClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FinspaceKxClusterArgs | FinspaceKxClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FinspaceKxClusterState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["autoScalingConfiguration"] = state ? state.autoScalingConfiguration : undefined;
            resourceInputs["availabilityZoneId"] = state ? state.availabilityZoneId : undefined;
            resourceInputs["azMode"] = state ? state.azMode : undefined;
            resourceInputs["cacheStorageConfigurations"] = state ? state.cacheStorageConfigurations : undefined;
            resourceInputs["capacityConfiguration"] = state ? state.capacityConfiguration : undefined;
            resourceInputs["code"] = state ? state.code : undefined;
            resourceInputs["commandLineArguments"] = state ? state.commandLineArguments : undefined;
            resourceInputs["createdTimestamp"] = state ? state.createdTimestamp : undefined;
            resourceInputs["databases"] = state ? state.databases : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["executionRole"] = state ? state.executionRole : undefined;
            resourceInputs["initializationScript"] = state ? state.initializationScript : undefined;
            resourceInputs["lastModifiedTimestamp"] = state ? state.lastModifiedTimestamp : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["releaseLabel"] = state ? state.releaseLabel : undefined;
            resourceInputs["savedownStorageConfiguration"] = state ? state.savedownStorageConfiguration : undefined;
            resourceInputs["scalingGroupConfiguration"] = state ? state.scalingGroupConfiguration : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["statusReason"] = state ? state.statusReason : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["tickerplantLogConfigurations"] = state ? state.tickerplantLogConfigurations : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vpcConfiguration"] = state ? state.vpcConfiguration : undefined;
        } else {
            const args = argsOrState as FinspaceKxClusterArgs | undefined;
            if ((!args || args.azMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'azMode'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.releaseLabel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'releaseLabel'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            if ((!args || args.vpcConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcConfiguration'");
            }
            resourceInputs["autoScalingConfiguration"] = args ? args.autoScalingConfiguration : undefined;
            resourceInputs["availabilityZoneId"] = args ? args.availabilityZoneId : undefined;
            resourceInputs["azMode"] = args ? args.azMode : undefined;
            resourceInputs["cacheStorageConfigurations"] = args ? args.cacheStorageConfigurations : undefined;
            resourceInputs["capacityConfiguration"] = args ? args.capacityConfiguration : undefined;
            resourceInputs["code"] = args ? args.code : undefined;
            resourceInputs["commandLineArguments"] = args ? args.commandLineArguments : undefined;
            resourceInputs["databases"] = args ? args.databases : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["executionRole"] = args ? args.executionRole : undefined;
            resourceInputs["initializationScript"] = args ? args.initializationScript : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["releaseLabel"] = args ? args.releaseLabel : undefined;
            resourceInputs["savedownStorageConfiguration"] = args ? args.savedownStorageConfiguration : undefined;
            resourceInputs["scalingGroupConfiguration"] = args ? args.scalingGroupConfiguration : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["tickerplantLogConfigurations"] = args ? args.tickerplantLogConfigurations : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vpcConfiguration"] = args ? args.vpcConfiguration : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdTimestamp"] = undefined /*out*/;
            resourceInputs["lastModifiedTimestamp"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusReason"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FinspaceKxCluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FinspaceKxCluster resources.
 */
export interface FinspaceKxClusterState {
    arn?: pulumi.Input<string>;
    autoScalingConfiguration?: pulumi.Input<inputs.FinspaceKxClusterAutoScalingConfiguration>;
    availabilityZoneId?: pulumi.Input<string>;
    azMode?: pulumi.Input<string>;
    cacheStorageConfigurations?: pulumi.Input<pulumi.Input<inputs.FinspaceKxClusterCacheStorageConfiguration>[]>;
    capacityConfiguration?: pulumi.Input<inputs.FinspaceKxClusterCapacityConfiguration>;
    code?: pulumi.Input<inputs.FinspaceKxClusterCode>;
    commandLineArguments?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    createdTimestamp?: pulumi.Input<string>;
    databases?: pulumi.Input<pulumi.Input<inputs.FinspaceKxClusterDatabase>[]>;
    description?: pulumi.Input<string>;
    environmentId?: pulumi.Input<string>;
    executionRole?: pulumi.Input<string>;
    initializationScript?: pulumi.Input<string>;
    lastModifiedTimestamp?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    releaseLabel?: pulumi.Input<string>;
    savedownStorageConfiguration?: pulumi.Input<inputs.FinspaceKxClusterSavedownStorageConfiguration>;
    scalingGroupConfiguration?: pulumi.Input<inputs.FinspaceKxClusterScalingGroupConfiguration>;
    status?: pulumi.Input<string>;
    statusReason?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tickerplantLogConfigurations?: pulumi.Input<pulumi.Input<inputs.FinspaceKxClusterTickerplantLogConfiguration>[]>;
    timeouts?: pulumi.Input<inputs.FinspaceKxClusterTimeouts>;
    type?: pulumi.Input<string>;
    vpcConfiguration?: pulumi.Input<inputs.FinspaceKxClusterVpcConfiguration>;
}

/**
 * The set of arguments for constructing a FinspaceKxCluster resource.
 */
export interface FinspaceKxClusterArgs {
    autoScalingConfiguration?: pulumi.Input<inputs.FinspaceKxClusterAutoScalingConfiguration>;
    availabilityZoneId?: pulumi.Input<string>;
    azMode: pulumi.Input<string>;
    cacheStorageConfigurations?: pulumi.Input<pulumi.Input<inputs.FinspaceKxClusterCacheStorageConfiguration>[]>;
    capacityConfiguration?: pulumi.Input<inputs.FinspaceKxClusterCapacityConfiguration>;
    code?: pulumi.Input<inputs.FinspaceKxClusterCode>;
    commandLineArguments?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    databases?: pulumi.Input<pulumi.Input<inputs.FinspaceKxClusterDatabase>[]>;
    description?: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
    executionRole?: pulumi.Input<string>;
    initializationScript?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    releaseLabel: pulumi.Input<string>;
    savedownStorageConfiguration?: pulumi.Input<inputs.FinspaceKxClusterSavedownStorageConfiguration>;
    scalingGroupConfiguration?: pulumi.Input<inputs.FinspaceKxClusterScalingGroupConfiguration>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tickerplantLogConfigurations?: pulumi.Input<pulumi.Input<inputs.FinspaceKxClusterTickerplantLogConfiguration>[]>;
    timeouts?: pulumi.Input<inputs.FinspaceKxClusterTimeouts>;
    type: pulumi.Input<string>;
    vpcConfiguration: pulumi.Input<inputs.FinspaceKxClusterVpcConfiguration>;
}
