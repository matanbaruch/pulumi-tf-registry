// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class GrafanaWorkspaceServiceAccountToken extends pulumi.CustomResource {
    /**
     * Get an existing GrafanaWorkspaceServiceAccountToken resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GrafanaWorkspaceServiceAccountTokenState, opts?: pulumi.CustomResourceOptions): GrafanaWorkspaceServiceAccountToken {
        return new GrafanaWorkspaceServiceAccountToken(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/grafanaWorkspaceServiceAccountToken:GrafanaWorkspaceServiceAccountToken';

    /**
     * Returns true if the given object is an instance of GrafanaWorkspaceServiceAccountToken.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GrafanaWorkspaceServiceAccountToken {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GrafanaWorkspaceServiceAccountToken.__pulumiType;
    }

    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public /*out*/ readonly expiresAt!: pulumi.Output<string>;
    public /*out*/ readonly key!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly secondsToLive!: pulumi.Output<number>;
    public readonly serviceAccountId!: pulumi.Output<string>;
    public /*out*/ readonly serviceAccountTokenId!: pulumi.Output<string>;
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a GrafanaWorkspaceServiceAccountToken resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GrafanaWorkspaceServiceAccountTokenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GrafanaWorkspaceServiceAccountTokenArgs | GrafanaWorkspaceServiceAccountTokenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GrafanaWorkspaceServiceAccountTokenState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["expiresAt"] = state ? state.expiresAt : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["secondsToLive"] = state ? state.secondsToLive : undefined;
            resourceInputs["serviceAccountId"] = state ? state.serviceAccountId : undefined;
            resourceInputs["serviceAccountTokenId"] = state ? state.serviceAccountTokenId : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as GrafanaWorkspaceServiceAccountTokenArgs | undefined;
            if ((!args || args.secondsToLive === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secondsToLive'");
            }
            if ((!args || args.serviceAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceAccountId'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["secondsToLive"] = args ? args.secondsToLive : undefined;
            resourceInputs["serviceAccountId"] = args ? args.serviceAccountId : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["expiresAt"] = undefined /*out*/;
            resourceInputs["key"] = undefined /*out*/;
            resourceInputs["serviceAccountTokenId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["key"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(GrafanaWorkspaceServiceAccountToken.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GrafanaWorkspaceServiceAccountToken resources.
 */
export interface GrafanaWorkspaceServiceAccountTokenState {
    createdAt?: pulumi.Input<string>;
    expiresAt?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    secondsToLive?: pulumi.Input<number>;
    serviceAccountId?: pulumi.Input<string>;
    serviceAccountTokenId?: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GrafanaWorkspaceServiceAccountToken resource.
 */
export interface GrafanaWorkspaceServiceAccountTokenArgs {
    name?: pulumi.Input<string>;
    secondsToLive: pulumi.Input<number>;
    serviceAccountId: pulumi.Input<string>;
    workspaceId: pulumi.Input<string>;
}
