// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOrganizationsOrganizationalUnitDescendantAccounts(args: GetOrganizationsOrganizationalUnitDescendantAccountsArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationsOrganizationalUnitDescendantAccountsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getOrganizationsOrganizationalUnitDescendantAccounts:getOrganizationsOrganizationalUnitDescendantAccounts", {
        "id": args.id,
        "parentId": args.parentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrganizationsOrganizationalUnitDescendantAccounts.
 */
export interface GetOrganizationsOrganizationalUnitDescendantAccountsArgs {
    id?: string;
    parentId: string;
}

/**
 * A collection of values returned by getOrganizationsOrganizationalUnitDescendantAccounts.
 */
export interface GetOrganizationsOrganizationalUnitDescendantAccountsResult {
    readonly accounts: outputs.GetOrganizationsOrganizationalUnitDescendantAccountsAccount[];
    readonly id: string;
    readonly parentId: string;
}
export function getOrganizationsOrganizationalUnitDescendantAccountsOutput(args: GetOrganizationsOrganizationalUnitDescendantAccountsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationsOrganizationalUnitDescendantAccountsResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationsOrganizationalUnitDescendantAccounts(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationsOrganizationalUnitDescendantAccounts.
 */
export interface GetOrganizationsOrganizationalUnitDescendantAccountsOutputArgs {
    id?: pulumi.Input<string>;
    parentId: pulumi.Input<string>;
}
