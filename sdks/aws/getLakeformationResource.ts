// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLakeformationResource(args: GetLakeformationResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetLakeformationResourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getLakeformationResource:getLakeformationResource", {
        "arn": args.arn,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLakeformationResource.
 */
export interface GetLakeformationResourceArgs {
    arn: string;
    id?: string;
}

/**
 * A collection of values returned by getLakeformationResource.
 */
export interface GetLakeformationResourceResult {
    readonly arn: string;
    readonly id: string;
    readonly lastModified: string;
    readonly roleArn: string;
}
export function getLakeformationResourceOutput(args: GetLakeformationResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLakeformationResourceResult> {
    return pulumi.output(args).apply((a: any) => getLakeformationResource(a, opts))
}

/**
 * A collection of arguments for invoking getLakeformationResource.
 */
export interface GetLakeformationResourceOutputArgs {
    arn: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
