// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SagemakerDataQualityJobDefinition extends pulumi.CustomResource {
    /**
     * Get an existing SagemakerDataQualityJobDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SagemakerDataQualityJobDefinitionState, opts?: pulumi.CustomResourceOptions): SagemakerDataQualityJobDefinition {
        return new SagemakerDataQualityJobDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/sagemakerDataQualityJobDefinition:SagemakerDataQualityJobDefinition';

    /**
     * Returns true if the given object is an instance of SagemakerDataQualityJobDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SagemakerDataQualityJobDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SagemakerDataQualityJobDefinition.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly dataQualityAppSpecification!: pulumi.Output<outputs.SagemakerDataQualityJobDefinitionDataQualityAppSpecification>;
    public readonly dataQualityBaselineConfig!: pulumi.Output<outputs.SagemakerDataQualityJobDefinitionDataQualityBaselineConfig | undefined>;
    public readonly dataQualityJobInput!: pulumi.Output<outputs.SagemakerDataQualityJobDefinitionDataQualityJobInput>;
    public readonly dataQualityJobOutputConfig!: pulumi.Output<outputs.SagemakerDataQualityJobDefinitionDataQualityJobOutputConfig>;
    public readonly jobResources!: pulumi.Output<outputs.SagemakerDataQualityJobDefinitionJobResources>;
    public readonly name!: pulumi.Output<string>;
    public readonly networkConfig!: pulumi.Output<outputs.SagemakerDataQualityJobDefinitionNetworkConfig | undefined>;
    public readonly roleArn!: pulumi.Output<string>;
    public readonly stoppingCondition!: pulumi.Output<outputs.SagemakerDataQualityJobDefinitionStoppingCondition | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a SagemakerDataQualityJobDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SagemakerDataQualityJobDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SagemakerDataQualityJobDefinitionArgs | SagemakerDataQualityJobDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SagemakerDataQualityJobDefinitionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["dataQualityAppSpecification"] = state ? state.dataQualityAppSpecification : undefined;
            resourceInputs["dataQualityBaselineConfig"] = state ? state.dataQualityBaselineConfig : undefined;
            resourceInputs["dataQualityJobInput"] = state ? state.dataQualityJobInput : undefined;
            resourceInputs["dataQualityJobOutputConfig"] = state ? state.dataQualityJobOutputConfig : undefined;
            resourceInputs["jobResources"] = state ? state.jobResources : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkConfig"] = state ? state.networkConfig : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["stoppingCondition"] = state ? state.stoppingCondition : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as SagemakerDataQualityJobDefinitionArgs | undefined;
            if ((!args || args.dataQualityAppSpecification === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataQualityAppSpecification'");
            }
            if ((!args || args.dataQualityJobInput === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataQualityJobInput'");
            }
            if ((!args || args.dataQualityJobOutputConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataQualityJobOutputConfig'");
            }
            if ((!args || args.jobResources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobResources'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["dataQualityAppSpecification"] = args ? args.dataQualityAppSpecification : undefined;
            resourceInputs["dataQualityBaselineConfig"] = args ? args.dataQualityBaselineConfig : undefined;
            resourceInputs["dataQualityJobInput"] = args ? args.dataQualityJobInput : undefined;
            resourceInputs["dataQualityJobOutputConfig"] = args ? args.dataQualityJobOutputConfig : undefined;
            resourceInputs["jobResources"] = args ? args.jobResources : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkConfig"] = args ? args.networkConfig : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["stoppingCondition"] = args ? args.stoppingCondition : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SagemakerDataQualityJobDefinition.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SagemakerDataQualityJobDefinition resources.
 */
export interface SagemakerDataQualityJobDefinitionState {
    arn?: pulumi.Input<string>;
    dataQualityAppSpecification?: pulumi.Input<inputs.SagemakerDataQualityJobDefinitionDataQualityAppSpecification>;
    dataQualityBaselineConfig?: pulumi.Input<inputs.SagemakerDataQualityJobDefinitionDataQualityBaselineConfig>;
    dataQualityJobInput?: pulumi.Input<inputs.SagemakerDataQualityJobDefinitionDataQualityJobInput>;
    dataQualityJobOutputConfig?: pulumi.Input<inputs.SagemakerDataQualityJobDefinitionDataQualityJobOutputConfig>;
    jobResources?: pulumi.Input<inputs.SagemakerDataQualityJobDefinitionJobResources>;
    name?: pulumi.Input<string>;
    networkConfig?: pulumi.Input<inputs.SagemakerDataQualityJobDefinitionNetworkConfig>;
    roleArn?: pulumi.Input<string>;
    stoppingCondition?: pulumi.Input<inputs.SagemakerDataQualityJobDefinitionStoppingCondition>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a SagemakerDataQualityJobDefinition resource.
 */
export interface SagemakerDataQualityJobDefinitionArgs {
    dataQualityAppSpecification: pulumi.Input<inputs.SagemakerDataQualityJobDefinitionDataQualityAppSpecification>;
    dataQualityBaselineConfig?: pulumi.Input<inputs.SagemakerDataQualityJobDefinitionDataQualityBaselineConfig>;
    dataQualityJobInput: pulumi.Input<inputs.SagemakerDataQualityJobDefinitionDataQualityJobInput>;
    dataQualityJobOutputConfig: pulumi.Input<inputs.SagemakerDataQualityJobDefinitionDataQualityJobOutputConfig>;
    jobResources: pulumi.Input<inputs.SagemakerDataQualityJobDefinitionJobResources>;
    name?: pulumi.Input<string>;
    networkConfig?: pulumi.Input<inputs.SagemakerDataQualityJobDefinitionNetworkConfig>;
    roleArn: pulumi.Input<string>;
    stoppingCondition?: pulumi.Input<inputs.SagemakerDataQualityJobDefinitionStoppingCondition>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
