// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAlbTargetGroup(args?: GetAlbTargetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAlbTargetGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getAlbTargetGroup:getAlbTargetGroup", {
        "arn": args.arn,
        "id": args.id,
        "loadBalancingAnomalyMitigation": args.loadBalancingAnomalyMitigation,
        "name": args.name,
        "tags": args.tags,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAlbTargetGroup.
 */
export interface GetAlbTargetGroupArgs {
    arn?: string;
    id?: string;
    loadBalancingAnomalyMitigation?: string;
    name?: string;
    tags?: {[key: string]: string};
    timeouts?: inputs.GetAlbTargetGroupTimeouts;
}

/**
 * A collection of values returned by getAlbTargetGroup.
 */
export interface GetAlbTargetGroupResult {
    readonly arn: string;
    readonly arnSuffix: string;
    readonly connectionTermination: boolean;
    readonly deregistrationDelay: string;
    readonly healthChecks: outputs.GetAlbTargetGroupHealthCheck[];
    readonly id: string;
    readonly lambdaMultiValueHeadersEnabled: boolean;
    readonly loadBalancerArns: string[];
    readonly loadBalancingAlgorithmType: string;
    readonly loadBalancingAnomalyMitigation: string;
    readonly loadBalancingCrossZoneEnabled: string;
    readonly name: string;
    readonly port: number;
    readonly preserveClientIp: string;
    readonly protocol: string;
    readonly protocolVersion: string;
    readonly proxyProtocolV2: boolean;
    readonly slowStart: number;
    readonly stickinesses: outputs.GetAlbTargetGroupStickiness[];
    readonly tags: {[key: string]: string};
    readonly targetType: string;
    readonly timeouts?: outputs.GetAlbTargetGroupTimeouts;
    readonly vpcId: string;
}
export function getAlbTargetGroupOutput(args?: GetAlbTargetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlbTargetGroupResult> {
    return pulumi.output(args).apply((a: any) => getAlbTargetGroup(a, opts))
}

/**
 * A collection of arguments for invoking getAlbTargetGroup.
 */
export interface GetAlbTargetGroupOutputArgs {
    arn?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    loadBalancingAnomalyMitigation?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.GetAlbTargetGroupTimeoutsArgs>;
}
