// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDynamodbTableItem(args: GetDynamodbTableItemArgs, opts?: pulumi.InvokeOptions): Promise<GetDynamodbTableItemResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getDynamodbTableItem:getDynamodbTableItem", {
        "expressionAttributeNames": args.expressionAttributeNames,
        "id": args.id,
        "key": args.key,
        "projectionExpression": args.projectionExpression,
        "tableName": args.tableName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDynamodbTableItem.
 */
export interface GetDynamodbTableItemArgs {
    expressionAttributeNames?: {[key: string]: string};
    id?: string;
    key: string;
    projectionExpression?: string;
    tableName: string;
}

/**
 * A collection of values returned by getDynamodbTableItem.
 */
export interface GetDynamodbTableItemResult {
    readonly expressionAttributeNames?: {[key: string]: string};
    readonly id: string;
    readonly item: string;
    readonly key: string;
    readonly projectionExpression?: string;
    readonly tableName: string;
}
export function getDynamodbTableItemOutput(args: GetDynamodbTableItemOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDynamodbTableItemResult> {
    return pulumi.output(args).apply((a: any) => getDynamodbTableItem(a, opts))
}

/**
 * A collection of arguments for invoking getDynamodbTableItem.
 */
export interface GetDynamodbTableItemOutputArgs {
    expressionAttributeNames?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    projectionExpression?: pulumi.Input<string>;
    tableName: pulumi.Input<string>;
}
