// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BedrockagentAgent extends pulumi.CustomResource {
    /**
     * Get an existing BedrockagentAgent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BedrockagentAgentState, opts?: pulumi.CustomResourceOptions): BedrockagentAgent {
        return new BedrockagentAgent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/bedrockagentAgent:BedrockagentAgent';

    /**
     * Returns true if the given object is an instance of BedrockagentAgent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BedrockagentAgent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BedrockagentAgent.__pulumiType;
    }

    public /*out*/ readonly agentArn!: pulumi.Output<string>;
    public /*out*/ readonly agentId!: pulumi.Output<string>;
    public readonly agentName!: pulumi.Output<string>;
    public readonly agentResourceRoleArn!: pulumi.Output<string>;
    public /*out*/ readonly agentVersion!: pulumi.Output<string>;
    public readonly customerEncryptionKeyArn!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly foundationModel!: pulumi.Output<string>;
    public readonly idleSessionTtlInSeconds!: pulumi.Output<number>;
    public readonly instruction!: pulumi.Output<string>;
    public readonly prepareAgent!: pulumi.Output<boolean>;
    public readonly promptOverrideConfigurations!: pulumi.Output<outputs.BedrockagentAgentPromptOverrideConfiguration[]>;
    public readonly skipResourceInUseCheck!: pulumi.Output<boolean>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.BedrockagentAgentTimeouts | undefined>;

    /**
     * Create a BedrockagentAgent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BedrockagentAgentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BedrockagentAgentArgs | BedrockagentAgentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BedrockagentAgentState | undefined;
            resourceInputs["agentArn"] = state ? state.agentArn : undefined;
            resourceInputs["agentId"] = state ? state.agentId : undefined;
            resourceInputs["agentName"] = state ? state.agentName : undefined;
            resourceInputs["agentResourceRoleArn"] = state ? state.agentResourceRoleArn : undefined;
            resourceInputs["agentVersion"] = state ? state.agentVersion : undefined;
            resourceInputs["customerEncryptionKeyArn"] = state ? state.customerEncryptionKeyArn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["foundationModel"] = state ? state.foundationModel : undefined;
            resourceInputs["idleSessionTtlInSeconds"] = state ? state.idleSessionTtlInSeconds : undefined;
            resourceInputs["instruction"] = state ? state.instruction : undefined;
            resourceInputs["prepareAgent"] = state ? state.prepareAgent : undefined;
            resourceInputs["promptOverrideConfigurations"] = state ? state.promptOverrideConfigurations : undefined;
            resourceInputs["skipResourceInUseCheck"] = state ? state.skipResourceInUseCheck : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as BedrockagentAgentArgs | undefined;
            if ((!args || args.agentName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'agentName'");
            }
            if ((!args || args.agentResourceRoleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'agentResourceRoleArn'");
            }
            if ((!args || args.foundationModel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'foundationModel'");
            }
            resourceInputs["agentName"] = args ? args.agentName : undefined;
            resourceInputs["agentResourceRoleArn"] = args ? args.agentResourceRoleArn : undefined;
            resourceInputs["customerEncryptionKeyArn"] = args ? args.customerEncryptionKeyArn : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["foundationModel"] = args ? args.foundationModel : undefined;
            resourceInputs["idleSessionTtlInSeconds"] = args ? args.idleSessionTtlInSeconds : undefined;
            resourceInputs["instruction"] = args ? args.instruction : undefined;
            resourceInputs["prepareAgent"] = args ? args.prepareAgent : undefined;
            resourceInputs["promptOverrideConfigurations"] = args ? args.promptOverrideConfigurations : undefined;
            resourceInputs["skipResourceInUseCheck"] = args ? args.skipResourceInUseCheck : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["agentArn"] = undefined /*out*/;
            resourceInputs["agentId"] = undefined /*out*/;
            resourceInputs["agentVersion"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BedrockagentAgent.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BedrockagentAgent resources.
 */
export interface BedrockagentAgentState {
    agentArn?: pulumi.Input<string>;
    agentId?: pulumi.Input<string>;
    agentName?: pulumi.Input<string>;
    agentResourceRoleArn?: pulumi.Input<string>;
    agentVersion?: pulumi.Input<string>;
    customerEncryptionKeyArn?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    foundationModel?: pulumi.Input<string>;
    idleSessionTtlInSeconds?: pulumi.Input<number>;
    instruction?: pulumi.Input<string>;
    prepareAgent?: pulumi.Input<boolean>;
    promptOverrideConfigurations?: pulumi.Input<pulumi.Input<inputs.BedrockagentAgentPromptOverrideConfiguration>[]>;
    skipResourceInUseCheck?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.BedrockagentAgentTimeouts>;
}

/**
 * The set of arguments for constructing a BedrockagentAgent resource.
 */
export interface BedrockagentAgentArgs {
    agentName: pulumi.Input<string>;
    agentResourceRoleArn: pulumi.Input<string>;
    customerEncryptionKeyArn?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    foundationModel: pulumi.Input<string>;
    idleSessionTtlInSeconds?: pulumi.Input<number>;
    instruction?: pulumi.Input<string>;
    prepareAgent?: pulumi.Input<boolean>;
    promptOverrideConfigurations?: pulumi.Input<pulumi.Input<inputs.BedrockagentAgentPromptOverrideConfiguration>[]>;
    skipResourceInUseCheck?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.BedrockagentAgentTimeouts>;
}
