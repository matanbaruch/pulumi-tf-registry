// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getElasticsearchDomain(args: GetElasticsearchDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticsearchDomainResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getElasticsearchDomain:getElasticsearchDomain", {
        "domainName": args.domainName,
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getElasticsearchDomain.
 */
export interface GetElasticsearchDomainArgs {
    domainName: string;
    id?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getElasticsearchDomain.
 */
export interface GetElasticsearchDomainResult {
    readonly accessPolicies: string;
    readonly advancedOptions: {[key: string]: string};
    readonly advancedSecurityOptions: outputs.GetElasticsearchDomainAdvancedSecurityOption[];
    readonly arn: string;
    readonly autoTuneOptions: outputs.GetElasticsearchDomainAutoTuneOption[];
    readonly clusterConfigs: outputs.GetElasticsearchDomainClusterConfig[];
    readonly cognitoOptions: outputs.GetElasticsearchDomainCognitoOption[];
    readonly created: boolean;
    readonly deleted: boolean;
    readonly domainId: string;
    readonly domainName: string;
    readonly ebsOptions: outputs.GetElasticsearchDomainEbsOption[];
    readonly elasticsearchVersion: string;
    readonly encryptionAtRests: outputs.GetElasticsearchDomainEncryptionAtRest[];
    readonly endpoint: string;
    readonly id: string;
    readonly kibanaEndpoint: string;
    readonly logPublishingOptions: outputs.GetElasticsearchDomainLogPublishingOption[];
    readonly nodeToNodeEncryptions: outputs.GetElasticsearchDomainNodeToNodeEncryption[];
    readonly processing: boolean;
    readonly snapshotOptions: outputs.GetElasticsearchDomainSnapshotOption[];
    readonly tags: {[key: string]: string};
    readonly vpcOptions: outputs.GetElasticsearchDomainVpcOption[];
}
export function getElasticsearchDomainOutput(args: GetElasticsearchDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetElasticsearchDomainResult> {
    return pulumi.output(args).apply((a: any) => getElasticsearchDomain(a, opts))
}

/**
 * A collection of arguments for invoking getElasticsearchDomain.
 */
export interface GetElasticsearchDomainOutputArgs {
    domainName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
