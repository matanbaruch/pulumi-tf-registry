// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEcrAuthorizationToken(args?: GetEcrAuthorizationTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetEcrAuthorizationTokenResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getEcrAuthorizationToken:getEcrAuthorizationToken", {
        "id": args.id,
        "registryId": args.registryId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEcrAuthorizationToken.
 */
export interface GetEcrAuthorizationTokenArgs {
    id?: string;
    registryId?: string;
}

/**
 * A collection of values returned by getEcrAuthorizationToken.
 */
export interface GetEcrAuthorizationTokenResult {
    readonly authorizationToken: string;
    readonly expiresAt: string;
    readonly id: string;
    readonly password: string;
    readonly proxyEndpoint: string;
    readonly registryId?: string;
    readonly userName: string;
}
export function getEcrAuthorizationTokenOutput(args?: GetEcrAuthorizationTokenOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEcrAuthorizationTokenResult> {
    return pulumi.output(args).apply((a: any) => getEcrAuthorizationToken(a, opts))
}

/**
 * A collection of arguments for invoking getEcrAuthorizationToken.
 */
export interface GetEcrAuthorizationTokenOutputArgs {
    id?: pulumi.Input<string>;
    registryId?: pulumi.Input<string>;
}
