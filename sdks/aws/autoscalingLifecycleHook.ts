// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AutoscalingLifecycleHook extends pulumi.CustomResource {
    /**
     * Get an existing AutoscalingLifecycleHook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutoscalingLifecycleHookState, opts?: pulumi.CustomResourceOptions): AutoscalingLifecycleHook {
        return new AutoscalingLifecycleHook(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/autoscalingLifecycleHook:AutoscalingLifecycleHook';

    /**
     * Returns true if the given object is an instance of AutoscalingLifecycleHook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutoscalingLifecycleHook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutoscalingLifecycleHook.__pulumiType;
    }

    public readonly autoscalingGroupName!: pulumi.Output<string>;
    public readonly defaultResult!: pulumi.Output<string>;
    public readonly heartbeatTimeout!: pulumi.Output<number | undefined>;
    public readonly lifecycleTransition!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly notificationMetadata!: pulumi.Output<string | undefined>;
    public readonly notificationTargetArn!: pulumi.Output<string | undefined>;
    public readonly roleArn!: pulumi.Output<string | undefined>;

    /**
     * Create a AutoscalingLifecycleHook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutoscalingLifecycleHookArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutoscalingLifecycleHookArgs | AutoscalingLifecycleHookState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutoscalingLifecycleHookState | undefined;
            resourceInputs["autoscalingGroupName"] = state ? state.autoscalingGroupName : undefined;
            resourceInputs["defaultResult"] = state ? state.defaultResult : undefined;
            resourceInputs["heartbeatTimeout"] = state ? state.heartbeatTimeout : undefined;
            resourceInputs["lifecycleTransition"] = state ? state.lifecycleTransition : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notificationMetadata"] = state ? state.notificationMetadata : undefined;
            resourceInputs["notificationTargetArn"] = state ? state.notificationTargetArn : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
        } else {
            const args = argsOrState as AutoscalingLifecycleHookArgs | undefined;
            if ((!args || args.autoscalingGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autoscalingGroupName'");
            }
            if ((!args || args.lifecycleTransition === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lifecycleTransition'");
            }
            resourceInputs["autoscalingGroupName"] = args ? args.autoscalingGroupName : undefined;
            resourceInputs["defaultResult"] = args ? args.defaultResult : undefined;
            resourceInputs["heartbeatTimeout"] = args ? args.heartbeatTimeout : undefined;
            resourceInputs["lifecycleTransition"] = args ? args.lifecycleTransition : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["notificationMetadata"] = args ? args.notificationMetadata : undefined;
            resourceInputs["notificationTargetArn"] = args ? args.notificationTargetArn : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutoscalingLifecycleHook.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AutoscalingLifecycleHook resources.
 */
export interface AutoscalingLifecycleHookState {
    autoscalingGroupName?: pulumi.Input<string>;
    defaultResult?: pulumi.Input<string>;
    heartbeatTimeout?: pulumi.Input<number>;
    lifecycleTransition?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    notificationMetadata?: pulumi.Input<string>;
    notificationTargetArn?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AutoscalingLifecycleHook resource.
 */
export interface AutoscalingLifecycleHookArgs {
    autoscalingGroupName: pulumi.Input<string>;
    defaultResult?: pulumi.Input<string>;
    heartbeatTimeout?: pulumi.Input<number>;
    lifecycleTransition: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    notificationMetadata?: pulumi.Input<string>;
    notificationTargetArn?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
}
