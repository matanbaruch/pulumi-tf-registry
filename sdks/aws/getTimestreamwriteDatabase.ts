// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTimestreamwriteDatabase(args: GetTimestreamwriteDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetTimestreamwriteDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getTimestreamwriteDatabase:getTimestreamwriteDatabase", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTimestreamwriteDatabase.
 */
export interface GetTimestreamwriteDatabaseArgs {
    name: string;
}

/**
 * A collection of values returned by getTimestreamwriteDatabase.
 */
export interface GetTimestreamwriteDatabaseResult {
    readonly arn: string;
    readonly createdTime: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kmsKeyId: string;
    readonly lastUpdatedTime: string;
    readonly name: string;
    readonly tableCount: number;
}
export function getTimestreamwriteDatabaseOutput(args: GetTimestreamwriteDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTimestreamwriteDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getTimestreamwriteDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getTimestreamwriteDatabase.
 */
export interface GetTimestreamwriteDatabaseOutputArgs {
    name: pulumi.Input<string>;
}
