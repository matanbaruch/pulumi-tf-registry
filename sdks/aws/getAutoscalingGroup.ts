// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAutoscalingGroup(args: GetAutoscalingGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAutoscalingGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getAutoscalingGroup:getAutoscalingGroup", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAutoscalingGroup.
 */
export interface GetAutoscalingGroupArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getAutoscalingGroup.
 */
export interface GetAutoscalingGroupResult {
    readonly arn: string;
    readonly availabilityZones: string[];
    readonly defaultCooldown: number;
    readonly desiredCapacity: number;
    readonly desiredCapacityType: string;
    readonly enabledMetrics: string[];
    readonly healthCheckGracePeriod: number;
    readonly healthCheckType: string;
    readonly id: string;
    readonly instanceMaintenancePolicies: outputs.GetAutoscalingGroupInstanceMaintenancePolicy[];
    readonly launchConfiguration: string;
    readonly launchTemplates: outputs.GetAutoscalingGroupLaunchTemplate[];
    readonly loadBalancers: string[];
    readonly maxInstanceLifetime: number;
    readonly maxSize: number;
    readonly minSize: number;
    readonly mixedInstancesPolicies: outputs.GetAutoscalingGroupMixedInstancesPolicy[];
    readonly name: string;
    readonly newInstancesProtectedFromScaleIn: boolean;
    readonly placementGroup: string;
    readonly predictedCapacity: number;
    readonly serviceLinkedRoleArn: string;
    readonly status: string;
    readonly suspendedProcesses: string[];
    readonly tags: outputs.GetAutoscalingGroupTag[];
    readonly targetGroupArns: string[];
    readonly terminationPolicies: string[];
    readonly trafficSources: outputs.GetAutoscalingGroupTrafficSource[];
    readonly vpcZoneIdentifier: string;
    readonly warmPoolSize: number;
    readonly warmPools: outputs.GetAutoscalingGroupWarmPool[];
}
export function getAutoscalingGroupOutput(args: GetAutoscalingGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutoscalingGroupResult> {
    return pulumi.output(args).apply((a: any) => getAutoscalingGroup(a, opts))
}

/**
 * A collection of arguments for invoking getAutoscalingGroup.
 */
export interface GetAutoscalingGroupOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
