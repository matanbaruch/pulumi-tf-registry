// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcIpamPreviewNextCidr(args: GetVpcIpamPreviewNextCidrArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcIpamPreviewNextCidrResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getVpcIpamPreviewNextCidr:getVpcIpamPreviewNextCidr", {
        "disallowedCidrs": args.disallowedCidrs,
        "id": args.id,
        "ipamPoolId": args.ipamPoolId,
        "netmaskLength": args.netmaskLength,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcIpamPreviewNextCidr.
 */
export interface GetVpcIpamPreviewNextCidrArgs {
    disallowedCidrs?: string[];
    id?: string;
    ipamPoolId: string;
    netmaskLength?: number;
    timeouts?: inputs.GetVpcIpamPreviewNextCidrTimeouts;
}

/**
 * A collection of values returned by getVpcIpamPreviewNextCidr.
 */
export interface GetVpcIpamPreviewNextCidrResult {
    readonly cidr: string;
    readonly disallowedCidrs?: string[];
    readonly id: string;
    readonly ipamPoolId: string;
    readonly netmaskLength?: number;
    readonly timeouts?: outputs.GetVpcIpamPreviewNextCidrTimeouts;
}
export function getVpcIpamPreviewNextCidrOutput(args: GetVpcIpamPreviewNextCidrOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcIpamPreviewNextCidrResult> {
    return pulumi.output(args).apply((a: any) => getVpcIpamPreviewNextCidr(a, opts))
}

/**
 * A collection of arguments for invoking getVpcIpamPreviewNextCidr.
 */
export interface GetVpcIpamPreviewNextCidrOutputArgs {
    disallowedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    ipamPoolId: pulumi.Input<string>;
    netmaskLength?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.GetVpcIpamPreviewNextCidrTimeoutsArgs>;
}
