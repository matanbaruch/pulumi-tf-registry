// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRdsOrderableDbInstance(args: GetRdsOrderableDbInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetRdsOrderableDbInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getRdsOrderableDbInstance:getRdsOrderableDbInstance", {
        "availabilityZoneGroup": args.availabilityZoneGroup,
        "engine": args.engine,
        "engineLatestVersion": args.engineLatestVersion,
        "engineVersion": args.engineVersion,
        "id": args.id,
        "instanceClass": args.instanceClass,
        "licenseModel": args.licenseModel,
        "preferredEngineVersions": args.preferredEngineVersions,
        "preferredInstanceClasses": args.preferredInstanceClasses,
        "readReplicaCapable": args.readReplicaCapable,
        "storageType": args.storageType,
        "supportedEngineModes": args.supportedEngineModes,
        "supportedNetworkTypes": args.supportedNetworkTypes,
        "supportsClusters": args.supportsClusters,
        "supportsEnhancedMonitoring": args.supportsEnhancedMonitoring,
        "supportsGlobalDatabases": args.supportsGlobalDatabases,
        "supportsIamDatabaseAuthentication": args.supportsIamDatabaseAuthentication,
        "supportsIops": args.supportsIops,
        "supportsKerberosAuthentication": args.supportsKerberosAuthentication,
        "supportsMultiAz": args.supportsMultiAz,
        "supportsPerformanceInsights": args.supportsPerformanceInsights,
        "supportsStorageAutoscaling": args.supportsStorageAutoscaling,
        "supportsStorageEncryption": args.supportsStorageEncryption,
        "vpc": args.vpc,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRdsOrderableDbInstance.
 */
export interface GetRdsOrderableDbInstanceArgs {
    availabilityZoneGroup?: string;
    engine: string;
    engineLatestVersion?: boolean;
    engineVersion?: string;
    id?: string;
    instanceClass?: string;
    licenseModel?: string;
    preferredEngineVersions?: string[];
    preferredInstanceClasses?: string[];
    readReplicaCapable?: boolean;
    storageType?: string;
    supportedEngineModes?: string[];
    supportedNetworkTypes?: string[];
    supportsClusters?: boolean;
    supportsEnhancedMonitoring?: boolean;
    supportsGlobalDatabases?: boolean;
    supportsIamDatabaseAuthentication?: boolean;
    supportsIops?: boolean;
    supportsKerberosAuthentication?: boolean;
    supportsMultiAz?: boolean;
    supportsPerformanceInsights?: boolean;
    supportsStorageAutoscaling?: boolean;
    supportsStorageEncryption?: boolean;
    vpc?: boolean;
}

/**
 * A collection of values returned by getRdsOrderableDbInstance.
 */
export interface GetRdsOrderableDbInstanceResult {
    readonly availabilityZoneGroup: string;
    readonly availabilityZones: string[];
    readonly engine: string;
    readonly engineLatestVersion?: boolean;
    readonly engineVersion: string;
    readonly id: string;
    readonly instanceClass: string;
    readonly licenseModel: string;
    readonly maxIopsPerDbInstance: number;
    readonly maxIopsPerGib: number;
    readonly maxStorageSize: number;
    readonly minIopsPerDbInstance: number;
    readonly minIopsPerGib: number;
    readonly minStorageSize: number;
    readonly multiAzCapable: boolean;
    readonly outpostCapable: boolean;
    readonly preferredEngineVersions?: string[];
    readonly preferredInstanceClasses?: string[];
    readonly readReplicaCapable: boolean;
    readonly storageType: string;
    readonly supportedEngineModes: string[];
    readonly supportedNetworkTypes: string[];
    readonly supportsClusters: boolean;
    readonly supportsEnhancedMonitoring: boolean;
    readonly supportsGlobalDatabases: boolean;
    readonly supportsIamDatabaseAuthentication: boolean;
    readonly supportsIops: boolean;
    readonly supportsKerberosAuthentication: boolean;
    readonly supportsMultiAz: boolean;
    readonly supportsPerformanceInsights: boolean;
    readonly supportsStorageAutoscaling: boolean;
    readonly supportsStorageEncryption: boolean;
    readonly vpc: boolean;
}
export function getRdsOrderableDbInstanceOutput(args: GetRdsOrderableDbInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRdsOrderableDbInstanceResult> {
    return pulumi.output(args).apply((a: any) => getRdsOrderableDbInstance(a, opts))
}

/**
 * A collection of arguments for invoking getRdsOrderableDbInstance.
 */
export interface GetRdsOrderableDbInstanceOutputArgs {
    availabilityZoneGroup?: pulumi.Input<string>;
    engine: pulumi.Input<string>;
    engineLatestVersion?: pulumi.Input<boolean>;
    engineVersion?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instanceClass?: pulumi.Input<string>;
    licenseModel?: pulumi.Input<string>;
    preferredEngineVersions?: pulumi.Input<pulumi.Input<string>[]>;
    preferredInstanceClasses?: pulumi.Input<pulumi.Input<string>[]>;
    readReplicaCapable?: pulumi.Input<boolean>;
    storageType?: pulumi.Input<string>;
    supportedEngineModes?: pulumi.Input<pulumi.Input<string>[]>;
    supportedNetworkTypes?: pulumi.Input<pulumi.Input<string>[]>;
    supportsClusters?: pulumi.Input<boolean>;
    supportsEnhancedMonitoring?: pulumi.Input<boolean>;
    supportsGlobalDatabases?: pulumi.Input<boolean>;
    supportsIamDatabaseAuthentication?: pulumi.Input<boolean>;
    supportsIops?: pulumi.Input<boolean>;
    supportsKerberosAuthentication?: pulumi.Input<boolean>;
    supportsMultiAz?: pulumi.Input<boolean>;
    supportsPerformanceInsights?: pulumi.Input<boolean>;
    supportsStorageAutoscaling?: pulumi.Input<boolean>;
    supportsStorageEncryption?: pulumi.Input<boolean>;
    vpc?: pulumi.Input<boolean>;
}
