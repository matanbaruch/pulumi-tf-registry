// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecretsmanagerSecretRotation(args: GetSecretsmanagerSecretRotationArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretsmanagerSecretRotationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getSecretsmanagerSecretRotation:getSecretsmanagerSecretRotation", {
        "id": args.id,
        "secretId": args.secretId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecretsmanagerSecretRotation.
 */
export interface GetSecretsmanagerSecretRotationArgs {
    id?: string;
    secretId: string;
}

/**
 * A collection of values returned by getSecretsmanagerSecretRotation.
 */
export interface GetSecretsmanagerSecretRotationResult {
    readonly id: string;
    readonly rotationEnabled: boolean;
    readonly rotationLambdaArn: string;
    readonly rotationRules: outputs.GetSecretsmanagerSecretRotationRotationRule[];
    readonly secretId: string;
}
export function getSecretsmanagerSecretRotationOutput(args: GetSecretsmanagerSecretRotationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretsmanagerSecretRotationResult> {
    return pulumi.output(args).apply((a: any) => getSecretsmanagerSecretRotation(a, opts))
}

/**
 * A collection of arguments for invoking getSecretsmanagerSecretRotation.
 */
export interface GetSecretsmanagerSecretRotationOutputArgs {
    id?: pulumi.Input<string>;
    secretId: pulumi.Input<string>;
}
