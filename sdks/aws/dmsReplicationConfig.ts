// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DmsReplicationConfig extends pulumi.CustomResource {
    /**
     * Get an existing DmsReplicationConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DmsReplicationConfigState, opts?: pulumi.CustomResourceOptions): DmsReplicationConfig {
        return new DmsReplicationConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/dmsReplicationConfig:DmsReplicationConfig';

    /**
     * Returns true if the given object is an instance of DmsReplicationConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DmsReplicationConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DmsReplicationConfig.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly computeConfig!: pulumi.Output<outputs.DmsReplicationConfigComputeConfig>;
    public readonly replicationConfigIdentifier!: pulumi.Output<string>;
    public readonly replicationSettings!: pulumi.Output<string>;
    public readonly replicationType!: pulumi.Output<string>;
    public readonly resourceIdentifier!: pulumi.Output<string>;
    public readonly sourceEndpointArn!: pulumi.Output<string>;
    public readonly startReplication!: pulumi.Output<boolean | undefined>;
    public readonly supplementalSettings!: pulumi.Output<string | undefined>;
    public readonly tableMappings!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public readonly targetEndpointArn!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DmsReplicationConfigTimeouts | undefined>;

    /**
     * Create a DmsReplicationConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DmsReplicationConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DmsReplicationConfigArgs | DmsReplicationConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DmsReplicationConfigState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["computeConfig"] = state ? state.computeConfig : undefined;
            resourceInputs["replicationConfigIdentifier"] = state ? state.replicationConfigIdentifier : undefined;
            resourceInputs["replicationSettings"] = state ? state.replicationSettings : undefined;
            resourceInputs["replicationType"] = state ? state.replicationType : undefined;
            resourceInputs["resourceIdentifier"] = state ? state.resourceIdentifier : undefined;
            resourceInputs["sourceEndpointArn"] = state ? state.sourceEndpointArn : undefined;
            resourceInputs["startReplication"] = state ? state.startReplication : undefined;
            resourceInputs["supplementalSettings"] = state ? state.supplementalSettings : undefined;
            resourceInputs["tableMappings"] = state ? state.tableMappings : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["targetEndpointArn"] = state ? state.targetEndpointArn : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DmsReplicationConfigArgs | undefined;
            if ((!args || args.computeConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computeConfig'");
            }
            if ((!args || args.replicationConfigIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'replicationConfigIdentifier'");
            }
            if ((!args || args.replicationType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'replicationType'");
            }
            if ((!args || args.sourceEndpointArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceEndpointArn'");
            }
            if ((!args || args.tableMappings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tableMappings'");
            }
            if ((!args || args.targetEndpointArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetEndpointArn'");
            }
            resourceInputs["computeConfig"] = args ? args.computeConfig : undefined;
            resourceInputs["replicationConfigIdentifier"] = args ? args.replicationConfigIdentifier : undefined;
            resourceInputs["replicationSettings"] = args ? args.replicationSettings : undefined;
            resourceInputs["replicationType"] = args ? args.replicationType : undefined;
            resourceInputs["resourceIdentifier"] = args ? args.resourceIdentifier : undefined;
            resourceInputs["sourceEndpointArn"] = args ? args.sourceEndpointArn : undefined;
            resourceInputs["startReplication"] = args ? args.startReplication : undefined;
            resourceInputs["supplementalSettings"] = args ? args.supplementalSettings : undefined;
            resourceInputs["tableMappings"] = args ? args.tableMappings : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["targetEndpointArn"] = args ? args.targetEndpointArn : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DmsReplicationConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DmsReplicationConfig resources.
 */
export interface DmsReplicationConfigState {
    arn?: pulumi.Input<string>;
    computeConfig?: pulumi.Input<inputs.DmsReplicationConfigComputeConfig>;
    replicationConfigIdentifier?: pulumi.Input<string>;
    replicationSettings?: pulumi.Input<string>;
    replicationType?: pulumi.Input<string>;
    resourceIdentifier?: pulumi.Input<string>;
    sourceEndpointArn?: pulumi.Input<string>;
    startReplication?: pulumi.Input<boolean>;
    supplementalSettings?: pulumi.Input<string>;
    tableMappings?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetEndpointArn?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DmsReplicationConfigTimeouts>;
}

/**
 * The set of arguments for constructing a DmsReplicationConfig resource.
 */
export interface DmsReplicationConfigArgs {
    computeConfig: pulumi.Input<inputs.DmsReplicationConfigComputeConfig>;
    replicationConfigIdentifier: pulumi.Input<string>;
    replicationSettings?: pulumi.Input<string>;
    replicationType: pulumi.Input<string>;
    resourceIdentifier?: pulumi.Input<string>;
    sourceEndpointArn: pulumi.Input<string>;
    startReplication?: pulumi.Input<boolean>;
    supplementalSettings?: pulumi.Input<string>;
    tableMappings: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetEndpointArn: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DmsReplicationConfigTimeouts>;
}
