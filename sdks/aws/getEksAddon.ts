// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEksAddon(args: GetEksAddonArgs, opts?: pulumi.InvokeOptions): Promise<GetEksAddonResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getEksAddon:getEksAddon", {
        "addonName": args.addonName,
        "clusterName": args.clusterName,
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEksAddon.
 */
export interface GetEksAddonArgs {
    addonName: string;
    clusterName: string;
    id?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getEksAddon.
 */
export interface GetEksAddonResult {
    readonly addonName: string;
    readonly addonVersion: string;
    readonly arn: string;
    readonly clusterName: string;
    readonly configurationValues: string;
    readonly createdAt: string;
    readonly id: string;
    readonly modifiedAt: string;
    readonly serviceAccountRoleArn: string;
    readonly tags: {[key: string]: string};
}
export function getEksAddonOutput(args: GetEksAddonOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEksAddonResult> {
    return pulumi.output(args).apply((a: any) => getEksAddon(a, opts))
}

/**
 * A collection of arguments for invoking getEksAddon.
 */
export interface GetEksAddonOutputArgs {
    addonName: pulumi.Input<string>;
    clusterName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
