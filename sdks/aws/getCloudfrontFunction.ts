// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudfrontFunction(args: GetCloudfrontFunctionArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudfrontFunctionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getCloudfrontFunction:getCloudfrontFunction", {
        "id": args.id,
        "name": args.name,
        "stage": args.stage,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudfrontFunction.
 */
export interface GetCloudfrontFunctionArgs {
    id?: string;
    name: string;
    stage: string;
}

/**
 * A collection of values returned by getCloudfrontFunction.
 */
export interface GetCloudfrontFunctionResult {
    readonly arn: string;
    readonly code: string;
    readonly comment: string;
    readonly etag: string;
    readonly id: string;
    readonly keyValueStoreAssociations: string[];
    readonly lastModifiedTime: string;
    readonly name: string;
    readonly runtime: string;
    readonly stage: string;
    readonly status: string;
}
export function getCloudfrontFunctionOutput(args: GetCloudfrontFunctionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudfrontFunctionResult> {
    return pulumi.output(args).apply((a: any) => getCloudfrontFunction(a, opts))
}

/**
 * A collection of arguments for invoking getCloudfrontFunction.
 */
export interface GetCloudfrontFunctionOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    stage: pulumi.Input<string>;
}
