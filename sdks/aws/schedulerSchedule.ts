// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SchedulerSchedule extends pulumi.CustomResource {
    /**
     * Get an existing SchedulerSchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SchedulerScheduleState, opts?: pulumi.CustomResourceOptions): SchedulerSchedule {
        return new SchedulerSchedule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/schedulerSchedule:SchedulerSchedule';

    /**
     * Returns true if the given object is an instance of SchedulerSchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SchedulerSchedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SchedulerSchedule.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly endDate!: pulumi.Output<string | undefined>;
    public readonly flexibleTimeWindow!: pulumi.Output<outputs.SchedulerScheduleFlexibleTimeWindow>;
    public readonly groupName!: pulumi.Output<string>;
    public readonly kmsKeyArn!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly namePrefix!: pulumi.Output<string>;
    public readonly scheduleExpression!: pulumi.Output<string>;
    public readonly scheduleExpressionTimezone!: pulumi.Output<string | undefined>;
    public readonly startDate!: pulumi.Output<string | undefined>;
    public readonly state!: pulumi.Output<string | undefined>;
    public readonly target!: pulumi.Output<outputs.SchedulerScheduleTarget>;

    /**
     * Create a SchedulerSchedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SchedulerScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SchedulerScheduleArgs | SchedulerScheduleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SchedulerScheduleState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["endDate"] = state ? state.endDate : undefined;
            resourceInputs["flexibleTimeWindow"] = state ? state.flexibleTimeWindow : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["kmsKeyArn"] = state ? state.kmsKeyArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namePrefix"] = state ? state.namePrefix : undefined;
            resourceInputs["scheduleExpression"] = state ? state.scheduleExpression : undefined;
            resourceInputs["scheduleExpressionTimezone"] = state ? state.scheduleExpressionTimezone : undefined;
            resourceInputs["startDate"] = state ? state.startDate : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["target"] = state ? state.target : undefined;
        } else {
            const args = argsOrState as SchedulerScheduleArgs | undefined;
            if ((!args || args.flexibleTimeWindow === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flexibleTimeWindow'");
            }
            if ((!args || args.scheduleExpression === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scheduleExpression'");
            }
            if ((!args || args.target === undefined) && !opts.urn) {
                throw new Error("Missing required property 'target'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["endDate"] = args ? args.endDate : undefined;
            resourceInputs["flexibleTimeWindow"] = args ? args.flexibleTimeWindow : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["kmsKeyArn"] = args ? args.kmsKeyArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namePrefix"] = args ? args.namePrefix : undefined;
            resourceInputs["scheduleExpression"] = args ? args.scheduleExpression : undefined;
            resourceInputs["scheduleExpressionTimezone"] = args ? args.scheduleExpressionTimezone : undefined;
            resourceInputs["startDate"] = args ? args.startDate : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["target"] = args ? args.target : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SchedulerSchedule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SchedulerSchedule resources.
 */
export interface SchedulerScheduleState {
    arn?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    endDate?: pulumi.Input<string>;
    flexibleTimeWindow?: pulumi.Input<inputs.SchedulerScheduleFlexibleTimeWindow>;
    groupName?: pulumi.Input<string>;
    kmsKeyArn?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    scheduleExpression?: pulumi.Input<string>;
    scheduleExpressionTimezone?: pulumi.Input<string>;
    startDate?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    target?: pulumi.Input<inputs.SchedulerScheduleTarget>;
}

/**
 * The set of arguments for constructing a SchedulerSchedule resource.
 */
export interface SchedulerScheduleArgs {
    description?: pulumi.Input<string>;
    endDate?: pulumi.Input<string>;
    flexibleTimeWindow: pulumi.Input<inputs.SchedulerScheduleFlexibleTimeWindow>;
    groupName?: pulumi.Input<string>;
    kmsKeyArn?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    scheduleExpression: pulumi.Input<string>;
    scheduleExpressionTimezone?: pulumi.Input<string>;
    startDate?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    target: pulumi.Input<inputs.SchedulerScheduleTarget>;
}
