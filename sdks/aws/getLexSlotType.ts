// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLexSlotType(args: GetLexSlotTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetLexSlotTypeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getLexSlotType:getLexSlotType", {
        "id": args.id,
        "name": args.name,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLexSlotType.
 */
export interface GetLexSlotTypeArgs {
    id?: string;
    name: string;
    version?: string;
}

/**
 * A collection of values returned by getLexSlotType.
 */
export interface GetLexSlotTypeResult {
    readonly checksum: string;
    readonly createdDate: string;
    readonly description: string;
    readonly enumerationValues: outputs.GetLexSlotTypeEnumerationValue[];
    readonly id: string;
    readonly lastUpdatedDate: string;
    readonly name: string;
    readonly valueSelectionStrategy: string;
    readonly version?: string;
}
export function getLexSlotTypeOutput(args: GetLexSlotTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLexSlotTypeResult> {
    return pulumi.output(args).apply((a: any) => getLexSlotType(a, opts))
}

/**
 * A collection of arguments for invoking getLexSlotType.
 */
export interface GetLexSlotTypeOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}
