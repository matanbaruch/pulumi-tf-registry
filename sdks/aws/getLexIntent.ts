// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLexIntent(args: GetLexIntentArgs, opts?: pulumi.InvokeOptions): Promise<GetLexIntentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getLexIntent:getLexIntent", {
        "id": args.id,
        "name": args.name,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLexIntent.
 */
export interface GetLexIntentArgs {
    id?: string;
    name: string;
    version?: string;
}

/**
 * A collection of values returned by getLexIntent.
 */
export interface GetLexIntentResult {
    readonly arn: string;
    readonly checksum: string;
    readonly createdDate: string;
    readonly description: string;
    readonly id: string;
    readonly lastUpdatedDate: string;
    readonly name: string;
    readonly parentIntentSignature: string;
    readonly version?: string;
}
export function getLexIntentOutput(args: GetLexIntentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLexIntentResult> {
    return pulumi.output(args).apply((a: any) => getLexIntent(a, opts))
}

/**
 * A collection of arguments for invoking getLexIntent.
 */
export interface GetLexIntentOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}
