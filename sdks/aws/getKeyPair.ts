// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKeyPair(args?: GetKeyPairArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyPairResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getKeyPair:getKeyPair", {
        "filters": args.filters,
        "id": args.id,
        "includePublicKey": args.includePublicKey,
        "keyName": args.keyName,
        "keyPairId": args.keyPairId,
        "tags": args.tags,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKeyPair.
 */
export interface GetKeyPairArgs {
    filters?: inputs.GetKeyPairFilter[];
    id?: string;
    includePublicKey?: boolean;
    keyName?: string;
    keyPairId?: string;
    tags?: {[key: string]: string};
    timeouts?: inputs.GetKeyPairTimeouts;
}

/**
 * A collection of values returned by getKeyPair.
 */
export interface GetKeyPairResult {
    readonly arn: string;
    readonly createTime: string;
    readonly filters?: outputs.GetKeyPairFilter[];
    readonly fingerprint: string;
    readonly id: string;
    readonly includePublicKey?: boolean;
    readonly keyName?: string;
    readonly keyPairId?: string;
    readonly keyType: string;
    readonly publicKey: string;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetKeyPairTimeouts;
}
export function getKeyPairOutput(args?: GetKeyPairOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyPairResult> {
    return pulumi.output(args).apply((a: any) => getKeyPair(a, opts))
}

/**
 * A collection of arguments for invoking getKeyPair.
 */
export interface GetKeyPairOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetKeyPairFilterArgs>[]>;
    id?: pulumi.Input<string>;
    includePublicKey?: pulumi.Input<boolean>;
    keyName?: pulumi.Input<string>;
    keyPairId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.GetKeyPairTimeoutsArgs>;
}
