// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpclatticeService(args?: GetVpclatticeServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetVpclatticeServiceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getVpclatticeService:getVpclatticeService", {
        "id": args.id,
        "name": args.name,
        "serviceIdentifier": args.serviceIdentifier,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpclatticeService.
 */
export interface GetVpclatticeServiceArgs {
    id?: string;
    name?: string;
    serviceIdentifier?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getVpclatticeService.
 */
export interface GetVpclatticeServiceResult {
    readonly arn: string;
    readonly authType: string;
    readonly certificateArn: string;
    readonly customDomainName: string;
    readonly dnsEntries: outputs.GetVpclatticeServiceDnsEntry[];
    readonly id: string;
    readonly name: string;
    readonly serviceIdentifier: string;
    readonly status: string;
    readonly tags: {[key: string]: string};
}
export function getVpclatticeServiceOutput(args?: GetVpclatticeServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpclatticeServiceResult> {
    return pulumi.output(args).apply((a: any) => getVpclatticeService(a, opts))
}

/**
 * A collection of arguments for invoking getVpclatticeService.
 */
export interface GetVpclatticeServiceOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    serviceIdentifier?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
