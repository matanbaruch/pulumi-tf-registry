// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class S3Object extends pulumi.CustomResource {
    /**
     * Get an existing S3Object resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: S3ObjectState, opts?: pulumi.CustomResourceOptions): S3Object {
        return new S3Object(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/s3Object:S3Object';

    /**
     * Returns true if the given object is an instance of S3Object.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is S3Object {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === S3Object.__pulumiType;
    }

    public readonly acl!: pulumi.Output<string>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly bucket!: pulumi.Output<string>;
    public readonly bucketKeyEnabled!: pulumi.Output<boolean>;
    public readonly cacheControl!: pulumi.Output<string | undefined>;
    public readonly checksumAlgorithm!: pulumi.Output<string | undefined>;
    public /*out*/ readonly checksumCrc32!: pulumi.Output<string>;
    public /*out*/ readonly checksumCrc32c!: pulumi.Output<string>;
    public /*out*/ readonly checksumSha1!: pulumi.Output<string>;
    public /*out*/ readonly checksumSha256!: pulumi.Output<string>;
    public readonly content!: pulumi.Output<string | undefined>;
    public readonly contentBase64!: pulumi.Output<string | undefined>;
    public readonly contentDisposition!: pulumi.Output<string | undefined>;
    public readonly contentEncoding!: pulumi.Output<string | undefined>;
    public readonly contentLanguage!: pulumi.Output<string | undefined>;
    public readonly contentType!: pulumi.Output<string>;
    public readonly etag!: pulumi.Output<string>;
    public readonly forceDestroy!: pulumi.Output<boolean | undefined>;
    public readonly key!: pulumi.Output<string>;
    public readonly kmsKeyId!: pulumi.Output<string>;
    public readonly metadata!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly objectLockLegalHoldStatus!: pulumi.Output<string | undefined>;
    public readonly objectLockMode!: pulumi.Output<string | undefined>;
    public readonly objectLockRetainUntilDate!: pulumi.Output<string | undefined>;
    public readonly overrideProvider!: pulumi.Output<outputs.S3ObjectOverrideProvider | undefined>;
    public readonly serverSideEncryption!: pulumi.Output<string>;
    public readonly source!: pulumi.Output<string | undefined>;
    public readonly sourceHash!: pulumi.Output<string | undefined>;
    public readonly storageClass!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly versionId!: pulumi.Output<string>;
    public readonly websiteRedirect!: pulumi.Output<string | undefined>;

    /**
     * Create a S3Object resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: S3ObjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: S3ObjectArgs | S3ObjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as S3ObjectState | undefined;
            resourceInputs["acl"] = state ? state.acl : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["bucketKeyEnabled"] = state ? state.bucketKeyEnabled : undefined;
            resourceInputs["cacheControl"] = state ? state.cacheControl : undefined;
            resourceInputs["checksumAlgorithm"] = state ? state.checksumAlgorithm : undefined;
            resourceInputs["checksumCrc32"] = state ? state.checksumCrc32 : undefined;
            resourceInputs["checksumCrc32c"] = state ? state.checksumCrc32c : undefined;
            resourceInputs["checksumSha1"] = state ? state.checksumSha1 : undefined;
            resourceInputs["checksumSha256"] = state ? state.checksumSha256 : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["contentBase64"] = state ? state.contentBase64 : undefined;
            resourceInputs["contentDisposition"] = state ? state.contentDisposition : undefined;
            resourceInputs["contentEncoding"] = state ? state.contentEncoding : undefined;
            resourceInputs["contentLanguage"] = state ? state.contentLanguage : undefined;
            resourceInputs["contentType"] = state ? state.contentType : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["forceDestroy"] = state ? state.forceDestroy : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["objectLockLegalHoldStatus"] = state ? state.objectLockLegalHoldStatus : undefined;
            resourceInputs["objectLockMode"] = state ? state.objectLockMode : undefined;
            resourceInputs["objectLockRetainUntilDate"] = state ? state.objectLockRetainUntilDate : undefined;
            resourceInputs["overrideProvider"] = state ? state.overrideProvider : undefined;
            resourceInputs["serverSideEncryption"] = state ? state.serverSideEncryption : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["sourceHash"] = state ? state.sourceHash : undefined;
            resourceInputs["storageClass"] = state ? state.storageClass : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
            resourceInputs["websiteRedirect"] = state ? state.websiteRedirect : undefined;
        } else {
            const args = argsOrState as S3ObjectArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            resourceInputs["acl"] = args ? args.acl : undefined;
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["bucketKeyEnabled"] = args ? args.bucketKeyEnabled : undefined;
            resourceInputs["cacheControl"] = args ? args.cacheControl : undefined;
            resourceInputs["checksumAlgorithm"] = args ? args.checksumAlgorithm : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["contentBase64"] = args ? args.contentBase64 : undefined;
            resourceInputs["contentDisposition"] = args ? args.contentDisposition : undefined;
            resourceInputs["contentEncoding"] = args ? args.contentEncoding : undefined;
            resourceInputs["contentLanguage"] = args ? args.contentLanguage : undefined;
            resourceInputs["contentType"] = args ? args.contentType : undefined;
            resourceInputs["etag"] = args ? args.etag : undefined;
            resourceInputs["forceDestroy"] = args ? args.forceDestroy : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["objectLockLegalHoldStatus"] = args ? args.objectLockLegalHoldStatus : undefined;
            resourceInputs["objectLockMode"] = args ? args.objectLockMode : undefined;
            resourceInputs["objectLockRetainUntilDate"] = args ? args.objectLockRetainUntilDate : undefined;
            resourceInputs["overrideProvider"] = args ? args.overrideProvider : undefined;
            resourceInputs["serverSideEncryption"] = args ? args.serverSideEncryption : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["sourceHash"] = args ? args.sourceHash : undefined;
            resourceInputs["storageClass"] = args ? args.storageClass : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["websiteRedirect"] = args ? args.websiteRedirect : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["checksumCrc32"] = undefined /*out*/;
            resourceInputs["checksumCrc32c"] = undefined /*out*/;
            resourceInputs["checksumSha1"] = undefined /*out*/;
            resourceInputs["checksumSha256"] = undefined /*out*/;
            resourceInputs["versionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(S3Object.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering S3Object resources.
 */
export interface S3ObjectState {
    acl?: pulumi.Input<string>;
    arn?: pulumi.Input<string>;
    bucket?: pulumi.Input<string>;
    bucketKeyEnabled?: pulumi.Input<boolean>;
    cacheControl?: pulumi.Input<string>;
    checksumAlgorithm?: pulumi.Input<string>;
    checksumCrc32?: pulumi.Input<string>;
    checksumCrc32c?: pulumi.Input<string>;
    checksumSha1?: pulumi.Input<string>;
    checksumSha256?: pulumi.Input<string>;
    content?: pulumi.Input<string>;
    contentBase64?: pulumi.Input<string>;
    contentDisposition?: pulumi.Input<string>;
    contentEncoding?: pulumi.Input<string>;
    contentLanguage?: pulumi.Input<string>;
    contentType?: pulumi.Input<string>;
    etag?: pulumi.Input<string>;
    forceDestroy?: pulumi.Input<boolean>;
    key?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    objectLockLegalHoldStatus?: pulumi.Input<string>;
    objectLockMode?: pulumi.Input<string>;
    objectLockRetainUntilDate?: pulumi.Input<string>;
    overrideProvider?: pulumi.Input<inputs.S3ObjectOverrideProvider>;
    serverSideEncryption?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    sourceHash?: pulumi.Input<string>;
    storageClass?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    versionId?: pulumi.Input<string>;
    websiteRedirect?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a S3Object resource.
 */
export interface S3ObjectArgs {
    acl?: pulumi.Input<string>;
    bucket: pulumi.Input<string>;
    bucketKeyEnabled?: pulumi.Input<boolean>;
    cacheControl?: pulumi.Input<string>;
    checksumAlgorithm?: pulumi.Input<string>;
    content?: pulumi.Input<string>;
    contentBase64?: pulumi.Input<string>;
    contentDisposition?: pulumi.Input<string>;
    contentEncoding?: pulumi.Input<string>;
    contentLanguage?: pulumi.Input<string>;
    contentType?: pulumi.Input<string>;
    etag?: pulumi.Input<string>;
    forceDestroy?: pulumi.Input<boolean>;
    key: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    objectLockLegalHoldStatus?: pulumi.Input<string>;
    objectLockMode?: pulumi.Input<string>;
    objectLockRetainUntilDate?: pulumi.Input<string>;
    overrideProvider?: pulumi.Input<inputs.S3ObjectOverrideProvider>;
    serverSideEncryption?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    sourceHash?: pulumi.Input<string>;
    storageClass?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    websiteRedirect?: pulumi.Input<string>;
}
