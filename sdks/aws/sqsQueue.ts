// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SqsQueue extends pulumi.CustomResource {
    /**
     * Get an existing SqsQueue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SqsQueueState, opts?: pulumi.CustomResourceOptions): SqsQueue {
        return new SqsQueue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/sqsQueue:SqsQueue';

    /**
     * Returns true if the given object is an instance of SqsQueue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SqsQueue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SqsQueue.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly contentBasedDeduplication!: pulumi.Output<boolean | undefined>;
    public readonly deduplicationScope!: pulumi.Output<string>;
    public readonly delaySeconds!: pulumi.Output<number | undefined>;
    public readonly fifoQueue!: pulumi.Output<boolean | undefined>;
    public readonly fifoThroughputLimit!: pulumi.Output<string>;
    public readonly kmsDataKeyReusePeriodSeconds!: pulumi.Output<number>;
    public readonly kmsMasterKeyId!: pulumi.Output<string | undefined>;
    public readonly maxMessageSize!: pulumi.Output<number | undefined>;
    public readonly messageRetentionSeconds!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly namePrefix!: pulumi.Output<string>;
    public readonly policy!: pulumi.Output<string>;
    public readonly receiveWaitTimeSeconds!: pulumi.Output<number | undefined>;
    public readonly redriveAllowPolicy!: pulumi.Output<string>;
    public readonly redrivePolicy!: pulumi.Output<string>;
    public readonly sqsManagedSseEnabled!: pulumi.Output<boolean>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tagsAll!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly url!: pulumi.Output<string>;
    public readonly visibilityTimeoutSeconds!: pulumi.Output<number | undefined>;

    /**
     * Create a SqsQueue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SqsQueueArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SqsQueueArgs | SqsQueueState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SqsQueueState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["contentBasedDeduplication"] = state ? state.contentBasedDeduplication : undefined;
            resourceInputs["deduplicationScope"] = state ? state.deduplicationScope : undefined;
            resourceInputs["delaySeconds"] = state ? state.delaySeconds : undefined;
            resourceInputs["fifoQueue"] = state ? state.fifoQueue : undefined;
            resourceInputs["fifoThroughputLimit"] = state ? state.fifoThroughputLimit : undefined;
            resourceInputs["kmsDataKeyReusePeriodSeconds"] = state ? state.kmsDataKeyReusePeriodSeconds : undefined;
            resourceInputs["kmsMasterKeyId"] = state ? state.kmsMasterKeyId : undefined;
            resourceInputs["maxMessageSize"] = state ? state.maxMessageSize : undefined;
            resourceInputs["messageRetentionSeconds"] = state ? state.messageRetentionSeconds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namePrefix"] = state ? state.namePrefix : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["receiveWaitTimeSeconds"] = state ? state.receiveWaitTimeSeconds : undefined;
            resourceInputs["redriveAllowPolicy"] = state ? state.redriveAllowPolicy : undefined;
            resourceInputs["redrivePolicy"] = state ? state.redrivePolicy : undefined;
            resourceInputs["sqsManagedSseEnabled"] = state ? state.sqsManagedSseEnabled : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["visibilityTimeoutSeconds"] = state ? state.visibilityTimeoutSeconds : undefined;
        } else {
            const args = argsOrState as SqsQueueArgs | undefined;
            resourceInputs["contentBasedDeduplication"] = args ? args.contentBasedDeduplication : undefined;
            resourceInputs["deduplicationScope"] = args ? args.deduplicationScope : undefined;
            resourceInputs["delaySeconds"] = args ? args.delaySeconds : undefined;
            resourceInputs["fifoQueue"] = args ? args.fifoQueue : undefined;
            resourceInputs["fifoThroughputLimit"] = args ? args.fifoThroughputLimit : undefined;
            resourceInputs["kmsDataKeyReusePeriodSeconds"] = args ? args.kmsDataKeyReusePeriodSeconds : undefined;
            resourceInputs["kmsMasterKeyId"] = args ? args.kmsMasterKeyId : undefined;
            resourceInputs["maxMessageSize"] = args ? args.maxMessageSize : undefined;
            resourceInputs["messageRetentionSeconds"] = args ? args.messageRetentionSeconds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namePrefix"] = args ? args.namePrefix : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["receiveWaitTimeSeconds"] = args ? args.receiveWaitTimeSeconds : undefined;
            resourceInputs["redriveAllowPolicy"] = args ? args.redriveAllowPolicy : undefined;
            resourceInputs["redrivePolicy"] = args ? args.redrivePolicy : undefined;
            resourceInputs["sqsManagedSseEnabled"] = args ? args.sqsManagedSseEnabled : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["visibilityTimeoutSeconds"] = args ? args.visibilityTimeoutSeconds : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SqsQueue.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SqsQueue resources.
 */
export interface SqsQueueState {
    arn?: pulumi.Input<string>;
    contentBasedDeduplication?: pulumi.Input<boolean>;
    deduplicationScope?: pulumi.Input<string>;
    delaySeconds?: pulumi.Input<number>;
    fifoQueue?: pulumi.Input<boolean>;
    fifoThroughputLimit?: pulumi.Input<string>;
    kmsDataKeyReusePeriodSeconds?: pulumi.Input<number>;
    kmsMasterKeyId?: pulumi.Input<string>;
    maxMessageSize?: pulumi.Input<number>;
    messageRetentionSeconds?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    policy?: pulumi.Input<string>;
    receiveWaitTimeSeconds?: pulumi.Input<number>;
    redriveAllowPolicy?: pulumi.Input<string>;
    redrivePolicy?: pulumi.Input<string>;
    sqsManagedSseEnabled?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    url?: pulumi.Input<string>;
    visibilityTimeoutSeconds?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SqsQueue resource.
 */
export interface SqsQueueArgs {
    contentBasedDeduplication?: pulumi.Input<boolean>;
    deduplicationScope?: pulumi.Input<string>;
    delaySeconds?: pulumi.Input<number>;
    fifoQueue?: pulumi.Input<boolean>;
    fifoThroughputLimit?: pulumi.Input<string>;
    kmsDataKeyReusePeriodSeconds?: pulumi.Input<number>;
    kmsMasterKeyId?: pulumi.Input<string>;
    maxMessageSize?: pulumi.Input<number>;
    messageRetentionSeconds?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    policy?: pulumi.Input<string>;
    receiveWaitTimeSeconds?: pulumi.Input<number>;
    redriveAllowPolicy?: pulumi.Input<string>;
    redrivePolicy?: pulumi.Input<string>;
    sqsManagedSseEnabled?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    visibilityTimeoutSeconds?: pulumi.Input<number>;
}
