// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDbInstance(args?: GetDbInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetDbInstanceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getDbInstance:getDbInstance", {
        "dbInstanceIdentifier": args.dbInstanceIdentifier,
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDbInstance.
 */
export interface GetDbInstanceArgs {
    dbInstanceIdentifier?: string;
    id?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getDbInstance.
 */
export interface GetDbInstanceResult {
    readonly address: string;
    readonly allocatedStorage: number;
    readonly autoMinorVersionUpgrade: boolean;
    readonly availabilityZone: string;
    readonly backupRetentionPeriod: number;
    readonly caCertIdentifier: string;
    readonly dbClusterIdentifier: string;
    readonly dbInstanceArn: string;
    readonly dbInstanceClass: string;
    readonly dbInstanceIdentifier: string;
    readonly dbInstancePort: number;
    readonly dbName: string;
    readonly dbParameterGroups: string[];
    readonly dbSubnetGroup: string;
    readonly enabledCloudwatchLogsExports: string[];
    readonly endpoint: string;
    readonly engine: string;
    readonly engineVersion: string;
    readonly hostedZoneId: string;
    readonly id: string;
    readonly iops: number;
    readonly kmsKeyId: string;
    readonly licenseModel: string;
    readonly masterUserSecrets: outputs.GetDbInstanceMasterUserSecret[];
    readonly masterUsername: string;
    readonly maxAllocatedStorage: number;
    readonly monitoringInterval: number;
    readonly monitoringRoleArn: string;
    readonly multiAz: boolean;
    readonly networkType: string;
    readonly optionGroupMemberships: string[];
    readonly port: number;
    readonly preferredBackupWindow: string;
    readonly preferredMaintenanceWindow: string;
    readonly publiclyAccessible: boolean;
    readonly replicateSourceDb: string;
    readonly resourceId: string;
    readonly storageEncrypted: boolean;
    readonly storageThroughput: number;
    readonly storageType: string;
    readonly tags: {[key: string]: string};
    readonly timezone: string;
    readonly vpcSecurityGroups: string[];
}
export function getDbInstanceOutput(args?: GetDbInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDbInstanceResult> {
    return pulumi.output(args).apply((a: any) => getDbInstance(a, opts))
}

/**
 * A collection of arguments for invoking getDbInstance.
 */
export interface GetDbInstanceOutputArgs {
    dbInstanceIdentifier?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
