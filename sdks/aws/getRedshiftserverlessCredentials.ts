// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRedshiftserverlessCredentials(args: GetRedshiftserverlessCredentialsArgs, opts?: pulumi.InvokeOptions): Promise<GetRedshiftserverlessCredentialsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getRedshiftserverlessCredentials:getRedshiftserverlessCredentials", {
        "dbName": args.dbName,
        "durationSeconds": args.durationSeconds,
        "id": args.id,
        "workgroupName": args.workgroupName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRedshiftserverlessCredentials.
 */
export interface GetRedshiftserverlessCredentialsArgs {
    dbName?: string;
    durationSeconds?: number;
    id?: string;
    workgroupName: string;
}

/**
 * A collection of values returned by getRedshiftserverlessCredentials.
 */
export interface GetRedshiftserverlessCredentialsResult {
    readonly dbName?: string;
    readonly dbPassword: string;
    readonly dbUser: string;
    readonly durationSeconds?: number;
    readonly expiration: string;
    readonly id: string;
    readonly workgroupName: string;
}
export function getRedshiftserverlessCredentialsOutput(args: GetRedshiftserverlessCredentialsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRedshiftserverlessCredentialsResult> {
    return pulumi.output(args).apply((a: any) => getRedshiftserverlessCredentials(a, opts))
}

/**
 * A collection of arguments for invoking getRedshiftserverlessCredentials.
 */
export interface GetRedshiftserverlessCredentialsOutputArgs {
    dbName?: pulumi.Input<string>;
    durationSeconds?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    workgroupName: pulumi.Input<string>;
}
