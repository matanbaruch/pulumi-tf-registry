// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMqBroker(args?: GetMqBrokerArgs, opts?: pulumi.InvokeOptions): Promise<GetMqBrokerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getMqBroker:getMqBroker", {
        "brokerId": args.brokerId,
        "brokerName": args.brokerName,
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMqBroker.
 */
export interface GetMqBrokerArgs {
    brokerId?: string;
    brokerName?: string;
    id?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getMqBroker.
 */
export interface GetMqBrokerResult {
    readonly arn: string;
    readonly authenticationStrategy: string;
    readonly autoMinorVersionUpgrade: boolean;
    readonly brokerId: string;
    readonly brokerName: string;
    readonly configurations: outputs.GetMqBrokerConfiguration[];
    readonly deploymentMode: string;
    readonly encryptionOptions: outputs.GetMqBrokerEncryptionOption[];
    readonly engineType: string;
    readonly engineVersion: string;
    readonly hostInstanceType: string;
    readonly id: string;
    readonly instances: outputs.GetMqBrokerInstance[];
    readonly ldapServerMetadatas: outputs.GetMqBrokerLdapServerMetadata[];
    readonly logs: outputs.GetMqBrokerLog[];
    readonly maintenanceWindowStartTimes: outputs.GetMqBrokerMaintenanceWindowStartTime[];
    readonly publiclyAccessible: boolean;
    readonly securityGroups: string[];
    readonly storageType: string;
    readonly subnetIds: string[];
    readonly tags: {[key: string]: string};
    readonly users: outputs.GetMqBrokerUser[];
}
export function getMqBrokerOutput(args?: GetMqBrokerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMqBrokerResult> {
    return pulumi.output(args).apply((a: any) => getMqBroker(a, opts))
}

/**
 * A collection of arguments for invoking getMqBroker.
 */
export interface GetMqBrokerOutputArgs {
    brokerId?: pulumi.Input<string>;
    brokerName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
