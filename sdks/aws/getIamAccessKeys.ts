// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamAccessKeys(args: GetIamAccessKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetIamAccessKeysResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getIamAccessKeys:getIamAccessKeys", {
        "id": args.id,
        "user": args.user,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamAccessKeys.
 */
export interface GetIamAccessKeysArgs {
    id?: string;
    user: string;
}

/**
 * A collection of values returned by getIamAccessKeys.
 */
export interface GetIamAccessKeysResult {
    readonly accessKeys: outputs.GetIamAccessKeysAccessKey[];
    readonly id: string;
    readonly user: string;
}
export function getIamAccessKeysOutput(args: GetIamAccessKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamAccessKeysResult> {
    return pulumi.output(args).apply((a: any) => getIamAccessKeys(a, opts))
}

/**
 * A collection of arguments for invoking getIamAccessKeys.
 */
export interface GetIamAccessKeysOutputArgs {
    id?: pulumi.Input<string>;
    user: pulumi.Input<string>;
}
