// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SnsSmsPreferences extends pulumi.CustomResource {
    /**
     * Get an existing SnsSmsPreferences resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnsSmsPreferencesState, opts?: pulumi.CustomResourceOptions): SnsSmsPreferences {
        return new SnsSmsPreferences(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/snsSmsPreferences:SnsSmsPreferences';

    /**
     * Returns true if the given object is an instance of SnsSmsPreferences.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SnsSmsPreferences {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SnsSmsPreferences.__pulumiType;
    }

    public readonly defaultSenderId!: pulumi.Output<string | undefined>;
    public readonly defaultSmsType!: pulumi.Output<string | undefined>;
    public readonly deliveryStatusIamRoleArn!: pulumi.Output<string | undefined>;
    public readonly deliveryStatusSuccessSamplingRate!: pulumi.Output<string | undefined>;
    public readonly monthlySpendLimit!: pulumi.Output<number>;
    public readonly usageReportS3Bucket!: pulumi.Output<string | undefined>;

    /**
     * Create a SnsSmsPreferences resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SnsSmsPreferencesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnsSmsPreferencesArgs | SnsSmsPreferencesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SnsSmsPreferencesState | undefined;
            resourceInputs["defaultSenderId"] = state ? state.defaultSenderId : undefined;
            resourceInputs["defaultSmsType"] = state ? state.defaultSmsType : undefined;
            resourceInputs["deliveryStatusIamRoleArn"] = state ? state.deliveryStatusIamRoleArn : undefined;
            resourceInputs["deliveryStatusSuccessSamplingRate"] = state ? state.deliveryStatusSuccessSamplingRate : undefined;
            resourceInputs["monthlySpendLimit"] = state ? state.monthlySpendLimit : undefined;
            resourceInputs["usageReportS3Bucket"] = state ? state.usageReportS3Bucket : undefined;
        } else {
            const args = argsOrState as SnsSmsPreferencesArgs | undefined;
            resourceInputs["defaultSenderId"] = args ? args.defaultSenderId : undefined;
            resourceInputs["defaultSmsType"] = args ? args.defaultSmsType : undefined;
            resourceInputs["deliveryStatusIamRoleArn"] = args ? args.deliveryStatusIamRoleArn : undefined;
            resourceInputs["deliveryStatusSuccessSamplingRate"] = args ? args.deliveryStatusSuccessSamplingRate : undefined;
            resourceInputs["monthlySpendLimit"] = args ? args.monthlySpendLimit : undefined;
            resourceInputs["usageReportS3Bucket"] = args ? args.usageReportS3Bucket : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SnsSmsPreferences.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SnsSmsPreferences resources.
 */
export interface SnsSmsPreferencesState {
    defaultSenderId?: pulumi.Input<string>;
    defaultSmsType?: pulumi.Input<string>;
    deliveryStatusIamRoleArn?: pulumi.Input<string>;
    deliveryStatusSuccessSamplingRate?: pulumi.Input<string>;
    monthlySpendLimit?: pulumi.Input<number>;
    usageReportS3Bucket?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SnsSmsPreferences resource.
 */
export interface SnsSmsPreferencesArgs {
    defaultSenderId?: pulumi.Input<string>;
    defaultSmsType?: pulumi.Input<string>;
    deliveryStatusIamRoleArn?: pulumi.Input<string>;
    deliveryStatusSuccessSamplingRate?: pulumi.Input<string>;
    monthlySpendLimit?: pulumi.Input<number>;
    usageReportS3Bucket?: pulumi.Input<string>;
}
