// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEksAddonVersion(args: GetEksAddonVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetEksAddonVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getEksAddonVersion:getEksAddonVersion", {
        "addonName": args.addonName,
        "id": args.id,
        "kubernetesVersion": args.kubernetesVersion,
        "mostRecent": args.mostRecent,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEksAddonVersion.
 */
export interface GetEksAddonVersionArgs {
    addonName: string;
    id?: string;
    kubernetesVersion: string;
    mostRecent?: boolean;
}

/**
 * A collection of values returned by getEksAddonVersion.
 */
export interface GetEksAddonVersionResult {
    readonly addonName: string;
    readonly id: string;
    readonly kubernetesVersion: string;
    readonly mostRecent?: boolean;
    readonly version: string;
}
export function getEksAddonVersionOutput(args: GetEksAddonVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEksAddonVersionResult> {
    return pulumi.output(args).apply((a: any) => getEksAddonVersion(a, opts))
}

/**
 * A collection of arguments for invoking getEksAddonVersion.
 */
export interface GetEksAddonVersionOutputArgs {
    addonName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    kubernetesVersion: pulumi.Input<string>;
    mostRecent?: pulumi.Input<boolean>;
}
