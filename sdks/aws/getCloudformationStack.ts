// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudformationStack(args: GetCloudformationStackArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudformationStackResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getCloudformationStack:getCloudformationStack", {
        "id": args.id,
        "name": args.name,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudformationStack.
 */
export interface GetCloudformationStackArgs {
    id?: string;
    name: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getCloudformationStack.
 */
export interface GetCloudformationStackResult {
    readonly capabilities: string[];
    readonly description: string;
    readonly disableRollback: boolean;
    readonly iamRoleArn: string;
    readonly id: string;
    readonly name: string;
    readonly notificationArns: string[];
    readonly outputs: {[key: string]: string};
    readonly parameters: {[key: string]: string};
    readonly tags: {[key: string]: string};
    readonly templateBody: string;
    readonly timeoutInMinutes: number;
}
export function getCloudformationStackOutput(args: GetCloudformationStackOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudformationStackResult> {
    return pulumi.output(args).apply((a: any) => getCloudformationStack(a, opts))
}

/**
 * A collection of arguments for invoking getCloudformationStack.
 */
export interface GetCloudformationStackOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
