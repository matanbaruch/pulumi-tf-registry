// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAuditmanagerControl(args: GetAuditmanagerControlArgs, opts?: pulumi.InvokeOptions): Promise<GetAuditmanagerControlResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getAuditmanagerControl:getAuditmanagerControl", {
        "controlMappingSources": args.controlMappingSources,
        "name": args.name,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAuditmanagerControl.
 */
export interface GetAuditmanagerControlArgs {
    controlMappingSources?: inputs.GetAuditmanagerControlControlMappingSource[];
    name: string;
    type: string;
}

/**
 * A collection of values returned by getAuditmanagerControl.
 */
export interface GetAuditmanagerControlResult {
    readonly actionPlanInstructions: string;
    readonly actionPlanTitle: string;
    readonly arn: string;
    readonly controlMappingSources?: outputs.GetAuditmanagerControlControlMappingSource[];
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly tags: {[key: string]: string};
    readonly testingInformation: string;
    readonly type: string;
}
export function getAuditmanagerControlOutput(args: GetAuditmanagerControlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuditmanagerControlResult> {
    return pulumi.output(args).apply((a: any) => getAuditmanagerControl(a, opts))
}

/**
 * A collection of arguments for invoking getAuditmanagerControl.
 */
export interface GetAuditmanagerControlOutputArgs {
    controlMappingSources?: pulumi.Input<pulumi.Input<inputs.GetAuditmanagerControlControlMappingSourceArgs>[]>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}
