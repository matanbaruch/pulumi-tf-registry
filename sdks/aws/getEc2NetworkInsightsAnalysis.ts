// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2NetworkInsightsAnalysis(args?: GetEc2NetworkInsightsAnalysisArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2NetworkInsightsAnalysisResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getEc2NetworkInsightsAnalysis:getEc2NetworkInsightsAnalysis", {
        "filters": args.filters,
        "id": args.id,
        "networkInsightsAnalysisId": args.networkInsightsAnalysisId,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2NetworkInsightsAnalysis.
 */
export interface GetEc2NetworkInsightsAnalysisArgs {
    filters?: inputs.GetEc2NetworkInsightsAnalysisFilter[];
    id?: string;
    networkInsightsAnalysisId?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getEc2NetworkInsightsAnalysis.
 */
export interface GetEc2NetworkInsightsAnalysisResult {
    readonly alternatePathHints: outputs.GetEc2NetworkInsightsAnalysisAlternatePathHint[];
    readonly arn: string;
    readonly explanations: outputs.GetEc2NetworkInsightsAnalysisExplanation[];
    readonly filterInArns: string[];
    readonly filters?: outputs.GetEc2NetworkInsightsAnalysisFilter[];
    readonly forwardPathComponents: outputs.GetEc2NetworkInsightsAnalysisForwardPathComponent[];
    readonly id: string;
    readonly networkInsightsAnalysisId: string;
    readonly networkInsightsPathId: string;
    readonly pathFound: boolean;
    readonly returnPathComponents: outputs.GetEc2NetworkInsightsAnalysisReturnPathComponent[];
    readonly startDate: string;
    readonly status: string;
    readonly statusMessage: string;
    readonly tags: {[key: string]: string};
    readonly warningMessage: string;
}
export function getEc2NetworkInsightsAnalysisOutput(args?: GetEc2NetworkInsightsAnalysisOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2NetworkInsightsAnalysisResult> {
    return pulumi.output(args).apply((a: any) => getEc2NetworkInsightsAnalysis(a, opts))
}

/**
 * A collection of arguments for invoking getEc2NetworkInsightsAnalysis.
 */
export interface GetEc2NetworkInsightsAnalysisOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetEc2NetworkInsightsAnalysisFilterArgs>[]>;
    id?: pulumi.Input<string>;
    networkInsightsAnalysisId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
