// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEfsAccessPoint(args: GetEfsAccessPointArgs, opts?: pulumi.InvokeOptions): Promise<GetEfsAccessPointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getEfsAccessPoint:getEfsAccessPoint", {
        "accessPointId": args.accessPointId,
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEfsAccessPoint.
 */
export interface GetEfsAccessPointArgs {
    accessPointId: string;
    id?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getEfsAccessPoint.
 */
export interface GetEfsAccessPointResult {
    readonly accessPointId: string;
    readonly arn: string;
    readonly fileSystemArn: string;
    readonly fileSystemId: string;
    readonly id: string;
    readonly ownerId: string;
    readonly posixUsers: outputs.GetEfsAccessPointPosixUser[];
    readonly rootDirectories: outputs.GetEfsAccessPointRootDirectory[];
    readonly tags: {[key: string]: string};
}
export function getEfsAccessPointOutput(args: GetEfsAccessPointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEfsAccessPointResult> {
    return pulumi.output(args).apply((a: any) => getEfsAccessPoint(a, opts))
}

/**
 * A collection of arguments for invoking getEfsAccessPoint.
 */
export interface GetEfsAccessPointOutputArgs {
    accessPointId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
