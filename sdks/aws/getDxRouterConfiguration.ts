// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDxRouterConfiguration(args: GetDxRouterConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetDxRouterConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getDxRouterConfiguration:getDxRouterConfiguration", {
        "id": args.id,
        "routerTypeIdentifier": args.routerTypeIdentifier,
        "virtualInterfaceId": args.virtualInterfaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDxRouterConfiguration.
 */
export interface GetDxRouterConfigurationArgs {
    id?: string;
    routerTypeIdentifier: string;
    virtualInterfaceId: string;
}

/**
 * A collection of values returned by getDxRouterConfiguration.
 */
export interface GetDxRouterConfigurationResult {
    readonly customerRouterConfig: string;
    readonly id: string;
    readonly routerTypeIdentifier: string;
    readonly routers: outputs.GetDxRouterConfigurationRouter[];
    readonly virtualInterfaceId: string;
    readonly virtualInterfaceName: string;
}
export function getDxRouterConfigurationOutput(args: GetDxRouterConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDxRouterConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getDxRouterConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getDxRouterConfiguration.
 */
export interface GetDxRouterConfigurationOutputArgs {
    id?: pulumi.Input<string>;
    routerTypeIdentifier: pulumi.Input<string>;
    virtualInterfaceId: pulumi.Input<string>;
}
