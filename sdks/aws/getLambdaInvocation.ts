// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLambdaInvocation(args: GetLambdaInvocationArgs, opts?: pulumi.InvokeOptions): Promise<GetLambdaInvocationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getLambdaInvocation:getLambdaInvocation", {
        "functionName": args.functionName,
        "id": args.id,
        "input": args.input,
        "qualifier": args.qualifier,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLambdaInvocation.
 */
export interface GetLambdaInvocationArgs {
    functionName: string;
    id?: string;
    input: string;
    qualifier?: string;
}

/**
 * A collection of values returned by getLambdaInvocation.
 */
export interface GetLambdaInvocationResult {
    readonly functionName: string;
    readonly id: string;
    readonly input: string;
    readonly qualifier?: string;
    readonly result: string;
}
export function getLambdaInvocationOutput(args: GetLambdaInvocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLambdaInvocationResult> {
    return pulumi.output(args).apply((a: any) => getLambdaInvocation(a, opts))
}

/**
 * A collection of arguments for invoking getLambdaInvocation.
 */
export interface GetLambdaInvocationOutputArgs {
    functionName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    input: pulumi.Input<string>;
    qualifier?: pulumi.Input<string>;
}
