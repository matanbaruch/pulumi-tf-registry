// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecretsmanagerSecretVersions(args: GetSecretsmanagerSecretVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretsmanagerSecretVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getSecretsmanagerSecretVersions:getSecretsmanagerSecretVersions", {
        "includeDeprecated": args.includeDeprecated,
        "secretId": args.secretId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecretsmanagerSecretVersions.
 */
export interface GetSecretsmanagerSecretVersionsArgs {
    includeDeprecated?: boolean;
    secretId: string;
}

/**
 * A collection of values returned by getSecretsmanagerSecretVersions.
 */
export interface GetSecretsmanagerSecretVersionsResult {
    readonly arn: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly includeDeprecated?: boolean;
    readonly name: string;
    readonly secretId: string;
    readonly versions: outputs.GetSecretsmanagerSecretVersionsVersion[];
}
export function getSecretsmanagerSecretVersionsOutput(args: GetSecretsmanagerSecretVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretsmanagerSecretVersionsResult> {
    return pulumi.output(args).apply((a: any) => getSecretsmanagerSecretVersions(a, opts))
}

/**
 * A collection of arguments for invoking getSecretsmanagerSecretVersions.
 */
export interface GetSecretsmanagerSecretVersionsOutputArgs {
    includeDeprecated?: pulumi.Input<boolean>;
    secretId: pulumi.Input<string>;
}
