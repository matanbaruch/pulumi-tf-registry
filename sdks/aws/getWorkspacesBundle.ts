// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWorkspacesBundle(args?: GetWorkspacesBundleArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspacesBundleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getWorkspacesBundle:getWorkspacesBundle", {
        "bundleId": args.bundleId,
        "id": args.id,
        "name": args.name,
        "owner": args.owner,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkspacesBundle.
 */
export interface GetWorkspacesBundleArgs {
    bundleId?: string;
    id?: string;
    name?: string;
    owner?: string;
}

/**
 * A collection of values returned by getWorkspacesBundle.
 */
export interface GetWorkspacesBundleResult {
    readonly bundleId?: string;
    readonly computeTypes: outputs.GetWorkspacesBundleComputeType[];
    readonly description: string;
    readonly id: string;
    readonly name?: string;
    readonly owner?: string;
    readonly rootStorages: outputs.GetWorkspacesBundleRootStorage[];
    readonly userStorages: outputs.GetWorkspacesBundleUserStorage[];
}
export function getWorkspacesBundleOutput(args?: GetWorkspacesBundleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspacesBundleResult> {
    return pulumi.output(args).apply((a: any) => getWorkspacesBundle(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspacesBundle.
 */
export interface GetWorkspacesBundleOutputArgs {
    bundleId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
}
