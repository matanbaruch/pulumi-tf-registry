// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIamPolicy(args?: GetIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetIamPolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getIamPolicy:getIamPolicy", {
        "arn": args.arn,
        "id": args.id,
        "name": args.name,
        "pathPrefix": args.pathPrefix,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamPolicy.
 */
export interface GetIamPolicyArgs {
    arn?: string;
    id?: string;
    name?: string;
    pathPrefix?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getIamPolicy.
 */
export interface GetIamPolicyResult {
    readonly arn: string;
    readonly attachmentCount: number;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly path: string;
    readonly pathPrefix?: string;
    readonly policy: string;
    readonly policyId: string;
    readonly tags: {[key: string]: string};
}
export function getIamPolicyOutput(args?: GetIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getIamPolicy.
 */
export interface GetIamPolicyOutputArgs {
    arn?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pathPrefix?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
