// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConnectContactFlowModule(args: GetConnectContactFlowModuleArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectContactFlowModuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getConnectContactFlowModule:getConnectContactFlowModule", {
        "contactFlowModuleId": args.contactFlowModuleId,
        "id": args.id,
        "instanceId": args.instanceId,
        "name": args.name,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectContactFlowModule.
 */
export interface GetConnectContactFlowModuleArgs {
    contactFlowModuleId?: string;
    id?: string;
    instanceId: string;
    name?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getConnectContactFlowModule.
 */
export interface GetConnectContactFlowModuleResult {
    readonly arn: string;
    readonly contactFlowModuleId: string;
    readonly content: string;
    readonly description: string;
    readonly id: string;
    readonly instanceId: string;
    readonly name: string;
    readonly state: string;
    readonly status: string;
    readonly tags: {[key: string]: string};
}
export function getConnectContactFlowModuleOutput(args: GetConnectContactFlowModuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectContactFlowModuleResult> {
    return pulumi.output(args).apply((a: any) => getConnectContactFlowModule(a, opts))
}

/**
 * A collection of arguments for invoking getConnectContactFlowModule.
 */
export interface GetConnectContactFlowModuleOutputArgs {
    contactFlowModuleId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
