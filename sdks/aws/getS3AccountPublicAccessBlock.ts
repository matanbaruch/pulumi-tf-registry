// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getS3AccountPublicAccessBlock(args?: GetS3AccountPublicAccessBlockArgs, opts?: pulumi.InvokeOptions): Promise<GetS3AccountPublicAccessBlockResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getS3AccountPublicAccessBlock:getS3AccountPublicAccessBlock", {
        "accountId": args.accountId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getS3AccountPublicAccessBlock.
 */
export interface GetS3AccountPublicAccessBlockArgs {
    accountId?: string;
    id?: string;
}

/**
 * A collection of values returned by getS3AccountPublicAccessBlock.
 */
export interface GetS3AccountPublicAccessBlockResult {
    readonly accountId?: string;
    readonly blockPublicAcls: boolean;
    readonly blockPublicPolicy: boolean;
    readonly id: string;
    readonly ignorePublicAcls: boolean;
    readonly restrictPublicBuckets: boolean;
}
export function getS3AccountPublicAccessBlockOutput(args?: GetS3AccountPublicAccessBlockOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetS3AccountPublicAccessBlockResult> {
    return pulumi.output(args).apply((a: any) => getS3AccountPublicAccessBlock(a, opts))
}

/**
 * A collection of arguments for invoking getS3AccountPublicAccessBlock.
 */
export interface GetS3AccountPublicAccessBlockOutputArgs {
    accountId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
