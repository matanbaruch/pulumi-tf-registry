// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetworkmanagerConnection(args: GetNetworkmanagerConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkmanagerConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getNetworkmanagerConnection:getNetworkmanagerConnection", {
        "connectionId": args.connectionId,
        "globalNetworkId": args.globalNetworkId,
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkmanagerConnection.
 */
export interface GetNetworkmanagerConnectionArgs {
    connectionId: string;
    globalNetworkId: string;
    id?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getNetworkmanagerConnection.
 */
export interface GetNetworkmanagerConnectionResult {
    readonly arn: string;
    readonly connectedDeviceId: string;
    readonly connectedLinkId: string;
    readonly connectionId: string;
    readonly description: string;
    readonly deviceId: string;
    readonly globalNetworkId: string;
    readonly id: string;
    readonly linkId: string;
    readonly tags: {[key: string]: string};
}
export function getNetworkmanagerConnectionOutput(args: GetNetworkmanagerConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkmanagerConnectionResult> {
    return pulumi.output(args).apply((a: any) => getNetworkmanagerConnection(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkmanagerConnection.
 */
export interface GetNetworkmanagerConnectionOutputArgs {
    connectionId: pulumi.Input<string>;
    globalNetworkId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
