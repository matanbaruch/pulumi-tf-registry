// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIamUsers(args?: GetIamUsersArgs, opts?: pulumi.InvokeOptions): Promise<GetIamUsersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getIamUsers:getIamUsers", {
        "id": args.id,
        "nameRegex": args.nameRegex,
        "pathPrefix": args.pathPrefix,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamUsers.
 */
export interface GetIamUsersArgs {
    id?: string;
    nameRegex?: string;
    pathPrefix?: string;
}

/**
 * A collection of values returned by getIamUsers.
 */
export interface GetIamUsersResult {
    readonly arns: string[];
    readonly id: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly pathPrefix?: string;
}
export function getIamUsersOutput(args?: GetIamUsersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamUsersResult> {
    return pulumi.output(args).apply((a: any) => getIamUsers(a, opts))
}

/**
 * A collection of arguments for invoking getIamUsers.
 */
export interface GetIamUsersOutputArgs {
    id?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    pathPrefix?: pulumi.Input<string>;
}
