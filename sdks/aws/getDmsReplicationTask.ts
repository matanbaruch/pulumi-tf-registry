// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDmsReplicationTask(args: GetDmsReplicationTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetDmsReplicationTaskResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getDmsReplicationTask:getDmsReplicationTask", {
        "id": args.id,
        "replicationTaskId": args.replicationTaskId,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDmsReplicationTask.
 */
export interface GetDmsReplicationTaskArgs {
    id?: string;
    replicationTaskId: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getDmsReplicationTask.
 */
export interface GetDmsReplicationTaskResult {
    readonly cdcStartPosition: string;
    readonly cdcStartTime: string;
    readonly id: string;
    readonly migrationType: string;
    readonly replicationInstanceArn: string;
    readonly replicationTaskArn: string;
    readonly replicationTaskId: string;
    readonly replicationTaskSettings: string;
    readonly sourceEndpointArn: string;
    readonly startReplicationTask: boolean;
    readonly status: string;
    readonly tableMappings: string;
    readonly tags: {[key: string]: string};
    readonly targetEndpointArn: string;
}
export function getDmsReplicationTaskOutput(args: GetDmsReplicationTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDmsReplicationTaskResult> {
    return pulumi.output(args).apply((a: any) => getDmsReplicationTask(a, opts))
}

/**
 * A collection of arguments for invoking getDmsReplicationTask.
 */
export interface GetDmsReplicationTaskOutputArgs {
    id?: pulumi.Input<string>;
    replicationTaskId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
