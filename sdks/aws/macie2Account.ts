// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Macie2Account extends pulumi.CustomResource {
    /**
     * Get an existing Macie2Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Macie2AccountState, opts?: pulumi.CustomResourceOptions): Macie2Account {
        return new Macie2Account(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/macie2Account:Macie2Account';

    /**
     * Returns true if the given object is an instance of Macie2Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Macie2Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Macie2Account.__pulumiType;
    }

    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly findingPublishingFrequency!: pulumi.Output<string>;
    public /*out*/ readonly serviceRole!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a Macie2Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Macie2AccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Macie2AccountArgs | Macie2AccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Macie2AccountState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["findingPublishingFrequency"] = state ? state.findingPublishingFrequency : undefined;
            resourceInputs["serviceRole"] = state ? state.serviceRole : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as Macie2AccountArgs | undefined;
            resourceInputs["findingPublishingFrequency"] = args ? args.findingPublishingFrequency : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["serviceRole"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Macie2Account.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Macie2Account resources.
 */
export interface Macie2AccountState {
    createdAt?: pulumi.Input<string>;
    findingPublishingFrequency?: pulumi.Input<string>;
    serviceRole?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Macie2Account resource.
 */
export interface Macie2AccountArgs {
    findingPublishingFrequency?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
