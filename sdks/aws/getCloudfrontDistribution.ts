// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudfrontDistribution(args: GetCloudfrontDistributionArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudfrontDistributionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getCloudfrontDistribution:getCloudfrontDistribution", {
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudfrontDistribution.
 */
export interface GetCloudfrontDistributionArgs {
    id: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getCloudfrontDistribution.
 */
export interface GetCloudfrontDistributionResult {
    readonly aliases: string[];
    readonly arn: string;
    readonly domainName: string;
    readonly enabled: boolean;
    readonly etag: string;
    readonly hostedZoneId: string;
    readonly id: string;
    readonly inProgressValidationBatches: number;
    readonly lastModifiedTime: string;
    readonly status: string;
    readonly tags: {[key: string]: string};
    readonly webAclId: string;
}
export function getCloudfrontDistributionOutput(args: GetCloudfrontDistributionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudfrontDistributionResult> {
    return pulumi.output(args).apply((a: any) => getCloudfrontDistribution(a, opts))
}

/**
 * A collection of arguments for invoking getCloudfrontDistribution.
 */
export interface GetCloudfrontDistributionOutputArgs {
    id: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
