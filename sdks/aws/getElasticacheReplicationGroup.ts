// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getElasticacheReplicationGroup(args: GetElasticacheReplicationGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticacheReplicationGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getElasticacheReplicationGroup:getElasticacheReplicationGroup", {
        "id": args.id,
        "replicationGroupId": args.replicationGroupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getElasticacheReplicationGroup.
 */
export interface GetElasticacheReplicationGroupArgs {
    id?: string;
    replicationGroupId: string;
}

/**
 * A collection of values returned by getElasticacheReplicationGroup.
 */
export interface GetElasticacheReplicationGroupResult {
    readonly arn: string;
    readonly authTokenEnabled: boolean;
    readonly automaticFailoverEnabled: boolean;
    readonly clusterMode: string;
    readonly configurationEndpointAddress: string;
    readonly description: string;
    readonly id: string;
    readonly logDeliveryConfigurations: outputs.GetElasticacheReplicationGroupLogDeliveryConfiguration[];
    readonly memberClusters: string[];
    readonly multiAzEnabled: boolean;
    readonly nodeType: string;
    readonly numCacheClusters: number;
    readonly numNodeGroups: number;
    readonly port: number;
    readonly primaryEndpointAddress: string;
    readonly readerEndpointAddress: string;
    readonly replicasPerNodeGroup: number;
    readonly replicationGroupId: string;
    readonly snapshotRetentionLimit: number;
    readonly snapshotWindow: string;
}
export function getElasticacheReplicationGroupOutput(args: GetElasticacheReplicationGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetElasticacheReplicationGroupResult> {
    return pulumi.output(args).apply((a: any) => getElasticacheReplicationGroup(a, opts))
}

/**
 * A collection of arguments for invoking getElasticacheReplicationGroup.
 */
export interface GetElasticacheReplicationGroupOutputArgs {
    id?: pulumi.Input<string>;
    replicationGroupId: pulumi.Input<string>;
}
