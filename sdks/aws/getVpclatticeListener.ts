// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpclatticeListener(args: GetVpclatticeListenerArgs, opts?: pulumi.InvokeOptions): Promise<GetVpclatticeListenerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getVpclatticeListener:getVpclatticeListener", {
        "id": args.id,
        "listenerIdentifier": args.listenerIdentifier,
        "serviceIdentifier": args.serviceIdentifier,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpclatticeListener.
 */
export interface GetVpclatticeListenerArgs {
    id?: string;
    listenerIdentifier: string;
    serviceIdentifier: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getVpclatticeListener.
 */
export interface GetVpclatticeListenerResult {
    readonly arn: string;
    readonly createdAt: string;
    readonly defaultActions: outputs.GetVpclatticeListenerDefaultAction[];
    readonly id: string;
    readonly lastUpdatedAt: string;
    readonly listenerId: string;
    readonly listenerIdentifier: string;
    readonly name: string;
    readonly port: number;
    readonly protocol: string;
    readonly serviceArn: string;
    readonly serviceId: string;
    readonly serviceIdentifier: string;
    readonly tags: {[key: string]: string};
}
export function getVpclatticeListenerOutput(args: GetVpclatticeListenerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpclatticeListenerResult> {
    return pulumi.output(args).apply((a: any) => getVpclatticeListener(a, opts))
}

/**
 * A collection of arguments for invoking getVpclatticeListener.
 */
export interface GetVpclatticeListenerOutputArgs {
    id?: pulumi.Input<string>;
    listenerIdentifier: pulumi.Input<string>;
    serviceIdentifier: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
