// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SignerSigningJob extends pulumi.CustomResource {
    /**
     * Get an existing SignerSigningJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SignerSigningJobState, opts?: pulumi.CustomResourceOptions): SignerSigningJob {
        return new SignerSigningJob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/signerSigningJob:SignerSigningJob';

    /**
     * Returns true if the given object is an instance of SignerSigningJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SignerSigningJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SignerSigningJob.__pulumiType;
    }

    public /*out*/ readonly completedAt!: pulumi.Output<string>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly destination!: pulumi.Output<outputs.SignerSigningJobDestination>;
    public readonly ignoreSigningJobFailure!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly jobId!: pulumi.Output<string>;
    public /*out*/ readonly jobInvoker!: pulumi.Output<string>;
    public /*out*/ readonly jobOwner!: pulumi.Output<string>;
    public /*out*/ readonly platformDisplayName!: pulumi.Output<string>;
    public /*out*/ readonly platformId!: pulumi.Output<string>;
    public readonly profileName!: pulumi.Output<string>;
    public /*out*/ readonly profileVersion!: pulumi.Output<string>;
    public /*out*/ readonly requestedBy!: pulumi.Output<string>;
    public /*out*/ readonly revocationRecords!: pulumi.Output<outputs.SignerSigningJobRevocationRecord[]>;
    public /*out*/ readonly signatureExpiresAt!: pulumi.Output<string>;
    public /*out*/ readonly signedObjects!: pulumi.Output<outputs.SignerSigningJobSignedObject[]>;
    public readonly source!: pulumi.Output<outputs.SignerSigningJobSource>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly statusReason!: pulumi.Output<string>;

    /**
     * Create a SignerSigningJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SignerSigningJobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SignerSigningJobArgs | SignerSigningJobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SignerSigningJobState | undefined;
            resourceInputs["completedAt"] = state ? state.completedAt : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["destination"] = state ? state.destination : undefined;
            resourceInputs["ignoreSigningJobFailure"] = state ? state.ignoreSigningJobFailure : undefined;
            resourceInputs["jobId"] = state ? state.jobId : undefined;
            resourceInputs["jobInvoker"] = state ? state.jobInvoker : undefined;
            resourceInputs["jobOwner"] = state ? state.jobOwner : undefined;
            resourceInputs["platformDisplayName"] = state ? state.platformDisplayName : undefined;
            resourceInputs["platformId"] = state ? state.platformId : undefined;
            resourceInputs["profileName"] = state ? state.profileName : undefined;
            resourceInputs["profileVersion"] = state ? state.profileVersion : undefined;
            resourceInputs["requestedBy"] = state ? state.requestedBy : undefined;
            resourceInputs["revocationRecords"] = state ? state.revocationRecords : undefined;
            resourceInputs["signatureExpiresAt"] = state ? state.signatureExpiresAt : undefined;
            resourceInputs["signedObjects"] = state ? state.signedObjects : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["statusReason"] = state ? state.statusReason : undefined;
        } else {
            const args = argsOrState as SignerSigningJobArgs | undefined;
            if ((!args || args.destination === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destination'");
            }
            if ((!args || args.profileName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'profileName'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            resourceInputs["destination"] = args ? args.destination : undefined;
            resourceInputs["ignoreSigningJobFailure"] = args ? args.ignoreSigningJobFailure : undefined;
            resourceInputs["profileName"] = args ? args.profileName : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["completedAt"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["jobId"] = undefined /*out*/;
            resourceInputs["jobInvoker"] = undefined /*out*/;
            resourceInputs["jobOwner"] = undefined /*out*/;
            resourceInputs["platformDisplayName"] = undefined /*out*/;
            resourceInputs["platformId"] = undefined /*out*/;
            resourceInputs["profileVersion"] = undefined /*out*/;
            resourceInputs["requestedBy"] = undefined /*out*/;
            resourceInputs["revocationRecords"] = undefined /*out*/;
            resourceInputs["signatureExpiresAt"] = undefined /*out*/;
            resourceInputs["signedObjects"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusReason"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SignerSigningJob.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SignerSigningJob resources.
 */
export interface SignerSigningJobState {
    completedAt?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    destination?: pulumi.Input<inputs.SignerSigningJobDestination>;
    ignoreSigningJobFailure?: pulumi.Input<boolean>;
    jobId?: pulumi.Input<string>;
    jobInvoker?: pulumi.Input<string>;
    jobOwner?: pulumi.Input<string>;
    platformDisplayName?: pulumi.Input<string>;
    platformId?: pulumi.Input<string>;
    profileName?: pulumi.Input<string>;
    profileVersion?: pulumi.Input<string>;
    requestedBy?: pulumi.Input<string>;
    revocationRecords?: pulumi.Input<pulumi.Input<inputs.SignerSigningJobRevocationRecord>[]>;
    signatureExpiresAt?: pulumi.Input<string>;
    signedObjects?: pulumi.Input<pulumi.Input<inputs.SignerSigningJobSignedObject>[]>;
    source?: pulumi.Input<inputs.SignerSigningJobSource>;
    status?: pulumi.Input<string>;
    statusReason?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SignerSigningJob resource.
 */
export interface SignerSigningJobArgs {
    destination: pulumi.Input<inputs.SignerSigningJobDestination>;
    ignoreSigningJobFailure?: pulumi.Input<boolean>;
    profileName: pulumi.Input<string>;
    source: pulumi.Input<inputs.SignerSigningJobSource>;
}
