// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCognitoUserPoolClient(args: GetCognitoUserPoolClientArgs, opts?: pulumi.InvokeOptions): Promise<GetCognitoUserPoolClientResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getCognitoUserPoolClient:getCognitoUserPoolClient", {
        "clientId": args.clientId,
        "id": args.id,
        "userPoolId": args.userPoolId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCognitoUserPoolClient.
 */
export interface GetCognitoUserPoolClientArgs {
    clientId: string;
    id?: string;
    userPoolId: string;
}

/**
 * A collection of values returned by getCognitoUserPoolClient.
 */
export interface GetCognitoUserPoolClientResult {
    readonly accessTokenValidity: number;
    readonly allowedOauthFlows: string[];
    readonly allowedOauthFlowsUserPoolClient: boolean;
    readonly allowedOauthScopes: string[];
    readonly analyticsConfigurations: outputs.GetCognitoUserPoolClientAnalyticsConfiguration[];
    readonly callbackUrls: string[];
    readonly clientId: string;
    readonly clientSecret: string;
    readonly defaultRedirectUri: string;
    readonly enablePropagateAdditionalUserContextData: boolean;
    readonly enableTokenRevocation: boolean;
    readonly explicitAuthFlows: string[];
    readonly generateSecret: boolean;
    readonly id: string;
    readonly idTokenValidity: number;
    readonly logoutUrls: string[];
    readonly name: string;
    readonly preventUserExistenceErrors: string;
    readonly readAttributes: string[];
    readonly refreshTokenValidity: number;
    readonly supportedIdentityProviders: string[];
    readonly tokenValidityUnits: outputs.GetCognitoUserPoolClientTokenValidityUnit[];
    readonly userPoolId: string;
    readonly writeAttributes: string[];
}
export function getCognitoUserPoolClientOutput(args: GetCognitoUserPoolClientOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCognitoUserPoolClientResult> {
    return pulumi.output(args).apply((a: any) => getCognitoUserPoolClient(a, opts))
}

/**
 * A collection of arguments for invoking getCognitoUserPoolClient.
 */
export interface GetCognitoUserPoolClientOutputArgs {
    clientId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    userPoolId: pulumi.Input<string>;
}
