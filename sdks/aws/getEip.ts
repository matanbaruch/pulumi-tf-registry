// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEip(args?: GetEipArgs, opts?: pulumi.InvokeOptions): Promise<GetEipResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getEip:getEip", {
        "filters": args.filters,
        "id": args.id,
        "publicIp": args.publicIp,
        "tags": args.tags,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEip.
 */
export interface GetEipArgs {
    filters?: inputs.GetEipFilter[];
    id?: string;
    publicIp?: string;
    tags?: {[key: string]: string};
    timeouts?: inputs.GetEipTimeouts;
}

/**
 * A collection of values returned by getEip.
 */
export interface GetEipResult {
    readonly arn: string;
    readonly associationId: string;
    readonly carrierIp: string;
    readonly customerOwnedIp: string;
    readonly customerOwnedIpv4Pool: string;
    readonly domain: string;
    readonly filters?: outputs.GetEipFilter[];
    readonly id: string;
    readonly instanceId: string;
    readonly networkInterfaceId: string;
    readonly networkInterfaceOwnerId: string;
    readonly privateDns: string;
    readonly privateIp: string;
    readonly ptrRecord: string;
    readonly publicDns: string;
    readonly publicIp: string;
    readonly publicIpv4Pool: string;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetEipTimeouts;
}
export function getEipOutput(args?: GetEipOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEipResult> {
    return pulumi.output(args).apply((a: any) => getEip(a, opts))
}

/**
 * A collection of arguments for invoking getEip.
 */
export interface GetEipOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetEipFilterArgs>[]>;
    id?: pulumi.Input<string>;
    publicIp?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.GetEipTimeoutsArgs>;
}
