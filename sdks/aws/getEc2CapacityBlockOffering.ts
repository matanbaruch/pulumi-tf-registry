// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEc2CapacityBlockOffering(args: GetEc2CapacityBlockOfferingArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2CapacityBlockOfferingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getEc2CapacityBlockOffering:getEc2CapacityBlockOffering", {
        "capacityDurationHours": args.capacityDurationHours,
        "endDateRange": args.endDateRange,
        "instanceCount": args.instanceCount,
        "instanceType": args.instanceType,
        "startDateRange": args.startDateRange,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2CapacityBlockOffering.
 */
export interface GetEc2CapacityBlockOfferingArgs {
    capacityDurationHours: number;
    endDateRange?: string;
    instanceCount: number;
    instanceType: string;
    startDateRange?: string;
}

/**
 * A collection of values returned by getEc2CapacityBlockOffering.
 */
export interface GetEc2CapacityBlockOfferingResult {
    readonly availabilityZone: string;
    readonly capacityBlockOfferingId: string;
    readonly capacityDurationHours: number;
    readonly currencyCode: string;
    readonly endDateRange: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceCount: number;
    readonly instanceType: string;
    readonly startDateRange: string;
    readonly tenancy: string;
    readonly upfrontFee: string;
}
export function getEc2CapacityBlockOfferingOutput(args: GetEc2CapacityBlockOfferingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2CapacityBlockOfferingResult> {
    return pulumi.output(args).apply((a: any) => getEc2CapacityBlockOffering(a, opts))
}

/**
 * A collection of arguments for invoking getEc2CapacityBlockOffering.
 */
export interface GetEc2CapacityBlockOfferingOutputArgs {
    capacityDurationHours: pulumi.Input<number>;
    endDateRange?: pulumi.Input<string>;
    instanceCount: pulumi.Input<number>;
    instanceType: pulumi.Input<string>;
    startDateRange?: pulumi.Input<string>;
}
