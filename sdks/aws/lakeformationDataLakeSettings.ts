// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LakeformationDataLakeSettings extends pulumi.CustomResource {
    /**
     * Get an existing LakeformationDataLakeSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LakeformationDataLakeSettingsState, opts?: pulumi.CustomResourceOptions): LakeformationDataLakeSettings {
        return new LakeformationDataLakeSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/lakeformationDataLakeSettings:LakeformationDataLakeSettings';

    /**
     * Returns true if the given object is an instance of LakeformationDataLakeSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LakeformationDataLakeSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LakeformationDataLakeSettings.__pulumiType;
    }

    public readonly admins!: pulumi.Output<string[]>;
    public readonly allowExternalDataFiltering!: pulumi.Output<boolean | undefined>;
    public readonly allowFullTableExternalDataAccess!: pulumi.Output<boolean | undefined>;
    public readonly authorizedSessionTagValueLists!: pulumi.Output<string[]>;
    public readonly catalogId!: pulumi.Output<string | undefined>;
    public readonly createDatabaseDefaultPermissions!: pulumi.Output<outputs.LakeformationDataLakeSettingsCreateDatabaseDefaultPermission[] | undefined>;
    public readonly createTableDefaultPermissions!: pulumi.Output<outputs.LakeformationDataLakeSettingsCreateTableDefaultPermission[] | undefined>;
    public readonly externalDataFilteringAllowLists!: pulumi.Output<string[]>;
    public readonly readOnlyAdmins!: pulumi.Output<string[]>;
    public readonly trustedResourceOwners!: pulumi.Output<string[]>;

    /**
     * Create a LakeformationDataLakeSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LakeformationDataLakeSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LakeformationDataLakeSettingsArgs | LakeformationDataLakeSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LakeformationDataLakeSettingsState | undefined;
            resourceInputs["admins"] = state ? state.admins : undefined;
            resourceInputs["allowExternalDataFiltering"] = state ? state.allowExternalDataFiltering : undefined;
            resourceInputs["allowFullTableExternalDataAccess"] = state ? state.allowFullTableExternalDataAccess : undefined;
            resourceInputs["authorizedSessionTagValueLists"] = state ? state.authorizedSessionTagValueLists : undefined;
            resourceInputs["catalogId"] = state ? state.catalogId : undefined;
            resourceInputs["createDatabaseDefaultPermissions"] = state ? state.createDatabaseDefaultPermissions : undefined;
            resourceInputs["createTableDefaultPermissions"] = state ? state.createTableDefaultPermissions : undefined;
            resourceInputs["externalDataFilteringAllowLists"] = state ? state.externalDataFilteringAllowLists : undefined;
            resourceInputs["readOnlyAdmins"] = state ? state.readOnlyAdmins : undefined;
            resourceInputs["trustedResourceOwners"] = state ? state.trustedResourceOwners : undefined;
        } else {
            const args = argsOrState as LakeformationDataLakeSettingsArgs | undefined;
            resourceInputs["admins"] = args ? args.admins : undefined;
            resourceInputs["allowExternalDataFiltering"] = args ? args.allowExternalDataFiltering : undefined;
            resourceInputs["allowFullTableExternalDataAccess"] = args ? args.allowFullTableExternalDataAccess : undefined;
            resourceInputs["authorizedSessionTagValueLists"] = args ? args.authorizedSessionTagValueLists : undefined;
            resourceInputs["catalogId"] = args ? args.catalogId : undefined;
            resourceInputs["createDatabaseDefaultPermissions"] = args ? args.createDatabaseDefaultPermissions : undefined;
            resourceInputs["createTableDefaultPermissions"] = args ? args.createTableDefaultPermissions : undefined;
            resourceInputs["externalDataFilteringAllowLists"] = args ? args.externalDataFilteringAllowLists : undefined;
            resourceInputs["readOnlyAdmins"] = args ? args.readOnlyAdmins : undefined;
            resourceInputs["trustedResourceOwners"] = args ? args.trustedResourceOwners : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LakeformationDataLakeSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LakeformationDataLakeSettings resources.
 */
export interface LakeformationDataLakeSettingsState {
    admins?: pulumi.Input<pulumi.Input<string>[]>;
    allowExternalDataFiltering?: pulumi.Input<boolean>;
    allowFullTableExternalDataAccess?: pulumi.Input<boolean>;
    authorizedSessionTagValueLists?: pulumi.Input<pulumi.Input<string>[]>;
    catalogId?: pulumi.Input<string>;
    createDatabaseDefaultPermissions?: pulumi.Input<pulumi.Input<inputs.LakeformationDataLakeSettingsCreateDatabaseDefaultPermission>[]>;
    createTableDefaultPermissions?: pulumi.Input<pulumi.Input<inputs.LakeformationDataLakeSettingsCreateTableDefaultPermission>[]>;
    externalDataFilteringAllowLists?: pulumi.Input<pulumi.Input<string>[]>;
    readOnlyAdmins?: pulumi.Input<pulumi.Input<string>[]>;
    trustedResourceOwners?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a LakeformationDataLakeSettings resource.
 */
export interface LakeformationDataLakeSettingsArgs {
    admins?: pulumi.Input<pulumi.Input<string>[]>;
    allowExternalDataFiltering?: pulumi.Input<boolean>;
    allowFullTableExternalDataAccess?: pulumi.Input<boolean>;
    authorizedSessionTagValueLists?: pulumi.Input<pulumi.Input<string>[]>;
    catalogId?: pulumi.Input<string>;
    createDatabaseDefaultPermissions?: pulumi.Input<pulumi.Input<inputs.LakeformationDataLakeSettingsCreateDatabaseDefaultPermission>[]>;
    createTableDefaultPermissions?: pulumi.Input<pulumi.Input<inputs.LakeformationDataLakeSettingsCreateTableDefaultPermission>[]>;
    externalDataFilteringAllowLists?: pulumi.Input<pulumi.Input<string>[]>;
    readOnlyAdmins?: pulumi.Input<pulumi.Input<string>[]>;
    trustedResourceOwners?: pulumi.Input<pulumi.Input<string>[]>;
}
