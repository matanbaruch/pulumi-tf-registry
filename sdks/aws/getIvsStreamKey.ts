// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIvsStreamKey(args: GetIvsStreamKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetIvsStreamKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getIvsStreamKey:getIvsStreamKey", {
        "channelArn": args.channelArn,
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIvsStreamKey.
 */
export interface GetIvsStreamKeyArgs {
    channelArn: string;
    id?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getIvsStreamKey.
 */
export interface GetIvsStreamKeyResult {
    readonly arn: string;
    readonly channelArn: string;
    readonly id: string;
    readonly tags: {[key: string]: string};
    readonly value: string;
}
export function getIvsStreamKeyOutput(args: GetIvsStreamKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIvsStreamKeyResult> {
    return pulumi.output(args).apply((a: any) => getIvsStreamKey(a, opts))
}

/**
 * A collection of arguments for invoking getIvsStreamKey.
 */
export interface GetIvsStreamKeyOutputArgs {
    channelArn: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
