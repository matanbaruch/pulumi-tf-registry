// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRamResourceShare(args: GetRamResourceShareArgs, opts?: pulumi.InvokeOptions): Promise<GetRamResourceShareResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getRamResourceShare:getRamResourceShare", {
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "resourceOwner": args.resourceOwner,
        "resourceShareStatus": args.resourceShareStatus,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRamResourceShare.
 */
export interface GetRamResourceShareArgs {
    filters?: inputs.GetRamResourceShareFilter[];
    id?: string;
    name?: string;
    resourceOwner: string;
    resourceShareStatus?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getRamResourceShare.
 */
export interface GetRamResourceShareResult {
    readonly arn: string;
    readonly filters?: outputs.GetRamResourceShareFilter[];
    readonly id: string;
    readonly name: string;
    readonly owningAccountId: string;
    readonly resourceArns: string[];
    readonly resourceOwner: string;
    readonly resourceShareStatus?: string;
    readonly status: string;
    readonly tags: {[key: string]: string};
}
export function getRamResourceShareOutput(args: GetRamResourceShareOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRamResourceShareResult> {
    return pulumi.output(args).apply((a: any) => getRamResourceShare(a, opts))
}

/**
 * A collection of arguments for invoking getRamResourceShare.
 */
export interface GetRamResourceShareOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetRamResourceShareFilterArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    resourceOwner: pulumi.Input<string>;
    resourceShareStatus?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
