// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AmplifyApp extends pulumi.CustomResource {
    /**
     * Get an existing AmplifyApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AmplifyAppState, opts?: pulumi.CustomResourceOptions): AmplifyApp {
        return new AmplifyApp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:index/amplifyApp:AmplifyApp';

    /**
     * Returns true if the given object is an instance of AmplifyApp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AmplifyApp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AmplifyApp.__pulumiType;
    }

    public readonly accessToken!: pulumi.Output<string | undefined>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly autoBranchCreationConfig!: pulumi.Output<outputs.AmplifyAppAutoBranchCreationConfig | undefined>;
    public readonly autoBranchCreationPatterns!: pulumi.Output<string[] | undefined>;
    public readonly basicAuthCredentials!: pulumi.Output<string | undefined>;
    public readonly buildSpec!: pulumi.Output<string>;
    public readonly customHeaders!: pulumi.Output<string>;
    public readonly customRules!: pulumi.Output<outputs.AmplifyAppCustomRule[] | undefined>;
    public /*out*/ readonly defaultDomain!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly enableAutoBranchCreation!: pulumi.Output<boolean | undefined>;
    public readonly enableBasicAuth!: pulumi.Output<boolean | undefined>;
    public readonly enableBranchAutoBuild!: pulumi.Output<boolean | undefined>;
    public readonly enableBranchAutoDeletion!: pulumi.Output<boolean | undefined>;
    public readonly environmentVariables!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly iamServiceRoleArn!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly oauthToken!: pulumi.Output<string | undefined>;
    public readonly platform!: pulumi.Output<string | undefined>;
    public /*out*/ readonly productionBranches!: pulumi.Output<outputs.AmplifyAppProductionBranch[]>;
    public readonly repository!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tagsAll!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a AmplifyApp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AmplifyAppArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AmplifyAppArgs | AmplifyAppState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AmplifyAppState | undefined;
            resourceInputs["accessToken"] = state ? state.accessToken : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["autoBranchCreationConfig"] = state ? state.autoBranchCreationConfig : undefined;
            resourceInputs["autoBranchCreationPatterns"] = state ? state.autoBranchCreationPatterns : undefined;
            resourceInputs["basicAuthCredentials"] = state ? state.basicAuthCredentials : undefined;
            resourceInputs["buildSpec"] = state ? state.buildSpec : undefined;
            resourceInputs["customHeaders"] = state ? state.customHeaders : undefined;
            resourceInputs["customRules"] = state ? state.customRules : undefined;
            resourceInputs["defaultDomain"] = state ? state.defaultDomain : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableAutoBranchCreation"] = state ? state.enableAutoBranchCreation : undefined;
            resourceInputs["enableBasicAuth"] = state ? state.enableBasicAuth : undefined;
            resourceInputs["enableBranchAutoBuild"] = state ? state.enableBranchAutoBuild : undefined;
            resourceInputs["enableBranchAutoDeletion"] = state ? state.enableBranchAutoDeletion : undefined;
            resourceInputs["environmentVariables"] = state ? state.environmentVariables : undefined;
            resourceInputs["iamServiceRoleArn"] = state ? state.iamServiceRoleArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oauthToken"] = state ? state.oauthToken : undefined;
            resourceInputs["platform"] = state ? state.platform : undefined;
            resourceInputs["productionBranches"] = state ? state.productionBranches : undefined;
            resourceInputs["repository"] = state ? state.repository : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        } else {
            const args = argsOrState as AmplifyAppArgs | undefined;
            resourceInputs["accessToken"] = args?.accessToken ? pulumi.secret(args.accessToken) : undefined;
            resourceInputs["autoBranchCreationConfig"] = args ? args.autoBranchCreationConfig : undefined;
            resourceInputs["autoBranchCreationPatterns"] = args ? args.autoBranchCreationPatterns : undefined;
            resourceInputs["basicAuthCredentials"] = args?.basicAuthCredentials ? pulumi.secret(args.basicAuthCredentials) : undefined;
            resourceInputs["buildSpec"] = args ? args.buildSpec : undefined;
            resourceInputs["customHeaders"] = args ? args.customHeaders : undefined;
            resourceInputs["customRules"] = args ? args.customRules : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableAutoBranchCreation"] = args ? args.enableAutoBranchCreation : undefined;
            resourceInputs["enableBasicAuth"] = args ? args.enableBasicAuth : undefined;
            resourceInputs["enableBranchAutoBuild"] = args ? args.enableBranchAutoBuild : undefined;
            resourceInputs["enableBranchAutoDeletion"] = args ? args.enableBranchAutoDeletion : undefined;
            resourceInputs["environmentVariables"] = args ? args.environmentVariables : undefined;
            resourceInputs["iamServiceRoleArn"] = args ? args.iamServiceRoleArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["oauthToken"] = args?.oauthToken ? pulumi.secret(args.oauthToken) : undefined;
            resourceInputs["platform"] = args ? args.platform : undefined;
            resourceInputs["repository"] = args ? args.repository : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tagsAll"] = args ? args.tagsAll : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["defaultDomain"] = undefined /*out*/;
            resourceInputs["productionBranches"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accessToken", "basicAuthCredentials", "oauthToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AmplifyApp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AmplifyApp resources.
 */
export interface AmplifyAppState {
    accessToken?: pulumi.Input<string>;
    arn?: pulumi.Input<string>;
    autoBranchCreationConfig?: pulumi.Input<inputs.AmplifyAppAutoBranchCreationConfig>;
    autoBranchCreationPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    basicAuthCredentials?: pulumi.Input<string>;
    buildSpec?: pulumi.Input<string>;
    customHeaders?: pulumi.Input<string>;
    customRules?: pulumi.Input<pulumi.Input<inputs.AmplifyAppCustomRule>[]>;
    defaultDomain?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    enableAutoBranchCreation?: pulumi.Input<boolean>;
    enableBasicAuth?: pulumi.Input<boolean>;
    enableBranchAutoBuild?: pulumi.Input<boolean>;
    enableBranchAutoDeletion?: pulumi.Input<boolean>;
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    iamServiceRoleArn?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    oauthToken?: pulumi.Input<string>;
    platform?: pulumi.Input<string>;
    productionBranches?: pulumi.Input<pulumi.Input<inputs.AmplifyAppProductionBranch>[]>;
    repository?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a AmplifyApp resource.
 */
export interface AmplifyAppArgs {
    accessToken?: pulumi.Input<string>;
    autoBranchCreationConfig?: pulumi.Input<inputs.AmplifyAppAutoBranchCreationConfig>;
    autoBranchCreationPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    basicAuthCredentials?: pulumi.Input<string>;
    buildSpec?: pulumi.Input<string>;
    customHeaders?: pulumi.Input<string>;
    customRules?: pulumi.Input<pulumi.Input<inputs.AmplifyAppCustomRule>[]>;
    description?: pulumi.Input<string>;
    enableAutoBranchCreation?: pulumi.Input<boolean>;
    enableBasicAuth?: pulumi.Input<boolean>;
    enableBranchAutoBuild?: pulumi.Input<boolean>;
    enableBranchAutoDeletion?: pulumi.Input<boolean>;
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    iamServiceRoleArn?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    oauthToken?: pulumi.Input<string>;
    platform?: pulumi.Input<string>;
    repository?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tagsAll?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
