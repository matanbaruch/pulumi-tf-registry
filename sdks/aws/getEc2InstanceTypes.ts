// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2InstanceTypes(args?: GetEc2InstanceTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2InstanceTypesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getEc2InstanceTypes:getEc2InstanceTypes", {
        "filters": args.filters,
        "id": args.id,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2InstanceTypes.
 */
export interface GetEc2InstanceTypesArgs {
    filters?: inputs.GetEc2InstanceTypesFilter[];
    id?: string;
    timeouts?: inputs.GetEc2InstanceTypesTimeouts;
}

/**
 * A collection of values returned by getEc2InstanceTypes.
 */
export interface GetEc2InstanceTypesResult {
    readonly filters?: outputs.GetEc2InstanceTypesFilter[];
    readonly id: string;
    readonly instanceTypes: string[];
    readonly timeouts?: outputs.GetEc2InstanceTypesTimeouts;
}
export function getEc2InstanceTypesOutput(args?: GetEc2InstanceTypesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2InstanceTypesResult> {
    return pulumi.output(args).apply((a: any) => getEc2InstanceTypes(a, opts))
}

/**
 * A collection of arguments for invoking getEc2InstanceTypes.
 */
export interface GetEc2InstanceTypesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetEc2InstanceTypesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetEc2InstanceTypesTimeoutsArgs>;
}
