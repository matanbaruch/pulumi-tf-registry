// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConnectUser(args: GetConnectUserArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getConnectUser:getConnectUser", {
        "id": args.id,
        "instanceId": args.instanceId,
        "name": args.name,
        "tags": args.tags,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectUser.
 */
export interface GetConnectUserArgs {
    id?: string;
    instanceId: string;
    name?: string;
    tags?: {[key: string]: string};
    userId?: string;
}

/**
 * A collection of values returned by getConnectUser.
 */
export interface GetConnectUserResult {
    readonly arn: string;
    readonly directoryUserId: string;
    readonly hierarchyGroupId: string;
    readonly id: string;
    readonly identityInfos: outputs.GetConnectUserIdentityInfo[];
    readonly instanceId: string;
    readonly name: string;
    readonly phoneConfigs: outputs.GetConnectUserPhoneConfig[];
    readonly routingProfileId: string;
    readonly securityProfileIds: string[];
    readonly tags: {[key: string]: string};
    readonly userId: string;
}
export function getConnectUserOutput(args: GetConnectUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectUserResult> {
    return pulumi.output(args).apply((a: any) => getConnectUser(a, opts))
}

/**
 * A collection of arguments for invoking getConnectUser.
 */
export interface GetConnectUserOutputArgs {
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    userId?: pulumi.Input<string>;
}
