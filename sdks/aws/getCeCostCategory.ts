// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCeCostCategory(args: GetCeCostCategoryArgs, opts?: pulumi.InvokeOptions): Promise<GetCeCostCategoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getCeCostCategory:getCeCostCategory", {
        "costCategoryArn": args.costCategoryArn,
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCeCostCategory.
 */
export interface GetCeCostCategoryArgs {
    costCategoryArn: string;
    id?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getCeCostCategory.
 */
export interface GetCeCostCategoryResult {
    readonly costCategoryArn: string;
    readonly defaultValue: string;
    readonly effectiveEnd: string;
    readonly effectiveStart: string;
    readonly id: string;
    readonly name: string;
    readonly ruleVersion: string;
    readonly rules: outputs.GetCeCostCategoryRule[];
    readonly splitChargeRules: outputs.GetCeCostCategorySplitChargeRule[];
    readonly tags: {[key: string]: string};
}
export function getCeCostCategoryOutput(args: GetCeCostCategoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCeCostCategoryResult> {
    return pulumi.output(args).apply((a: any) => getCeCostCategory(a, opts))
}

/**
 * A collection of arguments for invoking getCeCostCategory.
 */
export interface GetCeCostCategoryOutputArgs {
    costCategoryArn: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
