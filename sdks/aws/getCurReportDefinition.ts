// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCurReportDefinition(args: GetCurReportDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetCurReportDefinitionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getCurReportDefinition:getCurReportDefinition", {
        "id": args.id,
        "reportName": args.reportName,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCurReportDefinition.
 */
export interface GetCurReportDefinitionArgs {
    id?: string;
    reportName: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getCurReportDefinition.
 */
export interface GetCurReportDefinitionResult {
    readonly additionalArtifacts: string[];
    readonly additionalSchemaElements: string[];
    readonly compression: string;
    readonly format: string;
    readonly id: string;
    readonly refreshClosedReports: boolean;
    readonly reportName: string;
    readonly reportVersioning: string;
    readonly s3Bucket: string;
    readonly s3Prefix: string;
    readonly s3Region: string;
    readonly tags: {[key: string]: string};
    readonly timeUnit: string;
}
export function getCurReportDefinitionOutput(args: GetCurReportDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCurReportDefinitionResult> {
    return pulumi.output(args).apply((a: any) => getCurReportDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getCurReportDefinition.
 */
export interface GetCurReportDefinitionOutputArgs {
    id?: pulumi.Input<string>;
    reportName: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
