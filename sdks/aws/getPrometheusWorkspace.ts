// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPrometheusWorkspace(args: GetPrometheusWorkspaceArgs, opts?: pulumi.InvokeOptions): Promise<GetPrometheusWorkspaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getPrometheusWorkspace:getPrometheusWorkspace", {
        "id": args.id,
        "tags": args.tags,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPrometheusWorkspace.
 */
export interface GetPrometheusWorkspaceArgs {
    id?: string;
    tags?: {[key: string]: string};
    workspaceId: string;
}

/**
 * A collection of values returned by getPrometheusWorkspace.
 */
export interface GetPrometheusWorkspaceResult {
    readonly alias: string;
    readonly arn: string;
    readonly createdDate: string;
    readonly id: string;
    readonly kmsKeyArn: string;
    readonly prometheusEndpoint: string;
    readonly status: string;
    readonly tags: {[key: string]: string};
    readonly workspaceId: string;
}
export function getPrometheusWorkspaceOutput(args: GetPrometheusWorkspaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrometheusWorkspaceResult> {
    return pulumi.output(args).apply((a: any) => getPrometheusWorkspace(a, opts))
}

/**
 * A collection of arguments for invoking getPrometheusWorkspace.
 */
export interface GetPrometheusWorkspaceOutputArgs {
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    workspaceId: pulumi.Input<string>;
}
