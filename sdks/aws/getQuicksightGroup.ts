// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getQuicksightGroup(args: GetQuicksightGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetQuicksightGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getQuicksightGroup:getQuicksightGroup", {
        "awsAccountId": args.awsAccountId,
        "groupName": args.groupName,
        "id": args.id,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getQuicksightGroup.
 */
export interface GetQuicksightGroupArgs {
    awsAccountId?: string;
    groupName: string;
    id?: string;
    namespace?: string;
}

/**
 * A collection of values returned by getQuicksightGroup.
 */
export interface GetQuicksightGroupResult {
    readonly arn: string;
    readonly awsAccountId: string;
    readonly description: string;
    readonly groupName: string;
    readonly id: string;
    readonly namespace?: string;
    readonly principalId: string;
}
export function getQuicksightGroupOutput(args: GetQuicksightGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQuicksightGroupResult> {
    return pulumi.output(args).apply((a: any) => getQuicksightGroup(a, opts))
}

/**
 * A collection of arguments for invoking getQuicksightGroup.
 */
export interface GetQuicksightGroupOutputArgs {
    awsAccountId?: pulumi.Input<string>;
    groupName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
}
