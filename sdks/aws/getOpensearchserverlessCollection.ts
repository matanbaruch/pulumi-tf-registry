// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOpensearchserverlessCollection(args?: GetOpensearchserverlessCollectionArgs, opts?: pulumi.InvokeOptions): Promise<GetOpensearchserverlessCollectionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:index/getOpensearchserverlessCollection:getOpensearchserverlessCollection", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpensearchserverlessCollection.
 */
export interface GetOpensearchserverlessCollectionArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getOpensearchserverlessCollection.
 */
export interface GetOpensearchserverlessCollectionResult {
    readonly arn: string;
    readonly collectionEndpoint: string;
    readonly createdDate: string;
    readonly dashboardEndpoint: string;
    readonly description: string;
    readonly id: string;
    readonly kmsKeyArn: string;
    readonly lastModifiedDate: string;
    readonly name: string;
    readonly standbyReplicas: string;
    readonly tags: {[key: string]: string};
    readonly type: string;
}
export function getOpensearchserverlessCollectionOutput(args?: GetOpensearchserverlessCollectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpensearchserverlessCollectionResult> {
    return pulumi.output(args).apply((a: any) => getOpensearchserverlessCollection(a, opts))
}

/**
 * A collection of arguments for invoking getOpensearchserverlessCollection.
 */
export interface GetOpensearchserverlessCollectionOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
