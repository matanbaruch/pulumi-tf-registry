// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEksCluster(args?: GetEksClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetEksClusterResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rafay:index/getEksCluster:getEksCluster", {
        "cluster": args.cluster,
        "clusterConfig": args.clusterConfig,
        "id": args.id,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEksCluster.
 */
export interface GetEksClusterArgs {
    cluster?: inputs.GetEksClusterCluster;
    clusterConfig?: inputs.GetEksClusterClusterConfig;
    id?: string;
    timeouts?: inputs.GetEksClusterTimeouts;
}

/**
 * A collection of values returned by getEksCluster.
 */
export interface GetEksClusterResult {
    readonly cluster?: outputs.GetEksClusterCluster;
    readonly clusterConfig?: outputs.GetEksClusterClusterConfig;
    readonly id: string;
    readonly timeouts?: outputs.GetEksClusterTimeouts;
}
export function getEksClusterOutput(args?: GetEksClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEksClusterResult> {
    return pulumi.output(args).apply((a: any) => getEksCluster(a, opts))
}

/**
 * A collection of arguments for invoking getEksCluster.
 */
export interface GetEksClusterOutputArgs {
    cluster?: pulumi.Input<inputs.GetEksClusterClusterArgs>;
    clusterConfig?: pulumi.Input<inputs.GetEksClusterClusterConfigArgs>;
    id?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetEksClusterTimeoutsArgs>;
}
