// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAddon(args?: GetAddonArgs, opts?: pulumi.InvokeOptions): Promise<GetAddonResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rafay:index/getAddon:getAddon", {
        "id": args.id,
        "metadata": args.metadata,
        "spec": args.spec,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAddon.
 */
export interface GetAddonArgs {
    id?: string;
    metadata?: inputs.GetAddonMetadata;
    spec?: inputs.GetAddonSpec;
    timeouts?: inputs.GetAddonTimeouts;
}

/**
 * A collection of values returned by getAddon.
 */
export interface GetAddonResult {
    readonly id: string;
    readonly metadata?: outputs.GetAddonMetadata;
    readonly spec?: outputs.GetAddonSpec;
    readonly timeouts?: outputs.GetAddonTimeouts;
}
export function getAddonOutput(args?: GetAddonOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAddonResult> {
    return pulumi.output(args).apply((a: any) => getAddon(a, opts))
}

/**
 * A collection of arguments for invoking getAddon.
 */
export interface GetAddonOutputArgs {
    id?: pulumi.Input<string>;
    metadata?: pulumi.Input<inputs.GetAddonMetadataArgs>;
    spec?: pulumi.Input<inputs.GetAddonSpecArgs>;
    timeouts?: pulumi.Input<inputs.GetAddonTimeoutsArgs>;
}
