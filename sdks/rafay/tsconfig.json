{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "accessApikey.ts",
        "addon.ts",
        "agent.ts",
        "aksCluster.ts",
        "aksClusterSpec.ts",
        "aksClusterV3.ts",
        "alertconfig.ts",
        "blueprint.ts",
        "catalog.ts",
        "chargebackCommonServicesPolicy.ts",
        "chargebackGroup.ts",
        "chargebackGroupReport.ts",
        "chargebackShare.ts",
        "cloudCredential.ts",
        "cloudCredentialsV3.ts",
        "clusterMeshPolicy.ts",
        "clusterMeshRule.ts",
        "clusterNetworkPolicy.ts",
        "clusterNetworkPolicyRule.ts",
        "clusterOverride.ts",
        "clusterSharing.ts",
        "config/index.ts",
        "config/vars.ts",
        "configContext.ts",
        "containerRegistry.ts",
        "costProfile.ts",
        "customrole.ts",
        "downloadKubeconfig.ts",
        "driver.ts",
        "eksCluster.ts",
        "eksClusterSpec.ts",
        "environment.ts",
        "environmentTemplate.ts",
        "fleetplan.ts",
        "getAddon.ts",
        "getAksCluster.ts",
        "getAksClusterV3.ts",
        "getBlueprint.ts",
        "getClusterBlueprintStatus.ts",
        "getDownloadKubeconfig.ts",
        "getEksCluster.ts",
        "getGkeCluster.ts",
        "getGroup.ts",
        "getGroupassociation.ts",
        "getProject.ts",
        "getUser.ts",
        "getWorkload.ts",
        "gkeCluster.ts",
        "group.ts",
        "groupassociation.ts",
        "importCluster.ts",
        "index.ts",
        "infraProvisioner.ts",
        "meshProfile.ts",
        "namespace.ts",
        "namespaceMeshPolicy.ts",
        "namespaceMeshRule.ts",
        "namespaceNetworkPolicy.ts",
        "namespaceNetworkPolicyRule.ts",
        "networkPolicyProfile.ts",
        "opaConstraint.ts",
        "opaConstraintTemplate.ts",
        "opaInstallationProfile.ts",
        "opaPolicy.ts",
        "organizationalertconfig.ts",
        "pipeline.ts",
        "project.ts",
        "projectTagsAssociation.ts",
        "provider.ts",
        "repositories.ts",
        "resourceTemplate.ts",
        "secretGroup.ts",
        "secretProvider.ts",
        "secretsealer.ts",
        "staticResource.ts",
        "tagGroup.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "user.ts",
        "utilities.ts",
        "workload.ts",
        "workloadCdOperator.ts",
        "workloadtemplate.ts",
        "ztkapolicy.ts",
        "ztkarule.ts"
    ]
}
