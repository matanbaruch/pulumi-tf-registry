// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBlueprint(args?: GetBlueprintArgs, opts?: pulumi.InvokeOptions): Promise<GetBlueprintResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rafay:index/getBlueprint:getBlueprint", {
        "id": args.id,
        "metadata": args.metadata,
        "spec": args.spec,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlueprint.
 */
export interface GetBlueprintArgs {
    id?: string;
    metadata?: inputs.GetBlueprintMetadata;
    spec?: inputs.GetBlueprintSpec;
    timeouts?: inputs.GetBlueprintTimeouts;
}

/**
 * A collection of values returned by getBlueprint.
 */
export interface GetBlueprintResult {
    readonly id: string;
    readonly metadata?: outputs.GetBlueprintMetadata;
    readonly spec?: outputs.GetBlueprintSpec;
    readonly timeouts?: outputs.GetBlueprintTimeouts;
}
export function getBlueprintOutput(args?: GetBlueprintOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlueprintResult> {
    return pulumi.output(args).apply((a: any) => getBlueprint(a, opts))
}

/**
 * A collection of arguments for invoking getBlueprint.
 */
export interface GetBlueprintOutputArgs {
    id?: pulumi.Input<string>;
    metadata?: pulumi.Input<inputs.GetBlueprintMetadataArgs>;
    spec?: pulumi.Input<inputs.GetBlueprintSpecArgs>;
    timeouts?: pulumi.Input<inputs.GetBlueprintTimeoutsArgs>;
}
