// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUser(args: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rafay:index/getUser:getUser", {
        "apiSecret": args.apiSecret,
        "apikey": args.apikey,
        "consoleAccess": args.consoleAccess,
        "firstName": args.firstName,
        "generateApikey": args.generateApikey,
        "groups": args.groups,
        "id": args.id,
        "lastName": args.lastName,
        "phone": args.phone,
        "timeouts": args.timeouts,
        "userName": args.userName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    apiSecret?: string;
    apikey?: string;
    consoleAccess?: boolean;
    firstName?: string;
    generateApikey?: boolean;
    groups?: string[];
    id?: string;
    lastName?: string;
    phone?: string;
    timeouts?: inputs.GetUserTimeouts;
    userName: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    readonly apiSecret: string;
    readonly apikey: string;
    readonly consoleAccess?: boolean;
    readonly firstName?: string;
    readonly generateApikey?: boolean;
    readonly groups?: string[];
    readonly id: string;
    readonly lastName?: string;
    readonly phone?: string;
    readonly timeouts?: outputs.GetUserTimeouts;
    readonly userName: string;
}
export function getUserOutput(args: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply((a: any) => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    apiSecret?: pulumi.Input<string>;
    apikey?: pulumi.Input<string>;
    consoleAccess?: pulumi.Input<boolean>;
    firstName?: pulumi.Input<string>;
    generateApikey?: pulumi.Input<boolean>;
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
    phone?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetUserTimeoutsArgs>;
    userName: pulumi.Input<string>;
}
