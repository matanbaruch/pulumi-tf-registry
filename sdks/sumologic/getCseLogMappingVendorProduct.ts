// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCseLogMappingVendorProduct(args: GetCseLogMappingVendorProductArgs, opts?: pulumi.InvokeOptions): Promise<GetCseLogMappingVendorProductResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sumologic:index/getCseLogMappingVendorProduct:getCseLogMappingVendorProduct", {
        "guid": args.guid,
        "id": args.id,
        "product": args.product,
        "vendor": args.vendor,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCseLogMappingVendorProduct.
 */
export interface GetCseLogMappingVendorProductArgs {
    guid?: string;
    id?: string;
    product: string;
    vendor: string;
}

/**
 * A collection of values returned by getCseLogMappingVendorProduct.
 */
export interface GetCseLogMappingVendorProductResult {
    readonly guid: string;
    readonly id: string;
    readonly product: string;
    readonly vendor: string;
}
export function getCseLogMappingVendorProductOutput(args: GetCseLogMappingVendorProductOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCseLogMappingVendorProductResult> {
    return pulumi.output(args).apply((a: any) => getCseLogMappingVendorProduct(a, opts))
}

/**
 * A collection of arguments for invoking getCseLogMappingVendorProduct.
 */
export interface GetCseLogMappingVendorProductOutputArgs {
    guid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    product: pulumi.Input<string>;
    vendor: pulumi.Input<string>;
}
