// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCallerIdentity(args?: GetCallerIdentityArgs, opts?: pulumi.InvokeOptions): Promise<GetCallerIdentityResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sumologic:index/getCallerIdentity:getCallerIdentity", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCallerIdentity.
 */
export interface GetCallerIdentityArgs {
    id?: string;
}

/**
 * A collection of values returned by getCallerIdentity.
 */
export interface GetCallerIdentityResult {
    readonly accessId: string;
    readonly environment: string;
    readonly id: string;
}
export function getCallerIdentityOutput(args?: GetCallerIdentityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCallerIdentityResult> {
    return pulumi.output(args).apply((a: any) => getCallerIdentity(a, opts))
}

/**
 * A collection of arguments for invoking getCallerIdentity.
 */
export interface GetCallerIdentityOutputArgs {
    id?: pulumi.Input<string>;
}
