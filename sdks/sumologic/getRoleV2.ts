// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRoleV2(args?: GetRoleV2Args, opts?: pulumi.InvokeOptions): Promise<GetRoleV2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sumologic:index/getRoleV2:getRoleV2", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoleV2.
 */
export interface GetRoleV2Args {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getRoleV2.
 */
export interface GetRoleV2Result {
    readonly auditDataFilter: string;
    readonly capabilities: string[];
    readonly description: string;
    readonly id: string;
    readonly logAnalyticsFilter: string;
    readonly name: string;
    readonly securityDataFilter: string;
    readonly selectedViews: outputs.GetRoleV2SelectedView[];
    readonly selectionType: string;
}
export function getRoleV2Output(args?: GetRoleV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoleV2Result> {
    return pulumi.output(args).apply((a: any) => getRoleV2(a, opts))
}

/**
 * A collection of arguments for invoking getRoleV2.
 */
export interface GetRoleV2OutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
