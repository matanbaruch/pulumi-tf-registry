// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CseEntityNormalizationConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing CseEntityNormalizationConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CseEntityNormalizationConfigurationState, opts?: pulumi.CustomResourceOptions): CseEntityNormalizationConfiguration {
        return new CseEntityNormalizationConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sumologic:index/cseEntityNormalizationConfiguration:CseEntityNormalizationConfiguration';

    /**
     * Returns true if the given object is an instance of CseEntityNormalizationConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CseEntityNormalizationConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CseEntityNormalizationConfiguration.__pulumiType;
    }

    public readonly awsNormalizationEnabled!: pulumi.Output<boolean>;
    public readonly defaultNormalizedDomain!: pulumi.Output<string | undefined>;
    public readonly domainMappings!: pulumi.Output<outputs.CseEntityNormalizationConfigurationDomainMapping[]>;
    public readonly fqdnNormalizationEnabled!: pulumi.Output<boolean>;
    public readonly normalizeHostnames!: pulumi.Output<boolean>;
    public readonly normalizeUsernames!: pulumi.Output<boolean>;
    public readonly windowsNormalizationEnabled!: pulumi.Output<boolean>;

    /**
     * Create a CseEntityNormalizationConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CseEntityNormalizationConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CseEntityNormalizationConfigurationArgs | CseEntityNormalizationConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CseEntityNormalizationConfigurationState | undefined;
            resourceInputs["awsNormalizationEnabled"] = state ? state.awsNormalizationEnabled : undefined;
            resourceInputs["defaultNormalizedDomain"] = state ? state.defaultNormalizedDomain : undefined;
            resourceInputs["domainMappings"] = state ? state.domainMappings : undefined;
            resourceInputs["fqdnNormalizationEnabled"] = state ? state.fqdnNormalizationEnabled : undefined;
            resourceInputs["normalizeHostnames"] = state ? state.normalizeHostnames : undefined;
            resourceInputs["normalizeUsernames"] = state ? state.normalizeUsernames : undefined;
            resourceInputs["windowsNormalizationEnabled"] = state ? state.windowsNormalizationEnabled : undefined;
        } else {
            const args = argsOrState as CseEntityNormalizationConfigurationArgs | undefined;
            if ((!args || args.awsNormalizationEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsNormalizationEnabled'");
            }
            if ((!args || args.domainMappings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainMappings'");
            }
            if ((!args || args.fqdnNormalizationEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fqdnNormalizationEnabled'");
            }
            if ((!args || args.normalizeHostnames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'normalizeHostnames'");
            }
            if ((!args || args.normalizeUsernames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'normalizeUsernames'");
            }
            if ((!args || args.windowsNormalizationEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'windowsNormalizationEnabled'");
            }
            resourceInputs["awsNormalizationEnabled"] = args ? args.awsNormalizationEnabled : undefined;
            resourceInputs["defaultNormalizedDomain"] = args ? args.defaultNormalizedDomain : undefined;
            resourceInputs["domainMappings"] = args ? args.domainMappings : undefined;
            resourceInputs["fqdnNormalizationEnabled"] = args ? args.fqdnNormalizationEnabled : undefined;
            resourceInputs["normalizeHostnames"] = args ? args.normalizeHostnames : undefined;
            resourceInputs["normalizeUsernames"] = args ? args.normalizeUsernames : undefined;
            resourceInputs["windowsNormalizationEnabled"] = args ? args.windowsNormalizationEnabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CseEntityNormalizationConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CseEntityNormalizationConfiguration resources.
 */
export interface CseEntityNormalizationConfigurationState {
    awsNormalizationEnabled?: pulumi.Input<boolean>;
    defaultNormalizedDomain?: pulumi.Input<string>;
    domainMappings?: pulumi.Input<pulumi.Input<inputs.CseEntityNormalizationConfigurationDomainMapping>[]>;
    fqdnNormalizationEnabled?: pulumi.Input<boolean>;
    normalizeHostnames?: pulumi.Input<boolean>;
    normalizeUsernames?: pulumi.Input<boolean>;
    windowsNormalizationEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a CseEntityNormalizationConfiguration resource.
 */
export interface CseEntityNormalizationConfigurationArgs {
    awsNormalizationEnabled: pulumi.Input<boolean>;
    defaultNormalizedDomain?: pulumi.Input<string>;
    domainMappings: pulumi.Input<pulumi.Input<inputs.CseEntityNormalizationConfigurationDomainMapping>[]>;
    fqdnNormalizationEnabled: pulumi.Input<boolean>;
    normalizeHostnames: pulumi.Input<boolean>;
    normalizeUsernames: pulumi.Input<boolean>;
    windowsNormalizationEnabled: pulumi.Input<boolean>;
}
