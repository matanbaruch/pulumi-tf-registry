// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AwsInventorySourceAuthentication {
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    sharedAccessPolicyKey?: pulumi.Input<string>;
    sharedAccessPolicyName?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AwsInventorySourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface AwsInventorySourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface AwsInventorySourcePath {
    bucketName?: pulumi.Input<string>;
    consumerGroup?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.AwsInventorySourcePathCustomService>[]>;
    eventHubName?: pulumi.Input<string>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    namespace?: pulumi.Input<string>;
    pathExpression?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.AwsInventorySourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.AwsInventorySourcePathTagFilter>[]>;
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface AwsInventorySourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface AwsInventorySourcePathSnsTopicOrSubscriptionArn {
    arn: pulumi.Input<string>;
    isSuccess: pulumi.Input<boolean>;
}

export interface AwsInventorySourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface AwsXraySourceAuthentication {
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    sharedAccessPolicyKey?: pulumi.Input<string>;
    sharedAccessPolicyName?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AwsXraySourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface AwsXraySourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface AwsXraySourcePath {
    bucketName?: pulumi.Input<string>;
    consumerGroup?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.AwsXraySourcePathCustomService>[]>;
    eventHubName?: pulumi.Input<string>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    namespace?: pulumi.Input<string>;
    pathExpression?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.AwsXraySourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.AwsXraySourcePathTagFilter>[]>;
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface AwsXraySourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface AwsXraySourcePathSnsTopicOrSubscriptionArn {
    arn: pulumi.Input<string>;
    isSuccess: pulumi.Input<boolean>;
}

export interface AwsXraySourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface AzureEventHubLogSourceAuthentication {
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    sharedAccessPolicyKey?: pulumi.Input<string>;
    sharedAccessPolicyName?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AzureEventHubLogSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface AzureEventHubLogSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface AzureEventHubLogSourcePath {
    bucketName?: pulumi.Input<string>;
    consumerGroup?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.AzureEventHubLogSourcePathCustomService>[]>;
    eventHubName?: pulumi.Input<string>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    namespace?: pulumi.Input<string>;
    pathExpression?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.AzureEventHubLogSourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.AzureEventHubLogSourcePathTagFilter>[]>;
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface AzureEventHubLogSourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface AzureEventHubLogSourcePathSnsTopicOrSubscriptionArn {
    arn: pulumi.Input<string>;
    isSuccess: pulumi.Input<boolean>;
}

export interface AzureEventHubLogSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface CloudfrontSourceAuthentication {
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    sharedAccessPolicyKey?: pulumi.Input<string>;
    sharedAccessPolicyName?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CloudfrontSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface CloudfrontSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface CloudfrontSourcePath {
    bucketName?: pulumi.Input<string>;
    consumerGroup?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.CloudfrontSourcePathCustomService>[]>;
    eventHubName?: pulumi.Input<string>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    namespace?: pulumi.Input<string>;
    pathExpression?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.CloudfrontSourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.CloudfrontSourcePathTagFilter>[]>;
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface CloudfrontSourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface CloudfrontSourcePathSnsTopicOrSubscriptionArn {
    arn: pulumi.Input<string>;
    isSuccess: pulumi.Input<boolean>;
}

export interface CloudfrontSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface CloudsyslogSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface CloudsyslogSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface CloudtrailSourceAuthentication {
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    sharedAccessPolicyKey?: pulumi.Input<string>;
    sharedAccessPolicyName?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CloudtrailSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface CloudtrailSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface CloudtrailSourcePath {
    bucketName?: pulumi.Input<string>;
    consumerGroup?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.CloudtrailSourcePathCustomService>[]>;
    eventHubName?: pulumi.Input<string>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    namespace?: pulumi.Input<string>;
    pathExpression?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.CloudtrailSourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.CloudtrailSourcePathTagFilter>[]>;
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface CloudtrailSourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface CloudtrailSourcePathSnsTopicOrSubscriptionArn {
    arn: pulumi.Input<string>;
    isSuccess: pulumi.Input<boolean>;
}

export interface CloudtrailSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface CloudwatchSourceAuthentication {
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    sharedAccessPolicyKey?: pulumi.Input<string>;
    sharedAccessPolicyName?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CloudwatchSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface CloudwatchSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface CloudwatchSourcePath {
    bucketName?: pulumi.Input<string>;
    consumerGroup?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.CloudwatchSourcePathCustomService>[]>;
    eventHubName?: pulumi.Input<string>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    namespace?: pulumi.Input<string>;
    pathExpression?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.CloudwatchSourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.CloudwatchSourcePathTagFilter>[]>;
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface CloudwatchSourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface CloudwatchSourcePathSnsTopicOrSubscriptionArn {
    arn: pulumi.Input<string>;
    isSuccess: pulumi.Input<boolean>;
}

export interface CloudwatchSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface ContentPermissionPermission {
    permissionName: pulumi.Input<string>;
    sourceId: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface ContentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CseAggregationRuleAggregationFunction {
    arguments: pulumi.Input<pulumi.Input<string>[]>;
    function: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface CseAggregationRuleEntitySelector {
    entityType: pulumi.Input<string>;
    expression: pulumi.Input<string>;
}

export interface CseAggregationRuleSeverityMapping {
    default?: pulumi.Input<number>;
    field?: pulumi.Input<string>;
    mappings?: pulumi.Input<pulumi.Input<inputs.CseAggregationRuleSeverityMappingMapping>[]>;
    type: pulumi.Input<string>;
}

export interface CseAggregationRuleSeverityMappingMapping {
    from: pulumi.Input<string>;
    to: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface CseChainRuleEntitySelector {
    entityType: pulumi.Input<string>;
    expression: pulumi.Input<string>;
}

export interface CseChainRuleExpressionsAndLimit {
    expression: pulumi.Input<string>;
    limit: pulumi.Input<number>;
}

export interface CseCustomInsightDynamicSeverity {
    insightSeverity: pulumi.Input<string>;
    minimumSignalSeverity: pulumi.Input<number>;
}

export interface CseEntityNormalizationConfigurationDomainMapping {
    normalizedDomain: pulumi.Input<string>;
    rawDomain: pulumi.Input<string>;
}

export interface CseFirstSeenRuleEntitySelector {
    entityType: pulumi.Input<string>;
    expression: pulumi.Input<string>;
}

export interface CseLogMappingField {
    alternateValues?: pulumi.Input<pulumi.Input<string>[]>;
    caseInsensitive?: pulumi.Input<boolean>;
    defaultValue?: pulumi.Input<string>;
    fieldJoins?: pulumi.Input<pulumi.Input<string>[]>;
    format?: pulumi.Input<string>;
    formatParameters?: pulumi.Input<pulumi.Input<string>[]>;
    joinDelimiter?: pulumi.Input<string>;
    lookups?: pulumi.Input<pulumi.Input<inputs.CseLogMappingFieldLookup>[]>;
    name: pulumi.Input<string>;
    skippedValues?: pulumi.Input<pulumi.Input<string>[]>;
    splitDelimiter?: pulumi.Input<string>;
    splitIndex?: pulumi.Input<number>;
    timeZone?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
    valueType?: pulumi.Input<string>;
}

export interface CseLogMappingFieldLookup {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CseLogMappingStructuredInput {
    eventIdPattern: pulumi.Input<string>;
    logFormat: pulumi.Input<string>;
    product: pulumi.Input<string>;
    vendor: pulumi.Input<string>;
}

export interface CseLogMappingUnstructuredFields {
    patternNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CseMatchListItem {
    description: pulumi.Input<string>;
    expiration?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CseMatchRuleEntitySelector {
    entityType: pulumi.Input<string>;
    expression: pulumi.Input<string>;
}

export interface CseMatchRuleSeverityMapping {
    default?: pulumi.Input<number>;
    field?: pulumi.Input<string>;
    mappings?: pulumi.Input<pulumi.Input<inputs.CseMatchRuleSeverityMappingMapping>[]>;
    type: pulumi.Input<string>;
}

export interface CseMatchRuleSeverityMappingMapping {
    from: pulumi.Input<string>;
    to: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface CseOutlierRuleAggregationFunctions {
    arguments: pulumi.Input<pulumi.Input<string>[]>;
    function: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface CseOutlierRuleEntitySelector {
    entityType: pulumi.Input<string>;
    expression: pulumi.Input<string>;
}

export interface CseTagSchemaValueOption {
    label?: pulumi.Input<string>;
    link?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CseThresholdRuleEntitySelector {
    entityType: pulumi.Input<string>;
    expression: pulumi.Input<string>;
}

export interface DashboardColoringRule {
    colorThresholds?: pulumi.Input<pulumi.Input<inputs.DashboardColoringRuleColorThreshold>[]>;
    multipleSeriesAggregateFunction: pulumi.Input<string>;
    scope: pulumi.Input<string>;
    singleSeriesAggregateFunction: pulumi.Input<string>;
}

export interface DashboardColoringRuleColorThreshold {
    color: pulumi.Input<string>;
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
}

export interface DashboardLayout {
    grid?: pulumi.Input<inputs.DashboardLayoutGrid>;
}

export interface DashboardLayoutGrid {
    layoutStructures: pulumi.Input<pulumi.Input<inputs.DashboardLayoutGridLayoutStructure>[]>;
}

export interface DashboardLayoutGridLayoutStructure {
    key: pulumi.Input<string>;
    structure: pulumi.Input<string>;
}

export interface DashboardPanel {
    serviceMapPanel?: pulumi.Input<inputs.DashboardPanelServiceMapPanel>;
    sumoSearchPanel?: pulumi.Input<inputs.DashboardPanelSumoSearchPanel>;
    textPanel?: pulumi.Input<inputs.DashboardPanelTextPanel>;
    tracesListPanel?: pulumi.Input<inputs.DashboardPanelTracesListPanel>;
}

export interface DashboardPanelServiceMapPanel {
    application?: pulumi.Input<string>;
    environment?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    keepVisualSettingsConsistentWithParent?: pulumi.Input<boolean>;
    key: pulumi.Input<string>;
    service?: pulumi.Input<string>;
    showRemoteServices?: pulumi.Input<boolean>;
    title?: pulumi.Input<string>;
    visualSettings?: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanel {
    coloringRule?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelColoringRule>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    keepVisualSettingsConsistentWithParent?: pulumi.Input<boolean>;
    key: pulumi.Input<string>;
    linkedDashboard?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelLinkedDashboard>;
    queries?: pulumi.Input<pulumi.Input<inputs.DashboardPanelSumoSearchPanelQuery>[]>;
    timeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRange>;
    title?: pulumi.Input<string>;
    visualSettings?: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelColoringRule {
    colorThresholds?: pulumi.Input<pulumi.Input<inputs.DashboardPanelSumoSearchPanelColoringRuleColorThreshold>[]>;
    multipleSeriesAggregateFunction: pulumi.Input<string>;
    scope: pulumi.Input<string>;
    singleSeriesAggregateFunction: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelColoringRuleColorThreshold {
    color: pulumi.Input<string>;
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
}

export interface DashboardPanelSumoSearchPanelLinkedDashboard {
    id: pulumi.Input<string>;
    includeTimeRange?: pulumi.Input<boolean>;
    includeVariables?: pulumi.Input<boolean>;
    relativePath?: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelQuery {
    metricsQueryData?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelQueryMetricsQueryData>;
    metricsQueryMode?: pulumi.Input<string>;
    outputCardinalityLimit?: pulumi.Input<number>;
    parseMode?: pulumi.Input<string>;
    queryKey: pulumi.Input<string>;
    queryString: pulumi.Input<string>;
    queryType: pulumi.Input<string>;
    timeSource?: pulumi.Input<string>;
    transient?: pulumi.Input<boolean>;
}

export interface DashboardPanelSumoSearchPanelQueryMetricsQueryData {
    aggregationType?: pulumi.Input<string>;
    filters: pulumi.Input<pulumi.Input<inputs.DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter>[]>;
    groupBy?: pulumi.Input<string>;
    metric: pulumi.Input<string>;
    operators?: pulumi.Input<pulumi.Input<inputs.DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator>[]>;
}

export interface DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter {
    key: pulumi.Input<string>;
    negation?: pulumi.Input<boolean>;
    value: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator {
    operatorName: pulumi.Input<string>;
    parameters: pulumi.Input<pulumi.Input<inputs.DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter>[]>;
}

export interface DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelTimeRange {
    beginBoundedTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange>;
    completeLiteralTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange {
    from: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom>;
    to?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom {
    epochTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo {
    epochTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardPanelTextPanel {
    id?: pulumi.Input<string>;
    keepVisualSettingsConsistentWithParent?: pulumi.Input<boolean>;
    key: pulumi.Input<string>;
    text?: pulumi.Input<string>;
    title?: pulumi.Input<string>;
    visualSettings?: pulumi.Input<string>;
}

export interface DashboardPanelTracesListPanel {
    id?: pulumi.Input<string>;
    keepVisualSettingsConsistentWithParent?: pulumi.Input<boolean>;
    key: pulumi.Input<string>;
    queries?: pulumi.Input<pulumi.Input<inputs.DashboardPanelTracesListPanelQuery>[]>;
    timeRange?: pulumi.Input<inputs.DashboardPanelTracesListPanelTimeRange>;
    title?: pulumi.Input<string>;
    visualSettings?: pulumi.Input<string>;
}

export interface DashboardPanelTracesListPanelQuery {
    metricsQueryData?: pulumi.Input<inputs.DashboardPanelTracesListPanelQueryMetricsQueryData>;
    metricsQueryMode?: pulumi.Input<string>;
    outputCardinalityLimit?: pulumi.Input<number>;
    parseMode?: pulumi.Input<string>;
    queryKey: pulumi.Input<string>;
    queryString: pulumi.Input<string>;
    queryType: pulumi.Input<string>;
    timeSource?: pulumi.Input<string>;
    transient?: pulumi.Input<boolean>;
}

export interface DashboardPanelTracesListPanelQueryMetricsQueryData {
    aggregationType?: pulumi.Input<string>;
    filters: pulumi.Input<pulumi.Input<inputs.DashboardPanelTracesListPanelQueryMetricsQueryDataFilter>[]>;
    groupBy?: pulumi.Input<string>;
    metric: pulumi.Input<string>;
    operators?: pulumi.Input<pulumi.Input<inputs.DashboardPanelTracesListPanelQueryMetricsQueryDataOperator>[]>;
}

export interface DashboardPanelTracesListPanelQueryMetricsQueryDataFilter {
    key: pulumi.Input<string>;
    negation?: pulumi.Input<boolean>;
    value: pulumi.Input<string>;
}

export interface DashboardPanelTracesListPanelQueryMetricsQueryDataOperator {
    operatorName: pulumi.Input<string>;
    parameters: pulumi.Input<pulumi.Input<inputs.DashboardPanelTracesListPanelQueryMetricsQueryDataOperatorParameter>[]>;
}

export interface DashboardPanelTracesListPanelQueryMetricsQueryDataOperatorParameter {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DashboardPanelTracesListPanelTimeRange {
    beginBoundedTimeRange?: pulumi.Input<inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRange>;
    completeLiteralTimeRange?: pulumi.Input<inputs.DashboardPanelTracesListPanelTimeRangeCompleteLiteralTimeRange>;
}

export interface DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRange {
    from: pulumi.Input<inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeFrom>;
    to?: pulumi.Input<inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeTo>;
}

export interface DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeFrom {
    epochTimeRange?: pulumi.Input<inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange>;
}

export interface DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeTo {
    epochTimeRange?: pulumi.Input<inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange>;
}

export interface DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface DashboardPanelTracesListPanelTimeRangeCompleteLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardTimeRange {
    beginBoundedTimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRange>;
    completeLiteralTimeRange?: pulumi.Input<inputs.DashboardTimeRangeCompleteLiteralTimeRange>;
}

export interface DashboardTimeRangeBeginBoundedTimeRange {
    from: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeFrom>;
    to?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeTo>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeFrom {
    epochTimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeTo {
    epochTimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface DashboardTimeRangeCompleteLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardTopologyLabelMap {
    datas: pulumi.Input<pulumi.Input<inputs.DashboardTopologyLabelMapData>[]>;
}

export interface DashboardTopologyLabelMapData {
    label: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DashboardVariable {
    allowMultiSelect?: pulumi.Input<boolean>;
    defaultValue?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    hideFromUi?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    includeAllOption?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    sourceDefinition: pulumi.Input<inputs.DashboardVariableSourceDefinition>;
}

export interface DashboardVariableSourceDefinition {
    csvVariableSourceDefinition?: pulumi.Input<inputs.DashboardVariableSourceDefinitionCsvVariableSourceDefinition>;
    logQueryVariableSourceDefinition?: pulumi.Input<inputs.DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition>;
    metadataVariableSourceDefinition?: pulumi.Input<inputs.DashboardVariableSourceDefinitionMetadataVariableSourceDefinition>;
}

export interface DashboardVariableSourceDefinitionCsvVariableSourceDefinition {
    values: pulumi.Input<string>;
}

export interface DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition {
    field: pulumi.Input<string>;
    query: pulumi.Input<string>;
}

export interface DashboardVariableSourceDefinitionMetadataVariableSourceDefinition {
    filter: pulumi.Input<string>;
    key: pulumi.Input<string>;
}

export interface ElbSourceAuthentication {
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    sharedAccessPolicyKey?: pulumi.Input<string>;
    sharedAccessPolicyName?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ElbSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface ElbSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface ElbSourcePath {
    bucketName?: pulumi.Input<string>;
    consumerGroup?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.ElbSourcePathCustomService>[]>;
    eventHubName?: pulumi.Input<string>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    namespace?: pulumi.Input<string>;
    pathExpression?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.ElbSourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.ElbSourcePathTagFilter>[]>;
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface ElbSourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface ElbSourcePathSnsTopicOrSubscriptionArn {
    arn: pulumi.Input<string>;
    isSuccess: pulumi.Input<boolean>;
}

export interface ElbSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface FolderTimeouts {
    delete?: pulumi.Input<string>;
}

export interface GcpMetricsSourceAuthentication {
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    sharedAccessPolicyKey?: pulumi.Input<string>;
    sharedAccessPolicyName?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GcpMetricsSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface GcpMetricsSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface GcpMetricsSourcePath {
    bucketName?: pulumi.Input<string>;
    consumerGroup?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.GcpMetricsSourcePathCustomService>[]>;
    eventHubName?: pulumi.Input<string>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    namespace?: pulumi.Input<string>;
    pathExpression?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.GcpMetricsSourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.GcpMetricsSourcePathTagFilter>[]>;
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface GcpMetricsSourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface GcpMetricsSourcePathSnsTopicOrSubscriptionArn {
    arn: pulumi.Input<string>;
    isSuccess: pulumi.Input<boolean>;
}

export interface GcpMetricsSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface GcpSourceAuthentication {
    type?: pulumi.Input<string>;
}

export interface GcpSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface GcpSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface GcpSourcePath {
    type?: pulumi.Input<string>;
}

export interface GetAdminRecommendedFolderTimeouts {
    read?: string;
}

export interface GetAdminRecommendedFolderTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface HierarchyFilter {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface HierarchyLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    entityType: pulumi.Input<string>;
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HttpSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface HttpSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface KinesisLogSourceAuthentication {
    accessKey?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface KinesisLogSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface KinesisLogSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface KinesisLogSourcePath {
    bucketName?: pulumi.Input<string>;
    pathExpression?: pulumi.Input<string>;
    scanInterval?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
}

export interface KinesisMetricsSourceAuthentication {
    accessKey?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface KinesisMetricsSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface KinesisMetricsSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface KinesisMetricsSourcePath {
    tagFilters?: pulumi.Input<pulumi.Input<inputs.KinesisMetricsSourcePathTagFilter>[]>;
    type: pulumi.Input<string>;
}

export interface KinesisMetricsSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface LocalFileSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface LocalFileSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface LogSearchQueryParameter {
    dataType: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface LogSearchSchedule {
    cronExpression?: pulumi.Input<string>;
    muteErrorEmails?: pulumi.Input<boolean>;
    notification: pulumi.Input<inputs.LogSearchScheduleNotification>;
    parameters?: pulumi.Input<pulumi.Input<inputs.LogSearchScheduleParameter>[]>;
    parseableTimeRange: pulumi.Input<inputs.LogSearchScheduleParseableTimeRange>;
    scheduleType: pulumi.Input<string>;
    threshold?: pulumi.Input<inputs.LogSearchScheduleThreshold>;
    timeZone: pulumi.Input<string>;
}

export interface LogSearchScheduleNotification {
    alertSearchNotification?: pulumi.Input<inputs.LogSearchScheduleNotificationAlertSearchNotification>;
    cseSignalNotification?: pulumi.Input<inputs.LogSearchScheduleNotificationCseSignalNotification>;
    emailSearchNotification?: pulumi.Input<inputs.LogSearchScheduleNotificationEmailSearchNotification>;
    saveToLookupNotification?: pulumi.Input<inputs.LogSearchScheduleNotificationSaveToLookupNotification>;
    saveToViewNotification?: pulumi.Input<inputs.LogSearchScheduleNotificationSaveToViewNotification>;
    serviceNowSearchNotification?: pulumi.Input<inputs.LogSearchScheduleNotificationServiceNowSearchNotification>;
    webhookSearchNotification?: pulumi.Input<inputs.LogSearchScheduleNotificationWebhookSearchNotification>;
}

export interface LogSearchScheduleNotificationAlertSearchNotification {
    sourceId: pulumi.Input<string>;
}

export interface LogSearchScheduleNotificationCseSignalNotification {
    recordType: pulumi.Input<string>;
}

export interface LogSearchScheduleNotificationEmailSearchNotification {
    includeCsvAttachment?: pulumi.Input<boolean>;
    includeHistogram?: pulumi.Input<boolean>;
    includeQuery?: pulumi.Input<boolean>;
    includeResultSet?: pulumi.Input<boolean>;
    subjectTemplate?: pulumi.Input<string>;
    toLists: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LogSearchScheduleNotificationSaveToLookupNotification {
    isLookupMergeOperation: pulumi.Input<boolean>;
    lookupFilePath: pulumi.Input<string>;
}

export interface LogSearchScheduleNotificationSaveToViewNotification {
    viewName: pulumi.Input<string>;
}

export interface LogSearchScheduleNotificationServiceNowSearchNotification {
    externalId: pulumi.Input<string>;
    fields?: pulumi.Input<inputs.LogSearchScheduleNotificationServiceNowSearchNotificationFields>;
}

export interface LogSearchScheduleNotificationServiceNowSearchNotificationFields {
    eventType?: pulumi.Input<string>;
    node?: pulumi.Input<string>;
    resource?: pulumi.Input<string>;
    severity?: pulumi.Input<number>;
}

export interface LogSearchScheduleNotificationWebhookSearchNotification {
    itemizeAlerts?: pulumi.Input<boolean>;
    maxItemizedAlerts?: pulumi.Input<number>;
    payload?: pulumi.Input<string>;
    webhookId: pulumi.Input<string>;
}

export interface LogSearchScheduleParameter {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface LogSearchScheduleParseableTimeRange {
    beginBoundedTimeRange?: pulumi.Input<inputs.LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange>;
    completeLiteralTimeRange?: pulumi.Input<inputs.LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange>;
}

export interface LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange {
    from: pulumi.Input<inputs.LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom>;
    to?: pulumi.Input<inputs.LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo>;
}

export interface LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom {
    epochTimeRange?: pulumi.Input<inputs.LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange>;
}

export interface LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo {
    epochTimeRange?: pulumi.Input<inputs.LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange>;
}

export interface LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface LogSearchScheduleThreshold {
    count: pulumi.Input<number>;
    operator: pulumi.Input<string>;
    thresholdType: pulumi.Input<string>;
}

export interface LogSearchTimeRange {
    beginBoundedTimeRange?: pulumi.Input<inputs.LogSearchTimeRangeBeginBoundedTimeRange>;
    completeLiteralTimeRange?: pulumi.Input<inputs.LogSearchTimeRangeCompleteLiteralTimeRange>;
}

export interface LogSearchTimeRangeBeginBoundedTimeRange {
    from: pulumi.Input<inputs.LogSearchTimeRangeBeginBoundedTimeRangeFrom>;
    to?: pulumi.Input<inputs.LogSearchTimeRangeBeginBoundedTimeRangeTo>;
}

export interface LogSearchTimeRangeBeginBoundedTimeRangeFrom {
    epochTimeRange?: pulumi.Input<inputs.LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange>;
}

export interface LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface LogSearchTimeRangeBeginBoundedTimeRangeTo {
    epochTimeRange?: pulumi.Input<inputs.LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange>;
}

export interface LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface LogSearchTimeRangeCompleteLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface LookupTableField {
    fieldName: pulumi.Input<string>;
    fieldType: pulumi.Input<string>;
}

export interface MetadataSourceAuthentication {
    accessKey?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MetadataSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface MetadataSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface MetadataSourcePath {
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface MetricsSearchMetricsQuery {
    query: pulumi.Input<string>;
    rowId: pulumi.Input<string>;
}

export interface MetricsSearchTimeRange {
    beginBoundedTimeRange?: pulumi.Input<inputs.MetricsSearchTimeRangeBeginBoundedTimeRange>;
    completeLiteralTimeRange?: pulumi.Input<inputs.MetricsSearchTimeRangeCompleteLiteralTimeRange>;
}

export interface MetricsSearchTimeRangeBeginBoundedTimeRange {
    from: pulumi.Input<inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeFrom>;
    to?: pulumi.Input<inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeTo>;
}

export interface MetricsSearchTimeRangeBeginBoundedTimeRangeFrom {
    epochTimeRange?: pulumi.Input<inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange>;
}

export interface MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface MetricsSearchTimeRangeBeginBoundedTimeRangeTo {
    epochTimeRange?: pulumi.Input<inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange>;
}

export interface MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface MetricsSearchTimeRangeCompleteLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface MonitorFolderObjPermission {
    permissions: pulumi.Input<pulumi.Input<string>[]>;
    subjectId: pulumi.Input<string>;
    subjectType: pulumi.Input<string>;
}

export interface MonitorNotification {
    notification: pulumi.Input<inputs.MonitorNotificationNotification>;
    runForTriggerTypes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorNotificationNotification {
    /**
     * @deprecated Deprecated
     */
    actionType?: pulumi.Input<string>;
    connectionId?: pulumi.Input<string>;
    connectionType?: pulumi.Input<string>;
    messageBody?: pulumi.Input<string>;
    payloadOverride?: pulumi.Input<string>;
    recipients?: pulumi.Input<pulumi.Input<string>[]>;
    resolutionPayloadOverride?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
    timeZone?: pulumi.Input<string>;
}

export interface MonitorObjPermission {
    permissions: pulumi.Input<pulumi.Input<string>[]>;
    subjectId: pulumi.Input<string>;
    subjectType: pulumi.Input<string>;
}

export interface MonitorQuery {
    query: pulumi.Input<string>;
    rowId: pulumi.Input<string>;
}

export interface MonitorTrigger {
    detectionMethod?: pulumi.Input<string>;
    minDataPoints?: pulumi.Input<number>;
    occurrenceType?: pulumi.Input<string>;
    resolutionWindow?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
    timeRange?: pulumi.Input<string>;
    triggerSource?: pulumi.Input<string>;
    triggerType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditions {
    logsAnomalyCondition?: pulumi.Input<inputs.MonitorTriggerConditionsLogsAnomalyCondition>;
    logsMissingDataCondition?: pulumi.Input<inputs.MonitorTriggerConditionsLogsMissingDataCondition>;
    logsOutlierCondition?: pulumi.Input<inputs.MonitorTriggerConditionsLogsOutlierCondition>;
    logsStaticCondition?: pulumi.Input<inputs.MonitorTriggerConditionsLogsStaticCondition>;
    metricsMissingDataCondition?: pulumi.Input<inputs.MonitorTriggerConditionsMetricsMissingDataCondition>;
    metricsOutlierCondition?: pulumi.Input<inputs.MonitorTriggerConditionsMetricsOutlierCondition>;
    metricsStaticCondition?: pulumi.Input<inputs.MonitorTriggerConditionsMetricsStaticCondition>;
    sloBurnRateCondition?: pulumi.Input<inputs.MonitorTriggerConditionsSloBurnRateCondition>;
    sloSliCondition?: pulumi.Input<inputs.MonitorTriggerConditionsSloSliCondition>;
}

export interface MonitorTriggerConditionsLogsAnomalyCondition {
    anomalyDetectorType: pulumi.Input<string>;
    critical: pulumi.Input<inputs.MonitorTriggerConditionsLogsAnomalyConditionCritical>;
    direction?: pulumi.Input<string>;
    field: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsLogsAnomalyConditionCritical {
    minAnomalyCount?: pulumi.Input<number>;
    sensitivity?: pulumi.Input<number>;
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsLogsMissingDataCondition {
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsLogsOutlierCondition {
    critical?: pulumi.Input<inputs.MonitorTriggerConditionsLogsOutlierConditionCritical>;
    direction?: pulumi.Input<string>;
    field?: pulumi.Input<string>;
    warning?: pulumi.Input<inputs.MonitorTriggerConditionsLogsOutlierConditionWarning>;
}

export interface MonitorTriggerConditionsLogsOutlierConditionCritical {
    consecutive?: pulumi.Input<number>;
    threshold?: pulumi.Input<number>;
    window?: pulumi.Input<number>;
}

export interface MonitorTriggerConditionsLogsOutlierConditionWarning {
    consecutive?: pulumi.Input<number>;
    threshold?: pulumi.Input<number>;
    window?: pulumi.Input<number>;
}

export interface MonitorTriggerConditionsLogsStaticCondition {
    critical?: pulumi.Input<inputs.MonitorTriggerConditionsLogsStaticConditionCritical>;
    field?: pulumi.Input<string>;
    warning?: pulumi.Input<inputs.MonitorTriggerConditionsLogsStaticConditionWarning>;
}

export interface MonitorTriggerConditionsLogsStaticConditionCritical {
    alert: pulumi.Input<inputs.MonitorTriggerConditionsLogsStaticConditionCriticalAlert>;
    resolution: pulumi.Input<inputs.MonitorTriggerConditionsLogsStaticConditionCriticalResolution>;
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsLogsStaticConditionCriticalAlert {
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsLogsStaticConditionCriticalResolution {
    resolutionWindow?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsLogsStaticConditionWarning {
    alert: pulumi.Input<inputs.MonitorTriggerConditionsLogsStaticConditionWarningAlert>;
    resolution: pulumi.Input<inputs.MonitorTriggerConditionsLogsStaticConditionWarningResolution>;
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsLogsStaticConditionWarningAlert {
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsLogsStaticConditionWarningResolution {
    resolutionWindow?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsMetricsMissingDataCondition {
    timeRange: pulumi.Input<string>;
    triggerSource: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsMetricsOutlierCondition {
    critical?: pulumi.Input<inputs.MonitorTriggerConditionsMetricsOutlierConditionCritical>;
    direction?: pulumi.Input<string>;
    warning?: pulumi.Input<inputs.MonitorTriggerConditionsMetricsOutlierConditionWarning>;
}

export interface MonitorTriggerConditionsMetricsOutlierConditionCritical {
    baselineWindow?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
}

export interface MonitorTriggerConditionsMetricsOutlierConditionWarning {
    baselineWindow?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
}

export interface MonitorTriggerConditionsMetricsStaticCondition {
    critical?: pulumi.Input<inputs.MonitorTriggerConditionsMetricsStaticConditionCritical>;
    warning?: pulumi.Input<inputs.MonitorTriggerConditionsMetricsStaticConditionWarning>;
}

export interface MonitorTriggerConditionsMetricsStaticConditionCritical {
    alert: pulumi.Input<inputs.MonitorTriggerConditionsMetricsStaticConditionCriticalAlert>;
    occurrenceType: pulumi.Input<string>;
    resolution: pulumi.Input<inputs.MonitorTriggerConditionsMetricsStaticConditionCriticalResolution>;
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsMetricsStaticConditionCriticalAlert {
    minDataPoints?: pulumi.Input<number>;
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsMetricsStaticConditionCriticalResolution {
    minDataPoints?: pulumi.Input<number>;
    occurrenceType?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsMetricsStaticConditionWarning {
    alert: pulumi.Input<inputs.MonitorTriggerConditionsMetricsStaticConditionWarningAlert>;
    occurrenceType: pulumi.Input<string>;
    resolution: pulumi.Input<inputs.MonitorTriggerConditionsMetricsStaticConditionWarningResolution>;
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsMetricsStaticConditionWarningAlert {
    minDataPoints?: pulumi.Input<number>;
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsMetricsStaticConditionWarningResolution {
    minDataPoints?: pulumi.Input<number>;
    occurrenceType?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsSloBurnRateCondition {
    critical?: pulumi.Input<inputs.MonitorTriggerConditionsSloBurnRateConditionCritical>;
    warning?: pulumi.Input<inputs.MonitorTriggerConditionsSloBurnRateConditionWarning>;
}

export interface MonitorTriggerConditionsSloBurnRateConditionCritical {
    burnRateThreshold?: pulumi.Input<number>;
    burnRates?: pulumi.Input<pulumi.Input<inputs.MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRate>[]>;
    timeRange?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRate {
    burnRateThreshold: pulumi.Input<number>;
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsSloBurnRateConditionWarning {
    burnRateThreshold?: pulumi.Input<number>;
    burnRates?: pulumi.Input<pulumi.Input<inputs.MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate>[]>;
    timeRange?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate {
    burnRateThreshold: pulumi.Input<number>;
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsSloSliCondition {
    critical?: pulumi.Input<inputs.MonitorTriggerConditionsSloSliConditionCritical>;
    warning?: pulumi.Input<inputs.MonitorTriggerConditionsSloSliConditionWarning>;
}

export interface MonitorTriggerConditionsSloSliConditionCritical {
    sliThreshold: pulumi.Input<number>;
}

export interface MonitorTriggerConditionsSloSliConditionWarning {
    sliThreshold: pulumi.Input<number>;
}

export interface MutingScheduleMonitor {
    all?: pulumi.Input<boolean>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MutingScheduleNotificationGroup {
    groupKey: pulumi.Input<string>;
    groupValues: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MutingScheduleSchedule {
    duration: pulumi.Input<number>;
    rrule?: pulumi.Input<string>;
    startDate: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
    timezone: pulumi.Input<string>;
}

export interface PoliciesUserConcurrentSessionsLimit {
    enabled: pulumi.Input<boolean>;
    maxConcurrentSessions?: pulumi.Input<number>;
}

export interface PollingSourceAuthentication {
    accessKey?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface PollingSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface PollingSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface PollingSourcePath {
    bucketName?: pulumi.Input<string>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    pathExpression?: pulumi.Input<string>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.PollingSourcePathTagFilter>[]>;
    type: pulumi.Input<string>;
}

export interface PollingSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface RoleV2SelectedView {
    viewFilter?: pulumi.Input<string>;
    viewName: pulumi.Input<string>;
}

export interface RumSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface RumSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface RumSourcePath {
    applicationName?: pulumi.Input<string>;
    customTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    deploymentEnvironment?: pulumi.Input<string>;
    ignoreUrls?: pulumi.Input<pulumi.Input<string>[]>;
    propagateTraceHeaderCorsUrls?: pulumi.Input<pulumi.Input<string>[]>;
    samplingRate?: pulumi.Input<number>;
    selectedCountry?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}

export interface S3ArchiveSourceAuthentication {
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    sharedAccessPolicyKey?: pulumi.Input<string>;
    sharedAccessPolicyName?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface S3ArchiveSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface S3ArchiveSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface S3ArchiveSourcePath {
    bucketName?: pulumi.Input<string>;
    consumerGroup?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.S3ArchiveSourcePathCustomService>[]>;
    eventHubName?: pulumi.Input<string>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    namespace?: pulumi.Input<string>;
    pathExpression?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.S3ArchiveSourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.S3ArchiveSourcePathTagFilter>[]>;
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface S3ArchiveSourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface S3ArchiveSourcePathSnsTopicOrSubscriptionArn {
    arn: pulumi.Input<string>;
    isSuccess: pulumi.Input<boolean>;
}

export interface S3ArchiveSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface S3AuditSourceAuthentication {
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    sharedAccessPolicyKey?: pulumi.Input<string>;
    sharedAccessPolicyName?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface S3AuditSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface S3AuditSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface S3AuditSourcePath {
    bucketName?: pulumi.Input<string>;
    consumerGroup?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.S3AuditSourcePathCustomService>[]>;
    eventHubName?: pulumi.Input<string>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    namespace?: pulumi.Input<string>;
    pathExpression?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.S3AuditSourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.S3AuditSourcePathTagFilter>[]>;
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface S3AuditSourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface S3AuditSourcePathSnsTopicOrSubscriptionArn {
    arn: pulumi.Input<string>;
    isSuccess: pulumi.Input<boolean>;
}

export interface S3AuditSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface S3SourceAuthentication {
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    sharedAccessPolicyKey?: pulumi.Input<string>;
    sharedAccessPolicyName?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface S3SourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface S3SourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface S3SourcePath {
    bucketName?: pulumi.Input<string>;
    consumerGroup?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.S3SourcePathCustomService>[]>;
    eventHubName?: pulumi.Input<string>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    namespace?: pulumi.Input<string>;
    pathExpression?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.S3SourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.S3SourcePathTagFilter>[]>;
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface S3SourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface S3SourcePathSnsTopicOrSubscriptionArn {
    arn: pulumi.Input<string>;
    isSuccess: pulumi.Input<boolean>;
}

export interface S3SourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface SamlConfigurationOnDemandProvisioningEnabled {
    firstNameAttribute?: pulumi.Input<string>;
    lastNameAttribute?: pulumi.Input<string>;
    onDemandProvisioningRoles: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SloCompliance {
    complianceType: pulumi.Input<string>;
    size: pulumi.Input<string>;
    startFrom?: pulumi.Input<string>;
    target: pulumi.Input<number>;
    timezone: pulumi.Input<string>;
}

export interface SloIndicator {
    monitorBasedEvaluation?: pulumi.Input<inputs.SloIndicatorMonitorBasedEvaluation>;
    requestBasedEvaluation?: pulumi.Input<inputs.SloIndicatorRequestBasedEvaluation>;
    windowBasedEvaluation?: pulumi.Input<inputs.SloIndicatorWindowBasedEvaluation>;
}

export interface SloIndicatorMonitorBasedEvaluation {
    monitorTriggers: pulumi.Input<inputs.SloIndicatorMonitorBasedEvaluationMonitorTriggers>;
}

export interface SloIndicatorMonitorBasedEvaluationMonitorTriggers {
    monitorId: pulumi.Input<string>;
    triggerTypes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SloIndicatorRequestBasedEvaluation {
    op?: pulumi.Input<string>;
    queries: pulumi.Input<pulumi.Input<inputs.SloIndicatorRequestBasedEvaluationQuery>[]>;
    queryType: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
}

export interface SloIndicatorRequestBasedEvaluationQuery {
    queryGroupType: pulumi.Input<string>;
    queryGroups: pulumi.Input<pulumi.Input<inputs.SloIndicatorRequestBasedEvaluationQueryQueryGroup>[]>;
}

export interface SloIndicatorRequestBasedEvaluationQueryQueryGroup {
    field?: pulumi.Input<string>;
    query: pulumi.Input<string>;
    rowId: pulumi.Input<string>;
    useRowCount: pulumi.Input<boolean>;
}

export interface SloIndicatorWindowBasedEvaluation {
    aggregation?: pulumi.Input<string>;
    op: pulumi.Input<string>;
    queries: pulumi.Input<pulumi.Input<inputs.SloIndicatorWindowBasedEvaluationQuery>[]>;
    queryType: pulumi.Input<string>;
    size: pulumi.Input<string>;
    threshold: pulumi.Input<number>;
}

export interface SloIndicatorWindowBasedEvaluationQuery {
    queryGroupType: pulumi.Input<string>;
    queryGroups: pulumi.Input<pulumi.Input<inputs.SloIndicatorWindowBasedEvaluationQueryQueryGroup>[]>;
}

export interface SloIndicatorWindowBasedEvaluationQueryQueryGroup {
    field?: pulumi.Input<string>;
    query: pulumi.Input<string>;
    rowId: pulumi.Input<string>;
    useRowCount: pulumi.Input<boolean>;
}
