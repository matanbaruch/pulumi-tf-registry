// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("bluecat");

/**
 * API Version of REST_API workflow server
 */
export declare const apiVersion: string | undefined;
Object.defineProperty(exports, "apiVersion", {
    get() {
        return __config.get("apiVersion");
    },
    enumerable: true,
});

/**
 * Default is false, to indicate if the password is encrypted
 */
export declare const encryptPassword: boolean | undefined;
Object.defineProperty(exports, "encryptPassword", {
    get() {
        return __config.getObject<boolean>("encryptPassword");
    },
    enumerable: true,
});

/**
 * Password to authenticate with BlueCat Gateway server. The encrypted file name if encrypt_password set to True
 */
export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

/**
 * Port number used for connection for BlueCat Gateway Server.
 */
export declare const port: string | undefined;
Object.defineProperty(exports, "port", {
    get() {
        return __config.get("port");
    },
    enumerable: true,
});

/**
 * BlueCat Gateway IP address.
 */
export declare const server: string | undefined;
Object.defineProperty(exports, "server", {
    get() {
        return __config.get("server");
    },
    enumerable: true,
});

/**
 * The Transport type (HTTP or HTTPS).
 */
export declare const transport: string | undefined;
Object.defineProperty(exports, "transport", {
    get() {
        return __config.get("transport");
    },
    enumerable: true,
});

/**
 * User to authenticate with BlueCat Gateway server.
 */
export declare const username: string | undefined;
Object.defineProperty(exports, "username", {
    get() {
        return __config.get("username");
    },
    enumerable: true,
});

