// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ipv4block extends pulumi.CustomResource {
    /**
     * Get an existing Ipv4block resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ipv4blockState, opts?: pulumi.CustomResourceOptions): Ipv4block {
        return new Ipv4block(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bluecat:index/ipv4block:Ipv4block';

    /**
     * Returns true if the given object is an instance of Ipv4block.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ipv4block {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ipv4block.__pulumiType;
    }

    /**
     * IPv4 Block's address
     */
    public readonly address!: pulumi.Output<string>;
    /**
     * The Block prefix length
     */
    public readonly cidr!: pulumi.Output<string>;
    /**
     * The Configuration. Creating the Block in the default Configuration if doesn't specify
     */
    public readonly configuration!: pulumi.Output<string | undefined>;
    /**
     * The Block name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The parent Block. Specified to creating the child Block. THe Block in CIDR format
     */
    public readonly parentBlock!: pulumi.Output<string | undefined>;
    /**
     * IPv4 Block's properties. Example: attribute=value|
     */
    public readonly properties!: pulumi.Output<string | undefined>;

    /**
     * Create a Ipv4block resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ipv4blockArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ipv4blockArgs | Ipv4blockState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ipv4blockState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["configuration"] = state ? state.configuration : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parentBlock"] = state ? state.parentBlock : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
        } else {
            const args = argsOrState as Ipv4blockArgs | undefined;
            if ((!args || args.address === undefined) && !opts.urn) {
                throw new Error("Missing required property 'address'");
            }
            if ((!args || args.cidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidr'");
            }
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["cidr"] = args ? args.cidr : undefined;
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentBlock"] = args ? args.parentBlock : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ipv4block.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ipv4block resources.
 */
export interface Ipv4blockState {
    /**
     * IPv4 Block's address
     */
    address?: pulumi.Input<string>;
    /**
     * The Block prefix length
     */
    cidr?: pulumi.Input<string>;
    /**
     * The Configuration. Creating the Block in the default Configuration if doesn't specify
     */
    configuration?: pulumi.Input<string>;
    /**
     * The Block name
     */
    name?: pulumi.Input<string>;
    /**
     * The parent Block. Specified to creating the child Block. THe Block in CIDR format
     */
    parentBlock?: pulumi.Input<string>;
    /**
     * IPv4 Block's properties. Example: attribute=value|
     */
    properties?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ipv4block resource.
 */
export interface Ipv4blockArgs {
    /**
     * IPv4 Block's address
     */
    address: pulumi.Input<string>;
    /**
     * The Block prefix length
     */
    cidr: pulumi.Input<string>;
    /**
     * The Configuration. Creating the Block in the default Configuration if doesn't specify
     */
    configuration?: pulumi.Input<string>;
    /**
     * The Block name
     */
    name?: pulumi.Input<string>;
    /**
     * The parent Block. Specified to creating the child Block. THe Block in CIDR format
     */
    parentBlock?: pulumi.Input<string>;
    /**
     * IPv4 Block's properties. Example: attribute=value|
     */
    properties?: pulumi.Input<string>;
}
