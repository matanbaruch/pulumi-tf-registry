// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpv4block(args: GetIpv4blockArgs, opts?: pulumi.InvokeOptions): Promise<GetIpv4blockResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bluecat:index/getIpv4block:getIpv4block", {
        "cidr": args.cidr,
        "configuration": args.configuration,
        "id": args.id,
        "name": args.name,
        "properties": args.properties,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpv4block.
 */
export interface GetIpv4blockArgs {
    cidr: string;
    configuration?: string;
    id?: string;
    name?: string;
    properties?: string;
}

/**
 * A collection of values returned by getIpv4block.
 */
export interface GetIpv4blockResult {
    readonly cidr: string;
    readonly configuration?: string;
    readonly id: string;
    readonly name?: string;
    readonly properties?: string;
}
export function getIpv4blockOutput(args: GetIpv4blockOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpv4blockResult> {
    return pulumi.output(args).apply((a: any) => getIpv4block(a, opts))
}

/**
 * A collection of arguments for invoking getIpv4block.
 */
export interface GetIpv4blockOutputArgs {
    cidr: pulumi.Input<string>;
    configuration?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    properties?: pulumi.Input<string>;
}
