// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpv4network(args: GetIpv4networkArgs, opts?: pulumi.InvokeOptions): Promise<GetIpv4networkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bluecat:index/getIpv4network:getIpv4network", {
        "cidr": args.cidr,
        "configuration": args.configuration,
        "gateway": args.gateway,
        "id": args.id,
        "name": args.name,
        "properties": args.properties,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpv4network.
 */
export interface GetIpv4networkArgs {
    cidr: string;
    configuration?: string;
    gateway?: string;
    id?: string;
    name?: string;
    properties?: string;
}

/**
 * A collection of values returned by getIpv4network.
 */
export interface GetIpv4networkResult {
    readonly cidr: string;
    readonly configuration?: string;
    readonly gateway?: string;
    readonly id: string;
    readonly name?: string;
    readonly properties?: string;
}
export function getIpv4networkOutput(args: GetIpv4networkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpv4networkResult> {
    return pulumi.output(args).apply((a: any) => getIpv4network(a, opts))
}

/**
 * A collection of arguments for invoking getIpv4network.
 */
export interface GetIpv4networkOutputArgs {
    cidr: pulumi.Input<string>;
    configuration?: pulumi.Input<string>;
    gateway?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    properties?: pulumi.Input<string>;
}
