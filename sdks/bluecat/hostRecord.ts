// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class HostRecord extends pulumi.CustomResource {
    /**
     * Get an existing HostRecord resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HostRecordState, opts?: pulumi.CustomResourceOptions): HostRecord {
        return new HostRecord(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bluecat:index/hostRecord:HostRecord';

    /**
     * Returns true if the given object is an instance of HostRecord.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HostRecord {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HostRecord.__pulumiType;
    }

    /**
     * The name of the Host record. Must be FQDN if the Zone is not provided
     */
    public readonly absoluteName!: pulumi.Output<string>;
    /**
     * The Configuration. Creating the Host record in the default Configuration if doesn't specify
     */
    public readonly configuration!: pulumi.Output<string | undefined>;
    /**
     * The IP address that will be linked to the Host record
     */
    public readonly ip4Address!: pulumi.Output<string>;
    /**
     * Host record's properties. Example: attribute=value|
     */
    public readonly properties!: pulumi.Output<string | undefined>;
    /**
     * The TTL value
     */
    public readonly ttl!: pulumi.Output<number | undefined>;
    /**
     * The view which contains the details of the zone. If not provided, record will be created under default view
     */
    public readonly view!: pulumi.Output<string | undefined>;
    /**
     * The Zone in which you want to update a host record. If not provided, the absolute name must be FQDN ones
     */
    public readonly zone!: pulumi.Output<string | undefined>;

    /**
     * Create a HostRecord resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostRecordArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HostRecordArgs | HostRecordState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HostRecordState | undefined;
            resourceInputs["absoluteName"] = state ? state.absoluteName : undefined;
            resourceInputs["configuration"] = state ? state.configuration : undefined;
            resourceInputs["ip4Address"] = state ? state.ip4Address : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
            resourceInputs["view"] = state ? state.view : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as HostRecordArgs | undefined;
            if ((!args || args.absoluteName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'absoluteName'");
            }
            if ((!args || args.ip4Address === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ip4Address'");
            }
            resourceInputs["absoluteName"] = args ? args.absoluteName : undefined;
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["ip4Address"] = args ? args.ip4Address : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["view"] = args ? args.view : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HostRecord.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering HostRecord resources.
 */
export interface HostRecordState {
    /**
     * The name of the Host record. Must be FQDN if the Zone is not provided
     */
    absoluteName?: pulumi.Input<string>;
    /**
     * The Configuration. Creating the Host record in the default Configuration if doesn't specify
     */
    configuration?: pulumi.Input<string>;
    /**
     * The IP address that will be linked to the Host record
     */
    ip4Address?: pulumi.Input<string>;
    /**
     * Host record's properties. Example: attribute=value|
     */
    properties?: pulumi.Input<string>;
    /**
     * The TTL value
     */
    ttl?: pulumi.Input<number>;
    /**
     * The view which contains the details of the zone. If not provided, record will be created under default view
     */
    view?: pulumi.Input<string>;
    /**
     * The Zone in which you want to update a host record. If not provided, the absolute name must be FQDN ones
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HostRecord resource.
 */
export interface HostRecordArgs {
    /**
     * The name of the Host record. Must be FQDN if the Zone is not provided
     */
    absoluteName: pulumi.Input<string>;
    /**
     * The Configuration. Creating the Host record in the default Configuration if doesn't specify
     */
    configuration?: pulumi.Input<string>;
    /**
     * The IP address that will be linked to the Host record
     */
    ip4Address: pulumi.Input<string>;
    /**
     * Host record's properties. Example: attribute=value|
     */
    properties?: pulumi.Input<string>;
    /**
     * The TTL value
     */
    ttl?: pulumi.Input<number>;
    /**
     * The view which contains the details of the zone. If not provided, record will be created under default view
     */
    view?: pulumi.Input<string>;
    /**
     * The Zone in which you want to update a host record. If not provided, the absolute name must be FQDN ones
     */
    zone?: pulumi.Input<string>;
}
