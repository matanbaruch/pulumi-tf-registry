// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getZone(args: GetZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetZoneResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bluecat:index/getZone:getZone", {
        "configuration": args.configuration,
        "deployable": args.deployable,
        "id": args.id,
        "properties": args.properties,
        "serverRoles": args.serverRoles,
        "view": args.view,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getZone.
 */
export interface GetZoneArgs {
    configuration?: string;
    deployable?: string;
    id?: string;
    properties?: string;
    serverRoles?: string[];
    view?: string;
    zone: string;
}

/**
 * A collection of values returned by getZone.
 */
export interface GetZoneResult {
    readonly configuration?: string;
    readonly deployable?: string;
    readonly id: string;
    readonly properties?: string;
    readonly serverRoles?: string[];
    readonly view?: string;
    readonly zone: string;
}
export function getZoneOutput(args: GetZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZoneResult> {
    return pulumi.output(args).apply((a: any) => getZone(a, opts))
}

/**
 * A collection of arguments for invoking getZone.
 */
export interface GetZoneOutputArgs {
    configuration?: pulumi.Input<string>;
    deployable?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    properties?: pulumi.Input<string>;
    serverRoles?: pulumi.Input<pulumi.Input<string>[]>;
    view?: pulumi.Input<string>;
    zone: pulumi.Input<string>;
}
