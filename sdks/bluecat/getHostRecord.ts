// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getHostRecord(args: GetHostRecordArgs, opts?: pulumi.InvokeOptions): Promise<GetHostRecordResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bluecat:index/getHostRecord:getHostRecord", {
        "configuration": args.configuration,
        "fqdn": args.fqdn,
        "id": args.id,
        "ipAddress": args.ipAddress,
        "properties": args.properties,
        "ttl": args.ttl,
        "view": args.view,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHostRecord.
 */
export interface GetHostRecordArgs {
    configuration?: string;
    fqdn: string;
    id?: string;
    ipAddress: string;
    properties?: string;
    ttl?: number;
    view?: string;
    zone?: string;
}

/**
 * A collection of values returned by getHostRecord.
 */
export interface GetHostRecordResult {
    readonly configuration?: string;
    readonly fqdn: string;
    readonly id: string;
    readonly ipAddress: string;
    readonly properties?: string;
    readonly ttl?: number;
    readonly view?: string;
    readonly zone?: string;
}
export function getHostRecordOutput(args: GetHostRecordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHostRecordResult> {
    return pulumi.output(args).apply((a: any) => getHostRecord(a, opts))
}

/**
 * A collection of arguments for invoking getHostRecord.
 */
export interface GetHostRecordOutputArgs {
    configuration?: pulumi.Input<string>;
    fqdn: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ipAddress: pulumi.Input<string>;
    properties?: pulumi.Input<string>;
    ttl?: pulumi.Input<number>;
    view?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
