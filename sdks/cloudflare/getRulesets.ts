// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRulesets(args?: GetRulesetsArgs, opts?: pulumi.InvokeOptions): Promise<GetRulesetsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getRulesets:getRulesets", {
        "accountId": args.accountId,
        "filter": args.filter,
        "id": args.id,
        "includeRules": args.includeRules,
        "zoneId": args.zoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRulesets.
 */
export interface GetRulesetsArgs {
    accountId?: string;
    filter?: inputs.GetRulesetsFilter;
    id?: string;
    includeRules?: boolean;
    zoneId?: string;
}

/**
 * A collection of values returned by getRulesets.
 */
export interface GetRulesetsResult {
    readonly accountId?: string;
    readonly filter?: outputs.GetRulesetsFilter;
    readonly id: string;
    readonly includeRules?: boolean;
    readonly rulesets: outputs.GetRulesetsRuleset[];
    readonly zoneId?: string;
}
export function getRulesetsOutput(args?: GetRulesetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRulesetsResult> {
    return pulumi.output(args).apply((a: any) => getRulesets(a, opts))
}

/**
 * A collection of arguments for invoking getRulesets.
 */
export interface GetRulesetsOutputArgs {
    accountId?: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetRulesetsFilterArgs>;
    id?: pulumi.Input<string>;
    includeRules?: pulumi.Input<boolean>;
    zoneId?: pulumi.Input<string>;
}
