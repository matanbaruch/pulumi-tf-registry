// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDevices(args: GetDevicesArgs, opts?: pulumi.InvokeOptions): Promise<GetDevicesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getDevices:getDevices", {
        "accountId": args.accountId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDevices.
 */
export interface GetDevicesArgs {
    accountId: string;
    id?: string;
}

/**
 * A collection of values returned by getDevices.
 */
export interface GetDevicesResult {
    readonly accountId: string;
    readonly devices: outputs.GetDevicesDevice[];
    readonly id: string;
}
export function getDevicesOutput(args: GetDevicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDevicesResult> {
    return pulumi.output(args).apply((a: any) => getDevices(a, opts))
}

/**
 * A collection of arguments for invoking getDevices.
 */
export interface GetDevicesOutputArgs {
    accountId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
