// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAccountRoles(args: GetAccountRolesArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountRolesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getAccountRoles:getAccountRoles", {
        "accountId": args.accountId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccountRoles.
 */
export interface GetAccountRolesArgs {
    accountId: string;
    id?: string;
}

/**
 * A collection of values returned by getAccountRoles.
 */
export interface GetAccountRolesResult {
    readonly accountId: string;
    readonly id: string;
    readonly roles: outputs.GetAccountRolesRole[];
}
export function getAccountRolesOutput(args: GetAccountRolesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountRolesResult> {
    return pulumi.output(args).apply((a: any) => getAccountRoles(a, opts))
}

/**
 * A collection of arguments for invoking getAccountRoles.
 */
export interface GetAccountRolesOutputArgs {
    accountId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
