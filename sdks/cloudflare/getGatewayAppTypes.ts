// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGatewayAppTypes(args: GetGatewayAppTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetGatewayAppTypesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getGatewayAppTypes:getGatewayAppTypes", {
        "accountId": args.accountId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGatewayAppTypes.
 */
export interface GetGatewayAppTypesArgs {
    accountId: string;
}

/**
 * A collection of values returned by getGatewayAppTypes.
 */
export interface GetGatewayAppTypesResult {
    readonly accountId: string;
    readonly appTypes: outputs.GetGatewayAppTypesAppType[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
export function getGatewayAppTypesOutput(args: GetGatewayAppTypesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGatewayAppTypesResult> {
    return pulumi.output(args).apply((a: any) => getGatewayAppTypes(a, opts))
}

/**
 * A collection of arguments for invoking getGatewayAppTypes.
 */
export interface GetGatewayAppTypesOutputArgs {
    accountId: pulumi.Input<string>;
}
