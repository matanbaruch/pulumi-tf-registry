// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDlpDatasets(args: GetDlpDatasetsArgs, opts?: pulumi.InvokeOptions): Promise<GetDlpDatasetsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getDlpDatasets:getDlpDatasets", {
        "accountId": args.accountId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDlpDatasets.
 */
export interface GetDlpDatasetsArgs {
    accountId: string;
}

/**
 * A collection of values returned by getDlpDatasets.
 */
export interface GetDlpDatasetsResult {
    readonly accountId: string;
    readonly datasets: outputs.GetDlpDatasetsDataset[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
export function getDlpDatasetsOutput(args: GetDlpDatasetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDlpDatasetsResult> {
    return pulumi.output(args).apply((a: any) => getDlpDatasets(a, opts))
}

/**
 * A collection of arguments for invoking getDlpDatasets.
 */
export interface GetDlpDatasetsOutputArgs {
    accountId: pulumi.Input<string>;
}
