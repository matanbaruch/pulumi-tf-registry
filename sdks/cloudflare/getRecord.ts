// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRecord(args: GetRecordArgs, opts?: pulumi.InvokeOptions): Promise<GetRecordResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getRecord:getRecord", {
        "content": args.content,
        "hostname": args.hostname,
        "id": args.id,
        "priority": args.priority,
        "type": args.type,
        "zoneId": args.zoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRecord.
 */
export interface GetRecordArgs {
    content?: string;
    hostname: string;
    id?: string;
    priority?: number;
    type?: string;
    zoneId: string;
}

/**
 * A collection of values returned by getRecord.
 */
export interface GetRecordResult {
    readonly content?: string;
    readonly hostname: string;
    readonly id: string;
    readonly priority?: number;
    readonly proxiable: boolean;
    readonly proxied: boolean;
    readonly ttl: number;
    readonly type?: string;
    readonly value: string;
    readonly zoneId: string;
    readonly zoneName: string;
}
export function getRecordOutput(args: GetRecordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecordResult> {
    return pulumi.output(args).apply((a: any) => getRecord(a, opts))
}

/**
 * A collection of arguments for invoking getRecord.
 */
export interface GetRecordOutputArgs {
    content?: pulumi.Input<string>;
    hostname: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
    zoneId: pulumi.Input<string>;
}
