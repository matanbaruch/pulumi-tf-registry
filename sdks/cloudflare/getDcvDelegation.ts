// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDcvDelegation(args: GetDcvDelegationArgs, opts?: pulumi.InvokeOptions): Promise<GetDcvDelegationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getDcvDelegation:getDcvDelegation", {
        "zoneId": args.zoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDcvDelegation.
 */
export interface GetDcvDelegationArgs {
    zoneId: string;
}

/**
 * A collection of values returned by getDcvDelegation.
 */
export interface GetDcvDelegationResult {
    readonly hostname: string;
    readonly id: string;
    readonly zoneId: string;
}
export function getDcvDelegationOutput(args: GetDcvDelegationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDcvDelegationResult> {
    return pulumi.output(args).apply((a: any) => getDcvDelegation(a, opts))
}

/**
 * A collection of arguments for invoking getDcvDelegation.
 */
export interface GetDcvDelegationOutputArgs {
    zoneId: pulumi.Input<string>;
}
