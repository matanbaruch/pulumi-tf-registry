// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLocationProfile(args: GetLocationProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetLocationProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("site24x7:index/getLocationProfile:getLocationProfile", {
        "id": args.id,
        "nameRegex": args.nameRegex,
        "outerRegionsLocationConsent": args.outerRegionsLocationConsent,
        "primaryLocation": args.primaryLocation,
        "profileName": args.profileName,
        "restrictAltLoc": args.restrictAltLoc,
        "secondaryLocations": args.secondaryLocations,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLocationProfile.
 */
export interface GetLocationProfileArgs {
    id?: string;
    nameRegex: string;
    outerRegionsLocationConsent?: boolean;
    primaryLocation?: string;
    profileName?: string;
    restrictAltLoc?: boolean;
    secondaryLocations?: string[];
}

/**
 * A collection of values returned by getLocationProfile.
 */
export interface GetLocationProfileResult {
    readonly id: string;
    readonly matchingIdsAndNames: string[];
    readonly nameRegex: string;
    readonly outerRegionsLocationConsent: boolean;
    readonly primaryLocation: string;
    readonly profileName: string;
    readonly restrictAltLoc: boolean;
    readonly secondaryLocations: string[];
}
export function getLocationProfileOutput(args: GetLocationProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocationProfileResult> {
    return pulumi.output(args).apply((a: any) => getLocationProfile(a, opts))
}

/**
 * A collection of arguments for invoking getLocationProfile.
 */
export interface GetLocationProfileOutputArgs {
    id?: pulumi.Input<string>;
    nameRegex: pulumi.Input<string>;
    outerRegionsLocationConsent?: pulumi.Input<boolean>;
    primaryLocation?: pulumi.Input<string>;
    profileName?: pulumi.Input<string>;
    restrictAltLoc?: pulumi.Input<boolean>;
    secondaryLocations?: pulumi.Input<pulumi.Input<string>[]>;
}
