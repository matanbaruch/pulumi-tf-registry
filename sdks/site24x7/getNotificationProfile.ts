// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNotificationProfile(args: GetNotificationProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetNotificationProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("site24x7:index/getNotificationProfile:getNotificationProfile", {
        "id": args.id,
        "nameRegex": args.nameRegex,
        "notifyAfterExecutingActions": args.notifyAfterExecutingActions,
        "profileName": args.profileName,
        "rcaNeeded": args.rcaNeeded,
        "suppressAutomation": args.suppressAutomation,
        "templateId": args.templateId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNotificationProfile.
 */
export interface GetNotificationProfileArgs {
    id?: string;
    nameRegex: string;
    notifyAfterExecutingActions?: boolean;
    profileName?: string;
    rcaNeeded?: boolean;
    suppressAutomation?: boolean;
    templateId?: string;
}

/**
 * A collection of values returned by getNotificationProfile.
 */
export interface GetNotificationProfileResult {
    readonly id: string;
    readonly matchingIds: string[];
    readonly matchingIdsAndNames: string[];
    readonly nameRegex: string;
    readonly notifyAfterExecutingActions?: boolean;
    readonly profileName: string;
    readonly rcaNeeded?: boolean;
    readonly suppressAutomation?: boolean;
    readonly templateId?: string;
}
export function getNotificationProfileOutput(args: GetNotificationProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNotificationProfileResult> {
    return pulumi.output(args).apply((a: any) => getNotificationProfile(a, opts))
}

/**
 * A collection of arguments for invoking getNotificationProfile.
 */
export interface GetNotificationProfileOutputArgs {
    id?: pulumi.Input<string>;
    nameRegex: pulumi.Input<string>;
    notifyAfterExecutingActions?: pulumi.Input<boolean>;
    profileName?: pulumi.Input<string>;
    rcaNeeded?: pulumi.Input<boolean>;
    suppressAutomation?: pulumi.Input<boolean>;
    templateId?: pulumi.Input<string>;
}
