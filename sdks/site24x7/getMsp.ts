// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMsp(args: GetMspArgs, opts?: pulumi.InvokeOptions): Promise<GetMspResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("site24x7:index/getMsp:getMsp", {
        "customerNameRegex": args.customerNameRegex,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMsp.
 */
export interface GetMspArgs {
    customerNameRegex: string;
    id?: string;
}

/**
 * A collection of values returned by getMsp.
 */
export interface GetMspResult {
    readonly customerName: string;
    readonly customerNameRegex: string;
    readonly id: string;
    readonly matchingZaaids: string[];
    readonly matchingZaaidsAndNames: string[];
    readonly userId: string;
    readonly zaaid: string;
}
export function getMspOutput(args: GetMspOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMspResult> {
    return pulumi.output(args).apply((a: any) => getMsp(a, opts))
}

/**
 * A collection of arguments for invoking getMsp.
 */
export interface GetMspOutputArgs {
    customerNameRegex: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
