// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTag(args: GetTagArgs, opts?: pulumi.InvokeOptions): Promise<GetTagResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("site24x7:index/getTag:getTag", {
        "id": args.id,
        "tagColor": args.tagColor,
        "tagName": args.tagName,
        "tagNameRegex": args.tagNameRegex,
        "tagType": args.tagType,
        "tagValue": args.tagValue,
        "tagValueRegex": args.tagValueRegex,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTag.
 */
export interface GetTagArgs {
    id?: string;
    tagColor?: string;
    tagName?: string;
    tagNameRegex: string;
    tagType?: number;
    tagValue?: string;
    tagValueRegex?: string;
}

/**
 * A collection of values returned by getTag.
 */
export interface GetTagResult {
    readonly id: string;
    readonly matchingIds: string[];
    readonly matchingIdsAndNames: string[];
    readonly tagColor: string;
    readonly tagName: string;
    readonly tagNameRegex: string;
    readonly tagType: number;
    readonly tagValue: string;
    readonly tagValueRegex?: string;
}
export function getTagOutput(args: GetTagOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTagResult> {
    return pulumi.output(args).apply((a: any) => getTag(a, opts))
}

/**
 * A collection of arguments for invoking getTag.
 */
export interface GetTagOutputArgs {
    id?: pulumi.Input<string>;
    tagColor?: pulumi.Input<string>;
    tagName?: pulumi.Input<string>;
    tagNameRegex: pulumi.Input<string>;
    tagType?: pulumi.Input<number>;
    tagValue?: pulumi.Input<string>;
    tagValueRegex?: pulumi.Input<string>;
}
