// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ScheduleMaintenance extends pulumi.CustomResource {
    /**
     * Get an existing ScheduleMaintenance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScheduleMaintenanceState, opts?: pulumi.CustomResourceOptions): ScheduleMaintenance {
        return new ScheduleMaintenance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'site24x7:index/scheduleMaintenance:ScheduleMaintenance';

    /**
     * Returns true if the given object is an instance of ScheduleMaintenance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScheduleMaintenance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScheduleMaintenance.__pulumiType;
    }

    /**
     * Description for the maintenance.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Display name for the maintenance.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Mandatory, if the maintenance_type chosen is Once. Maintenance end date. Format - yyyy-mm-dd.
     */
    public readonly endDate!: pulumi.Output<string>;
    /**
     * Maintenance end time. Format - hh:mm
     */
    public readonly endTime!: pulumi.Output<string>;
    /**
     * Monitor Groups that need to be associated with the maintenance window when the selection_type = 1.
     */
    public readonly monitorGroups!: pulumi.Output<string[] | undefined>;
    /**
     * Monitors that need to be associated with the maintenance window when the selection_type = 2.
     */
    public readonly monitors!: pulumi.Output<string[] | undefined>;
    /**
     * Enable this to perform uptime monitoring of the resource during the maintenance window.
     */
    public readonly performMonitoring!: pulumi.Output<boolean | undefined>;
    /**
     * Resource Type associated with this integration. Default value is '0'. Can take values 1|2|3. '1' denotes 'Monitor
     * Group', '2' denotes 'Monitors', '3' denotes 'Tags'
     */
    public readonly selectionType!: pulumi.Output<number | undefined>;
    /**
     * Mandatory, if the maintenance_type chosen is Once. Maintenance start date. Format - yyyy-mm-dd.
     */
    public readonly startDate!: pulumi.Output<string>;
    /**
     * Maintenance start time. Format - hh:mm
     */
    public readonly startTime!: pulumi.Output<string>;
    /**
     * Tags that need to be associated with the maintenance window when the selection_type = 3.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * Time zone for your scheduled maintenance. Default value is your account timezone.
     */
    public readonly timeZone!: pulumi.Output<string | undefined>;

    /**
     * Create a ScheduleMaintenance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduleMaintenanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScheduleMaintenanceArgs | ScheduleMaintenanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScheduleMaintenanceState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["endDate"] = state ? state.endDate : undefined;
            resourceInputs["endTime"] = state ? state.endTime : undefined;
            resourceInputs["monitorGroups"] = state ? state.monitorGroups : undefined;
            resourceInputs["monitors"] = state ? state.monitors : undefined;
            resourceInputs["performMonitoring"] = state ? state.performMonitoring : undefined;
            resourceInputs["selectionType"] = state ? state.selectionType : undefined;
            resourceInputs["startDate"] = state ? state.startDate : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeZone"] = state ? state.timeZone : undefined;
        } else {
            const args = argsOrState as ScheduleMaintenanceArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.endDate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endDate'");
            }
            if ((!args || args.endTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endTime'");
            }
            if ((!args || args.startDate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startDate'");
            }
            if ((!args || args.startTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startTime'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["endDate"] = args ? args.endDate : undefined;
            resourceInputs["endTime"] = args ? args.endTime : undefined;
            resourceInputs["monitorGroups"] = args ? args.monitorGroups : undefined;
            resourceInputs["monitors"] = args ? args.monitors : undefined;
            resourceInputs["performMonitoring"] = args ? args.performMonitoring : undefined;
            resourceInputs["selectionType"] = args ? args.selectionType : undefined;
            resourceInputs["startDate"] = args ? args.startDate : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeZone"] = args ? args.timeZone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ScheduleMaintenance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ScheduleMaintenance resources.
 */
export interface ScheduleMaintenanceState {
    /**
     * Description for the maintenance.
     */
    description?: pulumi.Input<string>;
    /**
     * Display name for the maintenance.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Mandatory, if the maintenance_type chosen is Once. Maintenance end date. Format - yyyy-mm-dd.
     */
    endDate?: pulumi.Input<string>;
    /**
     * Maintenance end time. Format - hh:mm
     */
    endTime?: pulumi.Input<string>;
    /**
     * Monitor Groups that need to be associated with the maintenance window when the selection_type = 1.
     */
    monitorGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Monitors that need to be associated with the maintenance window when the selection_type = 2.
     */
    monitors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable this to perform uptime monitoring of the resource during the maintenance window.
     */
    performMonitoring?: pulumi.Input<boolean>;
    /**
     * Resource Type associated with this integration. Default value is '0'. Can take values 1|2|3. '1' denotes 'Monitor
     * Group', '2' denotes 'Monitors', '3' denotes 'Tags'
     */
    selectionType?: pulumi.Input<number>;
    /**
     * Mandatory, if the maintenance_type chosen is Once. Maintenance start date. Format - yyyy-mm-dd.
     */
    startDate?: pulumi.Input<string>;
    /**
     * Maintenance start time. Format - hh:mm
     */
    startTime?: pulumi.Input<string>;
    /**
     * Tags that need to be associated with the maintenance window when the selection_type = 3.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Time zone for your scheduled maintenance. Default value is your account timezone.
     */
    timeZone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ScheduleMaintenance resource.
 */
export interface ScheduleMaintenanceArgs {
    /**
     * Description for the maintenance.
     */
    description?: pulumi.Input<string>;
    /**
     * Display name for the maintenance.
     */
    displayName: pulumi.Input<string>;
    /**
     * Mandatory, if the maintenance_type chosen is Once. Maintenance end date. Format - yyyy-mm-dd.
     */
    endDate: pulumi.Input<string>;
    /**
     * Maintenance end time. Format - hh:mm
     */
    endTime: pulumi.Input<string>;
    /**
     * Monitor Groups that need to be associated with the maintenance window when the selection_type = 1.
     */
    monitorGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Monitors that need to be associated with the maintenance window when the selection_type = 2.
     */
    monitors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable this to perform uptime monitoring of the resource during the maintenance window.
     */
    performMonitoring?: pulumi.Input<boolean>;
    /**
     * Resource Type associated with this integration. Default value is '0'. Can take values 1|2|3. '1' denotes 'Monitor
     * Group', '2' denotes 'Monitors', '3' denotes 'Tags'
     */
    selectionType?: pulumi.Input<number>;
    /**
     * Mandatory, if the maintenance_type chosen is Once. Maintenance start date. Format - yyyy-mm-dd.
     */
    startDate: pulumi.Input<string>;
    /**
     * Maintenance start time. Format - hh:mm
     */
    startTime: pulumi.Input<string>;
    /**
     * Tags that need to be associated with the maintenance window when the selection_type = 3.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Time zone for your scheduled maintenance. Default value is your account timezone.
     */
    timeZone?: pulumi.Input<string>;
}
