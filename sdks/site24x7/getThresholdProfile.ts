// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getThresholdProfile(args: GetThresholdProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetThresholdProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("site24x7:index/getThresholdProfile:getThresholdProfile", {
        "id": args.id,
        "nameRegex": args.nameRegex,
        "profileName": args.profileName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getThresholdProfile.
 */
export interface GetThresholdProfileArgs {
    id?: string;
    nameRegex: string;
    profileName?: string;
}

/**
 * A collection of values returned by getThresholdProfile.
 */
export interface GetThresholdProfileResult {
    readonly cronDurationAlert: {[key: string]: string};
    readonly cronNoRunAlert: {[key: string]: string};
    readonly downLocationThreshold: number;
    readonly id: string;
    readonly matchingIds: string[];
    readonly matchingIdsAndNames: string[];
    readonly nameRegex: string;
    readonly profileName: string;
    readonly profileType: number;
    readonly type: string;
    readonly websiteContentModified: boolean;
}
export function getThresholdProfileOutput(args: GetThresholdProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetThresholdProfileResult> {
    return pulumi.output(args).apply((a: any) => getThresholdProfile(a, opts))
}

/**
 * A collection of arguments for invoking getThresholdProfile.
 */
export interface GetThresholdProfileOutputArgs {
    id?: pulumi.Input<string>;
    nameRegex: pulumi.Input<string>;
    profileName?: pulumi.Input<string>;
}
