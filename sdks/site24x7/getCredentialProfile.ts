// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCredentialProfile(args: GetCredentialProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetCredentialProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("site24x7:index/getCredentialProfile:getCredentialProfile", {
        "credentialName": args.credentialName,
        "credentialType": args.credentialType,
        "id": args.id,
        "nameRegex": args.nameRegex,
        "password": args.password,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCredentialProfile.
 */
export interface GetCredentialProfileArgs {
    credentialName?: string;
    credentialType?: number;
    id?: string;
    nameRegex: string;
    password?: string;
    username?: string;
}

/**
 * A collection of values returned by getCredentialProfile.
 */
export interface GetCredentialProfileResult {
    readonly credentialName?: string;
    readonly credentialType?: number;
    readonly id: string;
    readonly nameRegex: string;
    readonly password?: string;
    readonly username?: string;
}
export function getCredentialProfileOutput(args: GetCredentialProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCredentialProfileResult> {
    return pulumi.output(args).apply((a: any) => getCredentialProfile(a, opts))
}

/**
 * A collection of arguments for invoking getCredentialProfile.
 */
export interface GetCredentialProfileOutputArgs {
    credentialName?: pulumi.Input<string>;
    credentialType?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    nameRegex: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}
