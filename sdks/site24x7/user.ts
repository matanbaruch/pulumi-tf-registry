// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserState, opts?: pulumi.CustomResourceOptions): User {
        return new User(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'site24x7:index/user:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }

    /**
     * Define a time window so you can receive Voice/SMS status alerts during this period alone. You can't define this window
     * for email or IM based notifications.
     */
    public readonly alertingPeriodEndTime!: pulumi.Output<string | undefined>;
    /**
     * Define a time window so you can receive Voice/SMS status alerts during this period alone. You can't define this window
     * for email or IM based notifications.
     */
    public readonly alertingPeriodStartTime!: pulumi.Output<string | undefined>;
    /**
     * Role assigned to the user for accessing CloudSpend. Role will be updated only after the user accepts the invitation.
     * Refer https://www.site24x7.com/help/api/#site24x7_user_constants
     */
    public readonly cloudspendRole!: pulumi.Output<number | undefined>;
    /**
     * The third-party providers we use to send SMS and voice alerts will process the data outside the EU region.
     */
    public readonly consentForNonEuAlerts!: pulumi.Output<boolean | undefined>;
    /**
     * Medium through which you’d wish to receive the Critical alerts. Default value is 1. '1' denotes 'Email', '2' denotes
     * 'SMS', '3' denotes 'Voice Call'.
     */
    public readonly criticalNotificationMedia!: pulumi.Output<number[]>;
    /**
     * Name of the User.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Medium through which you’d wish to receive the Down alerts. Default value is 1. '1' denotes 'Email', '2' denotes
     * 'SMS', '3' denotes 'Voice Call'.
     */
    public readonly downNotificationMedia!: pulumi.Output<number[]>;
    /**
     * Email address of the user. Email verification has to be done manually.
     */
    public readonly emailAddress!: pulumi.Output<string>;
    /**
     * Denotes the email format. '0' - Text, '1' - HTML
     */
    public readonly emailFormat!: pulumi.Output<number | undefined>;
    /**
     * Provide your job title to be added in Site24x7. Refer https://www.site24x7.com/help/api/#job_title
     */
    public readonly jobTitle!: pulumi.Output<number | undefined>;
    /**
     * Phone number configurations to receive alerts.
     */
    public readonly mobileSettings!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of monitor groups to which the user has access to. 'monitor_groups' attribute is mandatory when the
     * 'selection_type' is '1'
     */
    public readonly monitorGroups!: pulumi.Output<string[]>;
    /**
     * Medium through which you’d wish to receive the notifications. Default value is 1. '1' denotes 'Email', '2' denotes
     * 'SMS', '3' denotes 'Voice Call'.
     */
    public readonly notificationMedia!: pulumi.Output<number[]>;
    /**
     * Resource type associated to this user. Default value is '0'. Can take values 0|1. '0' denotes 'All Monitors', '1'
     * denotes 'Monitor Group'. 'monitor_groups' attribute is mandatory when the 'selection_type' is '1'.
     */
    public readonly selectionType!: pulumi.Output<number | undefined>;
    /**
     * Role assigned to the user for accessing StatusIQ.. Role will be updated only after the user accepts the invitation.
     * Refer https://www.site24x7.com/help/api/#site24x7_user_constants
     */
    public readonly statusiqRole!: pulumi.Output<number | undefined>;
    /**
     * Medium through which you’d wish to receive the Trouble alerts. Default value is 1. '1' denotes 'Email', '2' denotes
     * 'SMS', '3' denotes 'Voice Call'.
     */
    public readonly troubleNotificationMedia!: pulumi.Output<number[]>;
    /**
     * Medium through which you’d wish to receive the Up alerts. Default value is 1. '1' denotes 'Email', '2' denotes 'SMS',
     * '3' denotes 'Voice Call'.
     */
    public readonly upNotificationMedia!: pulumi.Output<number[]>;
    /**
     * List of groups to be associated for the user for receiving alerts.
     */
    public readonly userGroupIds!: pulumi.Output<string[]>;
    /**
     * Role assigned to the user for accessing Site24x7. Role will be updated only after the user accepts the invitation. Refer
     * https://www.site24x7.com/help/api/#site24x7_user_constants
     */
    public readonly userRole!: pulumi.Output<number>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserArgs | UserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserState | undefined;
            resourceInputs["alertingPeriodEndTime"] = state ? state.alertingPeriodEndTime : undefined;
            resourceInputs["alertingPeriodStartTime"] = state ? state.alertingPeriodStartTime : undefined;
            resourceInputs["cloudspendRole"] = state ? state.cloudspendRole : undefined;
            resourceInputs["consentForNonEuAlerts"] = state ? state.consentForNonEuAlerts : undefined;
            resourceInputs["criticalNotificationMedia"] = state ? state.criticalNotificationMedia : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["downNotificationMedia"] = state ? state.downNotificationMedia : undefined;
            resourceInputs["emailAddress"] = state ? state.emailAddress : undefined;
            resourceInputs["emailFormat"] = state ? state.emailFormat : undefined;
            resourceInputs["jobTitle"] = state ? state.jobTitle : undefined;
            resourceInputs["mobileSettings"] = state ? state.mobileSettings : undefined;
            resourceInputs["monitorGroups"] = state ? state.monitorGroups : undefined;
            resourceInputs["notificationMedia"] = state ? state.notificationMedia : undefined;
            resourceInputs["selectionType"] = state ? state.selectionType : undefined;
            resourceInputs["statusiqRole"] = state ? state.statusiqRole : undefined;
            resourceInputs["troubleNotificationMedia"] = state ? state.troubleNotificationMedia : undefined;
            resourceInputs["upNotificationMedia"] = state ? state.upNotificationMedia : undefined;
            resourceInputs["userGroupIds"] = state ? state.userGroupIds : undefined;
            resourceInputs["userRole"] = state ? state.userRole : undefined;
        } else {
            const args = argsOrState as UserArgs | undefined;
            if ((!args || args.criticalNotificationMedia === undefined) && !opts.urn) {
                throw new Error("Missing required property 'criticalNotificationMedia'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.downNotificationMedia === undefined) && !opts.urn) {
                throw new Error("Missing required property 'downNotificationMedia'");
            }
            if ((!args || args.emailAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'emailAddress'");
            }
            if ((!args || args.notificationMedia === undefined) && !opts.urn) {
                throw new Error("Missing required property 'notificationMedia'");
            }
            if ((!args || args.troubleNotificationMedia === undefined) && !opts.urn) {
                throw new Error("Missing required property 'troubleNotificationMedia'");
            }
            if ((!args || args.upNotificationMedia === undefined) && !opts.urn) {
                throw new Error("Missing required property 'upNotificationMedia'");
            }
            if ((!args || args.userRole === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userRole'");
            }
            resourceInputs["alertingPeriodEndTime"] = args ? args.alertingPeriodEndTime : undefined;
            resourceInputs["alertingPeriodStartTime"] = args ? args.alertingPeriodStartTime : undefined;
            resourceInputs["cloudspendRole"] = args ? args.cloudspendRole : undefined;
            resourceInputs["consentForNonEuAlerts"] = args ? args.consentForNonEuAlerts : undefined;
            resourceInputs["criticalNotificationMedia"] = args ? args.criticalNotificationMedia : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["downNotificationMedia"] = args ? args.downNotificationMedia : undefined;
            resourceInputs["emailAddress"] = args ? args.emailAddress : undefined;
            resourceInputs["emailFormat"] = args ? args.emailFormat : undefined;
            resourceInputs["jobTitle"] = args ? args.jobTitle : undefined;
            resourceInputs["mobileSettings"] = args ? args.mobileSettings : undefined;
            resourceInputs["monitorGroups"] = args ? args.monitorGroups : undefined;
            resourceInputs["notificationMedia"] = args ? args.notificationMedia : undefined;
            resourceInputs["selectionType"] = args ? args.selectionType : undefined;
            resourceInputs["statusiqRole"] = args ? args.statusiqRole : undefined;
            resourceInputs["troubleNotificationMedia"] = args ? args.troubleNotificationMedia : undefined;
            resourceInputs["upNotificationMedia"] = args ? args.upNotificationMedia : undefined;
            resourceInputs["userGroupIds"] = args ? args.userGroupIds : undefined;
            resourceInputs["userRole"] = args ? args.userRole : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(User.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * Define a time window so you can receive Voice/SMS status alerts during this period alone. You can't define this window
     * for email or IM based notifications.
     */
    alertingPeriodEndTime?: pulumi.Input<string>;
    /**
     * Define a time window so you can receive Voice/SMS status alerts during this period alone. You can't define this window
     * for email or IM based notifications.
     */
    alertingPeriodStartTime?: pulumi.Input<string>;
    /**
     * Role assigned to the user for accessing CloudSpend. Role will be updated only after the user accepts the invitation.
     * Refer https://www.site24x7.com/help/api/#site24x7_user_constants
     */
    cloudspendRole?: pulumi.Input<number>;
    /**
     * The third-party providers we use to send SMS and voice alerts will process the data outside the EU region.
     */
    consentForNonEuAlerts?: pulumi.Input<boolean>;
    /**
     * Medium through which you’d wish to receive the Critical alerts. Default value is 1. '1' denotes 'Email', '2' denotes
     * 'SMS', '3' denotes 'Voice Call'.
     */
    criticalNotificationMedia?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Name of the User.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Medium through which you’d wish to receive the Down alerts. Default value is 1. '1' denotes 'Email', '2' denotes
     * 'SMS', '3' denotes 'Voice Call'.
     */
    downNotificationMedia?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Email address of the user. Email verification has to be done manually.
     */
    emailAddress?: pulumi.Input<string>;
    /**
     * Denotes the email format. '0' - Text, '1' - HTML
     */
    emailFormat?: pulumi.Input<number>;
    /**
     * Provide your job title to be added in Site24x7. Refer https://www.site24x7.com/help/api/#job_title
     */
    jobTitle?: pulumi.Input<number>;
    /**
     * Phone number configurations to receive alerts.
     */
    mobileSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of monitor groups to which the user has access to. 'monitor_groups' attribute is mandatory when the
     * 'selection_type' is '1'
     */
    monitorGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Medium through which you’d wish to receive the notifications. Default value is 1. '1' denotes 'Email', '2' denotes
     * 'SMS', '3' denotes 'Voice Call'.
     */
    notificationMedia?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Resource type associated to this user. Default value is '0'. Can take values 0|1. '0' denotes 'All Monitors', '1'
     * denotes 'Monitor Group'. 'monitor_groups' attribute is mandatory when the 'selection_type' is '1'.
     */
    selectionType?: pulumi.Input<number>;
    /**
     * Role assigned to the user for accessing StatusIQ.. Role will be updated only after the user accepts the invitation.
     * Refer https://www.site24x7.com/help/api/#site24x7_user_constants
     */
    statusiqRole?: pulumi.Input<number>;
    /**
     * Medium through which you’d wish to receive the Trouble alerts. Default value is 1. '1' denotes 'Email', '2' denotes
     * 'SMS', '3' denotes 'Voice Call'.
     */
    troubleNotificationMedia?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Medium through which you’d wish to receive the Up alerts. Default value is 1. '1' denotes 'Email', '2' denotes 'SMS',
     * '3' denotes 'Voice Call'.
     */
    upNotificationMedia?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * List of groups to be associated for the user for receiving alerts.
     */
    userGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Role assigned to the user for accessing Site24x7. Role will be updated only after the user accepts the invitation. Refer
     * https://www.site24x7.com/help/api/#site24x7_user_constants
     */
    userRole?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * Define a time window so you can receive Voice/SMS status alerts during this period alone. You can't define this window
     * for email or IM based notifications.
     */
    alertingPeriodEndTime?: pulumi.Input<string>;
    /**
     * Define a time window so you can receive Voice/SMS status alerts during this period alone. You can't define this window
     * for email or IM based notifications.
     */
    alertingPeriodStartTime?: pulumi.Input<string>;
    /**
     * Role assigned to the user for accessing CloudSpend. Role will be updated only after the user accepts the invitation.
     * Refer https://www.site24x7.com/help/api/#site24x7_user_constants
     */
    cloudspendRole?: pulumi.Input<number>;
    /**
     * The third-party providers we use to send SMS and voice alerts will process the data outside the EU region.
     */
    consentForNonEuAlerts?: pulumi.Input<boolean>;
    /**
     * Medium through which you’d wish to receive the Critical alerts. Default value is 1. '1' denotes 'Email', '2' denotes
     * 'SMS', '3' denotes 'Voice Call'.
     */
    criticalNotificationMedia: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Name of the User.
     */
    displayName: pulumi.Input<string>;
    /**
     * Medium through which you’d wish to receive the Down alerts. Default value is 1. '1' denotes 'Email', '2' denotes
     * 'SMS', '3' denotes 'Voice Call'.
     */
    downNotificationMedia: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Email address of the user. Email verification has to be done manually.
     */
    emailAddress: pulumi.Input<string>;
    /**
     * Denotes the email format. '0' - Text, '1' - HTML
     */
    emailFormat?: pulumi.Input<number>;
    /**
     * Provide your job title to be added in Site24x7. Refer https://www.site24x7.com/help/api/#job_title
     */
    jobTitle?: pulumi.Input<number>;
    /**
     * Phone number configurations to receive alerts.
     */
    mobileSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of monitor groups to which the user has access to. 'monitor_groups' attribute is mandatory when the
     * 'selection_type' is '1'
     */
    monitorGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Medium through which you’d wish to receive the notifications. Default value is 1. '1' denotes 'Email', '2' denotes
     * 'SMS', '3' denotes 'Voice Call'.
     */
    notificationMedia: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Resource type associated to this user. Default value is '0'. Can take values 0|1. '0' denotes 'All Monitors', '1'
     * denotes 'Monitor Group'. 'monitor_groups' attribute is mandatory when the 'selection_type' is '1'.
     */
    selectionType?: pulumi.Input<number>;
    /**
     * Role assigned to the user for accessing StatusIQ.. Role will be updated only after the user accepts the invitation.
     * Refer https://www.site24x7.com/help/api/#site24x7_user_constants
     */
    statusiqRole?: pulumi.Input<number>;
    /**
     * Medium through which you’d wish to receive the Trouble alerts. Default value is 1. '1' denotes 'Email', '2' denotes
     * 'SMS', '3' denotes 'Voice Call'.
     */
    troubleNotificationMedia: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Medium through which you’d wish to receive the Up alerts. Default value is 1. '1' denotes 'Email', '2' denotes 'SMS',
     * '3' denotes 'Voice Call'.
     */
    upNotificationMedia: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * List of groups to be associated for the user for receiving alerts.
     */
    userGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Role assigned to the user for accessing Site24x7. Role will be updated only after the user accepts the invitation. Refer
     * https://www.site24x7.com/help/api/#site24x7_user_constants
     */
    userRole: pulumi.Input<number>;
}
