// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the site24x7 package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'site24x7';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * Access token expiry in seconds
     */
    public readonly accessTokenExpiry!: pulumi.Output<string | undefined>;
    /**
     * Site24x7 data center.
     */
    public readonly dataCenter!: pulumi.Output<string>;
    /**
     * OAuth2 Access Token
     */
    public readonly oauth2AccessToken!: pulumi.Output<string | undefined>;
    /**
     * OAuth2 Client ID
     */
    public readonly oauth2ClientId!: pulumi.Output<string>;
    /**
     * OAuth2 Client Secret
     */
    public readonly oauth2ClientSecret!: pulumi.Output<string>;
    /**
     * OAuth2 Refresh Token
     */
    public readonly oauth2RefreshToken!: pulumi.Output<string>;
    /**
     * MSP customer zaaid
     */
    public readonly zaaid!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            if ((!args || args.dataCenter === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataCenter'");
            }
            if ((!args || args.oauth2ClientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oauth2ClientId'");
            }
            if ((!args || args.oauth2ClientSecret === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oauth2ClientSecret'");
            }
            if ((!args || args.oauth2RefreshToken === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oauth2RefreshToken'");
            }
            resourceInputs["accessTokenExpiry"] = args ? args.accessTokenExpiry : undefined;
            resourceInputs["dataCenter"] = args ? args.dataCenter : undefined;
            resourceInputs["maxRetries"] = pulumi.output(args ? args.maxRetries : undefined).apply(JSON.stringify);
            resourceInputs["oauth2AccessToken"] = args ? args.oauth2AccessToken : undefined;
            resourceInputs["oauth2ClientId"] = args ? args.oauth2ClientId : undefined;
            resourceInputs["oauth2ClientSecret"] = args ? args.oauth2ClientSecret : undefined;
            resourceInputs["oauth2RefreshToken"] = args ? args.oauth2RefreshToken : undefined;
            resourceInputs["retryMaxWait"] = pulumi.output(args ? args.retryMaxWait : undefined).apply(JSON.stringify);
            resourceInputs["retryMinWait"] = pulumi.output(args ? args.retryMinWait : undefined).apply(JSON.stringify);
            resourceInputs["zaaid"] = args ? args.zaaid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Provider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * Access token expiry in seconds
     */
    accessTokenExpiry?: pulumi.Input<string>;
    /**
     * Site24x7 data center.
     */
    dataCenter: pulumi.Input<string>;
    /**
     * Maximum number of retries for Site24x7 API errors until giving up
     */
    maxRetries?: pulumi.Input<number>;
    /**
     * OAuth2 Access Token
     */
    oauth2AccessToken?: pulumi.Input<string>;
    /**
     * OAuth2 Client ID
     */
    oauth2ClientId: pulumi.Input<string>;
    /**
     * OAuth2 Client Secret
     */
    oauth2ClientSecret: pulumi.Input<string>;
    /**
     * OAuth2 Refresh Token
     */
    oauth2RefreshToken: pulumi.Input<string>;
    /**
     * Maximum wait time in seconds before retrying failed API requests (exponential backoff).
     */
    retryMaxWait?: pulumi.Input<number>;
    /**
     * Minimum wait time in seconds before retrying failed API requests.
     */
    retryMinWait?: pulumi.Input<number>;
    /**
     * MSP customer zaaid
     */
    zaaid?: pulumi.Input<string>;
}
