// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPolicySegmentRealization(args: GetPolicySegmentRealizationArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicySegmentRealizationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nsxt:index/getPolicySegmentRealization:getPolicySegmentRealization", {
        "context": args.context,
        "id": args.id,
        "path": args.path,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPolicySegmentRealization.
 */
export interface GetPolicySegmentRealizationArgs {
    context?: inputs.GetPolicySegmentRealizationContext;
    id?: string;
    path: string;
}

/**
 * A collection of values returned by getPolicySegmentRealization.
 */
export interface GetPolicySegmentRealizationResult {
    readonly context?: outputs.GetPolicySegmentRealizationContext;
    readonly id: string;
    readonly networkName: string;
    readonly path: string;
    readonly state: string;
}
export function getPolicySegmentRealizationOutput(args: GetPolicySegmentRealizationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicySegmentRealizationResult> {
    return pulumi.output(args).apply((a: any) => getPolicySegmentRealization(a, opts))
}

/**
 * A collection of arguments for invoking getPolicySegmentRealization.
 */
export interface GetPolicySegmentRealizationOutputArgs {
    context?: pulumi.Input<inputs.GetPolicySegmentRealizationContextArgs>;
    id?: pulumi.Input<string>;
    path: pulumi.Input<string>;
}
