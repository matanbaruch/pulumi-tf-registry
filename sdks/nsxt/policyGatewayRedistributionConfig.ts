// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PolicyGatewayRedistributionConfig extends pulumi.CustomResource {
    /**
     * Get an existing PolicyGatewayRedistributionConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyGatewayRedistributionConfigState, opts?: pulumi.CustomResourceOptions): PolicyGatewayRedistributionConfig {
        return new PolicyGatewayRedistributionConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/policyGatewayRedistributionConfig:PolicyGatewayRedistributionConfig';

    /**
     * Returns true if the given object is an instance of PolicyGatewayRedistributionConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyGatewayRedistributionConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyGatewayRedistributionConfig.__pulumiType;
    }

    /**
     * Flag to enable route redistribution for BGP
     */
    public readonly bgpEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Id of associated Tier0 Gateway on NSX
     */
    public /*out*/ readonly gatewayId!: pulumi.Output<string>;
    /**
     * Policy path for Tier0 gateway
     */
    public readonly gatewayPath!: pulumi.Output<string>;
    /**
     * Id of associated Gateway Locale Service on NSX
     */
    public /*out*/ readonly localeServiceId!: pulumi.Output<string>;
    /**
     * Flag to enable route redistribution for OSPF
     */
    public readonly ospfEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * List of routes to be aggregated
     */
    public readonly rules!: pulumi.Output<outputs.PolicyGatewayRedistributionConfigRule[] | undefined>;
    /**
     * Path of the site the Tier0 redistribution
     */
    public readonly sitePath!: pulumi.Output<string | undefined>;

    /**
     * Create a PolicyGatewayRedistributionConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyGatewayRedistributionConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyGatewayRedistributionConfigArgs | PolicyGatewayRedistributionConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyGatewayRedistributionConfigState | undefined;
            resourceInputs["bgpEnabled"] = state ? state.bgpEnabled : undefined;
            resourceInputs["gatewayId"] = state ? state.gatewayId : undefined;
            resourceInputs["gatewayPath"] = state ? state.gatewayPath : undefined;
            resourceInputs["localeServiceId"] = state ? state.localeServiceId : undefined;
            resourceInputs["ospfEnabled"] = state ? state.ospfEnabled : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["sitePath"] = state ? state.sitePath : undefined;
        } else {
            const args = argsOrState as PolicyGatewayRedistributionConfigArgs | undefined;
            if ((!args || args.gatewayPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayPath'");
            }
            resourceInputs["bgpEnabled"] = args ? args.bgpEnabled : undefined;
            resourceInputs["gatewayPath"] = args ? args.gatewayPath : undefined;
            resourceInputs["ospfEnabled"] = args ? args.ospfEnabled : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["sitePath"] = args ? args.sitePath : undefined;
            resourceInputs["gatewayId"] = undefined /*out*/;
            resourceInputs["localeServiceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyGatewayRedistributionConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PolicyGatewayRedistributionConfig resources.
 */
export interface PolicyGatewayRedistributionConfigState {
    /**
     * Flag to enable route redistribution for BGP
     */
    bgpEnabled?: pulumi.Input<boolean>;
    /**
     * Id of associated Tier0 Gateway on NSX
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * Policy path for Tier0 gateway
     */
    gatewayPath?: pulumi.Input<string>;
    /**
     * Id of associated Gateway Locale Service on NSX
     */
    localeServiceId?: pulumi.Input<string>;
    /**
     * Flag to enable route redistribution for OSPF
     */
    ospfEnabled?: pulumi.Input<boolean>;
    /**
     * List of routes to be aggregated
     */
    rules?: pulumi.Input<pulumi.Input<inputs.PolicyGatewayRedistributionConfigRule>[]>;
    /**
     * Path of the site the Tier0 redistribution
     */
    sitePath?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolicyGatewayRedistributionConfig resource.
 */
export interface PolicyGatewayRedistributionConfigArgs {
    /**
     * Flag to enable route redistribution for BGP
     */
    bgpEnabled?: pulumi.Input<boolean>;
    /**
     * Policy path for Tier0 gateway
     */
    gatewayPath: pulumi.Input<string>;
    /**
     * Flag to enable route redistribution for OSPF
     */
    ospfEnabled?: pulumi.Input<boolean>;
    /**
     * List of routes to be aggregated
     */
    rules?: pulumi.Input<pulumi.Input<inputs.PolicyGatewayRedistributionConfigRule>[]>;
    /**
     * Path of the site the Tier0 redistribution
     */
    sitePath?: pulumi.Input<string>;
}
