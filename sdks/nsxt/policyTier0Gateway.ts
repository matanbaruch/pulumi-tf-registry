// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PolicyTier0Gateway extends pulumi.CustomResource {
    /**
     * Get an existing PolicyTier0Gateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyTier0GatewayState, opts?: pulumi.CustomResourceOptions): PolicyTier0Gateway {
        return new PolicyTier0Gateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/policyTier0Gateway:PolicyTier0Gateway';

    /**
     * Returns true if the given object is an instance of PolicyTier0Gateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyTier0Gateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyTier0Gateway.__pulumiType;
    }

    /**
     * BGP routing configuration
     */
    public readonly bgpConfig!: pulumi.Output<outputs.PolicyTier0GatewayBgpConfig | undefined>;
    /**
     * Default rule logging
     */
    public readonly defaultRuleLogging!: pulumi.Output<boolean | undefined>;
    /**
     * Description for this resource
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Policy path to DHCP server or relay configuration to use for this Tier0
     */
    public readonly dhcpConfigPath!: pulumi.Output<string | undefined>;
    /**
     * Display name for this resource
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The path of the edge cluster connected to this gateway
     */
    public readonly edgeClusterPath!: pulumi.Output<string>;
    /**
     * Enable edge firewall
     */
    public readonly enableFirewall!: pulumi.Output<boolean | undefined>;
    /**
     * Failover mode
     */
    public readonly failoverMode!: pulumi.Output<string | undefined>;
    /**
     * Force whitelisting
     *
     * @deprecated Deprecated
     */
    public readonly forceWhitelisting!: pulumi.Output<boolean | undefined>;
    /**
     * High-availability Mode for Tier-0
     */
    public readonly haMode!: pulumi.Output<string | undefined>;
    /**
     * Internal transit subnets in CIDR format
     */
    public readonly internalTransitSubnets!: pulumi.Output<string[]>;
    /**
     * Locale Service for the gateway
     */
    public readonly intersiteConfig!: pulumi.Output<outputs.PolicyTier0GatewayIntersiteConfig | undefined>;
    /**
     * The path of an IPv6 DAD profile
     */
    public readonly ipv6DadProfilePath!: pulumi.Output<string>;
    /**
     * The path of an IPv6 NDRA profile
     */
    public readonly ipv6NdraProfilePath!: pulumi.Output<string>;
    /**
     * Locale Service for the gateway
     */
    public readonly localeServices!: pulumi.Output<outputs.PolicyTier0GatewayLocaleService[] | undefined>;
    /**
     * NSX ID for this resource
     */
    public readonly nsxId!: pulumi.Output<string>;
    /**
     * Policy path for this resource
     */
    public /*out*/ readonly path!: pulumi.Output<string>;
    /**
     * Route distinguisher administrator address
     */
    public readonly rdAdminAddress!: pulumi.Output<string | undefined>;
    /**
     * Route Redistribution configuration
     *
     * @deprecated Deprecated
     */
    public readonly redistributionConfig!: pulumi.Output<outputs.PolicyTier0GatewayRedistributionConfig | undefined>;
    /**
     * Internal flag to indicate whether legacy redistribution config is used
     */
    public /*out*/ readonly redistributionSet!: pulumi.Output<boolean>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    public readonly tags!: pulumi.Output<outputs.PolicyTier0GatewayTag[] | undefined>;
    /**
     * Transit subnets in CIDR format
     */
    public readonly transitSubnets!: pulumi.Output<string[]>;
    /**
     * VRF configuration
     */
    public readonly vrfConfig!: pulumi.Output<outputs.PolicyTier0GatewayVrfConfig | undefined>;
    /**
     * VRF transit subnets in CIDR format
     */
    public readonly vrfTransitSubnets!: pulumi.Output<string[]>;

    /**
     * Create a PolicyTier0Gateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyTier0GatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyTier0GatewayArgs | PolicyTier0GatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyTier0GatewayState | undefined;
            resourceInputs["bgpConfig"] = state ? state.bgpConfig : undefined;
            resourceInputs["defaultRuleLogging"] = state ? state.defaultRuleLogging : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dhcpConfigPath"] = state ? state.dhcpConfigPath : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["edgeClusterPath"] = state ? state.edgeClusterPath : undefined;
            resourceInputs["enableFirewall"] = state ? state.enableFirewall : undefined;
            resourceInputs["failoverMode"] = state ? state.failoverMode : undefined;
            resourceInputs["forceWhitelisting"] = state ? state.forceWhitelisting : undefined;
            resourceInputs["haMode"] = state ? state.haMode : undefined;
            resourceInputs["internalTransitSubnets"] = state ? state.internalTransitSubnets : undefined;
            resourceInputs["intersiteConfig"] = state ? state.intersiteConfig : undefined;
            resourceInputs["ipv6DadProfilePath"] = state ? state.ipv6DadProfilePath : undefined;
            resourceInputs["ipv6NdraProfilePath"] = state ? state.ipv6NdraProfilePath : undefined;
            resourceInputs["localeServices"] = state ? state.localeServices : undefined;
            resourceInputs["nsxId"] = state ? state.nsxId : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["rdAdminAddress"] = state ? state.rdAdminAddress : undefined;
            resourceInputs["redistributionConfig"] = state ? state.redistributionConfig : undefined;
            resourceInputs["redistributionSet"] = state ? state.redistributionSet : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["transitSubnets"] = state ? state.transitSubnets : undefined;
            resourceInputs["vrfConfig"] = state ? state.vrfConfig : undefined;
            resourceInputs["vrfTransitSubnets"] = state ? state.vrfTransitSubnets : undefined;
        } else {
            const args = argsOrState as PolicyTier0GatewayArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["bgpConfig"] = args ? args.bgpConfig : undefined;
            resourceInputs["defaultRuleLogging"] = args ? args.defaultRuleLogging : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dhcpConfigPath"] = args ? args.dhcpConfigPath : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["edgeClusterPath"] = args ? args.edgeClusterPath : undefined;
            resourceInputs["enableFirewall"] = args ? args.enableFirewall : undefined;
            resourceInputs["failoverMode"] = args ? args.failoverMode : undefined;
            resourceInputs["forceWhitelisting"] = args ? args.forceWhitelisting : undefined;
            resourceInputs["haMode"] = args ? args.haMode : undefined;
            resourceInputs["internalTransitSubnets"] = args ? args.internalTransitSubnets : undefined;
            resourceInputs["intersiteConfig"] = args ? args.intersiteConfig : undefined;
            resourceInputs["ipv6DadProfilePath"] = args ? args.ipv6DadProfilePath : undefined;
            resourceInputs["ipv6NdraProfilePath"] = args ? args.ipv6NdraProfilePath : undefined;
            resourceInputs["localeServices"] = args ? args.localeServices : undefined;
            resourceInputs["nsxId"] = args ? args.nsxId : undefined;
            resourceInputs["rdAdminAddress"] = args ? args.rdAdminAddress : undefined;
            resourceInputs["redistributionConfig"] = args ? args.redistributionConfig : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["transitSubnets"] = args ? args.transitSubnets : undefined;
            resourceInputs["vrfConfig"] = args ? args.vrfConfig : undefined;
            resourceInputs["vrfTransitSubnets"] = args ? args.vrfTransitSubnets : undefined;
            resourceInputs["path"] = undefined /*out*/;
            resourceInputs["redistributionSet"] = undefined /*out*/;
            resourceInputs["revision"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyTier0Gateway.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PolicyTier0Gateway resources.
 */
export interface PolicyTier0GatewayState {
    /**
     * BGP routing configuration
     */
    bgpConfig?: pulumi.Input<inputs.PolicyTier0GatewayBgpConfig>;
    /**
     * Default rule logging
     */
    defaultRuleLogging?: pulumi.Input<boolean>;
    /**
     * Description for this resource
     */
    description?: pulumi.Input<string>;
    /**
     * Policy path to DHCP server or relay configuration to use for this Tier0
     */
    dhcpConfigPath?: pulumi.Input<string>;
    /**
     * Display name for this resource
     */
    displayName?: pulumi.Input<string>;
    /**
     * The path of the edge cluster connected to this gateway
     */
    edgeClusterPath?: pulumi.Input<string>;
    /**
     * Enable edge firewall
     */
    enableFirewall?: pulumi.Input<boolean>;
    /**
     * Failover mode
     */
    failoverMode?: pulumi.Input<string>;
    /**
     * Force whitelisting
     *
     * @deprecated Deprecated
     */
    forceWhitelisting?: pulumi.Input<boolean>;
    /**
     * High-availability Mode for Tier-0
     */
    haMode?: pulumi.Input<string>;
    /**
     * Internal transit subnets in CIDR format
     */
    internalTransitSubnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Locale Service for the gateway
     */
    intersiteConfig?: pulumi.Input<inputs.PolicyTier0GatewayIntersiteConfig>;
    /**
     * The path of an IPv6 DAD profile
     */
    ipv6DadProfilePath?: pulumi.Input<string>;
    /**
     * The path of an IPv6 NDRA profile
     */
    ipv6NdraProfilePath?: pulumi.Input<string>;
    /**
     * Locale Service for the gateway
     */
    localeServices?: pulumi.Input<pulumi.Input<inputs.PolicyTier0GatewayLocaleService>[]>;
    /**
     * NSX ID for this resource
     */
    nsxId?: pulumi.Input<string>;
    /**
     * Policy path for this resource
     */
    path?: pulumi.Input<string>;
    /**
     * Route distinguisher administrator address
     */
    rdAdminAddress?: pulumi.Input<string>;
    /**
     * Route Redistribution configuration
     *
     * @deprecated Deprecated
     */
    redistributionConfig?: pulumi.Input<inputs.PolicyTier0GatewayRedistributionConfig>;
    /**
     * Internal flag to indicate whether legacy redistribution config is used
     */
    redistributionSet?: pulumi.Input<boolean>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    revision?: pulumi.Input<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.PolicyTier0GatewayTag>[]>;
    /**
     * Transit subnets in CIDR format
     */
    transitSubnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VRF configuration
     */
    vrfConfig?: pulumi.Input<inputs.PolicyTier0GatewayVrfConfig>;
    /**
     * VRF transit subnets in CIDR format
     */
    vrfTransitSubnets?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a PolicyTier0Gateway resource.
 */
export interface PolicyTier0GatewayArgs {
    /**
     * BGP routing configuration
     */
    bgpConfig?: pulumi.Input<inputs.PolicyTier0GatewayBgpConfig>;
    /**
     * Default rule logging
     */
    defaultRuleLogging?: pulumi.Input<boolean>;
    /**
     * Description for this resource
     */
    description?: pulumi.Input<string>;
    /**
     * Policy path to DHCP server or relay configuration to use for this Tier0
     */
    dhcpConfigPath?: pulumi.Input<string>;
    /**
     * Display name for this resource
     */
    displayName: pulumi.Input<string>;
    /**
     * The path of the edge cluster connected to this gateway
     */
    edgeClusterPath?: pulumi.Input<string>;
    /**
     * Enable edge firewall
     */
    enableFirewall?: pulumi.Input<boolean>;
    /**
     * Failover mode
     */
    failoverMode?: pulumi.Input<string>;
    /**
     * Force whitelisting
     *
     * @deprecated Deprecated
     */
    forceWhitelisting?: pulumi.Input<boolean>;
    /**
     * High-availability Mode for Tier-0
     */
    haMode?: pulumi.Input<string>;
    /**
     * Internal transit subnets in CIDR format
     */
    internalTransitSubnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Locale Service for the gateway
     */
    intersiteConfig?: pulumi.Input<inputs.PolicyTier0GatewayIntersiteConfig>;
    /**
     * The path of an IPv6 DAD profile
     */
    ipv6DadProfilePath?: pulumi.Input<string>;
    /**
     * The path of an IPv6 NDRA profile
     */
    ipv6NdraProfilePath?: pulumi.Input<string>;
    /**
     * Locale Service for the gateway
     */
    localeServices?: pulumi.Input<pulumi.Input<inputs.PolicyTier0GatewayLocaleService>[]>;
    /**
     * NSX ID for this resource
     */
    nsxId?: pulumi.Input<string>;
    /**
     * Route distinguisher administrator address
     */
    rdAdminAddress?: pulumi.Input<string>;
    /**
     * Route Redistribution configuration
     *
     * @deprecated Deprecated
     */
    redistributionConfig?: pulumi.Input<inputs.PolicyTier0GatewayRedistributionConfig>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.PolicyTier0GatewayTag>[]>;
    /**
     * Transit subnets in CIDR format
     */
    transitSubnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VRF configuration
     */
    vrfConfig?: pulumi.Input<inputs.PolicyTier0GatewayVrfConfig>;
    /**
     * VRF transit subnets in CIDR format
     */
    vrfTransitSubnets?: pulumi.Input<pulumi.Input<string>[]>;
}
