// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LbCookiePersistenceProfile extends pulumi.CustomResource {
    /**
     * Get an existing LbCookiePersistenceProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LbCookiePersistenceProfileState, opts?: pulumi.CustomResourceOptions): LbCookiePersistenceProfile {
        return new LbCookiePersistenceProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/lbCookiePersistenceProfile:LbCookiePersistenceProfile';

    /**
     * Returns true if the given object is an instance of LbCookiePersistenceProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LbCookiePersistenceProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LbCookiePersistenceProfile.__pulumiType;
    }

    /**
     * A boolean flag which reflects whether once the server points by this cookie is down, a new server is selected, or the
     * requests will be rejected
     */
    public readonly cookieFallback!: pulumi.Output<boolean | undefined>;
    /**
     * A boolean flag which reflects whether the cookie value (server IP and port) would be encrypted or in plain text
     */
    public readonly cookieGarble!: pulumi.Output<boolean | undefined>;
    /**
     * The cookie persistence mode
     */
    public readonly cookieMode!: pulumi.Output<string | undefined>;
    /**
     * The name of the cookie
     */
    public readonly cookieName!: pulumi.Output<string>;
    /**
     * Description of this resource
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of this resource. Defaults to ID if not set
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Additional parameters for the INSERT cookie mode
     */
    public readonly insertModeParams!: pulumi.Output<outputs.LbCookiePersistenceProfileInsertModeParams | undefined>;
    /**
     * A boolean flag which reflects whether the cookie persistence is private or shared
     */
    public readonly persistenceShared!: pulumi.Output<boolean | undefined>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    public readonly tags!: pulumi.Output<outputs.LbCookiePersistenceProfileTag[] | undefined>;

    /**
     * Create a LbCookiePersistenceProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LbCookiePersistenceProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LbCookiePersistenceProfileArgs | LbCookiePersistenceProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LbCookiePersistenceProfileState | undefined;
            resourceInputs["cookieFallback"] = state ? state.cookieFallback : undefined;
            resourceInputs["cookieGarble"] = state ? state.cookieGarble : undefined;
            resourceInputs["cookieMode"] = state ? state.cookieMode : undefined;
            resourceInputs["cookieName"] = state ? state.cookieName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["insertModeParams"] = state ? state.insertModeParams : undefined;
            resourceInputs["persistenceShared"] = state ? state.persistenceShared : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as LbCookiePersistenceProfileArgs | undefined;
            if ((!args || args.cookieName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cookieName'");
            }
            resourceInputs["cookieFallback"] = args ? args.cookieFallback : undefined;
            resourceInputs["cookieGarble"] = args ? args.cookieGarble : undefined;
            resourceInputs["cookieMode"] = args ? args.cookieMode : undefined;
            resourceInputs["cookieName"] = args ? args.cookieName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["insertModeParams"] = args ? args.insertModeParams : undefined;
            resourceInputs["persistenceShared"] = args ? args.persistenceShared : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["revision"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LbCookiePersistenceProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LbCookiePersistenceProfile resources.
 */
export interface LbCookiePersistenceProfileState {
    /**
     * A boolean flag which reflects whether once the server points by this cookie is down, a new server is selected, or the
     * requests will be rejected
     */
    cookieFallback?: pulumi.Input<boolean>;
    /**
     * A boolean flag which reflects whether the cookie value (server IP and port) would be encrypted or in plain text
     */
    cookieGarble?: pulumi.Input<boolean>;
    /**
     * The cookie persistence mode
     */
    cookieMode?: pulumi.Input<string>;
    /**
     * The name of the cookie
     */
    cookieName?: pulumi.Input<string>;
    /**
     * Description of this resource
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of this resource. Defaults to ID if not set
     */
    displayName?: pulumi.Input<string>;
    /**
     * Additional parameters for the INSERT cookie mode
     */
    insertModeParams?: pulumi.Input<inputs.LbCookiePersistenceProfileInsertModeParams>;
    /**
     * A boolean flag which reflects whether the cookie persistence is private or shared
     */
    persistenceShared?: pulumi.Input<boolean>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    revision?: pulumi.Input<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.LbCookiePersistenceProfileTag>[]>;
}

/**
 * The set of arguments for constructing a LbCookiePersistenceProfile resource.
 */
export interface LbCookiePersistenceProfileArgs {
    /**
     * A boolean flag which reflects whether once the server points by this cookie is down, a new server is selected, or the
     * requests will be rejected
     */
    cookieFallback?: pulumi.Input<boolean>;
    /**
     * A boolean flag which reflects whether the cookie value (server IP and port) would be encrypted or in plain text
     */
    cookieGarble?: pulumi.Input<boolean>;
    /**
     * The cookie persistence mode
     */
    cookieMode?: pulumi.Input<string>;
    /**
     * The name of the cookie
     */
    cookieName: pulumi.Input<string>;
    /**
     * Description of this resource
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of this resource. Defaults to ID if not set
     */
    displayName?: pulumi.Input<string>;
    /**
     * Additional parameters for the INSERT cookie mode
     */
    insertModeParams?: pulumi.Input<inputs.LbCookiePersistenceProfileInsertModeParams>;
    /**
     * A boolean flag which reflects whether the cookie persistence is private or shared
     */
    persistenceShared?: pulumi.Input<boolean>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.LbCookiePersistenceProfileTag>[]>;
}
