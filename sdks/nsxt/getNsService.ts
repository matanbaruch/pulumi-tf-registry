// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNsService(args?: GetNsServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetNsServiceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nsxt:index/getNsService:getNsService", {
        "description": args.description,
        "displayName": args.displayName,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNsService.
 */
export interface GetNsServiceArgs {
    description?: string;
    displayName?: string;
    id?: string;
}

/**
 * A collection of values returned by getNsService.
 */
export interface GetNsServiceResult {
    readonly description: string;
    readonly displayName: string;
    readonly id: string;
}
export function getNsServiceOutput(args?: GetNsServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNsServiceResult> {
    return pulumi.output(args).apply((a: any) => getNsService(a, opts))
}

/**
 * A collection of arguments for invoking getNsService.
 */
export interface GetNsServiceOutputArgs {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
