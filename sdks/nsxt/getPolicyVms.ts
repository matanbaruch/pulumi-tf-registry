// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPolicyVms(args?: GetPolicyVmsArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyVmsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nsxt:index/getPolicyVms:getPolicyVms", {
        "context": args.context,
        "guestOs": args.guestOs,
        "id": args.id,
        "state": args.state,
        "valueType": args.valueType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPolicyVms.
 */
export interface GetPolicyVmsArgs {
    context?: inputs.GetPolicyVmsContext;
    guestOs?: string;
    id?: string;
    state?: string;
    valueType?: string;
}

/**
 * A collection of values returned by getPolicyVms.
 */
export interface GetPolicyVmsResult {
    readonly context?: outputs.GetPolicyVmsContext;
    readonly guestOs?: string;
    readonly id: string;
    readonly items: {[key: string]: string};
    readonly state?: string;
    readonly valueType?: string;
}
export function getPolicyVmsOutput(args?: GetPolicyVmsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyVmsResult> {
    return pulumi.output(args).apply((a: any) => getPolicyVms(a, opts))
}

/**
 * A collection of arguments for invoking getPolicyVms.
 */
export interface GetPolicyVmsOutputArgs {
    context?: pulumi.Input<inputs.GetPolicyVmsContextArgs>;
    guestOs?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    valueType?: pulumi.Input<string>;
}
