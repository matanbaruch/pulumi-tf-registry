// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EdgeTransportNode extends pulumi.CustomResource {
    /**
     * Get an existing EdgeTransportNode resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdgeTransportNodeState, opts?: pulumi.CustomResourceOptions): EdgeTransportNode {
        return new EdgeTransportNode(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/edgeTransportNode:EdgeTransportNode';

    /**
     * Returns true if the given object is an instance of EdgeTransportNode.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdgeTransportNode {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdgeTransportNode.__pulumiType;
    }

    /**
     * Config for automatic deployment of edge node virtual machine
     */
    public readonly deploymentConfig!: pulumi.Output<outputs.EdgeTransportNodeDeploymentConfig | undefined>;
    /**
     * Description for this resource
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Display name for this resource
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * ID of the Node
     */
    public readonly externalId!: pulumi.Output<string>;
    /**
     * Id of the failure domain
     */
    public readonly failureDomain!: pulumi.Output<string>;
    /**
     * Fully qualified domain name of the fabric node
     */
    public /*out*/ readonly fqdn!: pulumi.Output<string>;
    /**
     * IP Addresses of the Node, version 4 or 6
     */
    public readonly ipAddresses!: pulumi.Output<string[]>;
    /**
     * Current configuration on edge node
     */
    public readonly nodeSettings!: pulumi.Output<outputs.EdgeTransportNodeNodeSettings>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * Standard host switch specification
     */
    public readonly standardHostSwitches!: pulumi.Output<outputs.EdgeTransportNodeStandardHostSwitch[]>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    public readonly tags!: pulumi.Output<outputs.EdgeTransportNodeTag[] | undefined>;

    /**
     * Create a EdgeTransportNode resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdgeTransportNodeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdgeTransportNodeArgs | EdgeTransportNodeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdgeTransportNodeState | undefined;
            resourceInputs["deploymentConfig"] = state ? state.deploymentConfig : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["failureDomain"] = state ? state.failureDomain : undefined;
            resourceInputs["fqdn"] = state ? state.fqdn : undefined;
            resourceInputs["ipAddresses"] = state ? state.ipAddresses : undefined;
            resourceInputs["nodeSettings"] = state ? state.nodeSettings : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["standardHostSwitches"] = state ? state.standardHostSwitches : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as EdgeTransportNodeArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.nodeSettings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeSettings'");
            }
            if ((!args || args.standardHostSwitches === undefined) && !opts.urn) {
                throw new Error("Missing required property 'standardHostSwitches'");
            }
            resourceInputs["deploymentConfig"] = args ? args.deploymentConfig : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["externalId"] = args ? args.externalId : undefined;
            resourceInputs["failureDomain"] = args ? args.failureDomain : undefined;
            resourceInputs["ipAddresses"] = args ? args.ipAddresses : undefined;
            resourceInputs["nodeSettings"] = args ? args.nodeSettings : undefined;
            resourceInputs["standardHostSwitches"] = args ? args.standardHostSwitches : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["fqdn"] = undefined /*out*/;
            resourceInputs["revision"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EdgeTransportNode.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EdgeTransportNode resources.
 */
export interface EdgeTransportNodeState {
    /**
     * Config for automatic deployment of edge node virtual machine
     */
    deploymentConfig?: pulumi.Input<inputs.EdgeTransportNodeDeploymentConfig>;
    /**
     * Description for this resource
     */
    description?: pulumi.Input<string>;
    /**
     * Display name for this resource
     */
    displayName?: pulumi.Input<string>;
    /**
     * ID of the Node
     */
    externalId?: pulumi.Input<string>;
    /**
     * Id of the failure domain
     */
    failureDomain?: pulumi.Input<string>;
    /**
     * Fully qualified domain name of the fabric node
     */
    fqdn?: pulumi.Input<string>;
    /**
     * IP Addresses of the Node, version 4 or 6
     */
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Current configuration on edge node
     */
    nodeSettings?: pulumi.Input<inputs.EdgeTransportNodeNodeSettings>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    revision?: pulumi.Input<number>;
    /**
     * Standard host switch specification
     */
    standardHostSwitches?: pulumi.Input<pulumi.Input<inputs.EdgeTransportNodeStandardHostSwitch>[]>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.EdgeTransportNodeTag>[]>;
}

/**
 * The set of arguments for constructing a EdgeTransportNode resource.
 */
export interface EdgeTransportNodeArgs {
    /**
     * Config for automatic deployment of edge node virtual machine
     */
    deploymentConfig?: pulumi.Input<inputs.EdgeTransportNodeDeploymentConfig>;
    /**
     * Description for this resource
     */
    description?: pulumi.Input<string>;
    /**
     * Display name for this resource
     */
    displayName: pulumi.Input<string>;
    /**
     * ID of the Node
     */
    externalId?: pulumi.Input<string>;
    /**
     * Id of the failure domain
     */
    failureDomain?: pulumi.Input<string>;
    /**
     * IP Addresses of the Node, version 4 or 6
     */
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Current configuration on edge node
     */
    nodeSettings: pulumi.Input<inputs.EdgeTransportNodeNodeSettings>;
    /**
     * Standard host switch specification
     */
    standardHostSwitches: pulumi.Input<pulumi.Input<inputs.EdgeTransportNodeStandardHostSwitch>[]>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.EdgeTransportNodeTag>[]>;
}
