// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PolicyBgpConfig extends pulumi.CustomResource {
    /**
     * Get an existing PolicyBgpConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyBgpConfigState, opts?: pulumi.CustomResourceOptions): PolicyBgpConfig {
        return new PolicyBgpConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/policyBgpConfig:PolicyBgpConfig';

    /**
     * Returns true if the given object is an instance of PolicyBgpConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyBgpConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyBgpConfig.__pulumiType;
    }

    /**
     * Flag to enable ECMP
     */
    public readonly ecmp!: pulumi.Output<boolean | undefined>;
    /**
     * Flag to enable BGP configuration
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * NSX ID of associated Tier0 Gateway
     */
    public /*out*/ readonly gatewayId!: pulumi.Output<string>;
    /**
     * Gateway for this BGP config
     */
    public readonly gatewayPath!: pulumi.Output<string>;
    /**
     * BGP Graceful Restart Configuration Mode
     */
    public readonly gracefulRestartMode!: pulumi.Output<string | undefined>;
    /**
     * BGP Stale Route Timer
     */
    public readonly gracefulRestartStaleRouteTimer!: pulumi.Output<number | undefined>;
    /**
     * BGP Graceful Restart Timer
     */
    public readonly gracefulRestartTimer!: pulumi.Output<number | undefined>;
    /**
     * Enable inter SR IBGP configuration
     */
    public readonly interSrIbgp!: pulumi.Output<boolean>;
    /**
     * BGP AS number in ASPLAIN/ASDOT Format
     */
    public readonly localAsNum!: pulumi.Output<string>;
    /**
     * NSX ID of associated Gateway Locale Service
     */
    public /*out*/ readonly localeServiceId!: pulumi.Output<string>;
    /**
     * Flag to enable BGP multipath relax option
     */
    public readonly multipathRelax!: pulumi.Output<boolean>;
    /**
     * Policy path for this resource
     */
    public /*out*/ readonly path!: pulumi.Output<string>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * List of routes to be aggregated
     */
    public readonly routeAggregations!: pulumi.Output<outputs.PolicyBgpConfigRouteAggregation[] | undefined>;
    /**
     * Site Path for this BGP config
     */
    public readonly sitePath!: pulumi.Output<string | undefined>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    public readonly tags!: pulumi.Output<outputs.PolicyBgpConfigTag[] | undefined>;

    /**
     * Create a PolicyBgpConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyBgpConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyBgpConfigArgs | PolicyBgpConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyBgpConfigState | undefined;
            resourceInputs["ecmp"] = state ? state.ecmp : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["gatewayId"] = state ? state.gatewayId : undefined;
            resourceInputs["gatewayPath"] = state ? state.gatewayPath : undefined;
            resourceInputs["gracefulRestartMode"] = state ? state.gracefulRestartMode : undefined;
            resourceInputs["gracefulRestartStaleRouteTimer"] = state ? state.gracefulRestartStaleRouteTimer : undefined;
            resourceInputs["gracefulRestartTimer"] = state ? state.gracefulRestartTimer : undefined;
            resourceInputs["interSrIbgp"] = state ? state.interSrIbgp : undefined;
            resourceInputs["localAsNum"] = state ? state.localAsNum : undefined;
            resourceInputs["localeServiceId"] = state ? state.localeServiceId : undefined;
            resourceInputs["multipathRelax"] = state ? state.multipathRelax : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["routeAggregations"] = state ? state.routeAggregations : undefined;
            resourceInputs["sitePath"] = state ? state.sitePath : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as PolicyBgpConfigArgs | undefined;
            if ((!args || args.gatewayPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayPath'");
            }
            resourceInputs["ecmp"] = args ? args.ecmp : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["gatewayPath"] = args ? args.gatewayPath : undefined;
            resourceInputs["gracefulRestartMode"] = args ? args.gracefulRestartMode : undefined;
            resourceInputs["gracefulRestartStaleRouteTimer"] = args ? args.gracefulRestartStaleRouteTimer : undefined;
            resourceInputs["gracefulRestartTimer"] = args ? args.gracefulRestartTimer : undefined;
            resourceInputs["interSrIbgp"] = args ? args.interSrIbgp : undefined;
            resourceInputs["localAsNum"] = args ? args.localAsNum : undefined;
            resourceInputs["multipathRelax"] = args ? args.multipathRelax : undefined;
            resourceInputs["routeAggregations"] = args ? args.routeAggregations : undefined;
            resourceInputs["sitePath"] = args ? args.sitePath : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["gatewayId"] = undefined /*out*/;
            resourceInputs["localeServiceId"] = undefined /*out*/;
            resourceInputs["path"] = undefined /*out*/;
            resourceInputs["revision"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyBgpConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PolicyBgpConfig resources.
 */
export interface PolicyBgpConfigState {
    /**
     * Flag to enable ECMP
     */
    ecmp?: pulumi.Input<boolean>;
    /**
     * Flag to enable BGP configuration
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * NSX ID of associated Tier0 Gateway
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * Gateway for this BGP config
     */
    gatewayPath?: pulumi.Input<string>;
    /**
     * BGP Graceful Restart Configuration Mode
     */
    gracefulRestartMode?: pulumi.Input<string>;
    /**
     * BGP Stale Route Timer
     */
    gracefulRestartStaleRouteTimer?: pulumi.Input<number>;
    /**
     * BGP Graceful Restart Timer
     */
    gracefulRestartTimer?: pulumi.Input<number>;
    /**
     * Enable inter SR IBGP configuration
     */
    interSrIbgp?: pulumi.Input<boolean>;
    /**
     * BGP AS number in ASPLAIN/ASDOT Format
     */
    localAsNum?: pulumi.Input<string>;
    /**
     * NSX ID of associated Gateway Locale Service
     */
    localeServiceId?: pulumi.Input<string>;
    /**
     * Flag to enable BGP multipath relax option
     */
    multipathRelax?: pulumi.Input<boolean>;
    /**
     * Policy path for this resource
     */
    path?: pulumi.Input<string>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    revision?: pulumi.Input<number>;
    /**
     * List of routes to be aggregated
     */
    routeAggregations?: pulumi.Input<pulumi.Input<inputs.PolicyBgpConfigRouteAggregation>[]>;
    /**
     * Site Path for this BGP config
     */
    sitePath?: pulumi.Input<string>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.PolicyBgpConfigTag>[]>;
}

/**
 * The set of arguments for constructing a PolicyBgpConfig resource.
 */
export interface PolicyBgpConfigArgs {
    /**
     * Flag to enable ECMP
     */
    ecmp?: pulumi.Input<boolean>;
    /**
     * Flag to enable BGP configuration
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Gateway for this BGP config
     */
    gatewayPath: pulumi.Input<string>;
    /**
     * BGP Graceful Restart Configuration Mode
     */
    gracefulRestartMode?: pulumi.Input<string>;
    /**
     * BGP Stale Route Timer
     */
    gracefulRestartStaleRouteTimer?: pulumi.Input<number>;
    /**
     * BGP Graceful Restart Timer
     */
    gracefulRestartTimer?: pulumi.Input<number>;
    /**
     * Enable inter SR IBGP configuration
     */
    interSrIbgp?: pulumi.Input<boolean>;
    /**
     * BGP AS number in ASPLAIN/ASDOT Format
     */
    localAsNum?: pulumi.Input<string>;
    /**
     * Flag to enable BGP multipath relax option
     */
    multipathRelax?: pulumi.Input<boolean>;
    /**
     * List of routes to be aggregated
     */
    routeAggregations?: pulumi.Input<pulumi.Input<inputs.PolicyBgpConfigRouteAggregation>[]>;
    /**
     * Site Path for this BGP config
     */
    sitePath?: pulumi.Input<string>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.PolicyBgpConfigTag>[]>;
}
