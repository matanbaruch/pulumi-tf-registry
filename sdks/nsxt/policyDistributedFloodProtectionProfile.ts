// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PolicyDistributedFloodProtectionProfile extends pulumi.CustomResource {
    /**
     * Get an existing PolicyDistributedFloodProtectionProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyDistributedFloodProtectionProfileState, opts?: pulumi.CustomResourceOptions): PolicyDistributedFloodProtectionProfile {
        return new PolicyDistributedFloodProtectionProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/policyDistributedFloodProtectionProfile:PolicyDistributedFloodProtectionProfile';

    /**
     * Returns true if the given object is an instance of PolicyDistributedFloodProtectionProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyDistributedFloodProtectionProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyDistributedFloodProtectionProfile.__pulumiType;
    }

    /**
     * Resource context
     */
    public readonly context!: pulumi.Output<outputs.PolicyDistributedFloodProtectionProfileContext | undefined>;
    /**
     * Description for this resource
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Display name for this resource
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Flag to indicate rst spoofing is enabled
     */
    public readonly enableRstSpoofing!: pulumi.Output<boolean | undefined>;
    /**
     * Flag to indicate syncache is enabled
     */
    public readonly enableSyncache!: pulumi.Output<boolean | undefined>;
    /**
     * Active ICMP connections limit
     */
    public readonly icmpActiveFlowLimit!: pulumi.Output<number | undefined>;
    /**
     * NSX ID for this resource
     */
    public readonly nsxId!: pulumi.Output<string>;
    /**
     * Timeout after first TN
     */
    public readonly otherActiveConnLimit!: pulumi.Output<number | undefined>;
    /**
     * Policy path for this resource
     */
    public /*out*/ readonly path!: pulumi.Output<string>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    public readonly tags!: pulumi.Output<outputs.PolicyDistributedFloodProtectionProfileTag[] | undefined>;
    /**
     * Active half open TCP connections limit
     */
    public readonly tcpHalfOpenConnLimit!: pulumi.Output<number | undefined>;
    /**
     * Active UDP connections limit
     */
    public readonly udpActiveFlowLimit!: pulumi.Output<number | undefined>;

    /**
     * Create a PolicyDistributedFloodProtectionProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyDistributedFloodProtectionProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyDistributedFloodProtectionProfileArgs | PolicyDistributedFloodProtectionProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyDistributedFloodProtectionProfileState | undefined;
            resourceInputs["context"] = state ? state.context : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["enableRstSpoofing"] = state ? state.enableRstSpoofing : undefined;
            resourceInputs["enableSyncache"] = state ? state.enableSyncache : undefined;
            resourceInputs["icmpActiveFlowLimit"] = state ? state.icmpActiveFlowLimit : undefined;
            resourceInputs["nsxId"] = state ? state.nsxId : undefined;
            resourceInputs["otherActiveConnLimit"] = state ? state.otherActiveConnLimit : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tcpHalfOpenConnLimit"] = state ? state.tcpHalfOpenConnLimit : undefined;
            resourceInputs["udpActiveFlowLimit"] = state ? state.udpActiveFlowLimit : undefined;
        } else {
            const args = argsOrState as PolicyDistributedFloodProtectionProfileArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["context"] = args ? args.context : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["enableRstSpoofing"] = args ? args.enableRstSpoofing : undefined;
            resourceInputs["enableSyncache"] = args ? args.enableSyncache : undefined;
            resourceInputs["icmpActiveFlowLimit"] = args ? args.icmpActiveFlowLimit : undefined;
            resourceInputs["nsxId"] = args ? args.nsxId : undefined;
            resourceInputs["otherActiveConnLimit"] = args ? args.otherActiveConnLimit : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tcpHalfOpenConnLimit"] = args ? args.tcpHalfOpenConnLimit : undefined;
            resourceInputs["udpActiveFlowLimit"] = args ? args.udpActiveFlowLimit : undefined;
            resourceInputs["path"] = undefined /*out*/;
            resourceInputs["revision"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyDistributedFloodProtectionProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PolicyDistributedFloodProtectionProfile resources.
 */
export interface PolicyDistributedFloodProtectionProfileState {
    /**
     * Resource context
     */
    context?: pulumi.Input<inputs.PolicyDistributedFloodProtectionProfileContext>;
    /**
     * Description for this resource
     */
    description?: pulumi.Input<string>;
    /**
     * Display name for this resource
     */
    displayName?: pulumi.Input<string>;
    /**
     * Flag to indicate rst spoofing is enabled
     */
    enableRstSpoofing?: pulumi.Input<boolean>;
    /**
     * Flag to indicate syncache is enabled
     */
    enableSyncache?: pulumi.Input<boolean>;
    /**
     * Active ICMP connections limit
     */
    icmpActiveFlowLimit?: pulumi.Input<number>;
    /**
     * NSX ID for this resource
     */
    nsxId?: pulumi.Input<string>;
    /**
     * Timeout after first TN
     */
    otherActiveConnLimit?: pulumi.Input<number>;
    /**
     * Policy path for this resource
     */
    path?: pulumi.Input<string>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    revision?: pulumi.Input<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.PolicyDistributedFloodProtectionProfileTag>[]>;
    /**
     * Active half open TCP connections limit
     */
    tcpHalfOpenConnLimit?: pulumi.Input<number>;
    /**
     * Active UDP connections limit
     */
    udpActiveFlowLimit?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a PolicyDistributedFloodProtectionProfile resource.
 */
export interface PolicyDistributedFloodProtectionProfileArgs {
    /**
     * Resource context
     */
    context?: pulumi.Input<inputs.PolicyDistributedFloodProtectionProfileContext>;
    /**
     * Description for this resource
     */
    description?: pulumi.Input<string>;
    /**
     * Display name for this resource
     */
    displayName: pulumi.Input<string>;
    /**
     * Flag to indicate rst spoofing is enabled
     */
    enableRstSpoofing?: pulumi.Input<boolean>;
    /**
     * Flag to indicate syncache is enabled
     */
    enableSyncache?: pulumi.Input<boolean>;
    /**
     * Active ICMP connections limit
     */
    icmpActiveFlowLimit?: pulumi.Input<number>;
    /**
     * NSX ID for this resource
     */
    nsxId?: pulumi.Input<string>;
    /**
     * Timeout after first TN
     */
    otherActiveConnLimit?: pulumi.Input<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.PolicyDistributedFloodProtectionProfileTag>[]>;
    /**
     * Active half open TCP connections limit
     */
    tcpHalfOpenConnLimit?: pulumi.Input<number>;
    /**
     * Active UDP connections limit
     */
    udpActiveFlowLimit?: pulumi.Input<number>;
}
