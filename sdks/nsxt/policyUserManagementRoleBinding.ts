// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PolicyUserManagementRoleBinding extends pulumi.CustomResource {
    /**
     * Get an existing PolicyUserManagementRoleBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyUserManagementRoleBindingState, opts?: pulumi.CustomResourceOptions): PolicyUserManagementRoleBinding {
        return new PolicyUserManagementRoleBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/policyUserManagementRoleBinding:PolicyUserManagementRoleBinding';

    /**
     * Returns true if the given object is an instance of PolicyUserManagementRoleBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyUserManagementRoleBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyUserManagementRoleBinding.__pulumiType;
    }

    /**
     * Description for this resource
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Display name of this resource
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * ID of the external identity source
     */
    public readonly identitySourceId!: pulumi.Output<string | undefined>;
    /**
     * ID of the external identity source
     */
    public readonly identitySourceType!: pulumi.Output<string | undefined>;
    /**
     * User/Group's name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Allow overwriting auto-created role binding on NSX for local users
     */
    public readonly overwriteLocalUser!: pulumi.Output<boolean | undefined>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * List of roles that are associated with the user, limiting them to a path
     */
    public readonly rolesForPaths!: pulumi.Output<outputs.PolicyUserManagementRoleBindingRolesForPath[]>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    public readonly tags!: pulumi.Output<outputs.PolicyUserManagementRoleBindingTag[] | undefined>;
    /**
     * Indicates the type of the user
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Local user's numeric id
     */
    public /*out*/ readonly userId!: pulumi.Output<string>;

    /**
     * Create a PolicyUserManagementRoleBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyUserManagementRoleBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyUserManagementRoleBindingArgs | PolicyUserManagementRoleBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyUserManagementRoleBindingState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["identitySourceId"] = state ? state.identitySourceId : undefined;
            resourceInputs["identitySourceType"] = state ? state.identitySourceType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overwriteLocalUser"] = state ? state.overwriteLocalUser : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["rolesForPaths"] = state ? state.rolesForPaths : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
        } else {
            const args = argsOrState as PolicyUserManagementRoleBindingArgs | undefined;
            if ((!args || args.rolesForPaths === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rolesForPaths'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["identitySourceId"] = args ? args.identitySourceId : undefined;
            resourceInputs["identitySourceType"] = args ? args.identitySourceType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overwriteLocalUser"] = args ? args.overwriteLocalUser : undefined;
            resourceInputs["rolesForPaths"] = args ? args.rolesForPaths : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["revision"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyUserManagementRoleBinding.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PolicyUserManagementRoleBinding resources.
 */
export interface PolicyUserManagementRoleBindingState {
    /**
     * Description for this resource
     */
    description?: pulumi.Input<string>;
    /**
     * Display name of this resource
     */
    displayName?: pulumi.Input<string>;
    /**
     * ID of the external identity source
     */
    identitySourceId?: pulumi.Input<string>;
    /**
     * ID of the external identity source
     */
    identitySourceType?: pulumi.Input<string>;
    /**
     * User/Group's name
     */
    name?: pulumi.Input<string>;
    /**
     * Allow overwriting auto-created role binding on NSX for local users
     */
    overwriteLocalUser?: pulumi.Input<boolean>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    revision?: pulumi.Input<number>;
    /**
     * List of roles that are associated with the user, limiting them to a path
     */
    rolesForPaths?: pulumi.Input<pulumi.Input<inputs.PolicyUserManagementRoleBindingRolesForPath>[]>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.PolicyUserManagementRoleBindingTag>[]>;
    /**
     * Indicates the type of the user
     */
    type?: pulumi.Input<string>;
    /**
     * Local user's numeric id
     */
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolicyUserManagementRoleBinding resource.
 */
export interface PolicyUserManagementRoleBindingArgs {
    /**
     * Description for this resource
     */
    description?: pulumi.Input<string>;
    /**
     * Display name of this resource
     */
    displayName?: pulumi.Input<string>;
    /**
     * ID of the external identity source
     */
    identitySourceId?: pulumi.Input<string>;
    /**
     * ID of the external identity source
     */
    identitySourceType?: pulumi.Input<string>;
    /**
     * User/Group's name
     */
    name?: pulumi.Input<string>;
    /**
     * Allow overwriting auto-created role binding on NSX for local users
     */
    overwriteLocalUser?: pulumi.Input<boolean>;
    /**
     * List of roles that are associated with the user, limiting them to a path
     */
    rolesForPaths: pulumi.Input<pulumi.Input<inputs.PolicyUserManagementRoleBindingRolesForPath>[]>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.PolicyUserManagementRoleBindingTag>[]>;
    /**
     * Indicates the type of the user
     */
    type: pulumi.Input<string>;
}
