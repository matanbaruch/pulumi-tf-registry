// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PolicyBgpNeighbor extends pulumi.CustomResource {
    /**
     * Get an existing PolicyBgpNeighbor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyBgpNeighborState, opts?: pulumi.CustomResourceOptions): PolicyBgpNeighbor {
        return new PolicyBgpNeighbor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/policyBgpNeighbor:PolicyBgpNeighbor';

    /**
     * Returns true if the given object is an instance of PolicyBgpNeighbor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyBgpNeighbor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyBgpNeighbor.__pulumiType;
    }

    /**
     * Flag to enable allowas_in option for BGP neighbor
     */
    public readonly allowAsIn!: pulumi.Output<boolean | undefined>;
    /**
     * BFD configuration for failure detection
     */
    public readonly bfdConfig!: pulumi.Output<outputs.PolicyBgpNeighborBfdConfig | undefined>;
    /**
     * Policy path to the BGP for this neighbor
     */
    public readonly bgpPath!: pulumi.Output<string>;
    /**
     * Description for this resource
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Display name for this resource
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * BGP Graceful Restart Configuration Mode
     */
    public readonly gracefulRestartMode!: pulumi.Output<string | undefined>;
    /**
     * Wait time in seconds before declaring peer dead
     */
    public readonly holdDownTime!: pulumi.Output<number | undefined>;
    /**
     * Interval between keep alive messages sent to peer
     */
    public readonly keepAliveTime!: pulumi.Output<number | undefined>;
    /**
     * Maximum number of hops allowed to reach BGP neighbor
     */
    public readonly maximumHopLimit!: pulumi.Output<number | undefined>;
    /**
     * Neighbor IP Address
     */
    public readonly neighborAddress!: pulumi.Output<string>;
    /**
     * NSX ID for this resource
     */
    public readonly nsxId!: pulumi.Output<string>;
    /**
     * Password for BGP neighbor authentication
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Policy path for this resource
     */
    public /*out*/ readonly path!: pulumi.Output<string>;
    /**
     * ASN of the neighbor in ASPLAIN or ASDOT Format
     */
    public readonly remoteAsNum!: pulumi.Output<string>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * Enable address families and route filtering in each direction
     */
    public readonly routeFilterings!: pulumi.Output<outputs.PolicyBgpNeighborRouteFiltering[] | undefined>;
    /**
     * Source IP Addresses for BGP peering
     */
    public readonly sourceAddresses!: pulumi.Output<string[] | undefined>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    public readonly tags!: pulumi.Output<outputs.PolicyBgpNeighborTag[] | undefined>;

    /**
     * Create a PolicyBgpNeighbor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyBgpNeighborArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyBgpNeighborArgs | PolicyBgpNeighborState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyBgpNeighborState | undefined;
            resourceInputs["allowAsIn"] = state ? state.allowAsIn : undefined;
            resourceInputs["bfdConfig"] = state ? state.bfdConfig : undefined;
            resourceInputs["bgpPath"] = state ? state.bgpPath : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["gracefulRestartMode"] = state ? state.gracefulRestartMode : undefined;
            resourceInputs["holdDownTime"] = state ? state.holdDownTime : undefined;
            resourceInputs["keepAliveTime"] = state ? state.keepAliveTime : undefined;
            resourceInputs["maximumHopLimit"] = state ? state.maximumHopLimit : undefined;
            resourceInputs["neighborAddress"] = state ? state.neighborAddress : undefined;
            resourceInputs["nsxId"] = state ? state.nsxId : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["remoteAsNum"] = state ? state.remoteAsNum : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["routeFilterings"] = state ? state.routeFilterings : undefined;
            resourceInputs["sourceAddresses"] = state ? state.sourceAddresses : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as PolicyBgpNeighborArgs | undefined;
            if ((!args || args.bgpPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bgpPath'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.neighborAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'neighborAddress'");
            }
            if ((!args || args.remoteAsNum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remoteAsNum'");
            }
            resourceInputs["allowAsIn"] = args ? args.allowAsIn : undefined;
            resourceInputs["bfdConfig"] = args ? args.bfdConfig : undefined;
            resourceInputs["bgpPath"] = args ? args.bgpPath : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["gracefulRestartMode"] = args ? args.gracefulRestartMode : undefined;
            resourceInputs["holdDownTime"] = args ? args.holdDownTime : undefined;
            resourceInputs["keepAliveTime"] = args ? args.keepAliveTime : undefined;
            resourceInputs["maximumHopLimit"] = args ? args.maximumHopLimit : undefined;
            resourceInputs["neighborAddress"] = args ? args.neighborAddress : undefined;
            resourceInputs["nsxId"] = args ? args.nsxId : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["remoteAsNum"] = args ? args.remoteAsNum : undefined;
            resourceInputs["routeFilterings"] = args ? args.routeFilterings : undefined;
            resourceInputs["sourceAddresses"] = args ? args.sourceAddresses : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["path"] = undefined /*out*/;
            resourceInputs["revision"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(PolicyBgpNeighbor.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PolicyBgpNeighbor resources.
 */
export interface PolicyBgpNeighborState {
    /**
     * Flag to enable allowas_in option for BGP neighbor
     */
    allowAsIn?: pulumi.Input<boolean>;
    /**
     * BFD configuration for failure detection
     */
    bfdConfig?: pulumi.Input<inputs.PolicyBgpNeighborBfdConfig>;
    /**
     * Policy path to the BGP for this neighbor
     */
    bgpPath?: pulumi.Input<string>;
    /**
     * Description for this resource
     */
    description?: pulumi.Input<string>;
    /**
     * Display name for this resource
     */
    displayName?: pulumi.Input<string>;
    /**
     * BGP Graceful Restart Configuration Mode
     */
    gracefulRestartMode?: pulumi.Input<string>;
    /**
     * Wait time in seconds before declaring peer dead
     */
    holdDownTime?: pulumi.Input<number>;
    /**
     * Interval between keep alive messages sent to peer
     */
    keepAliveTime?: pulumi.Input<number>;
    /**
     * Maximum number of hops allowed to reach BGP neighbor
     */
    maximumHopLimit?: pulumi.Input<number>;
    /**
     * Neighbor IP Address
     */
    neighborAddress?: pulumi.Input<string>;
    /**
     * NSX ID for this resource
     */
    nsxId?: pulumi.Input<string>;
    /**
     * Password for BGP neighbor authentication
     */
    password?: pulumi.Input<string>;
    /**
     * Policy path for this resource
     */
    path?: pulumi.Input<string>;
    /**
     * ASN of the neighbor in ASPLAIN or ASDOT Format
     */
    remoteAsNum?: pulumi.Input<string>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    revision?: pulumi.Input<number>;
    /**
     * Enable address families and route filtering in each direction
     */
    routeFilterings?: pulumi.Input<pulumi.Input<inputs.PolicyBgpNeighborRouteFiltering>[]>;
    /**
     * Source IP Addresses for BGP peering
     */
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.PolicyBgpNeighborTag>[]>;
}

/**
 * The set of arguments for constructing a PolicyBgpNeighbor resource.
 */
export interface PolicyBgpNeighborArgs {
    /**
     * Flag to enable allowas_in option for BGP neighbor
     */
    allowAsIn?: pulumi.Input<boolean>;
    /**
     * BFD configuration for failure detection
     */
    bfdConfig?: pulumi.Input<inputs.PolicyBgpNeighborBfdConfig>;
    /**
     * Policy path to the BGP for this neighbor
     */
    bgpPath: pulumi.Input<string>;
    /**
     * Description for this resource
     */
    description?: pulumi.Input<string>;
    /**
     * Display name for this resource
     */
    displayName: pulumi.Input<string>;
    /**
     * BGP Graceful Restart Configuration Mode
     */
    gracefulRestartMode?: pulumi.Input<string>;
    /**
     * Wait time in seconds before declaring peer dead
     */
    holdDownTime?: pulumi.Input<number>;
    /**
     * Interval between keep alive messages sent to peer
     */
    keepAliveTime?: pulumi.Input<number>;
    /**
     * Maximum number of hops allowed to reach BGP neighbor
     */
    maximumHopLimit?: pulumi.Input<number>;
    /**
     * Neighbor IP Address
     */
    neighborAddress: pulumi.Input<string>;
    /**
     * NSX ID for this resource
     */
    nsxId?: pulumi.Input<string>;
    /**
     * Password for BGP neighbor authentication
     */
    password?: pulumi.Input<string>;
    /**
     * ASN of the neighbor in ASPLAIN or ASDOT Format
     */
    remoteAsNum: pulumi.Input<string>;
    /**
     * Enable address families and route filtering in each direction
     */
    routeFilterings?: pulumi.Input<pulumi.Input<inputs.PolicyBgpNeighborRouteFiltering>[]>;
    /**
     * Source IP Addresses for BGP peering
     */
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.PolicyBgpNeighborTag>[]>;
}
