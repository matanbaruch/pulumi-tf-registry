// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getProviderInfo(args?: GetProviderInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetProviderInfoResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nsxt:index/getProviderInfo:getProviderInfo", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProviderInfo.
 */
export interface GetProviderInfoArgs {
    id?: string;
}

/**
 * A collection of values returned by getProviderInfo.
 */
export interface GetProviderInfoResult {
    readonly commit: string;
    readonly date: string;
    readonly id: string;
}
export function getProviderInfoOutput(args?: GetProviderInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProviderInfoResult> {
    return pulumi.output(args).apply((a: any) => getProviderInfo(a, opts))
}

/**
 * A collection of arguments for invoking getProviderInfo.
 */
export interface GetProviderInfoOutputArgs {
    id?: pulumi.Input<string>;
}
