// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PolicyEvpnTunnelEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing PolicyEvpnTunnelEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyEvpnTunnelEndpointState, opts?: pulumi.CustomResourceOptions): PolicyEvpnTunnelEndpoint {
        return new PolicyEvpnTunnelEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/policyEvpnTunnelEndpoint:PolicyEvpnTunnelEndpoint';

    /**
     * Returns true if the given object is an instance of PolicyEvpnTunnelEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyEvpnTunnelEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyEvpnTunnelEndpoint.__pulumiType;
    }

    /**
     * Description for this resource
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Display name for this resource
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Edge Node Path
     */
    public readonly edgeNodePath!: pulumi.Output<string>;
    /**
     * Path External Interfaceon Tier0 Gateway
     */
    public readonly externalInterfacePath!: pulumi.Output<string>;
    /**
     * Id of associated Tier0 Gateway on NSX
     */
    public /*out*/ readonly gatewayId!: pulumi.Output<string>;
    /**
     * Local IPv4 IP address
     */
    public readonly localAddress!: pulumi.Output<string>;
    /**
     * Id of associated Gateway Locale Service on NSX
     */
    public /*out*/ readonly localeServiceId!: pulumi.Output<string>;
    /**
     * Maximum transmission unit specifies the size of the largest packet that a network protocol can transmit
     */
    public readonly mtu!: pulumi.Output<number | undefined>;
    /**
     * NSX ID for this resource
     */
    public readonly nsxId!: pulumi.Output<string>;
    /**
     * Policy path for this resource
     */
    public /*out*/ readonly path!: pulumi.Output<string>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    public readonly tags!: pulumi.Output<outputs.PolicyEvpnTunnelEndpointTag[] | undefined>;

    /**
     * Create a PolicyEvpnTunnelEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyEvpnTunnelEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyEvpnTunnelEndpointArgs | PolicyEvpnTunnelEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyEvpnTunnelEndpointState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["edgeNodePath"] = state ? state.edgeNodePath : undefined;
            resourceInputs["externalInterfacePath"] = state ? state.externalInterfacePath : undefined;
            resourceInputs["gatewayId"] = state ? state.gatewayId : undefined;
            resourceInputs["localAddress"] = state ? state.localAddress : undefined;
            resourceInputs["localeServiceId"] = state ? state.localeServiceId : undefined;
            resourceInputs["mtu"] = state ? state.mtu : undefined;
            resourceInputs["nsxId"] = state ? state.nsxId : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as PolicyEvpnTunnelEndpointArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.edgeNodePath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'edgeNodePath'");
            }
            if ((!args || args.externalInterfacePath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'externalInterfacePath'");
            }
            if ((!args || args.localAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'localAddress'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["edgeNodePath"] = args ? args.edgeNodePath : undefined;
            resourceInputs["externalInterfacePath"] = args ? args.externalInterfacePath : undefined;
            resourceInputs["localAddress"] = args ? args.localAddress : undefined;
            resourceInputs["mtu"] = args ? args.mtu : undefined;
            resourceInputs["nsxId"] = args ? args.nsxId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["gatewayId"] = undefined /*out*/;
            resourceInputs["localeServiceId"] = undefined /*out*/;
            resourceInputs["path"] = undefined /*out*/;
            resourceInputs["revision"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyEvpnTunnelEndpoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PolicyEvpnTunnelEndpoint resources.
 */
export interface PolicyEvpnTunnelEndpointState {
    /**
     * Description for this resource
     */
    description?: pulumi.Input<string>;
    /**
     * Display name for this resource
     */
    displayName?: pulumi.Input<string>;
    /**
     * Edge Node Path
     */
    edgeNodePath?: pulumi.Input<string>;
    /**
     * Path External Interfaceon Tier0 Gateway
     */
    externalInterfacePath?: pulumi.Input<string>;
    /**
     * Id of associated Tier0 Gateway on NSX
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * Local IPv4 IP address
     */
    localAddress?: pulumi.Input<string>;
    /**
     * Id of associated Gateway Locale Service on NSX
     */
    localeServiceId?: pulumi.Input<string>;
    /**
     * Maximum transmission unit specifies the size of the largest packet that a network protocol can transmit
     */
    mtu?: pulumi.Input<number>;
    /**
     * NSX ID for this resource
     */
    nsxId?: pulumi.Input<string>;
    /**
     * Policy path for this resource
     */
    path?: pulumi.Input<string>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    revision?: pulumi.Input<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.PolicyEvpnTunnelEndpointTag>[]>;
}

/**
 * The set of arguments for constructing a PolicyEvpnTunnelEndpoint resource.
 */
export interface PolicyEvpnTunnelEndpointArgs {
    /**
     * Description for this resource
     */
    description?: pulumi.Input<string>;
    /**
     * Display name for this resource
     */
    displayName: pulumi.Input<string>;
    /**
     * Edge Node Path
     */
    edgeNodePath: pulumi.Input<string>;
    /**
     * Path External Interfaceon Tier0 Gateway
     */
    externalInterfacePath: pulumi.Input<string>;
    /**
     * Local IPv4 IP address
     */
    localAddress: pulumi.Input<string>;
    /**
     * Maximum transmission unit specifies the size of the largest packet that a network protocol can transmit
     */
    mtu?: pulumi.Input<number>;
    /**
     * NSX ID for this resource
     */
    nsxId?: pulumi.Input<string>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.PolicyEvpnTunnelEndpointTag>[]>;
}
