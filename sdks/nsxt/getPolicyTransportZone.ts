// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPolicyTransportZone(args?: GetPolicyTransportZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyTransportZoneResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nsxt:index/getPolicyTransportZone:getPolicyTransportZone", {
        "description": args.description,
        "displayName": args.displayName,
        "id": args.id,
        "isDefault": args.isDefault,
        "sitePath": args.sitePath,
        "transportType": args.transportType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPolicyTransportZone.
 */
export interface GetPolicyTransportZoneArgs {
    description?: string;
    displayName?: string;
    id?: string;
    isDefault?: boolean;
    sitePath?: string;
    transportType?: string;
}

/**
 * A collection of values returned by getPolicyTransportZone.
 */
export interface GetPolicyTransportZoneResult {
    readonly description: string;
    readonly displayName: string;
    readonly id: string;
    readonly isDefault: boolean;
    readonly path: string;
    readonly sitePath?: string;
    readonly transportType: string;
}
export function getPolicyTransportZoneOutput(args?: GetPolicyTransportZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyTransportZoneResult> {
    return pulumi.output(args).apply((a: any) => getPolicyTransportZone(a, opts))
}

/**
 * A collection of arguments for invoking getPolicyTransportZone.
 */
export interface GetPolicyTransportZoneOutputArgs {
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isDefault?: pulumi.Input<boolean>;
    sitePath?: pulumi.Input<string>;
    transportType?: pulumi.Input<string>;
}
