// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VlanLogicalSwitch extends pulumi.CustomResource {
    /**
     * Get an existing VlanLogicalSwitch resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VlanLogicalSwitchState, opts?: pulumi.CustomResourceOptions): VlanLogicalSwitch {
        return new VlanLogicalSwitch(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/vlanLogicalSwitch:VlanLogicalSwitch';

    /**
     * Returns true if the given object is an instance of VlanLogicalSwitch.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VlanLogicalSwitch {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VlanLogicalSwitch.__pulumiType;
    }

    /**
     * Address bindings for the Logical switch
     */
    public readonly addressBindings!: pulumi.Output<outputs.VlanLogicalSwitchAddressBinding[] | undefined>;
    /**
     * Represents Desired state of the object
     */
    public readonly adminState!: pulumi.Output<string | undefined>;
    /**
     * Description of this resource
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of this resource. Defaults to ID if not set
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * IP pool id that associated with a LogicalSwitch
     */
    public readonly ipPoolId!: pulumi.Output<string | undefined>;
    /**
     * Mac pool id that associated with a LogicalSwitch
     */
    public readonly macPoolId!: pulumi.Output<string | undefined>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will
     * be used if not specified
     */
    public readonly switchingProfileIds!: pulumi.Output<outputs.VlanLogicalSwitchSwitchingProfileId[] | undefined>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    public readonly tags!: pulumi.Output<outputs.VlanLogicalSwitchTag[] | undefined>;
    /**
     * Id of the TransportZone to which this LogicalSwitch is associated
     */
    public readonly transportZoneId!: pulumi.Output<string>;
    /**
     * VLAN Id
     */
    public readonly vlan!: pulumi.Output<number>;

    /**
     * Create a VlanLogicalSwitch resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VlanLogicalSwitchArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VlanLogicalSwitchArgs | VlanLogicalSwitchState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VlanLogicalSwitchState | undefined;
            resourceInputs["addressBindings"] = state ? state.addressBindings : undefined;
            resourceInputs["adminState"] = state ? state.adminState : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["ipPoolId"] = state ? state.ipPoolId : undefined;
            resourceInputs["macPoolId"] = state ? state.macPoolId : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["switchingProfileIds"] = state ? state.switchingProfileIds : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["transportZoneId"] = state ? state.transportZoneId : undefined;
            resourceInputs["vlan"] = state ? state.vlan : undefined;
        } else {
            const args = argsOrState as VlanLogicalSwitchArgs | undefined;
            if ((!args || args.transportZoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transportZoneId'");
            }
            if ((!args || args.vlan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vlan'");
            }
            resourceInputs["addressBindings"] = args ? args.addressBindings : undefined;
            resourceInputs["adminState"] = args ? args.adminState : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["ipPoolId"] = args ? args.ipPoolId : undefined;
            resourceInputs["macPoolId"] = args ? args.macPoolId : undefined;
            resourceInputs["switchingProfileIds"] = args ? args.switchingProfileIds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["transportZoneId"] = args ? args.transportZoneId : undefined;
            resourceInputs["vlan"] = args ? args.vlan : undefined;
            resourceInputs["revision"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VlanLogicalSwitch.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VlanLogicalSwitch resources.
 */
export interface VlanLogicalSwitchState {
    /**
     * Address bindings for the Logical switch
     */
    addressBindings?: pulumi.Input<pulumi.Input<inputs.VlanLogicalSwitchAddressBinding>[]>;
    /**
     * Represents Desired state of the object
     */
    adminState?: pulumi.Input<string>;
    /**
     * Description of this resource
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of this resource. Defaults to ID if not set
     */
    displayName?: pulumi.Input<string>;
    /**
     * IP pool id that associated with a LogicalSwitch
     */
    ipPoolId?: pulumi.Input<string>;
    /**
     * Mac pool id that associated with a LogicalSwitch
     */
    macPoolId?: pulumi.Input<string>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    revision?: pulumi.Input<number>;
    /**
     * List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will
     * be used if not specified
     */
    switchingProfileIds?: pulumi.Input<pulumi.Input<inputs.VlanLogicalSwitchSwitchingProfileId>[]>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.VlanLogicalSwitchTag>[]>;
    /**
     * Id of the TransportZone to which this LogicalSwitch is associated
     */
    transportZoneId?: pulumi.Input<string>;
    /**
     * VLAN Id
     */
    vlan?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a VlanLogicalSwitch resource.
 */
export interface VlanLogicalSwitchArgs {
    /**
     * Address bindings for the Logical switch
     */
    addressBindings?: pulumi.Input<pulumi.Input<inputs.VlanLogicalSwitchAddressBinding>[]>;
    /**
     * Represents Desired state of the object
     */
    adminState?: pulumi.Input<string>;
    /**
     * Description of this resource
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of this resource. Defaults to ID if not set
     */
    displayName?: pulumi.Input<string>;
    /**
     * IP pool id that associated with a LogicalSwitch
     */
    ipPoolId?: pulumi.Input<string>;
    /**
     * Mac pool id that associated with a LogicalSwitch
     */
    macPoolId?: pulumi.Input<string>;
    /**
     * List of IDs of switching profiles (of various types) to be associated with this object. Default switching profiles will
     * be used if not specified
     */
    switchingProfileIds?: pulumi.Input<pulumi.Input<inputs.VlanLogicalSwitchSwitchingProfileId>[]>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.VlanLogicalSwitchTag>[]>;
    /**
     * Id of the TransportZone to which this LogicalSwitch is associated
     */
    transportZoneId: pulumi.Input<string>;
    /**
     * VLAN Id
     */
    vlan: pulumi.Input<number>;
}
