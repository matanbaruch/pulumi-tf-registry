// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PolicyTier0GatewayHaVipConfig extends pulumi.CustomResource {
    /**
     * Get an existing PolicyTier0GatewayHaVipConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyTier0GatewayHaVipConfigState, opts?: pulumi.CustomResourceOptions): PolicyTier0GatewayHaVipConfig {
        return new PolicyTier0GatewayHaVipConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/policyTier0GatewayHaVipConfig:PolicyTier0GatewayHaVipConfig';

    /**
     * Returns true if the given object is an instance of PolicyTier0GatewayHaVipConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyTier0GatewayHaVipConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyTier0GatewayHaVipConfig.__pulumiType;
    }

    /**
     * Tier0 HA VIP Config
     */
    public readonly configs!: pulumi.Output<outputs.PolicyTier0GatewayHaVipConfigConfig[]>;
    /**
     * Id of associated Gateway Locale Service on NSX
     */
    public /*out*/ readonly localeServiceId!: pulumi.Output<string>;
    /**
     * Id of associated Tier0 Gateway on NSX
     */
    public /*out*/ readonly tier0Id!: pulumi.Output<string>;

    /**
     * Create a PolicyTier0GatewayHaVipConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyTier0GatewayHaVipConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyTier0GatewayHaVipConfigArgs | PolicyTier0GatewayHaVipConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyTier0GatewayHaVipConfigState | undefined;
            resourceInputs["configs"] = state ? state.configs : undefined;
            resourceInputs["localeServiceId"] = state ? state.localeServiceId : undefined;
            resourceInputs["tier0Id"] = state ? state.tier0Id : undefined;
        } else {
            const args = argsOrState as PolicyTier0GatewayHaVipConfigArgs | undefined;
            if ((!args || args.configs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configs'");
            }
            resourceInputs["configs"] = args ? args.configs : undefined;
            resourceInputs["localeServiceId"] = undefined /*out*/;
            resourceInputs["tier0Id"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyTier0GatewayHaVipConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PolicyTier0GatewayHaVipConfig resources.
 */
export interface PolicyTier0GatewayHaVipConfigState {
    /**
     * Tier0 HA VIP Config
     */
    configs?: pulumi.Input<pulumi.Input<inputs.PolicyTier0GatewayHaVipConfigConfig>[]>;
    /**
     * Id of associated Gateway Locale Service on NSX
     */
    localeServiceId?: pulumi.Input<string>;
    /**
     * Id of associated Tier0 Gateway on NSX
     */
    tier0Id?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolicyTier0GatewayHaVipConfig resource.
 */
export interface PolicyTier0GatewayHaVipConfigArgs {
    /**
     * Tier0 HA VIP Config
     */
    configs: pulumi.Input<pulumi.Input<inputs.PolicyTier0GatewayHaVipConfigConfig>[]>;
}
