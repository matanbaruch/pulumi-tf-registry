// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTransportNodeRealization(args: GetTransportNodeRealizationArgs, opts?: pulumi.InvokeOptions): Promise<GetTransportNodeRealizationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nsxt:index/getTransportNodeRealization:getTransportNodeRealization", {
        "delay": args.delay,
        "id": args.id,
        "timeout": args.timeout,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTransportNodeRealization.
 */
export interface GetTransportNodeRealizationArgs {
    delay?: number;
    id: string;
    timeout?: number;
}

/**
 * A collection of values returned by getTransportNodeRealization.
 */
export interface GetTransportNodeRealizationResult {
    readonly delay?: number;
    readonly id: string;
    readonly state: string;
    readonly timeout?: number;
}
export function getTransportNodeRealizationOutput(args: GetTransportNodeRealizationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransportNodeRealizationResult> {
    return pulumi.output(args).apply((a: any) => getTransportNodeRealization(a, opts))
}

/**
 * A collection of arguments for invoking getTransportNodeRealization.
 */
export interface GetTransportNodeRealizationOutputArgs {
    delay?: pulumi.Input<number>;
    id: pulumi.Input<string>;
    timeout?: pulumi.Input<number>;
}
