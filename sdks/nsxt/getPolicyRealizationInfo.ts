// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPolicyRealizationInfo(args: GetPolicyRealizationInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyRealizationInfoResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nsxt:index/getPolicyRealizationInfo:getPolicyRealizationInfo", {
        "context": args.context,
        "delay": args.delay,
        "entityType": args.entityType,
        "id": args.id,
        "path": args.path,
        "sitePath": args.sitePath,
        "timeout": args.timeout,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPolicyRealizationInfo.
 */
export interface GetPolicyRealizationInfoArgs {
    context?: inputs.GetPolicyRealizationInfoContext;
    delay?: number;
    entityType?: string;
    id?: string;
    path: string;
    sitePath?: string;
    timeout?: number;
}

/**
 * A collection of values returned by getPolicyRealizationInfo.
 */
export interface GetPolicyRealizationInfoResult {
    readonly context?: outputs.GetPolicyRealizationInfoContext;
    readonly delay?: number;
    readonly entityType: string;
    readonly id: string;
    readonly path: string;
    readonly realizedId: string;
    readonly sitePath?: string;
    readonly state: string;
    readonly timeout?: number;
}
export function getPolicyRealizationInfoOutput(args: GetPolicyRealizationInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyRealizationInfoResult> {
    return pulumi.output(args).apply((a: any) => getPolicyRealizationInfo(a, opts))
}

/**
 * A collection of arguments for invoking getPolicyRealizationInfo.
 */
export interface GetPolicyRealizationInfoOutputArgs {
    context?: pulumi.Input<inputs.GetPolicyRealizationInfoContextArgs>;
    delay?: pulumi.Input<number>;
    entityType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    path: pulumi.Input<string>;
    sitePath?: pulumi.Input<string>;
    timeout?: pulumi.Input<number>;
}
