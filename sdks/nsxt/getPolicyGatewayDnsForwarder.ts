// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPolicyGatewayDnsForwarder(args?: GetPolicyGatewayDnsForwarderArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyGatewayDnsForwarderResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nsxt:index/getPolicyGatewayDnsForwarder:getPolicyGatewayDnsForwarder", {
        "context": args.context,
        "description": args.description,
        "displayName": args.displayName,
        "gatewayPath": args.gatewayPath,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPolicyGatewayDnsForwarder.
 */
export interface GetPolicyGatewayDnsForwarderArgs {
    context?: inputs.GetPolicyGatewayDnsForwarderContext;
    description?: string;
    displayName?: string;
    gatewayPath?: string;
    id?: string;
}

/**
 * A collection of values returned by getPolicyGatewayDnsForwarder.
 */
export interface GetPolicyGatewayDnsForwarderResult {
    readonly context?: outputs.GetPolicyGatewayDnsForwarderContext;
    readonly description: string;
    readonly displayName: string;
    readonly gatewayPath?: string;
    readonly id: string;
    readonly path: string;
}
export function getPolicyGatewayDnsForwarderOutput(args?: GetPolicyGatewayDnsForwarderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyGatewayDnsForwarderResult> {
    return pulumi.output(args).apply((a: any) => getPolicyGatewayDnsForwarder(a, opts))
}

/**
 * A collection of arguments for invoking getPolicyGatewayDnsForwarder.
 */
export interface GetPolicyGatewayDnsForwarderOutputArgs {
    context?: pulumi.Input<inputs.GetPolicyGatewayDnsForwarderContextArgs>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    gatewayPath?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
