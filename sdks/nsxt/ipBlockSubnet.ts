// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IpBlockSubnet extends pulumi.CustomResource {
    /**
     * Get an existing IpBlockSubnet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpBlockSubnetState, opts?: pulumi.CustomResourceOptions): IpBlockSubnet {
        return new IpBlockSubnet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nsxt:index/ipBlockSubnet:IpBlockSubnet';

    /**
     * Returns true if the given object is an instance of IpBlockSubnet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpBlockSubnet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpBlockSubnet.__pulumiType;
    }

    /**
     * A collection of IPv4 Pool Ranges
     */
    public /*out*/ readonly allocationRanges!: pulumi.Output<outputs.IpBlockSubnetAllocationRange[]>;
    /**
     * Block id for which the subnet is created
     */
    public readonly blockId!: pulumi.Output<string>;
    /**
     * Represents network address and the prefix length which will be associated with a layer-2 broadcast domain
     */
    public /*out*/ readonly cidr!: pulumi.Output<string>;
    /**
     * Description of this resource
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of this resource. Defaults to ID if not set
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * Represents the size or number of ip addresses in the subnet
     */
    public readonly size!: pulumi.Output<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    public readonly tags!: pulumi.Output<outputs.IpBlockSubnetTag[] | undefined>;

    /**
     * Create a IpBlockSubnet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpBlockSubnetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpBlockSubnetArgs | IpBlockSubnetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpBlockSubnetState | undefined;
            resourceInputs["allocationRanges"] = state ? state.allocationRanges : undefined;
            resourceInputs["blockId"] = state ? state.blockId : undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as IpBlockSubnetArgs | undefined;
            if ((!args || args.blockId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'blockId'");
            }
            if ((!args || args.size === undefined) && !opts.urn) {
                throw new Error("Missing required property 'size'");
            }
            resourceInputs["blockId"] = args ? args.blockId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["allocationRanges"] = undefined /*out*/;
            resourceInputs["cidr"] = undefined /*out*/;
            resourceInputs["revision"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpBlockSubnet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IpBlockSubnet resources.
 */
export interface IpBlockSubnetState {
    /**
     * A collection of IPv4 Pool Ranges
     */
    allocationRanges?: pulumi.Input<pulumi.Input<inputs.IpBlockSubnetAllocationRange>[]>;
    /**
     * Block id for which the subnet is created
     */
    blockId?: pulumi.Input<string>;
    /**
     * Represents network address and the prefix length which will be associated with a layer-2 broadcast domain
     */
    cidr?: pulumi.Input<string>;
    /**
     * Description of this resource
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of this resource. Defaults to ID if not set
     */
    displayName?: pulumi.Input<string>;
    /**
     * The _revision property describes the current revision of the resource. To prevent clients from overwriting each other's
     * changes, PUT operations must include the current _revision of the resource, which clients should obtain by issuing a GET
     * operation. If the _revision provided in a PUT request is missing or stale, the operation will be rejected
     */
    revision?: pulumi.Input<number>;
    /**
     * Represents the size or number of ip addresses in the subnet
     */
    size?: pulumi.Input<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IpBlockSubnetTag>[]>;
}

/**
 * The set of arguments for constructing a IpBlockSubnet resource.
 */
export interface IpBlockSubnetArgs {
    /**
     * Block id for which the subnet is created
     */
    blockId: pulumi.Input<string>;
    /**
     * Description of this resource
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of this resource. Defaults to ID if not set
     */
    displayName?: pulumi.Input<string>;
    /**
     * Represents the size or number of ip addresses in the subnet
     */
    size: pulumi.Input<number>;
    /**
     * Set of opaque identifiers meaningful to the user
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IpBlockSubnetTag>[]>;
}
