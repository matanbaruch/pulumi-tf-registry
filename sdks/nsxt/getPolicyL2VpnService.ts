// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPolicyL2VpnService(args: GetPolicyL2VpnServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyL2VpnServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nsxt:index/getPolicyL2VpnService:getPolicyL2VpnService", {
        "description": args.description,
        "displayName": args.displayName,
        "gatewayPath": args.gatewayPath,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPolicyL2VpnService.
 */
export interface GetPolicyL2VpnServiceArgs {
    description?: string;
    displayName: string;
    gatewayPath?: string;
    id?: string;
}

/**
 * A collection of values returned by getPolicyL2VpnService.
 */
export interface GetPolicyL2VpnServiceResult {
    readonly description?: string;
    readonly displayName: string;
    readonly gatewayPath?: string;
    readonly id: string;
    readonly path: string;
}
export function getPolicyL2VpnServiceOutput(args: GetPolicyL2VpnServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyL2VpnServiceResult> {
    return pulumi.output(args).apply((a: any) => getPolicyL2VpnService(a, opts))
}

/**
 * A collection of arguments for invoking getPolicyL2VpnService.
 */
export interface GetPolicyL2VpnServiceOutputArgs {
    description?: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    gatewayPath?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
