// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetPolicyVpcNatRuleContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetPolicyVpcNatRuleContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcDhcpV4StaticBindingConfigContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcDhcpV4StaticBindingConfigContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcGatewayPolicyContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcGatewayPolicyContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcGatewayPolicyRuleContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcGatewayPolicyRuleContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcGroupContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcGroupContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcIpAddressAllocationContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcIpAddressAllocationContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcIpAddressBlockContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcIpAddressBlockContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcIpAddressPoolContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcIpAddressPoolContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcPolicyContextProfileContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcPolicyContextProfileContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcSecurityPolicyContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcSecurityPolicyContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcSecurityPolicyRuleContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcSecurityPolicyRuleContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcServiceContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcServiceContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcStaticRoutesContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcStaticRoutesContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcSubnetContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcSubnetContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcSubnetIpAddressAllocationContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcSubnetIpAddressAllocationContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface GetVpcSubnetPortContext {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: string;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: string;
}

export interface GetVpcSubnetPortContextArgs {
    /**
     * The domain ID of the object. Applicable for groups.
     */
    domain?: pulumi.Input<string>;
    /**
     * The scope in which the object exists or spans out of. It can be any one of vpc, project or infra.
     */
    scope: pulumi.Input<string>;
}

export interface PolicyVpcNatRuleTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcDhcpV4StaticBindingConfigOptions {
    option121?: pulumi.Input<inputs.VpcDhcpV4StaticBindingConfigOptionsOption121>;
    others?: pulumi.Input<pulumi.Input<inputs.VpcDhcpV4StaticBindingConfigOptionsOther>[]>;
    path?: pulumi.Input<string>;
}

export interface VpcDhcpV4StaticBindingConfigOptionsOption121 {
    path?: pulumi.Input<string>;
    staticRoutes: pulumi.Input<pulumi.Input<inputs.VpcDhcpV4StaticBindingConfigOptionsOption121StaticRoute>[]>;
}

export interface VpcDhcpV4StaticBindingConfigOptionsOption121StaticRoute {
    network: pulumi.Input<string>;
    nextHop: pulumi.Input<string>;
    path?: pulumi.Input<string>;
}

export interface VpcDhcpV4StaticBindingConfigOptionsOther {
    code: pulumi.Input<number>;
    path?: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VpcDhcpV4StaticBindingConfigTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcGatewayPolicyRuleServiceEntry {
    _revision?: pulumi.Input<string>;
    alg?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
    displayName?: pulumi.Input<string>;
    etherType?: pulumi.Input<number>;
    icmpCode?: pulumi.Input<number>;
    icmpType?: pulumi.Input<number>;
    l4Protocol?: pulumi.Input<string>;
    nestedServicePath?: pulumi.Input<string>;
    nsxId?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    protocolNumber?: pulumi.Input<number>;
    resourceType: pulumi.Input<string>;
    sourcePorts?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.VpcGatewayPolicyRuleServiceEntryTag>[]>;
}

export interface VpcGatewayPolicyRuleServiceEntryTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcGatewayPolicyRuleTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcGatewayPolicyTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcGroupExpression {
    conjunctionOperator?: pulumi.Input<string>;
    excludes?: pulumi.Input<pulumi.Input<inputs.VpcGroupExpressionExclude>[]>;
    expressions?: pulumi.Input<pulumi.Input<inputs.VpcGroupExpressionExpression>[]>;
    externalIds?: pulumi.Input<pulumi.Input<string>[]>;
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    key?: pulumi.Input<string>;
    markedForDelete?: pulumi.Input<boolean>;
    memberType?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    paths?: pulumi.Input<pulumi.Input<string>[]>;
    resourceType: pulumi.Input<string>;
    scopeOperator?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VpcGroupExpressionTag>[]>;
    value?: pulumi.Input<string>;
}

export interface VpcGroupExpressionExclude {
    ipAddressExpression?: pulumi.Input<inputs.VpcGroupExpressionExcludeIpAddressExpression>;
    path?: pulumi.Input<string>;
    pathExpression?: pulumi.Input<inputs.VpcGroupExpressionExcludePathExpression>;
}

export interface VpcGroupExpressionExcludeIpAddressExpression {
    _revision?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    ipAddresses: pulumi.Input<pulumi.Input<string>[]>;
    path?: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VpcGroupExpressionExcludeIpAddressExpressionTag>[]>;
}

export interface VpcGroupExpressionExcludeIpAddressExpressionTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcGroupExpressionExcludePathExpression {
    _revision?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    paths: pulumi.Input<pulumi.Input<string>[]>;
    resourceType: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VpcGroupExpressionExcludePathExpressionTag>[]>;
}

export interface VpcGroupExpressionExcludePathExpressionTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcGroupExpressionExpression {
    conjunctionOperator?: pulumi.Input<string>;
    excludes?: pulumi.Input<pulumi.Input<inputs.VpcGroupExpressionExpressionExclude>[]>;
    key?: pulumi.Input<string>;
    markedForDelete?: pulumi.Input<boolean>;
    memberType?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    scopeOperator?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VpcGroupExpressionExpressionTag>[]>;
    value?: pulumi.Input<string>;
}

export interface VpcGroupExpressionExpressionExclude {
    ipAddressExpression?: pulumi.Input<inputs.VpcGroupExpressionExpressionExcludeIpAddressExpression>;
    path?: pulumi.Input<string>;
    pathExpression?: pulumi.Input<inputs.VpcGroupExpressionExpressionExcludePathExpression>;
}

export interface VpcGroupExpressionExpressionExcludeIpAddressExpression {
    _revision?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    ipAddresses: pulumi.Input<pulumi.Input<string>[]>;
    path?: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VpcGroupExpressionExpressionExcludeIpAddressExpressionTag>[]>;
}

export interface VpcGroupExpressionExpressionExcludeIpAddressExpressionTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcGroupExpressionExpressionExcludePathExpression {
    _revision?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    paths: pulumi.Input<pulumi.Input<string>[]>;
    resourceType: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VpcGroupExpressionExpressionExcludePathExpressionTag>[]>;
}

export interface VpcGroupExpressionExpressionExcludePathExpressionTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcGroupExpressionExpressionTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcGroupExpressionTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcGroupTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcIpAddressAllocationTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcSecurityPolicyApplicationConnectivityStrategy {
    applicationConnectivityStrategy: pulumi.Input<string>;
    loggingEnabled?: pulumi.Input<boolean>;
    path?: pulumi.Input<string>;
}

export interface VpcSecurityPolicyRuleServiceEntry {
    _revision?: pulumi.Input<string>;
    alg?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
    displayName?: pulumi.Input<string>;
    etherType?: pulumi.Input<number>;
    icmpCode?: pulumi.Input<number>;
    icmpType?: pulumi.Input<number>;
    l4Protocol?: pulumi.Input<string>;
    nestedServicePath?: pulumi.Input<string>;
    nsxId?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    protocolNumber?: pulumi.Input<number>;
    resourceType: pulumi.Input<string>;
    sourcePorts?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.VpcSecurityPolicyRuleServiceEntryTag>[]>;
}

export interface VpcSecurityPolicyRuleServiceEntryTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcSecurityPolicyRuleTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcSecurityPolicyTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcStaticRoutesNextHop {
    adminDistance?: pulumi.Input<number>;
    ipAddress?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VpcStaticRoutesTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcSubnetAdvancedConfig {
    path?: pulumi.Input<string>;
    staticIpAllocation?: pulumi.Input<inputs.VpcSubnetAdvancedConfigStaticIpAllocation>;
}

export interface VpcSubnetAdvancedConfigStaticIpAllocation {
    enabled?: pulumi.Input<boolean>;
    path?: pulumi.Input<string>;
}

export interface VpcSubnetDhcpConfig {
    dhcpRelayConfigPath?: pulumi.Input<string>;
    dnsClientConfig?: pulumi.Input<inputs.VpcSubnetDhcpConfigDnsClientConfig>;
    enableDhcp?: pulumi.Input<boolean>;
    path?: pulumi.Input<string>;
    staticPoolConfig?: pulumi.Input<inputs.VpcSubnetDhcpConfigStaticPoolConfig>;
}

export interface VpcSubnetDhcpConfigDnsClientConfig {
    dnsServerIps?: pulumi.Input<pulumi.Input<string>[]>;
    path?: pulumi.Input<string>;
}

export interface VpcSubnetDhcpConfigStaticPoolConfig {
    ipv4PoolSize?: pulumi.Input<number>;
    path?: pulumi.Input<string>;
}

export interface VpcSubnetIpAddressAllocationTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcSubnetPortAddressBinding {
    ipAddress?: pulumi.Input<string>;
    macAddress?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    vlanId?: pulumi.Input<number>;
}

export interface VpcSubnetPortAttachment {
    allocateAddresses?: pulumi.Input<string>;
    appId?: pulumi.Input<string>;
    bmsInterfaceConfig?: pulumi.Input<inputs.VpcSubnetPortAttachmentBmsInterfaceConfig>;
    contextId?: pulumi.Input<string>;
    evpnVlans?: pulumi.Input<pulumi.Input<string>[]>;
    hyperbusMode?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    trafficTag?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
}

export interface VpcSubnetPortAttachmentBmsInterfaceConfig {
    appIntfName: pulumi.Input<string>;
    defaultGateway?: pulumi.Input<string>;
    migrateIntf?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    routingTables?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VpcSubnetPortExtraConfig {
    configPair: pulumi.Input<inputs.VpcSubnetPortExtraConfigConfigPair>;
    path?: pulumi.Input<string>;
}

export interface VpcSubnetPortExtraConfigConfigPair {
    key: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface VpcSubnetPortIgnoredAddressBinding {
    ipAddress?: pulumi.Input<string>;
    macAddress?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    vlanId?: pulumi.Input<number>;
}

export interface VpcSubnetPortTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcSubnetTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface VpcVmTagsTag {
    path?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}
