// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcIpAddressBlock(args: GetVpcIpAddressBlockArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcIpAddressBlockResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nsxt-virtual-private-cloud:index/getVpcIpAddressBlock:getVpcIpAddressBlock", {
        "context": args.context,
        "displayName": args.displayName,
        "id": args.id,
        "nsxId": args.nsxId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcIpAddressBlock.
 */
export interface GetVpcIpAddressBlockArgs {
    context: inputs.GetVpcIpAddressBlockContext;
    displayName?: string;
    id?: string;
    nsxId?: string;
}

/**
 * A collection of values returned by getVpcIpAddressBlock.
 */
export interface GetVpcIpAddressBlockResult {
    readonly context: outputs.GetVpcIpAddressBlockContext;
    readonly description: string;
    readonly displayName: string;
    readonly id: string;
    readonly nsxId: string;
    readonly path: string;
}
export function getVpcIpAddressBlockOutput(args: GetVpcIpAddressBlockOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcIpAddressBlockResult> {
    return pulumi.output(args).apply((a: any) => getVpcIpAddressBlock(a, opts))
}

/**
 * A collection of arguments for invoking getVpcIpAddressBlock.
 */
export interface GetVpcIpAddressBlockOutputArgs {
    context: pulumi.Input<inputs.GetVpcIpAddressBlockContextArgs>;
    displayName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    nsxId?: pulumi.Input<string>;
}
