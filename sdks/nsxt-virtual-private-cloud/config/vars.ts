// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("nsxt-virtual-private-cloud");

export declare const allowUnverifiedSsl: boolean | undefined;
Object.defineProperty(exports, "allowUnverifiedSsl", {
    get() {
        return __config.getObject<boolean>("allowUnverifiedSsl");
    },
    enumerable: true,
});

/**
 * CA certificate passed as string
 */
export declare const ca: string | undefined;
Object.defineProperty(exports, "ca", {
    get() {
        return __config.get("ca");
    },
    enumerable: true,
});

export declare const caFile: string | undefined;
Object.defineProperty(exports, "caFile", {
    get() {
        return __config.get("caFile");
    },
    enumerable: true,
});

/**
 * Client certificate passed as string
 */
export declare const clientAuthCert: string | undefined;
Object.defineProperty(exports, "clientAuthCert", {
    get() {
        return __config.get("clientAuthCert");
    },
    enumerable: true,
});

export declare const clientAuthCertFile: string | undefined;
Object.defineProperty(exports, "clientAuthCertFile", {
    get() {
        return __config.get("clientAuthCertFile");
    },
    enumerable: true,
});

/**
 * Client certificate key passed as string
 */
export declare const clientAuthKey: string | undefined;
Object.defineProperty(exports, "clientAuthKey", {
    get() {
        return __config.get("clientAuthKey");
    },
    enumerable: true,
});

export declare const clientAuthKeyFile: string | undefined;
Object.defineProperty(exports, "clientAuthKeyFile", {
    get() {
        return __config.get("clientAuthKeyFile");
    },
    enumerable: true,
});

/**
 * Maximum time in milliseconds for connection to wait for a TLS handshake. Zero means no timeout
 */
export declare const connectionTimeout: number | undefined;
Object.defineProperty(exports, "connectionTimeout", {
    get() {
        return __config.getObject<number>("connectionTimeout");
    },
    enumerable: true,
});

/**
 * Enforcement Point for NSXT Policy
 */
export declare const enforcementPoint: string | undefined;
Object.defineProperty(exports, "enforcementPoint", {
    get() {
        return __config.get("enforcementPoint");
    },
    enumerable: true,
});

/**
 * The hostname or IP address of the NSX manager.
 */
export declare const host: string | undefined;
Object.defineProperty(exports, "host", {
    get() {
        return __config.get("host");
    },
    enumerable: true,
});

/**
 * Maximum number of HTTP client retries
 */
export declare const maxRetries: number | undefined;
Object.defineProperty(exports, "maxRetries", {
    get() {
        return __config.getObject<number>("maxRetries");
    },
    enumerable: true,
});

/**
 * Organisation identifier
 */
export declare const org: string | undefined;
Object.defineProperty(exports, "org", {
    get() {
        return __config.get("org");
    },
    enumerable: true,
});

export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

/**
 * Identifier for the project under the organisation
 */
export declare const project: string | undefined;
Object.defineProperty(exports, "project", {
    get() {
        return __config.get("project");
    },
    enumerable: true,
});

export declare const remoteAuth: boolean | undefined;
Object.defineProperty(exports, "remoteAuth", {
    get() {
        return __config.getObject<boolean>("remoteAuth");
    },
    enumerable: true,
});

/**
 * Delay interval in milliseconds between retries of a request
 */
export declare const retryInterval: number | undefined;
Object.defineProperty(exports, "retryInterval", {
    get() {
        return __config.getObject<number>("retryInterval");
    },
    enumerable: true,
});

/**
 * HTTP replies status codes to retry on
 */
export declare const retryOnStatusCodes: number[] | undefined;
Object.defineProperty(exports, "retryOnStatusCodes", {
    get() {
        return __config.getObject<number[]>("retryOnStatusCodes");
    },
    enumerable: true,
});

/**
 * Site for NSXT Policy
 */
export declare const site: string | undefined;
Object.defineProperty(exports, "site", {
    get() {
        return __config.get("site");
    },
    enumerable: true,
});

export declare const username: string | undefined;
Object.defineProperty(exports, "username", {
    get() {
        return __config.get("username");
    },
    enumerable: true,
});

/**
 * Identifier for the VPC under the project of an organisation
 */
export declare const vpc: string | undefined;
Object.defineProperty(exports, "vpc", {
    get() {
        return __config.get("vpc");
    },
    enumerable: true,
});

