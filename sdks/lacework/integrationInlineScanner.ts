// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IntegrationInlineScanner extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationInlineScanner resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationInlineScannerState, opts?: pulumi.CustomResourceOptions): IntegrationInlineScanner {
        return new IntegrationInlineScanner(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'lacework:index/integrationInlineScanner:IntegrationInlineScanner';

    /**
     * Returns true if the given object is an instance of IntegrationInlineScanner.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationInlineScanner {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationInlineScanner.__pulumiType;
    }

    public /*out*/ readonly createdOrUpdatedBy!: pulumi.Output<string>;
    public /*out*/ readonly createdOrUpdatedTime!: pulumi.Output<string>;
    /**
     * The state of the external integration
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * A list of identifier tags as key:value pairs
     */
    public readonly identifierTags!: pulumi.Output<outputs.IntegrationInlineScannerIdentifierTag[] | undefined>;
    public /*out*/ readonly intgGuid!: pulumi.Output<string>;
    /**
     * The maximum number of newest container images to assess per repository.
     */
    public readonly limitNumScan!: pulumi.Output<number | undefined>;
    /**
     * The integration name
     */
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly orgLevel!: pulumi.Output<boolean>;
    public /*out*/ readonly serverToken!: pulumi.Output<string>;
    public /*out*/ readonly serverUri!: pulumi.Output<string>;
    public /*out*/ readonly typeName!: pulumi.Output<string>;

    /**
     * Create a IntegrationInlineScanner resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IntegrationInlineScannerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationInlineScannerArgs | IntegrationInlineScannerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationInlineScannerState | undefined;
            resourceInputs["createdOrUpdatedBy"] = state ? state.createdOrUpdatedBy : undefined;
            resourceInputs["createdOrUpdatedTime"] = state ? state.createdOrUpdatedTime : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["identifierTags"] = state ? state.identifierTags : undefined;
            resourceInputs["intgGuid"] = state ? state.intgGuid : undefined;
            resourceInputs["limitNumScan"] = state ? state.limitNumScan : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgLevel"] = state ? state.orgLevel : undefined;
            resourceInputs["serverToken"] = state ? state.serverToken : undefined;
            resourceInputs["serverUri"] = state ? state.serverUri : undefined;
            resourceInputs["typeName"] = state ? state.typeName : undefined;
        } else {
            const args = argsOrState as IntegrationInlineScannerArgs | undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["identifierTags"] = args ? args.identifierTags : undefined;
            resourceInputs["limitNumScan"] = args ? args.limitNumScan : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["createdOrUpdatedBy"] = undefined /*out*/;
            resourceInputs["createdOrUpdatedTime"] = undefined /*out*/;
            resourceInputs["intgGuid"] = undefined /*out*/;
            resourceInputs["orgLevel"] = undefined /*out*/;
            resourceInputs["serverToken"] = undefined /*out*/;
            resourceInputs["serverUri"] = undefined /*out*/;
            resourceInputs["typeName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IntegrationInlineScanner.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IntegrationInlineScanner resources.
 */
export interface IntegrationInlineScannerState {
    createdOrUpdatedBy?: pulumi.Input<string>;
    createdOrUpdatedTime?: pulumi.Input<string>;
    /**
     * The state of the external integration
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * A list of identifier tags as key:value pairs
     */
    identifierTags?: pulumi.Input<pulumi.Input<inputs.IntegrationInlineScannerIdentifierTag>[]>;
    intgGuid?: pulumi.Input<string>;
    /**
     * The maximum number of newest container images to assess per repository.
     */
    limitNumScan?: pulumi.Input<number>;
    /**
     * The integration name
     */
    name?: pulumi.Input<string>;
    orgLevel?: pulumi.Input<boolean>;
    serverToken?: pulumi.Input<string>;
    serverUri?: pulumi.Input<string>;
    typeName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IntegrationInlineScanner resource.
 */
export interface IntegrationInlineScannerArgs {
    /**
     * The state of the external integration
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * A list of identifier tags as key:value pairs
     */
    identifierTags?: pulumi.Input<pulumi.Input<inputs.IntegrationInlineScannerIdentifierTag>[]>;
    /**
     * The maximum number of newest container images to assess per repository.
     */
    limitNumScan?: pulumi.Input<number>;
    /**
     * The integration name
     */
    name?: pulumi.Input<string>;
}
