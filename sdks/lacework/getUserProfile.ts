// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUserProfile(args?: GetUserProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetUserProfileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("lacework:index/getUserProfile:getUserProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUserProfile.
 */
export interface GetUserProfileArgs {
    id?: string;
}

/**
 * A collection of values returned by getUserProfile.
 */
export interface GetUserProfileResult {
    readonly accounts: outputs.GetUserProfileAccount[];
    readonly id: string;
    readonly orgAccount: boolean;
    readonly orgAdmin: boolean;
    readonly orgUser: boolean;
    readonly url: string;
    readonly username: string;
}
export function getUserProfileOutput(args?: GetUserProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserProfileResult> {
    return pulumi.output(args).apply((a: any) => getUserProfile(a, opts))
}

/**
 * A collection of arguments for invoking getUserProfile.
 */
export interface GetUserProfileOutputArgs {
    id?: pulumi.Input<string>;
}
