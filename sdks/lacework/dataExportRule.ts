// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DataExportRule extends pulumi.CustomResource {
    /**
     * Get an existing DataExportRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataExportRuleState, opts?: pulumi.CustomResourceOptions): DataExportRule {
        return new DataExportRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'lacework:index/dataExportRule:DataExportRule';

    /**
     * Returns true if the given object is an instance of DataExportRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataExportRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataExportRule.__pulumiType;
    }

    public /*out*/ readonly createdOrUpdatedBy!: pulumi.Output<string>;
    public /*out*/ readonly createdOrUpdatedTime!: pulumi.Output<string>;
    /**
     * The summary of the data export rule.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly guid!: pulumi.Output<string>;
    /**
     * The list alert channel ids for the rule to use.
     */
    public readonly integrationIds!: pulumi.Output<string[]>;
    /**
     * The name of the data export rule.
     */
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a DataExportRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataExportRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataExportRuleArgs | DataExportRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataExportRuleState | undefined;
            resourceInputs["createdOrUpdatedBy"] = state ? state.createdOrUpdatedBy : undefined;
            resourceInputs["createdOrUpdatedTime"] = state ? state.createdOrUpdatedTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["guid"] = state ? state.guid : undefined;
            resourceInputs["integrationIds"] = state ? state.integrationIds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DataExportRuleArgs | undefined;
            if ((!args || args.integrationIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationIds'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["integrationIds"] = args ? args.integrationIds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["createdOrUpdatedBy"] = undefined /*out*/;
            resourceInputs["createdOrUpdatedTime"] = undefined /*out*/;
            resourceInputs["guid"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataExportRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataExportRule resources.
 */
export interface DataExportRuleState {
    createdOrUpdatedBy?: pulumi.Input<string>;
    createdOrUpdatedTime?: pulumi.Input<string>;
    /**
     * The summary of the data export rule.
     */
    description?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    guid?: pulumi.Input<string>;
    /**
     * The list alert channel ids for the rule to use.
     */
    integrationIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the data export rule.
     */
    name?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataExportRule resource.
 */
export interface DataExportRuleArgs {
    /**
     * The summary of the data export rule.
     */
    description?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    /**
     * The list alert channel ids for the rule to use.
     */
    integrationIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the data export rule.
     */
    name?: pulumi.Input<string>;
}
