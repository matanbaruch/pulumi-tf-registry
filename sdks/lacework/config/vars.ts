// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("lacework");

/**
 * Lacework account subdomain of URL (i.e. <ACCOUNT>.lacework.net)
 */
export declare const account: string | undefined;
Object.defineProperty(exports, "account", {
    get() {
        return __config.get("account");
    },
    enumerable: true,
});

/**
 * Lacework API access key
 */
export declare const apiKey: string | undefined;
Object.defineProperty(exports, "apiKey", {
    get() {
        return __config.get("apiKey");
    },
    enumerable: true,
});

/**
 * Lacework API access secret
 */
export declare const apiSecret: string | undefined;
Object.defineProperty(exports, "apiSecret", {
    get() {
        return __config.get("apiSecret");
    },
    enumerable: true,
});

/**
 * Lacework API access token
 */
export declare const apiToken: string | undefined;
Object.defineProperty(exports, "apiToken", {
    get() {
        return __config.get("apiToken");
    },
    enumerable: true,
});

/**
 * Set it to true to access organization level data sets (org admins only)
 */
export declare const organization: boolean | undefined;
Object.defineProperty(exports, "organization", {
    get() {
        return __config.getObject<boolean>("organization");
    },
    enumerable: true,
});

/**
 * Lacework profile name to use, profiles are configured at $HOME/.lacework.toml via the Lacework CLI
 */
export declare const profile: string | undefined;
Object.defineProperty(exports, "profile", {
    get() {
        return __config.get("profile");
    },
    enumerable: true,
});

/**
 * The sub-account name inside your organization (org admins only)
 */
export declare const subaccount: string | undefined;
Object.defineProperty(exports, "subaccount", {
    get() {
        return __config.get("subaccount");
    },
    enumerable: true,
});

