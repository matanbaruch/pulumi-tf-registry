// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMetricModule(args: GetMetricModuleArgs, opts?: pulumi.InvokeOptions): Promise<GetMetricModuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("lacework:index/getMetricModule:getMetricModule", {
        "id": args.id,
        "name": args.name,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMetricModule.
 */
export interface GetMetricModuleArgs {
    id?: string;
    name: string;
    version: string;
}

/**
 * A collection of values returned by getMetricModule.
 */
export interface GetMetricModuleResult {
    readonly id: string;
    readonly name: string;
    readonly version: string;
}
export function getMetricModuleOutput(args: GetMetricModuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetricModuleResult> {
    return pulumi.output(args).apply((a: any) => getMetricModule(a, opts))
}

/**
 * A collection of arguments for invoking getMetricModule.
 */
export interface GetMetricModuleOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    version: pulumi.Input<string>;
}
