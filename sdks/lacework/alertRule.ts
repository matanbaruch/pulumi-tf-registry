// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AlertRule extends pulumi.CustomResource {
    /**
     * Get an existing AlertRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlertRuleState, opts?: pulumi.CustomResourceOptions): AlertRule {
        return new AlertRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'lacework:index/alertRule:AlertRule';

    /**
     * Returns true if the given object is an instance of AlertRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlertRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlertRule.__pulumiType;
    }

    /**
     * List of alert categories for the alert rule. Valid categories are: Anomaly, Policy, Composite
     */
    public readonly alertCategories!: pulumi.Output<string[] | undefined>;
    /**
     * List of alert channels for the alert rule
     */
    public readonly alertChannels!: pulumi.Output<string[] | undefined>;
    /**
     * List of alert sources for the alert rule. Valid sources are: Agent, AWS, Azure, GCP, K8s, OCI
     */
    public readonly alertSources!: pulumi.Output<string[] | undefined>;
    /**
     * List of alert subcategories for the alert rule. Valid categories are: Compliance, Application, Cloud Activity, File,
     * Machine, User, Platform, Kubernetes Activity, Registry, SystemCall, Host Vulnerability, Container Vulnerability, Threat
     * Intel, App, Cloud, K8sActivity
     */
    public readonly alertSubcategories!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly createdOrUpdatedBy!: pulumi.Output<string>;
    public /*out*/ readonly createdOrUpdatedTime!: pulumi.Output<string>;
    /**
     * The description of the alert rule
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The state of the alert rule
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * List of event categories for the alert rule. Valid categories are: Compliance, Application, Cloud Activity, File,
     * Machine, User, Platform, Kubernetes Activity, Registry, SystemCall, Host Vulnerability, Container Vulnerability, Threat
     * Intel, App, Cloud, K8sActivity
     *
     * @deprecated Deprecated
     */
    public readonly eventCategories!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly guid!: pulumi.Output<string>;
    /**
     * The name of the alert rule
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * List of resource groups for the alert rule
     */
    public readonly resourceGroups!: pulumi.Output<string[] | undefined>;
    /**
     * List of severities for the alert rule. Valid severities are: Critical, High, Medium, Low, Info
     */
    public readonly severities!: pulumi.Output<string[]>;
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a AlertRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlertRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlertRuleArgs | AlertRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlertRuleState | undefined;
            resourceInputs["alertCategories"] = state ? state.alertCategories : undefined;
            resourceInputs["alertChannels"] = state ? state.alertChannels : undefined;
            resourceInputs["alertSources"] = state ? state.alertSources : undefined;
            resourceInputs["alertSubcategories"] = state ? state.alertSubcategories : undefined;
            resourceInputs["createdOrUpdatedBy"] = state ? state.createdOrUpdatedBy : undefined;
            resourceInputs["createdOrUpdatedTime"] = state ? state.createdOrUpdatedTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["eventCategories"] = state ? state.eventCategories : undefined;
            resourceInputs["guid"] = state ? state.guid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroups"] = state ? state.resourceGroups : undefined;
            resourceInputs["severities"] = state ? state.severities : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as AlertRuleArgs | undefined;
            if ((!args || args.severities === undefined) && !opts.urn) {
                throw new Error("Missing required property 'severities'");
            }
            resourceInputs["alertCategories"] = args ? args.alertCategories : undefined;
            resourceInputs["alertChannels"] = args ? args.alertChannels : undefined;
            resourceInputs["alertSources"] = args ? args.alertSources : undefined;
            resourceInputs["alertSubcategories"] = args ? args.alertSubcategories : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["eventCategories"] = args ? args.eventCategories : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroups"] = args ? args.resourceGroups : undefined;
            resourceInputs["severities"] = args ? args.severities : undefined;
            resourceInputs["createdOrUpdatedBy"] = undefined /*out*/;
            resourceInputs["createdOrUpdatedTime"] = undefined /*out*/;
            resourceInputs["guid"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlertRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AlertRule resources.
 */
export interface AlertRuleState {
    /**
     * List of alert categories for the alert rule. Valid categories are: Anomaly, Policy, Composite
     */
    alertCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of alert channels for the alert rule
     */
    alertChannels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of alert sources for the alert rule. Valid sources are: Agent, AWS, Azure, GCP, K8s, OCI
     */
    alertSources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of alert subcategories for the alert rule. Valid categories are: Compliance, Application, Cloud Activity, File,
     * Machine, User, Platform, Kubernetes Activity, Registry, SystemCall, Host Vulnerability, Container Vulnerability, Threat
     * Intel, App, Cloud, K8sActivity
     */
    alertSubcategories?: pulumi.Input<pulumi.Input<string>[]>;
    createdOrUpdatedBy?: pulumi.Input<string>;
    createdOrUpdatedTime?: pulumi.Input<string>;
    /**
     * The description of the alert rule
     */
    description?: pulumi.Input<string>;
    /**
     * The state of the alert rule
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * List of event categories for the alert rule. Valid categories are: Compliance, Application, Cloud Activity, File,
     * Machine, User, Platform, Kubernetes Activity, Registry, SystemCall, Host Vulnerability, Container Vulnerability, Threat
     * Intel, App, Cloud, K8sActivity
     *
     * @deprecated Deprecated
     */
    eventCategories?: pulumi.Input<pulumi.Input<string>[]>;
    guid?: pulumi.Input<string>;
    /**
     * The name of the alert rule
     */
    name?: pulumi.Input<string>;
    /**
     * List of resource groups for the alert rule
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of severities for the alert rule. Valid severities are: Critical, High, Medium, Low, Info
     */
    severities?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AlertRule resource.
 */
export interface AlertRuleArgs {
    /**
     * List of alert categories for the alert rule. Valid categories are: Anomaly, Policy, Composite
     */
    alertCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of alert channels for the alert rule
     */
    alertChannels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of alert sources for the alert rule. Valid sources are: Agent, AWS, Azure, GCP, K8s, OCI
     */
    alertSources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of alert subcategories for the alert rule. Valid categories are: Compliance, Application, Cloud Activity, File,
     * Machine, User, Platform, Kubernetes Activity, Registry, SystemCall, Host Vulnerability, Container Vulnerability, Threat
     * Intel, App, Cloud, K8sActivity
     */
    alertSubcategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The description of the alert rule
     */
    description?: pulumi.Input<string>;
    /**
     * The state of the alert rule
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * List of event categories for the alert rule. Valid categories are: Compliance, Application, Cloud Activity, File,
     * Machine, User, Platform, Kubernetes Activity, Registry, SystemCall, Host Vulnerability, Container Vulnerability, Threat
     * Intel, App, Cloud, K8sActivity
     *
     * @deprecated Deprecated
     */
    eventCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the alert rule
     */
    name?: pulumi.Input<string>;
    /**
     * List of resource groups for the alert rule
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of severities for the alert rule. Valid severities are: Critical, High, Medium, Low, Info
     */
    severities: pulumi.Input<pulumi.Input<string>[]>;
}
