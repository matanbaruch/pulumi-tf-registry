// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTlsActivation(args?: GetTlsActivationArgs, opts?: pulumi.InvokeOptions): Promise<GetTlsActivationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fastly:index/getTlsActivation:getTlsActivation", {
        "certificateId": args.certificateId,
        "configurationId": args.configurationId,
        "domain": args.domain,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTlsActivation.
 */
export interface GetTlsActivationArgs {
    certificateId?: string;
    configurationId?: string;
    domain?: string;
    id?: string;
}

/**
 * A collection of values returned by getTlsActivation.
 */
export interface GetTlsActivationResult {
    readonly certificateId: string;
    readonly configurationId: string;
    readonly createdAt: string;
    readonly domain: string;
    readonly id: string;
}
export function getTlsActivationOutput(args?: GetTlsActivationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTlsActivationResult> {
    return pulumi.output(args).apply((a: any) => getTlsActivation(a, opts))
}

/**
 * A collection of arguments for invoking getTlsActivation.
 */
export interface GetTlsActivationOutputArgs {
    certificateId?: pulumi.Input<string>;
    configurationId?: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
