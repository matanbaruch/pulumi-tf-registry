// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTlsDomain(args: GetTlsDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetTlsDomainResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fastly:index/getTlsDomain:getTlsDomain", {
        "domain": args.domain,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTlsDomain.
 */
export interface GetTlsDomainArgs {
    domain: string;
    id?: string;
}

/**
 * A collection of values returned by getTlsDomain.
 */
export interface GetTlsDomainResult {
    readonly domain: string;
    readonly id: string;
    readonly tlsActivationIds: string[];
    readonly tlsCertificateIds: string[];
    readonly tlsSubscriptionIds: string[];
}
export function getTlsDomainOutput(args: GetTlsDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTlsDomainResult> {
    return pulumi.output(args).apply((a: any) => getTlsDomain(a, opts))
}

/**
 * A collection of arguments for invoking getTlsDomain.
 */
export interface GetTlsDomainOutputArgs {
    domain: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
