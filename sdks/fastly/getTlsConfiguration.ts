// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTlsConfiguration(args?: GetTlsConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetTlsConfigurationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fastly:index/getTlsConfiguration:getTlsConfiguration", {
        "default": args.default,
        "httpProtocols": args.httpProtocols,
        "id": args.id,
        "name": args.name,
        "tlsProtocols": args.tlsProtocols,
        "tlsService": args.tlsService,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTlsConfiguration.
 */
export interface GetTlsConfigurationArgs {
    default?: boolean;
    httpProtocols?: string[];
    id?: string;
    name?: string;
    tlsProtocols?: string[];
    tlsService?: string;
}

/**
 * A collection of values returned by getTlsConfiguration.
 */
export interface GetTlsConfigurationResult {
    readonly createdAt: string;
    readonly default: boolean;
    readonly dnsRecords: outputs.GetTlsConfigurationDnsRecord[];
    readonly httpProtocols: string[];
    readonly id: string;
    readonly name: string;
    readonly tlsProtocols: string[];
    readonly tlsService: string;
    readonly updatedAt: string;
}
export function getTlsConfigurationOutput(args?: GetTlsConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTlsConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getTlsConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getTlsConfiguration.
 */
export interface GetTlsConfigurationOutputArgs {
    default?: pulumi.Input<boolean>;
    httpProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tlsProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    tlsService?: pulumi.Input<string>;
}
