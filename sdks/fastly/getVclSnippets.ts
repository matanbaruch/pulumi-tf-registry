// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVclSnippets(args: GetVclSnippetsArgs, opts?: pulumi.InvokeOptions): Promise<GetVclSnippetsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fastly:index/getVclSnippets:getVclSnippets", {
        "id": args.id,
        "serviceId": args.serviceId,
        "serviceVersion": args.serviceVersion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVclSnippets.
 */
export interface GetVclSnippetsArgs {
    id?: string;
    serviceId: string;
    serviceVersion: number;
}

/**
 * A collection of values returned by getVclSnippets.
 */
export interface GetVclSnippetsResult {
    readonly id: string;
    readonly serviceId: string;
    readonly serviceVersion: number;
    readonly vclSnippets: outputs.GetVclSnippetsVclSnippet[];
}
export function getVclSnippetsOutput(args: GetVclSnippetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVclSnippetsResult> {
    return pulumi.output(args).apply((a: any) => getVclSnippets(a, opts))
}

/**
 * A collection of arguments for invoking getVclSnippets.
 */
export interface GetVclSnippetsOutputArgs {
    id?: pulumi.Input<string>;
    serviceId: pulumi.Input<string>;
    serviceVersion: pulumi.Input<number>;
}
