// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPackageHash(args?: GetPackageHashArgs, opts?: pulumi.InvokeOptions): Promise<GetPackageHashResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fastly:index/getPackageHash:getPackageHash", {
        "content": args.content,
        "filename": args.filename,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPackageHash.
 */
export interface GetPackageHashArgs {
    content?: string;
    filename?: string;
    id?: string;
}

/**
 * A collection of values returned by getPackageHash.
 */
export interface GetPackageHashResult {
    readonly content?: string;
    readonly filename?: string;
    readonly hash: string;
    readonly id: string;
}
export function getPackageHashOutput(args?: GetPackageHashOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPackageHashResult> {
    return pulumi.output(args).apply((a: any) => getPackageHash(a, opts))
}

/**
 * A collection of arguments for invoking getPackageHash.
 */
export interface GetPackageHashOutputArgs {
    content?: pulumi.Input<string>;
    filename?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
