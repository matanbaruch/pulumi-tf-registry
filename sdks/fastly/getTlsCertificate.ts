// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTlsCertificate(args?: GetTlsCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetTlsCertificateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fastly:index/getTlsCertificate:getTlsCertificate", {
        "domains": args.domains,
        "id": args.id,
        "issuedTo": args.issuedTo,
        "issuer": args.issuer,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTlsCertificate.
 */
export interface GetTlsCertificateArgs {
    domains?: string[];
    id?: string;
    issuedTo?: string;
    issuer?: string;
    name?: string;
}

/**
 * A collection of values returned by getTlsCertificate.
 */
export interface GetTlsCertificateResult {
    readonly createdAt: string;
    readonly domains: string[];
    readonly id: string;
    readonly issuedTo: string;
    readonly issuer: string;
    readonly name: string;
    readonly replace: boolean;
    readonly serialNumber: string;
    readonly signatureAlgorithm: string;
    readonly updatedAt: string;
}
export function getTlsCertificateOutput(args?: GetTlsCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTlsCertificateResult> {
    return pulumi.output(args).apply((a: any) => getTlsCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getTlsCertificate.
 */
export interface GetTlsCertificateOutputArgs {
    domains?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    issuedTo?: pulumi.Input<string>;
    issuer?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
