// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWafRules(args?: GetWafRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetWafRulesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fastly:index/getWafRules:getWafRules", {
        "excludeModsecRuleIds": args.excludeModsecRuleIds,
        "id": args.id,
        "modsecRuleIds": args.modsecRuleIds,
        "publishers": args.publishers,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWafRules.
 */
export interface GetWafRulesArgs {
    excludeModsecRuleIds?: number[];
    id?: string;
    modsecRuleIds?: number[];
    publishers?: string[];
    tags?: string[];
}

/**
 * A collection of values returned by getWafRules.
 */
export interface GetWafRulesResult {
    readonly excludeModsecRuleIds?: number[];
    readonly id: string;
    readonly modsecRuleIds?: number[];
    readonly publishers?: string[];
    readonly rules: outputs.GetWafRulesRule[];
    readonly tags?: string[];
}
export function getWafRulesOutput(args?: GetWafRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWafRulesResult> {
    return pulumi.output(args).apply((a: any) => getWafRules(a, opts))
}

/**
 * A collection of arguments for invoking getWafRules.
 */
export interface GetWafRulesOutputArgs {
    excludeModsecRuleIds?: pulumi.Input<pulumi.Input<number>[]>;
    id?: pulumi.Input<string>;
    modsecRuleIds?: pulumi.Input<pulumi.Input<number>[]>;
    publishers?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
