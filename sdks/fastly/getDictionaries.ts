// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDictionaries(args: GetDictionariesArgs, opts?: pulumi.InvokeOptions): Promise<GetDictionariesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fastly:index/getDictionaries:getDictionaries", {
        "id": args.id,
        "serviceId": args.serviceId,
        "serviceVersion": args.serviceVersion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDictionaries.
 */
export interface GetDictionariesArgs {
    id?: string;
    serviceId: string;
    serviceVersion: number;
}

/**
 * A collection of values returned by getDictionaries.
 */
export interface GetDictionariesResult {
    readonly dictionaries: outputs.GetDictionariesDictionary[];
    readonly id: string;
    readonly serviceId: string;
    readonly serviceVersion: number;
}
export function getDictionariesOutput(args: GetDictionariesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDictionariesResult> {
    return pulumi.output(args).apply((a: any) => getDictionaries(a, opts))
}

/**
 * A collection of arguments for invoking getDictionaries.
 */
export interface GetDictionariesOutputArgs {
    id?: pulumi.Input<string>;
    serviceId: pulumi.Input<string>;
    serviceVersion: pulumi.Input<number>;
}
