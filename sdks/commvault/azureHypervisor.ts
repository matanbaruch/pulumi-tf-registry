// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AzureHypervisor extends pulumi.CustomResource {
    /**
     * Get an existing AzureHypervisor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureHypervisorState, opts?: pulumi.CustomResourceOptions): AzureHypervisor {
        return new AzureHypervisor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'commvault:index/azureHypervisor:AzureHypervisor';

    /**
     * Returns true if the given object is an instance of AzureHypervisor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureHypervisor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureHypervisor.__pulumiType;
    }

    /**
     * Specifies The clients that have the VSA package installed and that act as proxy clients for Azure hypervisors.
     */
    public readonly accessNodes!: pulumi.Output<string>;
    /**
     * Specifies The application ID of the tenant.
     */
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * Specifies The password for the application ID of the tenant.
     */
    public readonly applicationPassword!: pulumi.Output<string>;
    /**
     * Specifies the company id to which the Azure Hypervisor should be associated with.
     */
    public readonly companyId!: pulumi.Output<number | undefined>;
    /**
     * Specifies The name of the hypervisor.
     */
    public readonly hypervisorName!: pulumi.Output<string>;
    /**
     * Specifies The subscription ID for your Azure account.
     */
    public readonly subscriptionId!: pulumi.Output<string>;
    /**
     * Specifies The tenant ID for your Azure account.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a AzureHypervisor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureHypervisorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureHypervisorArgs | AzureHypervisorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureHypervisorState | undefined;
            resourceInputs["accessNodes"] = state ? state.accessNodes : undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["applicationPassword"] = state ? state.applicationPassword : undefined;
            resourceInputs["companyId"] = state ? state.companyId : undefined;
            resourceInputs["hypervisorName"] = state ? state.hypervisorName : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as AzureHypervisorArgs | undefined;
            if ((!args || args.accessNodes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessNodes'");
            }
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.applicationPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationPassword'");
            }
            if ((!args || args.hypervisorName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hypervisorName'");
            }
            if ((!args || args.subscriptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionId'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["accessNodes"] = args ? args.accessNodes : undefined;
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["applicationPassword"] = args ? args.applicationPassword : undefined;
            resourceInputs["companyId"] = args ? args.companyId : undefined;
            resourceInputs["hypervisorName"] = args ? args.hypervisorName : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureHypervisor.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AzureHypervisor resources.
 */
export interface AzureHypervisorState {
    /**
     * Specifies The clients that have the VSA package installed and that act as proxy clients for Azure hypervisors.
     */
    accessNodes?: pulumi.Input<string>;
    /**
     * Specifies The application ID of the tenant.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Specifies The password for the application ID of the tenant.
     */
    applicationPassword?: pulumi.Input<string>;
    /**
     * Specifies the company id to which the Azure Hypervisor should be associated with.
     */
    companyId?: pulumi.Input<number>;
    /**
     * Specifies The name of the hypervisor.
     */
    hypervisorName?: pulumi.Input<string>;
    /**
     * Specifies The subscription ID for your Azure account.
     */
    subscriptionId?: pulumi.Input<string>;
    /**
     * Specifies The tenant ID for your Azure account.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AzureHypervisor resource.
 */
export interface AzureHypervisorArgs {
    /**
     * Specifies The clients that have the VSA package installed and that act as proxy clients for Azure hypervisors.
     */
    accessNodes: pulumi.Input<string>;
    /**
     * Specifies The application ID of the tenant.
     */
    applicationId: pulumi.Input<string>;
    /**
     * Specifies The password for the application ID of the tenant.
     */
    applicationPassword: pulumi.Input<string>;
    /**
     * Specifies the company id to which the Azure Hypervisor should be associated with.
     */
    companyId?: pulumi.Input<number>;
    /**
     * Specifies The name of the hypervisor.
     */
    hypervisorName: pulumi.Input<string>;
    /**
     * Specifies The subscription ID for your Azure account.
     */
    subscriptionId: pulumi.Input<string>;
    /**
     * Specifies The tenant ID for your Azure account.
     */
    tenantId: pulumi.Input<string>;
}
