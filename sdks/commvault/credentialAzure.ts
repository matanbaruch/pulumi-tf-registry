// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CredentialAzure extends pulumi.CustomResource {
    /**
     * Get an existing CredentialAzure resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CredentialAzureState, opts?: pulumi.CustomResourceOptions): CredentialAzure {
        return new CredentialAzure(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'commvault:index/credentialAzure:CredentialAzure';

    /**
     * Returns true if the given object is an instance of CredentialAzure.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CredentialAzure {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CredentialAzure.__pulumiType;
    }

    /**
     * Access key ID of Credential, applicable only if authType is Access Secret Key and must be in base64 encoded format.
     */
    public readonly accesskeyid!: pulumi.Output<string>;
    /**
     * Account name of Credential, applicable only if authType is Access Key
     */
    public readonly accountname!: pulumi.Output<string>;
    /**
     * [WINDOWSACCOUNT, LINUXACCOUNT, STORAGE_ARRAY_ACCOUNT, CLOUD_ACCOUNT]
     */
    public readonly accounttype!: pulumi.Output<string>;
    /**
     * Description of Credential
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Name of Credential
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Security association of a list of users and user groups
     */
    public readonly securities!: pulumi.Output<outputs.CredentialAzureSecurity[] | undefined>;
    /**
     * Cloud vendor types appilcable only for Cloud Account type [ALICLOUD_OSS, AMAZON_GLACIER, AMAZON, ATT_SYNAPTIC,
     * REVERA_VAULT, CEPH_OBJECT_GATEWAY_S3, CMCC_ONEST, CLOUDIAN_HYPERSTORE, DELL_EMC_ECS_S3, EMC_ATMOS,
     * FUJITSU_STORAGE_ETERNUS, GOOGLE_CLOUD, HDS_HCP, HITACHI_VANTARA_HCP_S3, HUAWEI_OSS, IBM_CLOUD, IBM_CLOUD_S3,
     * INSPUR_CLOUD, IRON_MOUNTAIN_CLOUD, KINGSOFT_KS3, MICROSOFT_AZURE_TYPE, NETAPP_STORAGEGRID, NUTANIX_BUCKETS, OPENSTACK,
     * AMPLIDATA, RACKSPACE_CLOUD_FILES, S3_COMPATIBLE, SALESFORCE_CONNECTED_APP, SCALITY_RING,
     * TELEFONICA_OPEN_CLOUD_OBJECT_STORAGE, VERIZON_CLOUD, WASABI_HOT_CLOUD_STORAGE]
     */
    public readonly vendortype!: pulumi.Output<string>;

    /**
     * Create a CredentialAzure resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CredentialAzureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CredentialAzureArgs | CredentialAzureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CredentialAzureState | undefined;
            resourceInputs["accesskeyid"] = state ? state.accesskeyid : undefined;
            resourceInputs["accountname"] = state ? state.accountname : undefined;
            resourceInputs["accounttype"] = state ? state.accounttype : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["securities"] = state ? state.securities : undefined;
            resourceInputs["vendortype"] = state ? state.vendortype : undefined;
        } else {
            const args = argsOrState as CredentialAzureArgs | undefined;
            if ((!args || args.accesskeyid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accesskeyid'");
            }
            if ((!args || args.accountname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountname'");
            }
            resourceInputs["accesskeyid"] = args ? args.accesskeyid : undefined;
            resourceInputs["accountname"] = args ? args.accountname : undefined;
            resourceInputs["accounttype"] = args ? args.accounttype : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["securities"] = args ? args.securities : undefined;
            resourceInputs["vendortype"] = args ? args.vendortype : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CredentialAzure.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CredentialAzure resources.
 */
export interface CredentialAzureState {
    /**
     * Access key ID of Credential, applicable only if authType is Access Secret Key and must be in base64 encoded format.
     */
    accesskeyid?: pulumi.Input<string>;
    /**
     * Account name of Credential, applicable only if authType is Access Key
     */
    accountname?: pulumi.Input<string>;
    /**
     * [WINDOWSACCOUNT, LINUXACCOUNT, STORAGE_ARRAY_ACCOUNT, CLOUD_ACCOUNT]
     */
    accounttype?: pulumi.Input<string>;
    /**
     * Description of Credential
     */
    description?: pulumi.Input<string>;
    /**
     * Name of Credential
     */
    name?: pulumi.Input<string>;
    /**
     * Security association of a list of users and user groups
     */
    securities?: pulumi.Input<pulumi.Input<inputs.CredentialAzureSecurity>[]>;
    /**
     * Cloud vendor types appilcable only for Cloud Account type [ALICLOUD_OSS, AMAZON_GLACIER, AMAZON, ATT_SYNAPTIC,
     * REVERA_VAULT, CEPH_OBJECT_GATEWAY_S3, CMCC_ONEST, CLOUDIAN_HYPERSTORE, DELL_EMC_ECS_S3, EMC_ATMOS,
     * FUJITSU_STORAGE_ETERNUS, GOOGLE_CLOUD, HDS_HCP, HITACHI_VANTARA_HCP_S3, HUAWEI_OSS, IBM_CLOUD, IBM_CLOUD_S3,
     * INSPUR_CLOUD, IRON_MOUNTAIN_CLOUD, KINGSOFT_KS3, MICROSOFT_AZURE_TYPE, NETAPP_STORAGEGRID, NUTANIX_BUCKETS, OPENSTACK,
     * AMPLIDATA, RACKSPACE_CLOUD_FILES, S3_COMPATIBLE, SALESFORCE_CONNECTED_APP, SCALITY_RING,
     * TELEFONICA_OPEN_CLOUD_OBJECT_STORAGE, VERIZON_CLOUD, WASABI_HOT_CLOUD_STORAGE]
     */
    vendortype?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CredentialAzure resource.
 */
export interface CredentialAzureArgs {
    /**
     * Access key ID of Credential, applicable only if authType is Access Secret Key and must be in base64 encoded format.
     */
    accesskeyid: pulumi.Input<string>;
    /**
     * Account name of Credential, applicable only if authType is Access Key
     */
    accountname: pulumi.Input<string>;
    /**
     * [WINDOWSACCOUNT, LINUXACCOUNT, STORAGE_ARRAY_ACCOUNT, CLOUD_ACCOUNT]
     */
    accounttype?: pulumi.Input<string>;
    /**
     * Description of Credential
     */
    description?: pulumi.Input<string>;
    /**
     * Name of Credential
     */
    name?: pulumi.Input<string>;
    /**
     * Security association of a list of users and user groups
     */
    securities?: pulumi.Input<pulumi.Input<inputs.CredentialAzureSecurity>[]>;
    /**
     * Cloud vendor types appilcable only for Cloud Account type [ALICLOUD_OSS, AMAZON_GLACIER, AMAZON, ATT_SYNAPTIC,
     * REVERA_VAULT, CEPH_OBJECT_GATEWAY_S3, CMCC_ONEST, CLOUDIAN_HYPERSTORE, DELL_EMC_ECS_S3, EMC_ATMOS,
     * FUJITSU_STORAGE_ETERNUS, GOOGLE_CLOUD, HDS_HCP, HITACHI_VANTARA_HCP_S3, HUAWEI_OSS, IBM_CLOUD, IBM_CLOUD_S3,
     * INSPUR_CLOUD, IRON_MOUNTAIN_CLOUD, KINGSOFT_KS3, MICROSOFT_AZURE_TYPE, NETAPP_STORAGEGRID, NUTANIX_BUCKETS, OPENSTACK,
     * AMPLIDATA, RACKSPACE_CLOUD_FILES, S3_COMPATIBLE, SALESFORCE_CONNECTED_APP, SCALITY_RING,
     * TELEFONICA_OPEN_CLOUD_OBJECT_STORAGE, VERIZON_CLOUD, WASABI_HOT_CLOUD_STORAGE]
     */
    vendortype?: pulumi.Input<string>;
}
