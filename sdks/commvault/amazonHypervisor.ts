// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AmazonHypervisor extends pulumi.CustomResource {
    /**
     * Get an existing AmazonHypervisor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AmazonHypervisorState, opts?: pulumi.CustomResourceOptions): AmazonHypervisor {
        return new AmazonHypervisor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'commvault:index/amazonHypervisor:AmazonHypervisor';

    /**
     * Returns true if the given object is an instance of AmazonHypervisor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AmazonHypervisor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AmazonHypervisor.__pulumiType;
    }

    /**
     * Specifies The access key ID for your Amazon account.
     */
    public readonly accessKey!: pulumi.Output<string | undefined>;
    /**
     * Specifies The clients that have the VSA package installed and that act as proxy clients for Amazon hypervisors.
     */
    public readonly accessNodes!: pulumi.Output<string>;
    /**
     * Specifies The name of the Amazon hypervisor.
     */
    public readonly clientName!: pulumi.Output<string>;
    /**
     * Specifies the company id to which the Amazon Hypervisor should be associated with.
     */
    public readonly companyId!: pulumi.Output<number | undefined>;
    /**
     * Specifies the regions used for the Hypervisor
     */
    public readonly regions!: pulumi.Output<string | undefined>;
    /**
     * Specifies The secret key ID for your Amazon account.
     */
    public readonly secretKey!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether you want to use IAM role.
     */
    public readonly useIamRole!: pulumi.Output<boolean>;

    /**
     * Create a AmazonHypervisor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AmazonHypervisorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AmazonHypervisorArgs | AmazonHypervisorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AmazonHypervisorState | undefined;
            resourceInputs["accessKey"] = state ? state.accessKey : undefined;
            resourceInputs["accessNodes"] = state ? state.accessNodes : undefined;
            resourceInputs["clientName"] = state ? state.clientName : undefined;
            resourceInputs["companyId"] = state ? state.companyId : undefined;
            resourceInputs["regions"] = state ? state.regions : undefined;
            resourceInputs["secretKey"] = state ? state.secretKey : undefined;
            resourceInputs["useIamRole"] = state ? state.useIamRole : undefined;
        } else {
            const args = argsOrState as AmazonHypervisorArgs | undefined;
            if ((!args || args.accessNodes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessNodes'");
            }
            if ((!args || args.clientName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientName'");
            }
            if ((!args || args.useIamRole === undefined) && !opts.urn) {
                throw new Error("Missing required property 'useIamRole'");
            }
            resourceInputs["accessKey"] = args ? args.accessKey : undefined;
            resourceInputs["accessNodes"] = args ? args.accessNodes : undefined;
            resourceInputs["clientName"] = args ? args.clientName : undefined;
            resourceInputs["companyId"] = args ? args.companyId : undefined;
            resourceInputs["regions"] = args ? args.regions : undefined;
            resourceInputs["secretKey"] = args ? args.secretKey : undefined;
            resourceInputs["useIamRole"] = args ? args.useIamRole : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AmazonHypervisor.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AmazonHypervisor resources.
 */
export interface AmazonHypervisorState {
    /**
     * Specifies The access key ID for your Amazon account.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Specifies The clients that have the VSA package installed and that act as proxy clients for Amazon hypervisors.
     */
    accessNodes?: pulumi.Input<string>;
    /**
     * Specifies The name of the Amazon hypervisor.
     */
    clientName?: pulumi.Input<string>;
    /**
     * Specifies the company id to which the Amazon Hypervisor should be associated with.
     */
    companyId?: pulumi.Input<number>;
    /**
     * Specifies the regions used for the Hypervisor
     */
    regions?: pulumi.Input<string>;
    /**
     * Specifies The secret key ID for your Amazon account.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * Specifies whether you want to use IAM role.
     */
    useIamRole?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AmazonHypervisor resource.
 */
export interface AmazonHypervisorArgs {
    /**
     * Specifies The access key ID for your Amazon account.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Specifies The clients that have the VSA package installed and that act as proxy clients for Amazon hypervisors.
     */
    accessNodes: pulumi.Input<string>;
    /**
     * Specifies The name of the Amazon hypervisor.
     */
    clientName: pulumi.Input<string>;
    /**
     * Specifies the company id to which the Amazon Hypervisor should be associated with.
     */
    companyId?: pulumi.Input<number>;
    /**
     * Specifies the regions used for the Hypervisor
     */
    regions?: pulumi.Input<string>;
    /**
     * Specifies The secret key ID for your Amazon account.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * Specifies whether you want to use IAM role.
     */
    useIamRole: pulumi.Input<boolean>;
}
