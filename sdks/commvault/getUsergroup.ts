// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getUsergroup(args: GetUsergroupArgs, opts?: pulumi.InvokeOptions): Promise<GetUsergroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("commvault:index/getUsergroup:getUsergroup", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUsergroup.
 */
export interface GetUsergroupArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getUsergroup.
 */
export interface GetUsergroupResult {
    readonly id: string;
    readonly name: string;
}
export function getUsergroupOutput(args: GetUsergroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUsergroupResult> {
    return pulumi.output(args).apply((a: any) => getUsergroup(a, opts))
}

/**
 * A collection of arguments for invoking getUsergroup.
 */
export interface GetUsergroupOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
