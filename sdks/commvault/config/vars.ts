// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("commvault");

/**
 * Specifies the encrypted token for the user to authentication to Web Server.
 */
export declare const apiToken: string | undefined;
Object.defineProperty(exports, "apiToken", {
    get() {
        return __config.get("apiToken");
    },
    enumerable: true,
});

/**
 * ignore certificate warnings
 */
export declare const ignoreCert: boolean | undefined;
Object.defineProperty(exports, "ignoreCert", {
    get() {
        return __config.getObject<boolean>("ignoreCert");
    },
    enumerable: true,
});

export declare const logging: boolean | undefined;
Object.defineProperty(exports, "logging", {
    get() {
        return __config.getObject<boolean>("logging");
    },
    enumerable: true,
});

/**
 * Specifies the Password for the user name to authentication to Web Server.
 */
export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

/**
 * Specifies if the connection should be secured https or non secured http
 */
export declare const secured: boolean | undefined;
Object.defineProperty(exports, "secured", {
    get() {
        return __config.getObject<boolean>("secured");
    },
    enumerable: true,
});

/**
 * Specifies the User name used for authentication to Web Server
 */
export declare const userName: string | undefined;
Object.defineProperty(exports, "userName", {
    get() {
        return __config.get("userName");
    },
    enumerable: true,
});

export declare const webServiceUrl: string | undefined;
Object.defineProperty(exports, "webServiceUrl", {
    get() {
        return __config.get("webServiceUrl");
    },
    enumerable: true,
});

