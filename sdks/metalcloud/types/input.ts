// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface EksaInstanceArray {
    clusterGroupRole?: pulumi.Input<string>;
    driveArrayIdBoot?: pulumi.Input<number>;
    firewallRules?: pulumi.Input<pulumi.Input<inputs.EksaInstanceArrayFirewallRule>[]>;
    infrastructureId: pulumi.Input<number>;
    instanceArrayAdditionalWanIpv4Json?: pulumi.Input<string>;
    instanceArrayBootMethod?: pulumi.Input<string>;
    instanceArrayCustomVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceArrayDiskCount?: pulumi.Input<number>;
    instanceArrayDiskSizeMbytes?: pulumi.Input<number>;
    instanceArrayFirewallManaged?: pulumi.Input<boolean>;
    instanceArrayId?: pulumi.Input<number>;
    instanceArrayInstanceCount?: pulumi.Input<number>;
    instanceArrayLabel?: pulumi.Input<string>;
    instanceArrayProcessorCoreCount?: pulumi.Input<number>;
    instanceArrayProcessorCoreMhz?: pulumi.Input<number>;
    instanceArrayProcessorCount?: pulumi.Input<number>;
    instanceArrayRamGbytes?: pulumi.Input<number>;
    instanceCustomVariables?: pulumi.Input<pulumi.Input<inputs.EksaInstanceArrayInstanceCustomVariable>[]>;
    instanceServerTypes?: pulumi.Input<pulumi.Input<inputs.EksaInstanceArrayInstanceServerType>[]>;
    interfaces?: pulumi.Input<pulumi.Input<inputs.EksaInstanceArrayInterface>[]>;
    networkProfiles?: pulumi.Input<pulumi.Input<inputs.EksaInstanceArrayNetworkProfile>[]>;
    volumeTemplateId?: pulumi.Input<number>;
}

export interface EksaInstanceArrayFirewallRule {
    firewallRuleDescription?: pulumi.Input<string>;
    firewallRuleDestinationIpAddressRangeEnd?: pulumi.Input<string>;
    firewallRuleDestinationIpAddressRangeStart?: pulumi.Input<string>;
    firewallRuleEnabled?: pulumi.Input<boolean>;
    firewallRuleIpAddressType?: pulumi.Input<string>;
    firewallRulePortRangeEnd?: pulumi.Input<number>;
    firewallRulePortRangeStart?: pulumi.Input<number>;
    firewallRuleProtocol?: pulumi.Input<string>;
    firewallRuleSourceIpAddressRangeEnd?: pulumi.Input<string>;
    firewallRuleSourceIpAddressRangeStart?: pulumi.Input<string>;
}

export interface EksaInstanceArrayInstanceCustomVariable {
    customVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceIndex: pulumi.Input<number>;
}

export interface EksaInstanceArrayInstanceServerType {
    instanceIndex: pulumi.Input<number>;
    serverTypeId: pulumi.Input<number>;
}

export interface EksaInstanceArrayInterface {
    interfaceIndex: pulumi.Input<number>;
    networkId: pulumi.Input<number>;
}

export interface EksaInstanceArrayNetworkProfile {
    networkId: pulumi.Input<number>;
    networkProfileId?: pulumi.Input<number>;
}

export interface EksaInstanceArrayNetworkProfileControlPlane {
    networkId: pulumi.Input<number>;
    networkProfileId?: pulumi.Input<number>;
}

export interface EksaInstanceArrayNetworkProfileEksaMgmt {
    networkId: pulumi.Input<number>;
    networkProfileId?: pulumi.Input<number>;
}

export interface EksaInstanceArrayNetworkProfileWorker {
    networkId: pulumi.Input<number>;
    networkProfileId?: pulumi.Input<number>;
}

export interface EksaInstanceCustomVariablesControlPlane {
    customVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceIndex: pulumi.Input<number>;
}

export interface EksaInstanceCustomVariablesEksaMgmt {
    customVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceIndex: pulumi.Input<number>;
}

export interface EksaInstanceCustomVariablesWorker {
    customVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceIndex: pulumi.Input<number>;
}

export interface EksaInstanceServerTypeControlPlane {
    instanceIndex: pulumi.Input<number>;
    serverTypeId: pulumi.Input<number>;
}

export interface EksaInstanceServerTypeEksaMgmt {
    instanceIndex: pulumi.Input<number>;
    serverTypeId: pulumi.Input<number>;
}

export interface EksaInstanceServerTypeWorker {
    instanceIndex: pulumi.Input<number>;
    serverTypeId: pulumi.Input<number>;
}

export interface EksaInterfaceControlPlane {
    interfaceIndex: pulumi.Input<number>;
    networkId: pulumi.Input<number>;
}

export interface EksaInterfaceEksaMgmt {
    interfaceIndex: pulumi.Input<number>;
    networkId: pulumi.Input<number>;
}

export interface EksaInterfaceWorker {
    interfaceIndex: pulumi.Input<number>;
    networkId: pulumi.Input<number>;
}

export interface FirmwarePolicyServerFirmwareUpgradePolicyRule {
    operation: pulumi.Input<string>;
    property: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface InfrastructureDeployerServerAllocationPolicy {
    /**
     * Server allocation policy
     */
    allocationPolicies?: pulumi.Input<pulumi.Input<inputs.InfrastructureDeployerServerAllocationPolicyAllocationPolicy>[]>;
    /**
     * Instance_array ID
     */
    instanceArrayId: pulumi.Input<number>;
}

export interface InfrastructureDeployerServerAllocationPolicyAllocationPolicy {
    /**
     * Count of servers of this server type.
     */
    serverCount?: pulumi.Input<number>;
    /**
     * List of server IDs to associate with this instance array on this server type id.
     */
    serverIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Server type to allocate to instance array.
     */
    serverTypeId: pulumi.Input<number>;
}

export interface InfrastructureDeployerTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface InfrastructureDeployerWorkflowTask {
    runLevel: pulumi.Input<number>;
    stageDefinitionId: pulumi.Input<number>;
    /**
     * Must be one of post_deploy or pre_deploy
     */
    stageRunGroup: pulumi.Input<string>;
}

export interface InstanceArrayFirewallRule {
    firewallRuleDescription?: pulumi.Input<string>;
    firewallRuleDestinationIpAddressRangeEnd?: pulumi.Input<string>;
    firewallRuleDestinationIpAddressRangeStart?: pulumi.Input<string>;
    firewallRuleEnabled?: pulumi.Input<boolean>;
    firewallRuleIpAddressType?: pulumi.Input<string>;
    firewallRulePortRangeEnd?: pulumi.Input<number>;
    firewallRulePortRangeStart?: pulumi.Input<number>;
    firewallRuleProtocol?: pulumi.Input<string>;
    firewallRuleSourceIpAddressRangeEnd?: pulumi.Input<string>;
    firewallRuleSourceIpAddressRangeStart?: pulumi.Input<string>;
}

export interface InstanceArrayInstanceCustomVariable {
    customVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceIndex: pulumi.Input<number>;
}

export interface InstanceArrayInstanceServerType {
    instanceIndex: pulumi.Input<number>;
    serverTypeId: pulumi.Input<number>;
}

export interface InstanceArrayInterface {
    interfaceIndex: pulumi.Input<number>;
    networkId: pulumi.Input<number>;
}

export interface InstanceArrayNetworkProfile {
    networkId: pulumi.Input<number>;
    networkProfileId?: pulumi.Input<number>;
}

export interface KubernetesInstanceArray {
    clusterGroupRole?: pulumi.Input<string>;
    driveArrayIdBoot?: pulumi.Input<number>;
    firewallRules?: pulumi.Input<pulumi.Input<inputs.KubernetesInstanceArrayFirewallRule>[]>;
    infrastructureId: pulumi.Input<number>;
    instanceArrayAdditionalWanIpv4Json?: pulumi.Input<string>;
    instanceArrayBootMethod?: pulumi.Input<string>;
    instanceArrayCustomVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceArrayDiskCount?: pulumi.Input<number>;
    instanceArrayDiskSizeMbytes?: pulumi.Input<number>;
    instanceArrayFirewallManaged?: pulumi.Input<boolean>;
    instanceArrayId?: pulumi.Input<number>;
    instanceArrayInstanceCount?: pulumi.Input<number>;
    instanceArrayLabel?: pulumi.Input<string>;
    instanceArrayProcessorCoreCount?: pulumi.Input<number>;
    instanceArrayProcessorCoreMhz?: pulumi.Input<number>;
    instanceArrayProcessorCount?: pulumi.Input<number>;
    instanceArrayRamGbytes?: pulumi.Input<number>;
    instanceCustomVariables?: pulumi.Input<pulumi.Input<inputs.KubernetesInstanceArrayInstanceCustomVariable>[]>;
    instanceServerTypes?: pulumi.Input<pulumi.Input<inputs.KubernetesInstanceArrayInstanceServerType>[]>;
    interfaces?: pulumi.Input<pulumi.Input<inputs.KubernetesInstanceArrayInterface>[]>;
    networkProfiles?: pulumi.Input<pulumi.Input<inputs.KubernetesInstanceArrayNetworkProfile>[]>;
    volumeTemplateId?: pulumi.Input<number>;
}

export interface KubernetesInstanceArrayFirewallRule {
    firewallRuleDescription?: pulumi.Input<string>;
    firewallRuleDestinationIpAddressRangeEnd?: pulumi.Input<string>;
    firewallRuleDestinationIpAddressRangeStart?: pulumi.Input<string>;
    firewallRuleEnabled?: pulumi.Input<boolean>;
    firewallRuleIpAddressType?: pulumi.Input<string>;
    firewallRulePortRangeEnd?: pulumi.Input<number>;
    firewallRulePortRangeStart?: pulumi.Input<number>;
    firewallRuleProtocol?: pulumi.Input<string>;
    firewallRuleSourceIpAddressRangeEnd?: pulumi.Input<string>;
    firewallRuleSourceIpAddressRangeStart?: pulumi.Input<string>;
}

export interface KubernetesInstanceArrayInstanceCustomVariable {
    customVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceIndex: pulumi.Input<number>;
}

export interface KubernetesInstanceArrayInstanceServerType {
    instanceIndex: pulumi.Input<number>;
    serverTypeId: pulumi.Input<number>;
}

export interface KubernetesInstanceArrayInterface {
    interfaceIndex: pulumi.Input<number>;
    networkId: pulumi.Input<number>;
}

export interface KubernetesInstanceArrayNetworkProfile {
    networkId: pulumi.Input<number>;
    networkProfileId?: pulumi.Input<number>;
}

export interface KubernetesInstanceArrayNetworkProfileMaster {
    networkId: pulumi.Input<number>;
    networkProfileId?: pulumi.Input<number>;
}

export interface KubernetesInstanceArrayNetworkProfileWorker {
    networkId: pulumi.Input<number>;
    networkProfileId?: pulumi.Input<number>;
}

export interface KubernetesInstanceCustomVariablesMaster {
    customVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceIndex: pulumi.Input<number>;
}

export interface KubernetesInstanceCustomVariablesWorker {
    customVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceIndex: pulumi.Input<number>;
}

export interface KubernetesInstanceServerTypeMaster {
    instanceIndex: pulumi.Input<number>;
    serverTypeId: pulumi.Input<number>;
}

export interface KubernetesInstanceServerTypeWorker {
    instanceIndex: pulumi.Input<number>;
    serverTypeId: pulumi.Input<number>;
}

export interface KubernetesInterfaceMaster {
    interfaceIndex: pulumi.Input<number>;
    networkId: pulumi.Input<number>;
}

export interface KubernetesInterfaceWorker {
    interfaceIndex: pulumi.Input<number>;
    networkId: pulumi.Input<number>;
}

export interface NetworkProfileNetworkProfileVlan {
    externalConnectionIds?: pulumi.Input<pulumi.Input<number>[]>;
    portMode: pulumi.Input<string>;
    provisionSubnetGateways?: pulumi.Input<boolean>;
    provisionVxlan?: pulumi.Input<boolean>;
    subnetPoolIds?: pulumi.Input<pulumi.Input<number>[]>;
    vlanId: pulumi.Input<string>;
}

export interface VmwareVcfInstanceArray {
    clusterGroupRole?: pulumi.Input<string>;
    driveArrayIdBoot?: pulumi.Input<number>;
    firewallRules?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceArrayFirewallRule>[]>;
    infrastructureId: pulumi.Input<number>;
    instanceArrayAdditionalWanIpv4Json?: pulumi.Input<string>;
    instanceArrayBootMethod?: pulumi.Input<string>;
    instanceArrayCustomVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceArrayDiskCount?: pulumi.Input<number>;
    instanceArrayDiskSizeMbytes?: pulumi.Input<number>;
    instanceArrayFirewallManaged?: pulumi.Input<boolean>;
    instanceArrayId?: pulumi.Input<number>;
    instanceArrayInstanceCount?: pulumi.Input<number>;
    instanceArrayLabel?: pulumi.Input<string>;
    instanceArrayProcessorCoreCount?: pulumi.Input<number>;
    instanceArrayProcessorCoreMhz?: pulumi.Input<number>;
    instanceArrayProcessorCount?: pulumi.Input<number>;
    instanceArrayRamGbytes?: pulumi.Input<number>;
    instanceCustomVariables?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceArrayInstanceCustomVariable>[]>;
    instanceServerTypes?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceArrayInstanceServerType>[]>;
    interfaces?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceArrayInterface>[]>;
    networkProfiles?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceArrayNetworkProfile>[]>;
    volumeTemplateId?: pulumi.Input<number>;
}

export interface VmwareVcfInstanceArrayFirewallRule {
    firewallRuleDescription?: pulumi.Input<string>;
    firewallRuleDestinationIpAddressRangeEnd?: pulumi.Input<string>;
    firewallRuleDestinationIpAddressRangeStart?: pulumi.Input<string>;
    firewallRuleEnabled?: pulumi.Input<boolean>;
    firewallRuleIpAddressType?: pulumi.Input<string>;
    firewallRulePortRangeEnd?: pulumi.Input<number>;
    firewallRulePortRangeStart?: pulumi.Input<number>;
    firewallRuleProtocol?: pulumi.Input<string>;
    firewallRuleSourceIpAddressRangeEnd?: pulumi.Input<string>;
    firewallRuleSourceIpAddressRangeStart?: pulumi.Input<string>;
}

export interface VmwareVcfInstanceArrayInstanceCustomVariable {
    customVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceIndex: pulumi.Input<number>;
}

export interface VmwareVcfInstanceArrayInstanceServerType {
    instanceIndex: pulumi.Input<number>;
    serverTypeId: pulumi.Input<number>;
}

export interface VmwareVcfInstanceArrayInterface {
    interfaceIndex: pulumi.Input<number>;
    networkId: pulumi.Input<number>;
}

export interface VmwareVcfInstanceArrayNetworkProfile {
    networkId: pulumi.Input<number>;
    networkProfileId?: pulumi.Input<number>;
}

export interface VmwareVcfInstanceArrayNetworkProfileMgmt {
    networkId: pulumi.Input<number>;
    networkProfileId?: pulumi.Input<number>;
}

export interface VmwareVcfInstanceArrayNetworkProfileWorkload {
    networkId: pulumi.Input<number>;
    networkProfileId?: pulumi.Input<number>;
}

export interface VmwareVcfInstanceCustomVariablesMgmt {
    customVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceIndex: pulumi.Input<number>;
}

export interface VmwareVcfInstanceCustomVariablesWorkload {
    customVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceIndex: pulumi.Input<number>;
}

export interface VmwareVcfInstanceServerTypeMgmt {
    instanceIndex: pulumi.Input<number>;
    serverTypeId: pulumi.Input<number>;
}

export interface VmwareVcfInstanceServerTypeWorkload {
    instanceIndex: pulumi.Input<number>;
    serverTypeId: pulumi.Input<number>;
}

export interface VmwareVcfInterfaceMgmt {
    interfaceIndex: pulumi.Input<number>;
    networkId: pulumi.Input<number>;
}

export interface VmwareVcfInterfaceWorkload {
    interfaceIndex: pulumi.Input<number>;
    networkId: pulumi.Input<number>;
}

export interface VmwareVsphereInstanceArray {
    clusterGroupRole?: pulumi.Input<string>;
    driveArrayIdBoot?: pulumi.Input<number>;
    firewallRules?: pulumi.Input<pulumi.Input<inputs.VmwareVsphereInstanceArrayFirewallRule>[]>;
    infrastructureId: pulumi.Input<number>;
    instanceArrayAdditionalWanIpv4Json?: pulumi.Input<string>;
    instanceArrayBootMethod?: pulumi.Input<string>;
    instanceArrayCustomVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceArrayDiskCount?: pulumi.Input<number>;
    instanceArrayDiskSizeMbytes?: pulumi.Input<number>;
    instanceArrayFirewallManaged?: pulumi.Input<boolean>;
    instanceArrayId?: pulumi.Input<number>;
    instanceArrayInstanceCount?: pulumi.Input<number>;
    instanceArrayLabel?: pulumi.Input<string>;
    instanceArrayProcessorCoreCount?: pulumi.Input<number>;
    instanceArrayProcessorCoreMhz?: pulumi.Input<number>;
    instanceArrayProcessorCount?: pulumi.Input<number>;
    instanceArrayRamGbytes?: pulumi.Input<number>;
    instanceCustomVariables?: pulumi.Input<pulumi.Input<inputs.VmwareVsphereInstanceArrayInstanceCustomVariable>[]>;
    instanceServerTypes?: pulumi.Input<pulumi.Input<inputs.VmwareVsphereInstanceArrayInstanceServerType>[]>;
    interfaces?: pulumi.Input<pulumi.Input<inputs.VmwareVsphereInstanceArrayInterface>[]>;
    networkProfiles?: pulumi.Input<pulumi.Input<inputs.VmwareVsphereInstanceArrayNetworkProfile>[]>;
    volumeTemplateId?: pulumi.Input<number>;
}

export interface VmwareVsphereInstanceArrayFirewallRule {
    firewallRuleDescription?: pulumi.Input<string>;
    firewallRuleDestinationIpAddressRangeEnd?: pulumi.Input<string>;
    firewallRuleDestinationIpAddressRangeStart?: pulumi.Input<string>;
    firewallRuleEnabled?: pulumi.Input<boolean>;
    firewallRuleIpAddressType?: pulumi.Input<string>;
    firewallRulePortRangeEnd?: pulumi.Input<number>;
    firewallRulePortRangeStart?: pulumi.Input<number>;
    firewallRuleProtocol?: pulumi.Input<string>;
    firewallRuleSourceIpAddressRangeEnd?: pulumi.Input<string>;
    firewallRuleSourceIpAddressRangeStart?: pulumi.Input<string>;
}

export interface VmwareVsphereInstanceArrayInstanceCustomVariable {
    customVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceIndex: pulumi.Input<number>;
}

export interface VmwareVsphereInstanceArrayInstanceServerType {
    instanceIndex: pulumi.Input<number>;
    serverTypeId: pulumi.Input<number>;
}

export interface VmwareVsphereInstanceArrayInterface {
    interfaceIndex: pulumi.Input<number>;
    networkId: pulumi.Input<number>;
}

export interface VmwareVsphereInstanceArrayNetworkProfile {
    networkId: pulumi.Input<number>;
    networkProfileId?: pulumi.Input<number>;
}

export interface VmwareVsphereInstanceArrayNetworkProfileMaster {
    networkId: pulumi.Input<number>;
    networkProfileId?: pulumi.Input<number>;
}

export interface VmwareVsphereInstanceArrayNetworkProfileWorker {
    networkId: pulumi.Input<number>;
    networkProfileId?: pulumi.Input<number>;
}

export interface VmwareVsphereInstanceCustomVariablesMaster {
    customVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceIndex: pulumi.Input<number>;
}

export interface VmwareVsphereInstanceCustomVariablesWorker {
    customVariables: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceIndex: pulumi.Input<number>;
}

export interface VmwareVsphereInstanceServerTypeMaster {
    instanceIndex: pulumi.Input<number>;
    serverTypeId: pulumi.Input<number>;
}

export interface VmwareVsphereInstanceServerTypeWorker {
    instanceIndex: pulumi.Input<number>;
    serverTypeId: pulumi.Input<number>;
}

export interface VmwareVsphereInterfaceMaster {
    interfaceIndex: pulumi.Input<number>;
    networkId: pulumi.Input<number>;
}

export interface VmwareVsphereInterfaceWorker {
    interfaceIndex: pulumi.Input<number>;
    networkId: pulumi.Input<number>;
}
