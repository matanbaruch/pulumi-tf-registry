// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VmwareVcf extends pulumi.CustomResource {
    /**
     * Get an existing VmwareVcf resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VmwareVcfState, opts?: pulumi.CustomResourceOptions): VmwareVcf {
        return new VmwareVcf(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'metalcloud:index/vmwareVcf:VmwareVcf';

    /**
     * Returns true if the given object is an instance of VmwareVcf.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VmwareVcf {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VmwareVcf.__pulumiType;
    }

    public /*out*/ readonly clusterId!: pulumi.Output<number>;
    public readonly clusterLabel!: pulumi.Output<string>;
    public readonly clusterSoftwareVersion!: pulumi.Output<string>;
    public readonly infrastructureId!: pulumi.Output<number>;
    public readonly instanceArrayCustomVariablesMgmt!: pulumi.Output<{[key: string]: string}>;
    public readonly instanceArrayCustomVariablesWorkload!: pulumi.Output<{[key: string]: string}>;
    public readonly instanceArrayInstanceCountMgmt!: pulumi.Output<number | undefined>;
    public readonly instanceArrayInstanceCountWorkload!: pulumi.Output<number | undefined>;
    public readonly instanceArrayNetworkProfileMgmts!: pulumi.Output<outputs.VmwareVcfInstanceArrayNetworkProfileMgmt[] | undefined>;
    public readonly instanceArrayNetworkProfileWorkloads!: pulumi.Output<outputs.VmwareVcfInstanceArrayNetworkProfileWorkload[] | undefined>;
    public readonly instanceArrays!: pulumi.Output<outputs.VmwareVcfInstanceArray[] | undefined>;
    public readonly instanceCustomVariablesMgmts!: pulumi.Output<outputs.VmwareVcfInstanceCustomVariablesMgmt[] | undefined>;
    public readonly instanceCustomVariablesWorkloads!: pulumi.Output<outputs.VmwareVcfInstanceCustomVariablesWorkload[] | undefined>;
    public readonly instanceServerTypeMgmts!: pulumi.Output<outputs.VmwareVcfInstanceServerTypeMgmt[] | undefined>;
    public readonly instanceServerTypeWorkloads!: pulumi.Output<outputs.VmwareVcfInstanceServerTypeWorkload[] | undefined>;
    public readonly interfaceMgmts!: pulumi.Output<outputs.VmwareVcfInterfaceMgmt[] | undefined>;
    public readonly interfaceWorkloads!: pulumi.Output<outputs.VmwareVcfInterfaceWorkload[] | undefined>;

    /**
     * Create a VmwareVcf resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VmwareVcfArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VmwareVcfArgs | VmwareVcfState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VmwareVcfState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["clusterLabel"] = state ? state.clusterLabel : undefined;
            resourceInputs["clusterSoftwareVersion"] = state ? state.clusterSoftwareVersion : undefined;
            resourceInputs["infrastructureId"] = state ? state.infrastructureId : undefined;
            resourceInputs["instanceArrayCustomVariablesMgmt"] = state ? state.instanceArrayCustomVariablesMgmt : undefined;
            resourceInputs["instanceArrayCustomVariablesWorkload"] = state ? state.instanceArrayCustomVariablesWorkload : undefined;
            resourceInputs["instanceArrayInstanceCountMgmt"] = state ? state.instanceArrayInstanceCountMgmt : undefined;
            resourceInputs["instanceArrayInstanceCountWorkload"] = state ? state.instanceArrayInstanceCountWorkload : undefined;
            resourceInputs["instanceArrayNetworkProfileMgmts"] = state ? state.instanceArrayNetworkProfileMgmts : undefined;
            resourceInputs["instanceArrayNetworkProfileWorkloads"] = state ? state.instanceArrayNetworkProfileWorkloads : undefined;
            resourceInputs["instanceArrays"] = state ? state.instanceArrays : undefined;
            resourceInputs["instanceCustomVariablesMgmts"] = state ? state.instanceCustomVariablesMgmts : undefined;
            resourceInputs["instanceCustomVariablesWorkloads"] = state ? state.instanceCustomVariablesWorkloads : undefined;
            resourceInputs["instanceServerTypeMgmts"] = state ? state.instanceServerTypeMgmts : undefined;
            resourceInputs["instanceServerTypeWorkloads"] = state ? state.instanceServerTypeWorkloads : undefined;
            resourceInputs["interfaceMgmts"] = state ? state.interfaceMgmts : undefined;
            resourceInputs["interfaceWorkloads"] = state ? state.interfaceWorkloads : undefined;
        } else {
            const args = argsOrState as VmwareVcfArgs | undefined;
            if ((!args || args.infrastructureId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'infrastructureId'");
            }
            resourceInputs["clusterLabel"] = args ? args.clusterLabel : undefined;
            resourceInputs["clusterSoftwareVersion"] = args ? args.clusterSoftwareVersion : undefined;
            resourceInputs["infrastructureId"] = args ? args.infrastructureId : undefined;
            resourceInputs["instanceArrayCustomVariablesMgmt"] = args ? args.instanceArrayCustomVariablesMgmt : undefined;
            resourceInputs["instanceArrayCustomVariablesWorkload"] = args ? args.instanceArrayCustomVariablesWorkload : undefined;
            resourceInputs["instanceArrayInstanceCountMgmt"] = args ? args.instanceArrayInstanceCountMgmt : undefined;
            resourceInputs["instanceArrayInstanceCountWorkload"] = args ? args.instanceArrayInstanceCountWorkload : undefined;
            resourceInputs["instanceArrayNetworkProfileMgmts"] = args ? args.instanceArrayNetworkProfileMgmts : undefined;
            resourceInputs["instanceArrayNetworkProfileWorkloads"] = args ? args.instanceArrayNetworkProfileWorkloads : undefined;
            resourceInputs["instanceArrays"] = args ? args.instanceArrays : undefined;
            resourceInputs["instanceCustomVariablesMgmts"] = args ? args.instanceCustomVariablesMgmts : undefined;
            resourceInputs["instanceCustomVariablesWorkloads"] = args ? args.instanceCustomVariablesWorkloads : undefined;
            resourceInputs["instanceServerTypeMgmts"] = args ? args.instanceServerTypeMgmts : undefined;
            resourceInputs["instanceServerTypeWorkloads"] = args ? args.instanceServerTypeWorkloads : undefined;
            resourceInputs["interfaceMgmts"] = args ? args.interfaceMgmts : undefined;
            resourceInputs["interfaceWorkloads"] = args ? args.interfaceWorkloads : undefined;
            resourceInputs["clusterId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VmwareVcf.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VmwareVcf resources.
 */
export interface VmwareVcfState {
    clusterId?: pulumi.Input<number>;
    clusterLabel?: pulumi.Input<string>;
    clusterSoftwareVersion?: pulumi.Input<string>;
    infrastructureId?: pulumi.Input<number>;
    instanceArrayCustomVariablesMgmt?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceArrayCustomVariablesWorkload?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceArrayInstanceCountMgmt?: pulumi.Input<number>;
    instanceArrayInstanceCountWorkload?: pulumi.Input<number>;
    instanceArrayNetworkProfileMgmts?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceArrayNetworkProfileMgmt>[]>;
    instanceArrayNetworkProfileWorkloads?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceArrayNetworkProfileWorkload>[]>;
    instanceArrays?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceArray>[]>;
    instanceCustomVariablesMgmts?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceCustomVariablesMgmt>[]>;
    instanceCustomVariablesWorkloads?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceCustomVariablesWorkload>[]>;
    instanceServerTypeMgmts?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceServerTypeMgmt>[]>;
    instanceServerTypeWorkloads?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceServerTypeWorkload>[]>;
    interfaceMgmts?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInterfaceMgmt>[]>;
    interfaceWorkloads?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInterfaceWorkload>[]>;
}

/**
 * The set of arguments for constructing a VmwareVcf resource.
 */
export interface VmwareVcfArgs {
    clusterLabel?: pulumi.Input<string>;
    clusterSoftwareVersion?: pulumi.Input<string>;
    infrastructureId: pulumi.Input<number>;
    instanceArrayCustomVariablesMgmt?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceArrayCustomVariablesWorkload?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceArrayInstanceCountMgmt?: pulumi.Input<number>;
    instanceArrayInstanceCountWorkload?: pulumi.Input<number>;
    instanceArrayNetworkProfileMgmts?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceArrayNetworkProfileMgmt>[]>;
    instanceArrayNetworkProfileWorkloads?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceArrayNetworkProfileWorkload>[]>;
    instanceArrays?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceArray>[]>;
    instanceCustomVariablesMgmts?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceCustomVariablesMgmt>[]>;
    instanceCustomVariablesWorkloads?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceCustomVariablesWorkload>[]>;
    instanceServerTypeMgmts?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceServerTypeMgmt>[]>;
    instanceServerTypeWorkloads?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInstanceServerTypeWorkload>[]>;
    interfaceMgmts?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInterfaceMgmt>[]>;
    interfaceWorkloads?: pulumi.Input<pulumi.Input<inputs.VmwareVcfInterfaceWorkload>[]>;
}
