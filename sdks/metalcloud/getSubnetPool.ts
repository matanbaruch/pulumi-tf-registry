// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSubnetPool(args: GetSubnetPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetSubnetPoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("metalcloud:index/getSubnetPool:getSubnetPool", {
        "id": args.id,
        "subnetPoolId": args.subnetPoolId,
        "subnetPoolLabel": args.subnetPoolLabel,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSubnetPool.
 */
export interface GetSubnetPoolArgs {
    id?: string;
    subnetPoolId?: number;
    subnetPoolLabel: string;
}

/**
 * A collection of values returned by getSubnetPool.
 */
export interface GetSubnetPoolResult {
    readonly id: string;
    readonly subnetPoolId: number;
    readonly subnetPoolLabel: string;
}
export function getSubnetPoolOutput(args: GetSubnetPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubnetPoolResult> {
    return pulumi.output(args).apply((a: any) => getSubnetPool(a, opts))
}

/**
 * A collection of arguments for invoking getSubnetPool.
 */
export interface GetSubnetPoolOutputArgs {
    id?: pulumi.Input<string>;
    subnetPoolId?: pulumi.Input<number>;
    subnetPoolLabel: pulumi.Input<string>;
}
