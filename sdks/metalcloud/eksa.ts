// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Eksa extends pulumi.CustomResource {
    /**
     * Get an existing Eksa resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EksaState, opts?: pulumi.CustomResourceOptions): Eksa {
        return new Eksa(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'metalcloud:index/eksa:Eksa';

    /**
     * Returns true if the given object is an instance of Eksa.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Eksa {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Eksa.__pulumiType;
    }

    public /*out*/ readonly clusterId!: pulumi.Output<number>;
    public readonly clusterLabel!: pulumi.Output<string>;
    public readonly clusterSoftwareVersion!: pulumi.Output<string>;
    public readonly infrastructureId!: pulumi.Output<number>;
    public readonly instanceArrayCustomVariablesControlPlane!: pulumi.Output<{[key: string]: string}>;
    public readonly instanceArrayCustomVariablesEksaMgmt!: pulumi.Output<{[key: string]: string}>;
    public readonly instanceArrayCustomVariablesWorker!: pulumi.Output<{[key: string]: string}>;
    public readonly instanceArrayInstanceCountControlPlane!: pulumi.Output<number | undefined>;
    public readonly instanceArrayInstanceCountEksaMgmt!: pulumi.Output<number | undefined>;
    public readonly instanceArrayInstanceCountWorker!: pulumi.Output<number | undefined>;
    public readonly instanceArrayNetworkProfileControlPlanes!: pulumi.Output<outputs.EksaInstanceArrayNetworkProfileControlPlane[] | undefined>;
    public readonly instanceArrayNetworkProfileEksaMgmts!: pulumi.Output<outputs.EksaInstanceArrayNetworkProfileEksaMgmt[] | undefined>;
    public readonly instanceArrayNetworkProfileWorkers!: pulumi.Output<outputs.EksaInstanceArrayNetworkProfileWorker[] | undefined>;
    public readonly instanceArrays!: pulumi.Output<outputs.EksaInstanceArray[] | undefined>;
    public readonly instanceCustomVariablesControlPlanes!: pulumi.Output<outputs.EksaInstanceCustomVariablesControlPlane[] | undefined>;
    public readonly instanceCustomVariablesEksaMgmts!: pulumi.Output<outputs.EksaInstanceCustomVariablesEksaMgmt[] | undefined>;
    public readonly instanceCustomVariablesWorkers!: pulumi.Output<outputs.EksaInstanceCustomVariablesWorker[] | undefined>;
    public readonly instanceServerTypeControlPlanes!: pulumi.Output<outputs.EksaInstanceServerTypeControlPlane[] | undefined>;
    public readonly instanceServerTypeEksaMgmts!: pulumi.Output<outputs.EksaInstanceServerTypeEksaMgmt[] | undefined>;
    public readonly instanceServerTypeWorkers!: pulumi.Output<outputs.EksaInstanceServerTypeWorker[] | undefined>;
    public readonly interfaceControlPlanes!: pulumi.Output<outputs.EksaInterfaceControlPlane[] | undefined>;
    public readonly interfaceEksaMgmts!: pulumi.Output<outputs.EksaInterfaceEksaMgmt[] | undefined>;
    public readonly interfaceWorkers!: pulumi.Output<outputs.EksaInterfaceWorker[] | undefined>;

    /**
     * Create a Eksa resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EksaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EksaArgs | EksaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EksaState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["clusterLabel"] = state ? state.clusterLabel : undefined;
            resourceInputs["clusterSoftwareVersion"] = state ? state.clusterSoftwareVersion : undefined;
            resourceInputs["infrastructureId"] = state ? state.infrastructureId : undefined;
            resourceInputs["instanceArrayCustomVariablesControlPlane"] = state ? state.instanceArrayCustomVariablesControlPlane : undefined;
            resourceInputs["instanceArrayCustomVariablesEksaMgmt"] = state ? state.instanceArrayCustomVariablesEksaMgmt : undefined;
            resourceInputs["instanceArrayCustomVariablesWorker"] = state ? state.instanceArrayCustomVariablesWorker : undefined;
            resourceInputs["instanceArrayInstanceCountControlPlane"] = state ? state.instanceArrayInstanceCountControlPlane : undefined;
            resourceInputs["instanceArrayInstanceCountEksaMgmt"] = state ? state.instanceArrayInstanceCountEksaMgmt : undefined;
            resourceInputs["instanceArrayInstanceCountWorker"] = state ? state.instanceArrayInstanceCountWorker : undefined;
            resourceInputs["instanceArrayNetworkProfileControlPlanes"] = state ? state.instanceArrayNetworkProfileControlPlanes : undefined;
            resourceInputs["instanceArrayNetworkProfileEksaMgmts"] = state ? state.instanceArrayNetworkProfileEksaMgmts : undefined;
            resourceInputs["instanceArrayNetworkProfileWorkers"] = state ? state.instanceArrayNetworkProfileWorkers : undefined;
            resourceInputs["instanceArrays"] = state ? state.instanceArrays : undefined;
            resourceInputs["instanceCustomVariablesControlPlanes"] = state ? state.instanceCustomVariablesControlPlanes : undefined;
            resourceInputs["instanceCustomVariablesEksaMgmts"] = state ? state.instanceCustomVariablesEksaMgmts : undefined;
            resourceInputs["instanceCustomVariablesWorkers"] = state ? state.instanceCustomVariablesWorkers : undefined;
            resourceInputs["instanceServerTypeControlPlanes"] = state ? state.instanceServerTypeControlPlanes : undefined;
            resourceInputs["instanceServerTypeEksaMgmts"] = state ? state.instanceServerTypeEksaMgmts : undefined;
            resourceInputs["instanceServerTypeWorkers"] = state ? state.instanceServerTypeWorkers : undefined;
            resourceInputs["interfaceControlPlanes"] = state ? state.interfaceControlPlanes : undefined;
            resourceInputs["interfaceEksaMgmts"] = state ? state.interfaceEksaMgmts : undefined;
            resourceInputs["interfaceWorkers"] = state ? state.interfaceWorkers : undefined;
        } else {
            const args = argsOrState as EksaArgs | undefined;
            if ((!args || args.infrastructureId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'infrastructureId'");
            }
            resourceInputs["clusterLabel"] = args ? args.clusterLabel : undefined;
            resourceInputs["clusterSoftwareVersion"] = args ? args.clusterSoftwareVersion : undefined;
            resourceInputs["infrastructureId"] = args ? args.infrastructureId : undefined;
            resourceInputs["instanceArrayCustomVariablesControlPlane"] = args ? args.instanceArrayCustomVariablesControlPlane : undefined;
            resourceInputs["instanceArrayCustomVariablesEksaMgmt"] = args ? args.instanceArrayCustomVariablesEksaMgmt : undefined;
            resourceInputs["instanceArrayCustomVariablesWorker"] = args ? args.instanceArrayCustomVariablesWorker : undefined;
            resourceInputs["instanceArrayInstanceCountControlPlane"] = args ? args.instanceArrayInstanceCountControlPlane : undefined;
            resourceInputs["instanceArrayInstanceCountEksaMgmt"] = args ? args.instanceArrayInstanceCountEksaMgmt : undefined;
            resourceInputs["instanceArrayInstanceCountWorker"] = args ? args.instanceArrayInstanceCountWorker : undefined;
            resourceInputs["instanceArrayNetworkProfileControlPlanes"] = args ? args.instanceArrayNetworkProfileControlPlanes : undefined;
            resourceInputs["instanceArrayNetworkProfileEksaMgmts"] = args ? args.instanceArrayNetworkProfileEksaMgmts : undefined;
            resourceInputs["instanceArrayNetworkProfileWorkers"] = args ? args.instanceArrayNetworkProfileWorkers : undefined;
            resourceInputs["instanceArrays"] = args ? args.instanceArrays : undefined;
            resourceInputs["instanceCustomVariablesControlPlanes"] = args ? args.instanceCustomVariablesControlPlanes : undefined;
            resourceInputs["instanceCustomVariablesEksaMgmts"] = args ? args.instanceCustomVariablesEksaMgmts : undefined;
            resourceInputs["instanceCustomVariablesWorkers"] = args ? args.instanceCustomVariablesWorkers : undefined;
            resourceInputs["instanceServerTypeControlPlanes"] = args ? args.instanceServerTypeControlPlanes : undefined;
            resourceInputs["instanceServerTypeEksaMgmts"] = args ? args.instanceServerTypeEksaMgmts : undefined;
            resourceInputs["instanceServerTypeWorkers"] = args ? args.instanceServerTypeWorkers : undefined;
            resourceInputs["interfaceControlPlanes"] = args ? args.interfaceControlPlanes : undefined;
            resourceInputs["interfaceEksaMgmts"] = args ? args.interfaceEksaMgmts : undefined;
            resourceInputs["interfaceWorkers"] = args ? args.interfaceWorkers : undefined;
            resourceInputs["clusterId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Eksa.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Eksa resources.
 */
export interface EksaState {
    clusterId?: pulumi.Input<number>;
    clusterLabel?: pulumi.Input<string>;
    clusterSoftwareVersion?: pulumi.Input<string>;
    infrastructureId?: pulumi.Input<number>;
    instanceArrayCustomVariablesControlPlane?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceArrayCustomVariablesEksaMgmt?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceArrayCustomVariablesWorker?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceArrayInstanceCountControlPlane?: pulumi.Input<number>;
    instanceArrayInstanceCountEksaMgmt?: pulumi.Input<number>;
    instanceArrayInstanceCountWorker?: pulumi.Input<number>;
    instanceArrayNetworkProfileControlPlanes?: pulumi.Input<pulumi.Input<inputs.EksaInstanceArrayNetworkProfileControlPlane>[]>;
    instanceArrayNetworkProfileEksaMgmts?: pulumi.Input<pulumi.Input<inputs.EksaInstanceArrayNetworkProfileEksaMgmt>[]>;
    instanceArrayNetworkProfileWorkers?: pulumi.Input<pulumi.Input<inputs.EksaInstanceArrayNetworkProfileWorker>[]>;
    instanceArrays?: pulumi.Input<pulumi.Input<inputs.EksaInstanceArray>[]>;
    instanceCustomVariablesControlPlanes?: pulumi.Input<pulumi.Input<inputs.EksaInstanceCustomVariablesControlPlane>[]>;
    instanceCustomVariablesEksaMgmts?: pulumi.Input<pulumi.Input<inputs.EksaInstanceCustomVariablesEksaMgmt>[]>;
    instanceCustomVariablesWorkers?: pulumi.Input<pulumi.Input<inputs.EksaInstanceCustomVariablesWorker>[]>;
    instanceServerTypeControlPlanes?: pulumi.Input<pulumi.Input<inputs.EksaInstanceServerTypeControlPlane>[]>;
    instanceServerTypeEksaMgmts?: pulumi.Input<pulumi.Input<inputs.EksaInstanceServerTypeEksaMgmt>[]>;
    instanceServerTypeWorkers?: pulumi.Input<pulumi.Input<inputs.EksaInstanceServerTypeWorker>[]>;
    interfaceControlPlanes?: pulumi.Input<pulumi.Input<inputs.EksaInterfaceControlPlane>[]>;
    interfaceEksaMgmts?: pulumi.Input<pulumi.Input<inputs.EksaInterfaceEksaMgmt>[]>;
    interfaceWorkers?: pulumi.Input<pulumi.Input<inputs.EksaInterfaceWorker>[]>;
}

/**
 * The set of arguments for constructing a Eksa resource.
 */
export interface EksaArgs {
    clusterLabel?: pulumi.Input<string>;
    clusterSoftwareVersion?: pulumi.Input<string>;
    infrastructureId: pulumi.Input<number>;
    instanceArrayCustomVariablesControlPlane?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceArrayCustomVariablesEksaMgmt?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceArrayCustomVariablesWorker?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instanceArrayInstanceCountControlPlane?: pulumi.Input<number>;
    instanceArrayInstanceCountEksaMgmt?: pulumi.Input<number>;
    instanceArrayInstanceCountWorker?: pulumi.Input<number>;
    instanceArrayNetworkProfileControlPlanes?: pulumi.Input<pulumi.Input<inputs.EksaInstanceArrayNetworkProfileControlPlane>[]>;
    instanceArrayNetworkProfileEksaMgmts?: pulumi.Input<pulumi.Input<inputs.EksaInstanceArrayNetworkProfileEksaMgmt>[]>;
    instanceArrayNetworkProfileWorkers?: pulumi.Input<pulumi.Input<inputs.EksaInstanceArrayNetworkProfileWorker>[]>;
    instanceArrays?: pulumi.Input<pulumi.Input<inputs.EksaInstanceArray>[]>;
    instanceCustomVariablesControlPlanes?: pulumi.Input<pulumi.Input<inputs.EksaInstanceCustomVariablesControlPlane>[]>;
    instanceCustomVariablesEksaMgmts?: pulumi.Input<pulumi.Input<inputs.EksaInstanceCustomVariablesEksaMgmt>[]>;
    instanceCustomVariablesWorkers?: pulumi.Input<pulumi.Input<inputs.EksaInstanceCustomVariablesWorker>[]>;
    instanceServerTypeControlPlanes?: pulumi.Input<pulumi.Input<inputs.EksaInstanceServerTypeControlPlane>[]>;
    instanceServerTypeEksaMgmts?: pulumi.Input<pulumi.Input<inputs.EksaInstanceServerTypeEksaMgmt>[]>;
    instanceServerTypeWorkers?: pulumi.Input<pulumi.Input<inputs.EksaInstanceServerTypeWorker>[]>;
    interfaceControlPlanes?: pulumi.Input<pulumi.Input<inputs.EksaInterfaceControlPlane>[]>;
    interfaceEksaMgmts?: pulumi.Input<pulumi.Input<inputs.EksaInterfaceEksaMgmt>[]>;
    interfaceWorkers?: pulumi.Input<pulumi.Input<inputs.EksaInterfaceWorker>[]>;
}
