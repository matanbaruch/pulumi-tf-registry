// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getServerType(args: GetServerTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetServerTypeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("metalcloud:index/getServerType:getServerType", {
        "id": args.id,
        "serverTypeId": args.serverTypeId,
        "serverTypeName": args.serverTypeName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServerType.
 */
export interface GetServerTypeArgs {
    id?: string;
    serverTypeId?: number;
    serverTypeName: string;
}

/**
 * A collection of values returned by getServerType.
 */
export interface GetServerTypeResult {
    readonly id: string;
    readonly serverDiskCount: number;
    readonly serverDiskSizeMbytes: number;
    readonly serverDiskType: string;
    readonly serverProcessorCoreCount: number;
    readonly serverProcessorCoreMhz: number;
    readonly serverProcessorCount: number;
    readonly serverRamGbytes: number;
    readonly serverTypeId: number;
    readonly serverTypeName: string;
}
export function getServerTypeOutput(args: GetServerTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerTypeResult> {
    return pulumi.output(args).apply((a: any) => getServerType(a, opts))
}

/**
 * A collection of arguments for invoking getServerType.
 */
export interface GetServerTypeOutputArgs {
    id?: pulumi.Input<string>;
    serverTypeId?: pulumi.Input<number>;
    serverTypeName: pulumi.Input<string>;
}
