// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVolumeTemplate(args: GetVolumeTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumeTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("metalcloud:index/getVolumeTemplate:getVolumeTemplate", {
        "id": args.id,
        "volumeTemplateLabel": args.volumeTemplateLabel,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVolumeTemplate.
 */
export interface GetVolumeTemplateArgs {
    id?: string;
    volumeTemplateLabel: string;
}

/**
 * A collection of values returned by getVolumeTemplate.
 */
export interface GetVolumeTemplateResult {
    readonly id: string;
    readonly volumeTemplateId: number;
    readonly volumeTemplateLabel: string;
}
export function getVolumeTemplateOutput(args: GetVolumeTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVolumeTemplateResult> {
    return pulumi.output(args).apply((a: any) => getVolumeTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getVolumeTemplate.
 */
export interface GetVolumeTemplateOutputArgs {
    id?: pulumi.Input<string>;
    volumeTemplateLabel: pulumi.Input<string>;
}
