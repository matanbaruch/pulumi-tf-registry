// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getWorkflowTask(args: GetWorkflowTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkflowTaskResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("metalcloud:index/getWorkflowTask:getWorkflowTask", {
        "id": args.id,
        "stageDefinitionId": args.stageDefinitionId,
        "stageDefinitionLabel": args.stageDefinitionLabel,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkflowTask.
 */
export interface GetWorkflowTaskArgs {
    id?: string;
    stageDefinitionId?: number;
    stageDefinitionLabel: string;
}

/**
 * A collection of values returned by getWorkflowTask.
 */
export interface GetWorkflowTaskResult {
    readonly id: string;
    readonly stageDefinitionId: number;
    readonly stageDefinitionLabel: string;
}
export function getWorkflowTaskOutput(args: GetWorkflowTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkflowTaskResult> {
    return pulumi.output(args).apply((a: any) => getWorkflowTask(a, opts))
}

/**
 * A collection of arguments for invoking getWorkflowTask.
 */
export interface GetWorkflowTaskOutputArgs {
    id?: pulumi.Input<string>;
    stageDefinitionId?: pulumi.Input<number>;
    stageDefinitionLabel: pulumi.Input<string>;
}
