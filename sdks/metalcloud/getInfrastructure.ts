// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getInfrastructure(args: GetInfrastructureArgs, opts?: pulumi.InvokeOptions): Promise<GetInfrastructureResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("metalcloud:index/getInfrastructure:getInfrastructure", {
        "createIfNotExists": args.createIfNotExists,
        "datacenterName": args.datacenterName,
        "id": args.id,
        "infrastructureLabel": args.infrastructureLabel,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInfrastructure.
 */
export interface GetInfrastructureArgs {
    createIfNotExists?: boolean;
    datacenterName: string;
    id?: string;
    infrastructureLabel: string;
}

/**
 * A collection of values returned by getInfrastructure.
 */
export interface GetInfrastructureResult {
    readonly createIfNotExists?: boolean;
    readonly datacenterName: string;
    readonly id: string;
    readonly infrastructureId: number;
    readonly infrastructureLabel: string;
}
export function getInfrastructureOutput(args: GetInfrastructureOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInfrastructureResult> {
    return pulumi.output(args).apply((a: any) => getInfrastructure(a, opts))
}

/**
 * A collection of arguments for invoking getInfrastructure.
 */
export interface GetInfrastructureOutputArgs {
    createIfNotExists?: pulumi.Input<boolean>;
    datacenterName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    infrastructureLabel: pulumi.Input<string>;
}
