// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getScimAttributeHeader(args?: GetScimAttributeHeaderArgs, opts?: pulumi.InvokeOptions): Promise<GetScimAttributeHeaderResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getScimAttributeHeader:getScimAttributeHeader", {
        "idpId": args.idpId,
        "idpName": args.idpName,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getScimAttributeHeader.
 */
export interface GetScimAttributeHeaderArgs {
    idpId?: string;
    idpName?: string;
    name?: string;
}

/**
 * A collection of values returned by getScimAttributeHeader.
 */
export interface GetScimAttributeHeaderResult {
    readonly canonicalValues: string[];
    readonly caseSensitive: boolean;
    readonly creationTime: string;
    readonly dataType: string;
    readonly description: string;
    readonly id: string;
    readonly idpId?: string;
    readonly idpName?: string;
    readonly modifiedTime: string;
    readonly modifiedby: string;
    readonly multivalued: boolean;
    readonly mutability: string;
    readonly name?: string;
    readonly required: boolean;
    readonly returned: string;
    readonly schemaUri: string;
    readonly uniqueness: boolean;
    readonly values: string[];
}
export function getScimAttributeHeaderOutput(args?: GetScimAttributeHeaderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScimAttributeHeaderResult> {
    return pulumi.output(args).apply((a: any) => getScimAttributeHeader(a, opts))
}

/**
 * A collection of arguments for invoking getScimAttributeHeader.
 */
export interface GetScimAttributeHeaderOutputArgs {
    idpId?: pulumi.Input<string>;
    idpName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
