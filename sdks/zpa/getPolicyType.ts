// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPolicyType(args?: GetPolicyTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyTypeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getPolicyType:getPolicyType", {
        "id": args.id,
        "microtenantId": args.microtenantId,
        "microtenantName": args.microtenantName,
        "policyType": args.policyType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPolicyType.
 */
export interface GetPolicyTypeArgs {
    id?: string;
    microtenantId?: string;
    microtenantName?: string;
    policyType?: string;
}

/**
 * A collection of values returned by getPolicyType.
 */
export interface GetPolicyTypeResult {
    readonly creationTime: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly id?: string;
    readonly microtenantId?: string;
    readonly microtenantName?: string;
    readonly modifiedBy: string;
    readonly modifiedTime: string;
    readonly name: string;
    readonly policyType: string;
    readonly rules: outputs.GetPolicyTypeRule[];
    readonly sorted: boolean;
}
export function getPolicyTypeOutput(args?: GetPolicyTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyTypeResult> {
    return pulumi.output(args).apply((a: any) => getPolicyType(a, opts))
}

/**
 * A collection of arguments for invoking getPolicyType.
 */
export interface GetPolicyTypeOutputArgs {
    id?: pulumi.Input<string>;
    microtenantId?: pulumi.Input<string>;
    microtenantName?: pulumi.Input<string>;
    policyType?: pulumi.Input<string>;
}
