{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "appConnectorAssistantSchedule.ts",
        "appConnectorGroup.ts",
        "applicationSegment.ts",
        "applicationSegmentBrowserAccess.ts",
        "applicationSegmentInspection.ts",
        "applicationSegmentPra.ts",
        "applicationServer.ts",
        "baCertificate.ts",
        "browserAccess.ts",
        "cloudBrowserIsolationBanner.ts",
        "cloudBrowserIsolationCertificate.ts",
        "cloudBrowserIsolationExternalProfile.ts",
        "config/index.ts",
        "config/vars.ts",
        "emergencyAccessUser.ts",
        "getAccessPolicyClientTypes.ts",
        "getAccessPolicyPlatforms.ts",
        "getAppConnectorAssistantSchedule.ts",
        "getAppConnectorController.ts",
        "getAppConnectorGroup.ts",
        "getApplicationSegment.ts",
        "getApplicationSegmentBrowserAccess.ts",
        "getApplicationSegmentByType.ts",
        "getApplicationSegmentInspection.ts",
        "getApplicationSegmentPra.ts",
        "getApplicationServer.ts",
        "getBaCertificate.ts",
        "getCloudBrowserIsolationBanner.ts",
        "getCloudBrowserIsolationCertificate.ts",
        "getCloudBrowserIsolationExternalProfile.ts",
        "getCloudBrowserIsolationRegion.ts",
        "getCloudBrowserIsolationZpaProfile.ts",
        "getCloudConnectorGroup.ts",
        "getCustomerVersionProfile.ts",
        "getEnrollmentCert.ts",
        "getIdpController.ts",
        "getInspectionAllPredefinedControls.ts",
        "getInspectionCustomControls.ts",
        "getInspectionPredefinedControls.ts",
        "getInspectionProfile.ts",
        "getIsolationProfile.ts",
        "getLssConfigClientTypes.ts",
        "getLssConfigController.ts",
        "getLssConfigLogTypeFormats.ts",
        "getLssConfigStatusCodes.ts",
        "getMachineGroup.ts",
        "getMicrotenantController.ts",
        "getPolicyType.ts",
        "getPostureProfile.ts",
        "getPraApprovalController.ts",
        "getPraConsoleController.ts",
        "getPraCredentialController.ts",
        "getPraPortalController.ts",
        "getProvisioningKey.ts",
        "getSamlAttribute.ts",
        "getScimAttributeHeader.ts",
        "getScimGroups.ts",
        "getSegmentGroup.ts",
        "getServerGroup.ts",
        "getServiceEdgeAssistantSchedule.ts",
        "getServiceEdgeController.ts",
        "getServiceEdgeGroup.ts",
        "getTrustedNetwork.ts",
        "index.ts",
        "inspectionCustomControls.ts",
        "inspectionProfile.ts",
        "lssConfigController.ts",
        "microtenantController.ts",
        "policyAccessRule.ts",
        "policyAccessRuleReorder.ts",
        "policyAccessRuleV2.ts",
        "policyCapabilitiesRule.ts",
        "policyCredentialRule.ts",
        "policyForwardingRule.ts",
        "policyForwardingRuleV2.ts",
        "policyInspectionRule.ts",
        "policyInspectionRuleV2.ts",
        "policyIsolationRule.ts",
        "policyIsolationRuleV2.ts",
        "policyRedirectionRule.ts",
        "policyTimeoutRule.ts",
        "policyTimeoutRuleV2.ts",
        "praApprovalController.ts",
        "praConsoleController.ts",
        "praCredentialController.ts",
        "praPortalController.ts",
        "provider.ts",
        "provisioningKey.ts",
        "segmentGroup.ts",
        "serverGroup.ts",
        "serviceEdgeAssistantSchedule.ts",
        "serviceEdgeGroup.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts"
    ]
}
