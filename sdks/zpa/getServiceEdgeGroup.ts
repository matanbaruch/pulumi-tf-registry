// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceEdgeGroup(args?: GetServiceEdgeGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceEdgeGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getServiceEdgeGroup:getServiceEdgeGroup", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceEdgeGroup.
 */
export interface GetServiceEdgeGroupArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getServiceEdgeGroup.
 */
export interface GetServiceEdgeGroupResult {
    readonly cityCountry: string;
    readonly countryCode: string;
    readonly creationTime: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly geoLocationId: string;
    readonly graceDistanceEnabled: boolean;
    readonly graceDistanceValue: string;
    readonly graceDistanceValueUnit: string;
    readonly id: string;
    readonly isPublic: string;
    readonly latitude: string;
    readonly location: string;
    readonly longitude: string;
    readonly modifiedTime: string;
    readonly modifiedby: string;
    readonly name: string;
    readonly overrideVersionProfile: boolean;
    readonly serviceEdges: outputs.GetServiceEdgeGroupServiceEdge[];
    readonly trustedNetworks: outputs.GetServiceEdgeGroupTrustedNetwork[];
    readonly upgradeDay: string;
    readonly upgradeTimeInSecs: string;
    readonly versionProfileId: string;
    readonly versionProfileName: string;
    readonly versionProfileVisibilityScope: string;
}
export function getServiceEdgeGroupOutput(args?: GetServiceEdgeGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceEdgeGroupResult> {
    return pulumi.output(args).apply((a: any) => getServiceEdgeGroup(a, opts))
}

/**
 * A collection of arguments for invoking getServiceEdgeGroup.
 */
export interface GetServiceEdgeGroupOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
