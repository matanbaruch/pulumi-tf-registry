// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCustomerVersionProfile(args: GetCustomerVersionProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomerVersionProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getCustomerVersionProfile:getCustomerVersionProfile", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCustomerVersionProfile.
 */
export interface GetCustomerVersionProfileArgs {
    name: string;
}

/**
 * A collection of values returned by getCustomerVersionProfile.
 */
export interface GetCustomerVersionProfileResult {
    readonly creationTime: string;
    readonly customScopeCustomerIds: outputs.GetCustomerVersionProfileCustomScopeCustomerId[];
    readonly customerId: string;
    readonly description: string;
    readonly id: string;
    readonly modifiedBy: string;
    readonly modifiedTime: string;
    readonly name: string;
    readonly upgradePriority: string;
    readonly versions: outputs.GetCustomerVersionProfileVersion[];
    readonly visibilityScope: string;
}
export function getCustomerVersionProfileOutput(args: GetCustomerVersionProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomerVersionProfileResult> {
    return pulumi.output(args).apply((a: any) => getCustomerVersionProfile(a, opts))
}

/**
 * A collection of arguments for invoking getCustomerVersionProfile.
 */
export interface GetCustomerVersionProfileOutputArgs {
    name: pulumi.Input<string>;
}
