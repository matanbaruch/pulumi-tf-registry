// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInspectionPredefinedControls(args?: GetInspectionPredefinedControlsArgs, opts?: pulumi.InvokeOptions): Promise<GetInspectionPredefinedControlsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getInspectionPredefinedControls:getInspectionPredefinedControls", {
        "id": args.id,
        "name": args.name,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInspectionPredefinedControls.
 */
export interface GetInspectionPredefinedControlsArgs {
    id?: string;
    name?: string;
    version?: string;
}

/**
 * A collection of values returned by getInspectionPredefinedControls.
 */
export interface GetInspectionPredefinedControlsResult {
    readonly action: string;
    readonly actionValue: string;
    readonly associatedInspectionProfileNames: outputs.GetInspectionPredefinedControlsAssociatedInspectionProfileName[];
    readonly attachment: string;
    readonly controlGroup: string;
    readonly controlNumber: string;
    readonly controlType: string;
    readonly creationTime: string;
    readonly defaultAction: string;
    readonly defaultActionValue: string;
    readonly description: string;
    readonly id: string;
    readonly modifiedTime: string;
    readonly modifiedby: string;
    readonly name: string;
    readonly paranoiaLevel: string;
    readonly protocolType: string;
    readonly severity: string;
    readonly version?: string;
}
export function getInspectionPredefinedControlsOutput(args?: GetInspectionPredefinedControlsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInspectionPredefinedControlsResult> {
    return pulumi.output(args).apply((a: any) => getInspectionPredefinedControls(a, opts))
}

/**
 * A collection of arguments for invoking getInspectionPredefinedControls.
 */
export interface GetInspectionPredefinedControlsOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}
