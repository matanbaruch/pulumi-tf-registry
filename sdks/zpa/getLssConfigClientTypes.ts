// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLssConfigClientTypes(args?: GetLssConfigClientTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetLssConfigClientTypesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getLssConfigClientTypes:getLssConfigClientTypes", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLssConfigClientTypes.
 */
export interface GetLssConfigClientTypesArgs {
    id?: string;
}

/**
 * A collection of values returned by getLssConfigClientTypes.
 */
export interface GetLssConfigClientTypesResult {
    readonly id: string;
    readonly zpnClientTypeEdgeConnector: string;
    readonly zpnClientTypeExporter: string;
    readonly zpnClientTypeIpAnchoring: string;
    readonly zpnClientTypeMachineTunnel: string;
    readonly zpnClientTypeSlogger: string;
    readonly zpnClientTypeZapp: string;
}
export function getLssConfigClientTypesOutput(args?: GetLssConfigClientTypesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLssConfigClientTypesResult> {
    return pulumi.output(args).apply((a: any) => getLssConfigClientTypes(a, opts))
}

/**
 * A collection of arguments for invoking getLssConfigClientTypes.
 */
export interface GetLssConfigClientTypesOutputArgs {
    id?: pulumi.Input<string>;
}
