// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLssConfigLogTypeFormats(args: GetLssConfigLogTypeFormatsArgs, opts?: pulumi.InvokeOptions): Promise<GetLssConfigLogTypeFormatsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getLssConfigLogTypeFormats:getLssConfigLogTypeFormats", {
        "id": args.id,
        "logType": args.logType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLssConfigLogTypeFormats.
 */
export interface GetLssConfigLogTypeFormatsArgs {
    id?: string;
    logType: string;
}

/**
 * A collection of values returned by getLssConfigLogTypeFormats.
 */
export interface GetLssConfigLogTypeFormatsResult {
    readonly csv: string;
    readonly id: string;
    readonly json: string;
    readonly logType: string;
    readonly tsv: string;
}
export function getLssConfigLogTypeFormatsOutput(args: GetLssConfigLogTypeFormatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLssConfigLogTypeFormatsResult> {
    return pulumi.output(args).apply((a: any) => getLssConfigLogTypeFormats(a, opts))
}

/**
 * A collection of arguments for invoking getLssConfigLogTypeFormats.
 */
export interface GetLssConfigLogTypeFormatsOutputArgs {
    id?: pulumi.Input<string>;
    logType: pulumi.Input<string>;
}
