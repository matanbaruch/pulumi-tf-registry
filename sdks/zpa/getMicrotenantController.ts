// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMicrotenantController(args?: GetMicrotenantControllerArgs, opts?: pulumi.InvokeOptions): Promise<GetMicrotenantControllerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getMicrotenantController:getMicrotenantController", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMicrotenantController.
 */
export interface GetMicrotenantControllerArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getMicrotenantController.
 */
export interface GetMicrotenantControllerResult {
    readonly creationTime: string;
    readonly criteriaAttribute: string;
    readonly criteriaAttributeValues: string[];
    readonly description: string;
    readonly enabled: boolean;
    readonly id?: string;
    readonly modifiedBy: string;
    readonly modifiedTime: string;
    readonly name?: string;
    readonly operator: string;
    readonly priority: string;
    readonly privilegedApprovalsEnabled: boolean;
    readonly roles: outputs.GetMicrotenantControllerRole[];
    readonly users: outputs.GetMicrotenantControllerUser[];
}
export function getMicrotenantControllerOutput(args?: GetMicrotenantControllerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMicrotenantControllerResult> {
    return pulumi.output(args).apply((a: any) => getMicrotenantController(a, opts))
}

/**
 * A collection of arguments for invoking getMicrotenantController.
 */
export interface GetMicrotenantControllerOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
