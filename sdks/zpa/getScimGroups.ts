// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getScimGroups(args?: GetScimGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetScimGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getScimGroups:getScimGroups", {
        "id": args.id,
        "idpId": args.idpId,
        "idpName": args.idpName,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getScimGroups.
 */
export interface GetScimGroupsArgs {
    id?: string;
    idpId?: number;
    idpName?: string;
    name?: string;
}

/**
 * A collection of values returned by getScimGroups.
 */
export interface GetScimGroupsResult {
    readonly creationTime: number;
    readonly id?: string;
    readonly idpGroupId: string;
    readonly idpId?: number;
    readonly idpName?: string;
    readonly modifiedTime: number;
    readonly name?: string;
}
export function getScimGroupsOutput(args?: GetScimGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScimGroupsResult> {
    return pulumi.output(args).apply((a: any) => getScimGroups(a, opts))
}

/**
 * A collection of arguments for invoking getScimGroups.
 */
export interface GetScimGroupsOutputArgs {
    id?: pulumi.Input<string>;
    idpId?: pulumi.Input<number>;
    idpName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
