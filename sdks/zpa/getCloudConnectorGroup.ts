// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudConnectorGroup(args?: GetCloudConnectorGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudConnectorGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getCloudConnectorGroup:getCloudConnectorGroup", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudConnectorGroup.
 */
export interface GetCloudConnectorGroupArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getCloudConnectorGroup.
 */
export interface GetCloudConnectorGroupResult {
    readonly cloudConnectors: outputs.GetCloudConnectorGroupCloudConnector[];
    readonly creationTime: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly geolocationId: string;
    readonly id?: string;
    readonly modifiedTime: string;
    readonly modifiedby: string;
    readonly name?: string;
    readonly ziaCloud: string;
    readonly ziaOrgId: string;
}
export function getCloudConnectorGroupOutput(args?: GetCloudConnectorGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudConnectorGroupResult> {
    return pulumi.output(args).apply((a: any) => getCloudConnectorGroup(a, opts))
}

/**
 * A collection of arguments for invoking getCloudConnectorGroup.
 */
export interface GetCloudConnectorGroupOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
