// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AppConnectorAssistantSchedule extends pulumi.CustomResource {
    /**
     * Get an existing AppConnectorAssistantSchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppConnectorAssistantScheduleState, opts?: pulumi.CustomResourceOptions): AppConnectorAssistantSchedule {
        return new AppConnectorAssistantSchedule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zpa:index/appConnectorAssistantSchedule:AppConnectorAssistantSchedule';

    /**
     * Returns true if the given object is an instance of AppConnectorAssistantSchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppConnectorAssistantSchedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppConnectorAssistantSchedule.__pulumiType;
    }

    public readonly customerId!: pulumi.Output<string>;
    public readonly deleteDisabled!: pulumi.Output<boolean | undefined>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public readonly frequency!: pulumi.Output<string | undefined>;
    public readonly frequencyInterval!: pulumi.Output<string | undefined>;

    /**
     * Create a AppConnectorAssistantSchedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppConnectorAssistantScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppConnectorAssistantScheduleArgs | AppConnectorAssistantScheduleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppConnectorAssistantScheduleState | undefined;
            resourceInputs["customerId"] = state ? state.customerId : undefined;
            resourceInputs["deleteDisabled"] = state ? state.deleteDisabled : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["frequency"] = state ? state.frequency : undefined;
            resourceInputs["frequencyInterval"] = state ? state.frequencyInterval : undefined;
        } else {
            const args = argsOrState as AppConnectorAssistantScheduleArgs | undefined;
            resourceInputs["customerId"] = args ? args.customerId : undefined;
            resourceInputs["deleteDisabled"] = args ? args.deleteDisabled : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["frequency"] = args ? args.frequency : undefined;
            resourceInputs["frequencyInterval"] = args ? args.frequencyInterval : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppConnectorAssistantSchedule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AppConnectorAssistantSchedule resources.
 */
export interface AppConnectorAssistantScheduleState {
    customerId?: pulumi.Input<string>;
    deleteDisabled?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    frequency?: pulumi.Input<string>;
    frequencyInterval?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppConnectorAssistantSchedule resource.
 */
export interface AppConnectorAssistantScheduleArgs {
    customerId?: pulumi.Input<string>;
    deleteDisabled?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    frequency?: pulumi.Input<string>;
    frequencyInterval?: pulumi.Input<string>;
}
