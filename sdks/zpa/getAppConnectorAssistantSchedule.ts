// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAppConnectorAssistantSchedule(args?: GetAppConnectorAssistantScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetAppConnectorAssistantScheduleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getAppConnectorAssistantSchedule:getAppConnectorAssistantSchedule", {
        "customerId": args.customerId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppConnectorAssistantSchedule.
 */
export interface GetAppConnectorAssistantScheduleArgs {
    customerId?: string;
    id?: string;
}

/**
 * A collection of values returned by getAppConnectorAssistantSchedule.
 */
export interface GetAppConnectorAssistantScheduleResult {
    readonly customerId?: string;
    readonly deleteDisabled: boolean;
    readonly enabled: boolean;
    readonly frequency: string;
    readonly frequencyInterval: string;
    readonly id?: string;
}
export function getAppConnectorAssistantScheduleOutput(args?: GetAppConnectorAssistantScheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppConnectorAssistantScheduleResult> {
    return pulumi.output(args).apply((a: any) => getAppConnectorAssistantSchedule(a, opts))
}

/**
 * A collection of arguments for invoking getAppConnectorAssistantSchedule.
 */
export interface GetAppConnectorAssistantScheduleOutputArgs {
    customerId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
