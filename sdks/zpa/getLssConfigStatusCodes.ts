// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLssConfigStatusCodes(args?: GetLssConfigStatusCodesArgs, opts?: pulumi.InvokeOptions): Promise<GetLssConfigStatusCodesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getLssConfigStatusCodes:getLssConfigStatusCodes", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLssConfigStatusCodes.
 */
export interface GetLssConfigStatusCodesArgs {
    id?: string;
}

/**
 * A collection of values returned by getLssConfigStatusCodes.
 */
export interface GetLssConfigStatusCodesResult {
    readonly id: string;
    readonly zpnAstAuthLog: {[key: string]: string};
    readonly zpnAuthLog: {[key: string]: string};
    readonly zpnSysAuthLog: {[key: string]: string};
    readonly zpnTransLog: {[key: string]: string};
}
export function getLssConfigStatusCodesOutput(args?: GetLssConfigStatusCodesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLssConfigStatusCodesResult> {
    return pulumi.output(args).apply((a: any) => getLssConfigStatusCodes(a, opts))
}

/**
 * A collection of arguments for invoking getLssConfigStatusCodes.
 */
export interface GetLssConfigStatusCodesOutputArgs {
    id?: pulumi.Input<string>;
}
