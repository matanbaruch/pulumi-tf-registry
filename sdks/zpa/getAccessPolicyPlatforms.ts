// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAccessPolicyPlatforms(args?: GetAccessPolicyPlatformsArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessPolicyPlatformsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zpa:index/getAccessPolicyPlatforms:getAccessPolicyPlatforms", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccessPolicyPlatforms.
 */
export interface GetAccessPolicyPlatformsArgs {
    id?: string;
}

/**
 * A collection of values returned by getAccessPolicyPlatforms.
 */
export interface GetAccessPolicyPlatformsResult {
    readonly android: string;
    readonly id: string;
    readonly ios: string;
    readonly linux: string;
    readonly mac: string;
    readonly windows: string;
}
export function getAccessPolicyPlatformsOutput(args?: GetAccessPolicyPlatformsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessPolicyPlatformsResult> {
    return pulumi.output(args).apply((a: any) => getAccessPolicyPlatforms(a, opts))
}

/**
 * A collection of arguments for invoking getAccessPolicyPlatforms.
 */
export interface GetAccessPolicyPlatformsOutputArgs {
    id?: pulumi.Input<string>;
}
