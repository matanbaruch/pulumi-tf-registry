// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBuildConfiguration(args: GetBuildConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetBuildConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("teamcity:index/getBuildConfiguration:getBuildConfiguration", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBuildConfiguration.
 */
export interface GetBuildConfigurationArgs {
    id: string;
}

/**
 * A collection of values returned by getBuildConfiguration.
 */
export interface GetBuildConfigurationResult {
    readonly id: string;
    readonly name: string;
}
export function getBuildConfigurationOutput(args: GetBuildConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBuildConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getBuildConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getBuildConfiguration.
 */
export interface GetBuildConfigurationOutputArgs {
    id: pulumi.Input<string>;
}
