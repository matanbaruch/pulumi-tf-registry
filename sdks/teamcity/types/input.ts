// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AuthSettingsModules {
    basicHttp?: pulumi.Input<inputs.AuthSettingsModulesBasicHttp>;
    builtIn?: pulumi.Input<inputs.AuthSettingsModulesBuiltIn>;
    github?: pulumi.Input<inputs.AuthSettingsModulesGithub>;
    githubApp?: pulumi.Input<inputs.AuthSettingsModulesGithubApp>;
    githubEnterprise?: pulumi.Input<inputs.AuthSettingsModulesGithubEnterprise>;
    google?: pulumi.Input<inputs.AuthSettingsModulesGoogle>;
    jetbrainsSpace?: pulumi.Input<inputs.AuthSettingsModulesJetbrainsSpace>;
    ldap?: pulumi.Input<inputs.AuthSettingsModulesLdap>;
    token: pulumi.Input<inputs.AuthSettingsModulesToken>;
}

export interface AuthSettingsModulesBasicHttp {
}

export interface AuthSettingsModulesBuiltIn {
    changePasswords: pulumi.Input<boolean>;
    registration: pulumi.Input<boolean>;
    resetPasswords?: pulumi.Input<boolean>;
}

export interface AuthSettingsModulesGithub {
    createNewUsers: pulumi.Input<boolean>;
    organizations: pulumi.Input<string>;
}

export interface AuthSettingsModulesGithubApp {
    createNewUsers: pulumi.Input<boolean>;
    organizations: pulumi.Input<string>;
}

export interface AuthSettingsModulesGithubEnterprise {
    createNewUsers: pulumi.Input<boolean>;
    organizations: pulumi.Input<string>;
}

export interface AuthSettingsModulesGoogle {
    allDomains: pulumi.Input<boolean>;
    createNewUsers: pulumi.Input<boolean>;
    domains?: pulumi.Input<string>;
}

export interface AuthSettingsModulesJetbrainsSpace {
    createNewUsers: pulumi.Input<boolean>;
}

export interface AuthSettingsModulesLdap {
    createNewUsers: pulumi.Input<boolean>;
}

export interface AuthSettingsModulesToken {
}

export interface CleanupSettingsCron {
    day: pulumi.Input<string>;
    dayWeek: pulumi.Input<string>;
    hour: pulumi.Input<string>;
    minute: pulumi.Input<string>;
    month: pulumi.Input<string>;
}

export interface CleanupSettingsDaily {
    hour: pulumi.Input<number>;
    minute: pulumi.Input<number>;
}

export interface ConnectionGithubApp {
    appId: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    ownerUrl: pulumi.Input<string>;
    privateKey: pulumi.Input<string>;
    webhookSecret: pulumi.Input<string>;
}

export interface GlobalSettingsArtifactsDomainIsolation {
    artifactsUrl?: pulumi.Input<string>;
    /**
     * Enabled by default, set false if it needs to be disabled
     */
    enabled?: pulumi.Input<boolean>;
}

export interface GlobalSettingsEncryption {
    key: pulumi.Input<string>;
}

export interface GroupRole {
    global?: pulumi.Input<boolean>;
    id: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}

export interface UserRole {
    global?: pulumi.Input<boolean>;
    id: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}

export interface VcsrootGit {
    authMethod?: pulumi.Input<string>;
    branch: pulumi.Input<string>;
    branchSpec?: pulumi.Input<string>;
    checkoutPolicy?: pulumi.Input<string>;
    cleanFilesPolicy?: pulumi.Input<string>;
    cleanPolicy?: pulumi.Input<string>;
    convertCrlf?: pulumi.Input<boolean>;
    ignoreKnownHosts?: pulumi.Input<boolean>;
    passphrase?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    pathToGit?: pulumi.Input<string>;
    privateKeyPath?: pulumi.Input<string>;
    pushUrl?: pulumi.Input<string>;
    submodules?: pulumi.Input<string>;
    tagsAsBranches?: pulumi.Input<boolean>;
    uploadedKey?: pulumi.Input<string>;
    url: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    usernameForTags?: pulumi.Input<string>;
    usernameStyle?: pulumi.Input<string>;
}
