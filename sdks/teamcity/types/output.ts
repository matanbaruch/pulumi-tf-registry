// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AuthSettingsModules {
    basicHttp?: outputs.AuthSettingsModulesBasicHttp;
    builtIn?: outputs.AuthSettingsModulesBuiltIn;
    github?: outputs.AuthSettingsModulesGithub;
    githubApp?: outputs.AuthSettingsModulesGithubApp;
    githubEnterprise?: outputs.AuthSettingsModulesGithubEnterprise;
    google?: outputs.AuthSettingsModulesGoogle;
    jetbrainsSpace?: outputs.AuthSettingsModulesJetbrainsSpace;
    ldap?: outputs.AuthSettingsModulesLdap;
    token: outputs.AuthSettingsModulesToken;
}

export interface AuthSettingsModulesBasicHttp {
}

export interface AuthSettingsModulesBuiltIn {
    changePasswords: boolean;
    registration: boolean;
    resetPasswords?: boolean;
}

export interface AuthSettingsModulesGithub {
    createNewUsers: boolean;
    organizations: string;
}

export interface AuthSettingsModulesGithubApp {
    createNewUsers: boolean;
    organizations: string;
}

export interface AuthSettingsModulesGithubEnterprise {
    createNewUsers: boolean;
    organizations: string;
}

export interface AuthSettingsModulesGoogle {
    allDomains: boolean;
    createNewUsers: boolean;
    domains?: string;
}

export interface AuthSettingsModulesJetbrainsSpace {
    createNewUsers: boolean;
}

export interface AuthSettingsModulesLdap {
    createNewUsers: boolean;
}

export interface AuthSettingsModulesToken {
}

export interface CleanupSettingsCron {
    day: string;
    dayWeek: string;
    hour: string;
    minute: string;
    month: string;
}

export interface CleanupSettingsDaily {
    hour: number;
    minute: number;
}

export interface ConnectionGithubApp {
    appId: string;
    clientId: string;
    clientSecret: string;
    displayName: string;
    ownerUrl: string;
    privateKey: string;
    webhookSecret: string;
}

export interface GlobalSettingsArtifactsDomainIsolation {
    artifactsUrl: string;
    /**
     * Enabled by default, set false if it needs to be disabled
     */
    enabled: boolean;
}

export interface GlobalSettingsEncryption {
    key: string;
}

export interface GroupRole {
    global?: boolean;
    id: string;
    project?: string;
}

export interface UserRole {
    global?: boolean;
    id: string;
    project?: string;
}

export interface VcsrootGit {
    authMethod?: string;
    branch: string;
    branchSpec?: string;
    checkoutPolicy: string;
    cleanFilesPolicy: string;
    cleanPolicy: string;
    convertCrlf?: boolean;
    ignoreKnownHosts: boolean;
    passphrase?: string;
    password?: string;
    pathToGit?: string;
    privateKeyPath?: string;
    pushUrl?: string;
    submodules: string;
    tagsAsBranches?: boolean;
    uploadedKey?: string;
    url: string;
    username?: string;
    usernameForTags?: string;
    usernameStyle: string;
}

