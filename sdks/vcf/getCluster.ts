// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCluster(args: GetClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcf:index/getCluster:getCluster", {
        "clusterId": args.clusterId,
        "id": args.id,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCluster.
 */
export interface GetClusterArgs {
    clusterId: string;
    id?: string;
    timeouts?: inputs.GetClusterTimeouts;
}

/**
 * A collection of values returned by getCluster.
 */
export interface GetClusterResult {
    readonly clusterId: string;
    readonly domainId: string;
    readonly hosts: outputs.GetClusterHost[];
    readonly id: string;
    readonly isDefault: boolean;
    readonly isStretched: boolean;
    readonly name: string;
    readonly primaryDatastoreName: string;
    readonly primaryDatastoreType: string;
    readonly timeouts?: outputs.GetClusterTimeouts;
    readonly vds: outputs.GetClusterVd[];
}
export function getClusterOutput(args: GetClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterResult> {
    return pulumi.output(args).apply((a: any) => getCluster(a, opts))
}

/**
 * A collection of arguments for invoking getCluster.
 */
export interface GetClusterOutputArgs {
    clusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetClusterTimeoutsArgs>;
}
