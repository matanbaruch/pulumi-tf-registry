// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("vcf");

/**
 * If set, VMware VCF client will permit unverifiable TLS certificates.
 */
export declare const allowUnverifiedTls: boolean | undefined;
Object.defineProperty(exports, "allowUnverifiedTls", {
    get() {
        return __config.getObject<boolean>("allowUnverifiedTls");
    },
    enumerable: true,
});

/**
 * Fully qualified domain name or IP address of the CloudBuilder
 */
export declare const cloudBuilderHost: string | undefined;
Object.defineProperty(exports, "cloudBuilderHost", {
    get() {
        return __config.get("cloudBuilderHost");
    },
    enumerable: true,
});

/**
 * Password to authenticate to CloudBuilder
 */
export declare const cloudBuilderPassword: string | undefined;
Object.defineProperty(exports, "cloudBuilderPassword", {
    get() {
        return __config.get("cloudBuilderPassword");
    },
    enumerable: true,
});

/**
 * Username to authenticate to CloudBuilder
 */
export declare const cloudBuilderUsername: string | undefined;
Object.defineProperty(exports, "cloudBuilderUsername", {
    get() {
        return __config.get("cloudBuilderUsername");
    },
    enumerable: true,
});

/**
 * Fully qualified domain name or IP address of the SDDC Manager
 */
export declare const sddcManagerHost: string | undefined;
Object.defineProperty(exports, "sddcManagerHost", {
    get() {
        return __config.get("sddcManagerHost");
    },
    enumerable: true,
});

/**
 * Password to authenticate to SDDC Manager
 */
export declare const sddcManagerPassword: string | undefined;
Object.defineProperty(exports, "sddcManagerPassword", {
    get() {
        return __config.get("sddcManagerPassword");
    },
    enumerable: true,
});

/**
 * Username to authenticate to SDDC Manager
 */
export declare const sddcManagerUsername: string | undefined;
Object.defineProperty(exports, "sddcManagerUsername", {
    get() {
        return __config.get("sddcManagerUsername");
    },
    enumerable: true,
});

