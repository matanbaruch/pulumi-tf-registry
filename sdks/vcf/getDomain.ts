// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDomain(args: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vcf:index/getDomain:getDomain", {
        "domainId": args.domainId,
        "id": args.id,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainArgs {
    domainId: string;
    id?: string;
    timeouts?: inputs.GetDomainTimeouts;
}

/**
 * A collection of values returned by getDomain.
 */
export interface GetDomainResult {
    readonly clusters: outputs.GetDomainCluster[];
    readonly domainId: string;
    readonly id: string;
    readonly isManagementSsoDomain: boolean;
    readonly name: string;
    readonly nsxConfigurations: outputs.GetDomainNsxConfiguration[];
    readonly ssoId: string;
    readonly ssoName: string;
    readonly status: string;
    readonly timeouts?: outputs.GetDomainTimeouts;
    readonly type: string;
    readonly vcenterConfigurations: outputs.GetDomainVcenterConfiguration[];
}
export function getDomainOutput(args: GetDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainResult> {
    return pulumi.output(args).apply((a: any) => getDomain(a, opts))
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainOutputArgs {
    domainId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetDomainTimeoutsArgs>;
}
