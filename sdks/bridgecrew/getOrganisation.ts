// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrganisation(args?: GetOrganisationArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganisationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bridgecrew:index/getOrganisation:getOrganisation", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrganisation.
 */
export interface GetOrganisationArgs {
    id?: string;
}

/**
 * A collection of values returned by getOrganisation.
 */
export interface GetOrganisationResult {
    readonly id: string;
    readonly organisation: string;
}
export function getOrganisationOutput(args?: GetOrganisationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganisationResult> {
    return pulumi.output(args).apply((a: any) => getOrganisation(a, opts))
}

/**
 * A collection of arguments for invoking getOrganisation.
 */
export interface GetOrganisationOutputArgs {
    id?: pulumi.Input<string>;
}
