// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAuthors(args: GetAuthorsArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthorsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bridgecrew:index/getAuthors:getAuthors", {
        "fullreponame": args.fullreponame,
        "id": args.id,
        "sourcetype": args.sourcetype,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAuthors.
 */
export interface GetAuthorsArgs {
    fullreponame: string;
    id?: string;
    sourcetype: string;
}

/**
 * A collection of values returned by getAuthors.
 */
export interface GetAuthorsResult {
    readonly authors: string[];
    readonly fullreponame: string;
    readonly id: string;
    readonly sourcetype: string;
}
export function getAuthorsOutput(args: GetAuthorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthorsResult> {
    return pulumi.output(args).apply((a: any) => getAuthors(a, opts))
}

/**
 * A collection of arguments for invoking getAuthors.
 */
export interface GetAuthorsOutputArgs {
    fullreponame: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    sourcetype: pulumi.Input<string>;
}
