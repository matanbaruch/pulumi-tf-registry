// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIncidentsInfo(args?: GetIncidentsInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetIncidentsInfoResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bridgecrew:index/getIncidentsInfo:getIncidentsInfo", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIncidentsInfo.
 */
export interface GetIncidentsInfoArgs {
    id?: string;
}

/**
 * A collection of values returned by getIncidentsInfo.
 */
export interface GetIncidentsInfoResult {
    readonly encryptions: outputs.GetIncidentsInfoEncryption[];
    readonly id: string;
    readonly reachabilities: outputs.GetIncidentsInfoReachability[];
    readonly statuses: outputs.GetIncidentsInfoStatus[];
    readonly total: number;
    readonly traceds: outputs.GetIncidentsInfoTraced[];
}
export function getIncidentsInfoOutput(args?: GetIncidentsInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIncidentsInfoResult> {
    return pulumi.output(args).apply((a: any) => getIncidentsInfo(a, opts))
}

/**
 * A collection of arguments for invoking getIncidentsInfo.
 */
export interface GetIncidentsInfoOutputArgs {
    id?: pulumi.Input<string>;
}
