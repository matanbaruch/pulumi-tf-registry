// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMappings(args?: GetMappingsArgs, opts?: pulumi.InvokeOptions): Promise<GetMappingsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bridgecrew:index/getMappings:getMappings", {
        "guidelines": args.guidelines,
        "id": args.id,
        "idmappings": args.idmappings,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMappings.
 */
export interface GetMappingsArgs {
    guidelines?: inputs.GetMappingsGuideline[];
    id?: string;
    idmappings?: inputs.GetMappingsIdmapping[];
}

/**
 * A collection of values returned by getMappings.
 */
export interface GetMappingsResult {
    readonly guidelines?: outputs.GetMappingsGuideline[];
    readonly id: string;
    readonly idmappings?: outputs.GetMappingsIdmapping[];
}
export function getMappingsOutput(args?: GetMappingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMappingsResult> {
    return pulumi.output(args).apply((a: any) => getMappings(a, opts))
}

/**
 * A collection of arguments for invoking getMappings.
 */
export interface GetMappingsOutputArgs {
    guidelines?: pulumi.Input<pulumi.Input<inputs.GetMappingsGuidelineArgs>[]>;
    id?: pulumi.Input<string>;
    idmappings?: pulumi.Input<pulumi.Input<inputs.GetMappingsIdmappingArgs>[]>;
}
