// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getJustifications(args: GetJustificationsArgs, opts?: pulumi.InvokeOptions): Promise<GetJustificationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bridgecrew:index/getJustifications:getJustifications", {
        "accounts": args.accounts,
        "id": args.id,
        "policyid": args.policyid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getJustifications.
 */
export interface GetJustificationsArgs {
    accounts: string[];
    id?: string;
    policyid: string;
}

/**
 * A collection of values returned by getJustifications.
 */
export interface GetJustificationsResult {
    readonly accounts: string[];
    readonly id: string;
    readonly justifications: outputs.GetJustificationsJustification[];
    readonly policyid: string;
}
export function getJustificationsOutput(args: GetJustificationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJustificationsResult> {
    return pulumi.output(args).apply((a: any) => getJustifications(a, opts))
}

/**
 * A collection of arguments for invoking getJustifications.
 */
export interface GetJustificationsOutputArgs {
    accounts: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    policyid: pulumi.Input<string>;
}
