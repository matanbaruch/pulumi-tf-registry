// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSuppressions(args?: GetSuppressionsArgs, opts?: pulumi.InvokeOptions): Promise<GetSuppressionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bridgecrew:index/getSuppressions:getSuppressions", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSuppressions.
 */
export interface GetSuppressionsArgs {
    id?: string;
}

/**
 * A collection of values returned by getSuppressions.
 */
export interface GetSuppressionsResult {
    readonly id: string;
    readonly suppressions: outputs.GetSuppressionsSuppression[];
}
export function getSuppressionsOutput(args?: GetSuppressionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSuppressionsResult> {
    return pulumi.output(args).apply((a: any) => getSuppressions(a, opts))
}

/**
 * A collection of arguments for invoking getSuppressions.
 */
export interface GetSuppressionsOutputArgs {
    id?: pulumi.Input<string>;
}
