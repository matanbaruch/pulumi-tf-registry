// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EnforcementRule extends pulumi.CustomResource {
    /**
     * Get an existing EnforcementRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnforcementRuleState, opts?: pulumi.CustomResourceOptions): EnforcementRule {
        return new EnforcementRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bridgecrew:index/enforcementRule:EnforcementRule';

    /**
     * Returns true if the given object is an instance of EnforcementRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnforcementRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnforcementRule.__pulumiType;
    }

    public readonly codeCategories!: pulumi.Output<outputs.EnforcementRuleCodeCategory[]>;
    /**
     * Record created by
     */
    public /*out*/ readonly createdby!: pulumi.Output<string>;
    /**
     * Record created date
     */
    public /*out*/ readonly creationdate!: pulumi.Output<string>;
    /**
     * Record created modified
     */
    public /*out*/ readonly lastUpdated!: pulumi.Output<string>;
    /**
     * Name of the exception rule
     */
    public readonly name!: pulumi.Output<string>;
    public readonly repositories!: pulumi.Output<outputs.EnforcementRuleRepository[]>;

    /**
     * Create a EnforcementRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnforcementRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnforcementRuleArgs | EnforcementRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnforcementRuleState | undefined;
            resourceInputs["codeCategories"] = state ? state.codeCategories : undefined;
            resourceInputs["createdby"] = state ? state.createdby : undefined;
            resourceInputs["creationdate"] = state ? state.creationdate : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["repositories"] = state ? state.repositories : undefined;
        } else {
            const args = argsOrState as EnforcementRuleArgs | undefined;
            if ((!args || args.codeCategories === undefined) && !opts.urn) {
                throw new Error("Missing required property 'codeCategories'");
            }
            if ((!args || args.repositories === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repositories'");
            }
            resourceInputs["codeCategories"] = args ? args.codeCategories : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["repositories"] = args ? args.repositories : undefined;
            resourceInputs["createdby"] = undefined /*out*/;
            resourceInputs["creationdate"] = undefined /*out*/;
            resourceInputs["lastUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EnforcementRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EnforcementRule resources.
 */
export interface EnforcementRuleState {
    codeCategories?: pulumi.Input<pulumi.Input<inputs.EnforcementRuleCodeCategory>[]>;
    /**
     * Record created by
     */
    createdby?: pulumi.Input<string>;
    /**
     * Record created date
     */
    creationdate?: pulumi.Input<string>;
    /**
     * Record created modified
     */
    lastUpdated?: pulumi.Input<string>;
    /**
     * Name of the exception rule
     */
    name?: pulumi.Input<string>;
    repositories?: pulumi.Input<pulumi.Input<inputs.EnforcementRuleRepository>[]>;
}

/**
 * The set of arguments for constructing a EnforcementRule resource.
 */
export interface EnforcementRuleArgs {
    codeCategories: pulumi.Input<pulumi.Input<inputs.EnforcementRuleCodeCategory>[]>;
    /**
     * Name of the exception rule
     */
    name?: pulumi.Input<string>;
    repositories: pulumi.Input<pulumi.Input<inputs.EnforcementRuleRepository>[]>;
}
