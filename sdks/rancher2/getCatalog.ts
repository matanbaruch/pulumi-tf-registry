// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCatalog(args: GetCatalogArgs, opts?: pulumi.InvokeOptions): Promise<GetCatalogResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rancher2:index/getCatalog:getCatalog", {
        "id": args.id,
        "name": args.name,
        "scope": args.scope,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCatalog.
 */
export interface GetCatalogArgs {
    id?: string;
    name: string;
    scope?: string;
}

/**
 * A collection of values returned by getCatalog.
 */
export interface GetCatalogResult {
    readonly annotations: {[key: string]: string};
    readonly branch: string;
    readonly clusterId: string;
    readonly description: string;
    readonly id: string;
    readonly kind: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly password: string;
    readonly projectId: string;
    readonly scope?: string;
    readonly url: string;
    readonly username: string;
    readonly version: string;
}
export function getCatalogOutput(args: GetCatalogOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCatalogResult> {
    return pulumi.output(args).apply((a: any) => getCatalog(a, opts))
}

/**
 * A collection of arguments for invoking getCatalog.
 */
export interface GetCatalogOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
}
