// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApp(args: GetAppArgs, opts?: pulumi.InvokeOptions): Promise<GetAppResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rancher2:index/getApp:getApp", {
        "annotations": args.annotations,
        "id": args.id,
        "name": args.name,
        "projectId": args.projectId,
        "targetNamespace": args.targetNamespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApp.
 */
export interface GetAppArgs {
    annotations?: {[key: string]: string};
    id?: string;
    name: string;
    projectId: string;
    targetNamespace?: string;
}

/**
 * A collection of values returned by getApp.
 */
export interface GetAppResult {
    readonly annotations: {[key: string]: string};
    readonly answers: {[key: string]: string};
    readonly catalogName: string;
    readonly description: string;
    readonly externalId: string;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly projectId: string;
    readonly revisionId: string;
    readonly targetNamespace: string;
    readonly templateName: string;
    readonly templateVersion: string;
    readonly valuesYaml: string;
}
export function getAppOutput(args: GetAppOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppResult> {
    return pulumi.output(args).apply((a: any) => getApp(a, opts))
}

/**
 * A collection of arguments for invoking getApp.
 */
export interface GetAppOutputArgs {
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    targetNamespace?: pulumi.Input<string>;
}
