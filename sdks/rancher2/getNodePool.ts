// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNodePool(args: GetNodePoolArgs, opts?: pulumi.InvokeOptions): Promise<GetNodePoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rancher2:index/getNodePool:getNodePool", {
        "clusterId": args.clusterId,
        "id": args.id,
        "name": args.name,
        "nodeTemplateId": args.nodeTemplateId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNodePool.
 */
export interface GetNodePoolArgs {
    clusterId: string;
    id?: string;
    name: string;
    nodeTemplateId?: string;
}

/**
 * A collection of values returned by getNodePool.
 */
export interface GetNodePoolResult {
    readonly annotations: {[key: string]: string};
    readonly clusterId: string;
    readonly controlPlane: boolean;
    readonly deleteNotReadyAfterSecs: number;
    readonly etcd: boolean;
    readonly hostnamePrefix: string;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly nodeTaints: outputs.GetNodePoolNodeTaint[];
    readonly nodeTemplateId: string;
    readonly quantity: number;
    readonly worker: boolean;
}
export function getNodePoolOutput(args: GetNodePoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNodePoolResult> {
    return pulumi.output(args).apply((a: any) => getNodePool(a, opts))
}

/**
 * A collection of arguments for invoking getNodePool.
 */
export interface GetNodePoolOutputArgs {
    clusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nodeTemplateId?: pulumi.Input<string>;
}
