// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getClusterAlertGroup(args: GetClusterAlertGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterAlertGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rancher2:index/getClusterAlertGroup:getClusterAlertGroup", {
        "clusterId": args.clusterId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getClusterAlertGroup.
 */
export interface GetClusterAlertGroupArgs {
    clusterId: string;
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getClusterAlertGroup.
 */
export interface GetClusterAlertGroupResult {
    readonly annotations: {[key: string]: string};
    readonly clusterId: string;
    readonly description: string;
    readonly groupIntervalSeconds: number;
    readonly groupWaitSeconds: number;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly recipients: outputs.GetClusterAlertGroupRecipient[];
    readonly repeatIntervalSeconds: number;
}
export function getClusterAlertGroupOutput(args: GetClusterAlertGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterAlertGroupResult> {
    return pulumi.output(args).apply((a: any) => getClusterAlertGroup(a, opts))
}

/**
 * A collection of arguments for invoking getClusterAlertGroup.
 */
export interface GetClusterAlertGroupOutputArgs {
    clusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
