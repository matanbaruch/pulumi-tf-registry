// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNodeTemplate(args: GetNodeTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetNodeTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rancher2:index/getNodeTemplate:getNodeTemplate", {
        "id": args.id,
        "name": args.name,
        "useInternalIpAddress": args.useInternalIpAddress,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNodeTemplate.
 */
export interface GetNodeTemplateArgs {
    id?: string;
    name: string;
    useInternalIpAddress?: boolean;
}

/**
 * A collection of values returned by getNodeTemplate.
 */
export interface GetNodeTemplateResult {
    readonly annotations: {[key: string]: string};
    readonly cloudCredentialId: string;
    readonly description: string;
    readonly driver: string;
    readonly engineEnv: {[key: string]: string};
    readonly engineInsecureRegistries: string[];
    readonly engineInstallUrl: string;
    readonly engineLabel: {[key: string]: string};
    readonly engineOpt: {[key: string]: string};
    readonly engineRegistryMirrors: string[];
    readonly engineStorageDriver: string;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly nodeTaints: outputs.GetNodeTemplateNodeTaint[];
    readonly useInternalIpAddress?: boolean;
}
export function getNodeTemplateOutput(args: GetNodeTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNodeTemplateResult> {
    return pulumi.output(args).apply((a: any) => getNodeTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getNodeTemplate.
 */
export interface GetNodeTemplateOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    useInternalIpAddress?: pulumi.Input<boolean>;
}
