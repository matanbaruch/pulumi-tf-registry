// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getClusterAlertRule(args: GetClusterAlertRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterAlertRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rancher2:index/getClusterAlertRule:getClusterAlertRule", {
        "clusterId": args.clusterId,
        "id": args.id,
        "labels": args.labels,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getClusterAlertRule.
 */
export interface GetClusterAlertRuleArgs {
    clusterId: string;
    id?: string;
    labels?: {[key: string]: string};
    name: string;
}

/**
 * A collection of values returned by getClusterAlertRule.
 */
export interface GetClusterAlertRuleResult {
    readonly annotations: {[key: string]: string};
    readonly clusterId: string;
    readonly eventRules: outputs.GetClusterAlertRuleEventRule[];
    readonly groupId: string;
    readonly groupIntervalSeconds: number;
    readonly groupWaitSeconds: number;
    readonly id: string;
    readonly inherited: boolean;
    readonly labels?: {[key: string]: string};
    readonly metricRules: outputs.GetClusterAlertRuleMetricRule[];
    readonly name: string;
    readonly nodeRules: outputs.GetClusterAlertRuleNodeRule[];
    readonly repeatIntervalSeconds: number;
    readonly severity: string;
    readonly systemServiceRules: outputs.GetClusterAlertRuleSystemServiceRule[];
}
export function getClusterAlertRuleOutput(args: GetClusterAlertRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterAlertRuleResult> {
    return pulumi.output(args).apply((a: any) => getClusterAlertRule(a, opts))
}

/**
 * A collection of arguments for invoking getClusterAlertRule.
 */
export interface GetClusterAlertRuleOutputArgs {
    clusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name: pulumi.Input<string>;
}
