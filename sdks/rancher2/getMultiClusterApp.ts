// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMultiClusterApp(args: GetMultiClusterAppArgs, opts?: pulumi.InvokeOptions): Promise<GetMultiClusterAppResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rancher2:index/getMultiClusterApp:getMultiClusterApp", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMultiClusterApp.
 */
export interface GetMultiClusterAppArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getMultiClusterApp.
 */
export interface GetMultiClusterAppResult {
    readonly annotations: {[key: string]: string};
    readonly answers: outputs.GetMultiClusterAppAnswer[];
    readonly catalogName: string;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly members: outputs.GetMultiClusterAppMember[];
    readonly name: string;
    readonly revisionHistoryLimit: number;
    readonly revisionId: string;
    readonly roles: string[];
    readonly targets: outputs.GetMultiClusterAppTarget[];
    readonly templateName: string;
    readonly templateVersion: string;
    readonly templateVersionId: string;
    readonly upgradeStrategies: outputs.GetMultiClusterAppUpgradeStrategy[];
}
export function getMultiClusterAppOutput(args: GetMultiClusterAppOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMultiClusterAppResult> {
    return pulumi.output(args).apply((a: any) => getMultiClusterApp(a, opts))
}

/**
 * A collection of arguments for invoking getMultiClusterApp.
 */
export interface GetMultiClusterAppOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
