// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNotifier(args: GetNotifierArgs, opts?: pulumi.InvokeOptions): Promise<GetNotifierResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rancher2:index/getNotifier:getNotifier", {
        "clusterId": args.clusterId,
        "dingtalkConfig": args.dingtalkConfig,
        "id": args.id,
        "msteamsConfig": args.msteamsConfig,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNotifier.
 */
export interface GetNotifierArgs {
    clusterId: string;
    dingtalkConfig?: inputs.GetNotifierDingtalkConfig;
    id?: string;
    msteamsConfig?: inputs.GetNotifierMsteamsConfig;
    name: string;
}

/**
 * A collection of values returned by getNotifier.
 */
export interface GetNotifierResult {
    readonly annotations: {[key: string]: string};
    readonly clusterId: string;
    readonly description: string;
    readonly dingtalkConfig?: outputs.GetNotifierDingtalkConfig;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly msteamsConfig?: outputs.GetNotifierMsteamsConfig;
    readonly name: string;
    readonly pagerdutyConfigs: outputs.GetNotifierPagerdutyConfig[];
    readonly slackConfigs: outputs.GetNotifierSlackConfig[];
    readonly smtpConfigs: outputs.GetNotifierSmtpConfig[];
    readonly webhookConfigs: outputs.GetNotifierWebhookConfig[];
    readonly wechatConfigs: outputs.GetNotifierWechatConfig[];
}
export function getNotifierOutput(args: GetNotifierOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNotifierResult> {
    return pulumi.output(args).apply((a: any) => getNotifier(a, opts))
}

/**
 * A collection of arguments for invoking getNotifier.
 */
export interface GetNotifierOutputArgs {
    clusterId: pulumi.Input<string>;
    dingtalkConfig?: pulumi.Input<inputs.GetNotifierDingtalkConfigArgs>;
    id?: pulumi.Input<string>;
    msteamsConfig?: pulumi.Input<inputs.GetNotifierMsteamsConfigArgs>;
    name: pulumi.Input<string>;
}
