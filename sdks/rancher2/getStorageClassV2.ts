// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStorageClassV2(args: GetStorageClassV2Args, opts?: pulumi.InvokeOptions): Promise<GetStorageClassV2Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rancher2:index/getStorageClassV2:getStorageClassV2", {
        "clusterId": args.clusterId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageClassV2.
 */
export interface GetStorageClassV2Args {
    clusterId: string;
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getStorageClassV2.
 */
export interface GetStorageClassV2Result {
    readonly allowVolumeExpansion: boolean;
    readonly annotations: {[key: string]: string};
    readonly clusterId: string;
    readonly id: string;
    readonly k8sProvisioner: string;
    readonly labels: {[key: string]: string};
    readonly mountOptions: string[];
    readonly name: string;
    readonly parameters: {[key: string]: string};
    readonly reclaimPolicy: string;
    readonly resourceVersion: string;
    readonly volumeBindingMode: string;
}
export function getStorageClassV2Output(args: GetStorageClassV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageClassV2Result> {
    return pulumi.output(args).apply((a: any) => getStorageClassV2(a, opts))
}

/**
 * A collection of arguments for invoking getStorageClassV2.
 */
export interface GetStorageClassV2OutputArgs {
    clusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
