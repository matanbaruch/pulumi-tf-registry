// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGlobalDnsProvider(args: GetGlobalDnsProviderArgs, opts?: pulumi.InvokeOptions): Promise<GetGlobalDnsProviderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rancher2:index/getGlobalDnsProvider:getGlobalDnsProvider", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGlobalDnsProvider.
 */
export interface GetGlobalDnsProviderArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getGlobalDnsProvider.
 */
export interface GetGlobalDnsProviderResult {
    readonly alidnsConfigs: outputs.GetGlobalDnsProviderAlidnsConfig[];
    readonly annotations: {[key: string]: string};
    readonly cloudflareConfigs: outputs.GetGlobalDnsProviderCloudflareConfig[];
    readonly dnsProvider: string;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly rootDomain: string;
    readonly route53Configs: outputs.GetGlobalDnsProviderRoute53Config[];
}
export function getGlobalDnsProviderOutput(args: GetGlobalDnsProviderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlobalDnsProviderResult> {
    return pulumi.output(args).apply((a: any) => getGlobalDnsProvider(a, opts))
}

/**
 * A collection of arguments for invoking getGlobalDnsProvider.
 */
export interface GetGlobalDnsProviderOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
