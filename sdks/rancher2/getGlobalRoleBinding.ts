// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGlobalRoleBinding(args: GetGlobalRoleBindingArgs, opts?: pulumi.InvokeOptions): Promise<GetGlobalRoleBindingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rancher2:index/getGlobalRoleBinding:getGlobalRoleBinding", {
        "globalRoleId": args.globalRoleId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGlobalRoleBinding.
 */
export interface GetGlobalRoleBindingArgs {
    globalRoleId?: string;
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getGlobalRoleBinding.
 */
export interface GetGlobalRoleBindingResult {
    readonly annotations: {[key: string]: string};
    readonly globalRoleId: string;
    readonly groupPrincipalId: string;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly userId: string;
}
export function getGlobalRoleBindingOutput(args: GetGlobalRoleBindingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlobalRoleBindingResult> {
    return pulumi.output(args).apply((a: any) => getGlobalRoleBinding(a, opts))
}

/**
 * A collection of arguments for invoking getGlobalRoleBinding.
 */
export interface GetGlobalRoleBindingOutputArgs {
    globalRoleId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
