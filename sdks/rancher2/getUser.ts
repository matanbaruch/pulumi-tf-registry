// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getUser(args?: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rancher2:index/getUser:getUser", {
        "id": args.id,
        "isExternal": args.isExternal,
        "name": args.name,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    id?: string;
    isExternal?: boolean;
    name?: string;
    username?: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    readonly annotations: {[key: string]: string};
    readonly enabled: boolean;
    readonly id: string;
    readonly isExternal?: boolean;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly principalIds: string[];
    readonly username: string;
}
export function getUserOutput(args?: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply((a: any) => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    id?: pulumi.Input<string>;
    isExternal?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}
