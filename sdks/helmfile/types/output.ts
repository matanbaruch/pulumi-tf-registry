// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface EmbeddingExampleEmbedded {
    applyOutput: string;
    awsAssumeRole?: outputs.EmbeddingExampleEmbeddedAwsAssumeRole;
    awsProfile?: string;
    awsRegion?: string;
    binary?: string;
    concurrency?: number;
    content?: string;
    diffOutput: string;
    dirty?: boolean;
    environment?: string;
    environmentVariables?: {[key: string]: string};
    error: string;
    helmBinary?: string;
    helmDiffVersion?: string;
    helmVersion?: string;
    kubeconfig: string;
    path?: string;
    releasesValues?: {[key: string]: string};
    selector?: {[key: string]: string};
    selectors?: string[];
    skipDiffOnMissingFiles?: string[];
    values?: string[];
    valuesFiles?: string[];
    version?: string;
    workingDirectory?: string;
}

export interface EmbeddingExampleEmbeddedAwsAssumeRole {
    /**
     * Seconds to restrict the assume role session duration.
     */
    durationSeconds?: number;
    /**
     * Unique identifier that might be required for assuming a role in another account.
     */
    externalId?: string;
    /**
     * IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
     */
    policy?: string;
    /**
     * Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.
     */
    policyArns?: string[];
    /**
     * Amazon Resource Name of an IAM Role to assume prior to making API calls.
     */
    roleArn?: string;
    /**
     * Identifier for the assumed role session.
     */
    sessionName?: string;
    /**
     * Assume role session tags.
     */
    tags?: {[key: string]: string};
    /**
     * Assume role session tag keys to pass to any subsequent sessions.
     */
    transitiveTagKeys?: string[];
}

export interface ReleaseAwsAssumeRole {
    /**
     * Seconds to restrict the assume role session duration.
     */
    durationSeconds?: number;
    /**
     * Unique identifier that might be required for assuming a role in another account.
     */
    externalId?: string;
    /**
     * IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
     */
    policy?: string;
    /**
     * Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.
     */
    policyArns?: string[];
    /**
     * Amazon Resource Name of an IAM Role to assume prior to making API calls.
     */
    roleArn?: string;
    /**
     * Identifier for the assumed role session.
     */
    sessionName?: string;
    /**
     * Assume role session tags.
     */
    tags?: {[key: string]: string};
    /**
     * Assume role session tag keys to pass to any subsequent sessions.
     */
    transitiveTagKeys?: string[];
}

export interface ReleaseSetAwsAssumeRole {
    /**
     * Seconds to restrict the assume role session duration.
     */
    durationSeconds?: number;
    /**
     * Unique identifier that might be required for assuming a role in another account.
     */
    externalId?: string;
    /**
     * IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
     */
    policy?: string;
    /**
     * Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.
     */
    policyArns?: string[];
    /**
     * Amazon Resource Name of an IAM Role to assume prior to making API calls.
     */
    roleArn?: string;
    /**
     * Identifier for the assumed role session.
     */
    sessionName?: string;
    /**
     * Assume role session tags.
     */
    tags?: {[key: string]: string};
    /**
     * Assume role session tag keys to pass to any subsequent sessions.
     */
    transitiveTagKeys?: string[];
}

