// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBootstrapNodeKey(args: GetBootstrapNodeKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetBootstrapNodeKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("quorum:index/getBootstrapNodeKey:getBootstrapNodeKey", {
        "id": args.id,
        "nodeKeyHex": args.nodeKeyHex,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBootstrapNodeKey.
 */
export interface GetBootstrapNodeKeyArgs {
    id?: string;
    nodeKeyHex: string;
}

/**
 * A collection of values returned by getBootstrapNodeKey.
 */
export interface GetBootstrapNodeKeyResult {
    readonly hexNodeId: string;
    readonly id: string;
    readonly istanbulAddress: string;
    readonly nodeId: string;
    readonly nodeKeyHex: string;
}
export function getBootstrapNodeKeyOutput(args: GetBootstrapNodeKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBootstrapNodeKeyResult> {
    return pulumi.output(args).apply((a: any) => getBootstrapNodeKey(a, opts))
}

/**
 * A collection of arguments for invoking getBootstrapNodeKey.
 */
export interface GetBootstrapNodeKeyOutputArgs {
    id?: pulumi.Input<string>;
    nodeKeyHex: pulumi.Input<string>;
}
