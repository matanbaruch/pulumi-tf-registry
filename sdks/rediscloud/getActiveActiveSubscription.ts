// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getActiveActiveSubscription(args: GetActiveActiveSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetActiveActiveSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rediscloud:index/getActiveActiveSubscription:getActiveActiveSubscription", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getActiveActiveSubscription.
 */
export interface GetActiveActiveSubscriptionArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getActiveActiveSubscription.
 */
export interface GetActiveActiveSubscriptionResult {
    readonly cloudProvider: string;
    readonly id: string;
    readonly maintenanceWindows: outputs.GetActiveActiveSubscriptionMaintenanceWindow[];
    readonly name: string;
    readonly numberOfDatabases: number;
    readonly paymentMethod: string;
    readonly paymentMethodId: string;
    readonly pricings: outputs.GetActiveActiveSubscriptionPricing[];
    readonly status: string;
}
export function getActiveActiveSubscriptionOutput(args: GetActiveActiveSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetActiveActiveSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getActiveActiveSubscription(a, opts))
}

/**
 * A collection of arguments for invoking getActiveActiveSubscription.
 */
export interface GetActiveActiveSubscriptionOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
