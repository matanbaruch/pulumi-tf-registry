// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TransitGatewayAttachment extends pulumi.CustomResource {
    /**
     * Get an existing TransitGatewayAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransitGatewayAttachmentState, opts?: pulumi.CustomResourceOptions): TransitGatewayAttachment {
        return new TransitGatewayAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rediscloud:index/transitGatewayAttachment:TransitGatewayAttachment';

    /**
     * Returns true if the given object is an instance of TransitGatewayAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitGatewayAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitGatewayAttachment.__pulumiType;
    }

    /**
     * The status of the Subscription/Transit Gateway attachment, if established
     */
    public /*out*/ readonly attachmentStatus!: pulumi.Output<string>;
    /**
     * A unique identifier for the Subscription/Transit Gateway attachment, if established
     */
    public /*out*/ readonly attachmentUid!: pulumi.Output<string>;
    /**
     * The Transit Gateway's AWS account id
     */
    public /*out*/ readonly awsAccountId!: pulumi.Output<string>;
    /**
     * The id of the Transit Gateway as known to AWS
     */
    public /*out*/ readonly awsTgwUid!: pulumi.Output<string>;
    /**
     * A list of consumer Cidr blocks.
     */
    public readonly cidrs!: pulumi.Output<string[]>;
    /**
     * The status of the Transit Gateway
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The id of the Pro/Flexible subscription to attach
     */
    public readonly subscriptionId!: pulumi.Output<string>;
    /**
     * The id of the Transit Gateway to attach to
     */
    public readonly tgwId!: pulumi.Output<number>;
    public readonly timeouts!: pulumi.Output<outputs.TransitGatewayAttachmentTimeouts | undefined>;

    /**
     * Create a TransitGatewayAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitGatewayAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransitGatewayAttachmentArgs | TransitGatewayAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransitGatewayAttachmentState | undefined;
            resourceInputs["attachmentStatus"] = state ? state.attachmentStatus : undefined;
            resourceInputs["attachmentUid"] = state ? state.attachmentUid : undefined;
            resourceInputs["awsAccountId"] = state ? state.awsAccountId : undefined;
            resourceInputs["awsTgwUid"] = state ? state.awsTgwUid : undefined;
            resourceInputs["cidrs"] = state ? state.cidrs : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["tgwId"] = state ? state.tgwId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as TransitGatewayAttachmentArgs | undefined;
            if ((!args || args.subscriptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionId'");
            }
            if ((!args || args.tgwId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tgwId'");
            }
            resourceInputs["cidrs"] = args ? args.cidrs : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["tgwId"] = args ? args.tgwId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["attachmentStatus"] = undefined /*out*/;
            resourceInputs["attachmentUid"] = undefined /*out*/;
            resourceInputs["awsAccountId"] = undefined /*out*/;
            resourceInputs["awsTgwUid"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitGatewayAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TransitGatewayAttachment resources.
 */
export interface TransitGatewayAttachmentState {
    /**
     * The status of the Subscription/Transit Gateway attachment, if established
     */
    attachmentStatus?: pulumi.Input<string>;
    /**
     * A unique identifier for the Subscription/Transit Gateway attachment, if established
     */
    attachmentUid?: pulumi.Input<string>;
    /**
     * The Transit Gateway's AWS account id
     */
    awsAccountId?: pulumi.Input<string>;
    /**
     * The id of the Transit Gateway as known to AWS
     */
    awsTgwUid?: pulumi.Input<string>;
    /**
     * A list of consumer Cidr blocks.
     */
    cidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The status of the Transit Gateway
     */
    status?: pulumi.Input<string>;
    /**
     * The id of the Pro/Flexible subscription to attach
     */
    subscriptionId?: pulumi.Input<string>;
    /**
     * The id of the Transit Gateway to attach to
     */
    tgwId?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.TransitGatewayAttachmentTimeouts>;
}

/**
 * The set of arguments for constructing a TransitGatewayAttachment resource.
 */
export interface TransitGatewayAttachmentArgs {
    /**
     * A list of consumer Cidr blocks.
     */
    cidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The id of the Pro/Flexible subscription to attach
     */
    subscriptionId: pulumi.Input<string>;
    /**
     * The id of the Transit Gateway to attach to
     */
    tgwId: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.TransitGatewayAttachmentTimeouts>;
}
