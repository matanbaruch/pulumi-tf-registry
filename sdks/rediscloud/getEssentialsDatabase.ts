// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEssentialsDatabase(args: GetEssentialsDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetEssentialsDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rediscloud:index/getEssentialsDatabase:getEssentialsDatabase", {
        "dbId": args.dbId,
        "id": args.id,
        "name": args.name,
        "subscriptionId": args.subscriptionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEssentialsDatabase.
 */
export interface GetEssentialsDatabaseArgs {
    dbId?: number;
    id?: string;
    name?: string;
    subscriptionId: number;
}

/**
 * A collection of values returned by getEssentialsDatabase.
 */
export interface GetEssentialsDatabaseResult {
    readonly activatedOn: string;
    readonly alerts: outputs.GetEssentialsDatabaseAlert[];
    readonly clientTlsCertificates: string[];
    readonly cloudProvider: string;
    readonly dataEviction: string;
    readonly dataPersistence: string;
    readonly dbId: number;
    readonly enableDatabaseClustering: boolean;
    readonly enableDefaultUser: boolean;
    readonly enableTls: boolean;
    readonly externalEndpointForOssClusterApi: boolean;
    readonly id: string;
    readonly latestBackupStatuses: outputs.GetEssentialsDatabaseLatestBackupStatus[];
    readonly latestImportStatuses: outputs.GetEssentialsDatabaseLatestImportStatus[];
    readonly memoryLimitInGb: number;
    readonly modules: outputs.GetEssentialsDatabaseModule[];
    readonly name: string;
    readonly password: string;
    readonly periodicBackupPath: string;
    readonly privateEndpoint: string;
    readonly protocol: string;
    readonly publicEndpoint: string;
    readonly redisVersionCompliance: string;
    readonly regexRules: string[];
    readonly region: string;
    readonly replicas: outputs.GetEssentialsDatabaseReplica[];
    readonly replication: boolean;
    readonly respVersion: string;
    readonly sourceIps: string[];
    readonly subscriptionId: number;
    readonly supportOssClusterApi: boolean;
}
export function getEssentialsDatabaseOutput(args: GetEssentialsDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEssentialsDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getEssentialsDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getEssentialsDatabase.
 */
export interface GetEssentialsDatabaseOutputArgs {
    dbId?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    subscriptionId: pulumi.Input<number>;
}
