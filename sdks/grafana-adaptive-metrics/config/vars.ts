// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("grafana-adaptive-metrics");

/**
 * Tenant ID and Access Policy Token (or API key) for Grafana Cloud in the format '<tenant-id>:<token-or-api-key>'. May
 * alternatively be set via the `GRAFANA_AM_API_KEY` environment variable.
 */
export declare const apiKey: string | undefined;
Object.defineProperty(exports, "apiKey", {
    get() {
        return __config.get("apiKey");
    },
    enumerable: true,
});

/**
 * Whether to enable debug logging. Defaults to false.
 */
export declare const debug: boolean | undefined;
Object.defineProperty(exports, "debug", {
    get() {
        return __config.getObject<boolean>("debug");
    },
    enumerable: true,
});

/**
 * HTTP headers mapping keys to values used for accessing Grafana Cloud APIs. May alternatively be set via the
 * `GRAFANA_AM_HTTP_HEADERS` environment variable in JSON format.
 */
export declare const httpHeaders: {[key: string]: string} | undefined;
Object.defineProperty(exports, "httpHeaders", {
    get() {
        return __config.getObject<{[key: string]: string}>("httpHeaders");
    },
    enumerable: true,
});

/**
 * The amount of retries to use for Grafana API and Grafana Cloud API calls. Defaults to 3. May alternatively be set via
 * the `GRAFANA_AM_RETRIES` environment variable.
 */
export declare const retries: number | undefined;
Object.defineProperty(exports, "retries", {
    get() {
        return __config.getObject<number>("retries");
    },
    enumerable: true,
});

/**
 * Grafana Cloud's API URL. May alternatively be set via the `GRAFANA_AM_API_URL` environment variable.
 */
export declare const url: string | undefined;
Object.defineProperty(exports, "url", {
    get() {
        return __config.get("url");
    },
    enumerable: true,
});

