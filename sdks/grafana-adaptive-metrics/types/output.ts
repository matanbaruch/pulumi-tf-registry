// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetRecommendationsRecommendation {
    /**
     * The delay until aggregation is performed.
     */
    aggregationDelay: string;
    /**
     * The interval at which to generate the aggregated series.
     */
    aggregationInterval: string;
    /**
     * The array of aggregation types to calculate for this metric.
     */
    aggregations: string[];
    /**
     * Set to true to skip both ingestion and aggregation and drop the metric entirely.
     */
    drop: boolean;
    /**
     * The array of labels that will be aggregated.
     */
    dropLabels: string[];
    /**
     * The array of labels to keep; labels not in this array will be aggregated.
     */
    keepLabels: string[];
    /**
     * The array of labels that will be kept.
     */
    keptLabels: string[];
    /**
     * Specifies how the metric field matches to incoming metric names. Can be 'prefix', 'suffix', or 'exact', defaults to 'exact'.
     */
    matchType: string;
    /**
     * The name of the metric to be aggregated.
     */
    metric: string;
    /**
     * The recommended action for the aggregation rule.
     */
    recommendedAction: string;
    /**
     * The total number of series after aggregation.
     */
    totalSeriesAfterAggregation: number;
    /**
     * The total number of series before aggregation.
     */
    totalSeriesBeforeAggregation: number;
    /**
     * The number of dashboards that use this metric.
     */
    usagesInDashboards: number;
    /**
     * The number of queries that use this metric..
     */
    usagesInQueries: number;
    /**
     * The number of rules that use this metric.
     */
    usagesInRules: number;
}

