// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WirelessEnterpriseSsid extends pulumi.CustomResource {
    /**
     * Get an existing WirelessEnterpriseSsid resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WirelessEnterpriseSsidState, opts?: pulumi.CustomResourceOptions): WirelessEnterpriseSsid {
        return new WirelessEnterpriseSsid(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'catalystcenter:index/wirelessEnterpriseSsid:WirelessEnterpriseSsid';

    /**
     * Returns true if the given object is an instance of WirelessEnterpriseSsid.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WirelessEnterpriseSsid {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WirelessEnterpriseSsid.__pulumiType;
    }

    /**
     * AAA Override
     */
    public readonly aaaOverride!: pulumi.Output<boolean | undefined>;
    /**
     * Takes string inputs for the AKMs that should be set true. Possible AKM values : dot1x,dot1x_ft, dot1x_sha, psk, psk_ft,
     * psk_sha, owe, sae, sae_ft
     */
    public readonly authKeyMgmts!: pulumi.Output<string[] | undefined>;
    /**
     * Basic Service Set Client Idle Timeout
     */
    public readonly basicServiceSetClientIdleTimeout!: pulumi.Output<number | undefined>;
    /**
     * Client Exclusion Timeout
     */
    public readonly clientExclusionTimeout!: pulumi.Output<number | undefined>;
    /**
     * Client Rate Limit (in bits per second)
     */
    public readonly clientRateLimit!: pulumi.Output<number | undefined>;
    /**
     * Coverage Hole Detection Enable
     */
    public readonly coverageHoleDetectionEnable!: pulumi.Output<boolean | undefined>;
    /**
     * Enable Basic Service Set Max Idle
     */
    public readonly enableBasicServiceSetMaxIdle!: pulumi.Output<boolean | undefined>;
    /**
     * Enable Broadcast SSID
     */
    public readonly enableBroadcastSsid!: pulumi.Output<boolean | undefined>;
    /**
     * Enable Client Exclusion
     */
    public readonly enableClientExclusion!: pulumi.Output<boolean | undefined>;
    /**
     * Enable Directed Multicast Service
     */
    public readonly enableDirectedMulticastService!: pulumi.Output<boolean | undefined>;
    /**
     * Enable FastLane
     */
    public readonly enableFastLane!: pulumi.Output<boolean | undefined>;
    /**
     * Enable MAC Filtering
     */
    public readonly enableMacFiltering!: pulumi.Output<boolean | undefined>;
    /**
     * Enable Neighbor List
     */
    public readonly enableNeighborList!: pulumi.Output<boolean | undefined>;
    /**
     * Enable Session Timeout
     */
    public readonly enableSessionTimeOut!: pulumi.Output<boolean | undefined>;
    /**
     * Fast Transition - Choices: `Adaptive`, `Enable`, `Disable`
     */
    public readonly fastTransition!: pulumi.Output<string | undefined>;
    /**
     * Ghz24 Policy - Choices: `dot11-g-only`, `dot11-bg-only`
     */
    public readonly ghz24Policy!: pulumi.Output<string | undefined>;
    /**
     * Ghz6 Policy Client Steering
     */
    public readonly ghz6PolicyClientSteering!: pulumi.Output<boolean | undefined>;
    /**
     * Mfp Client Protection - Choices: `Optional`, `Disabled`, `Required`
     */
    public readonly mfpClientProtection!: pulumi.Output<string | undefined>;
    /**
     * Multi PSK Settings (Only applicable for SSID with PERSONAL auth type and PSK)
     */
    public readonly multiPskSettings!: pulumi.Output<outputs.WirelessEnterpriseSsidMultiPskSetting[] | undefined>;
    /**
     * SSID Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Nas Options
     */
    public readonly nasOptions!: pulumi.Output<string[] | undefined>;
    /**
     * Passphrase
     */
    public readonly passphrase!: pulumi.Output<string | undefined>;
    /**
     * Policy Profile Name
     */
    public readonly policyProfileName!: pulumi.Output<string | undefined>;
    /**
     * Profile Name
     */
    public readonly profileName!: pulumi.Output<string | undefined>;
    /**
     * Protected Management Frame - Choices: `Optional`, `Disabled`, `Required`
     */
    public readonly protectedManagementFrame!: pulumi.Output<string | undefined>;
    /**
     * Radio Policy - Choices: `Triple band operation(2.4GHz, 5GHz and 6GHz)`, `Triple band operation with band select`, `5GHz
     * only`, `2.4GHz only`, `6GHz only`
     */
    public readonly radioPolicy!: pulumi.Output<string | undefined>;
    /**
     * Rsn Cipher Suite Ccmp256
     */
    public readonly rsnCipherSuiteCcmp256!: pulumi.Output<boolean | undefined>;
    /**
     * Rsn Cipher Suite Gcmp 128
     */
    public readonly rsnCipherSuiteGcmp128!: pulumi.Output<boolean | undefined>;
    /**
     * Rsn Cipher Suite Gcmp256
     */
    public readonly rsnCipherSuiteGcmp256!: pulumi.Output<boolean | undefined>;
    /**
     * Security Level - Choices: `wpa2_enterprise`, `wpa2_personal`, `open`, `wpa3_enterprise`, `wpa3_personal`,
     * `wpa2_wpa3_personal`, `wpa2_wpa3_enterprise`
     */
    public readonly securityLevel!: pulumi.Output<string>;
    /**
     * Session Time Out
     */
    public readonly sessionTimeOut!: pulumi.Output<number | undefined>;
    /**
     * Traffic Type - Choices: `voicedata`, `data`
     */
    public readonly trafficType!: pulumi.Output<string | undefined>;

    /**
     * Create a WirelessEnterpriseSsid resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WirelessEnterpriseSsidArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WirelessEnterpriseSsidArgs | WirelessEnterpriseSsidState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WirelessEnterpriseSsidState | undefined;
            resourceInputs["aaaOverride"] = state ? state.aaaOverride : undefined;
            resourceInputs["authKeyMgmts"] = state ? state.authKeyMgmts : undefined;
            resourceInputs["basicServiceSetClientIdleTimeout"] = state ? state.basicServiceSetClientIdleTimeout : undefined;
            resourceInputs["clientExclusionTimeout"] = state ? state.clientExclusionTimeout : undefined;
            resourceInputs["clientRateLimit"] = state ? state.clientRateLimit : undefined;
            resourceInputs["coverageHoleDetectionEnable"] = state ? state.coverageHoleDetectionEnable : undefined;
            resourceInputs["enableBasicServiceSetMaxIdle"] = state ? state.enableBasicServiceSetMaxIdle : undefined;
            resourceInputs["enableBroadcastSsid"] = state ? state.enableBroadcastSsid : undefined;
            resourceInputs["enableClientExclusion"] = state ? state.enableClientExclusion : undefined;
            resourceInputs["enableDirectedMulticastService"] = state ? state.enableDirectedMulticastService : undefined;
            resourceInputs["enableFastLane"] = state ? state.enableFastLane : undefined;
            resourceInputs["enableMacFiltering"] = state ? state.enableMacFiltering : undefined;
            resourceInputs["enableNeighborList"] = state ? state.enableNeighborList : undefined;
            resourceInputs["enableSessionTimeOut"] = state ? state.enableSessionTimeOut : undefined;
            resourceInputs["fastTransition"] = state ? state.fastTransition : undefined;
            resourceInputs["ghz24Policy"] = state ? state.ghz24Policy : undefined;
            resourceInputs["ghz6PolicyClientSteering"] = state ? state.ghz6PolicyClientSteering : undefined;
            resourceInputs["mfpClientProtection"] = state ? state.mfpClientProtection : undefined;
            resourceInputs["multiPskSettings"] = state ? state.multiPskSettings : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nasOptions"] = state ? state.nasOptions : undefined;
            resourceInputs["passphrase"] = state ? state.passphrase : undefined;
            resourceInputs["policyProfileName"] = state ? state.policyProfileName : undefined;
            resourceInputs["profileName"] = state ? state.profileName : undefined;
            resourceInputs["protectedManagementFrame"] = state ? state.protectedManagementFrame : undefined;
            resourceInputs["radioPolicy"] = state ? state.radioPolicy : undefined;
            resourceInputs["rsnCipherSuiteCcmp256"] = state ? state.rsnCipherSuiteCcmp256 : undefined;
            resourceInputs["rsnCipherSuiteGcmp128"] = state ? state.rsnCipherSuiteGcmp128 : undefined;
            resourceInputs["rsnCipherSuiteGcmp256"] = state ? state.rsnCipherSuiteGcmp256 : undefined;
            resourceInputs["securityLevel"] = state ? state.securityLevel : undefined;
            resourceInputs["sessionTimeOut"] = state ? state.sessionTimeOut : undefined;
            resourceInputs["trafficType"] = state ? state.trafficType : undefined;
        } else {
            const args = argsOrState as WirelessEnterpriseSsidArgs | undefined;
            if ((!args || args.securityLevel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityLevel'");
            }
            resourceInputs["aaaOverride"] = args ? args.aaaOverride : undefined;
            resourceInputs["authKeyMgmts"] = args ? args.authKeyMgmts : undefined;
            resourceInputs["basicServiceSetClientIdleTimeout"] = args ? args.basicServiceSetClientIdleTimeout : undefined;
            resourceInputs["clientExclusionTimeout"] = args ? args.clientExclusionTimeout : undefined;
            resourceInputs["clientRateLimit"] = args ? args.clientRateLimit : undefined;
            resourceInputs["coverageHoleDetectionEnable"] = args ? args.coverageHoleDetectionEnable : undefined;
            resourceInputs["enableBasicServiceSetMaxIdle"] = args ? args.enableBasicServiceSetMaxIdle : undefined;
            resourceInputs["enableBroadcastSsid"] = args ? args.enableBroadcastSsid : undefined;
            resourceInputs["enableClientExclusion"] = args ? args.enableClientExclusion : undefined;
            resourceInputs["enableDirectedMulticastService"] = args ? args.enableDirectedMulticastService : undefined;
            resourceInputs["enableFastLane"] = args ? args.enableFastLane : undefined;
            resourceInputs["enableMacFiltering"] = args ? args.enableMacFiltering : undefined;
            resourceInputs["enableNeighborList"] = args ? args.enableNeighborList : undefined;
            resourceInputs["enableSessionTimeOut"] = args ? args.enableSessionTimeOut : undefined;
            resourceInputs["fastTransition"] = args ? args.fastTransition : undefined;
            resourceInputs["ghz24Policy"] = args ? args.ghz24Policy : undefined;
            resourceInputs["ghz6PolicyClientSteering"] = args ? args.ghz6PolicyClientSteering : undefined;
            resourceInputs["mfpClientProtection"] = args ? args.mfpClientProtection : undefined;
            resourceInputs["multiPskSettings"] = args ? args.multiPskSettings : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nasOptions"] = args ? args.nasOptions : undefined;
            resourceInputs["passphrase"] = args ? args.passphrase : undefined;
            resourceInputs["policyProfileName"] = args ? args.policyProfileName : undefined;
            resourceInputs["profileName"] = args ? args.profileName : undefined;
            resourceInputs["protectedManagementFrame"] = args ? args.protectedManagementFrame : undefined;
            resourceInputs["radioPolicy"] = args ? args.radioPolicy : undefined;
            resourceInputs["rsnCipherSuiteCcmp256"] = args ? args.rsnCipherSuiteCcmp256 : undefined;
            resourceInputs["rsnCipherSuiteGcmp128"] = args ? args.rsnCipherSuiteGcmp128 : undefined;
            resourceInputs["rsnCipherSuiteGcmp256"] = args ? args.rsnCipherSuiteGcmp256 : undefined;
            resourceInputs["securityLevel"] = args ? args.securityLevel : undefined;
            resourceInputs["sessionTimeOut"] = args ? args.sessionTimeOut : undefined;
            resourceInputs["trafficType"] = args ? args.trafficType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WirelessEnterpriseSsid.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WirelessEnterpriseSsid resources.
 */
export interface WirelessEnterpriseSsidState {
    /**
     * AAA Override
     */
    aaaOverride?: pulumi.Input<boolean>;
    /**
     * Takes string inputs for the AKMs that should be set true. Possible AKM values : dot1x,dot1x_ft, dot1x_sha, psk, psk_ft,
     * psk_sha, owe, sae, sae_ft
     */
    authKeyMgmts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Basic Service Set Client Idle Timeout
     */
    basicServiceSetClientIdleTimeout?: pulumi.Input<number>;
    /**
     * Client Exclusion Timeout
     */
    clientExclusionTimeout?: pulumi.Input<number>;
    /**
     * Client Rate Limit (in bits per second)
     */
    clientRateLimit?: pulumi.Input<number>;
    /**
     * Coverage Hole Detection Enable
     */
    coverageHoleDetectionEnable?: pulumi.Input<boolean>;
    /**
     * Enable Basic Service Set Max Idle
     */
    enableBasicServiceSetMaxIdle?: pulumi.Input<boolean>;
    /**
     * Enable Broadcast SSID
     */
    enableBroadcastSsid?: pulumi.Input<boolean>;
    /**
     * Enable Client Exclusion
     */
    enableClientExclusion?: pulumi.Input<boolean>;
    /**
     * Enable Directed Multicast Service
     */
    enableDirectedMulticastService?: pulumi.Input<boolean>;
    /**
     * Enable FastLane
     */
    enableFastLane?: pulumi.Input<boolean>;
    /**
     * Enable MAC Filtering
     */
    enableMacFiltering?: pulumi.Input<boolean>;
    /**
     * Enable Neighbor List
     */
    enableNeighborList?: pulumi.Input<boolean>;
    /**
     * Enable Session Timeout
     */
    enableSessionTimeOut?: pulumi.Input<boolean>;
    /**
     * Fast Transition - Choices: `Adaptive`, `Enable`, `Disable`
     */
    fastTransition?: pulumi.Input<string>;
    /**
     * Ghz24 Policy - Choices: `dot11-g-only`, `dot11-bg-only`
     */
    ghz24Policy?: pulumi.Input<string>;
    /**
     * Ghz6 Policy Client Steering
     */
    ghz6PolicyClientSteering?: pulumi.Input<boolean>;
    /**
     * Mfp Client Protection - Choices: `Optional`, `Disabled`, `Required`
     */
    mfpClientProtection?: pulumi.Input<string>;
    /**
     * Multi PSK Settings (Only applicable for SSID with PERSONAL auth type and PSK)
     */
    multiPskSettings?: pulumi.Input<pulumi.Input<inputs.WirelessEnterpriseSsidMultiPskSetting>[]>;
    /**
     * SSID Name
     */
    name?: pulumi.Input<string>;
    /**
     * Nas Options
     */
    nasOptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Passphrase
     */
    passphrase?: pulumi.Input<string>;
    /**
     * Policy Profile Name
     */
    policyProfileName?: pulumi.Input<string>;
    /**
     * Profile Name
     */
    profileName?: pulumi.Input<string>;
    /**
     * Protected Management Frame - Choices: `Optional`, `Disabled`, `Required`
     */
    protectedManagementFrame?: pulumi.Input<string>;
    /**
     * Radio Policy - Choices: `Triple band operation(2.4GHz, 5GHz and 6GHz)`, `Triple band operation with band select`, `5GHz
     * only`, `2.4GHz only`, `6GHz only`
     */
    radioPolicy?: pulumi.Input<string>;
    /**
     * Rsn Cipher Suite Ccmp256
     */
    rsnCipherSuiteCcmp256?: pulumi.Input<boolean>;
    /**
     * Rsn Cipher Suite Gcmp 128
     */
    rsnCipherSuiteGcmp128?: pulumi.Input<boolean>;
    /**
     * Rsn Cipher Suite Gcmp256
     */
    rsnCipherSuiteGcmp256?: pulumi.Input<boolean>;
    /**
     * Security Level - Choices: `wpa2_enterprise`, `wpa2_personal`, `open`, `wpa3_enterprise`, `wpa3_personal`,
     * `wpa2_wpa3_personal`, `wpa2_wpa3_enterprise`
     */
    securityLevel?: pulumi.Input<string>;
    /**
     * Session Time Out
     */
    sessionTimeOut?: pulumi.Input<number>;
    /**
     * Traffic Type - Choices: `voicedata`, `data`
     */
    trafficType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WirelessEnterpriseSsid resource.
 */
export interface WirelessEnterpriseSsidArgs {
    /**
     * AAA Override
     */
    aaaOverride?: pulumi.Input<boolean>;
    /**
     * Takes string inputs for the AKMs that should be set true. Possible AKM values : dot1x,dot1x_ft, dot1x_sha, psk, psk_ft,
     * psk_sha, owe, sae, sae_ft
     */
    authKeyMgmts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Basic Service Set Client Idle Timeout
     */
    basicServiceSetClientIdleTimeout?: pulumi.Input<number>;
    /**
     * Client Exclusion Timeout
     */
    clientExclusionTimeout?: pulumi.Input<number>;
    /**
     * Client Rate Limit (in bits per second)
     */
    clientRateLimit?: pulumi.Input<number>;
    /**
     * Coverage Hole Detection Enable
     */
    coverageHoleDetectionEnable?: pulumi.Input<boolean>;
    /**
     * Enable Basic Service Set Max Idle
     */
    enableBasicServiceSetMaxIdle?: pulumi.Input<boolean>;
    /**
     * Enable Broadcast SSID
     */
    enableBroadcastSsid?: pulumi.Input<boolean>;
    /**
     * Enable Client Exclusion
     */
    enableClientExclusion?: pulumi.Input<boolean>;
    /**
     * Enable Directed Multicast Service
     */
    enableDirectedMulticastService?: pulumi.Input<boolean>;
    /**
     * Enable FastLane
     */
    enableFastLane?: pulumi.Input<boolean>;
    /**
     * Enable MAC Filtering
     */
    enableMacFiltering?: pulumi.Input<boolean>;
    /**
     * Enable Neighbor List
     */
    enableNeighborList?: pulumi.Input<boolean>;
    /**
     * Enable Session Timeout
     */
    enableSessionTimeOut?: pulumi.Input<boolean>;
    /**
     * Fast Transition - Choices: `Adaptive`, `Enable`, `Disable`
     */
    fastTransition?: pulumi.Input<string>;
    /**
     * Ghz24 Policy - Choices: `dot11-g-only`, `dot11-bg-only`
     */
    ghz24Policy?: pulumi.Input<string>;
    /**
     * Ghz6 Policy Client Steering
     */
    ghz6PolicyClientSteering?: pulumi.Input<boolean>;
    /**
     * Mfp Client Protection - Choices: `Optional`, `Disabled`, `Required`
     */
    mfpClientProtection?: pulumi.Input<string>;
    /**
     * Multi PSK Settings (Only applicable for SSID with PERSONAL auth type and PSK)
     */
    multiPskSettings?: pulumi.Input<pulumi.Input<inputs.WirelessEnterpriseSsidMultiPskSetting>[]>;
    /**
     * SSID Name
     */
    name?: pulumi.Input<string>;
    /**
     * Nas Options
     */
    nasOptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Passphrase
     */
    passphrase?: pulumi.Input<string>;
    /**
     * Policy Profile Name
     */
    policyProfileName?: pulumi.Input<string>;
    /**
     * Profile Name
     */
    profileName?: pulumi.Input<string>;
    /**
     * Protected Management Frame - Choices: `Optional`, `Disabled`, `Required`
     */
    protectedManagementFrame?: pulumi.Input<string>;
    /**
     * Radio Policy - Choices: `Triple band operation(2.4GHz, 5GHz and 6GHz)`, `Triple band operation with band select`, `5GHz
     * only`, `2.4GHz only`, `6GHz only`
     */
    radioPolicy?: pulumi.Input<string>;
    /**
     * Rsn Cipher Suite Ccmp256
     */
    rsnCipherSuiteCcmp256?: pulumi.Input<boolean>;
    /**
     * Rsn Cipher Suite Gcmp 128
     */
    rsnCipherSuiteGcmp128?: pulumi.Input<boolean>;
    /**
     * Rsn Cipher Suite Gcmp256
     */
    rsnCipherSuiteGcmp256?: pulumi.Input<boolean>;
    /**
     * Security Level - Choices: `wpa2_enterprise`, `wpa2_personal`, `open`, `wpa3_enterprise`, `wpa3_personal`,
     * `wpa2_wpa3_personal`, `wpa2_wpa3_enterprise`
     */
    securityLevel: pulumi.Input<string>;
    /**
     * Session Time Out
     */
    sessionTimeOut?: pulumi.Input<number>;
    /**
     * Traffic Type - Choices: `voicedata`, `data`
     */
    trafficType?: pulumi.Input<string>;
}
