// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWirelessProfile(args: GetWirelessProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetWirelessProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("catalystcenter:index/getWirelessProfile:getWirelessProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWirelessProfile.
 */
export interface GetWirelessProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getWirelessProfile.
 */
export interface GetWirelessProfileResult {
    readonly id: string;
    readonly ssidDetails: outputs.GetWirelessProfileSsidDetail[];
    readonly wirelessProfileName: string;
}
export function getWirelessProfileOutput(args: GetWirelessProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWirelessProfileResult> {
    return pulumi.output(args).apply((a: any) => getWirelessProfile(a, opts))
}

/**
 * A collection of arguments for invoking getWirelessProfile.
 */
export interface GetWirelessProfileOutputArgs {
    id: pulumi.Input<string>;
}
