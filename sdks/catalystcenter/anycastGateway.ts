// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AnycastGateway extends pulumi.CustomResource {
    /**
     * Get an existing AnycastGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AnycastGatewayState, opts?: pulumi.CustomResourceOptions): AnycastGateway {
        return new AnycastGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'catalystcenter:index/anycastGateway:AnycastGateway';

    /**
     * Returns true if the given object is an instance of AnycastGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AnycastGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AnycastGateway.__pulumiType;
    }

    /**
     * This field cannot be true when vlanName is provided. the vlanName will be generated as
     * ipPoolGroupV4Cidr-virtualNetworkName for non-critical VLANs. for critical VLANs with DATA trafficType, vlanName will be
     * CRITICAL_VLAN. for critical VLANs with VOICE trafficType, vlanName will be VOICE_VLAN
     */
    public readonly autoGenerateVlanName!: pulumi.Output<boolean | undefined>;
    /**
     * Enable/disable critical VLAN. if true, autoGenerateVlanName must also be true. (isCriticalPool is not applicable to
     * INFRA_VN)
     */
    public readonly criticalPool!: pulumi.Output<boolean>;
    /**
     * ID of the fabric to contain this anycast gateway
     */
    public readonly fabricId!: pulumi.Output<string>;
    /**
     * Enable/disable Intra-Subnet Routing (not applicable to INFRA_VN)
     */
    public readonly intraSubnetRoutingEnabled!: pulumi.Output<boolean>;
    /**
     * Enable/disable IP-directed broadcast (not applicable to INFRA_VN)
     */
    public readonly ipDirectedBroadcast!: pulumi.Output<boolean>;
    /**
     * Name of the IP pool associated with the anycast gateway
     */
    public readonly ipPoolName!: pulumi.Output<string>;
    /**
     * Enable/disable layer 2 flooding (not applicable to INFRA_VN)
     */
    public readonly l2FloodingEnabled!: pulumi.Output<boolean>;
    /**
     * Enable/disable multiple IP-to-MAC Addresses (Wireless Bridged-Network Virtual Machine; not applicable to INFRA_VN)
     */
    public readonly multipleIpToMacAddresses!: pulumi.Output<boolean>;
    /**
     * The pool type of the anycast gateway (required for & applicable only to INFRA_VN) - Choices: `EXTENDED_NODE`,
     * `FABRIC_AP`
     */
    public readonly poolType!: pulumi.Output<string | undefined>;
    /**
     * Name of the associated Security Group (not applicable to INFRA_VN)
     */
    public readonly securityGroupName!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable Supplicant-Based Extended Node Onboarding (applicable only to INFRA_VN)
     */
    public readonly supplicantBasedExtendedNodeOnboarding!: pulumi.Output<boolean | undefined>;
    /**
     * TCP maximum segment size adjustment - Range: `500`-`1440`
     */
    public readonly tcpMssAdjustment!: pulumi.Output<number | undefined>;
    /**
     * The type of traffic the anycast gateway serves - Choices: `DATA`, `VOICE`
     */
    public readonly trafficType!: pulumi.Output<string>;
    /**
     * Name of the layer 3 virtual network associated with the anycast gateway. the virtual network must have already been
     * added to the site before creating an anycast gateway with it
     */
    public readonly virtualNetworkName!: pulumi.Output<string>;
    /**
     * ID of the VLAN of the anycast gateway. allowed VLAN range is 2-4093 except for reserved VLANs 1002-1005, 2046, and 4094.
     * if deploying an anycast gateway on a fabric zone, this vlanId must match the vlanId of the corresponding anycast gateway
     * on the fabric site
     */
    public readonly vlanId!: pulumi.Output<number | undefined>;
    /**
     * Name of the VLAN of the anycast gateway
     */
    public readonly vlanName!: pulumi.Output<string>;
    /**
     * Enable/disable fabric-enabled wireless (not applicable to INFRA_VN)
     */
    public readonly wirelessPool!: pulumi.Output<boolean>;

    /**
     * Create a AnycastGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AnycastGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AnycastGatewayArgs | AnycastGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AnycastGatewayState | undefined;
            resourceInputs["autoGenerateVlanName"] = state ? state.autoGenerateVlanName : undefined;
            resourceInputs["criticalPool"] = state ? state.criticalPool : undefined;
            resourceInputs["fabricId"] = state ? state.fabricId : undefined;
            resourceInputs["intraSubnetRoutingEnabled"] = state ? state.intraSubnetRoutingEnabled : undefined;
            resourceInputs["ipDirectedBroadcast"] = state ? state.ipDirectedBroadcast : undefined;
            resourceInputs["ipPoolName"] = state ? state.ipPoolName : undefined;
            resourceInputs["l2FloodingEnabled"] = state ? state.l2FloodingEnabled : undefined;
            resourceInputs["multipleIpToMacAddresses"] = state ? state.multipleIpToMacAddresses : undefined;
            resourceInputs["poolType"] = state ? state.poolType : undefined;
            resourceInputs["securityGroupName"] = state ? state.securityGroupName : undefined;
            resourceInputs["supplicantBasedExtendedNodeOnboarding"] = state ? state.supplicantBasedExtendedNodeOnboarding : undefined;
            resourceInputs["tcpMssAdjustment"] = state ? state.tcpMssAdjustment : undefined;
            resourceInputs["trafficType"] = state ? state.trafficType : undefined;
            resourceInputs["virtualNetworkName"] = state ? state.virtualNetworkName : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
            resourceInputs["vlanName"] = state ? state.vlanName : undefined;
            resourceInputs["wirelessPool"] = state ? state.wirelessPool : undefined;
        } else {
            const args = argsOrState as AnycastGatewayArgs | undefined;
            if ((!args || args.criticalPool === undefined) && !opts.urn) {
                throw new Error("Missing required property 'criticalPool'");
            }
            if ((!args || args.fabricId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fabricId'");
            }
            if ((!args || args.intraSubnetRoutingEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'intraSubnetRoutingEnabled'");
            }
            if ((!args || args.ipDirectedBroadcast === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipDirectedBroadcast'");
            }
            if ((!args || args.ipPoolName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipPoolName'");
            }
            if ((!args || args.l2FloodingEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'l2FloodingEnabled'");
            }
            if ((!args || args.multipleIpToMacAddresses === undefined) && !opts.urn) {
                throw new Error("Missing required property 'multipleIpToMacAddresses'");
            }
            if ((!args || args.trafficType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'trafficType'");
            }
            if ((!args || args.virtualNetworkName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virtualNetworkName'");
            }
            if ((!args || args.vlanName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vlanName'");
            }
            if ((!args || args.wirelessPool === undefined) && !opts.urn) {
                throw new Error("Missing required property 'wirelessPool'");
            }
            resourceInputs["autoGenerateVlanName"] = args ? args.autoGenerateVlanName : undefined;
            resourceInputs["criticalPool"] = args ? args.criticalPool : undefined;
            resourceInputs["fabricId"] = args ? args.fabricId : undefined;
            resourceInputs["intraSubnetRoutingEnabled"] = args ? args.intraSubnetRoutingEnabled : undefined;
            resourceInputs["ipDirectedBroadcast"] = args ? args.ipDirectedBroadcast : undefined;
            resourceInputs["ipPoolName"] = args ? args.ipPoolName : undefined;
            resourceInputs["l2FloodingEnabled"] = args ? args.l2FloodingEnabled : undefined;
            resourceInputs["multipleIpToMacAddresses"] = args ? args.multipleIpToMacAddresses : undefined;
            resourceInputs["poolType"] = args ? args.poolType : undefined;
            resourceInputs["securityGroupName"] = args ? args.securityGroupName : undefined;
            resourceInputs["supplicantBasedExtendedNodeOnboarding"] = args ? args.supplicantBasedExtendedNodeOnboarding : undefined;
            resourceInputs["tcpMssAdjustment"] = args ? args.tcpMssAdjustment : undefined;
            resourceInputs["trafficType"] = args ? args.trafficType : undefined;
            resourceInputs["virtualNetworkName"] = args ? args.virtualNetworkName : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
            resourceInputs["vlanName"] = args ? args.vlanName : undefined;
            resourceInputs["wirelessPool"] = args ? args.wirelessPool : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AnycastGateway.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AnycastGateway resources.
 */
export interface AnycastGatewayState {
    /**
     * This field cannot be true when vlanName is provided. the vlanName will be generated as
     * ipPoolGroupV4Cidr-virtualNetworkName for non-critical VLANs. for critical VLANs with DATA trafficType, vlanName will be
     * CRITICAL_VLAN. for critical VLANs with VOICE trafficType, vlanName will be VOICE_VLAN
     */
    autoGenerateVlanName?: pulumi.Input<boolean>;
    /**
     * Enable/disable critical VLAN. if true, autoGenerateVlanName must also be true. (isCriticalPool is not applicable to
     * INFRA_VN)
     */
    criticalPool?: pulumi.Input<boolean>;
    /**
     * ID of the fabric to contain this anycast gateway
     */
    fabricId?: pulumi.Input<string>;
    /**
     * Enable/disable Intra-Subnet Routing (not applicable to INFRA_VN)
     */
    intraSubnetRoutingEnabled?: pulumi.Input<boolean>;
    /**
     * Enable/disable IP-directed broadcast (not applicable to INFRA_VN)
     */
    ipDirectedBroadcast?: pulumi.Input<boolean>;
    /**
     * Name of the IP pool associated with the anycast gateway
     */
    ipPoolName?: pulumi.Input<string>;
    /**
     * Enable/disable layer 2 flooding (not applicable to INFRA_VN)
     */
    l2FloodingEnabled?: pulumi.Input<boolean>;
    /**
     * Enable/disable multiple IP-to-MAC Addresses (Wireless Bridged-Network Virtual Machine; not applicable to INFRA_VN)
     */
    multipleIpToMacAddresses?: pulumi.Input<boolean>;
    /**
     * The pool type of the anycast gateway (required for & applicable only to INFRA_VN) - Choices: `EXTENDED_NODE`,
     * `FABRIC_AP`
     */
    poolType?: pulumi.Input<string>;
    /**
     * Name of the associated Security Group (not applicable to INFRA_VN)
     */
    securityGroupName?: pulumi.Input<string>;
    /**
     * Enable/disable Supplicant-Based Extended Node Onboarding (applicable only to INFRA_VN)
     */
    supplicantBasedExtendedNodeOnboarding?: pulumi.Input<boolean>;
    /**
     * TCP maximum segment size adjustment - Range: `500`-`1440`
     */
    tcpMssAdjustment?: pulumi.Input<number>;
    /**
     * The type of traffic the anycast gateway serves - Choices: `DATA`, `VOICE`
     */
    trafficType?: pulumi.Input<string>;
    /**
     * Name of the layer 3 virtual network associated with the anycast gateway. the virtual network must have already been
     * added to the site before creating an anycast gateway with it
     */
    virtualNetworkName?: pulumi.Input<string>;
    /**
     * ID of the VLAN of the anycast gateway. allowed VLAN range is 2-4093 except for reserved VLANs 1002-1005, 2046, and 4094.
     * if deploying an anycast gateway on a fabric zone, this vlanId must match the vlanId of the corresponding anycast gateway
     * on the fabric site
     */
    vlanId?: pulumi.Input<number>;
    /**
     * Name of the VLAN of the anycast gateway
     */
    vlanName?: pulumi.Input<string>;
    /**
     * Enable/disable fabric-enabled wireless (not applicable to INFRA_VN)
     */
    wirelessPool?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AnycastGateway resource.
 */
export interface AnycastGatewayArgs {
    /**
     * This field cannot be true when vlanName is provided. the vlanName will be generated as
     * ipPoolGroupV4Cidr-virtualNetworkName for non-critical VLANs. for critical VLANs with DATA trafficType, vlanName will be
     * CRITICAL_VLAN. for critical VLANs with VOICE trafficType, vlanName will be VOICE_VLAN
     */
    autoGenerateVlanName?: pulumi.Input<boolean>;
    /**
     * Enable/disable critical VLAN. if true, autoGenerateVlanName must also be true. (isCriticalPool is not applicable to
     * INFRA_VN)
     */
    criticalPool: pulumi.Input<boolean>;
    /**
     * ID of the fabric to contain this anycast gateway
     */
    fabricId: pulumi.Input<string>;
    /**
     * Enable/disable Intra-Subnet Routing (not applicable to INFRA_VN)
     */
    intraSubnetRoutingEnabled: pulumi.Input<boolean>;
    /**
     * Enable/disable IP-directed broadcast (not applicable to INFRA_VN)
     */
    ipDirectedBroadcast: pulumi.Input<boolean>;
    /**
     * Name of the IP pool associated with the anycast gateway
     */
    ipPoolName: pulumi.Input<string>;
    /**
     * Enable/disable layer 2 flooding (not applicable to INFRA_VN)
     */
    l2FloodingEnabled: pulumi.Input<boolean>;
    /**
     * Enable/disable multiple IP-to-MAC Addresses (Wireless Bridged-Network Virtual Machine; not applicable to INFRA_VN)
     */
    multipleIpToMacAddresses: pulumi.Input<boolean>;
    /**
     * The pool type of the anycast gateway (required for & applicable only to INFRA_VN) - Choices: `EXTENDED_NODE`,
     * `FABRIC_AP`
     */
    poolType?: pulumi.Input<string>;
    /**
     * Name of the associated Security Group (not applicable to INFRA_VN)
     */
    securityGroupName?: pulumi.Input<string>;
    /**
     * Enable/disable Supplicant-Based Extended Node Onboarding (applicable only to INFRA_VN)
     */
    supplicantBasedExtendedNodeOnboarding?: pulumi.Input<boolean>;
    /**
     * TCP maximum segment size adjustment - Range: `500`-`1440`
     */
    tcpMssAdjustment?: pulumi.Input<number>;
    /**
     * The type of traffic the anycast gateway serves - Choices: `DATA`, `VOICE`
     */
    trafficType: pulumi.Input<string>;
    /**
     * Name of the layer 3 virtual network associated with the anycast gateway. the virtual network must have already been
     * added to the site before creating an anycast gateway with it
     */
    virtualNetworkName: pulumi.Input<string>;
    /**
     * ID of the VLAN of the anycast gateway. allowed VLAN range is 2-4093 except for reserved VLANs 1002-1005, 2046, and 4094.
     * if deploying an anycast gateway on a fabric zone, this vlanId must match the vlanId of the corresponding anycast gateway
     * on the fabric site
     */
    vlanId?: pulumi.Input<number>;
    /**
     * Name of the VLAN of the anycast gateway
     */
    vlanName: pulumi.Input<string>;
    /**
     * Enable/disable fabric-enabled wireless (not applicable to INFRA_VN)
     */
    wirelessPool: pulumi.Input<boolean>;
}
