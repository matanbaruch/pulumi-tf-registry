// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBuilding(args?: GetBuildingArgs, opts?: pulumi.InvokeOptions): Promise<GetBuildingResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("catalystcenter:index/getBuilding:getBuilding", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBuilding.
 */
export interface GetBuildingArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getBuilding.
 */
export interface GetBuildingResult {
    readonly address: string;
    readonly country: string;
    readonly id: string;
    readonly latitude: number;
    readonly longitude: number;
    readonly name: string;
    readonly parentName: string;
}
export function getBuildingOutput(args?: GetBuildingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBuildingResult> {
    return pulumi.output(args).apply((a: any) => getBuilding(a, opts))
}

/**
 * A collection of arguments for invoking getBuilding.
 */
export interface GetBuildingOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
