// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFabricDevice(args: GetFabricDeviceArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricDeviceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("catalystcenter:index/getFabricDevice:getFabricDevice", {
        "fabricId": args.fabricId,
        "networkDeviceId": args.networkDeviceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricDevice.
 */
export interface GetFabricDeviceArgs {
    fabricId: string;
    networkDeviceId: string;
}

/**
 * A collection of values returned by getFabricDevice.
 */
export interface GetFabricDeviceResult {
    readonly borderPriority: number;
    readonly borderTypes: string[];
    readonly defaultExit: boolean;
    readonly deviceRoles: string[];
    readonly fabricId: string;
    readonly id: string;
    readonly importExternalRoutes: boolean;
    readonly localAutonomousSystemNumber: string;
    readonly networkDeviceId: string;
    readonly prependAutonomousSystemCount: number;
}
export function getFabricDeviceOutput(args: GetFabricDeviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricDeviceResult> {
    return pulumi.output(args).apply((a: any) => getFabricDevice(a, opts))
}

/**
 * A collection of arguments for invoking getFabricDevice.
 */
export interface GetFabricDeviceOutputArgs {
    fabricId: pulumi.Input<string>;
    networkDeviceId: pulumi.Input<string>;
}
