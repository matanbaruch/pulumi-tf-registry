// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFabricVirtualNetwork(args: GetFabricVirtualNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricVirtualNetworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("catalystcenter:index/getFabricVirtualNetwork:getFabricVirtualNetwork", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricVirtualNetwork.
 */
export interface GetFabricVirtualNetworkArgs {
    id: string;
}

/**
 * A collection of values returned by getFabricVirtualNetwork.
 */
export interface GetFabricVirtualNetworkResult {
    readonly id: string;
    readonly isGuest: boolean;
    readonly sgNames: string[];
    readonly virtualNetworkName: string;
    readonly vmanageVpnId: string;
}
export function getFabricVirtualNetworkOutput(args: GetFabricVirtualNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricVirtualNetworkResult> {
    return pulumi.output(args).apply((a: any) => getFabricVirtualNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getFabricVirtualNetwork.
 */
export interface GetFabricVirtualNetworkOutputArgs {
    id: pulumi.Input<string>;
}
