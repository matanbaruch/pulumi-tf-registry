// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FabricL3HandoffIpTransit extends pulumi.CustomResource {
    /**
     * Get an existing FabricL3HandoffIpTransit resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FabricL3HandoffIpTransitState, opts?: pulumi.CustomResourceOptions): FabricL3HandoffIpTransit {
        return new FabricL3HandoffIpTransit(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'catalystcenter:index/fabricL3HandoffIpTransit:FabricL3HandoffIpTransit';

    /**
     * Returns true if the given object is an instance of FabricL3HandoffIpTransit.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FabricL3HandoffIpTransit {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FabricL3HandoffIpTransit.__pulumiType;
    }

    /**
     * External connectivity ip pool will be used by Catalyst Center to allocate IP address for the connection between the
     * border node and peer
     */
    public readonly externalConnectivityIpPoolName!: pulumi.Output<string | undefined>;
    /**
     * ID of the fabric this device belongs to
     */
    public readonly fabricId!: pulumi.Output<string>;
    /**
     * Interface name of the layer 3 handoff ip transit
     */
    public readonly interfaceName!: pulumi.Output<string | undefined>;
    /**
     * Local ipv4 address for the selected virtual network. Enter the IP addresses and subnet mask in the CIDR notation (IP
     * address/prefix-length). Not applicable if you have already provided an external connectivity ip pool name
     */
    public readonly localIpAddress!: pulumi.Output<string | undefined>;
    /**
     * Local ipv6 address for the selected virtual network. Enter the IP addresses and subnet mask in the CIDR notation (IP
     * address/prefix-length). Not applicable if you have already provided an external connectivity ip pool name
     */
    public readonly localIpv6Address!: pulumi.Output<string | undefined>;
    /**
     * Network device ID of the fabric device
     */
    public readonly networkDeviceId!: pulumi.Output<string>;
    /**
     * Remote ipv4 address for the selected virtual network. Enter the IP addresses and subnet mask in the CIDR notation (IP
     * address/prefix-length). Not applicable if you have already provided an external connectivity ip pool name
     */
    public readonly remoteIpAddress!: pulumi.Output<string | undefined>;
    /**
     * Remote ipv6 address for the selected virtual network. Enter the IP addresses and subnet mask in the CIDR notation (IP
     * address/prefix-length). Not applicable if you have already provided an external connectivity ip pool name
     */
    public readonly remoteIpv6Address!: pulumi.Output<string | undefined>;
    /**
     * TCP maximum segment size (mss) value for the layer 3 handoff. Allowed range is [500-1440]. TCP MSS Adjustment value is
     * applicable for the TCP sessions over both IPv4 and IPv6 - Range: `500`-`1440`
     */
    public readonly tcpMssAdjustment!: pulumi.Output<number | undefined>;
    /**
     * ID of the transit network of the layer 3 handoff ip transit
     */
    public readonly transitNetworkId!: pulumi.Output<string>;
    /**
     * Name of the virtual network associated with this fabric site
     */
    public readonly virtualNetworkName!: pulumi.Output<string>;
    /**
     * VLAN number for the Switch Virtual Interface (SVI) used to establish BGP peering with the external domain for the
     * virtual network. Allowed VLAN range is 2-4094 except for reserved vlans (1, 1002-1005, 2046, 4094)
     */
    public readonly vlanId!: pulumi.Output<number>;

    /**
     * Create a FabricL3HandoffIpTransit resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FabricL3HandoffIpTransitArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FabricL3HandoffIpTransitArgs | FabricL3HandoffIpTransitState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FabricL3HandoffIpTransitState | undefined;
            resourceInputs["externalConnectivityIpPoolName"] = state ? state.externalConnectivityIpPoolName : undefined;
            resourceInputs["fabricId"] = state ? state.fabricId : undefined;
            resourceInputs["interfaceName"] = state ? state.interfaceName : undefined;
            resourceInputs["localIpAddress"] = state ? state.localIpAddress : undefined;
            resourceInputs["localIpv6Address"] = state ? state.localIpv6Address : undefined;
            resourceInputs["networkDeviceId"] = state ? state.networkDeviceId : undefined;
            resourceInputs["remoteIpAddress"] = state ? state.remoteIpAddress : undefined;
            resourceInputs["remoteIpv6Address"] = state ? state.remoteIpv6Address : undefined;
            resourceInputs["tcpMssAdjustment"] = state ? state.tcpMssAdjustment : undefined;
            resourceInputs["transitNetworkId"] = state ? state.transitNetworkId : undefined;
            resourceInputs["virtualNetworkName"] = state ? state.virtualNetworkName : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
        } else {
            const args = argsOrState as FabricL3HandoffIpTransitArgs | undefined;
            if ((!args || args.fabricId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fabricId'");
            }
            if ((!args || args.networkDeviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkDeviceId'");
            }
            if ((!args || args.transitNetworkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitNetworkId'");
            }
            if ((!args || args.virtualNetworkName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virtualNetworkName'");
            }
            if ((!args || args.vlanId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vlanId'");
            }
            resourceInputs["externalConnectivityIpPoolName"] = args ? args.externalConnectivityIpPoolName : undefined;
            resourceInputs["fabricId"] = args ? args.fabricId : undefined;
            resourceInputs["interfaceName"] = args ? args.interfaceName : undefined;
            resourceInputs["localIpAddress"] = args ? args.localIpAddress : undefined;
            resourceInputs["localIpv6Address"] = args ? args.localIpv6Address : undefined;
            resourceInputs["networkDeviceId"] = args ? args.networkDeviceId : undefined;
            resourceInputs["remoteIpAddress"] = args ? args.remoteIpAddress : undefined;
            resourceInputs["remoteIpv6Address"] = args ? args.remoteIpv6Address : undefined;
            resourceInputs["tcpMssAdjustment"] = args ? args.tcpMssAdjustment : undefined;
            resourceInputs["transitNetworkId"] = args ? args.transitNetworkId : undefined;
            resourceInputs["virtualNetworkName"] = args ? args.virtualNetworkName : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FabricL3HandoffIpTransit.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FabricL3HandoffIpTransit resources.
 */
export interface FabricL3HandoffIpTransitState {
    /**
     * External connectivity ip pool will be used by Catalyst Center to allocate IP address for the connection between the
     * border node and peer
     */
    externalConnectivityIpPoolName?: pulumi.Input<string>;
    /**
     * ID of the fabric this device belongs to
     */
    fabricId?: pulumi.Input<string>;
    /**
     * Interface name of the layer 3 handoff ip transit
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Local ipv4 address for the selected virtual network. Enter the IP addresses and subnet mask in the CIDR notation (IP
     * address/prefix-length). Not applicable if you have already provided an external connectivity ip pool name
     */
    localIpAddress?: pulumi.Input<string>;
    /**
     * Local ipv6 address for the selected virtual network. Enter the IP addresses and subnet mask in the CIDR notation (IP
     * address/prefix-length). Not applicable if you have already provided an external connectivity ip pool name
     */
    localIpv6Address?: pulumi.Input<string>;
    /**
     * Network device ID of the fabric device
     */
    networkDeviceId?: pulumi.Input<string>;
    /**
     * Remote ipv4 address for the selected virtual network. Enter the IP addresses and subnet mask in the CIDR notation (IP
     * address/prefix-length). Not applicable if you have already provided an external connectivity ip pool name
     */
    remoteIpAddress?: pulumi.Input<string>;
    /**
     * Remote ipv6 address for the selected virtual network. Enter the IP addresses and subnet mask in the CIDR notation (IP
     * address/prefix-length). Not applicable if you have already provided an external connectivity ip pool name
     */
    remoteIpv6Address?: pulumi.Input<string>;
    /**
     * TCP maximum segment size (mss) value for the layer 3 handoff. Allowed range is [500-1440]. TCP MSS Adjustment value is
     * applicable for the TCP sessions over both IPv4 and IPv6 - Range: `500`-`1440`
     */
    tcpMssAdjustment?: pulumi.Input<number>;
    /**
     * ID of the transit network of the layer 3 handoff ip transit
     */
    transitNetworkId?: pulumi.Input<string>;
    /**
     * Name of the virtual network associated with this fabric site
     */
    virtualNetworkName?: pulumi.Input<string>;
    /**
     * VLAN number for the Switch Virtual Interface (SVI) used to establish BGP peering with the external domain for the
     * virtual network. Allowed VLAN range is 2-4094 except for reserved vlans (1, 1002-1005, 2046, 4094)
     */
    vlanId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a FabricL3HandoffIpTransit resource.
 */
export interface FabricL3HandoffIpTransitArgs {
    /**
     * External connectivity ip pool will be used by Catalyst Center to allocate IP address for the connection between the
     * border node and peer
     */
    externalConnectivityIpPoolName?: pulumi.Input<string>;
    /**
     * ID of the fabric this device belongs to
     */
    fabricId: pulumi.Input<string>;
    /**
     * Interface name of the layer 3 handoff ip transit
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Local ipv4 address for the selected virtual network. Enter the IP addresses and subnet mask in the CIDR notation (IP
     * address/prefix-length). Not applicable if you have already provided an external connectivity ip pool name
     */
    localIpAddress?: pulumi.Input<string>;
    /**
     * Local ipv6 address for the selected virtual network. Enter the IP addresses and subnet mask in the CIDR notation (IP
     * address/prefix-length). Not applicable if you have already provided an external connectivity ip pool name
     */
    localIpv6Address?: pulumi.Input<string>;
    /**
     * Network device ID of the fabric device
     */
    networkDeviceId: pulumi.Input<string>;
    /**
     * Remote ipv4 address for the selected virtual network. Enter the IP addresses and subnet mask in the CIDR notation (IP
     * address/prefix-length). Not applicable if you have already provided an external connectivity ip pool name
     */
    remoteIpAddress?: pulumi.Input<string>;
    /**
     * Remote ipv6 address for the selected virtual network. Enter the IP addresses and subnet mask in the CIDR notation (IP
     * address/prefix-length). Not applicable if you have already provided an external connectivity ip pool name
     */
    remoteIpv6Address?: pulumi.Input<string>;
    /**
     * TCP maximum segment size (mss) value for the layer 3 handoff. Allowed range is [500-1440]. TCP MSS Adjustment value is
     * applicable for the TCP sessions over both IPv4 and IPv6 - Range: `500`-`1440`
     */
    tcpMssAdjustment?: pulumi.Input<number>;
    /**
     * ID of the transit network of the layer 3 handoff ip transit
     */
    transitNetworkId: pulumi.Input<string>;
    /**
     * Name of the virtual network associated with this fabric site
     */
    virtualNetworkName: pulumi.Input<string>;
    /**
     * VLAN number for the Switch Virtual Interface (SVI) used to establish BGP peering with the external domain for the
     * virtual network. Allowed VLAN range is 2-4094 except for reserved vlans (1, 1002-1005, 2046, 4094)
     */
    vlanId: pulumi.Input<number>;
}
