// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSpProfile(args: GetSpProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetSpProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("catalystcenter:index/getSpProfile:getSpProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSpProfile.
 */
export interface GetSpProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getSpProfile.
 */
export interface GetSpProfileResult {
    readonly id: string;
    readonly model: string;
    readonly name: string;
    readonly wanProvider: string;
}
export function getSpProfileOutput(args: GetSpProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSpProfileResult> {
    return pulumi.output(args).apply((a: any) => getSpProfile(a, opts))
}

/**
 * A collection of arguments for invoking getSpProfile.
 */
export interface GetSpProfileOutputArgs {
    id: pulumi.Input<string>;
}
