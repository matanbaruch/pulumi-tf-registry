// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Building extends pulumi.CustomResource {
    /**
     * Get an existing Building resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BuildingState, opts?: pulumi.CustomResourceOptions): Building {
        return new Building(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'catalystcenter:index/building:Building';

    /**
     * Returns true if the given object is an instance of Building.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Building {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Building.__pulumiType;
    }

    /**
     * The address of the building
     */
    public readonly address!: pulumi.Output<string | undefined>;
    /**
     * The country of the building
     */
    public readonly country!: pulumi.Output<string | undefined>;
    /**
     * Latitude
     */
    public readonly latitude!: pulumi.Output<number | undefined>;
    /**
     * Longitude
     */
    public readonly longitude!: pulumi.Output<number | undefined>;
    /**
     * The name of the building
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The path of the parent area, e.g. `Global/Area5`. `Global` in case of root area.
     */
    public readonly parentName!: pulumi.Output<string>;

    /**
     * Create a Building resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BuildingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BuildingArgs | BuildingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BuildingState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["country"] = state ? state.country : undefined;
            resourceInputs["latitude"] = state ? state.latitude : undefined;
            resourceInputs["longitude"] = state ? state.longitude : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parentName"] = state ? state.parentName : undefined;
        } else {
            const args = argsOrState as BuildingArgs | undefined;
            if ((!args || args.parentName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parentName'");
            }
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["country"] = args ? args.country : undefined;
            resourceInputs["latitude"] = args ? args.latitude : undefined;
            resourceInputs["longitude"] = args ? args.longitude : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentName"] = args ? args.parentName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Building.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Building resources.
 */
export interface BuildingState {
    /**
     * The address of the building
     */
    address?: pulumi.Input<string>;
    /**
     * The country of the building
     */
    country?: pulumi.Input<string>;
    /**
     * Latitude
     */
    latitude?: pulumi.Input<number>;
    /**
     * Longitude
     */
    longitude?: pulumi.Input<number>;
    /**
     * The name of the building
     */
    name?: pulumi.Input<string>;
    /**
     * The path of the parent area, e.g. `Global/Area5`. `Global` in case of root area.
     */
    parentName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Building resource.
 */
export interface BuildingArgs {
    /**
     * The address of the building
     */
    address?: pulumi.Input<string>;
    /**
     * The country of the building
     */
    country?: pulumi.Input<string>;
    /**
     * Latitude
     */
    latitude?: pulumi.Input<number>;
    /**
     * Longitude
     */
    longitude?: pulumi.Input<number>;
    /**
     * The name of the building
     */
    name?: pulumi.Input<string>;
    /**
     * The path of the parent area, e.g. `Global/Area5`. `Global` in case of root area.
     */
    parentName: pulumi.Input<string>;
}
