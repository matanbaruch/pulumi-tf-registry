// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpPoolReservation(args: GetIpPoolReservationArgs, opts?: pulumi.InvokeOptions): Promise<GetIpPoolReservationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("catalystcenter:index/getIpPoolReservation:getIpPoolReservation", {
        "id": args.id,
        "siteId": args.siteId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpPoolReservation.
 */
export interface GetIpPoolReservationArgs {
    id: string;
    siteId: string;
}

/**
 * A collection of values returned by getIpPoolReservation.
 */
export interface GetIpPoolReservationResult {
    readonly id: string;
    readonly ipv4DhcpServers: string[];
    readonly ipv4DnsServers: string[];
    readonly ipv4Gateway: string;
    readonly ipv4GlobalPool: string;
    readonly ipv4Prefix: boolean;
    readonly ipv4PrefixLength: number;
    readonly ipv4Subnet: string;
    readonly ipv4TotalHost: number;
    readonly ipv6AddressSpace: boolean;
    readonly ipv6DhcpServers: string[];
    readonly ipv6DnsServers: string[];
    readonly ipv6Gateway: string;
    readonly ipv6GlobalPool: string;
    readonly ipv6Prefix: boolean;
    readonly ipv6PrefixLength: number;
    readonly ipv6Subnet: string;
    readonly ipv6TotalHost: number;
    readonly name: string;
    readonly siteId: string;
    readonly slaacSupport: boolean;
    readonly type: string;
}
export function getIpPoolReservationOutput(args: GetIpPoolReservationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpPoolReservationResult> {
    return pulumi.output(args).apply((a: any) => getIpPoolReservation(a, opts))
}

/**
 * A collection of arguments for invoking getIpPoolReservation.
 */
export interface GetIpPoolReservationOutputArgs {
    id: pulumi.Input<string>;
    siteId: pulumi.Input<string>;
}
