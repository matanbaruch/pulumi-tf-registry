// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TransitPeerNetwork extends pulumi.CustomResource {
    /**
     * Get an existing TransitPeerNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransitPeerNetworkState, opts?: pulumi.CustomResourceOptions): TransitPeerNetwork {
        return new TransitPeerNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'catalystcenter:index/transitPeerNetwork:TransitPeerNetwork';

    /**
     * Returns true if the given object is an instance of TransitPeerNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitPeerNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitPeerNetwork.__pulumiType;
    }

    /**
     * Autonomous System Number
     */
    public readonly autonomousSystemNumber!: pulumi.Output<string | undefined>;
    /**
     * Routing Protocol Name - Choices: `BGP`
     */
    public readonly routingProtocolName!: pulumi.Output<string | undefined>;
    /**
     * Transit Control Plane Settings info
     */
    public readonly transitControlPlaneSettings!: pulumi.Output<outputs.TransitPeerNetworkTransitControlPlaneSetting[] | undefined>;
    /**
     * Transit Peer Network Name
     */
    public readonly transitPeerNetworkName!: pulumi.Output<string>;
    /**
     * Transit Peer Network Type - Choices: `ip_transit`, `sda_transit_with_lisp_bgp`, `sda_transit_with_pub_sub`
     */
    public readonly transitPeerNetworkType!: pulumi.Output<string>;

    /**
     * Create a TransitPeerNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitPeerNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransitPeerNetworkArgs | TransitPeerNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransitPeerNetworkState | undefined;
            resourceInputs["autonomousSystemNumber"] = state ? state.autonomousSystemNumber : undefined;
            resourceInputs["routingProtocolName"] = state ? state.routingProtocolName : undefined;
            resourceInputs["transitControlPlaneSettings"] = state ? state.transitControlPlaneSettings : undefined;
            resourceInputs["transitPeerNetworkName"] = state ? state.transitPeerNetworkName : undefined;
            resourceInputs["transitPeerNetworkType"] = state ? state.transitPeerNetworkType : undefined;
        } else {
            const args = argsOrState as TransitPeerNetworkArgs | undefined;
            if ((!args || args.transitPeerNetworkName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitPeerNetworkName'");
            }
            if ((!args || args.transitPeerNetworkType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitPeerNetworkType'");
            }
            resourceInputs["autonomousSystemNumber"] = args ? args.autonomousSystemNumber : undefined;
            resourceInputs["routingProtocolName"] = args ? args.routingProtocolName : undefined;
            resourceInputs["transitControlPlaneSettings"] = args ? args.transitControlPlaneSettings : undefined;
            resourceInputs["transitPeerNetworkName"] = args ? args.transitPeerNetworkName : undefined;
            resourceInputs["transitPeerNetworkType"] = args ? args.transitPeerNetworkType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitPeerNetwork.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TransitPeerNetwork resources.
 */
export interface TransitPeerNetworkState {
    /**
     * Autonomous System Number
     */
    autonomousSystemNumber?: pulumi.Input<string>;
    /**
     * Routing Protocol Name - Choices: `BGP`
     */
    routingProtocolName?: pulumi.Input<string>;
    /**
     * Transit Control Plane Settings info
     */
    transitControlPlaneSettings?: pulumi.Input<pulumi.Input<inputs.TransitPeerNetworkTransitControlPlaneSetting>[]>;
    /**
     * Transit Peer Network Name
     */
    transitPeerNetworkName?: pulumi.Input<string>;
    /**
     * Transit Peer Network Type - Choices: `ip_transit`, `sda_transit_with_lisp_bgp`, `sda_transit_with_pub_sub`
     */
    transitPeerNetworkType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TransitPeerNetwork resource.
 */
export interface TransitPeerNetworkArgs {
    /**
     * Autonomous System Number
     */
    autonomousSystemNumber?: pulumi.Input<string>;
    /**
     * Routing Protocol Name - Choices: `BGP`
     */
    routingProtocolName?: pulumi.Input<string>;
    /**
     * Transit Control Plane Settings info
     */
    transitControlPlaneSettings?: pulumi.Input<pulumi.Input<inputs.TransitPeerNetworkTransitControlPlaneSetting>[]>;
    /**
     * Transit Peer Network Name
     */
    transitPeerNetworkName: pulumi.Input<string>;
    /**
     * Transit Peer Network Type - Choices: `ip_transit`, `sda_transit_with_lisp_bgp`, `sda_transit_with_pub_sub`
     */
    transitPeerNetworkType: pulumi.Input<string>;
}
