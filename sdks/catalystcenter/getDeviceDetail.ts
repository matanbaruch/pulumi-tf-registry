// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDeviceDetail(args: GetDeviceDetailArgs, opts?: pulumi.InvokeOptions): Promise<GetDeviceDetailResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("catalystcenter:index/getDeviceDetail:getDeviceDetail", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDeviceDetail.
 */
export interface GetDeviceDetailArgs {
    id: string;
}

/**
 * A collection of values returned by getDeviceDetail.
 */
export interface GetDeviceDetailResult {
    readonly collectionStatus: string;
    readonly communicationState: string;
    readonly cpu: string;
    readonly deviceGroupHierarchyId: string;
    readonly deviceSeries: string;
    readonly haStatus: string;
    readonly id: string;
    readonly location: string;
    readonly macAddress: string;
    readonly maintenanceMode: boolean;
    readonly managementIpAddress: string;
    readonly memory: string;
    readonly nwDeviceFamily: string;
    readonly nwDeviceId: string;
    readonly nwDeviceName: string;
    readonly nwDeviceRole: string;
    readonly nwDeviceType: string;
    readonly osType: string;
    readonly overallHealth: number;
    readonly platformId: string;
    readonly policyTagName: string;
    readonly serialNumber: string;
    readonly siteHierarchyGraphId: string;
    readonly softwareVersion: string;
    readonly tagIdLists: string[];
}
export function getDeviceDetailOutput(args: GetDeviceDetailOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeviceDetailResult> {
    return pulumi.output(args).apply((a: any) => getDeviceDetail(a, opts))
}

/**
 * A collection of arguments for invoking getDeviceDetail.
 */
export interface GetDeviceDetailOutputArgs {
    id: pulumi.Input<string>;
}
