// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AssignCredentials extends pulumi.CustomResource {
    /**
     * Get an existing AssignCredentials resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AssignCredentialsState, opts?: pulumi.CustomResourceOptions): AssignCredentials {
        return new AssignCredentials(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'catalystcenter:index/assignCredentials:AssignCredentials';

    /**
     * Returns true if the given object is an instance of AssignCredentials.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AssignCredentials {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AssignCredentials.__pulumiType;
    }

    /**
     * The ID of the CLI credentials
     */
    public readonly cliId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the HTTPS read credentials
     */
    public readonly httpsReadId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the HTTPS write credentials
     */
    public readonly httpsWriteId!: pulumi.Output<string | undefined>;
    /**
     * The site ID
     */
    public readonly siteId!: pulumi.Output<string>;
    /**
     * The ID of the SNMPv2 read credentials
     */
    public readonly snmpV2ReadId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the SNMPv2 write credentials
     */
    public readonly snmpV2WriteId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the SNMPv3 credentials
     */
    public readonly snmpV3Id!: pulumi.Output<string | undefined>;

    /**
     * Create a AssignCredentials resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AssignCredentialsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AssignCredentialsArgs | AssignCredentialsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AssignCredentialsState | undefined;
            resourceInputs["cliId"] = state ? state.cliId : undefined;
            resourceInputs["httpsReadId"] = state ? state.httpsReadId : undefined;
            resourceInputs["httpsWriteId"] = state ? state.httpsWriteId : undefined;
            resourceInputs["siteId"] = state ? state.siteId : undefined;
            resourceInputs["snmpV2ReadId"] = state ? state.snmpV2ReadId : undefined;
            resourceInputs["snmpV2WriteId"] = state ? state.snmpV2WriteId : undefined;
            resourceInputs["snmpV3Id"] = state ? state.snmpV3Id : undefined;
        } else {
            const args = argsOrState as AssignCredentialsArgs | undefined;
            if ((!args || args.siteId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteId'");
            }
            resourceInputs["cliId"] = args ? args.cliId : undefined;
            resourceInputs["httpsReadId"] = args ? args.httpsReadId : undefined;
            resourceInputs["httpsWriteId"] = args ? args.httpsWriteId : undefined;
            resourceInputs["siteId"] = args ? args.siteId : undefined;
            resourceInputs["snmpV2ReadId"] = args ? args.snmpV2ReadId : undefined;
            resourceInputs["snmpV2WriteId"] = args ? args.snmpV2WriteId : undefined;
            resourceInputs["snmpV3Id"] = args ? args.snmpV3Id : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AssignCredentials.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AssignCredentials resources.
 */
export interface AssignCredentialsState {
    /**
     * The ID of the CLI credentials
     */
    cliId?: pulumi.Input<string>;
    /**
     * The ID of the HTTPS read credentials
     */
    httpsReadId?: pulumi.Input<string>;
    /**
     * The ID of the HTTPS write credentials
     */
    httpsWriteId?: pulumi.Input<string>;
    /**
     * The site ID
     */
    siteId?: pulumi.Input<string>;
    /**
     * The ID of the SNMPv2 read credentials
     */
    snmpV2ReadId?: pulumi.Input<string>;
    /**
     * The ID of the SNMPv2 write credentials
     */
    snmpV2WriteId?: pulumi.Input<string>;
    /**
     * The ID of the SNMPv3 credentials
     */
    snmpV3Id?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AssignCredentials resource.
 */
export interface AssignCredentialsArgs {
    /**
     * The ID of the CLI credentials
     */
    cliId?: pulumi.Input<string>;
    /**
     * The ID of the HTTPS read credentials
     */
    httpsReadId?: pulumi.Input<string>;
    /**
     * The ID of the HTTPS write credentials
     */
    httpsWriteId?: pulumi.Input<string>;
    /**
     * The site ID
     */
    siteId: pulumi.Input<string>;
    /**
     * The ID of the SNMPv2 read credentials
     */
    snmpV2ReadId?: pulumi.Input<string>;
    /**
     * The ID of the SNMPv2 write credentials
     */
    snmpV2WriteId?: pulumi.Input<string>;
    /**
     * The ID of the SNMPv3 credentials
     */
    snmpV3Id?: pulumi.Input<string>;
}
