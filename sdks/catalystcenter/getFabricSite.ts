// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFabricSite(args?: GetFabricSiteArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricSiteResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("catalystcenter:index/getFabricSite:getFabricSite", {
        "id": args.id,
        "siteId": args.siteId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricSite.
 */
export interface GetFabricSiteArgs {
    id?: string;
    siteId?: string;
}

/**
 * A collection of values returned by getFabricSite.
 */
export interface GetFabricSiteResult {
    readonly authenticationProfileName: string;
    readonly id: string;
    readonly pubSubEnabled: boolean;
    readonly siteId: string;
}
export function getFabricSiteOutput(args?: GetFabricSiteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricSiteResult> {
    return pulumi.output(args).apply((a: any) => getFabricSite(a, opts))
}

/**
 * A collection of arguments for invoking getFabricSite.
 */
export interface GetFabricSiteOutputArgs {
    id?: pulumi.Input<string>;
    siteId?: pulumi.Input<string>;
}
