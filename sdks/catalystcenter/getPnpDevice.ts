// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPnpDevice(args?: GetPnpDeviceArgs, opts?: pulumi.InvokeOptions): Promise<GetPnpDeviceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("catalystcenter:index/getPnpDevice:getPnpDevice", {
        "id": args.id,
        "serialNumber": args.serialNumber,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPnpDevice.
 */
export interface GetPnpDeviceArgs {
    id?: string;
    serialNumber?: string;
}

/**
 * A collection of values returned by getPnpDevice.
 */
export interface GetPnpDeviceResult {
    readonly hostname: string;
    readonly id: string;
    readonly pid: string;
    readonly serialNumber: string;
    readonly stack: boolean;
}
export function getPnpDeviceOutput(args?: GetPnpDeviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPnpDeviceResult> {
    return pulumi.output(args).apply((a: any) => getPnpDevice(a, opts))
}

/**
 * A collection of arguments for invoking getPnpDevice.
 */
export interface GetPnpDeviceOutputArgs {
    id?: pulumi.Input<string>;
    serialNumber?: pulumi.Input<string>;
}
