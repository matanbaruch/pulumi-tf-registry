// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDiscovery(args: GetDiscoveryArgs, opts?: pulumi.InvokeOptions): Promise<GetDiscoveryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("catalystcenter:index/getDiscovery:getDiscovery", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDiscovery.
 */
export interface GetDiscoveryArgs {
    id: string;
}

/**
 * A collection of values returned by getDiscovery.
 */
export interface GetDiscoveryResult {
    readonly cdpLevel: number;
    readonly discoveryType: string;
    readonly enablePasswordLists: string[];
    readonly globalCredentialIdLists: string[];
    readonly httpReadCredential: string;
    readonly httpWriteCredential: string;
    readonly id: string;
    readonly ipAddressList: string;
    readonly ipFilterLists: string[];
    readonly lldpLevel: number;
    readonly name: string;
    readonly netconfPort: string;
    readonly passwordLists: string[];
    readonly preferredIpMethod: string;
    readonly protocolOrder: string;
    readonly retry: number;
    readonly snmpAuthPassphrase: string;
    readonly snmpAuthProtocol: string;
    readonly snmpMode: string;
    readonly snmpPrivPassphrase: string;
    readonly snmpPrivProtocol: string;
    readonly snmpRoCommunity: string;
    readonly snmpRoCommunityDesc: string;
    readonly snmpRwCommunity: string;
    readonly snmpRwCommunityDesc: string;
    readonly snmpUserName: string;
    readonly snmpVersion: string;
    readonly timeoutSeconds: number;
    readonly userNameLists: string[];
}
export function getDiscoveryOutput(args: GetDiscoveryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDiscoveryResult> {
    return pulumi.output(args).apply((a: any) => getDiscovery(a, opts))
}

/**
 * A collection of arguments for invoking getDiscovery.
 */
export interface GetDiscoveryOutputArgs {
    id: pulumi.Input<string>;
}
