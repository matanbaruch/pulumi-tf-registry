// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFabricL3HandoffIpTransit(args: GetFabricL3HandoffIpTransitArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricL3HandoffIpTransitResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("catalystcenter:index/getFabricL3HandoffIpTransit:getFabricL3HandoffIpTransit", {
        "fabricId": args.fabricId,
        "id": args.id,
        "networkDeviceId": args.networkDeviceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricL3HandoffIpTransit.
 */
export interface GetFabricL3HandoffIpTransitArgs {
    fabricId: string;
    id: string;
    networkDeviceId: string;
}

/**
 * A collection of values returned by getFabricL3HandoffIpTransit.
 */
export interface GetFabricL3HandoffIpTransitResult {
    readonly externalConnectivityIpPoolName: string;
    readonly fabricId: string;
    readonly id: string;
    readonly interfaceName: string;
    readonly localIpAddress: string;
    readonly localIpv6Address: string;
    readonly networkDeviceId: string;
    readonly remoteIpAddress: string;
    readonly remoteIpv6Address: string;
    readonly tcpMssAdjustment: number;
    readonly transitNetworkId: string;
    readonly virtualNetworkName: string;
    readonly vlanId: number;
}
export function getFabricL3HandoffIpTransitOutput(args: GetFabricL3HandoffIpTransitOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricL3HandoffIpTransitResult> {
    return pulumi.output(args).apply((a: any) => getFabricL3HandoffIpTransit(a, opts))
}

/**
 * A collection of arguments for invoking getFabricL3HandoffIpTransit.
 */
export interface GetFabricL3HandoffIpTransitOutputArgs {
    fabricId: pulumi.Input<string>;
    id: pulumi.Input<string>;
    networkDeviceId: pulumi.Input<string>;
}
