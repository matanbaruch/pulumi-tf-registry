// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IpPoolReservation extends pulumi.CustomResource {
    /**
     * Get an existing IpPoolReservation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpPoolReservationState, opts?: pulumi.CustomResourceOptions): IpPoolReservation {
        return new IpPoolReservation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'catalystcenter:index/ipPoolReservation:IpPoolReservation';

    /**
     * Returns true if the given object is an instance of IpPoolReservation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpPoolReservation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpPoolReservation.__pulumiType;
    }

    /**
     * List of DHCP Server IPs
     */
    public readonly ipv4DhcpServers!: pulumi.Output<string[] | undefined>;
    /**
     * List of DNS Server IPs
     */
    public readonly ipv4DnsServers!: pulumi.Output<string[] | undefined>;
    /**
     * The gateway for the IP pool reservation
     */
    public readonly ipv4Gateway!: pulumi.Output<string | undefined>;
    /**
     * IPv4 Global pool address with cidr, example: 175.175.0.0/16
     */
    public readonly ipv4GlobalPool!: pulumi.Output<string>;
    /**
     * If this value is `true`, the `ipv4_prefix_length` attribute must be provided, if it is `false`, the `ipv4_total_host`
     * attribute must be provided
     */
    public readonly ipv4Prefix!: pulumi.Output<boolean>;
    /**
     * The IPv4 prefix length is required when `ipv4_prefix` value is `true`.
     */
    public readonly ipv4PrefixLength!: pulumi.Output<number | undefined>;
    /**
     * The IPv4 subnet
     */
    public readonly ipv4Subnet!: pulumi.Output<string | undefined>;
    /**
     * The total number of IPv4 hosts
     */
    public readonly ipv4TotalHost!: pulumi.Output<number | undefined>;
    /**
     * If the value is `false` only IPv4 input are required, otherwise both IPv6 and IPv4 are required
     */
    public readonly ipv6AddressSpace!: pulumi.Output<boolean | undefined>;
    /**
     * List of DHCP Server IPs
     */
    public readonly ipv6DhcpServers!: pulumi.Output<string[] | undefined>;
    /**
     * List of DNS Server IPs
     */
    public readonly ipv6DnsServers!: pulumi.Output<string[] | undefined>;
    /**
     * The gateway for the IP pool reservation
     */
    public readonly ipv6Gateway!: pulumi.Output<string | undefined>;
    /**
     * IPv6 Global pool address with cidr, example: 2001:db8:85a3::/64
     */
    public readonly ipv6GlobalPool!: pulumi.Output<string | undefined>;
    /**
     * If this value is `true`, the `ipv6_prefix_length` attribute must be provided, if it is `false`, the `ipv6_total_host`
     * attribute must be provided
     */
    public readonly ipv6Prefix!: pulumi.Output<boolean | undefined>;
    /**
     * The IPv6 prefix length is required when `ipv6_prefix` value is `true`.
     */
    public readonly ipv6PrefixLength!: pulumi.Output<number | undefined>;
    /**
     * The IPv6 subnet, for example `2001:db8:85a3:0:100::`
     */
    public readonly ipv6Subnet!: pulumi.Output<string | undefined>;
    /**
     * The total number of IPv6 hosts
     */
    public readonly ipv6TotalHost!: pulumi.Output<number | undefined>;
    /**
     * The name of the IP pool reservation
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The site ID
     */
    public readonly siteId!: pulumi.Output<string | undefined>;
    /**
     * Enable SLAAC support
     */
    public readonly slaacSupport!: pulumi.Output<boolean | undefined>;
    /**
     * The type of the IP pool reservation - Choices: `Generic`, `LAN`, `WAN`, `management`, `service`
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a IpPoolReservation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpPoolReservationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpPoolReservationArgs | IpPoolReservationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpPoolReservationState | undefined;
            resourceInputs["ipv4DhcpServers"] = state ? state.ipv4DhcpServers : undefined;
            resourceInputs["ipv4DnsServers"] = state ? state.ipv4DnsServers : undefined;
            resourceInputs["ipv4Gateway"] = state ? state.ipv4Gateway : undefined;
            resourceInputs["ipv4GlobalPool"] = state ? state.ipv4GlobalPool : undefined;
            resourceInputs["ipv4Prefix"] = state ? state.ipv4Prefix : undefined;
            resourceInputs["ipv4PrefixLength"] = state ? state.ipv4PrefixLength : undefined;
            resourceInputs["ipv4Subnet"] = state ? state.ipv4Subnet : undefined;
            resourceInputs["ipv4TotalHost"] = state ? state.ipv4TotalHost : undefined;
            resourceInputs["ipv6AddressSpace"] = state ? state.ipv6AddressSpace : undefined;
            resourceInputs["ipv6DhcpServers"] = state ? state.ipv6DhcpServers : undefined;
            resourceInputs["ipv6DnsServers"] = state ? state.ipv6DnsServers : undefined;
            resourceInputs["ipv6Gateway"] = state ? state.ipv6Gateway : undefined;
            resourceInputs["ipv6GlobalPool"] = state ? state.ipv6GlobalPool : undefined;
            resourceInputs["ipv6Prefix"] = state ? state.ipv6Prefix : undefined;
            resourceInputs["ipv6PrefixLength"] = state ? state.ipv6PrefixLength : undefined;
            resourceInputs["ipv6Subnet"] = state ? state.ipv6Subnet : undefined;
            resourceInputs["ipv6TotalHost"] = state ? state.ipv6TotalHost : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["siteId"] = state ? state.siteId : undefined;
            resourceInputs["slaacSupport"] = state ? state.slaacSupport : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as IpPoolReservationArgs | undefined;
            if ((!args || args.ipv4GlobalPool === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipv4GlobalPool'");
            }
            if ((!args || args.ipv4Prefix === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipv4Prefix'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["ipv4DhcpServers"] = args ? args.ipv4DhcpServers : undefined;
            resourceInputs["ipv4DnsServers"] = args ? args.ipv4DnsServers : undefined;
            resourceInputs["ipv4Gateway"] = args ? args.ipv4Gateway : undefined;
            resourceInputs["ipv4GlobalPool"] = args ? args.ipv4GlobalPool : undefined;
            resourceInputs["ipv4Prefix"] = args ? args.ipv4Prefix : undefined;
            resourceInputs["ipv4PrefixLength"] = args ? args.ipv4PrefixLength : undefined;
            resourceInputs["ipv4Subnet"] = args ? args.ipv4Subnet : undefined;
            resourceInputs["ipv4TotalHost"] = args ? args.ipv4TotalHost : undefined;
            resourceInputs["ipv6AddressSpace"] = args ? args.ipv6AddressSpace : undefined;
            resourceInputs["ipv6DhcpServers"] = args ? args.ipv6DhcpServers : undefined;
            resourceInputs["ipv6DnsServers"] = args ? args.ipv6DnsServers : undefined;
            resourceInputs["ipv6Gateway"] = args ? args.ipv6Gateway : undefined;
            resourceInputs["ipv6GlobalPool"] = args ? args.ipv6GlobalPool : undefined;
            resourceInputs["ipv6Prefix"] = args ? args.ipv6Prefix : undefined;
            resourceInputs["ipv6PrefixLength"] = args ? args.ipv6PrefixLength : undefined;
            resourceInputs["ipv6Subnet"] = args ? args.ipv6Subnet : undefined;
            resourceInputs["ipv6TotalHost"] = args ? args.ipv6TotalHost : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["siteId"] = args ? args.siteId : undefined;
            resourceInputs["slaacSupport"] = args ? args.slaacSupport : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpPoolReservation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IpPoolReservation resources.
 */
export interface IpPoolReservationState {
    /**
     * List of DHCP Server IPs
     */
    ipv4DhcpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of DNS Server IPs
     */
    ipv4DnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The gateway for the IP pool reservation
     */
    ipv4Gateway?: pulumi.Input<string>;
    /**
     * IPv4 Global pool address with cidr, example: 175.175.0.0/16
     */
    ipv4GlobalPool?: pulumi.Input<string>;
    /**
     * If this value is `true`, the `ipv4_prefix_length` attribute must be provided, if it is `false`, the `ipv4_total_host`
     * attribute must be provided
     */
    ipv4Prefix?: pulumi.Input<boolean>;
    /**
     * The IPv4 prefix length is required when `ipv4_prefix` value is `true`.
     */
    ipv4PrefixLength?: pulumi.Input<number>;
    /**
     * The IPv4 subnet
     */
    ipv4Subnet?: pulumi.Input<string>;
    /**
     * The total number of IPv4 hosts
     */
    ipv4TotalHost?: pulumi.Input<number>;
    /**
     * If the value is `false` only IPv4 input are required, otherwise both IPv6 and IPv4 are required
     */
    ipv6AddressSpace?: pulumi.Input<boolean>;
    /**
     * List of DHCP Server IPs
     */
    ipv6DhcpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of DNS Server IPs
     */
    ipv6DnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The gateway for the IP pool reservation
     */
    ipv6Gateway?: pulumi.Input<string>;
    /**
     * IPv6 Global pool address with cidr, example: 2001:db8:85a3::/64
     */
    ipv6GlobalPool?: pulumi.Input<string>;
    /**
     * If this value is `true`, the `ipv6_prefix_length` attribute must be provided, if it is `false`, the `ipv6_total_host`
     * attribute must be provided
     */
    ipv6Prefix?: pulumi.Input<boolean>;
    /**
     * The IPv6 prefix length is required when `ipv6_prefix` value is `true`.
     */
    ipv6PrefixLength?: pulumi.Input<number>;
    /**
     * The IPv6 subnet, for example `2001:db8:85a3:0:100::`
     */
    ipv6Subnet?: pulumi.Input<string>;
    /**
     * The total number of IPv6 hosts
     */
    ipv6TotalHost?: pulumi.Input<number>;
    /**
     * The name of the IP pool reservation
     */
    name?: pulumi.Input<string>;
    /**
     * The site ID
     */
    siteId?: pulumi.Input<string>;
    /**
     * Enable SLAAC support
     */
    slaacSupport?: pulumi.Input<boolean>;
    /**
     * The type of the IP pool reservation - Choices: `Generic`, `LAN`, `WAN`, `management`, `service`
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpPoolReservation resource.
 */
export interface IpPoolReservationArgs {
    /**
     * List of DHCP Server IPs
     */
    ipv4DhcpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of DNS Server IPs
     */
    ipv4DnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The gateway for the IP pool reservation
     */
    ipv4Gateway?: pulumi.Input<string>;
    /**
     * IPv4 Global pool address with cidr, example: 175.175.0.0/16
     */
    ipv4GlobalPool: pulumi.Input<string>;
    /**
     * If this value is `true`, the `ipv4_prefix_length` attribute must be provided, if it is `false`, the `ipv4_total_host`
     * attribute must be provided
     */
    ipv4Prefix: pulumi.Input<boolean>;
    /**
     * The IPv4 prefix length is required when `ipv4_prefix` value is `true`.
     */
    ipv4PrefixLength?: pulumi.Input<number>;
    /**
     * The IPv4 subnet
     */
    ipv4Subnet?: pulumi.Input<string>;
    /**
     * The total number of IPv4 hosts
     */
    ipv4TotalHost?: pulumi.Input<number>;
    /**
     * If the value is `false` only IPv4 input are required, otherwise both IPv6 and IPv4 are required
     */
    ipv6AddressSpace?: pulumi.Input<boolean>;
    /**
     * List of DHCP Server IPs
     */
    ipv6DhcpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of DNS Server IPs
     */
    ipv6DnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The gateway for the IP pool reservation
     */
    ipv6Gateway?: pulumi.Input<string>;
    /**
     * IPv6 Global pool address with cidr, example: 2001:db8:85a3::/64
     */
    ipv6GlobalPool?: pulumi.Input<string>;
    /**
     * If this value is `true`, the `ipv6_prefix_length` attribute must be provided, if it is `false`, the `ipv6_total_host`
     * attribute must be provided
     */
    ipv6Prefix?: pulumi.Input<boolean>;
    /**
     * The IPv6 prefix length is required when `ipv6_prefix` value is `true`.
     */
    ipv6PrefixLength?: pulumi.Input<number>;
    /**
     * The IPv6 subnet, for example `2001:db8:85a3:0:100::`
     */
    ipv6Subnet?: pulumi.Input<string>;
    /**
     * The total number of IPv6 hosts
     */
    ipv6TotalHost?: pulumi.Input<number>;
    /**
     * The name of the IP pool reservation
     */
    name?: pulumi.Input<string>;
    /**
     * The site ID
     */
    siteId?: pulumi.Input<string>;
    /**
     * Enable SLAAC support
     */
    slaacSupport?: pulumi.Input<boolean>;
    /**
     * The type of the IP pool reservation - Choices: `Generic`, `LAN`, `WAN`, `management`, `service`
     */
    type: pulumi.Input<string>;
}
