// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTransitPeerNetwork(args: GetTransitPeerNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetTransitPeerNetworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("catalystcenter:index/getTransitPeerNetwork:getTransitPeerNetwork", {
        "transitPeerNetworkName": args.transitPeerNetworkName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTransitPeerNetwork.
 */
export interface GetTransitPeerNetworkArgs {
    transitPeerNetworkName: string;
}

/**
 * A collection of values returned by getTransitPeerNetwork.
 */
export interface GetTransitPeerNetworkResult {
    readonly autonomousSystemNumber: string;
    readonly id: string;
    readonly routingProtocolName: string;
    readonly transitControlPlaneSettings: outputs.GetTransitPeerNetworkTransitControlPlaneSetting[];
    readonly transitPeerNetworkName: string;
    readonly transitPeerNetworkType: string;
}
export function getTransitPeerNetworkOutput(args: GetTransitPeerNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransitPeerNetworkResult> {
    return pulumi.output(args).apply((a: any) => getTransitPeerNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getTransitPeerNetwork.
 */
export interface GetTransitPeerNetworkOutputArgs {
    transitPeerNetworkName: pulumi.Input<string>;
}
