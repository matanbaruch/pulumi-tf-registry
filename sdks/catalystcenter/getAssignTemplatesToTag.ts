// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAssignTemplatesToTag(args: GetAssignTemplatesToTagArgs, opts?: pulumi.InvokeOptions): Promise<GetAssignTemplatesToTagResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("catalystcenter:index/getAssignTemplatesToTag:getAssignTemplatesToTag", {
        "tagId": args.tagId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAssignTemplatesToTag.
 */
export interface GetAssignTemplatesToTagArgs {
    tagId: string;
}

/**
 * A collection of values returned by getAssignTemplatesToTag.
 */
export interface GetAssignTemplatesToTagResult {
    readonly id: string;
    readonly tagId: string;
    readonly templateIds: string[];
}
export function getAssignTemplatesToTagOutput(args: GetAssignTemplatesToTagOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAssignTemplatesToTagResult> {
    return pulumi.output(args).apply((a: any) => getAssignTemplatesToTag(a, opts))
}

/**
 * A collection of arguments for invoking getAssignTemplatesToTag.
 */
export interface GetAssignTemplatesToTagOutputArgs {
    tagId: pulumi.Input<string>;
}
