// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetwork(args: GetNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("catalystcenter:index/getNetwork:getNetwork", {
        "id": args.id,
        "siteId": args.siteId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkArgs {
    id: string;
    siteId: string;
}

/**
 * A collection of values returned by getNetwork.
 */
export interface GetNetworkResult {
    readonly catalystCenterAsSnmpServer: boolean;
    readonly catalystCenterAsSyslogServer: boolean;
    readonly dhcpServers: string[];
    readonly domainName: string;
    readonly endpointAaaServerPrimaryIp: string;
    readonly endpointAaaServerProtocol: string;
    readonly endpointAaaServerSecondaryIp: string;
    readonly endpointAaaServerSharedSecret: string;
    readonly endpointAaaServerType: string;
    readonly id: string;
    readonly netflowCollector: string;
    readonly netflowCollectorPort: number;
    readonly networkAaaServerPrimaryIp: string;
    readonly networkAaaServerProtocol: string;
    readonly networkAaaServerSecondaryIp: string;
    readonly networkAaaServerSharedSecret: string;
    readonly networkAaaServerType: string;
    readonly ntpServers: string[];
    readonly primaryDnsServer: string;
    readonly secondaryDnsServer: string;
    readonly siteId: string;
    readonly snmpServers: string[];
    readonly syslogServers: string[];
    readonly timezone: string;
}
export function getNetworkOutput(args: GetNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkResult> {
    return pulumi.output(args).apply((a: any) => getNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkOutputArgs {
    id: pulumi.Input<string>;
    siteId: pulumi.Input<string>;
}
