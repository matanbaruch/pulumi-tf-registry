// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AccountVending extends pulumi.CustomResource {
    /**
     * Get an existing AccountVending resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountVendingState, opts?: pulumi.CustomResourceOptions): AccountVending {
        return new AccountVending(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awsx:index/accountVending:AccountVending';

    /**
     * Returns true if the given object is an instance of AccountVending.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountVending {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountVending.__pulumiType;
    }

    public /*out*/ readonly accountId!: pulumi.Output<string>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly artefactId!: pulumi.Output<string>;
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly parameters!: pulumi.Output<{[key: string]: string}>;
    public readonly productId!: pulumi.Output<string>;
    public /*out*/ readonly recordId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.AccountVendingTimeouts | undefined>;

    /**
     * Create a AccountVending resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountVendingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountVendingArgs | AccountVendingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountVendingState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["artefactId"] = state ? state.artefactId : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
            resourceInputs["recordId"] = state ? state.recordId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AccountVendingArgs | undefined;
            if ((!args || args.artefactId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'artefactId'");
            }
            if ((!args || args.parameters === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parameters'");
            }
            if ((!args || args.productId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productId'");
            }
            resourceInputs["artefactId"] = args ? args.artefactId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["recordId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountVending.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AccountVending resources.
 */
export interface AccountVendingState {
    accountId?: pulumi.Input<string>;
    arn?: pulumi.Input<string>;
    artefactId?: pulumi.Input<string>;
    createdTime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    productId?: pulumi.Input<string>;
    recordId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AccountVendingTimeouts>;
}

/**
 * The set of arguments for constructing a AccountVending resource.
 */
export interface AccountVendingArgs {
    artefactId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parameters: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    productId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AccountVendingTimeouts>;
}
