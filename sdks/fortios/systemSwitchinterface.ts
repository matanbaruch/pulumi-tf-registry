// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemSwitchinterface extends pulumi.CustomResource {
    /**
     * Get an existing SystemSwitchinterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemSwitchinterfaceState, opts?: pulumi.CustomResourceOptions): SystemSwitchinterface {
        return new SystemSwitchinterface(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemSwitchinterface:SystemSwitchinterface';

    /**
     * Returns true if the given object is an instance of SystemSwitchinterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemSwitchinterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemSwitchinterface.__pulumiType;
    }

    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    public readonly intraSwitchPolicy!: pulumi.Output<string>;
    public readonly macTtl!: pulumi.Output<number>;
    public readonly members!: pulumi.Output<outputs.SystemSwitchinterfaceMember[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly span!: pulumi.Output<string>;
    public readonly spanDestPort!: pulumi.Output<string>;
    public readonly spanDirection!: pulumi.Output<string>;
    public readonly spanSourcePorts!: pulumi.Output<outputs.SystemSwitchinterfaceSpanSourcePort[] | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly vdom!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a SystemSwitchinterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemSwitchinterfaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemSwitchinterfaceArgs | SystemSwitchinterfaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemSwitchinterfaceState | undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["intraSwitchPolicy"] = state ? state.intraSwitchPolicy : undefined;
            resourceInputs["macTtl"] = state ? state.macTtl : undefined;
            resourceInputs["members"] = state ? state.members : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["span"] = state ? state.span : undefined;
            resourceInputs["spanDestPort"] = state ? state.spanDestPort : undefined;
            resourceInputs["spanDirection"] = state ? state.spanDirection : undefined;
            resourceInputs["spanSourcePorts"] = state ? state.spanSourcePorts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SystemSwitchinterfaceArgs | undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["intraSwitchPolicy"] = args ? args.intraSwitchPolicy : undefined;
            resourceInputs["macTtl"] = args ? args.macTtl : undefined;
            resourceInputs["members"] = args ? args.members : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["span"] = args ? args.span : undefined;
            resourceInputs["spanDestPort"] = args ? args.spanDestPort : undefined;
            resourceInputs["spanDirection"] = args ? args.spanDirection : undefined;
            resourceInputs["spanSourcePorts"] = args ? args.spanSourcePorts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemSwitchinterface.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemSwitchinterface resources.
 */
export interface SystemSwitchinterfaceState {
    dynamicSortSubtable?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    intraSwitchPolicy?: pulumi.Input<string>;
    macTtl?: pulumi.Input<number>;
    members?: pulumi.Input<pulumi.Input<inputs.SystemSwitchinterfaceMember>[]>;
    name?: pulumi.Input<string>;
    span?: pulumi.Input<string>;
    spanDestPort?: pulumi.Input<string>;
    spanDirection?: pulumi.Input<string>;
    spanSourcePorts?: pulumi.Input<pulumi.Input<inputs.SystemSwitchinterfaceSpanSourcePort>[]>;
    type?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemSwitchinterface resource.
 */
export interface SystemSwitchinterfaceArgs {
    dynamicSortSubtable?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    intraSwitchPolicy?: pulumi.Input<string>;
    macTtl?: pulumi.Input<number>;
    members?: pulumi.Input<pulumi.Input<inputs.SystemSwitchinterfaceMember>[]>;
    name?: pulumi.Input<string>;
    span?: pulumi.Input<string>;
    spanDestPort?: pulumi.Input<string>;
    spanDirection?: pulumi.Input<string>;
    spanSourcePorts?: pulumi.Input<pulumi.Input<inputs.SystemSwitchinterfaceSpanSourcePort>[]>;
    type?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
