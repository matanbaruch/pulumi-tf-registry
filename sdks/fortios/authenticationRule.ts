// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AuthenticationRule extends pulumi.CustomResource {
    /**
     * Get an existing AuthenticationRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthenticationRuleState, opts?: pulumi.CustomResourceOptions): AuthenticationRule {
        return new AuthenticationRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/authenticationRule:AuthenticationRule';

    /**
     * Returns true if the given object is an instance of AuthenticationRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthenticationRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthenticationRule.__pulumiType;
    }

    public readonly activeAuthMethod!: pulumi.Output<string>;
    public readonly certAuthCookie!: pulumi.Output<string>;
    public readonly comments!: pulumi.Output<string | undefined>;
    public readonly corsDepth!: pulumi.Output<number>;
    public readonly corsStateful!: pulumi.Output<string>;
    public readonly dstaddr6s!: pulumi.Output<outputs.AuthenticationRuleDstaddr6[] | undefined>;
    public readonly dstaddrs!: pulumi.Output<outputs.AuthenticationRuleDstaddr[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    public readonly ipBased!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly protocol!: pulumi.Output<string>;
    public readonly srcaddr6s!: pulumi.Output<outputs.AuthenticationRuleSrcaddr6[] | undefined>;
    public readonly srcaddrs!: pulumi.Output<outputs.AuthenticationRuleSrcaddr[] | undefined>;
    public readonly srcintfs!: pulumi.Output<outputs.AuthenticationRuleSrcintf[] | undefined>;
    public readonly ssoAuthMethod!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly transactionBased!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string>;
    public readonly webAuthCookie!: pulumi.Output<string>;
    public readonly webPortal!: pulumi.Output<string>;

    /**
     * Create a AuthenticationRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AuthenticationRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthenticationRuleArgs | AuthenticationRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthenticationRuleState | undefined;
            resourceInputs["activeAuthMethod"] = state ? state.activeAuthMethod : undefined;
            resourceInputs["certAuthCookie"] = state ? state.certAuthCookie : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["corsDepth"] = state ? state.corsDepth : undefined;
            resourceInputs["corsStateful"] = state ? state.corsStateful : undefined;
            resourceInputs["dstaddr6s"] = state ? state.dstaddr6s : undefined;
            resourceInputs["dstaddrs"] = state ? state.dstaddrs : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["ipBased"] = state ? state.ipBased : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["srcaddr6s"] = state ? state.srcaddr6s : undefined;
            resourceInputs["srcaddrs"] = state ? state.srcaddrs : undefined;
            resourceInputs["srcintfs"] = state ? state.srcintfs : undefined;
            resourceInputs["ssoAuthMethod"] = state ? state.ssoAuthMethod : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["transactionBased"] = state ? state.transactionBased : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["webAuthCookie"] = state ? state.webAuthCookie : undefined;
            resourceInputs["webPortal"] = state ? state.webPortal : undefined;
        } else {
            const args = argsOrState as AuthenticationRuleArgs | undefined;
            resourceInputs["activeAuthMethod"] = args ? args.activeAuthMethod : undefined;
            resourceInputs["certAuthCookie"] = args ? args.certAuthCookie : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["corsDepth"] = args ? args.corsDepth : undefined;
            resourceInputs["corsStateful"] = args ? args.corsStateful : undefined;
            resourceInputs["dstaddr6s"] = args ? args.dstaddr6s : undefined;
            resourceInputs["dstaddrs"] = args ? args.dstaddrs : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["ipBased"] = args ? args.ipBased : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["srcaddr6s"] = args ? args.srcaddr6s : undefined;
            resourceInputs["srcaddrs"] = args ? args.srcaddrs : undefined;
            resourceInputs["srcintfs"] = args ? args.srcintfs : undefined;
            resourceInputs["ssoAuthMethod"] = args ? args.ssoAuthMethod : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["transactionBased"] = args ? args.transactionBased : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["webAuthCookie"] = args ? args.webAuthCookie : undefined;
            resourceInputs["webPortal"] = args ? args.webPortal : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthenticationRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AuthenticationRule resources.
 */
export interface AuthenticationRuleState {
    activeAuthMethod?: pulumi.Input<string>;
    certAuthCookie?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    corsDepth?: pulumi.Input<number>;
    corsStateful?: pulumi.Input<string>;
    dstaddr6s?: pulumi.Input<pulumi.Input<inputs.AuthenticationRuleDstaddr6>[]>;
    dstaddrs?: pulumi.Input<pulumi.Input<inputs.AuthenticationRuleDstaddr>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    ipBased?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    srcaddr6s?: pulumi.Input<pulumi.Input<inputs.AuthenticationRuleSrcaddr6>[]>;
    srcaddrs?: pulumi.Input<pulumi.Input<inputs.AuthenticationRuleSrcaddr>[]>;
    srcintfs?: pulumi.Input<pulumi.Input<inputs.AuthenticationRuleSrcintf>[]>;
    ssoAuthMethod?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    transactionBased?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    webAuthCookie?: pulumi.Input<string>;
    webPortal?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AuthenticationRule resource.
 */
export interface AuthenticationRuleArgs {
    activeAuthMethod?: pulumi.Input<string>;
    certAuthCookie?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    corsDepth?: pulumi.Input<number>;
    corsStateful?: pulumi.Input<string>;
    dstaddr6s?: pulumi.Input<pulumi.Input<inputs.AuthenticationRuleDstaddr6>[]>;
    dstaddrs?: pulumi.Input<pulumi.Input<inputs.AuthenticationRuleDstaddr>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    ipBased?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    srcaddr6s?: pulumi.Input<pulumi.Input<inputs.AuthenticationRuleSrcaddr6>[]>;
    srcaddrs?: pulumi.Input<pulumi.Input<inputs.AuthenticationRuleSrcaddr>[]>;
    srcintfs?: pulumi.Input<pulumi.Input<inputs.AuthenticationRuleSrcintf>[]>;
    ssoAuthMethod?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    transactionBased?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    webAuthCookie?: pulumi.Input<string>;
    webPortal?: pulumi.Input<string>;
}
