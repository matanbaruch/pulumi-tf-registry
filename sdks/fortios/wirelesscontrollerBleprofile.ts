// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WirelesscontrollerBleprofile extends pulumi.CustomResource {
    /**
     * Get an existing WirelesscontrollerBleprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WirelesscontrollerBleprofileState, opts?: pulumi.CustomResourceOptions): WirelesscontrollerBleprofile {
        return new WirelesscontrollerBleprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/wirelesscontrollerBleprofile:WirelesscontrollerBleprofile';

    /**
     * Returns true if the given object is an instance of WirelesscontrollerBleprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WirelesscontrollerBleprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WirelesscontrollerBleprofile.__pulumiType;
    }

    public readonly advertising!: pulumi.Output<string>;
    public readonly beaconInterval!: pulumi.Output<number>;
    public readonly bleScanning!: pulumi.Output<string>;
    public readonly comment!: pulumi.Output<string>;
    public readonly eddystoneInstance!: pulumi.Output<string>;
    public readonly eddystoneNamespace!: pulumi.Output<string>;
    public readonly eddystoneUrl!: pulumi.Output<string>;
    public readonly eddystoneUrlEncodeHex!: pulumi.Output<string>;
    public readonly ibeaconUuid!: pulumi.Output<string>;
    public readonly majorId!: pulumi.Output<number>;
    public readonly minorId!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public readonly scanInterval!: pulumi.Output<number>;
    public readonly scanPeriod!: pulumi.Output<number>;
    public readonly scanThreshold!: pulumi.Output<string>;
    public readonly scanTime!: pulumi.Output<number>;
    public readonly scanType!: pulumi.Output<string>;
    public readonly scanWindow!: pulumi.Output<number>;
    public readonly txpower!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a WirelesscontrollerBleprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WirelesscontrollerBleprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WirelesscontrollerBleprofileArgs | WirelesscontrollerBleprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WirelesscontrollerBleprofileState | undefined;
            resourceInputs["advertising"] = state ? state.advertising : undefined;
            resourceInputs["beaconInterval"] = state ? state.beaconInterval : undefined;
            resourceInputs["bleScanning"] = state ? state.bleScanning : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["eddystoneInstance"] = state ? state.eddystoneInstance : undefined;
            resourceInputs["eddystoneNamespace"] = state ? state.eddystoneNamespace : undefined;
            resourceInputs["eddystoneUrl"] = state ? state.eddystoneUrl : undefined;
            resourceInputs["eddystoneUrlEncodeHex"] = state ? state.eddystoneUrlEncodeHex : undefined;
            resourceInputs["ibeaconUuid"] = state ? state.ibeaconUuid : undefined;
            resourceInputs["majorId"] = state ? state.majorId : undefined;
            resourceInputs["minorId"] = state ? state.minorId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["scanInterval"] = state ? state.scanInterval : undefined;
            resourceInputs["scanPeriod"] = state ? state.scanPeriod : undefined;
            resourceInputs["scanThreshold"] = state ? state.scanThreshold : undefined;
            resourceInputs["scanTime"] = state ? state.scanTime : undefined;
            resourceInputs["scanType"] = state ? state.scanType : undefined;
            resourceInputs["scanWindow"] = state ? state.scanWindow : undefined;
            resourceInputs["txpower"] = state ? state.txpower : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as WirelesscontrollerBleprofileArgs | undefined;
            resourceInputs["advertising"] = args ? args.advertising : undefined;
            resourceInputs["beaconInterval"] = args ? args.beaconInterval : undefined;
            resourceInputs["bleScanning"] = args ? args.bleScanning : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["eddystoneInstance"] = args ? args.eddystoneInstance : undefined;
            resourceInputs["eddystoneNamespace"] = args ? args.eddystoneNamespace : undefined;
            resourceInputs["eddystoneUrl"] = args ? args.eddystoneUrl : undefined;
            resourceInputs["eddystoneUrlEncodeHex"] = args ? args.eddystoneUrlEncodeHex : undefined;
            resourceInputs["ibeaconUuid"] = args ? args.ibeaconUuid : undefined;
            resourceInputs["majorId"] = args ? args.majorId : undefined;
            resourceInputs["minorId"] = args ? args.minorId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["scanInterval"] = args ? args.scanInterval : undefined;
            resourceInputs["scanPeriod"] = args ? args.scanPeriod : undefined;
            resourceInputs["scanThreshold"] = args ? args.scanThreshold : undefined;
            resourceInputs["scanTime"] = args ? args.scanTime : undefined;
            resourceInputs["scanType"] = args ? args.scanType : undefined;
            resourceInputs["scanWindow"] = args ? args.scanWindow : undefined;
            resourceInputs["txpower"] = args ? args.txpower : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WirelesscontrollerBleprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WirelesscontrollerBleprofile resources.
 */
export interface WirelesscontrollerBleprofileState {
    advertising?: pulumi.Input<string>;
    beaconInterval?: pulumi.Input<number>;
    bleScanning?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    eddystoneInstance?: pulumi.Input<string>;
    eddystoneNamespace?: pulumi.Input<string>;
    eddystoneUrl?: pulumi.Input<string>;
    eddystoneUrlEncodeHex?: pulumi.Input<string>;
    ibeaconUuid?: pulumi.Input<string>;
    majorId?: pulumi.Input<number>;
    minorId?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    scanInterval?: pulumi.Input<number>;
    scanPeriod?: pulumi.Input<number>;
    scanThreshold?: pulumi.Input<string>;
    scanTime?: pulumi.Input<number>;
    scanType?: pulumi.Input<string>;
    scanWindow?: pulumi.Input<number>;
    txpower?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WirelesscontrollerBleprofile resource.
 */
export interface WirelesscontrollerBleprofileArgs {
    advertising?: pulumi.Input<string>;
    beaconInterval?: pulumi.Input<number>;
    bleScanning?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    eddystoneInstance?: pulumi.Input<string>;
    eddystoneNamespace?: pulumi.Input<string>;
    eddystoneUrl?: pulumi.Input<string>;
    eddystoneUrlEncodeHex?: pulumi.Input<string>;
    ibeaconUuid?: pulumi.Input<string>;
    majorId?: pulumi.Input<number>;
    minorId?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    scanInterval?: pulumi.Input<number>;
    scanPeriod?: pulumi.Input<number>;
    scanThreshold?: pulumi.Input<string>;
    scanTime?: pulumi.Input<number>;
    scanType?: pulumi.Input<string>;
    scanWindow?: pulumi.Input<number>;
    txpower?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
