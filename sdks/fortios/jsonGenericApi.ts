// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class JsonGenericApi extends pulumi.CustomResource {
    /**
     * Get an existing JsonGenericApi resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: JsonGenericApiState, opts?: pulumi.CustomResourceOptions): JsonGenericApi {
        return new JsonGenericApi(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/jsonGenericApi:JsonGenericApi';

    /**
     * Returns true if the given object is an instance of JsonGenericApi.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is JsonGenericApi {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JsonGenericApi.__pulumiType;
    }

    public readonly forceRecreate!: pulumi.Output<string | undefined>;
    public readonly json!: pulumi.Output<string | undefined>;
    public readonly method!: pulumi.Output<string>;
    public readonly path!: pulumi.Output<string>;
    public /*out*/ readonly response!: pulumi.Output<string>;
    public readonly specialparams!: pulumi.Output<string | undefined>;
    public readonly vdomparam!: pulumi.Output<string | undefined>;

    /**
     * Create a JsonGenericApi resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JsonGenericApiArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: JsonGenericApiArgs | JsonGenericApiState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as JsonGenericApiState | undefined;
            resourceInputs["forceRecreate"] = state ? state.forceRecreate : undefined;
            resourceInputs["json"] = state ? state.json : undefined;
            resourceInputs["method"] = state ? state.method : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["response"] = state ? state.response : undefined;
            resourceInputs["specialparams"] = state ? state.specialparams : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as JsonGenericApiArgs | undefined;
            if ((!args || args.method === undefined) && !opts.urn) {
                throw new Error("Missing required property 'method'");
            }
            if ((!args || args.path === undefined) && !opts.urn) {
                throw new Error("Missing required property 'path'");
            }
            resourceInputs["forceRecreate"] = args ? args.forceRecreate : undefined;
            resourceInputs["json"] = args ? args.json : undefined;
            resourceInputs["method"] = args ? args.method : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["specialparams"] = args ? args.specialparams : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["response"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(JsonGenericApi.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering JsonGenericApi resources.
 */
export interface JsonGenericApiState {
    forceRecreate?: pulumi.Input<string>;
    json?: pulumi.Input<string>;
    method?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    response?: pulumi.Input<string>;
    specialparams?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a JsonGenericApi resource.
 */
export interface JsonGenericApiArgs {
    forceRecreate?: pulumi.Input<string>;
    json?: pulumi.Input<string>;
    method: pulumi.Input<string>;
    path: pulumi.Input<string>;
    specialparams?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
