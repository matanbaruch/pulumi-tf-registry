// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemStandalonecluster extends pulumi.CustomResource {
    /**
     * Get an existing SystemStandalonecluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemStandaloneclusterState, opts?: pulumi.CustomResourceOptions): SystemStandalonecluster {
        return new SystemStandalonecluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemStandalonecluster:SystemStandalonecluster';

    /**
     * Returns true if the given object is an instance of SystemStandalonecluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemStandalonecluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemStandalonecluster.__pulumiType;
    }

    public readonly asymmetricTrafficControl!: pulumi.Output<string>;
    public readonly clusterPeers!: pulumi.Output<outputs.SystemStandaloneclusterClusterPeer[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly encryption!: pulumi.Output<string>;
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    public readonly groupMemberId!: pulumi.Output<number>;
    public readonly layer2Connection!: pulumi.Output<string>;
    public readonly psksecret!: pulumi.Output<string | undefined>;
    public readonly sessionSyncDev!: pulumi.Output<string>;
    public readonly standaloneGroupId!: pulumi.Output<number>;
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a SystemStandalonecluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemStandaloneclusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemStandaloneclusterArgs | SystemStandaloneclusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemStandaloneclusterState | undefined;
            resourceInputs["asymmetricTrafficControl"] = state ? state.asymmetricTrafficControl : undefined;
            resourceInputs["clusterPeers"] = state ? state.clusterPeers : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["encryption"] = state ? state.encryption : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["groupMemberId"] = state ? state.groupMemberId : undefined;
            resourceInputs["layer2Connection"] = state ? state.layer2Connection : undefined;
            resourceInputs["psksecret"] = state ? state.psksecret : undefined;
            resourceInputs["sessionSyncDev"] = state ? state.sessionSyncDev : undefined;
            resourceInputs["standaloneGroupId"] = state ? state.standaloneGroupId : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SystemStandaloneclusterArgs | undefined;
            resourceInputs["asymmetricTrafficControl"] = args ? args.asymmetricTrafficControl : undefined;
            resourceInputs["clusterPeers"] = args ? args.clusterPeers : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["encryption"] = args ? args.encryption : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["groupMemberId"] = args ? args.groupMemberId : undefined;
            resourceInputs["layer2Connection"] = args ? args.layer2Connection : undefined;
            resourceInputs["psksecret"] = args?.psksecret ? pulumi.secret(args.psksecret) : undefined;
            resourceInputs["sessionSyncDev"] = args ? args.sessionSyncDev : undefined;
            resourceInputs["standaloneGroupId"] = args ? args.standaloneGroupId : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["psksecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SystemStandalonecluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemStandalonecluster resources.
 */
export interface SystemStandaloneclusterState {
    asymmetricTrafficControl?: pulumi.Input<string>;
    clusterPeers?: pulumi.Input<pulumi.Input<inputs.SystemStandaloneclusterClusterPeer>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    encryption?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    groupMemberId?: pulumi.Input<number>;
    layer2Connection?: pulumi.Input<string>;
    psksecret?: pulumi.Input<string>;
    sessionSyncDev?: pulumi.Input<string>;
    standaloneGroupId?: pulumi.Input<number>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemStandalonecluster resource.
 */
export interface SystemStandaloneclusterArgs {
    asymmetricTrafficControl?: pulumi.Input<string>;
    clusterPeers?: pulumi.Input<pulumi.Input<inputs.SystemStandaloneclusterClusterPeer>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    encryption?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    groupMemberId?: pulumi.Input<number>;
    layer2Connection?: pulumi.Input<string>;
    psksecret?: pulumi.Input<string>;
    sessionSyncDev?: pulumi.Input<string>;
    standaloneGroupId?: pulumi.Input<number>;
    vdomparam?: pulumi.Input<string>;
}
