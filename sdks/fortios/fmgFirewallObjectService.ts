// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FmgFirewallObjectService extends pulumi.CustomResource {
    /**
     * Get an existing FmgFirewallObjectService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FmgFirewallObjectServiceState, opts?: pulumi.CustomResourceOptions): FmgFirewallObjectService {
        return new FmgFirewallObjectService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/fmgFirewallObjectService:FmgFirewallObjectService';

    /**
     * Returns true if the given object is an instance of FmgFirewallObjectService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FmgFirewallObjectService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FmgFirewallObjectService.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly category!: pulumi.Output<string | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly fqdn!: pulumi.Output<string | undefined>;
    public readonly icmpCode!: pulumi.Output<number | undefined>;
    public readonly icmpType!: pulumi.Output<number | undefined>;
    public readonly iprange!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly protocol!: pulumi.Output<string | undefined>;
    public readonly protocolNumber!: pulumi.Output<number | undefined>;
    public readonly proxy!: pulumi.Output<string | undefined>;
    public readonly sctpPortranges!: pulumi.Output<string[] | undefined>;
    public readonly tcpPortranges!: pulumi.Output<string[] | undefined>;
    public readonly udpPortranges!: pulumi.Output<string[] | undefined>;

    /**
     * Create a FmgFirewallObjectService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FmgFirewallObjectServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FmgFirewallObjectServiceArgs | FmgFirewallObjectServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FmgFirewallObjectServiceState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["fqdn"] = state ? state.fqdn : undefined;
            resourceInputs["icmpCode"] = state ? state.icmpCode : undefined;
            resourceInputs["icmpType"] = state ? state.icmpType : undefined;
            resourceInputs["iprange"] = state ? state.iprange : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["protocolNumber"] = state ? state.protocolNumber : undefined;
            resourceInputs["proxy"] = state ? state.proxy : undefined;
            resourceInputs["sctpPortranges"] = state ? state.sctpPortranges : undefined;
            resourceInputs["tcpPortranges"] = state ? state.tcpPortranges : undefined;
            resourceInputs["udpPortranges"] = state ? state.udpPortranges : undefined;
        } else {
            const args = argsOrState as FmgFirewallObjectServiceArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["fqdn"] = args ? args.fqdn : undefined;
            resourceInputs["icmpCode"] = args ? args.icmpCode : undefined;
            resourceInputs["icmpType"] = args ? args.icmpType : undefined;
            resourceInputs["iprange"] = args ? args.iprange : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["protocolNumber"] = args ? args.protocolNumber : undefined;
            resourceInputs["proxy"] = args ? args.proxy : undefined;
            resourceInputs["sctpPortranges"] = args ? args.sctpPortranges : undefined;
            resourceInputs["tcpPortranges"] = args ? args.tcpPortranges : undefined;
            resourceInputs["udpPortranges"] = args ? args.udpPortranges : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FmgFirewallObjectService.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FmgFirewallObjectService resources.
 */
export interface FmgFirewallObjectServiceState {
    adom?: pulumi.Input<string>;
    category?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    fqdn?: pulumi.Input<string>;
    icmpCode?: pulumi.Input<number>;
    icmpType?: pulumi.Input<number>;
    iprange?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    protocolNumber?: pulumi.Input<number>;
    proxy?: pulumi.Input<string>;
    sctpPortranges?: pulumi.Input<pulumi.Input<string>[]>;
    tcpPortranges?: pulumi.Input<pulumi.Input<string>[]>;
    udpPortranges?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a FmgFirewallObjectService resource.
 */
export interface FmgFirewallObjectServiceArgs {
    adom?: pulumi.Input<string>;
    category?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    fqdn?: pulumi.Input<string>;
    icmpCode?: pulumi.Input<number>;
    icmpType?: pulumi.Input<number>;
    iprange?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    protocolNumber?: pulumi.Input<number>;
    proxy?: pulumi.Input<string>;
    sctpPortranges?: pulumi.Input<pulumi.Input<string>[]>;
    tcpPortranges?: pulumi.Input<pulumi.Input<string>[]>;
    udpPortranges?: pulumi.Input<pulumi.Input<string>[]>;
}
