// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemDeviceupgrade extends pulumi.CustomResource {
    /**
     * Get an existing SystemDeviceupgrade resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemDeviceupgradeState, opts?: pulumi.CustomResourceOptions): SystemDeviceupgrade {
        return new SystemDeviceupgrade(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemDeviceupgrade:SystemDeviceupgrade';

    /**
     * Returns true if the given object is an instance of SystemDeviceupgrade.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemDeviceupgrade {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemDeviceupgrade.__pulumiType;
    }

    public readonly deviceType!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly failureReason!: pulumi.Output<string>;
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    public readonly haRebootController!: pulumi.Output<string>;
    public readonly knownHaMembers!: pulumi.Output<outputs.SystemDeviceupgradeKnownHaMember[] | undefined>;
    public readonly maximumMinutes!: pulumi.Output<number>;
    public readonly serial!: pulumi.Output<string>;
    public readonly setupTime!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly time!: pulumi.Output<string>;
    public readonly timing!: pulumi.Output<string>;
    public readonly upgradePath!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a SystemDeviceupgrade resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemDeviceupgradeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemDeviceupgradeArgs | SystemDeviceupgradeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemDeviceupgradeState | undefined;
            resourceInputs["deviceType"] = state ? state.deviceType : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["failureReason"] = state ? state.failureReason : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["haRebootController"] = state ? state.haRebootController : undefined;
            resourceInputs["knownHaMembers"] = state ? state.knownHaMembers : undefined;
            resourceInputs["maximumMinutes"] = state ? state.maximumMinutes : undefined;
            resourceInputs["serial"] = state ? state.serial : undefined;
            resourceInputs["setupTime"] = state ? state.setupTime : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["time"] = state ? state.time : undefined;
            resourceInputs["timing"] = state ? state.timing : undefined;
            resourceInputs["upgradePath"] = state ? state.upgradePath : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SystemDeviceupgradeArgs | undefined;
            resourceInputs["deviceType"] = args ? args.deviceType : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["failureReason"] = args ? args.failureReason : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["haRebootController"] = args ? args.haRebootController : undefined;
            resourceInputs["knownHaMembers"] = args ? args.knownHaMembers : undefined;
            resourceInputs["maximumMinutes"] = args ? args.maximumMinutes : undefined;
            resourceInputs["serial"] = args ? args.serial : undefined;
            resourceInputs["setupTime"] = args ? args.setupTime : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["time"] = args ? args.time : undefined;
            resourceInputs["timing"] = args ? args.timing : undefined;
            resourceInputs["upgradePath"] = args ? args.upgradePath : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemDeviceupgrade.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemDeviceupgrade resources.
 */
export interface SystemDeviceupgradeState {
    deviceType?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    failureReason?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    haRebootController?: pulumi.Input<string>;
    knownHaMembers?: pulumi.Input<pulumi.Input<inputs.SystemDeviceupgradeKnownHaMember>[]>;
    maximumMinutes?: pulumi.Input<number>;
    serial?: pulumi.Input<string>;
    setupTime?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    time?: pulumi.Input<string>;
    timing?: pulumi.Input<string>;
    upgradePath?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemDeviceupgrade resource.
 */
export interface SystemDeviceupgradeArgs {
    deviceType?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    failureReason?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    haRebootController?: pulumi.Input<string>;
    knownHaMembers?: pulumi.Input<pulumi.Input<inputs.SystemDeviceupgradeKnownHaMember>[]>;
    maximumMinutes?: pulumi.Input<number>;
    serial?: pulumi.Input<string>;
    setupTime?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    time?: pulumi.Input<string>;
    timing?: pulumi.Input<string>;
    upgradePath?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
