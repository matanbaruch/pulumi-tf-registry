// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FmgSystemAdminProfiles extends pulumi.CustomResource {
    /**
     * Get an existing FmgSystemAdminProfiles resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FmgSystemAdminProfilesState, opts?: pulumi.CustomResourceOptions): FmgSystemAdminProfiles {
        return new FmgSystemAdminProfiles(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/fmgSystemAdminProfiles:FmgSystemAdminProfiles';

    /**
     * Returns true if the given object is an instance of FmgSystemAdminProfiles.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FmgSystemAdminProfiles {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FmgSystemAdminProfiles.__pulumiType;
    }

    public readonly adomPolicyPackages!: pulumi.Output<string | undefined>;
    public readonly adomSwitch!: pulumi.Output<string | undefined>;
    public readonly assignment!: pulumi.Output<string | undefined>;
    public readonly configRetrieve!: pulumi.Output<string | undefined>;
    public readonly configRevert!: pulumi.Output<string | undefined>;
    public readonly consistencyCheck!: pulumi.Output<string | undefined>;
    public readonly deployManagement!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly deviceAp!: pulumi.Output<string | undefined>;
    public readonly deviceConfig!: pulumi.Output<string | undefined>;
    public readonly deviceForticlient!: pulumi.Output<string | undefined>;
    public readonly deviceFortiswitch!: pulumi.Output<string | undefined>;
    public readonly deviceManager!: pulumi.Output<string | undefined>;
    public readonly deviceOperation!: pulumi.Output<string | undefined>;
    public readonly deviceProfile!: pulumi.Output<string | undefined>;
    public readonly deviceRevisionDeletion!: pulumi.Output<string | undefined>;
    public readonly deviceWanLinkLoadBalance!: pulumi.Output<string | undefined>;
    public readonly fortiguardCenter!: pulumi.Output<string | undefined>;
    public readonly fortiguardCenterAdvanced!: pulumi.Output<string | undefined>;
    public readonly fortiguardCenterFirmwareManagerment!: pulumi.Output<string | undefined>;
    public readonly fortiguardCenterLicensing!: pulumi.Output<string | undefined>;
    public readonly globalPolicyPackages!: pulumi.Output<string | undefined>;
    public readonly importPolicyPackages!: pulumi.Output<string | undefined>;
    public readonly intfMapping!: pulumi.Output<string | undefined>;
    public readonly logViewer!: pulumi.Output<string | undefined>;
    public readonly policyObjects!: pulumi.Output<string | undefined>;
    public readonly profileid!: pulumi.Output<string>;
    public readonly setInstallTargets!: pulumi.Output<string | undefined>;
    public readonly systemSetting!: pulumi.Output<string | undefined>;
    public readonly terminalAccess!: pulumi.Output<string | undefined>;
    public readonly vpnManager!: pulumi.Output<string | undefined>;

    /**
     * Create a FmgSystemAdminProfiles resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FmgSystemAdminProfilesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FmgSystemAdminProfilesArgs | FmgSystemAdminProfilesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FmgSystemAdminProfilesState | undefined;
            resourceInputs["adomPolicyPackages"] = state ? state.adomPolicyPackages : undefined;
            resourceInputs["adomSwitch"] = state ? state.adomSwitch : undefined;
            resourceInputs["assignment"] = state ? state.assignment : undefined;
            resourceInputs["configRetrieve"] = state ? state.configRetrieve : undefined;
            resourceInputs["configRevert"] = state ? state.configRevert : undefined;
            resourceInputs["consistencyCheck"] = state ? state.consistencyCheck : undefined;
            resourceInputs["deployManagement"] = state ? state.deployManagement : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceAp"] = state ? state.deviceAp : undefined;
            resourceInputs["deviceConfig"] = state ? state.deviceConfig : undefined;
            resourceInputs["deviceForticlient"] = state ? state.deviceForticlient : undefined;
            resourceInputs["deviceFortiswitch"] = state ? state.deviceFortiswitch : undefined;
            resourceInputs["deviceManager"] = state ? state.deviceManager : undefined;
            resourceInputs["deviceOperation"] = state ? state.deviceOperation : undefined;
            resourceInputs["deviceProfile"] = state ? state.deviceProfile : undefined;
            resourceInputs["deviceRevisionDeletion"] = state ? state.deviceRevisionDeletion : undefined;
            resourceInputs["deviceWanLinkLoadBalance"] = state ? state.deviceWanLinkLoadBalance : undefined;
            resourceInputs["fortiguardCenter"] = state ? state.fortiguardCenter : undefined;
            resourceInputs["fortiguardCenterAdvanced"] = state ? state.fortiguardCenterAdvanced : undefined;
            resourceInputs["fortiguardCenterFirmwareManagerment"] = state ? state.fortiguardCenterFirmwareManagerment : undefined;
            resourceInputs["fortiguardCenterLicensing"] = state ? state.fortiguardCenterLicensing : undefined;
            resourceInputs["globalPolicyPackages"] = state ? state.globalPolicyPackages : undefined;
            resourceInputs["importPolicyPackages"] = state ? state.importPolicyPackages : undefined;
            resourceInputs["intfMapping"] = state ? state.intfMapping : undefined;
            resourceInputs["logViewer"] = state ? state.logViewer : undefined;
            resourceInputs["policyObjects"] = state ? state.policyObjects : undefined;
            resourceInputs["profileid"] = state ? state.profileid : undefined;
            resourceInputs["setInstallTargets"] = state ? state.setInstallTargets : undefined;
            resourceInputs["systemSetting"] = state ? state.systemSetting : undefined;
            resourceInputs["terminalAccess"] = state ? state.terminalAccess : undefined;
            resourceInputs["vpnManager"] = state ? state.vpnManager : undefined;
        } else {
            const args = argsOrState as FmgSystemAdminProfilesArgs | undefined;
            if ((!args || args.profileid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'profileid'");
            }
            resourceInputs["adomPolicyPackages"] = args ? args.adomPolicyPackages : undefined;
            resourceInputs["adomSwitch"] = args ? args.adomSwitch : undefined;
            resourceInputs["assignment"] = args ? args.assignment : undefined;
            resourceInputs["configRetrieve"] = args ? args.configRetrieve : undefined;
            resourceInputs["configRevert"] = args ? args.configRevert : undefined;
            resourceInputs["consistencyCheck"] = args ? args.consistencyCheck : undefined;
            resourceInputs["deployManagement"] = args ? args.deployManagement : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceAp"] = args ? args.deviceAp : undefined;
            resourceInputs["deviceConfig"] = args ? args.deviceConfig : undefined;
            resourceInputs["deviceForticlient"] = args ? args.deviceForticlient : undefined;
            resourceInputs["deviceFortiswitch"] = args ? args.deviceFortiswitch : undefined;
            resourceInputs["deviceManager"] = args ? args.deviceManager : undefined;
            resourceInputs["deviceOperation"] = args ? args.deviceOperation : undefined;
            resourceInputs["deviceProfile"] = args ? args.deviceProfile : undefined;
            resourceInputs["deviceRevisionDeletion"] = args ? args.deviceRevisionDeletion : undefined;
            resourceInputs["deviceWanLinkLoadBalance"] = args ? args.deviceWanLinkLoadBalance : undefined;
            resourceInputs["fortiguardCenter"] = args ? args.fortiguardCenter : undefined;
            resourceInputs["fortiguardCenterAdvanced"] = args ? args.fortiguardCenterAdvanced : undefined;
            resourceInputs["fortiguardCenterFirmwareManagerment"] = args ? args.fortiguardCenterFirmwareManagerment : undefined;
            resourceInputs["fortiguardCenterLicensing"] = args ? args.fortiguardCenterLicensing : undefined;
            resourceInputs["globalPolicyPackages"] = args ? args.globalPolicyPackages : undefined;
            resourceInputs["importPolicyPackages"] = args ? args.importPolicyPackages : undefined;
            resourceInputs["intfMapping"] = args ? args.intfMapping : undefined;
            resourceInputs["logViewer"] = args ? args.logViewer : undefined;
            resourceInputs["policyObjects"] = args ? args.policyObjects : undefined;
            resourceInputs["profileid"] = args ? args.profileid : undefined;
            resourceInputs["setInstallTargets"] = args ? args.setInstallTargets : undefined;
            resourceInputs["systemSetting"] = args ? args.systemSetting : undefined;
            resourceInputs["terminalAccess"] = args ? args.terminalAccess : undefined;
            resourceInputs["vpnManager"] = args ? args.vpnManager : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FmgSystemAdminProfiles.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FmgSystemAdminProfiles resources.
 */
export interface FmgSystemAdminProfilesState {
    adomPolicyPackages?: pulumi.Input<string>;
    adomSwitch?: pulumi.Input<string>;
    assignment?: pulumi.Input<string>;
    configRetrieve?: pulumi.Input<string>;
    configRevert?: pulumi.Input<string>;
    consistencyCheck?: pulumi.Input<string>;
    deployManagement?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceAp?: pulumi.Input<string>;
    deviceConfig?: pulumi.Input<string>;
    deviceForticlient?: pulumi.Input<string>;
    deviceFortiswitch?: pulumi.Input<string>;
    deviceManager?: pulumi.Input<string>;
    deviceOperation?: pulumi.Input<string>;
    deviceProfile?: pulumi.Input<string>;
    deviceRevisionDeletion?: pulumi.Input<string>;
    deviceWanLinkLoadBalance?: pulumi.Input<string>;
    fortiguardCenter?: pulumi.Input<string>;
    fortiguardCenterAdvanced?: pulumi.Input<string>;
    fortiguardCenterFirmwareManagerment?: pulumi.Input<string>;
    fortiguardCenterLicensing?: pulumi.Input<string>;
    globalPolicyPackages?: pulumi.Input<string>;
    importPolicyPackages?: pulumi.Input<string>;
    intfMapping?: pulumi.Input<string>;
    logViewer?: pulumi.Input<string>;
    policyObjects?: pulumi.Input<string>;
    profileid?: pulumi.Input<string>;
    setInstallTargets?: pulumi.Input<string>;
    systemSetting?: pulumi.Input<string>;
    terminalAccess?: pulumi.Input<string>;
    vpnManager?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FmgSystemAdminProfiles resource.
 */
export interface FmgSystemAdminProfilesArgs {
    adomPolicyPackages?: pulumi.Input<string>;
    adomSwitch?: pulumi.Input<string>;
    assignment?: pulumi.Input<string>;
    configRetrieve?: pulumi.Input<string>;
    configRevert?: pulumi.Input<string>;
    consistencyCheck?: pulumi.Input<string>;
    deployManagement?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceAp?: pulumi.Input<string>;
    deviceConfig?: pulumi.Input<string>;
    deviceForticlient?: pulumi.Input<string>;
    deviceFortiswitch?: pulumi.Input<string>;
    deviceManager?: pulumi.Input<string>;
    deviceOperation?: pulumi.Input<string>;
    deviceProfile?: pulumi.Input<string>;
    deviceRevisionDeletion?: pulumi.Input<string>;
    deviceWanLinkLoadBalance?: pulumi.Input<string>;
    fortiguardCenter?: pulumi.Input<string>;
    fortiguardCenterAdvanced?: pulumi.Input<string>;
    fortiguardCenterFirmwareManagerment?: pulumi.Input<string>;
    fortiguardCenterLicensing?: pulumi.Input<string>;
    globalPolicyPackages?: pulumi.Input<string>;
    importPolicyPackages?: pulumi.Input<string>;
    intfMapping?: pulumi.Input<string>;
    logViewer?: pulumi.Input<string>;
    policyObjects?: pulumi.Input<string>;
    profileid: pulumi.Input<string>;
    setInstallTargets?: pulumi.Input<string>;
    systemSetting?: pulumi.Input<string>;
    terminalAccess?: pulumi.Input<string>;
    vpnManager?: pulumi.Input<string>;
}
