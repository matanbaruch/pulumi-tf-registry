// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRouterPolicy(args: GetRouterPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getRouterPolicy:getRouterPolicy", {
        "id": args.id,
        "seqNum": args.seqNum,
        "vdomparam": args.vdomparam,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterPolicy.
 */
export interface GetRouterPolicyArgs {
    id?: string;
    seqNum: number;
    vdomparam?: string;
}

/**
 * A collection of values returned by getRouterPolicy.
 */
export interface GetRouterPolicyResult {
    readonly action: string;
    readonly comments: string;
    readonly dstNegate: string;
    readonly dstaddrs: outputs.GetRouterPolicyDstaddr[];
    readonly dsts: outputs.GetRouterPolicyDst[];
    readonly endPort: number;
    readonly endSourcePort: number;
    readonly gateway: string;
    readonly id: string;
    readonly inputDeviceNegate: string;
    readonly inputDevices: outputs.GetRouterPolicyInputDevice[];
    readonly internetServiceCustoms: outputs.GetRouterPolicyInternetServiceCustom[];
    readonly internetServiceIds: outputs.GetRouterPolicyInternetServiceId[];
    readonly outputDevice: string;
    readonly protocol: number;
    readonly seqNum: number;
    readonly srcNegate: string;
    readonly srcaddrs: outputs.GetRouterPolicySrcaddr[];
    readonly srcs: outputs.GetRouterPolicySrc[];
    readonly startPort: number;
    readonly startSourcePort: number;
    readonly status: string;
    readonly tos: string;
    readonly tosMask: string;
    readonly vdomparam?: string;
}
export function getRouterPolicyOutput(args: GetRouterPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterPolicyResult> {
    return pulumi.output(args).apply((a: any) => getRouterPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getRouterPolicy.
 */
export interface GetRouterPolicyOutputArgs {
    id?: pulumi.Input<string>;
    seqNum: pulumi.Input<number>;
    vdomparam?: pulumi.Input<string>;
}
