// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRouterMulticast(args?: GetRouterMulticastArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterMulticastResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getRouterMulticast:getRouterMulticast", {
        "id": args.id,
        "vdomparam": args.vdomparam,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterMulticast.
 */
export interface GetRouterMulticastArgs {
    id?: string;
    vdomparam?: string;
}

/**
 * A collection of values returned by getRouterMulticast.
 */
export interface GetRouterMulticastResult {
    readonly id: string;
    readonly interfaces: outputs.GetRouterMulticastInterface[];
    readonly multicastRouting: string;
    readonly pimSmGlobals: outputs.GetRouterMulticastPimSmGlobal[];
    readonly routeLimit: number;
    readonly routeThreshold: number;
    readonly vdomparam?: string;
}
export function getRouterMulticastOutput(args?: GetRouterMulticastOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterMulticastResult> {
    return pulumi.output(args).apply((a: any) => getRouterMulticast(a, opts))
}

/**
 * A collection of arguments for invoking getRouterMulticast.
 */
export interface GetRouterMulticastOutputArgs {
    id?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
