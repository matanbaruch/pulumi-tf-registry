// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AntivirusQuarantine extends pulumi.CustomResource {
    /**
     * Get an existing AntivirusQuarantine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AntivirusQuarantineState, opts?: pulumi.CustomResourceOptions): AntivirusQuarantine {
        return new AntivirusQuarantine(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/antivirusQuarantine:AntivirusQuarantine';

    /**
     * Returns true if the given object is an instance of AntivirusQuarantine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AntivirusQuarantine {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AntivirusQuarantine.__pulumiType;
    }

    public readonly agelimit!: pulumi.Output<number>;
    public readonly destination!: pulumi.Output<string>;
    public readonly dropBlocked!: pulumi.Output<string>;
    public readonly dropHeuristic!: pulumi.Output<string>;
    public readonly dropInfected!: pulumi.Output<string>;
    public readonly dropMachineLearning!: pulumi.Output<string>;
    public readonly lowspace!: pulumi.Output<string>;
    public readonly maxfilesize!: pulumi.Output<number>;
    public readonly quarantineQuota!: pulumi.Output<number>;
    public readonly storeBlocked!: pulumi.Output<string>;
    public readonly storeHeuristic!: pulumi.Output<string>;
    public readonly storeInfected!: pulumi.Output<string>;
    public readonly storeMachineLearning!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a AntivirusQuarantine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AntivirusQuarantineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AntivirusQuarantineArgs | AntivirusQuarantineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AntivirusQuarantineState | undefined;
            resourceInputs["agelimit"] = state ? state.agelimit : undefined;
            resourceInputs["destination"] = state ? state.destination : undefined;
            resourceInputs["dropBlocked"] = state ? state.dropBlocked : undefined;
            resourceInputs["dropHeuristic"] = state ? state.dropHeuristic : undefined;
            resourceInputs["dropInfected"] = state ? state.dropInfected : undefined;
            resourceInputs["dropMachineLearning"] = state ? state.dropMachineLearning : undefined;
            resourceInputs["lowspace"] = state ? state.lowspace : undefined;
            resourceInputs["maxfilesize"] = state ? state.maxfilesize : undefined;
            resourceInputs["quarantineQuota"] = state ? state.quarantineQuota : undefined;
            resourceInputs["storeBlocked"] = state ? state.storeBlocked : undefined;
            resourceInputs["storeHeuristic"] = state ? state.storeHeuristic : undefined;
            resourceInputs["storeInfected"] = state ? state.storeInfected : undefined;
            resourceInputs["storeMachineLearning"] = state ? state.storeMachineLearning : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as AntivirusQuarantineArgs | undefined;
            resourceInputs["agelimit"] = args ? args.agelimit : undefined;
            resourceInputs["destination"] = args ? args.destination : undefined;
            resourceInputs["dropBlocked"] = args ? args.dropBlocked : undefined;
            resourceInputs["dropHeuristic"] = args ? args.dropHeuristic : undefined;
            resourceInputs["dropInfected"] = args ? args.dropInfected : undefined;
            resourceInputs["dropMachineLearning"] = args ? args.dropMachineLearning : undefined;
            resourceInputs["lowspace"] = args ? args.lowspace : undefined;
            resourceInputs["maxfilesize"] = args ? args.maxfilesize : undefined;
            resourceInputs["quarantineQuota"] = args ? args.quarantineQuota : undefined;
            resourceInputs["storeBlocked"] = args ? args.storeBlocked : undefined;
            resourceInputs["storeHeuristic"] = args ? args.storeHeuristic : undefined;
            resourceInputs["storeInfected"] = args ? args.storeInfected : undefined;
            resourceInputs["storeMachineLearning"] = args ? args.storeMachineLearning : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AntivirusQuarantine.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AntivirusQuarantine resources.
 */
export interface AntivirusQuarantineState {
    agelimit?: pulumi.Input<number>;
    destination?: pulumi.Input<string>;
    dropBlocked?: pulumi.Input<string>;
    dropHeuristic?: pulumi.Input<string>;
    dropInfected?: pulumi.Input<string>;
    dropMachineLearning?: pulumi.Input<string>;
    lowspace?: pulumi.Input<string>;
    maxfilesize?: pulumi.Input<number>;
    quarantineQuota?: pulumi.Input<number>;
    storeBlocked?: pulumi.Input<string>;
    storeHeuristic?: pulumi.Input<string>;
    storeInfected?: pulumi.Input<string>;
    storeMachineLearning?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AntivirusQuarantine resource.
 */
export interface AntivirusQuarantineArgs {
    agelimit?: pulumi.Input<number>;
    destination?: pulumi.Input<string>;
    dropBlocked?: pulumi.Input<string>;
    dropHeuristic?: pulumi.Input<string>;
    dropInfected?: pulumi.Input<string>;
    dropMachineLearning?: pulumi.Input<string>;
    lowspace?: pulumi.Input<string>;
    maxfilesize?: pulumi.Input<number>;
    quarantineQuota?: pulumi.Input<number>;
    storeBlocked?: pulumi.Input<string>;
    storeHeuristic?: pulumi.Input<string>;
    storeInfected?: pulumi.Input<string>;
    storeMachineLearning?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
