// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterbgpNeighbor extends pulumi.CustomResource {
    /**
     * Get an existing RouterbgpNeighbor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterbgpNeighborState, opts?: pulumi.CustomResourceOptions): RouterbgpNeighbor {
        return new RouterbgpNeighbor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/routerbgpNeighbor:RouterbgpNeighbor';

    /**
     * Returns true if the given object is an instance of RouterbgpNeighbor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterbgpNeighbor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterbgpNeighbor.__pulumiType;
    }

    public readonly activate!: pulumi.Output<string>;
    public readonly activate6!: pulumi.Output<string>;
    public readonly activateEvpn!: pulumi.Output<string>;
    public readonly activateVpnv4!: pulumi.Output<string>;
    public readonly activateVpnv6!: pulumi.Output<string>;
    public readonly additionalPath!: pulumi.Output<string>;
    public readonly additionalPath6!: pulumi.Output<string>;
    public readonly additionalPathVpnv4!: pulumi.Output<string>;
    public readonly additionalPathVpnv6!: pulumi.Output<string>;
    public readonly advAdditionalPath!: pulumi.Output<number>;
    public readonly advAdditionalPath6!: pulumi.Output<number>;
    public readonly advAdditionalPathVpnv4!: pulumi.Output<number>;
    public readonly advAdditionalPathVpnv6!: pulumi.Output<number>;
    public readonly advertisementInterval!: pulumi.Output<number>;
    public readonly allowasIn!: pulumi.Output<number>;
    public readonly allowasIn6!: pulumi.Output<number>;
    public readonly allowasInEnable!: pulumi.Output<string>;
    public readonly allowasInEnable6!: pulumi.Output<string>;
    public readonly allowasInEnableEvpn!: pulumi.Output<string>;
    public readonly allowasInEnableVpnv4!: pulumi.Output<string>;
    public readonly allowasInEnableVpnv6!: pulumi.Output<string>;
    public readonly allowasInEvpn!: pulumi.Output<number>;
    public readonly allowasInVpnv4!: pulumi.Output<number>;
    public readonly allowasInVpnv6!: pulumi.Output<number>;
    public readonly asOverride!: pulumi.Output<string>;
    public readonly asOverride6!: pulumi.Output<string>;
    public readonly attributeUnchanged!: pulumi.Output<string>;
    public readonly attributeUnchanged6!: pulumi.Output<string>;
    public readonly attributeUnchangedVpnv4!: pulumi.Output<string>;
    public readonly attributeUnchangedVpnv6!: pulumi.Output<string>;
    public readonly authOptions!: pulumi.Output<string>;
    public readonly bfd!: pulumi.Output<string>;
    public readonly capabilityDefaultOriginate!: pulumi.Output<string>;
    public readonly capabilityDefaultOriginate6!: pulumi.Output<string>;
    public readonly capabilityDynamic!: pulumi.Output<string>;
    public readonly capabilityGracefulRestart!: pulumi.Output<string>;
    public readonly capabilityGracefulRestart6!: pulumi.Output<string>;
    public readonly capabilityGracefulRestartEvpn!: pulumi.Output<string>;
    public readonly capabilityGracefulRestartVpnv4!: pulumi.Output<string>;
    public readonly capabilityGracefulRestartVpnv6!: pulumi.Output<string>;
    public readonly capabilityOrf!: pulumi.Output<string>;
    public readonly capabilityOrf6!: pulumi.Output<string>;
    public readonly capabilityRouteRefresh!: pulumi.Output<string>;
    public readonly conditionalAdvertise6s!: pulumi.Output<outputs.RouterbgpNeighborConditionalAdvertise6[] | undefined>;
    public readonly conditionalAdvertises!: pulumi.Output<outputs.RouterbgpNeighborConditionalAdvertise[] | undefined>;
    public readonly connectTimer!: pulumi.Output<number>;
    public readonly defaultOriginateRoutemap!: pulumi.Output<string>;
    public readonly defaultOriginateRoutemap6!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly distributeListIn!: pulumi.Output<string>;
    public readonly distributeListIn6!: pulumi.Output<string>;
    public readonly distributeListInVpnv4!: pulumi.Output<string>;
    public readonly distributeListInVpnv6!: pulumi.Output<string>;
    public readonly distributeListOut!: pulumi.Output<string>;
    public readonly distributeListOut6!: pulumi.Output<string>;
    public readonly distributeListOutVpnv4!: pulumi.Output<string>;
    public readonly distributeListOutVpnv6!: pulumi.Output<string>;
    public readonly dontCapabilityNegotiate!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly ebgpEnforceMultihop!: pulumi.Output<string>;
    public readonly ebgpMultihopTtl!: pulumi.Output<number>;
    public readonly filterListIn!: pulumi.Output<string>;
    public readonly filterListIn6!: pulumi.Output<string>;
    public readonly filterListInVpnv4!: pulumi.Output<string>;
    public readonly filterListInVpnv6!: pulumi.Output<string>;
    public readonly filterListOut!: pulumi.Output<string>;
    public readonly filterListOut6!: pulumi.Output<string>;
    public readonly filterListOutVpnv4!: pulumi.Output<string>;
    public readonly filterListOutVpnv6!: pulumi.Output<string>;
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    public readonly holdtimeTimer!: pulumi.Output<number>;
    public readonly interface!: pulumi.Output<string>;
    public readonly ip!: pulumi.Output<string>;
    public readonly keepAliveTimer!: pulumi.Output<number>;
    public readonly linkDownFailover!: pulumi.Output<string>;
    public readonly localAs!: pulumi.Output<number>;
    public readonly localAsNoPrepend!: pulumi.Output<string>;
    public readonly localAsReplaceAs!: pulumi.Output<string>;
    public readonly maximumPrefix!: pulumi.Output<number>;
    public readonly maximumPrefix6!: pulumi.Output<number>;
    public readonly maximumPrefixEvpn!: pulumi.Output<number>;
    public readonly maximumPrefixThreshold!: pulumi.Output<number>;
    public readonly maximumPrefixThreshold6!: pulumi.Output<number>;
    public readonly maximumPrefixThresholdEvpn!: pulumi.Output<number>;
    public readonly maximumPrefixThresholdVpnv4!: pulumi.Output<number>;
    public readonly maximumPrefixThresholdVpnv6!: pulumi.Output<number>;
    public readonly maximumPrefixVpnv4!: pulumi.Output<number>;
    public readonly maximumPrefixVpnv6!: pulumi.Output<number>;
    public readonly maximumPrefixWarningOnly!: pulumi.Output<string>;
    public readonly maximumPrefixWarningOnly6!: pulumi.Output<string>;
    public readonly maximumPrefixWarningOnlyEvpn!: pulumi.Output<string>;
    public readonly maximumPrefixWarningOnlyVpnv4!: pulumi.Output<string>;
    public readonly maximumPrefixWarningOnlyVpnv6!: pulumi.Output<string>;
    public readonly nextHopSelf!: pulumi.Output<string>;
    public readonly nextHopSelf6!: pulumi.Output<string>;
    public readonly nextHopSelfRr!: pulumi.Output<string>;
    public readonly nextHopSelfRr6!: pulumi.Output<string>;
    public readonly nextHopSelfVpnv4!: pulumi.Output<string>;
    public readonly nextHopSelfVpnv6!: pulumi.Output<string>;
    public readonly overrideCapability!: pulumi.Output<string>;
    public readonly passive!: pulumi.Output<string>;
    public readonly password!: pulumi.Output<string | undefined>;
    public readonly prefixListIn!: pulumi.Output<string>;
    public readonly prefixListIn6!: pulumi.Output<string>;
    public readonly prefixListInVpnv4!: pulumi.Output<string>;
    public readonly prefixListInVpnv6!: pulumi.Output<string>;
    public readonly prefixListOut!: pulumi.Output<string>;
    public readonly prefixListOut6!: pulumi.Output<string>;
    public readonly prefixListOutVpnv4!: pulumi.Output<string>;
    public readonly prefixListOutVpnv6!: pulumi.Output<string>;
    public readonly remoteAs!: pulumi.Output<number>;
    public readonly removePrivateAs!: pulumi.Output<string>;
    public readonly removePrivateAs6!: pulumi.Output<string>;
    public readonly removePrivateAsEvpn!: pulumi.Output<string>;
    public readonly removePrivateAsVpnv4!: pulumi.Output<string>;
    public readonly removePrivateAsVpnv6!: pulumi.Output<string>;
    public readonly restartTime!: pulumi.Output<number>;
    public readonly retainStaleTime!: pulumi.Output<number>;
    public readonly routeMapIn!: pulumi.Output<string>;
    public readonly routeMapIn6!: pulumi.Output<string>;
    public readonly routeMapInEvpn!: pulumi.Output<string>;
    public readonly routeMapInVpnv4!: pulumi.Output<string>;
    public readonly routeMapInVpnv6!: pulumi.Output<string>;
    public readonly routeMapOut!: pulumi.Output<string>;
    public readonly routeMapOut6!: pulumi.Output<string>;
    public readonly routeMapOut6Preferable!: pulumi.Output<string>;
    public readonly routeMapOutEvpn!: pulumi.Output<string>;
    public readonly routeMapOutPreferable!: pulumi.Output<string>;
    public readonly routeMapOutVpnv4!: pulumi.Output<string>;
    public readonly routeMapOutVpnv4Preferable!: pulumi.Output<string>;
    public readonly routeMapOutVpnv6!: pulumi.Output<string>;
    public readonly routeMapOutVpnv6Preferable!: pulumi.Output<string>;
    public readonly routeReflectorClient!: pulumi.Output<string>;
    public readonly routeReflectorClient6!: pulumi.Output<string>;
    public readonly routeReflectorClientEvpn!: pulumi.Output<string>;
    public readonly routeReflectorClientVpnv4!: pulumi.Output<string>;
    public readonly routeReflectorClientVpnv6!: pulumi.Output<string>;
    public readonly routeServerClient!: pulumi.Output<string>;
    public readonly routeServerClient6!: pulumi.Output<string>;
    public readonly routeServerClientEvpn!: pulumi.Output<string>;
    public readonly routeServerClientVpnv4!: pulumi.Output<string>;
    public readonly routeServerClientVpnv6!: pulumi.Output<string>;
    public readonly sendCommunity!: pulumi.Output<string>;
    public readonly sendCommunity6!: pulumi.Output<string>;
    public readonly sendCommunityEvpn!: pulumi.Output<string>;
    public readonly sendCommunityVpnv4!: pulumi.Output<string>;
    public readonly sendCommunityVpnv6!: pulumi.Output<string>;
    public readonly shutdown!: pulumi.Output<string>;
    public readonly softReconfiguration!: pulumi.Output<string>;
    public readonly softReconfiguration6!: pulumi.Output<string>;
    public readonly softReconfigurationEvpn!: pulumi.Output<string>;
    public readonly softReconfigurationVpnv4!: pulumi.Output<string>;
    public readonly softReconfigurationVpnv6!: pulumi.Output<string>;
    public readonly staleRoute!: pulumi.Output<string>;
    public readonly strictCapabilityMatch!: pulumi.Output<string>;
    public readonly unsuppressMap!: pulumi.Output<string>;
    public readonly unsuppressMap6!: pulumi.Output<string>;
    public readonly updateSource!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string>;
    public readonly weight!: pulumi.Output<number>;

    /**
     * Create a RouterbgpNeighbor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterbgpNeighborArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterbgpNeighborArgs | RouterbgpNeighborState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterbgpNeighborState | undefined;
            resourceInputs["activate"] = state ? state.activate : undefined;
            resourceInputs["activate6"] = state ? state.activate6 : undefined;
            resourceInputs["activateEvpn"] = state ? state.activateEvpn : undefined;
            resourceInputs["activateVpnv4"] = state ? state.activateVpnv4 : undefined;
            resourceInputs["activateVpnv6"] = state ? state.activateVpnv6 : undefined;
            resourceInputs["additionalPath"] = state ? state.additionalPath : undefined;
            resourceInputs["additionalPath6"] = state ? state.additionalPath6 : undefined;
            resourceInputs["additionalPathVpnv4"] = state ? state.additionalPathVpnv4 : undefined;
            resourceInputs["additionalPathVpnv6"] = state ? state.additionalPathVpnv6 : undefined;
            resourceInputs["advAdditionalPath"] = state ? state.advAdditionalPath : undefined;
            resourceInputs["advAdditionalPath6"] = state ? state.advAdditionalPath6 : undefined;
            resourceInputs["advAdditionalPathVpnv4"] = state ? state.advAdditionalPathVpnv4 : undefined;
            resourceInputs["advAdditionalPathVpnv6"] = state ? state.advAdditionalPathVpnv6 : undefined;
            resourceInputs["advertisementInterval"] = state ? state.advertisementInterval : undefined;
            resourceInputs["allowasIn"] = state ? state.allowasIn : undefined;
            resourceInputs["allowasIn6"] = state ? state.allowasIn6 : undefined;
            resourceInputs["allowasInEnable"] = state ? state.allowasInEnable : undefined;
            resourceInputs["allowasInEnable6"] = state ? state.allowasInEnable6 : undefined;
            resourceInputs["allowasInEnableEvpn"] = state ? state.allowasInEnableEvpn : undefined;
            resourceInputs["allowasInEnableVpnv4"] = state ? state.allowasInEnableVpnv4 : undefined;
            resourceInputs["allowasInEnableVpnv6"] = state ? state.allowasInEnableVpnv6 : undefined;
            resourceInputs["allowasInEvpn"] = state ? state.allowasInEvpn : undefined;
            resourceInputs["allowasInVpnv4"] = state ? state.allowasInVpnv4 : undefined;
            resourceInputs["allowasInVpnv6"] = state ? state.allowasInVpnv6 : undefined;
            resourceInputs["asOverride"] = state ? state.asOverride : undefined;
            resourceInputs["asOverride6"] = state ? state.asOverride6 : undefined;
            resourceInputs["attributeUnchanged"] = state ? state.attributeUnchanged : undefined;
            resourceInputs["attributeUnchanged6"] = state ? state.attributeUnchanged6 : undefined;
            resourceInputs["attributeUnchangedVpnv4"] = state ? state.attributeUnchangedVpnv4 : undefined;
            resourceInputs["attributeUnchangedVpnv6"] = state ? state.attributeUnchangedVpnv6 : undefined;
            resourceInputs["authOptions"] = state ? state.authOptions : undefined;
            resourceInputs["bfd"] = state ? state.bfd : undefined;
            resourceInputs["capabilityDefaultOriginate"] = state ? state.capabilityDefaultOriginate : undefined;
            resourceInputs["capabilityDefaultOriginate6"] = state ? state.capabilityDefaultOriginate6 : undefined;
            resourceInputs["capabilityDynamic"] = state ? state.capabilityDynamic : undefined;
            resourceInputs["capabilityGracefulRestart"] = state ? state.capabilityGracefulRestart : undefined;
            resourceInputs["capabilityGracefulRestart6"] = state ? state.capabilityGracefulRestart6 : undefined;
            resourceInputs["capabilityGracefulRestartEvpn"] = state ? state.capabilityGracefulRestartEvpn : undefined;
            resourceInputs["capabilityGracefulRestartVpnv4"] = state ? state.capabilityGracefulRestartVpnv4 : undefined;
            resourceInputs["capabilityGracefulRestartVpnv6"] = state ? state.capabilityGracefulRestartVpnv6 : undefined;
            resourceInputs["capabilityOrf"] = state ? state.capabilityOrf : undefined;
            resourceInputs["capabilityOrf6"] = state ? state.capabilityOrf6 : undefined;
            resourceInputs["capabilityRouteRefresh"] = state ? state.capabilityRouteRefresh : undefined;
            resourceInputs["conditionalAdvertise6s"] = state ? state.conditionalAdvertise6s : undefined;
            resourceInputs["conditionalAdvertises"] = state ? state.conditionalAdvertises : undefined;
            resourceInputs["connectTimer"] = state ? state.connectTimer : undefined;
            resourceInputs["defaultOriginateRoutemap"] = state ? state.defaultOriginateRoutemap : undefined;
            resourceInputs["defaultOriginateRoutemap6"] = state ? state.defaultOriginateRoutemap6 : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["distributeListIn"] = state ? state.distributeListIn : undefined;
            resourceInputs["distributeListIn6"] = state ? state.distributeListIn6 : undefined;
            resourceInputs["distributeListInVpnv4"] = state ? state.distributeListInVpnv4 : undefined;
            resourceInputs["distributeListInVpnv6"] = state ? state.distributeListInVpnv6 : undefined;
            resourceInputs["distributeListOut"] = state ? state.distributeListOut : undefined;
            resourceInputs["distributeListOut6"] = state ? state.distributeListOut6 : undefined;
            resourceInputs["distributeListOutVpnv4"] = state ? state.distributeListOutVpnv4 : undefined;
            resourceInputs["distributeListOutVpnv6"] = state ? state.distributeListOutVpnv6 : undefined;
            resourceInputs["dontCapabilityNegotiate"] = state ? state.dontCapabilityNegotiate : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["ebgpEnforceMultihop"] = state ? state.ebgpEnforceMultihop : undefined;
            resourceInputs["ebgpMultihopTtl"] = state ? state.ebgpMultihopTtl : undefined;
            resourceInputs["filterListIn"] = state ? state.filterListIn : undefined;
            resourceInputs["filterListIn6"] = state ? state.filterListIn6 : undefined;
            resourceInputs["filterListInVpnv4"] = state ? state.filterListInVpnv4 : undefined;
            resourceInputs["filterListInVpnv6"] = state ? state.filterListInVpnv6 : undefined;
            resourceInputs["filterListOut"] = state ? state.filterListOut : undefined;
            resourceInputs["filterListOut6"] = state ? state.filterListOut6 : undefined;
            resourceInputs["filterListOutVpnv4"] = state ? state.filterListOutVpnv4 : undefined;
            resourceInputs["filterListOutVpnv6"] = state ? state.filterListOutVpnv6 : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["holdtimeTimer"] = state ? state.holdtimeTimer : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["keepAliveTimer"] = state ? state.keepAliveTimer : undefined;
            resourceInputs["linkDownFailover"] = state ? state.linkDownFailover : undefined;
            resourceInputs["localAs"] = state ? state.localAs : undefined;
            resourceInputs["localAsNoPrepend"] = state ? state.localAsNoPrepend : undefined;
            resourceInputs["localAsReplaceAs"] = state ? state.localAsReplaceAs : undefined;
            resourceInputs["maximumPrefix"] = state ? state.maximumPrefix : undefined;
            resourceInputs["maximumPrefix6"] = state ? state.maximumPrefix6 : undefined;
            resourceInputs["maximumPrefixEvpn"] = state ? state.maximumPrefixEvpn : undefined;
            resourceInputs["maximumPrefixThreshold"] = state ? state.maximumPrefixThreshold : undefined;
            resourceInputs["maximumPrefixThreshold6"] = state ? state.maximumPrefixThreshold6 : undefined;
            resourceInputs["maximumPrefixThresholdEvpn"] = state ? state.maximumPrefixThresholdEvpn : undefined;
            resourceInputs["maximumPrefixThresholdVpnv4"] = state ? state.maximumPrefixThresholdVpnv4 : undefined;
            resourceInputs["maximumPrefixThresholdVpnv6"] = state ? state.maximumPrefixThresholdVpnv6 : undefined;
            resourceInputs["maximumPrefixVpnv4"] = state ? state.maximumPrefixVpnv4 : undefined;
            resourceInputs["maximumPrefixVpnv6"] = state ? state.maximumPrefixVpnv6 : undefined;
            resourceInputs["maximumPrefixWarningOnly"] = state ? state.maximumPrefixWarningOnly : undefined;
            resourceInputs["maximumPrefixWarningOnly6"] = state ? state.maximumPrefixWarningOnly6 : undefined;
            resourceInputs["maximumPrefixWarningOnlyEvpn"] = state ? state.maximumPrefixWarningOnlyEvpn : undefined;
            resourceInputs["maximumPrefixWarningOnlyVpnv4"] = state ? state.maximumPrefixWarningOnlyVpnv4 : undefined;
            resourceInputs["maximumPrefixWarningOnlyVpnv6"] = state ? state.maximumPrefixWarningOnlyVpnv6 : undefined;
            resourceInputs["nextHopSelf"] = state ? state.nextHopSelf : undefined;
            resourceInputs["nextHopSelf6"] = state ? state.nextHopSelf6 : undefined;
            resourceInputs["nextHopSelfRr"] = state ? state.nextHopSelfRr : undefined;
            resourceInputs["nextHopSelfRr6"] = state ? state.nextHopSelfRr6 : undefined;
            resourceInputs["nextHopSelfVpnv4"] = state ? state.nextHopSelfVpnv4 : undefined;
            resourceInputs["nextHopSelfVpnv6"] = state ? state.nextHopSelfVpnv6 : undefined;
            resourceInputs["overrideCapability"] = state ? state.overrideCapability : undefined;
            resourceInputs["passive"] = state ? state.passive : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["prefixListIn"] = state ? state.prefixListIn : undefined;
            resourceInputs["prefixListIn6"] = state ? state.prefixListIn6 : undefined;
            resourceInputs["prefixListInVpnv4"] = state ? state.prefixListInVpnv4 : undefined;
            resourceInputs["prefixListInVpnv6"] = state ? state.prefixListInVpnv6 : undefined;
            resourceInputs["prefixListOut"] = state ? state.prefixListOut : undefined;
            resourceInputs["prefixListOut6"] = state ? state.prefixListOut6 : undefined;
            resourceInputs["prefixListOutVpnv4"] = state ? state.prefixListOutVpnv4 : undefined;
            resourceInputs["prefixListOutVpnv6"] = state ? state.prefixListOutVpnv6 : undefined;
            resourceInputs["remoteAs"] = state ? state.remoteAs : undefined;
            resourceInputs["removePrivateAs"] = state ? state.removePrivateAs : undefined;
            resourceInputs["removePrivateAs6"] = state ? state.removePrivateAs6 : undefined;
            resourceInputs["removePrivateAsEvpn"] = state ? state.removePrivateAsEvpn : undefined;
            resourceInputs["removePrivateAsVpnv4"] = state ? state.removePrivateAsVpnv4 : undefined;
            resourceInputs["removePrivateAsVpnv6"] = state ? state.removePrivateAsVpnv6 : undefined;
            resourceInputs["restartTime"] = state ? state.restartTime : undefined;
            resourceInputs["retainStaleTime"] = state ? state.retainStaleTime : undefined;
            resourceInputs["routeMapIn"] = state ? state.routeMapIn : undefined;
            resourceInputs["routeMapIn6"] = state ? state.routeMapIn6 : undefined;
            resourceInputs["routeMapInEvpn"] = state ? state.routeMapInEvpn : undefined;
            resourceInputs["routeMapInVpnv4"] = state ? state.routeMapInVpnv4 : undefined;
            resourceInputs["routeMapInVpnv6"] = state ? state.routeMapInVpnv6 : undefined;
            resourceInputs["routeMapOut"] = state ? state.routeMapOut : undefined;
            resourceInputs["routeMapOut6"] = state ? state.routeMapOut6 : undefined;
            resourceInputs["routeMapOut6Preferable"] = state ? state.routeMapOut6Preferable : undefined;
            resourceInputs["routeMapOutEvpn"] = state ? state.routeMapOutEvpn : undefined;
            resourceInputs["routeMapOutPreferable"] = state ? state.routeMapOutPreferable : undefined;
            resourceInputs["routeMapOutVpnv4"] = state ? state.routeMapOutVpnv4 : undefined;
            resourceInputs["routeMapOutVpnv4Preferable"] = state ? state.routeMapOutVpnv4Preferable : undefined;
            resourceInputs["routeMapOutVpnv6"] = state ? state.routeMapOutVpnv6 : undefined;
            resourceInputs["routeMapOutVpnv6Preferable"] = state ? state.routeMapOutVpnv6Preferable : undefined;
            resourceInputs["routeReflectorClient"] = state ? state.routeReflectorClient : undefined;
            resourceInputs["routeReflectorClient6"] = state ? state.routeReflectorClient6 : undefined;
            resourceInputs["routeReflectorClientEvpn"] = state ? state.routeReflectorClientEvpn : undefined;
            resourceInputs["routeReflectorClientVpnv4"] = state ? state.routeReflectorClientVpnv4 : undefined;
            resourceInputs["routeReflectorClientVpnv6"] = state ? state.routeReflectorClientVpnv6 : undefined;
            resourceInputs["routeServerClient"] = state ? state.routeServerClient : undefined;
            resourceInputs["routeServerClient6"] = state ? state.routeServerClient6 : undefined;
            resourceInputs["routeServerClientEvpn"] = state ? state.routeServerClientEvpn : undefined;
            resourceInputs["routeServerClientVpnv4"] = state ? state.routeServerClientVpnv4 : undefined;
            resourceInputs["routeServerClientVpnv6"] = state ? state.routeServerClientVpnv6 : undefined;
            resourceInputs["sendCommunity"] = state ? state.sendCommunity : undefined;
            resourceInputs["sendCommunity6"] = state ? state.sendCommunity6 : undefined;
            resourceInputs["sendCommunityEvpn"] = state ? state.sendCommunityEvpn : undefined;
            resourceInputs["sendCommunityVpnv4"] = state ? state.sendCommunityVpnv4 : undefined;
            resourceInputs["sendCommunityVpnv6"] = state ? state.sendCommunityVpnv6 : undefined;
            resourceInputs["shutdown"] = state ? state.shutdown : undefined;
            resourceInputs["softReconfiguration"] = state ? state.softReconfiguration : undefined;
            resourceInputs["softReconfiguration6"] = state ? state.softReconfiguration6 : undefined;
            resourceInputs["softReconfigurationEvpn"] = state ? state.softReconfigurationEvpn : undefined;
            resourceInputs["softReconfigurationVpnv4"] = state ? state.softReconfigurationVpnv4 : undefined;
            resourceInputs["softReconfigurationVpnv6"] = state ? state.softReconfigurationVpnv6 : undefined;
            resourceInputs["staleRoute"] = state ? state.staleRoute : undefined;
            resourceInputs["strictCapabilityMatch"] = state ? state.strictCapabilityMatch : undefined;
            resourceInputs["unsuppressMap"] = state ? state.unsuppressMap : undefined;
            resourceInputs["unsuppressMap6"] = state ? state.unsuppressMap6 : undefined;
            resourceInputs["updateSource"] = state ? state.updateSource : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as RouterbgpNeighborArgs | undefined;
            if ((!args || args.ip === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ip'");
            }
            resourceInputs["activate"] = args ? args.activate : undefined;
            resourceInputs["activate6"] = args ? args.activate6 : undefined;
            resourceInputs["activateEvpn"] = args ? args.activateEvpn : undefined;
            resourceInputs["activateVpnv4"] = args ? args.activateVpnv4 : undefined;
            resourceInputs["activateVpnv6"] = args ? args.activateVpnv6 : undefined;
            resourceInputs["additionalPath"] = args ? args.additionalPath : undefined;
            resourceInputs["additionalPath6"] = args ? args.additionalPath6 : undefined;
            resourceInputs["additionalPathVpnv4"] = args ? args.additionalPathVpnv4 : undefined;
            resourceInputs["additionalPathVpnv6"] = args ? args.additionalPathVpnv6 : undefined;
            resourceInputs["advAdditionalPath"] = args ? args.advAdditionalPath : undefined;
            resourceInputs["advAdditionalPath6"] = args ? args.advAdditionalPath6 : undefined;
            resourceInputs["advAdditionalPathVpnv4"] = args ? args.advAdditionalPathVpnv4 : undefined;
            resourceInputs["advAdditionalPathVpnv6"] = args ? args.advAdditionalPathVpnv6 : undefined;
            resourceInputs["advertisementInterval"] = args ? args.advertisementInterval : undefined;
            resourceInputs["allowasIn"] = args ? args.allowasIn : undefined;
            resourceInputs["allowasIn6"] = args ? args.allowasIn6 : undefined;
            resourceInputs["allowasInEnable"] = args ? args.allowasInEnable : undefined;
            resourceInputs["allowasInEnable6"] = args ? args.allowasInEnable6 : undefined;
            resourceInputs["allowasInEnableEvpn"] = args ? args.allowasInEnableEvpn : undefined;
            resourceInputs["allowasInEnableVpnv4"] = args ? args.allowasInEnableVpnv4 : undefined;
            resourceInputs["allowasInEnableVpnv6"] = args ? args.allowasInEnableVpnv6 : undefined;
            resourceInputs["allowasInEvpn"] = args ? args.allowasInEvpn : undefined;
            resourceInputs["allowasInVpnv4"] = args ? args.allowasInVpnv4 : undefined;
            resourceInputs["allowasInVpnv6"] = args ? args.allowasInVpnv6 : undefined;
            resourceInputs["asOverride"] = args ? args.asOverride : undefined;
            resourceInputs["asOverride6"] = args ? args.asOverride6 : undefined;
            resourceInputs["attributeUnchanged"] = args ? args.attributeUnchanged : undefined;
            resourceInputs["attributeUnchanged6"] = args ? args.attributeUnchanged6 : undefined;
            resourceInputs["attributeUnchangedVpnv4"] = args ? args.attributeUnchangedVpnv4 : undefined;
            resourceInputs["attributeUnchangedVpnv6"] = args ? args.attributeUnchangedVpnv6 : undefined;
            resourceInputs["authOptions"] = args ? args.authOptions : undefined;
            resourceInputs["bfd"] = args ? args.bfd : undefined;
            resourceInputs["capabilityDefaultOriginate"] = args ? args.capabilityDefaultOriginate : undefined;
            resourceInputs["capabilityDefaultOriginate6"] = args ? args.capabilityDefaultOriginate6 : undefined;
            resourceInputs["capabilityDynamic"] = args ? args.capabilityDynamic : undefined;
            resourceInputs["capabilityGracefulRestart"] = args ? args.capabilityGracefulRestart : undefined;
            resourceInputs["capabilityGracefulRestart6"] = args ? args.capabilityGracefulRestart6 : undefined;
            resourceInputs["capabilityGracefulRestartEvpn"] = args ? args.capabilityGracefulRestartEvpn : undefined;
            resourceInputs["capabilityGracefulRestartVpnv4"] = args ? args.capabilityGracefulRestartVpnv4 : undefined;
            resourceInputs["capabilityGracefulRestartVpnv6"] = args ? args.capabilityGracefulRestartVpnv6 : undefined;
            resourceInputs["capabilityOrf"] = args ? args.capabilityOrf : undefined;
            resourceInputs["capabilityOrf6"] = args ? args.capabilityOrf6 : undefined;
            resourceInputs["capabilityRouteRefresh"] = args ? args.capabilityRouteRefresh : undefined;
            resourceInputs["conditionalAdvertise6s"] = args ? args.conditionalAdvertise6s : undefined;
            resourceInputs["conditionalAdvertises"] = args ? args.conditionalAdvertises : undefined;
            resourceInputs["connectTimer"] = args ? args.connectTimer : undefined;
            resourceInputs["defaultOriginateRoutemap"] = args ? args.defaultOriginateRoutemap : undefined;
            resourceInputs["defaultOriginateRoutemap6"] = args ? args.defaultOriginateRoutemap6 : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["distributeListIn"] = args ? args.distributeListIn : undefined;
            resourceInputs["distributeListIn6"] = args ? args.distributeListIn6 : undefined;
            resourceInputs["distributeListInVpnv4"] = args ? args.distributeListInVpnv4 : undefined;
            resourceInputs["distributeListInVpnv6"] = args ? args.distributeListInVpnv6 : undefined;
            resourceInputs["distributeListOut"] = args ? args.distributeListOut : undefined;
            resourceInputs["distributeListOut6"] = args ? args.distributeListOut6 : undefined;
            resourceInputs["distributeListOutVpnv4"] = args ? args.distributeListOutVpnv4 : undefined;
            resourceInputs["distributeListOutVpnv6"] = args ? args.distributeListOutVpnv6 : undefined;
            resourceInputs["dontCapabilityNegotiate"] = args ? args.dontCapabilityNegotiate : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["ebgpEnforceMultihop"] = args ? args.ebgpEnforceMultihop : undefined;
            resourceInputs["ebgpMultihopTtl"] = args ? args.ebgpMultihopTtl : undefined;
            resourceInputs["filterListIn"] = args ? args.filterListIn : undefined;
            resourceInputs["filterListIn6"] = args ? args.filterListIn6 : undefined;
            resourceInputs["filterListInVpnv4"] = args ? args.filterListInVpnv4 : undefined;
            resourceInputs["filterListInVpnv6"] = args ? args.filterListInVpnv6 : undefined;
            resourceInputs["filterListOut"] = args ? args.filterListOut : undefined;
            resourceInputs["filterListOut6"] = args ? args.filterListOut6 : undefined;
            resourceInputs["filterListOutVpnv4"] = args ? args.filterListOutVpnv4 : undefined;
            resourceInputs["filterListOutVpnv6"] = args ? args.filterListOutVpnv6 : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["holdtimeTimer"] = args ? args.holdtimeTimer : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["ip"] = args ? args.ip : undefined;
            resourceInputs["keepAliveTimer"] = args ? args.keepAliveTimer : undefined;
            resourceInputs["linkDownFailover"] = args ? args.linkDownFailover : undefined;
            resourceInputs["localAs"] = args ? args.localAs : undefined;
            resourceInputs["localAsNoPrepend"] = args ? args.localAsNoPrepend : undefined;
            resourceInputs["localAsReplaceAs"] = args ? args.localAsReplaceAs : undefined;
            resourceInputs["maximumPrefix"] = args ? args.maximumPrefix : undefined;
            resourceInputs["maximumPrefix6"] = args ? args.maximumPrefix6 : undefined;
            resourceInputs["maximumPrefixEvpn"] = args ? args.maximumPrefixEvpn : undefined;
            resourceInputs["maximumPrefixThreshold"] = args ? args.maximumPrefixThreshold : undefined;
            resourceInputs["maximumPrefixThreshold6"] = args ? args.maximumPrefixThreshold6 : undefined;
            resourceInputs["maximumPrefixThresholdEvpn"] = args ? args.maximumPrefixThresholdEvpn : undefined;
            resourceInputs["maximumPrefixThresholdVpnv4"] = args ? args.maximumPrefixThresholdVpnv4 : undefined;
            resourceInputs["maximumPrefixThresholdVpnv6"] = args ? args.maximumPrefixThresholdVpnv6 : undefined;
            resourceInputs["maximumPrefixVpnv4"] = args ? args.maximumPrefixVpnv4 : undefined;
            resourceInputs["maximumPrefixVpnv6"] = args ? args.maximumPrefixVpnv6 : undefined;
            resourceInputs["maximumPrefixWarningOnly"] = args ? args.maximumPrefixWarningOnly : undefined;
            resourceInputs["maximumPrefixWarningOnly6"] = args ? args.maximumPrefixWarningOnly6 : undefined;
            resourceInputs["maximumPrefixWarningOnlyEvpn"] = args ? args.maximumPrefixWarningOnlyEvpn : undefined;
            resourceInputs["maximumPrefixWarningOnlyVpnv4"] = args ? args.maximumPrefixWarningOnlyVpnv4 : undefined;
            resourceInputs["maximumPrefixWarningOnlyVpnv6"] = args ? args.maximumPrefixWarningOnlyVpnv6 : undefined;
            resourceInputs["nextHopSelf"] = args ? args.nextHopSelf : undefined;
            resourceInputs["nextHopSelf6"] = args ? args.nextHopSelf6 : undefined;
            resourceInputs["nextHopSelfRr"] = args ? args.nextHopSelfRr : undefined;
            resourceInputs["nextHopSelfRr6"] = args ? args.nextHopSelfRr6 : undefined;
            resourceInputs["nextHopSelfVpnv4"] = args ? args.nextHopSelfVpnv4 : undefined;
            resourceInputs["nextHopSelfVpnv6"] = args ? args.nextHopSelfVpnv6 : undefined;
            resourceInputs["overrideCapability"] = args ? args.overrideCapability : undefined;
            resourceInputs["passive"] = args ? args.passive : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["prefixListIn"] = args ? args.prefixListIn : undefined;
            resourceInputs["prefixListIn6"] = args ? args.prefixListIn6 : undefined;
            resourceInputs["prefixListInVpnv4"] = args ? args.prefixListInVpnv4 : undefined;
            resourceInputs["prefixListInVpnv6"] = args ? args.prefixListInVpnv6 : undefined;
            resourceInputs["prefixListOut"] = args ? args.prefixListOut : undefined;
            resourceInputs["prefixListOut6"] = args ? args.prefixListOut6 : undefined;
            resourceInputs["prefixListOutVpnv4"] = args ? args.prefixListOutVpnv4 : undefined;
            resourceInputs["prefixListOutVpnv6"] = args ? args.prefixListOutVpnv6 : undefined;
            resourceInputs["remoteAs"] = args ? args.remoteAs : undefined;
            resourceInputs["removePrivateAs"] = args ? args.removePrivateAs : undefined;
            resourceInputs["removePrivateAs6"] = args ? args.removePrivateAs6 : undefined;
            resourceInputs["removePrivateAsEvpn"] = args ? args.removePrivateAsEvpn : undefined;
            resourceInputs["removePrivateAsVpnv4"] = args ? args.removePrivateAsVpnv4 : undefined;
            resourceInputs["removePrivateAsVpnv6"] = args ? args.removePrivateAsVpnv6 : undefined;
            resourceInputs["restartTime"] = args ? args.restartTime : undefined;
            resourceInputs["retainStaleTime"] = args ? args.retainStaleTime : undefined;
            resourceInputs["routeMapIn"] = args ? args.routeMapIn : undefined;
            resourceInputs["routeMapIn6"] = args ? args.routeMapIn6 : undefined;
            resourceInputs["routeMapInEvpn"] = args ? args.routeMapInEvpn : undefined;
            resourceInputs["routeMapInVpnv4"] = args ? args.routeMapInVpnv4 : undefined;
            resourceInputs["routeMapInVpnv6"] = args ? args.routeMapInVpnv6 : undefined;
            resourceInputs["routeMapOut"] = args ? args.routeMapOut : undefined;
            resourceInputs["routeMapOut6"] = args ? args.routeMapOut6 : undefined;
            resourceInputs["routeMapOut6Preferable"] = args ? args.routeMapOut6Preferable : undefined;
            resourceInputs["routeMapOutEvpn"] = args ? args.routeMapOutEvpn : undefined;
            resourceInputs["routeMapOutPreferable"] = args ? args.routeMapOutPreferable : undefined;
            resourceInputs["routeMapOutVpnv4"] = args ? args.routeMapOutVpnv4 : undefined;
            resourceInputs["routeMapOutVpnv4Preferable"] = args ? args.routeMapOutVpnv4Preferable : undefined;
            resourceInputs["routeMapOutVpnv6"] = args ? args.routeMapOutVpnv6 : undefined;
            resourceInputs["routeMapOutVpnv6Preferable"] = args ? args.routeMapOutVpnv6Preferable : undefined;
            resourceInputs["routeReflectorClient"] = args ? args.routeReflectorClient : undefined;
            resourceInputs["routeReflectorClient6"] = args ? args.routeReflectorClient6 : undefined;
            resourceInputs["routeReflectorClientEvpn"] = args ? args.routeReflectorClientEvpn : undefined;
            resourceInputs["routeReflectorClientVpnv4"] = args ? args.routeReflectorClientVpnv4 : undefined;
            resourceInputs["routeReflectorClientVpnv6"] = args ? args.routeReflectorClientVpnv6 : undefined;
            resourceInputs["routeServerClient"] = args ? args.routeServerClient : undefined;
            resourceInputs["routeServerClient6"] = args ? args.routeServerClient6 : undefined;
            resourceInputs["routeServerClientEvpn"] = args ? args.routeServerClientEvpn : undefined;
            resourceInputs["routeServerClientVpnv4"] = args ? args.routeServerClientVpnv4 : undefined;
            resourceInputs["routeServerClientVpnv6"] = args ? args.routeServerClientVpnv6 : undefined;
            resourceInputs["sendCommunity"] = args ? args.sendCommunity : undefined;
            resourceInputs["sendCommunity6"] = args ? args.sendCommunity6 : undefined;
            resourceInputs["sendCommunityEvpn"] = args ? args.sendCommunityEvpn : undefined;
            resourceInputs["sendCommunityVpnv4"] = args ? args.sendCommunityVpnv4 : undefined;
            resourceInputs["sendCommunityVpnv6"] = args ? args.sendCommunityVpnv6 : undefined;
            resourceInputs["shutdown"] = args ? args.shutdown : undefined;
            resourceInputs["softReconfiguration"] = args ? args.softReconfiguration : undefined;
            resourceInputs["softReconfiguration6"] = args ? args.softReconfiguration6 : undefined;
            resourceInputs["softReconfigurationEvpn"] = args ? args.softReconfigurationEvpn : undefined;
            resourceInputs["softReconfigurationVpnv4"] = args ? args.softReconfigurationVpnv4 : undefined;
            resourceInputs["softReconfigurationVpnv6"] = args ? args.softReconfigurationVpnv6 : undefined;
            resourceInputs["staleRoute"] = args ? args.staleRoute : undefined;
            resourceInputs["strictCapabilityMatch"] = args ? args.strictCapabilityMatch : undefined;
            resourceInputs["unsuppressMap"] = args ? args.unsuppressMap : undefined;
            resourceInputs["unsuppressMap6"] = args ? args.unsuppressMap6 : undefined;
            resourceInputs["updateSource"] = args ? args.updateSource : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(RouterbgpNeighbor.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterbgpNeighbor resources.
 */
export interface RouterbgpNeighborState {
    activate?: pulumi.Input<string>;
    activate6?: pulumi.Input<string>;
    activateEvpn?: pulumi.Input<string>;
    activateVpnv4?: pulumi.Input<string>;
    activateVpnv6?: pulumi.Input<string>;
    additionalPath?: pulumi.Input<string>;
    additionalPath6?: pulumi.Input<string>;
    additionalPathVpnv4?: pulumi.Input<string>;
    additionalPathVpnv6?: pulumi.Input<string>;
    advAdditionalPath?: pulumi.Input<number>;
    advAdditionalPath6?: pulumi.Input<number>;
    advAdditionalPathVpnv4?: pulumi.Input<number>;
    advAdditionalPathVpnv6?: pulumi.Input<number>;
    advertisementInterval?: pulumi.Input<number>;
    allowasIn?: pulumi.Input<number>;
    allowasIn6?: pulumi.Input<number>;
    allowasInEnable?: pulumi.Input<string>;
    allowasInEnable6?: pulumi.Input<string>;
    allowasInEnableEvpn?: pulumi.Input<string>;
    allowasInEnableVpnv4?: pulumi.Input<string>;
    allowasInEnableVpnv6?: pulumi.Input<string>;
    allowasInEvpn?: pulumi.Input<number>;
    allowasInVpnv4?: pulumi.Input<number>;
    allowasInVpnv6?: pulumi.Input<number>;
    asOverride?: pulumi.Input<string>;
    asOverride6?: pulumi.Input<string>;
    attributeUnchanged?: pulumi.Input<string>;
    attributeUnchanged6?: pulumi.Input<string>;
    attributeUnchangedVpnv4?: pulumi.Input<string>;
    attributeUnchangedVpnv6?: pulumi.Input<string>;
    authOptions?: pulumi.Input<string>;
    bfd?: pulumi.Input<string>;
    capabilityDefaultOriginate?: pulumi.Input<string>;
    capabilityDefaultOriginate6?: pulumi.Input<string>;
    capabilityDynamic?: pulumi.Input<string>;
    capabilityGracefulRestart?: pulumi.Input<string>;
    capabilityGracefulRestart6?: pulumi.Input<string>;
    capabilityGracefulRestartEvpn?: pulumi.Input<string>;
    capabilityGracefulRestartVpnv4?: pulumi.Input<string>;
    capabilityGracefulRestartVpnv6?: pulumi.Input<string>;
    capabilityOrf?: pulumi.Input<string>;
    capabilityOrf6?: pulumi.Input<string>;
    capabilityRouteRefresh?: pulumi.Input<string>;
    conditionalAdvertise6s?: pulumi.Input<pulumi.Input<inputs.RouterbgpNeighborConditionalAdvertise6>[]>;
    conditionalAdvertises?: pulumi.Input<pulumi.Input<inputs.RouterbgpNeighborConditionalAdvertise>[]>;
    connectTimer?: pulumi.Input<number>;
    defaultOriginateRoutemap?: pulumi.Input<string>;
    defaultOriginateRoutemap6?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    distributeListIn?: pulumi.Input<string>;
    distributeListIn6?: pulumi.Input<string>;
    distributeListInVpnv4?: pulumi.Input<string>;
    distributeListInVpnv6?: pulumi.Input<string>;
    distributeListOut?: pulumi.Input<string>;
    distributeListOut6?: pulumi.Input<string>;
    distributeListOutVpnv4?: pulumi.Input<string>;
    distributeListOutVpnv6?: pulumi.Input<string>;
    dontCapabilityNegotiate?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    ebgpEnforceMultihop?: pulumi.Input<string>;
    ebgpMultihopTtl?: pulumi.Input<number>;
    filterListIn?: pulumi.Input<string>;
    filterListIn6?: pulumi.Input<string>;
    filterListInVpnv4?: pulumi.Input<string>;
    filterListInVpnv6?: pulumi.Input<string>;
    filterListOut?: pulumi.Input<string>;
    filterListOut6?: pulumi.Input<string>;
    filterListOutVpnv4?: pulumi.Input<string>;
    filterListOutVpnv6?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    holdtimeTimer?: pulumi.Input<number>;
    interface?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    keepAliveTimer?: pulumi.Input<number>;
    linkDownFailover?: pulumi.Input<string>;
    localAs?: pulumi.Input<number>;
    localAsNoPrepend?: pulumi.Input<string>;
    localAsReplaceAs?: pulumi.Input<string>;
    maximumPrefix?: pulumi.Input<number>;
    maximumPrefix6?: pulumi.Input<number>;
    maximumPrefixEvpn?: pulumi.Input<number>;
    maximumPrefixThreshold?: pulumi.Input<number>;
    maximumPrefixThreshold6?: pulumi.Input<number>;
    maximumPrefixThresholdEvpn?: pulumi.Input<number>;
    maximumPrefixThresholdVpnv4?: pulumi.Input<number>;
    maximumPrefixThresholdVpnv6?: pulumi.Input<number>;
    maximumPrefixVpnv4?: pulumi.Input<number>;
    maximumPrefixVpnv6?: pulumi.Input<number>;
    maximumPrefixWarningOnly?: pulumi.Input<string>;
    maximumPrefixWarningOnly6?: pulumi.Input<string>;
    maximumPrefixWarningOnlyEvpn?: pulumi.Input<string>;
    maximumPrefixWarningOnlyVpnv4?: pulumi.Input<string>;
    maximumPrefixWarningOnlyVpnv6?: pulumi.Input<string>;
    nextHopSelf?: pulumi.Input<string>;
    nextHopSelf6?: pulumi.Input<string>;
    nextHopSelfRr?: pulumi.Input<string>;
    nextHopSelfRr6?: pulumi.Input<string>;
    nextHopSelfVpnv4?: pulumi.Input<string>;
    nextHopSelfVpnv6?: pulumi.Input<string>;
    overrideCapability?: pulumi.Input<string>;
    passive?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    prefixListIn?: pulumi.Input<string>;
    prefixListIn6?: pulumi.Input<string>;
    prefixListInVpnv4?: pulumi.Input<string>;
    prefixListInVpnv6?: pulumi.Input<string>;
    prefixListOut?: pulumi.Input<string>;
    prefixListOut6?: pulumi.Input<string>;
    prefixListOutVpnv4?: pulumi.Input<string>;
    prefixListOutVpnv6?: pulumi.Input<string>;
    remoteAs?: pulumi.Input<number>;
    removePrivateAs?: pulumi.Input<string>;
    removePrivateAs6?: pulumi.Input<string>;
    removePrivateAsEvpn?: pulumi.Input<string>;
    removePrivateAsVpnv4?: pulumi.Input<string>;
    removePrivateAsVpnv6?: pulumi.Input<string>;
    restartTime?: pulumi.Input<number>;
    retainStaleTime?: pulumi.Input<number>;
    routeMapIn?: pulumi.Input<string>;
    routeMapIn6?: pulumi.Input<string>;
    routeMapInEvpn?: pulumi.Input<string>;
    routeMapInVpnv4?: pulumi.Input<string>;
    routeMapInVpnv6?: pulumi.Input<string>;
    routeMapOut?: pulumi.Input<string>;
    routeMapOut6?: pulumi.Input<string>;
    routeMapOut6Preferable?: pulumi.Input<string>;
    routeMapOutEvpn?: pulumi.Input<string>;
    routeMapOutPreferable?: pulumi.Input<string>;
    routeMapOutVpnv4?: pulumi.Input<string>;
    routeMapOutVpnv4Preferable?: pulumi.Input<string>;
    routeMapOutVpnv6?: pulumi.Input<string>;
    routeMapOutVpnv6Preferable?: pulumi.Input<string>;
    routeReflectorClient?: pulumi.Input<string>;
    routeReflectorClient6?: pulumi.Input<string>;
    routeReflectorClientEvpn?: pulumi.Input<string>;
    routeReflectorClientVpnv4?: pulumi.Input<string>;
    routeReflectorClientVpnv6?: pulumi.Input<string>;
    routeServerClient?: pulumi.Input<string>;
    routeServerClient6?: pulumi.Input<string>;
    routeServerClientEvpn?: pulumi.Input<string>;
    routeServerClientVpnv4?: pulumi.Input<string>;
    routeServerClientVpnv6?: pulumi.Input<string>;
    sendCommunity?: pulumi.Input<string>;
    sendCommunity6?: pulumi.Input<string>;
    sendCommunityEvpn?: pulumi.Input<string>;
    sendCommunityVpnv4?: pulumi.Input<string>;
    sendCommunityVpnv6?: pulumi.Input<string>;
    shutdown?: pulumi.Input<string>;
    softReconfiguration?: pulumi.Input<string>;
    softReconfiguration6?: pulumi.Input<string>;
    softReconfigurationEvpn?: pulumi.Input<string>;
    softReconfigurationVpnv4?: pulumi.Input<string>;
    softReconfigurationVpnv6?: pulumi.Input<string>;
    staleRoute?: pulumi.Input<string>;
    strictCapabilityMatch?: pulumi.Input<string>;
    unsuppressMap?: pulumi.Input<string>;
    unsuppressMap6?: pulumi.Input<string>;
    updateSource?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a RouterbgpNeighbor resource.
 */
export interface RouterbgpNeighborArgs {
    activate?: pulumi.Input<string>;
    activate6?: pulumi.Input<string>;
    activateEvpn?: pulumi.Input<string>;
    activateVpnv4?: pulumi.Input<string>;
    activateVpnv6?: pulumi.Input<string>;
    additionalPath?: pulumi.Input<string>;
    additionalPath6?: pulumi.Input<string>;
    additionalPathVpnv4?: pulumi.Input<string>;
    additionalPathVpnv6?: pulumi.Input<string>;
    advAdditionalPath?: pulumi.Input<number>;
    advAdditionalPath6?: pulumi.Input<number>;
    advAdditionalPathVpnv4?: pulumi.Input<number>;
    advAdditionalPathVpnv6?: pulumi.Input<number>;
    advertisementInterval?: pulumi.Input<number>;
    allowasIn?: pulumi.Input<number>;
    allowasIn6?: pulumi.Input<number>;
    allowasInEnable?: pulumi.Input<string>;
    allowasInEnable6?: pulumi.Input<string>;
    allowasInEnableEvpn?: pulumi.Input<string>;
    allowasInEnableVpnv4?: pulumi.Input<string>;
    allowasInEnableVpnv6?: pulumi.Input<string>;
    allowasInEvpn?: pulumi.Input<number>;
    allowasInVpnv4?: pulumi.Input<number>;
    allowasInVpnv6?: pulumi.Input<number>;
    asOverride?: pulumi.Input<string>;
    asOverride6?: pulumi.Input<string>;
    attributeUnchanged?: pulumi.Input<string>;
    attributeUnchanged6?: pulumi.Input<string>;
    attributeUnchangedVpnv4?: pulumi.Input<string>;
    attributeUnchangedVpnv6?: pulumi.Input<string>;
    authOptions?: pulumi.Input<string>;
    bfd?: pulumi.Input<string>;
    capabilityDefaultOriginate?: pulumi.Input<string>;
    capabilityDefaultOriginate6?: pulumi.Input<string>;
    capabilityDynamic?: pulumi.Input<string>;
    capabilityGracefulRestart?: pulumi.Input<string>;
    capabilityGracefulRestart6?: pulumi.Input<string>;
    capabilityGracefulRestartEvpn?: pulumi.Input<string>;
    capabilityGracefulRestartVpnv4?: pulumi.Input<string>;
    capabilityGracefulRestartVpnv6?: pulumi.Input<string>;
    capabilityOrf?: pulumi.Input<string>;
    capabilityOrf6?: pulumi.Input<string>;
    capabilityRouteRefresh?: pulumi.Input<string>;
    conditionalAdvertise6s?: pulumi.Input<pulumi.Input<inputs.RouterbgpNeighborConditionalAdvertise6>[]>;
    conditionalAdvertises?: pulumi.Input<pulumi.Input<inputs.RouterbgpNeighborConditionalAdvertise>[]>;
    connectTimer?: pulumi.Input<number>;
    defaultOriginateRoutemap?: pulumi.Input<string>;
    defaultOriginateRoutemap6?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    distributeListIn?: pulumi.Input<string>;
    distributeListIn6?: pulumi.Input<string>;
    distributeListInVpnv4?: pulumi.Input<string>;
    distributeListInVpnv6?: pulumi.Input<string>;
    distributeListOut?: pulumi.Input<string>;
    distributeListOut6?: pulumi.Input<string>;
    distributeListOutVpnv4?: pulumi.Input<string>;
    distributeListOutVpnv6?: pulumi.Input<string>;
    dontCapabilityNegotiate?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    ebgpEnforceMultihop?: pulumi.Input<string>;
    ebgpMultihopTtl?: pulumi.Input<number>;
    filterListIn?: pulumi.Input<string>;
    filterListIn6?: pulumi.Input<string>;
    filterListInVpnv4?: pulumi.Input<string>;
    filterListInVpnv6?: pulumi.Input<string>;
    filterListOut?: pulumi.Input<string>;
    filterListOut6?: pulumi.Input<string>;
    filterListOutVpnv4?: pulumi.Input<string>;
    filterListOutVpnv6?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    holdtimeTimer?: pulumi.Input<number>;
    interface?: pulumi.Input<string>;
    ip: pulumi.Input<string>;
    keepAliveTimer?: pulumi.Input<number>;
    linkDownFailover?: pulumi.Input<string>;
    localAs?: pulumi.Input<number>;
    localAsNoPrepend?: pulumi.Input<string>;
    localAsReplaceAs?: pulumi.Input<string>;
    maximumPrefix?: pulumi.Input<number>;
    maximumPrefix6?: pulumi.Input<number>;
    maximumPrefixEvpn?: pulumi.Input<number>;
    maximumPrefixThreshold?: pulumi.Input<number>;
    maximumPrefixThreshold6?: pulumi.Input<number>;
    maximumPrefixThresholdEvpn?: pulumi.Input<number>;
    maximumPrefixThresholdVpnv4?: pulumi.Input<number>;
    maximumPrefixThresholdVpnv6?: pulumi.Input<number>;
    maximumPrefixVpnv4?: pulumi.Input<number>;
    maximumPrefixVpnv6?: pulumi.Input<number>;
    maximumPrefixWarningOnly?: pulumi.Input<string>;
    maximumPrefixWarningOnly6?: pulumi.Input<string>;
    maximumPrefixWarningOnlyEvpn?: pulumi.Input<string>;
    maximumPrefixWarningOnlyVpnv4?: pulumi.Input<string>;
    maximumPrefixWarningOnlyVpnv6?: pulumi.Input<string>;
    nextHopSelf?: pulumi.Input<string>;
    nextHopSelf6?: pulumi.Input<string>;
    nextHopSelfRr?: pulumi.Input<string>;
    nextHopSelfRr6?: pulumi.Input<string>;
    nextHopSelfVpnv4?: pulumi.Input<string>;
    nextHopSelfVpnv6?: pulumi.Input<string>;
    overrideCapability?: pulumi.Input<string>;
    passive?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    prefixListIn?: pulumi.Input<string>;
    prefixListIn6?: pulumi.Input<string>;
    prefixListInVpnv4?: pulumi.Input<string>;
    prefixListInVpnv6?: pulumi.Input<string>;
    prefixListOut?: pulumi.Input<string>;
    prefixListOut6?: pulumi.Input<string>;
    prefixListOutVpnv4?: pulumi.Input<string>;
    prefixListOutVpnv6?: pulumi.Input<string>;
    remoteAs?: pulumi.Input<number>;
    removePrivateAs?: pulumi.Input<string>;
    removePrivateAs6?: pulumi.Input<string>;
    removePrivateAsEvpn?: pulumi.Input<string>;
    removePrivateAsVpnv4?: pulumi.Input<string>;
    removePrivateAsVpnv6?: pulumi.Input<string>;
    restartTime?: pulumi.Input<number>;
    retainStaleTime?: pulumi.Input<number>;
    routeMapIn?: pulumi.Input<string>;
    routeMapIn6?: pulumi.Input<string>;
    routeMapInEvpn?: pulumi.Input<string>;
    routeMapInVpnv4?: pulumi.Input<string>;
    routeMapInVpnv6?: pulumi.Input<string>;
    routeMapOut?: pulumi.Input<string>;
    routeMapOut6?: pulumi.Input<string>;
    routeMapOut6Preferable?: pulumi.Input<string>;
    routeMapOutEvpn?: pulumi.Input<string>;
    routeMapOutPreferable?: pulumi.Input<string>;
    routeMapOutVpnv4?: pulumi.Input<string>;
    routeMapOutVpnv4Preferable?: pulumi.Input<string>;
    routeMapOutVpnv6?: pulumi.Input<string>;
    routeMapOutVpnv6Preferable?: pulumi.Input<string>;
    routeReflectorClient?: pulumi.Input<string>;
    routeReflectorClient6?: pulumi.Input<string>;
    routeReflectorClientEvpn?: pulumi.Input<string>;
    routeReflectorClientVpnv4?: pulumi.Input<string>;
    routeReflectorClientVpnv6?: pulumi.Input<string>;
    routeServerClient?: pulumi.Input<string>;
    routeServerClient6?: pulumi.Input<string>;
    routeServerClientEvpn?: pulumi.Input<string>;
    routeServerClientVpnv4?: pulumi.Input<string>;
    routeServerClientVpnv6?: pulumi.Input<string>;
    sendCommunity?: pulumi.Input<string>;
    sendCommunity6?: pulumi.Input<string>;
    sendCommunityEvpn?: pulumi.Input<string>;
    sendCommunityVpnv4?: pulumi.Input<string>;
    sendCommunityVpnv6?: pulumi.Input<string>;
    shutdown?: pulumi.Input<string>;
    softReconfiguration?: pulumi.Input<string>;
    softReconfiguration6?: pulumi.Input<string>;
    softReconfigurationEvpn?: pulumi.Input<string>;
    softReconfigurationVpnv4?: pulumi.Input<string>;
    softReconfigurationVpnv6?: pulumi.Input<string>;
    staleRoute?: pulumi.Input<string>;
    strictCapabilityMatch?: pulumi.Input<string>;
    unsuppressMap?: pulumi.Input<string>;
    unsuppressMap6?: pulumi.Input<string>;
    updateSource?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    weight?: pulumi.Input<number>;
}
