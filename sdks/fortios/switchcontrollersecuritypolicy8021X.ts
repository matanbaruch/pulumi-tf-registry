// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Switchcontrollersecuritypolicy8021X extends pulumi.CustomResource {
    /**
     * Get an existing Switchcontrollersecuritypolicy8021X resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Switchcontrollersecuritypolicy8021XState, opts?: pulumi.CustomResourceOptions): Switchcontrollersecuritypolicy8021X {
        return new Switchcontrollersecuritypolicy8021X(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/switchcontrollersecuritypolicy8021X:Switchcontrollersecuritypolicy8021X';

    /**
     * Returns true if the given object is an instance of Switchcontrollersecuritypolicy8021X.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Switchcontrollersecuritypolicy8021X {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Switchcontrollersecuritypolicy8021X.__pulumiType;
    }

    public readonly authFailVlan!: pulumi.Output<string>;
    public readonly authFailVlanId!: pulumi.Output<string>;
    public readonly authFailVlanid!: pulumi.Output<number>;
    public readonly authserverTimeoutPeriod!: pulumi.Output<number>;
    public readonly authserverTimeoutTagged!: pulumi.Output<string>;
    public readonly authserverTimeoutTaggedVlanid!: pulumi.Output<string>;
    public readonly authserverTimeoutVlan!: pulumi.Output<string>;
    public readonly authserverTimeoutVlanid!: pulumi.Output<string>;
    public readonly dacl!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly eapAutoUntaggedVlans!: pulumi.Output<string>;
    public readonly eapPassthru!: pulumi.Output<string>;
    public readonly framevidApply!: pulumi.Output<string>;
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    public readonly guestAuthDelay!: pulumi.Output<number>;
    public readonly guestVlan!: pulumi.Output<string>;
    public readonly guestVlanId!: pulumi.Output<string>;
    public readonly guestVlanid!: pulumi.Output<number>;
    public readonly macAuthBypass!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly openAuth!: pulumi.Output<string>;
    public readonly policyType!: pulumi.Output<string>;
    public readonly radiusTimeoutOverwrite!: pulumi.Output<string>;
    public readonly securityMode!: pulumi.Output<string>;
    public readonly userGroups!: pulumi.Output<outputs.Switchcontrollersecuritypolicy8021XUserGroup[] | undefined>;
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a Switchcontrollersecuritypolicy8021X resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Switchcontrollersecuritypolicy8021XArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Switchcontrollersecuritypolicy8021XArgs | Switchcontrollersecuritypolicy8021XState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Switchcontrollersecuritypolicy8021XState | undefined;
            resourceInputs["authFailVlan"] = state ? state.authFailVlan : undefined;
            resourceInputs["authFailVlanId"] = state ? state.authFailVlanId : undefined;
            resourceInputs["authFailVlanid"] = state ? state.authFailVlanid : undefined;
            resourceInputs["authserverTimeoutPeriod"] = state ? state.authserverTimeoutPeriod : undefined;
            resourceInputs["authserverTimeoutTagged"] = state ? state.authserverTimeoutTagged : undefined;
            resourceInputs["authserverTimeoutTaggedVlanid"] = state ? state.authserverTimeoutTaggedVlanid : undefined;
            resourceInputs["authserverTimeoutVlan"] = state ? state.authserverTimeoutVlan : undefined;
            resourceInputs["authserverTimeoutVlanid"] = state ? state.authserverTimeoutVlanid : undefined;
            resourceInputs["dacl"] = state ? state.dacl : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["eapAutoUntaggedVlans"] = state ? state.eapAutoUntaggedVlans : undefined;
            resourceInputs["eapPassthru"] = state ? state.eapPassthru : undefined;
            resourceInputs["framevidApply"] = state ? state.framevidApply : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["guestAuthDelay"] = state ? state.guestAuthDelay : undefined;
            resourceInputs["guestVlan"] = state ? state.guestVlan : undefined;
            resourceInputs["guestVlanId"] = state ? state.guestVlanId : undefined;
            resourceInputs["guestVlanid"] = state ? state.guestVlanid : undefined;
            resourceInputs["macAuthBypass"] = state ? state.macAuthBypass : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["openAuth"] = state ? state.openAuth : undefined;
            resourceInputs["policyType"] = state ? state.policyType : undefined;
            resourceInputs["radiusTimeoutOverwrite"] = state ? state.radiusTimeoutOverwrite : undefined;
            resourceInputs["securityMode"] = state ? state.securityMode : undefined;
            resourceInputs["userGroups"] = state ? state.userGroups : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as Switchcontrollersecuritypolicy8021XArgs | undefined;
            resourceInputs["authFailVlan"] = args ? args.authFailVlan : undefined;
            resourceInputs["authFailVlanId"] = args ? args.authFailVlanId : undefined;
            resourceInputs["authFailVlanid"] = args ? args.authFailVlanid : undefined;
            resourceInputs["authserverTimeoutPeriod"] = args ? args.authserverTimeoutPeriod : undefined;
            resourceInputs["authserverTimeoutTagged"] = args ? args.authserverTimeoutTagged : undefined;
            resourceInputs["authserverTimeoutTaggedVlanid"] = args ? args.authserverTimeoutTaggedVlanid : undefined;
            resourceInputs["authserverTimeoutVlan"] = args ? args.authserverTimeoutVlan : undefined;
            resourceInputs["authserverTimeoutVlanid"] = args ? args.authserverTimeoutVlanid : undefined;
            resourceInputs["dacl"] = args ? args.dacl : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["eapAutoUntaggedVlans"] = args ? args.eapAutoUntaggedVlans : undefined;
            resourceInputs["eapPassthru"] = args ? args.eapPassthru : undefined;
            resourceInputs["framevidApply"] = args ? args.framevidApply : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["guestAuthDelay"] = args ? args.guestAuthDelay : undefined;
            resourceInputs["guestVlan"] = args ? args.guestVlan : undefined;
            resourceInputs["guestVlanId"] = args ? args.guestVlanId : undefined;
            resourceInputs["guestVlanid"] = args ? args.guestVlanid : undefined;
            resourceInputs["macAuthBypass"] = args ? args.macAuthBypass : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["openAuth"] = args ? args.openAuth : undefined;
            resourceInputs["policyType"] = args ? args.policyType : undefined;
            resourceInputs["radiusTimeoutOverwrite"] = args ? args.radiusTimeoutOverwrite : undefined;
            resourceInputs["securityMode"] = args ? args.securityMode : undefined;
            resourceInputs["userGroups"] = args ? args.userGroups : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Switchcontrollersecuritypolicy8021X.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Switchcontrollersecuritypolicy8021X resources.
 */
export interface Switchcontrollersecuritypolicy8021XState {
    authFailVlan?: pulumi.Input<string>;
    authFailVlanId?: pulumi.Input<string>;
    authFailVlanid?: pulumi.Input<number>;
    authserverTimeoutPeriod?: pulumi.Input<number>;
    authserverTimeoutTagged?: pulumi.Input<string>;
    authserverTimeoutTaggedVlanid?: pulumi.Input<string>;
    authserverTimeoutVlan?: pulumi.Input<string>;
    authserverTimeoutVlanid?: pulumi.Input<string>;
    dacl?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    eapAutoUntaggedVlans?: pulumi.Input<string>;
    eapPassthru?: pulumi.Input<string>;
    framevidApply?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    guestAuthDelay?: pulumi.Input<number>;
    guestVlan?: pulumi.Input<string>;
    guestVlanId?: pulumi.Input<string>;
    guestVlanid?: pulumi.Input<number>;
    macAuthBypass?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    openAuth?: pulumi.Input<string>;
    policyType?: pulumi.Input<string>;
    radiusTimeoutOverwrite?: pulumi.Input<string>;
    securityMode?: pulumi.Input<string>;
    userGroups?: pulumi.Input<pulumi.Input<inputs.Switchcontrollersecuritypolicy8021XUserGroup>[]>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Switchcontrollersecuritypolicy8021X resource.
 */
export interface Switchcontrollersecuritypolicy8021XArgs {
    authFailVlan?: pulumi.Input<string>;
    authFailVlanId?: pulumi.Input<string>;
    authFailVlanid?: pulumi.Input<number>;
    authserverTimeoutPeriod?: pulumi.Input<number>;
    authserverTimeoutTagged?: pulumi.Input<string>;
    authserverTimeoutTaggedVlanid?: pulumi.Input<string>;
    authserverTimeoutVlan?: pulumi.Input<string>;
    authserverTimeoutVlanid?: pulumi.Input<string>;
    dacl?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    eapAutoUntaggedVlans?: pulumi.Input<string>;
    eapPassthru?: pulumi.Input<string>;
    framevidApply?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    guestAuthDelay?: pulumi.Input<number>;
    guestVlan?: pulumi.Input<string>;
    guestVlanId?: pulumi.Input<string>;
    guestVlanid?: pulumi.Input<number>;
    macAuthBypass?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    openAuth?: pulumi.Input<string>;
    policyType?: pulumi.Input<string>;
    radiusTimeoutOverwrite?: pulumi.Input<string>;
    securityMode?: pulumi.Input<string>;
    userGroups?: pulumi.Input<pulumi.Input<inputs.Switchcontrollersecuritypolicy8021XUserGroup>[]>;
    vdomparam?: pulumi.Input<string>;
}
