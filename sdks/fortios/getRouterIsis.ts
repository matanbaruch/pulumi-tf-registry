// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRouterIsis(args?: GetRouterIsisArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterIsisResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getRouterIsis:getRouterIsis", {
        "id": args.id,
        "vdomparam": args.vdomparam,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterIsis.
 */
export interface GetRouterIsisArgs {
    id?: string;
    vdomparam?: string;
}

/**
 * A collection of values returned by getRouterIsis.
 */
export interface GetRouterIsisResult {
    readonly adjacencyCheck: string;
    readonly adjacencyCheck6: string;
    readonly advPassiveOnly: string;
    readonly advPassiveOnly6: string;
    readonly authKeychainL1: string;
    readonly authKeychainL2: string;
    readonly authModeL1: string;
    readonly authModeL2: string;
    readonly authPasswordL1: string;
    readonly authPasswordL2: string;
    readonly authSendonlyL1: string;
    readonly authSendonlyL2: string;
    readonly defaultOriginate: string;
    readonly defaultOriginate6: string;
    readonly dynamicHostname: string;
    readonly id: string;
    readonly ignoreLspErrors: string;
    readonly isType: string;
    readonly isisInterfaces: outputs.GetRouterIsisIsisInterface[];
    readonly isisNets: outputs.GetRouterIsisIsisNet[];
    readonly lspGenIntervalL1: number;
    readonly lspGenIntervalL2: number;
    readonly lspRefreshInterval: number;
    readonly maxLspLifetime: number;
    readonly metricStyle: string;
    readonly overloadBit: string;
    readonly overloadBitOnStartup: number;
    readonly overloadBitSuppress: string;
    readonly redistribute6L1: string;
    readonly redistribute6L1List: string;
    readonly redistribute6L2: string;
    readonly redistribute6L2List: string;
    readonly redistribute6s: outputs.GetRouterIsisRedistribute6[];
    readonly redistributeL1: string;
    readonly redistributeL1List: string;
    readonly redistributeL2: string;
    readonly redistributeL2List: string;
    readonly redistributes: outputs.GetRouterIsisRedistribute[];
    readonly spfIntervalExpL1: string;
    readonly spfIntervalExpL2: string;
    readonly summaryAddress6s: outputs.GetRouterIsisSummaryAddress6[];
    readonly summaryAddresses: outputs.GetRouterIsisSummaryAddress[];
    readonly vdomparam?: string;
}
export function getRouterIsisOutput(args?: GetRouterIsisOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterIsisResult> {
    return pulumi.output(args).apply((a: any) => getRouterIsis(a, opts))
}

/**
 * A collection of arguments for invoking getRouterIsis.
 */
export interface GetRouterIsisOutputArgs {
    id?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
