// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRouterAuthpath(args: GetRouterAuthpathArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterAuthpathResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getRouterAuthpath:getRouterAuthpath", {
        "id": args.id,
        "name": args.name,
        "vdomparam": args.vdomparam,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterAuthpath.
 */
export interface GetRouterAuthpathArgs {
    id?: string;
    name: string;
    vdomparam?: string;
}

/**
 * A collection of values returned by getRouterAuthpath.
 */
export interface GetRouterAuthpathResult {
    readonly device: string;
    readonly gateway: string;
    readonly id: string;
    readonly name: string;
    readonly vdomparam?: string;
}
export function getRouterAuthpathOutput(args: GetRouterAuthpathOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterAuthpathResult> {
    return pulumi.output(args).apply((a: any) => getRouterAuthpath(a, opts))
}

/**
 * A collection of arguments for invoking getRouterAuthpath.
 */
export interface GetRouterAuthpathOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
