// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class VpnipsecManualkeyinterface extends pulumi.CustomResource {
    /**
     * Get an existing VpnipsecManualkeyinterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnipsecManualkeyinterfaceState, opts?: pulumi.CustomResourceOptions): VpnipsecManualkeyinterface {
        return new VpnipsecManualkeyinterface(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/vpnipsecManualkeyinterface:VpnipsecManualkeyinterface';

    /**
     * Returns true if the given object is an instance of VpnipsecManualkeyinterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpnipsecManualkeyinterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpnipsecManualkeyinterface.__pulumiType;
    }

    public readonly addrType!: pulumi.Output<string>;
    public readonly authAlg!: pulumi.Output<string>;
    public readonly authKey!: pulumi.Output<string>;
    public readonly encAlg!: pulumi.Output<string>;
    public readonly encKey!: pulumi.Output<string>;
    public readonly interface!: pulumi.Output<string>;
    public readonly ipVersion!: pulumi.Output<string>;
    public readonly localGw!: pulumi.Output<string>;
    public readonly localGw6!: pulumi.Output<string>;
    public readonly localSpi!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly npuOffload!: pulumi.Output<string>;
    public readonly remoteGw!: pulumi.Output<string>;
    public readonly remoteGw6!: pulumi.Output<string>;
    public readonly remoteSpi!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a VpnipsecManualkeyinterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpnipsecManualkeyinterfaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnipsecManualkeyinterfaceArgs | VpnipsecManualkeyinterfaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnipsecManualkeyinterfaceState | undefined;
            resourceInputs["addrType"] = state ? state.addrType : undefined;
            resourceInputs["authAlg"] = state ? state.authAlg : undefined;
            resourceInputs["authKey"] = state ? state.authKey : undefined;
            resourceInputs["encAlg"] = state ? state.encAlg : undefined;
            resourceInputs["encKey"] = state ? state.encKey : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["ipVersion"] = state ? state.ipVersion : undefined;
            resourceInputs["localGw"] = state ? state.localGw : undefined;
            resourceInputs["localGw6"] = state ? state.localGw6 : undefined;
            resourceInputs["localSpi"] = state ? state.localSpi : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["npuOffload"] = state ? state.npuOffload : undefined;
            resourceInputs["remoteGw"] = state ? state.remoteGw : undefined;
            resourceInputs["remoteGw6"] = state ? state.remoteGw6 : undefined;
            resourceInputs["remoteSpi"] = state ? state.remoteSpi : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as VpnipsecManualkeyinterfaceArgs | undefined;
            if ((!args || args.authAlg === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authAlg'");
            }
            if ((!args || args.encAlg === undefined) && !opts.urn) {
                throw new Error("Missing required property 'encAlg'");
            }
            if ((!args || args.interface === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interface'");
            }
            if ((!args || args.remoteGw === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remoteGw'");
            }
            if ((!args || args.remoteGw6 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remoteGw6'");
            }
            resourceInputs["addrType"] = args ? args.addrType : undefined;
            resourceInputs["authAlg"] = args ? args.authAlg : undefined;
            resourceInputs["authKey"] = args?.authKey ? pulumi.secret(args.authKey) : undefined;
            resourceInputs["encAlg"] = args ? args.encAlg : undefined;
            resourceInputs["encKey"] = args?.encKey ? pulumi.secret(args.encKey) : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["ipVersion"] = args ? args.ipVersion : undefined;
            resourceInputs["localGw"] = args ? args.localGw : undefined;
            resourceInputs["localGw6"] = args ? args.localGw6 : undefined;
            resourceInputs["localSpi"] = args ? args.localSpi : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["npuOffload"] = args ? args.npuOffload : undefined;
            resourceInputs["remoteGw"] = args ? args.remoteGw : undefined;
            resourceInputs["remoteGw6"] = args ? args.remoteGw6 : undefined;
            resourceInputs["remoteSpi"] = args ? args.remoteSpi : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["authKey", "encKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(VpnipsecManualkeyinterface.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VpnipsecManualkeyinterface resources.
 */
export interface VpnipsecManualkeyinterfaceState {
    addrType?: pulumi.Input<string>;
    authAlg?: pulumi.Input<string>;
    authKey?: pulumi.Input<string>;
    encAlg?: pulumi.Input<string>;
    encKey?: pulumi.Input<string>;
    interface?: pulumi.Input<string>;
    ipVersion?: pulumi.Input<string>;
    localGw?: pulumi.Input<string>;
    localGw6?: pulumi.Input<string>;
    localSpi?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    npuOffload?: pulumi.Input<string>;
    remoteGw?: pulumi.Input<string>;
    remoteGw6?: pulumi.Input<string>;
    remoteSpi?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpnipsecManualkeyinterface resource.
 */
export interface VpnipsecManualkeyinterfaceArgs {
    addrType?: pulumi.Input<string>;
    authAlg: pulumi.Input<string>;
    authKey?: pulumi.Input<string>;
    encAlg: pulumi.Input<string>;
    encKey?: pulumi.Input<string>;
    interface: pulumi.Input<string>;
    ipVersion?: pulumi.Input<string>;
    localGw?: pulumi.Input<string>;
    localGw6?: pulumi.Input<string>;
    localSpi?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    npuOffload?: pulumi.Input<string>;
    remoteGw: pulumi.Input<string>;
    remoteGw6: pulumi.Input<string>;
    remoteSpi?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
