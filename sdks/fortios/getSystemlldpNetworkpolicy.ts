// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSystemlldpNetworkpolicy(args: GetSystemlldpNetworkpolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemlldpNetworkpolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getSystemlldpNetworkpolicy:getSystemlldpNetworkpolicy", {
        "id": args.id,
        "name": args.name,
        "vdomparam": args.vdomparam,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemlldpNetworkpolicy.
 */
export interface GetSystemlldpNetworkpolicyArgs {
    id?: string;
    name: string;
    vdomparam?: string;
}

/**
 * A collection of values returned by getSystemlldpNetworkpolicy.
 */
export interface GetSystemlldpNetworkpolicyResult {
    readonly comment: string;
    readonly guestVoiceSignalings: outputs.GetSystemlldpNetworkpolicyGuestVoiceSignaling[];
    readonly guests: outputs.GetSystemlldpNetworkpolicyGuest[];
    readonly id: string;
    readonly name: string;
    readonly softphones: outputs.GetSystemlldpNetworkpolicySoftphone[];
    readonly streamingVideos: outputs.GetSystemlldpNetworkpolicyStreamingVideo[];
    readonly vdomparam?: string;
    readonly videoConferencings: outputs.GetSystemlldpNetworkpolicyVideoConferencing[];
    readonly videoSignalings: outputs.GetSystemlldpNetworkpolicyVideoSignaling[];
    readonly voiceSignalings: outputs.GetSystemlldpNetworkpolicyVoiceSignaling[];
    readonly voices: outputs.GetSystemlldpNetworkpolicyVoice[];
}
export function getSystemlldpNetworkpolicyOutput(args: GetSystemlldpNetworkpolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemlldpNetworkpolicyResult> {
    return pulumi.output(args).apply((a: any) => getSystemlldpNetworkpolicy(a, opts))
}

/**
 * A collection of arguments for invoking getSystemlldpNetworkpolicy.
 */
export interface GetSystemlldpNetworkpolicyOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
