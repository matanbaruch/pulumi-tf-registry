// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FirewallsshSetting extends pulumi.CustomResource {
    /**
     * Get an existing FirewallsshSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallsshSettingState, opts?: pulumi.CustomResourceOptions): FirewallsshSetting {
        return new FirewallsshSetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/firewallsshSetting:FirewallsshSetting';

    /**
     * Returns true if the given object is an instance of FirewallsshSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallsshSetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallsshSetting.__pulumiType;
    }

    public readonly caname!: pulumi.Output<string>;
    public readonly hostTrustedChecking!: pulumi.Output<string>;
    public readonly hostkeyDsa1024!: pulumi.Output<string>;
    public readonly hostkeyEcdsa256!: pulumi.Output<string>;
    public readonly hostkeyEcdsa384!: pulumi.Output<string>;
    public readonly hostkeyEcdsa521!: pulumi.Output<string>;
    public readonly hostkeyEd25519!: pulumi.Output<string>;
    public readonly hostkeyRsa2048!: pulumi.Output<string>;
    public readonly untrustedCaname!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a FirewallsshSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirewallsshSettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallsshSettingArgs | FirewallsshSettingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallsshSettingState | undefined;
            resourceInputs["caname"] = state ? state.caname : undefined;
            resourceInputs["hostTrustedChecking"] = state ? state.hostTrustedChecking : undefined;
            resourceInputs["hostkeyDsa1024"] = state ? state.hostkeyDsa1024 : undefined;
            resourceInputs["hostkeyEcdsa256"] = state ? state.hostkeyEcdsa256 : undefined;
            resourceInputs["hostkeyEcdsa384"] = state ? state.hostkeyEcdsa384 : undefined;
            resourceInputs["hostkeyEcdsa521"] = state ? state.hostkeyEcdsa521 : undefined;
            resourceInputs["hostkeyEd25519"] = state ? state.hostkeyEd25519 : undefined;
            resourceInputs["hostkeyRsa2048"] = state ? state.hostkeyRsa2048 : undefined;
            resourceInputs["untrustedCaname"] = state ? state.untrustedCaname : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as FirewallsshSettingArgs | undefined;
            resourceInputs["caname"] = args ? args.caname : undefined;
            resourceInputs["hostTrustedChecking"] = args ? args.hostTrustedChecking : undefined;
            resourceInputs["hostkeyDsa1024"] = args ? args.hostkeyDsa1024 : undefined;
            resourceInputs["hostkeyEcdsa256"] = args ? args.hostkeyEcdsa256 : undefined;
            resourceInputs["hostkeyEcdsa384"] = args ? args.hostkeyEcdsa384 : undefined;
            resourceInputs["hostkeyEcdsa521"] = args ? args.hostkeyEcdsa521 : undefined;
            resourceInputs["hostkeyEd25519"] = args ? args.hostkeyEd25519 : undefined;
            resourceInputs["hostkeyRsa2048"] = args ? args.hostkeyRsa2048 : undefined;
            resourceInputs["untrustedCaname"] = args ? args.untrustedCaname : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallsshSetting.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirewallsshSetting resources.
 */
export interface FirewallsshSettingState {
    caname?: pulumi.Input<string>;
    hostTrustedChecking?: pulumi.Input<string>;
    hostkeyDsa1024?: pulumi.Input<string>;
    hostkeyEcdsa256?: pulumi.Input<string>;
    hostkeyEcdsa384?: pulumi.Input<string>;
    hostkeyEcdsa521?: pulumi.Input<string>;
    hostkeyEd25519?: pulumi.Input<string>;
    hostkeyRsa2048?: pulumi.Input<string>;
    untrustedCaname?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallsshSetting resource.
 */
export interface FirewallsshSettingArgs {
    caname?: pulumi.Input<string>;
    hostTrustedChecking?: pulumi.Input<string>;
    hostkeyDsa1024?: pulumi.Input<string>;
    hostkeyEcdsa256?: pulumi.Input<string>;
    hostkeyEcdsa384?: pulumi.Input<string>;
    hostkeyEcdsa521?: pulumi.Input<string>;
    hostkeyEd25519?: pulumi.Input<string>;
    hostkeyRsa2048?: pulumi.Input<string>;
    untrustedCaname?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
