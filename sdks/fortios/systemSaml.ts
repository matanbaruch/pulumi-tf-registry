// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemSaml extends pulumi.CustomResource {
    /**
     * Get an existing SystemSaml resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemSamlState, opts?: pulumi.CustomResourceOptions): SystemSaml {
        return new SystemSaml(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemSaml:SystemSaml';

    /**
     * Returns true if the given object is an instance of SystemSaml.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemSaml {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemSaml.__pulumiType;
    }

    public readonly bindingProtocol!: pulumi.Output<string>;
    public readonly cert!: pulumi.Output<string>;
    public readonly defaultLoginPage!: pulumi.Output<string>;
    public readonly defaultProfile!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly entityId!: pulumi.Output<string>;
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    public readonly idpCert!: pulumi.Output<string>;
    public readonly idpEntityId!: pulumi.Output<string>;
    public readonly idpSingleLogoutUrl!: pulumi.Output<string>;
    public readonly idpSingleSignOnUrl!: pulumi.Output<string>;
    public readonly life!: pulumi.Output<number>;
    public readonly portalUrl!: pulumi.Output<string>;
    public readonly role!: pulumi.Output<string>;
    public readonly serverAddress!: pulumi.Output<string>;
    public readonly serviceProviders!: pulumi.Output<outputs.SystemSamlServiceProvider[] | undefined>;
    public readonly singleLogoutUrl!: pulumi.Output<string>;
    public readonly singleSignOnUrl!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly tolerance!: pulumi.Output<number>;
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a SystemSaml resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemSamlArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemSamlArgs | SystemSamlState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemSamlState | undefined;
            resourceInputs["bindingProtocol"] = state ? state.bindingProtocol : undefined;
            resourceInputs["cert"] = state ? state.cert : undefined;
            resourceInputs["defaultLoginPage"] = state ? state.defaultLoginPage : undefined;
            resourceInputs["defaultProfile"] = state ? state.defaultProfile : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["entityId"] = state ? state.entityId : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["idpCert"] = state ? state.idpCert : undefined;
            resourceInputs["idpEntityId"] = state ? state.idpEntityId : undefined;
            resourceInputs["idpSingleLogoutUrl"] = state ? state.idpSingleLogoutUrl : undefined;
            resourceInputs["idpSingleSignOnUrl"] = state ? state.idpSingleSignOnUrl : undefined;
            resourceInputs["life"] = state ? state.life : undefined;
            resourceInputs["portalUrl"] = state ? state.portalUrl : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["serverAddress"] = state ? state.serverAddress : undefined;
            resourceInputs["serviceProviders"] = state ? state.serviceProviders : undefined;
            resourceInputs["singleLogoutUrl"] = state ? state.singleLogoutUrl : undefined;
            resourceInputs["singleSignOnUrl"] = state ? state.singleSignOnUrl : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tolerance"] = state ? state.tolerance : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SystemSamlArgs | undefined;
            resourceInputs["bindingProtocol"] = args ? args.bindingProtocol : undefined;
            resourceInputs["cert"] = args ? args.cert : undefined;
            resourceInputs["defaultLoginPage"] = args ? args.defaultLoginPage : undefined;
            resourceInputs["defaultProfile"] = args ? args.defaultProfile : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["entityId"] = args ? args.entityId : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["idpCert"] = args ? args.idpCert : undefined;
            resourceInputs["idpEntityId"] = args ? args.idpEntityId : undefined;
            resourceInputs["idpSingleLogoutUrl"] = args ? args.idpSingleLogoutUrl : undefined;
            resourceInputs["idpSingleSignOnUrl"] = args ? args.idpSingleSignOnUrl : undefined;
            resourceInputs["life"] = args ? args.life : undefined;
            resourceInputs["portalUrl"] = args ? args.portalUrl : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["serverAddress"] = args ? args.serverAddress : undefined;
            resourceInputs["serviceProviders"] = args ? args.serviceProviders : undefined;
            resourceInputs["singleLogoutUrl"] = args ? args.singleLogoutUrl : undefined;
            resourceInputs["singleSignOnUrl"] = args ? args.singleSignOnUrl : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tolerance"] = args ? args.tolerance : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemSaml.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemSaml resources.
 */
export interface SystemSamlState {
    bindingProtocol?: pulumi.Input<string>;
    cert?: pulumi.Input<string>;
    defaultLoginPage?: pulumi.Input<string>;
    defaultProfile?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    entityId?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    idpCert?: pulumi.Input<string>;
    idpEntityId?: pulumi.Input<string>;
    idpSingleLogoutUrl?: pulumi.Input<string>;
    idpSingleSignOnUrl?: pulumi.Input<string>;
    life?: pulumi.Input<number>;
    portalUrl?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    serverAddress?: pulumi.Input<string>;
    serviceProviders?: pulumi.Input<pulumi.Input<inputs.SystemSamlServiceProvider>[]>;
    singleLogoutUrl?: pulumi.Input<string>;
    singleSignOnUrl?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tolerance?: pulumi.Input<number>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemSaml resource.
 */
export interface SystemSamlArgs {
    bindingProtocol?: pulumi.Input<string>;
    cert?: pulumi.Input<string>;
    defaultLoginPage?: pulumi.Input<string>;
    defaultProfile?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    entityId?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    idpCert?: pulumi.Input<string>;
    idpEntityId?: pulumi.Input<string>;
    idpSingleLogoutUrl?: pulumi.Input<string>;
    idpSingleSignOnUrl?: pulumi.Input<string>;
    life?: pulumi.Input<number>;
    portalUrl?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    serverAddress?: pulumi.Input<string>;
    serviceProviders?: pulumi.Input<pulumi.Input<inputs.SystemSamlServiceProvider>[]>;
    singleLogoutUrl?: pulumi.Input<string>;
    singleSignOnUrl?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tolerance?: pulumi.Input<number>;
    vdomparam?: pulumi.Input<string>;
}
