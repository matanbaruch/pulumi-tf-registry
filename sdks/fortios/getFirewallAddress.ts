// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirewallAddress(args: GetFirewallAddressArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallAddressResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getFirewallAddress:getFirewallAddress", {
        "id": args.id,
        "name": args.name,
        "vdomparam": args.vdomparam,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirewallAddress.
 */
export interface GetFirewallAddressArgs {
    id?: string;
    name: string;
    vdomparam?: string;
}

/**
 * A collection of values returned by getFirewallAddress.
 */
export interface GetFirewallAddressResult {
    readonly allowRouting: string;
    readonly associatedInterface: string;
    readonly cacheTtl: number;
    readonly clearpassSpt: string;
    readonly color: number;
    readonly comment: string;
    readonly country: string;
    readonly endIp: string;
    readonly endMac: string;
    readonly epgName: string;
    readonly fabricObject: string;
    readonly filter: string;
    readonly fqdn: string;
    readonly fssoGroups: outputs.GetFirewallAddressFssoGroup[];
    readonly hwModel: string;
    readonly hwVendor: string;
    readonly id: string;
    readonly interface: string;
    readonly lists: outputs.GetFirewallAddressList[];
    readonly macaddrs: outputs.GetFirewallAddressMacaddr[];
    readonly name: string;
    readonly nodeIpOnly: string;
    readonly objId: string;
    readonly objTag: string;
    readonly objType: string;
    readonly organization: string;
    readonly os: string;
    readonly policyGroup: string;
    readonly routeTag: number;
    readonly sdn: string;
    readonly sdnAddrType: string;
    readonly sdnTag: string;
    readonly startIp: string;
    readonly startMac: string;
    readonly subType: string;
    readonly subnet: string;
    readonly subnetName: string;
    readonly swVersion: string;
    readonly tagDetectionLevel: string;
    readonly tagType: string;
    readonly taggings: outputs.GetFirewallAddressTagging[];
    readonly tenant: string;
    readonly type: string;
    readonly uuid: string;
    readonly vdomparam?: string;
    readonly visibility: string;
    readonly wildcard: string;
    readonly wildcardFqdn: string;
}
export function getFirewallAddressOutput(args: GetFirewallAddressOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallAddressResult> {
    return pulumi.output(args).apply((a: any) => getFirewallAddress(a, opts))
}

/**
 * A collection of arguments for invoking getFirewallAddress.
 */
export interface GetFirewallAddressOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
