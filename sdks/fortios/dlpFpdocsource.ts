// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DlpFpdocsource extends pulumi.CustomResource {
    /**
     * Get an existing DlpFpdocsource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DlpFpdocsourceState, opts?: pulumi.CustomResourceOptions): DlpFpdocsource {
        return new DlpFpdocsource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/dlpFpdocsource:DlpFpdocsource';

    /**
     * Returns true if the given object is an instance of DlpFpdocsource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DlpFpdocsource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DlpFpdocsource.__pulumiType;
    }

    public readonly date!: pulumi.Output<number>;
    public readonly filePath!: pulumi.Output<string>;
    public readonly filePattern!: pulumi.Output<string>;
    public readonly keepModified!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly password!: pulumi.Output<string | undefined>;
    public readonly period!: pulumi.Output<string>;
    public readonly removeDeleted!: pulumi.Output<string>;
    public readonly scanOnCreation!: pulumi.Output<string>;
    public readonly scanSubdirectories!: pulumi.Output<string>;
    public readonly sensitivity!: pulumi.Output<string>;
    public readonly server!: pulumi.Output<string>;
    public readonly serverType!: pulumi.Output<string>;
    public readonly todHour!: pulumi.Output<number>;
    public readonly todMin!: pulumi.Output<number>;
    public readonly username!: pulumi.Output<string>;
    public readonly vdom!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string>;
    public readonly weekday!: pulumi.Output<string>;

    /**
     * Create a DlpFpdocsource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DlpFpdocsourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DlpFpdocsourceArgs | DlpFpdocsourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DlpFpdocsourceState | undefined;
            resourceInputs["date"] = state ? state.date : undefined;
            resourceInputs["filePath"] = state ? state.filePath : undefined;
            resourceInputs["filePattern"] = state ? state.filePattern : undefined;
            resourceInputs["keepModified"] = state ? state.keepModified : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["removeDeleted"] = state ? state.removeDeleted : undefined;
            resourceInputs["scanOnCreation"] = state ? state.scanOnCreation : undefined;
            resourceInputs["scanSubdirectories"] = state ? state.scanSubdirectories : undefined;
            resourceInputs["sensitivity"] = state ? state.sensitivity : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["serverType"] = state ? state.serverType : undefined;
            resourceInputs["todHour"] = state ? state.todHour : undefined;
            resourceInputs["todMin"] = state ? state.todMin : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["weekday"] = state ? state.weekday : undefined;
        } else {
            const args = argsOrState as DlpFpdocsourceArgs | undefined;
            if ((!args || args.server === undefined) && !opts.urn) {
                throw new Error("Missing required property 'server'");
            }
            if ((!args || args.serverType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverType'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["date"] = args ? args.date : undefined;
            resourceInputs["filePath"] = args ? args.filePath : undefined;
            resourceInputs["filePattern"] = args ? args.filePattern : undefined;
            resourceInputs["keepModified"] = args ? args.keepModified : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["removeDeleted"] = args ? args.removeDeleted : undefined;
            resourceInputs["scanOnCreation"] = args ? args.scanOnCreation : undefined;
            resourceInputs["scanSubdirectories"] = args ? args.scanSubdirectories : undefined;
            resourceInputs["sensitivity"] = args ? args.sensitivity : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["serverType"] = args ? args.serverType : undefined;
            resourceInputs["todHour"] = args ? args.todHour : undefined;
            resourceInputs["todMin"] = args ? args.todMin : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["weekday"] = args ? args.weekday : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DlpFpdocsource.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DlpFpdocsource resources.
 */
export interface DlpFpdocsourceState {
    date?: pulumi.Input<number>;
    filePath?: pulumi.Input<string>;
    filePattern?: pulumi.Input<string>;
    keepModified?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    period?: pulumi.Input<string>;
    removeDeleted?: pulumi.Input<string>;
    scanOnCreation?: pulumi.Input<string>;
    scanSubdirectories?: pulumi.Input<string>;
    sensitivity?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    serverType?: pulumi.Input<string>;
    todHour?: pulumi.Input<number>;
    todMin?: pulumi.Input<number>;
    username?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    weekday?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DlpFpdocsource resource.
 */
export interface DlpFpdocsourceArgs {
    date?: pulumi.Input<number>;
    filePath?: pulumi.Input<string>;
    filePattern?: pulumi.Input<string>;
    keepModified?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    period?: pulumi.Input<string>;
    removeDeleted?: pulumi.Input<string>;
    scanOnCreation?: pulumi.Input<string>;
    scanSubdirectories?: pulumi.Input<string>;
    sensitivity?: pulumi.Input<string>;
    server: pulumi.Input<string>;
    serverType: pulumi.Input<string>;
    todHour?: pulumi.Input<number>;
    todMin?: pulumi.Input<number>;
    username: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    weekday?: pulumi.Input<string>;
}
