// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirewallProfileprotocoloptions(args: GetFirewallProfileprotocoloptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallProfileprotocoloptionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getFirewallProfileprotocoloptions:getFirewallProfileprotocoloptions", {
        "id": args.id,
        "name": args.name,
        "vdomparam": args.vdomparam,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirewallProfileprotocoloptions.
 */
export interface GetFirewallProfileprotocoloptionsArgs {
    id?: string;
    name: string;
    vdomparam?: string;
}

/**
 * A collection of values returned by getFirewallProfileprotocoloptions.
 */
export interface GetFirewallProfileprotocoloptionsResult {
    readonly cifs: outputs.GetFirewallProfileprotocoloptionsCif[];
    readonly comment: string;
    readonly dns: outputs.GetFirewallProfileprotocoloptionsDn[];
    readonly featureSet: string;
    readonly ftps: outputs.GetFirewallProfileprotocoloptionsFtp[];
    readonly https: outputs.GetFirewallProfileprotocoloptionsHttp[];
    readonly id: string;
    readonly imaps: outputs.GetFirewallProfileprotocoloptionsImap[];
    readonly mailSignatures: outputs.GetFirewallProfileprotocoloptionsMailSignature[];
    readonly mapis: outputs.GetFirewallProfileprotocoloptionsMapi[];
    readonly name: string;
    readonly nntps: outputs.GetFirewallProfileprotocoloptionsNntp[];
    readonly oversizeLog: string;
    readonly pop3s: outputs.GetFirewallProfileprotocoloptionsPop3[];
    readonly replacemsgGroup: string;
    readonly rpcOverHttp: string;
    readonly smtps: outputs.GetFirewallProfileprotocoloptionsSmtp[];
    readonly sshes: outputs.GetFirewallProfileprotocoloptionsSsh[];
    readonly switchingProtocolsLog: string;
    readonly vdomparam?: string;
}
export function getFirewallProfileprotocoloptionsOutput(args: GetFirewallProfileprotocoloptionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallProfileprotocoloptionsResult> {
    return pulumi.output(args).apply((a: any) => getFirewallProfileprotocoloptions(a, opts))
}

/**
 * A collection of arguments for invoking getFirewallProfileprotocoloptions.
 */
export interface GetFirewallProfileprotocoloptionsOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
