// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemSettings extends pulumi.CustomResource {
    /**
     * Get an existing SystemSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemSettingsState, opts?: pulumi.CustomResourceOptions): SystemSettings {
        return new SystemSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemSettings:SystemSettings';

    /**
     * Returns true if the given object is an instance of SystemSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemSettings.__pulumiType;
    }

    public readonly allowLinkdownPath!: pulumi.Output<string>;
    public readonly allowSubnetOverlap!: pulumi.Output<string>;
    public readonly applicationBandwidthTracking!: pulumi.Output<string>;
    public readonly asymroute!: pulumi.Output<string>;
    public readonly asymroute6!: pulumi.Output<string>;
    public readonly asymroute6Icmp!: pulumi.Output<string>;
    public readonly asymrouteIcmp!: pulumi.Output<string>;
    public readonly auxiliarySession!: pulumi.Output<string>;
    public readonly bfd!: pulumi.Output<string>;
    public readonly bfdDesiredMinTx!: pulumi.Output<number>;
    public readonly bfdDetectMult!: pulumi.Output<number>;
    public readonly bfdDontEnforceSrcPort!: pulumi.Output<string>;
    public readonly bfdRequiredMinRx!: pulumi.Output<number>;
    public readonly blockLandAttack!: pulumi.Output<string>;
    public readonly centralNat!: pulumi.Output<string>;
    public readonly comments!: pulumi.Output<string | undefined>;
    public readonly complianceCheck!: pulumi.Output<string>;
    public readonly consolidatedFirewallMode!: pulumi.Output<string>;
    public readonly defaultAppPortAsService!: pulumi.Output<string>;
    public readonly defaultPolicyExpiryDays!: pulumi.Output<number>;
    public readonly defaultVoipAlgMode!: pulumi.Output<string>;
    public readonly denyTcpWithIcmp!: pulumi.Output<string>;
    public readonly detectUnknownEsp!: pulumi.Output<string>;
    public readonly device!: pulumi.Output<string>;
    public readonly dhcp6ServerIp!: pulumi.Output<string>;
    public readonly dhcpProxy!: pulumi.Output<string>;
    public readonly dhcpProxyInterface!: pulumi.Output<string>;
    public readonly dhcpProxyInterfaceSelectMethod!: pulumi.Output<string>;
    public readonly dhcpServerIp!: pulumi.Output<string>;
    public readonly discoveredDeviceTimeout!: pulumi.Output<number>;
    public readonly dynAddrSessionCheck!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly ecmpMaxPaths!: pulumi.Output<number>;
    public readonly emailPortalCheckDns!: pulumi.Output<string>;
    public readonly extResourceSessionCheck!: pulumi.Output<string>;
    public readonly firewallSessionDirty!: pulumi.Output<string>;
    public readonly fqdnSessionCheck!: pulumi.Output<string>;
    public readonly fwSessionHairpin!: pulumi.Output<string>;
    public readonly gateway!: pulumi.Output<string>;
    public readonly gateway6!: pulumi.Output<string>;
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    public readonly guiAdvancedPolicy!: pulumi.Output<string>;
    public readonly guiAdvancedWirelessFeatures!: pulumi.Output<string>;
    public readonly guiAllowUnnamedPolicy!: pulumi.Output<string>;
    public readonly guiAntivirus!: pulumi.Output<string>;
    public readonly guiApProfile!: pulumi.Output<string>;
    public readonly guiApplicationControl!: pulumi.Output<string>;
    public readonly guiCasb!: pulumi.Output<string>;
    public readonly guiDefaultPolicyColumns!: pulumi.Output<outputs.SystemSettingsGuiDefaultPolicyColumn[] | undefined>;
    public readonly guiDhcpAdvanced!: pulumi.Output<string>;
    public readonly guiDlp!: pulumi.Output<string>;
    public readonly guiDlpProfile!: pulumi.Output<string>;
    public readonly guiDnsDatabase!: pulumi.Output<string>;
    public readonly guiDnsfilter!: pulumi.Output<string>;
    public readonly guiDomainIpReputation!: pulumi.Output<string>;
    public readonly guiDosPolicy!: pulumi.Output<string>;
    public readonly guiDynamicDeviceOsId!: pulumi.Output<string>;
    public readonly guiDynamicProfileDisplay!: pulumi.Output<string>;
    public readonly guiDynamicRouting!: pulumi.Output<string>;
    public readonly guiEmailCollection!: pulumi.Output<string>;
    public readonly guiEndpointControl!: pulumi.Output<string>;
    public readonly guiEndpointControlAdvanced!: pulumi.Output<string>;
    public readonly guiEnforceChangeSummary!: pulumi.Output<string>;
    public readonly guiExplicitProxy!: pulumi.Output<string>;
    public readonly guiFileFilter!: pulumi.Output<string>;
    public readonly guiFortiapSplitTunneling!: pulumi.Output<string>;
    public readonly guiFortiextenderController!: pulumi.Output<string>;
    public readonly guiIcap!: pulumi.Output<string>;
    public readonly guiImplicitPolicy!: pulumi.Output<string>;
    public readonly guiIps!: pulumi.Output<string>;
    public readonly guiLoadBalance!: pulumi.Output<string>;
    public readonly guiLocalInPolicy!: pulumi.Output<string>;
    public readonly guiLocalReports!: pulumi.Output<string>;
    public readonly guiMulticastPolicy!: pulumi.Output<string>;
    public readonly guiMultipleInterfacePolicy!: pulumi.Output<string>;
    public readonly guiMultipleUtmProfiles!: pulumi.Output<string>;
    public readonly guiNat4664!: pulumi.Output<string>;
    public readonly guiObjectColors!: pulumi.Output<string>;
    public readonly guiOt!: pulumi.Output<string>;
    public readonly guiPerPolicyDisclaimer!: pulumi.Output<string>;
    public readonly guiPolicyBasedIpsec!: pulumi.Output<string>;
    public readonly guiPolicyDisclaimer!: pulumi.Output<string>;
    public readonly guiPolicyLearning!: pulumi.Output<string>;
    public readonly guiProxyInspection!: pulumi.Output<string>;
    public readonly guiReplacementMessageGroups!: pulumi.Output<string>;
    public readonly guiRouteTagAddressCreation!: pulumi.Output<string>;
    public readonly guiSecurityProfileGroup!: pulumi.Output<string>;
    public readonly guiSpamfilter!: pulumi.Output<string>;
    public readonly guiSslvpn!: pulumi.Output<string>;
    public readonly guiSslvpnPersonalBookmarks!: pulumi.Output<string>;
    public readonly guiSslvpnRealms!: pulumi.Output<string>;
    public readonly guiSwitchController!: pulumi.Output<string>;
    public readonly guiThreatWeight!: pulumi.Output<string>;
    public readonly guiTrafficShaping!: pulumi.Output<string>;
    public readonly guiVideofilter!: pulumi.Output<string>;
    public readonly guiVirtualPatchProfile!: pulumi.Output<string>;
    public readonly guiVoipProfile!: pulumi.Output<string>;
    public readonly guiVpn!: pulumi.Output<string>;
    public readonly guiWafProfile!: pulumi.Output<string>;
    public readonly guiWanLoadBalancing!: pulumi.Output<string>;
    public readonly guiWanoptCache!: pulumi.Output<string>;
    public readonly guiWebfilter!: pulumi.Output<string>;
    public readonly guiWebfilterAdvanced!: pulumi.Output<string>;
    public readonly guiWirelessController!: pulumi.Output<string>;
    public readonly guiZtna!: pulumi.Output<string>;
    public readonly h323DirectModel!: pulumi.Output<string>;
    public readonly httpExternalDest!: pulumi.Output<string>;
    public readonly ikeDnFormat!: pulumi.Output<string>;
    public readonly ikeNattPort!: pulumi.Output<number>;
    public readonly ikePolicyRoute!: pulumi.Output<string>;
    public readonly ikePort!: pulumi.Output<number>;
    public readonly ikeQuickCrashDetect!: pulumi.Output<string>;
    public readonly ikeSessionResume!: pulumi.Output<string>;
    public readonly ikeTcpPort!: pulumi.Output<number>;
    public readonly implicitAllowDns!: pulumi.Output<string>;
    public readonly inspectionMode!: pulumi.Output<string>;
    public readonly internetServiceAppCtrlSize!: pulumi.Output<number>;
    public readonly internetServiceDatabaseCache!: pulumi.Output<string>;
    public readonly ip!: pulumi.Output<string>;
    public readonly ip6!: pulumi.Output<string>;
    public readonly lanExtensionControllerAddr!: pulumi.Output<string>;
    public readonly linkDownAccess!: pulumi.Output<string>;
    public readonly lldpReception!: pulumi.Output<string>;
    public readonly lldpTransmission!: pulumi.Output<string>;
    public readonly locationId!: pulumi.Output<string>;
    public readonly macTtl!: pulumi.Output<number>;
    public readonly manageip!: pulumi.Output<string>;
    public readonly manageip6!: pulumi.Output<string>;
    public readonly multicastForward!: pulumi.Output<string>;
    public readonly multicastSkipPolicy!: pulumi.Output<string>;
    public readonly multicastTtlNotchange!: pulumi.Output<string>;
    public readonly nat46ForceIpv4PacketForwarding!: pulumi.Output<string>;
    public readonly nat46GenerateIpv6FragmentHeader!: pulumi.Output<string>;
    public readonly nat64ForceIpv6PacketForwarding!: pulumi.Output<string>;
    public readonly ngfwMode!: pulumi.Output<string>;
    public readonly opmode!: pulumi.Output<string>;
    public readonly prpTrailerAction!: pulumi.Output<string>;
    public readonly sccpPort!: pulumi.Output<number>;
    public readonly sctpSessionWithoutInit!: pulumi.Output<string>;
    public readonly sesDeniedTraffic!: pulumi.Output<string>;
    public readonly sipExpectation!: pulumi.Output<string>;
    public readonly sipHelper!: pulumi.Output<string>;
    public readonly sipNatTrace!: pulumi.Output<string>;
    public readonly sipSslPort!: pulumi.Output<number>;
    public readonly sipTcpPort!: pulumi.Output<number>;
    public readonly sipUdpPort!: pulumi.Output<number>;
    public readonly snatHairpinTraffic!: pulumi.Output<string>;
    public readonly sslSshProfile!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly strictSrcCheck!: pulumi.Output<string>;
    public readonly tcpSessionWithoutSyn!: pulumi.Output<string>;
    public readonly utf8SpamTagging!: pulumi.Output<string>;
    public readonly v4EcmpMode!: pulumi.Output<string>;
    public readonly vdomType!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string>;
    public readonly vpnStatsLog!: pulumi.Output<string>;
    public readonly vpnStatsPeriod!: pulumi.Output<number>;
    public readonly wccpCacheEngine!: pulumi.Output<string>;

    /**
     * Create a SystemSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemSettingsArgs | SystemSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemSettingsState | undefined;
            resourceInputs["allowLinkdownPath"] = state ? state.allowLinkdownPath : undefined;
            resourceInputs["allowSubnetOverlap"] = state ? state.allowSubnetOverlap : undefined;
            resourceInputs["applicationBandwidthTracking"] = state ? state.applicationBandwidthTracking : undefined;
            resourceInputs["asymroute"] = state ? state.asymroute : undefined;
            resourceInputs["asymroute6"] = state ? state.asymroute6 : undefined;
            resourceInputs["asymroute6Icmp"] = state ? state.asymroute6Icmp : undefined;
            resourceInputs["asymrouteIcmp"] = state ? state.asymrouteIcmp : undefined;
            resourceInputs["auxiliarySession"] = state ? state.auxiliarySession : undefined;
            resourceInputs["bfd"] = state ? state.bfd : undefined;
            resourceInputs["bfdDesiredMinTx"] = state ? state.bfdDesiredMinTx : undefined;
            resourceInputs["bfdDetectMult"] = state ? state.bfdDetectMult : undefined;
            resourceInputs["bfdDontEnforceSrcPort"] = state ? state.bfdDontEnforceSrcPort : undefined;
            resourceInputs["bfdRequiredMinRx"] = state ? state.bfdRequiredMinRx : undefined;
            resourceInputs["blockLandAttack"] = state ? state.blockLandAttack : undefined;
            resourceInputs["centralNat"] = state ? state.centralNat : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["complianceCheck"] = state ? state.complianceCheck : undefined;
            resourceInputs["consolidatedFirewallMode"] = state ? state.consolidatedFirewallMode : undefined;
            resourceInputs["defaultAppPortAsService"] = state ? state.defaultAppPortAsService : undefined;
            resourceInputs["defaultPolicyExpiryDays"] = state ? state.defaultPolicyExpiryDays : undefined;
            resourceInputs["defaultVoipAlgMode"] = state ? state.defaultVoipAlgMode : undefined;
            resourceInputs["denyTcpWithIcmp"] = state ? state.denyTcpWithIcmp : undefined;
            resourceInputs["detectUnknownEsp"] = state ? state.detectUnknownEsp : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["dhcp6ServerIp"] = state ? state.dhcp6ServerIp : undefined;
            resourceInputs["dhcpProxy"] = state ? state.dhcpProxy : undefined;
            resourceInputs["dhcpProxyInterface"] = state ? state.dhcpProxyInterface : undefined;
            resourceInputs["dhcpProxyInterfaceSelectMethod"] = state ? state.dhcpProxyInterfaceSelectMethod : undefined;
            resourceInputs["dhcpServerIp"] = state ? state.dhcpServerIp : undefined;
            resourceInputs["discoveredDeviceTimeout"] = state ? state.discoveredDeviceTimeout : undefined;
            resourceInputs["dynAddrSessionCheck"] = state ? state.dynAddrSessionCheck : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["ecmpMaxPaths"] = state ? state.ecmpMaxPaths : undefined;
            resourceInputs["emailPortalCheckDns"] = state ? state.emailPortalCheckDns : undefined;
            resourceInputs["extResourceSessionCheck"] = state ? state.extResourceSessionCheck : undefined;
            resourceInputs["firewallSessionDirty"] = state ? state.firewallSessionDirty : undefined;
            resourceInputs["fqdnSessionCheck"] = state ? state.fqdnSessionCheck : undefined;
            resourceInputs["fwSessionHairpin"] = state ? state.fwSessionHairpin : undefined;
            resourceInputs["gateway"] = state ? state.gateway : undefined;
            resourceInputs["gateway6"] = state ? state.gateway6 : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["guiAdvancedPolicy"] = state ? state.guiAdvancedPolicy : undefined;
            resourceInputs["guiAdvancedWirelessFeatures"] = state ? state.guiAdvancedWirelessFeatures : undefined;
            resourceInputs["guiAllowUnnamedPolicy"] = state ? state.guiAllowUnnamedPolicy : undefined;
            resourceInputs["guiAntivirus"] = state ? state.guiAntivirus : undefined;
            resourceInputs["guiApProfile"] = state ? state.guiApProfile : undefined;
            resourceInputs["guiApplicationControl"] = state ? state.guiApplicationControl : undefined;
            resourceInputs["guiCasb"] = state ? state.guiCasb : undefined;
            resourceInputs["guiDefaultPolicyColumns"] = state ? state.guiDefaultPolicyColumns : undefined;
            resourceInputs["guiDhcpAdvanced"] = state ? state.guiDhcpAdvanced : undefined;
            resourceInputs["guiDlp"] = state ? state.guiDlp : undefined;
            resourceInputs["guiDlpProfile"] = state ? state.guiDlpProfile : undefined;
            resourceInputs["guiDnsDatabase"] = state ? state.guiDnsDatabase : undefined;
            resourceInputs["guiDnsfilter"] = state ? state.guiDnsfilter : undefined;
            resourceInputs["guiDomainIpReputation"] = state ? state.guiDomainIpReputation : undefined;
            resourceInputs["guiDosPolicy"] = state ? state.guiDosPolicy : undefined;
            resourceInputs["guiDynamicDeviceOsId"] = state ? state.guiDynamicDeviceOsId : undefined;
            resourceInputs["guiDynamicProfileDisplay"] = state ? state.guiDynamicProfileDisplay : undefined;
            resourceInputs["guiDynamicRouting"] = state ? state.guiDynamicRouting : undefined;
            resourceInputs["guiEmailCollection"] = state ? state.guiEmailCollection : undefined;
            resourceInputs["guiEndpointControl"] = state ? state.guiEndpointControl : undefined;
            resourceInputs["guiEndpointControlAdvanced"] = state ? state.guiEndpointControlAdvanced : undefined;
            resourceInputs["guiEnforceChangeSummary"] = state ? state.guiEnforceChangeSummary : undefined;
            resourceInputs["guiExplicitProxy"] = state ? state.guiExplicitProxy : undefined;
            resourceInputs["guiFileFilter"] = state ? state.guiFileFilter : undefined;
            resourceInputs["guiFortiapSplitTunneling"] = state ? state.guiFortiapSplitTunneling : undefined;
            resourceInputs["guiFortiextenderController"] = state ? state.guiFortiextenderController : undefined;
            resourceInputs["guiIcap"] = state ? state.guiIcap : undefined;
            resourceInputs["guiImplicitPolicy"] = state ? state.guiImplicitPolicy : undefined;
            resourceInputs["guiIps"] = state ? state.guiIps : undefined;
            resourceInputs["guiLoadBalance"] = state ? state.guiLoadBalance : undefined;
            resourceInputs["guiLocalInPolicy"] = state ? state.guiLocalInPolicy : undefined;
            resourceInputs["guiLocalReports"] = state ? state.guiLocalReports : undefined;
            resourceInputs["guiMulticastPolicy"] = state ? state.guiMulticastPolicy : undefined;
            resourceInputs["guiMultipleInterfacePolicy"] = state ? state.guiMultipleInterfacePolicy : undefined;
            resourceInputs["guiMultipleUtmProfiles"] = state ? state.guiMultipleUtmProfiles : undefined;
            resourceInputs["guiNat4664"] = state ? state.guiNat4664 : undefined;
            resourceInputs["guiObjectColors"] = state ? state.guiObjectColors : undefined;
            resourceInputs["guiOt"] = state ? state.guiOt : undefined;
            resourceInputs["guiPerPolicyDisclaimer"] = state ? state.guiPerPolicyDisclaimer : undefined;
            resourceInputs["guiPolicyBasedIpsec"] = state ? state.guiPolicyBasedIpsec : undefined;
            resourceInputs["guiPolicyDisclaimer"] = state ? state.guiPolicyDisclaimer : undefined;
            resourceInputs["guiPolicyLearning"] = state ? state.guiPolicyLearning : undefined;
            resourceInputs["guiProxyInspection"] = state ? state.guiProxyInspection : undefined;
            resourceInputs["guiReplacementMessageGroups"] = state ? state.guiReplacementMessageGroups : undefined;
            resourceInputs["guiRouteTagAddressCreation"] = state ? state.guiRouteTagAddressCreation : undefined;
            resourceInputs["guiSecurityProfileGroup"] = state ? state.guiSecurityProfileGroup : undefined;
            resourceInputs["guiSpamfilter"] = state ? state.guiSpamfilter : undefined;
            resourceInputs["guiSslvpn"] = state ? state.guiSslvpn : undefined;
            resourceInputs["guiSslvpnPersonalBookmarks"] = state ? state.guiSslvpnPersonalBookmarks : undefined;
            resourceInputs["guiSslvpnRealms"] = state ? state.guiSslvpnRealms : undefined;
            resourceInputs["guiSwitchController"] = state ? state.guiSwitchController : undefined;
            resourceInputs["guiThreatWeight"] = state ? state.guiThreatWeight : undefined;
            resourceInputs["guiTrafficShaping"] = state ? state.guiTrafficShaping : undefined;
            resourceInputs["guiVideofilter"] = state ? state.guiVideofilter : undefined;
            resourceInputs["guiVirtualPatchProfile"] = state ? state.guiVirtualPatchProfile : undefined;
            resourceInputs["guiVoipProfile"] = state ? state.guiVoipProfile : undefined;
            resourceInputs["guiVpn"] = state ? state.guiVpn : undefined;
            resourceInputs["guiWafProfile"] = state ? state.guiWafProfile : undefined;
            resourceInputs["guiWanLoadBalancing"] = state ? state.guiWanLoadBalancing : undefined;
            resourceInputs["guiWanoptCache"] = state ? state.guiWanoptCache : undefined;
            resourceInputs["guiWebfilter"] = state ? state.guiWebfilter : undefined;
            resourceInputs["guiWebfilterAdvanced"] = state ? state.guiWebfilterAdvanced : undefined;
            resourceInputs["guiWirelessController"] = state ? state.guiWirelessController : undefined;
            resourceInputs["guiZtna"] = state ? state.guiZtna : undefined;
            resourceInputs["h323DirectModel"] = state ? state.h323DirectModel : undefined;
            resourceInputs["httpExternalDest"] = state ? state.httpExternalDest : undefined;
            resourceInputs["ikeDnFormat"] = state ? state.ikeDnFormat : undefined;
            resourceInputs["ikeNattPort"] = state ? state.ikeNattPort : undefined;
            resourceInputs["ikePolicyRoute"] = state ? state.ikePolicyRoute : undefined;
            resourceInputs["ikePort"] = state ? state.ikePort : undefined;
            resourceInputs["ikeQuickCrashDetect"] = state ? state.ikeQuickCrashDetect : undefined;
            resourceInputs["ikeSessionResume"] = state ? state.ikeSessionResume : undefined;
            resourceInputs["ikeTcpPort"] = state ? state.ikeTcpPort : undefined;
            resourceInputs["implicitAllowDns"] = state ? state.implicitAllowDns : undefined;
            resourceInputs["inspectionMode"] = state ? state.inspectionMode : undefined;
            resourceInputs["internetServiceAppCtrlSize"] = state ? state.internetServiceAppCtrlSize : undefined;
            resourceInputs["internetServiceDatabaseCache"] = state ? state.internetServiceDatabaseCache : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["ip6"] = state ? state.ip6 : undefined;
            resourceInputs["lanExtensionControllerAddr"] = state ? state.lanExtensionControllerAddr : undefined;
            resourceInputs["linkDownAccess"] = state ? state.linkDownAccess : undefined;
            resourceInputs["lldpReception"] = state ? state.lldpReception : undefined;
            resourceInputs["lldpTransmission"] = state ? state.lldpTransmission : undefined;
            resourceInputs["locationId"] = state ? state.locationId : undefined;
            resourceInputs["macTtl"] = state ? state.macTtl : undefined;
            resourceInputs["manageip"] = state ? state.manageip : undefined;
            resourceInputs["manageip6"] = state ? state.manageip6 : undefined;
            resourceInputs["multicastForward"] = state ? state.multicastForward : undefined;
            resourceInputs["multicastSkipPolicy"] = state ? state.multicastSkipPolicy : undefined;
            resourceInputs["multicastTtlNotchange"] = state ? state.multicastTtlNotchange : undefined;
            resourceInputs["nat46ForceIpv4PacketForwarding"] = state ? state.nat46ForceIpv4PacketForwarding : undefined;
            resourceInputs["nat46GenerateIpv6FragmentHeader"] = state ? state.nat46GenerateIpv6FragmentHeader : undefined;
            resourceInputs["nat64ForceIpv6PacketForwarding"] = state ? state.nat64ForceIpv6PacketForwarding : undefined;
            resourceInputs["ngfwMode"] = state ? state.ngfwMode : undefined;
            resourceInputs["opmode"] = state ? state.opmode : undefined;
            resourceInputs["prpTrailerAction"] = state ? state.prpTrailerAction : undefined;
            resourceInputs["sccpPort"] = state ? state.sccpPort : undefined;
            resourceInputs["sctpSessionWithoutInit"] = state ? state.sctpSessionWithoutInit : undefined;
            resourceInputs["sesDeniedTraffic"] = state ? state.sesDeniedTraffic : undefined;
            resourceInputs["sipExpectation"] = state ? state.sipExpectation : undefined;
            resourceInputs["sipHelper"] = state ? state.sipHelper : undefined;
            resourceInputs["sipNatTrace"] = state ? state.sipNatTrace : undefined;
            resourceInputs["sipSslPort"] = state ? state.sipSslPort : undefined;
            resourceInputs["sipTcpPort"] = state ? state.sipTcpPort : undefined;
            resourceInputs["sipUdpPort"] = state ? state.sipUdpPort : undefined;
            resourceInputs["snatHairpinTraffic"] = state ? state.snatHairpinTraffic : undefined;
            resourceInputs["sslSshProfile"] = state ? state.sslSshProfile : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["strictSrcCheck"] = state ? state.strictSrcCheck : undefined;
            resourceInputs["tcpSessionWithoutSyn"] = state ? state.tcpSessionWithoutSyn : undefined;
            resourceInputs["utf8SpamTagging"] = state ? state.utf8SpamTagging : undefined;
            resourceInputs["v4EcmpMode"] = state ? state.v4EcmpMode : undefined;
            resourceInputs["vdomType"] = state ? state.vdomType : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["vpnStatsLog"] = state ? state.vpnStatsLog : undefined;
            resourceInputs["vpnStatsPeriod"] = state ? state.vpnStatsPeriod : undefined;
            resourceInputs["wccpCacheEngine"] = state ? state.wccpCacheEngine : undefined;
        } else {
            const args = argsOrState as SystemSettingsArgs | undefined;
            resourceInputs["allowLinkdownPath"] = args ? args.allowLinkdownPath : undefined;
            resourceInputs["allowSubnetOverlap"] = args ? args.allowSubnetOverlap : undefined;
            resourceInputs["applicationBandwidthTracking"] = args ? args.applicationBandwidthTracking : undefined;
            resourceInputs["asymroute"] = args ? args.asymroute : undefined;
            resourceInputs["asymroute6"] = args ? args.asymroute6 : undefined;
            resourceInputs["asymroute6Icmp"] = args ? args.asymroute6Icmp : undefined;
            resourceInputs["asymrouteIcmp"] = args ? args.asymrouteIcmp : undefined;
            resourceInputs["auxiliarySession"] = args ? args.auxiliarySession : undefined;
            resourceInputs["bfd"] = args ? args.bfd : undefined;
            resourceInputs["bfdDesiredMinTx"] = args ? args.bfdDesiredMinTx : undefined;
            resourceInputs["bfdDetectMult"] = args ? args.bfdDetectMult : undefined;
            resourceInputs["bfdDontEnforceSrcPort"] = args ? args.bfdDontEnforceSrcPort : undefined;
            resourceInputs["bfdRequiredMinRx"] = args ? args.bfdRequiredMinRx : undefined;
            resourceInputs["blockLandAttack"] = args ? args.blockLandAttack : undefined;
            resourceInputs["centralNat"] = args ? args.centralNat : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["complianceCheck"] = args ? args.complianceCheck : undefined;
            resourceInputs["consolidatedFirewallMode"] = args ? args.consolidatedFirewallMode : undefined;
            resourceInputs["defaultAppPortAsService"] = args ? args.defaultAppPortAsService : undefined;
            resourceInputs["defaultPolicyExpiryDays"] = args ? args.defaultPolicyExpiryDays : undefined;
            resourceInputs["defaultVoipAlgMode"] = args ? args.defaultVoipAlgMode : undefined;
            resourceInputs["denyTcpWithIcmp"] = args ? args.denyTcpWithIcmp : undefined;
            resourceInputs["detectUnknownEsp"] = args ? args.detectUnknownEsp : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["dhcp6ServerIp"] = args ? args.dhcp6ServerIp : undefined;
            resourceInputs["dhcpProxy"] = args ? args.dhcpProxy : undefined;
            resourceInputs["dhcpProxyInterface"] = args ? args.dhcpProxyInterface : undefined;
            resourceInputs["dhcpProxyInterfaceSelectMethod"] = args ? args.dhcpProxyInterfaceSelectMethod : undefined;
            resourceInputs["dhcpServerIp"] = args ? args.dhcpServerIp : undefined;
            resourceInputs["discoveredDeviceTimeout"] = args ? args.discoveredDeviceTimeout : undefined;
            resourceInputs["dynAddrSessionCheck"] = args ? args.dynAddrSessionCheck : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["ecmpMaxPaths"] = args ? args.ecmpMaxPaths : undefined;
            resourceInputs["emailPortalCheckDns"] = args ? args.emailPortalCheckDns : undefined;
            resourceInputs["extResourceSessionCheck"] = args ? args.extResourceSessionCheck : undefined;
            resourceInputs["firewallSessionDirty"] = args ? args.firewallSessionDirty : undefined;
            resourceInputs["fqdnSessionCheck"] = args ? args.fqdnSessionCheck : undefined;
            resourceInputs["fwSessionHairpin"] = args ? args.fwSessionHairpin : undefined;
            resourceInputs["gateway"] = args ? args.gateway : undefined;
            resourceInputs["gateway6"] = args ? args.gateway6 : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["guiAdvancedPolicy"] = args ? args.guiAdvancedPolicy : undefined;
            resourceInputs["guiAdvancedWirelessFeatures"] = args ? args.guiAdvancedWirelessFeatures : undefined;
            resourceInputs["guiAllowUnnamedPolicy"] = args ? args.guiAllowUnnamedPolicy : undefined;
            resourceInputs["guiAntivirus"] = args ? args.guiAntivirus : undefined;
            resourceInputs["guiApProfile"] = args ? args.guiApProfile : undefined;
            resourceInputs["guiApplicationControl"] = args ? args.guiApplicationControl : undefined;
            resourceInputs["guiCasb"] = args ? args.guiCasb : undefined;
            resourceInputs["guiDefaultPolicyColumns"] = args ? args.guiDefaultPolicyColumns : undefined;
            resourceInputs["guiDhcpAdvanced"] = args ? args.guiDhcpAdvanced : undefined;
            resourceInputs["guiDlp"] = args ? args.guiDlp : undefined;
            resourceInputs["guiDlpProfile"] = args ? args.guiDlpProfile : undefined;
            resourceInputs["guiDnsDatabase"] = args ? args.guiDnsDatabase : undefined;
            resourceInputs["guiDnsfilter"] = args ? args.guiDnsfilter : undefined;
            resourceInputs["guiDomainIpReputation"] = args ? args.guiDomainIpReputation : undefined;
            resourceInputs["guiDosPolicy"] = args ? args.guiDosPolicy : undefined;
            resourceInputs["guiDynamicDeviceOsId"] = args ? args.guiDynamicDeviceOsId : undefined;
            resourceInputs["guiDynamicProfileDisplay"] = args ? args.guiDynamicProfileDisplay : undefined;
            resourceInputs["guiDynamicRouting"] = args ? args.guiDynamicRouting : undefined;
            resourceInputs["guiEmailCollection"] = args ? args.guiEmailCollection : undefined;
            resourceInputs["guiEndpointControl"] = args ? args.guiEndpointControl : undefined;
            resourceInputs["guiEndpointControlAdvanced"] = args ? args.guiEndpointControlAdvanced : undefined;
            resourceInputs["guiEnforceChangeSummary"] = args ? args.guiEnforceChangeSummary : undefined;
            resourceInputs["guiExplicitProxy"] = args ? args.guiExplicitProxy : undefined;
            resourceInputs["guiFileFilter"] = args ? args.guiFileFilter : undefined;
            resourceInputs["guiFortiapSplitTunneling"] = args ? args.guiFortiapSplitTunneling : undefined;
            resourceInputs["guiFortiextenderController"] = args ? args.guiFortiextenderController : undefined;
            resourceInputs["guiIcap"] = args ? args.guiIcap : undefined;
            resourceInputs["guiImplicitPolicy"] = args ? args.guiImplicitPolicy : undefined;
            resourceInputs["guiIps"] = args ? args.guiIps : undefined;
            resourceInputs["guiLoadBalance"] = args ? args.guiLoadBalance : undefined;
            resourceInputs["guiLocalInPolicy"] = args ? args.guiLocalInPolicy : undefined;
            resourceInputs["guiLocalReports"] = args ? args.guiLocalReports : undefined;
            resourceInputs["guiMulticastPolicy"] = args ? args.guiMulticastPolicy : undefined;
            resourceInputs["guiMultipleInterfacePolicy"] = args ? args.guiMultipleInterfacePolicy : undefined;
            resourceInputs["guiMultipleUtmProfiles"] = args ? args.guiMultipleUtmProfiles : undefined;
            resourceInputs["guiNat4664"] = args ? args.guiNat4664 : undefined;
            resourceInputs["guiObjectColors"] = args ? args.guiObjectColors : undefined;
            resourceInputs["guiOt"] = args ? args.guiOt : undefined;
            resourceInputs["guiPerPolicyDisclaimer"] = args ? args.guiPerPolicyDisclaimer : undefined;
            resourceInputs["guiPolicyBasedIpsec"] = args ? args.guiPolicyBasedIpsec : undefined;
            resourceInputs["guiPolicyDisclaimer"] = args ? args.guiPolicyDisclaimer : undefined;
            resourceInputs["guiPolicyLearning"] = args ? args.guiPolicyLearning : undefined;
            resourceInputs["guiProxyInspection"] = args ? args.guiProxyInspection : undefined;
            resourceInputs["guiReplacementMessageGroups"] = args ? args.guiReplacementMessageGroups : undefined;
            resourceInputs["guiRouteTagAddressCreation"] = args ? args.guiRouteTagAddressCreation : undefined;
            resourceInputs["guiSecurityProfileGroup"] = args ? args.guiSecurityProfileGroup : undefined;
            resourceInputs["guiSpamfilter"] = args ? args.guiSpamfilter : undefined;
            resourceInputs["guiSslvpn"] = args ? args.guiSslvpn : undefined;
            resourceInputs["guiSslvpnPersonalBookmarks"] = args ? args.guiSslvpnPersonalBookmarks : undefined;
            resourceInputs["guiSslvpnRealms"] = args ? args.guiSslvpnRealms : undefined;
            resourceInputs["guiSwitchController"] = args ? args.guiSwitchController : undefined;
            resourceInputs["guiThreatWeight"] = args ? args.guiThreatWeight : undefined;
            resourceInputs["guiTrafficShaping"] = args ? args.guiTrafficShaping : undefined;
            resourceInputs["guiVideofilter"] = args ? args.guiVideofilter : undefined;
            resourceInputs["guiVirtualPatchProfile"] = args ? args.guiVirtualPatchProfile : undefined;
            resourceInputs["guiVoipProfile"] = args ? args.guiVoipProfile : undefined;
            resourceInputs["guiVpn"] = args ? args.guiVpn : undefined;
            resourceInputs["guiWafProfile"] = args ? args.guiWafProfile : undefined;
            resourceInputs["guiWanLoadBalancing"] = args ? args.guiWanLoadBalancing : undefined;
            resourceInputs["guiWanoptCache"] = args ? args.guiWanoptCache : undefined;
            resourceInputs["guiWebfilter"] = args ? args.guiWebfilter : undefined;
            resourceInputs["guiWebfilterAdvanced"] = args ? args.guiWebfilterAdvanced : undefined;
            resourceInputs["guiWirelessController"] = args ? args.guiWirelessController : undefined;
            resourceInputs["guiZtna"] = args ? args.guiZtna : undefined;
            resourceInputs["h323DirectModel"] = args ? args.h323DirectModel : undefined;
            resourceInputs["httpExternalDest"] = args ? args.httpExternalDest : undefined;
            resourceInputs["ikeDnFormat"] = args ? args.ikeDnFormat : undefined;
            resourceInputs["ikeNattPort"] = args ? args.ikeNattPort : undefined;
            resourceInputs["ikePolicyRoute"] = args ? args.ikePolicyRoute : undefined;
            resourceInputs["ikePort"] = args ? args.ikePort : undefined;
            resourceInputs["ikeQuickCrashDetect"] = args ? args.ikeQuickCrashDetect : undefined;
            resourceInputs["ikeSessionResume"] = args ? args.ikeSessionResume : undefined;
            resourceInputs["ikeTcpPort"] = args ? args.ikeTcpPort : undefined;
            resourceInputs["implicitAllowDns"] = args ? args.implicitAllowDns : undefined;
            resourceInputs["inspectionMode"] = args ? args.inspectionMode : undefined;
            resourceInputs["internetServiceAppCtrlSize"] = args ? args.internetServiceAppCtrlSize : undefined;
            resourceInputs["internetServiceDatabaseCache"] = args ? args.internetServiceDatabaseCache : undefined;
            resourceInputs["ip"] = args ? args.ip : undefined;
            resourceInputs["ip6"] = args ? args.ip6 : undefined;
            resourceInputs["lanExtensionControllerAddr"] = args ? args.lanExtensionControllerAddr : undefined;
            resourceInputs["linkDownAccess"] = args ? args.linkDownAccess : undefined;
            resourceInputs["lldpReception"] = args ? args.lldpReception : undefined;
            resourceInputs["lldpTransmission"] = args ? args.lldpTransmission : undefined;
            resourceInputs["locationId"] = args ? args.locationId : undefined;
            resourceInputs["macTtl"] = args ? args.macTtl : undefined;
            resourceInputs["manageip"] = args ? args.manageip : undefined;
            resourceInputs["manageip6"] = args ? args.manageip6 : undefined;
            resourceInputs["multicastForward"] = args ? args.multicastForward : undefined;
            resourceInputs["multicastSkipPolicy"] = args ? args.multicastSkipPolicy : undefined;
            resourceInputs["multicastTtlNotchange"] = args ? args.multicastTtlNotchange : undefined;
            resourceInputs["nat46ForceIpv4PacketForwarding"] = args ? args.nat46ForceIpv4PacketForwarding : undefined;
            resourceInputs["nat46GenerateIpv6FragmentHeader"] = args ? args.nat46GenerateIpv6FragmentHeader : undefined;
            resourceInputs["nat64ForceIpv6PacketForwarding"] = args ? args.nat64ForceIpv6PacketForwarding : undefined;
            resourceInputs["ngfwMode"] = args ? args.ngfwMode : undefined;
            resourceInputs["opmode"] = args ? args.opmode : undefined;
            resourceInputs["prpTrailerAction"] = args ? args.prpTrailerAction : undefined;
            resourceInputs["sccpPort"] = args ? args.sccpPort : undefined;
            resourceInputs["sctpSessionWithoutInit"] = args ? args.sctpSessionWithoutInit : undefined;
            resourceInputs["sesDeniedTraffic"] = args ? args.sesDeniedTraffic : undefined;
            resourceInputs["sipExpectation"] = args ? args.sipExpectation : undefined;
            resourceInputs["sipHelper"] = args ? args.sipHelper : undefined;
            resourceInputs["sipNatTrace"] = args ? args.sipNatTrace : undefined;
            resourceInputs["sipSslPort"] = args ? args.sipSslPort : undefined;
            resourceInputs["sipTcpPort"] = args ? args.sipTcpPort : undefined;
            resourceInputs["sipUdpPort"] = args ? args.sipUdpPort : undefined;
            resourceInputs["snatHairpinTraffic"] = args ? args.snatHairpinTraffic : undefined;
            resourceInputs["sslSshProfile"] = args ? args.sslSshProfile : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["strictSrcCheck"] = args ? args.strictSrcCheck : undefined;
            resourceInputs["tcpSessionWithoutSyn"] = args ? args.tcpSessionWithoutSyn : undefined;
            resourceInputs["utf8SpamTagging"] = args ? args.utf8SpamTagging : undefined;
            resourceInputs["v4EcmpMode"] = args ? args.v4EcmpMode : undefined;
            resourceInputs["vdomType"] = args ? args.vdomType : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["vpnStatsLog"] = args ? args.vpnStatsLog : undefined;
            resourceInputs["vpnStatsPeriod"] = args ? args.vpnStatsPeriod : undefined;
            resourceInputs["wccpCacheEngine"] = args ? args.wccpCacheEngine : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemSettings resources.
 */
export interface SystemSettingsState {
    allowLinkdownPath?: pulumi.Input<string>;
    allowSubnetOverlap?: pulumi.Input<string>;
    applicationBandwidthTracking?: pulumi.Input<string>;
    asymroute?: pulumi.Input<string>;
    asymroute6?: pulumi.Input<string>;
    asymroute6Icmp?: pulumi.Input<string>;
    asymrouteIcmp?: pulumi.Input<string>;
    auxiliarySession?: pulumi.Input<string>;
    bfd?: pulumi.Input<string>;
    bfdDesiredMinTx?: pulumi.Input<number>;
    bfdDetectMult?: pulumi.Input<number>;
    bfdDontEnforceSrcPort?: pulumi.Input<string>;
    bfdRequiredMinRx?: pulumi.Input<number>;
    blockLandAttack?: pulumi.Input<string>;
    centralNat?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    complianceCheck?: pulumi.Input<string>;
    consolidatedFirewallMode?: pulumi.Input<string>;
    defaultAppPortAsService?: pulumi.Input<string>;
    defaultPolicyExpiryDays?: pulumi.Input<number>;
    defaultVoipAlgMode?: pulumi.Input<string>;
    denyTcpWithIcmp?: pulumi.Input<string>;
    detectUnknownEsp?: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    dhcp6ServerIp?: pulumi.Input<string>;
    dhcpProxy?: pulumi.Input<string>;
    dhcpProxyInterface?: pulumi.Input<string>;
    dhcpProxyInterfaceSelectMethod?: pulumi.Input<string>;
    dhcpServerIp?: pulumi.Input<string>;
    discoveredDeviceTimeout?: pulumi.Input<number>;
    dynAddrSessionCheck?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    ecmpMaxPaths?: pulumi.Input<number>;
    emailPortalCheckDns?: pulumi.Input<string>;
    extResourceSessionCheck?: pulumi.Input<string>;
    firewallSessionDirty?: pulumi.Input<string>;
    fqdnSessionCheck?: pulumi.Input<string>;
    fwSessionHairpin?: pulumi.Input<string>;
    gateway?: pulumi.Input<string>;
    gateway6?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    guiAdvancedPolicy?: pulumi.Input<string>;
    guiAdvancedWirelessFeatures?: pulumi.Input<string>;
    guiAllowUnnamedPolicy?: pulumi.Input<string>;
    guiAntivirus?: pulumi.Input<string>;
    guiApProfile?: pulumi.Input<string>;
    guiApplicationControl?: pulumi.Input<string>;
    guiCasb?: pulumi.Input<string>;
    guiDefaultPolicyColumns?: pulumi.Input<pulumi.Input<inputs.SystemSettingsGuiDefaultPolicyColumn>[]>;
    guiDhcpAdvanced?: pulumi.Input<string>;
    guiDlp?: pulumi.Input<string>;
    guiDlpProfile?: pulumi.Input<string>;
    guiDnsDatabase?: pulumi.Input<string>;
    guiDnsfilter?: pulumi.Input<string>;
    guiDomainIpReputation?: pulumi.Input<string>;
    guiDosPolicy?: pulumi.Input<string>;
    guiDynamicDeviceOsId?: pulumi.Input<string>;
    guiDynamicProfileDisplay?: pulumi.Input<string>;
    guiDynamicRouting?: pulumi.Input<string>;
    guiEmailCollection?: pulumi.Input<string>;
    guiEndpointControl?: pulumi.Input<string>;
    guiEndpointControlAdvanced?: pulumi.Input<string>;
    guiEnforceChangeSummary?: pulumi.Input<string>;
    guiExplicitProxy?: pulumi.Input<string>;
    guiFileFilter?: pulumi.Input<string>;
    guiFortiapSplitTunneling?: pulumi.Input<string>;
    guiFortiextenderController?: pulumi.Input<string>;
    guiIcap?: pulumi.Input<string>;
    guiImplicitPolicy?: pulumi.Input<string>;
    guiIps?: pulumi.Input<string>;
    guiLoadBalance?: pulumi.Input<string>;
    guiLocalInPolicy?: pulumi.Input<string>;
    guiLocalReports?: pulumi.Input<string>;
    guiMulticastPolicy?: pulumi.Input<string>;
    guiMultipleInterfacePolicy?: pulumi.Input<string>;
    guiMultipleUtmProfiles?: pulumi.Input<string>;
    guiNat4664?: pulumi.Input<string>;
    guiObjectColors?: pulumi.Input<string>;
    guiOt?: pulumi.Input<string>;
    guiPerPolicyDisclaimer?: pulumi.Input<string>;
    guiPolicyBasedIpsec?: pulumi.Input<string>;
    guiPolicyDisclaimer?: pulumi.Input<string>;
    guiPolicyLearning?: pulumi.Input<string>;
    guiProxyInspection?: pulumi.Input<string>;
    guiReplacementMessageGroups?: pulumi.Input<string>;
    guiRouteTagAddressCreation?: pulumi.Input<string>;
    guiSecurityProfileGroup?: pulumi.Input<string>;
    guiSpamfilter?: pulumi.Input<string>;
    guiSslvpn?: pulumi.Input<string>;
    guiSslvpnPersonalBookmarks?: pulumi.Input<string>;
    guiSslvpnRealms?: pulumi.Input<string>;
    guiSwitchController?: pulumi.Input<string>;
    guiThreatWeight?: pulumi.Input<string>;
    guiTrafficShaping?: pulumi.Input<string>;
    guiVideofilter?: pulumi.Input<string>;
    guiVirtualPatchProfile?: pulumi.Input<string>;
    guiVoipProfile?: pulumi.Input<string>;
    guiVpn?: pulumi.Input<string>;
    guiWafProfile?: pulumi.Input<string>;
    guiWanLoadBalancing?: pulumi.Input<string>;
    guiWanoptCache?: pulumi.Input<string>;
    guiWebfilter?: pulumi.Input<string>;
    guiWebfilterAdvanced?: pulumi.Input<string>;
    guiWirelessController?: pulumi.Input<string>;
    guiZtna?: pulumi.Input<string>;
    h323DirectModel?: pulumi.Input<string>;
    httpExternalDest?: pulumi.Input<string>;
    ikeDnFormat?: pulumi.Input<string>;
    ikeNattPort?: pulumi.Input<number>;
    ikePolicyRoute?: pulumi.Input<string>;
    ikePort?: pulumi.Input<number>;
    ikeQuickCrashDetect?: pulumi.Input<string>;
    ikeSessionResume?: pulumi.Input<string>;
    ikeTcpPort?: pulumi.Input<number>;
    implicitAllowDns?: pulumi.Input<string>;
    inspectionMode?: pulumi.Input<string>;
    internetServiceAppCtrlSize?: pulumi.Input<number>;
    internetServiceDatabaseCache?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    ip6?: pulumi.Input<string>;
    lanExtensionControllerAddr?: pulumi.Input<string>;
    linkDownAccess?: pulumi.Input<string>;
    lldpReception?: pulumi.Input<string>;
    lldpTransmission?: pulumi.Input<string>;
    locationId?: pulumi.Input<string>;
    macTtl?: pulumi.Input<number>;
    manageip?: pulumi.Input<string>;
    manageip6?: pulumi.Input<string>;
    multicastForward?: pulumi.Input<string>;
    multicastSkipPolicy?: pulumi.Input<string>;
    multicastTtlNotchange?: pulumi.Input<string>;
    nat46ForceIpv4PacketForwarding?: pulumi.Input<string>;
    nat46GenerateIpv6FragmentHeader?: pulumi.Input<string>;
    nat64ForceIpv6PacketForwarding?: pulumi.Input<string>;
    ngfwMode?: pulumi.Input<string>;
    opmode?: pulumi.Input<string>;
    prpTrailerAction?: pulumi.Input<string>;
    sccpPort?: pulumi.Input<number>;
    sctpSessionWithoutInit?: pulumi.Input<string>;
    sesDeniedTraffic?: pulumi.Input<string>;
    sipExpectation?: pulumi.Input<string>;
    sipHelper?: pulumi.Input<string>;
    sipNatTrace?: pulumi.Input<string>;
    sipSslPort?: pulumi.Input<number>;
    sipTcpPort?: pulumi.Input<number>;
    sipUdpPort?: pulumi.Input<number>;
    snatHairpinTraffic?: pulumi.Input<string>;
    sslSshProfile?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    strictSrcCheck?: pulumi.Input<string>;
    tcpSessionWithoutSyn?: pulumi.Input<string>;
    utf8SpamTagging?: pulumi.Input<string>;
    v4EcmpMode?: pulumi.Input<string>;
    vdomType?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    vpnStatsLog?: pulumi.Input<string>;
    vpnStatsPeriod?: pulumi.Input<number>;
    wccpCacheEngine?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemSettings resource.
 */
export interface SystemSettingsArgs {
    allowLinkdownPath?: pulumi.Input<string>;
    allowSubnetOverlap?: pulumi.Input<string>;
    applicationBandwidthTracking?: pulumi.Input<string>;
    asymroute?: pulumi.Input<string>;
    asymroute6?: pulumi.Input<string>;
    asymroute6Icmp?: pulumi.Input<string>;
    asymrouteIcmp?: pulumi.Input<string>;
    auxiliarySession?: pulumi.Input<string>;
    bfd?: pulumi.Input<string>;
    bfdDesiredMinTx?: pulumi.Input<number>;
    bfdDetectMult?: pulumi.Input<number>;
    bfdDontEnforceSrcPort?: pulumi.Input<string>;
    bfdRequiredMinRx?: pulumi.Input<number>;
    blockLandAttack?: pulumi.Input<string>;
    centralNat?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    complianceCheck?: pulumi.Input<string>;
    consolidatedFirewallMode?: pulumi.Input<string>;
    defaultAppPortAsService?: pulumi.Input<string>;
    defaultPolicyExpiryDays?: pulumi.Input<number>;
    defaultVoipAlgMode?: pulumi.Input<string>;
    denyTcpWithIcmp?: pulumi.Input<string>;
    detectUnknownEsp?: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    dhcp6ServerIp?: pulumi.Input<string>;
    dhcpProxy?: pulumi.Input<string>;
    dhcpProxyInterface?: pulumi.Input<string>;
    dhcpProxyInterfaceSelectMethod?: pulumi.Input<string>;
    dhcpServerIp?: pulumi.Input<string>;
    discoveredDeviceTimeout?: pulumi.Input<number>;
    dynAddrSessionCheck?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    ecmpMaxPaths?: pulumi.Input<number>;
    emailPortalCheckDns?: pulumi.Input<string>;
    extResourceSessionCheck?: pulumi.Input<string>;
    firewallSessionDirty?: pulumi.Input<string>;
    fqdnSessionCheck?: pulumi.Input<string>;
    fwSessionHairpin?: pulumi.Input<string>;
    gateway?: pulumi.Input<string>;
    gateway6?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    guiAdvancedPolicy?: pulumi.Input<string>;
    guiAdvancedWirelessFeatures?: pulumi.Input<string>;
    guiAllowUnnamedPolicy?: pulumi.Input<string>;
    guiAntivirus?: pulumi.Input<string>;
    guiApProfile?: pulumi.Input<string>;
    guiApplicationControl?: pulumi.Input<string>;
    guiCasb?: pulumi.Input<string>;
    guiDefaultPolicyColumns?: pulumi.Input<pulumi.Input<inputs.SystemSettingsGuiDefaultPolicyColumn>[]>;
    guiDhcpAdvanced?: pulumi.Input<string>;
    guiDlp?: pulumi.Input<string>;
    guiDlpProfile?: pulumi.Input<string>;
    guiDnsDatabase?: pulumi.Input<string>;
    guiDnsfilter?: pulumi.Input<string>;
    guiDomainIpReputation?: pulumi.Input<string>;
    guiDosPolicy?: pulumi.Input<string>;
    guiDynamicDeviceOsId?: pulumi.Input<string>;
    guiDynamicProfileDisplay?: pulumi.Input<string>;
    guiDynamicRouting?: pulumi.Input<string>;
    guiEmailCollection?: pulumi.Input<string>;
    guiEndpointControl?: pulumi.Input<string>;
    guiEndpointControlAdvanced?: pulumi.Input<string>;
    guiEnforceChangeSummary?: pulumi.Input<string>;
    guiExplicitProxy?: pulumi.Input<string>;
    guiFileFilter?: pulumi.Input<string>;
    guiFortiapSplitTunneling?: pulumi.Input<string>;
    guiFortiextenderController?: pulumi.Input<string>;
    guiIcap?: pulumi.Input<string>;
    guiImplicitPolicy?: pulumi.Input<string>;
    guiIps?: pulumi.Input<string>;
    guiLoadBalance?: pulumi.Input<string>;
    guiLocalInPolicy?: pulumi.Input<string>;
    guiLocalReports?: pulumi.Input<string>;
    guiMulticastPolicy?: pulumi.Input<string>;
    guiMultipleInterfacePolicy?: pulumi.Input<string>;
    guiMultipleUtmProfiles?: pulumi.Input<string>;
    guiNat4664?: pulumi.Input<string>;
    guiObjectColors?: pulumi.Input<string>;
    guiOt?: pulumi.Input<string>;
    guiPerPolicyDisclaimer?: pulumi.Input<string>;
    guiPolicyBasedIpsec?: pulumi.Input<string>;
    guiPolicyDisclaimer?: pulumi.Input<string>;
    guiPolicyLearning?: pulumi.Input<string>;
    guiProxyInspection?: pulumi.Input<string>;
    guiReplacementMessageGroups?: pulumi.Input<string>;
    guiRouteTagAddressCreation?: pulumi.Input<string>;
    guiSecurityProfileGroup?: pulumi.Input<string>;
    guiSpamfilter?: pulumi.Input<string>;
    guiSslvpn?: pulumi.Input<string>;
    guiSslvpnPersonalBookmarks?: pulumi.Input<string>;
    guiSslvpnRealms?: pulumi.Input<string>;
    guiSwitchController?: pulumi.Input<string>;
    guiThreatWeight?: pulumi.Input<string>;
    guiTrafficShaping?: pulumi.Input<string>;
    guiVideofilter?: pulumi.Input<string>;
    guiVirtualPatchProfile?: pulumi.Input<string>;
    guiVoipProfile?: pulumi.Input<string>;
    guiVpn?: pulumi.Input<string>;
    guiWafProfile?: pulumi.Input<string>;
    guiWanLoadBalancing?: pulumi.Input<string>;
    guiWanoptCache?: pulumi.Input<string>;
    guiWebfilter?: pulumi.Input<string>;
    guiWebfilterAdvanced?: pulumi.Input<string>;
    guiWirelessController?: pulumi.Input<string>;
    guiZtna?: pulumi.Input<string>;
    h323DirectModel?: pulumi.Input<string>;
    httpExternalDest?: pulumi.Input<string>;
    ikeDnFormat?: pulumi.Input<string>;
    ikeNattPort?: pulumi.Input<number>;
    ikePolicyRoute?: pulumi.Input<string>;
    ikePort?: pulumi.Input<number>;
    ikeQuickCrashDetect?: pulumi.Input<string>;
    ikeSessionResume?: pulumi.Input<string>;
    ikeTcpPort?: pulumi.Input<number>;
    implicitAllowDns?: pulumi.Input<string>;
    inspectionMode?: pulumi.Input<string>;
    internetServiceAppCtrlSize?: pulumi.Input<number>;
    internetServiceDatabaseCache?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    ip6?: pulumi.Input<string>;
    lanExtensionControllerAddr?: pulumi.Input<string>;
    linkDownAccess?: pulumi.Input<string>;
    lldpReception?: pulumi.Input<string>;
    lldpTransmission?: pulumi.Input<string>;
    locationId?: pulumi.Input<string>;
    macTtl?: pulumi.Input<number>;
    manageip?: pulumi.Input<string>;
    manageip6?: pulumi.Input<string>;
    multicastForward?: pulumi.Input<string>;
    multicastSkipPolicy?: pulumi.Input<string>;
    multicastTtlNotchange?: pulumi.Input<string>;
    nat46ForceIpv4PacketForwarding?: pulumi.Input<string>;
    nat46GenerateIpv6FragmentHeader?: pulumi.Input<string>;
    nat64ForceIpv6PacketForwarding?: pulumi.Input<string>;
    ngfwMode?: pulumi.Input<string>;
    opmode?: pulumi.Input<string>;
    prpTrailerAction?: pulumi.Input<string>;
    sccpPort?: pulumi.Input<number>;
    sctpSessionWithoutInit?: pulumi.Input<string>;
    sesDeniedTraffic?: pulumi.Input<string>;
    sipExpectation?: pulumi.Input<string>;
    sipHelper?: pulumi.Input<string>;
    sipNatTrace?: pulumi.Input<string>;
    sipSslPort?: pulumi.Input<number>;
    sipTcpPort?: pulumi.Input<number>;
    sipUdpPort?: pulumi.Input<number>;
    snatHairpinTraffic?: pulumi.Input<string>;
    sslSshProfile?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    strictSrcCheck?: pulumi.Input<string>;
    tcpSessionWithoutSyn?: pulumi.Input<string>;
    utf8SpamTagging?: pulumi.Input<string>;
    v4EcmpMode?: pulumi.Input<string>;
    vdomType?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    vpnStatsLog?: pulumi.Input<string>;
    vpnStatsPeriod?: pulumi.Input<number>;
    wccpCacheEngine?: pulumi.Input<string>;
}
