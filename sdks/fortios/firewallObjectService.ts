// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FirewallObjectService extends pulumi.CustomResource {
    /**
     * Get an existing FirewallObjectService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallObjectServiceState, opts?: pulumi.CustomResourceOptions): FirewallObjectService {
        return new FirewallObjectService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/firewallObjectService:FirewallObjectService';

    /**
     * Returns true if the given object is an instance of FirewallObjectService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallObjectService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallObjectService.__pulumiType;
    }

    public readonly category!: pulumi.Output<string>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly fqdn!: pulumi.Output<string>;
    public readonly icmpcode!: pulumi.Output<string>;
    public readonly icmptype!: pulumi.Output<string>;
    public readonly iprange!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly protocol!: pulumi.Output<string>;
    public readonly protocolNumber!: pulumi.Output<string>;
    public readonly sctpPortrange!: pulumi.Output<string>;
    public readonly sessionTtl!: pulumi.Output<string>;
    public readonly tcpPortrange!: pulumi.Output<string>;
    public readonly udpPortrange!: pulumi.Output<string>;

    /**
     * Create a FirewallObjectService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallObjectServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallObjectServiceArgs | FirewallObjectServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallObjectServiceState | undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["fqdn"] = state ? state.fqdn : undefined;
            resourceInputs["icmpcode"] = state ? state.icmpcode : undefined;
            resourceInputs["icmptype"] = state ? state.icmptype : undefined;
            resourceInputs["iprange"] = state ? state.iprange : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["protocolNumber"] = state ? state.protocolNumber : undefined;
            resourceInputs["sctpPortrange"] = state ? state.sctpPortrange : undefined;
            resourceInputs["sessionTtl"] = state ? state.sessionTtl : undefined;
            resourceInputs["tcpPortrange"] = state ? state.tcpPortrange : undefined;
            resourceInputs["udpPortrange"] = state ? state.udpPortrange : undefined;
        } else {
            const args = argsOrState as FirewallObjectServiceArgs | undefined;
            if ((!args || args.category === undefined) && !opts.urn) {
                throw new Error("Missing required property 'category'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["fqdn"] = args ? args.fqdn : undefined;
            resourceInputs["icmpcode"] = args ? args.icmpcode : undefined;
            resourceInputs["icmptype"] = args ? args.icmptype : undefined;
            resourceInputs["iprange"] = args ? args.iprange : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["protocolNumber"] = args ? args.protocolNumber : undefined;
            resourceInputs["sctpPortrange"] = args ? args.sctpPortrange : undefined;
            resourceInputs["sessionTtl"] = args ? args.sessionTtl : undefined;
            resourceInputs["tcpPortrange"] = args ? args.tcpPortrange : undefined;
            resourceInputs["udpPortrange"] = args ? args.udpPortrange : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallObjectService.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirewallObjectService resources.
 */
export interface FirewallObjectServiceState {
    category?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    fqdn?: pulumi.Input<string>;
    icmpcode?: pulumi.Input<string>;
    icmptype?: pulumi.Input<string>;
    iprange?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    protocolNumber?: pulumi.Input<string>;
    sctpPortrange?: pulumi.Input<string>;
    sessionTtl?: pulumi.Input<string>;
    tcpPortrange?: pulumi.Input<string>;
    udpPortrange?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallObjectService resource.
 */
export interface FirewallObjectServiceArgs {
    category: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    fqdn?: pulumi.Input<string>;
    icmpcode?: pulumi.Input<string>;
    icmptype?: pulumi.Input<string>;
    iprange?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    protocolNumber?: pulumi.Input<string>;
    sctpPortrange?: pulumi.Input<string>;
    sessionTtl?: pulumi.Input<string>;
    tcpPortrange?: pulumi.Input<string>;
    udpPortrange?: pulumi.Input<string>;
}
