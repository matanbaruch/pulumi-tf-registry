// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemNpu extends pulumi.CustomResource {
    /**
     * Get an existing SystemNpu resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemNpuState, opts?: pulumi.CustomResourceOptions): SystemNpu {
        return new SystemNpu(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemNpu:SystemNpu';

    /**
     * Returns true if the given object is an instance of SystemNpu.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemNpu {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemNpu.__pulumiType;
    }

    public readonly capwapOffload!: pulumi.Output<string>;
    public readonly dedicatedManagementAffinity!: pulumi.Output<string>;
    public readonly dedicatedManagementCpu!: pulumi.Output<string>;
    public readonly fastpath!: pulumi.Output<string>;
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    public readonly ipsecDecSubengineMask!: pulumi.Output<string>;
    public readonly ipsecEncSubengineMask!: pulumi.Output<string>;
    public readonly ipsecInboundCache!: pulumi.Output<string>;
    public readonly ipsecMtuOverride!: pulumi.Output<string>;
    public readonly ipsecOverVlink!: pulumi.Output<string>;
    public readonly mcastSessionAccounting!: pulumi.Output<string>;
    public readonly np6CpsOptimizationMode!: pulumi.Output<string>;
    public readonly priorityProtocol!: pulumi.Output<outputs.SystemNpuPriorityProtocol | undefined>;
    public readonly rdpOffload!: pulumi.Output<string>;
    public readonly sessionDeniedOffload!: pulumi.Output<string>;
    public readonly sseBackpressure!: pulumi.Output<string>;
    public readonly stripClearTextPadding!: pulumi.Output<string>;
    public readonly stripEspPadding!: pulumi.Output<string>;
    public readonly swNpBandwidth!: pulumi.Output<string>;
    public readonly uespOffload!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a SystemNpu resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemNpuArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemNpuArgs | SystemNpuState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemNpuState | undefined;
            resourceInputs["capwapOffload"] = state ? state.capwapOffload : undefined;
            resourceInputs["dedicatedManagementAffinity"] = state ? state.dedicatedManagementAffinity : undefined;
            resourceInputs["dedicatedManagementCpu"] = state ? state.dedicatedManagementCpu : undefined;
            resourceInputs["fastpath"] = state ? state.fastpath : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["ipsecDecSubengineMask"] = state ? state.ipsecDecSubengineMask : undefined;
            resourceInputs["ipsecEncSubengineMask"] = state ? state.ipsecEncSubengineMask : undefined;
            resourceInputs["ipsecInboundCache"] = state ? state.ipsecInboundCache : undefined;
            resourceInputs["ipsecMtuOverride"] = state ? state.ipsecMtuOverride : undefined;
            resourceInputs["ipsecOverVlink"] = state ? state.ipsecOverVlink : undefined;
            resourceInputs["mcastSessionAccounting"] = state ? state.mcastSessionAccounting : undefined;
            resourceInputs["np6CpsOptimizationMode"] = state ? state.np6CpsOptimizationMode : undefined;
            resourceInputs["priorityProtocol"] = state ? state.priorityProtocol : undefined;
            resourceInputs["rdpOffload"] = state ? state.rdpOffload : undefined;
            resourceInputs["sessionDeniedOffload"] = state ? state.sessionDeniedOffload : undefined;
            resourceInputs["sseBackpressure"] = state ? state.sseBackpressure : undefined;
            resourceInputs["stripClearTextPadding"] = state ? state.stripClearTextPadding : undefined;
            resourceInputs["stripEspPadding"] = state ? state.stripEspPadding : undefined;
            resourceInputs["swNpBandwidth"] = state ? state.swNpBandwidth : undefined;
            resourceInputs["uespOffload"] = state ? state.uespOffload : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as SystemNpuArgs | undefined;
            resourceInputs["capwapOffload"] = args ? args.capwapOffload : undefined;
            resourceInputs["dedicatedManagementAffinity"] = args ? args.dedicatedManagementAffinity : undefined;
            resourceInputs["dedicatedManagementCpu"] = args ? args.dedicatedManagementCpu : undefined;
            resourceInputs["fastpath"] = args ? args.fastpath : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["ipsecDecSubengineMask"] = args ? args.ipsecDecSubengineMask : undefined;
            resourceInputs["ipsecEncSubengineMask"] = args ? args.ipsecEncSubengineMask : undefined;
            resourceInputs["ipsecInboundCache"] = args ? args.ipsecInboundCache : undefined;
            resourceInputs["ipsecMtuOverride"] = args ? args.ipsecMtuOverride : undefined;
            resourceInputs["ipsecOverVlink"] = args ? args.ipsecOverVlink : undefined;
            resourceInputs["mcastSessionAccounting"] = args ? args.mcastSessionAccounting : undefined;
            resourceInputs["np6CpsOptimizationMode"] = args ? args.np6CpsOptimizationMode : undefined;
            resourceInputs["priorityProtocol"] = args ? args.priorityProtocol : undefined;
            resourceInputs["rdpOffload"] = args ? args.rdpOffload : undefined;
            resourceInputs["sessionDeniedOffload"] = args ? args.sessionDeniedOffload : undefined;
            resourceInputs["sseBackpressure"] = args ? args.sseBackpressure : undefined;
            resourceInputs["stripClearTextPadding"] = args ? args.stripClearTextPadding : undefined;
            resourceInputs["stripEspPadding"] = args ? args.stripEspPadding : undefined;
            resourceInputs["swNpBandwidth"] = args ? args.swNpBandwidth : undefined;
            resourceInputs["uespOffload"] = args ? args.uespOffload : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemNpu.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemNpu resources.
 */
export interface SystemNpuState {
    capwapOffload?: pulumi.Input<string>;
    dedicatedManagementAffinity?: pulumi.Input<string>;
    dedicatedManagementCpu?: pulumi.Input<string>;
    fastpath?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    ipsecDecSubengineMask?: pulumi.Input<string>;
    ipsecEncSubengineMask?: pulumi.Input<string>;
    ipsecInboundCache?: pulumi.Input<string>;
    ipsecMtuOverride?: pulumi.Input<string>;
    ipsecOverVlink?: pulumi.Input<string>;
    mcastSessionAccounting?: pulumi.Input<string>;
    np6CpsOptimizationMode?: pulumi.Input<string>;
    priorityProtocol?: pulumi.Input<inputs.SystemNpuPriorityProtocol>;
    rdpOffload?: pulumi.Input<string>;
    sessionDeniedOffload?: pulumi.Input<string>;
    sseBackpressure?: pulumi.Input<string>;
    stripClearTextPadding?: pulumi.Input<string>;
    stripEspPadding?: pulumi.Input<string>;
    swNpBandwidth?: pulumi.Input<string>;
    uespOffload?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemNpu resource.
 */
export interface SystemNpuArgs {
    capwapOffload?: pulumi.Input<string>;
    dedicatedManagementAffinity?: pulumi.Input<string>;
    dedicatedManagementCpu?: pulumi.Input<string>;
    fastpath?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    ipsecDecSubengineMask?: pulumi.Input<string>;
    ipsecEncSubengineMask?: pulumi.Input<string>;
    ipsecInboundCache?: pulumi.Input<string>;
    ipsecMtuOverride?: pulumi.Input<string>;
    ipsecOverVlink?: pulumi.Input<string>;
    mcastSessionAccounting?: pulumi.Input<string>;
    np6CpsOptimizationMode?: pulumi.Input<string>;
    priorityProtocol?: pulumi.Input<inputs.SystemNpuPriorityProtocol>;
    rdpOffload?: pulumi.Input<string>;
    sessionDeniedOffload?: pulumi.Input<string>;
    sseBackpressure?: pulumi.Input<string>;
    stripClearTextPadding?: pulumi.Input<string>;
    stripEspPadding?: pulumi.Input<string>;
    swNpBandwidth?: pulumi.Input<string>;
    uespOffload?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
