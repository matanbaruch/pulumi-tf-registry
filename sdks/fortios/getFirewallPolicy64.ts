// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirewallPolicy64(args: GetFirewallPolicy64Args, opts?: pulumi.InvokeOptions): Promise<GetFirewallPolicy64Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getFirewallPolicy64:getFirewallPolicy64", {
        "id": args.id,
        "policyid": args.policyid,
        "vdomparam": args.vdomparam,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirewallPolicy64.
 */
export interface GetFirewallPolicy64Args {
    id?: string;
    policyid: number;
    vdomparam?: string;
}

/**
 * A collection of values returned by getFirewallPolicy64.
 */
export interface GetFirewallPolicy64Result {
    readonly action: string;
    readonly comments: string;
    readonly dstaddrs: outputs.GetFirewallPolicy64Dstaddr[];
    readonly dstintf: string;
    readonly fixedport: string;
    readonly id: string;
    readonly ippool: string;
    readonly logtraffic: string;
    readonly logtrafficStart: string;
    readonly name: string;
    readonly perIpShaper: string;
    readonly permitAnyHost: string;
    readonly policyid: number;
    readonly poolnames: outputs.GetFirewallPolicy64Poolname[];
    readonly schedule: string;
    readonly services: outputs.GetFirewallPolicy64Service[];
    readonly srcaddrs: outputs.GetFirewallPolicy64Srcaddr[];
    readonly srcintf: string;
    readonly status: string;
    readonly tcpMssReceiver: number;
    readonly tcpMssSender: number;
    readonly trafficShaper: string;
    readonly trafficShaperReverse: string;
    readonly uuid: string;
    readonly vdomparam?: string;
}
export function getFirewallPolicy64Output(args: GetFirewallPolicy64OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallPolicy64Result> {
    return pulumi.output(args).apply((a: any) => getFirewallPolicy64(a, opts))
}

/**
 * A collection of arguments for invoking getFirewallPolicy64.
 */
export interface GetFirewallPolicy64OutputArgs {
    id?: pulumi.Input<string>;
    policyid: pulumi.Input<number>;
    vdomparam?: pulumi.Input<string>;
}
