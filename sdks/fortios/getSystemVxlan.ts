// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSystemVxlan(args: GetSystemVxlanArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemVxlanResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getSystemVxlan:getSystemVxlan", {
        "id": args.id,
        "name": args.name,
        "vdomparam": args.vdomparam,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemVxlan.
 */
export interface GetSystemVxlanArgs {
    id?: string;
    name: string;
    vdomparam?: string;
}

/**
 * A collection of values returned by getSystemVxlan.
 */
export interface GetSystemVxlanResult {
    readonly dstport: number;
    readonly evpnId: number;
    readonly id: string;
    readonly interface: string;
    readonly ipVersion: string;
    readonly learnFromTraffic: string;
    readonly multicastTtl: number;
    readonly name: string;
    readonly remoteIp6s: outputs.GetSystemVxlanRemoteIp6[];
    readonly remoteIps: outputs.GetSystemVxlanRemoteIp[];
    readonly vdomparam?: string;
    readonly vni: number;
}
export function getSystemVxlanOutput(args: GetSystemVxlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemVxlanResult> {
    return pulumi.output(args).apply((a: any) => getSystemVxlan(a, opts))
}

/**
 * A collection of arguments for invoking getSystemVxlan.
 */
export interface GetSystemVxlanOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
