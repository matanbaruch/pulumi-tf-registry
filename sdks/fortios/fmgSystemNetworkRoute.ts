// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FmgSystemNetworkRoute extends pulumi.CustomResource {
    /**
     * Get an existing FmgSystemNetworkRoute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FmgSystemNetworkRouteState, opts?: pulumi.CustomResourceOptions): FmgSystemNetworkRoute {
        return new FmgSystemNetworkRoute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/fmgSystemNetworkRoute:FmgSystemNetworkRoute';

    /**
     * Returns true if the given object is an instance of FmgSystemNetworkRoute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FmgSystemNetworkRoute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FmgSystemNetworkRoute.__pulumiType;
    }

    public readonly destination!: pulumi.Output<string>;
    public readonly device!: pulumi.Output<string>;
    public readonly gateway!: pulumi.Output<string>;
    public readonly routeId!: pulumi.Output<number>;

    /**
     * Create a FmgSystemNetworkRoute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FmgSystemNetworkRouteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FmgSystemNetworkRouteArgs | FmgSystemNetworkRouteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FmgSystemNetworkRouteState | undefined;
            resourceInputs["destination"] = state ? state.destination : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["gateway"] = state ? state.gateway : undefined;
            resourceInputs["routeId"] = state ? state.routeId : undefined;
        } else {
            const args = argsOrState as FmgSystemNetworkRouteArgs | undefined;
            if ((!args || args.destination === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destination'");
            }
            if ((!args || args.device === undefined) && !opts.urn) {
                throw new Error("Missing required property 'device'");
            }
            if ((!args || args.gateway === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gateway'");
            }
            if ((!args || args.routeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routeId'");
            }
            resourceInputs["destination"] = args ? args.destination : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["gateway"] = args ? args.gateway : undefined;
            resourceInputs["routeId"] = args ? args.routeId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FmgSystemNetworkRoute.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FmgSystemNetworkRoute resources.
 */
export interface FmgSystemNetworkRouteState {
    destination?: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    gateway?: pulumi.Input<string>;
    routeId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a FmgSystemNetworkRoute resource.
 */
export interface FmgSystemNetworkRouteArgs {
    destination: pulumi.Input<string>;
    device: pulumi.Input<string>;
    gateway: pulumi.Input<string>;
    routeId: pulumi.Input<number>;
}
