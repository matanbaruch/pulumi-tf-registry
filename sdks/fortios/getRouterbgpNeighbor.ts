// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRouterbgpNeighbor(args: GetRouterbgpNeighborArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterbgpNeighborResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getRouterbgpNeighbor:getRouterbgpNeighbor", {
        "id": args.id,
        "ip": args.ip,
        "vdomparam": args.vdomparam,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterbgpNeighbor.
 */
export interface GetRouterbgpNeighborArgs {
    id?: string;
    ip: string;
    vdomparam?: string;
}

/**
 * A collection of values returned by getRouterbgpNeighbor.
 */
export interface GetRouterbgpNeighborResult {
    readonly activate: string;
    readonly activate6: string;
    readonly activateEvpn: string;
    readonly activateVpnv4: string;
    readonly activateVpnv6: string;
    readonly additionalPath: string;
    readonly additionalPath6: string;
    readonly additionalPathVpnv4: string;
    readonly additionalPathVpnv6: string;
    readonly advAdditionalPath: number;
    readonly advAdditionalPath6: number;
    readonly advAdditionalPathVpnv4: number;
    readonly advAdditionalPathVpnv6: number;
    readonly advertisementInterval: number;
    readonly allowasIn: number;
    readonly allowasIn6: number;
    readonly allowasInEnable: string;
    readonly allowasInEnable6: string;
    readonly allowasInEnableEvpn: string;
    readonly allowasInEnableVpnv4: string;
    readonly allowasInEnableVpnv6: string;
    readonly allowasInEvpn: number;
    readonly allowasInVpnv4: number;
    readonly allowasInVpnv6: number;
    readonly asOverride: string;
    readonly asOverride6: string;
    readonly attributeUnchanged: string;
    readonly attributeUnchanged6: string;
    readonly attributeUnchangedVpnv4: string;
    readonly attributeUnchangedVpnv6: string;
    readonly authOptions: string;
    readonly bfd: string;
    readonly capabilityDefaultOriginate: string;
    readonly capabilityDefaultOriginate6: string;
    readonly capabilityDynamic: string;
    readonly capabilityGracefulRestart: string;
    readonly capabilityGracefulRestart6: string;
    readonly capabilityGracefulRestartEvpn: string;
    readonly capabilityGracefulRestartVpnv4: string;
    readonly capabilityGracefulRestartVpnv6: string;
    readonly capabilityOrf: string;
    readonly capabilityOrf6: string;
    readonly capabilityRouteRefresh: string;
    readonly conditionalAdvertise6s: outputs.GetRouterbgpNeighborConditionalAdvertise6[];
    readonly conditionalAdvertises: outputs.GetRouterbgpNeighborConditionalAdvertise[];
    readonly connectTimer: number;
    readonly defaultOriginateRoutemap: string;
    readonly defaultOriginateRoutemap6: string;
    readonly description: string;
    readonly distributeListIn: string;
    readonly distributeListIn6: string;
    readonly distributeListInVpnv4: string;
    readonly distributeListInVpnv6: string;
    readonly distributeListOut: string;
    readonly distributeListOut6: string;
    readonly distributeListOutVpnv4: string;
    readonly distributeListOutVpnv6: string;
    readonly dontCapabilityNegotiate: string;
    readonly ebgpEnforceMultihop: string;
    readonly ebgpMultihopTtl: number;
    readonly filterListIn: string;
    readonly filterListIn6: string;
    readonly filterListInVpnv4: string;
    readonly filterListInVpnv6: string;
    readonly filterListOut: string;
    readonly filterListOut6: string;
    readonly filterListOutVpnv4: string;
    readonly filterListOutVpnv6: string;
    readonly holdtimeTimer: number;
    readonly id: string;
    readonly interface: string;
    readonly ip: string;
    readonly keepAliveTimer: number;
    readonly linkDownFailover: string;
    readonly localAs: number;
    readonly localAsNoPrepend: string;
    readonly localAsReplaceAs: string;
    readonly maximumPrefix: number;
    readonly maximumPrefix6: number;
    readonly maximumPrefixEvpn: number;
    readonly maximumPrefixThreshold: number;
    readonly maximumPrefixThreshold6: number;
    readonly maximumPrefixThresholdEvpn: number;
    readonly maximumPrefixThresholdVpnv4: number;
    readonly maximumPrefixThresholdVpnv6: number;
    readonly maximumPrefixVpnv4: number;
    readonly maximumPrefixVpnv6: number;
    readonly maximumPrefixWarningOnly: string;
    readonly maximumPrefixWarningOnly6: string;
    readonly maximumPrefixWarningOnlyEvpn: string;
    readonly maximumPrefixWarningOnlyVpnv4: string;
    readonly maximumPrefixWarningOnlyVpnv6: string;
    readonly nextHopSelf: string;
    readonly nextHopSelf6: string;
    readonly nextHopSelfRr: string;
    readonly nextHopSelfRr6: string;
    readonly nextHopSelfVpnv4: string;
    readonly nextHopSelfVpnv6: string;
    readonly overrideCapability: string;
    readonly passive: string;
    readonly password: string;
    readonly prefixListIn: string;
    readonly prefixListIn6: string;
    readonly prefixListInVpnv4: string;
    readonly prefixListInVpnv6: string;
    readonly prefixListOut: string;
    readonly prefixListOut6: string;
    readonly prefixListOutVpnv4: string;
    readonly prefixListOutVpnv6: string;
    readonly remoteAs: number;
    readonly removePrivateAs: string;
    readonly removePrivateAs6: string;
    readonly removePrivateAsEvpn: string;
    readonly removePrivateAsVpnv4: string;
    readonly removePrivateAsVpnv6: string;
    readonly restartTime: number;
    readonly retainStaleTime: number;
    readonly routeMapIn: string;
    readonly routeMapIn6: string;
    readonly routeMapInEvpn: string;
    readonly routeMapInVpnv4: string;
    readonly routeMapInVpnv6: string;
    readonly routeMapOut: string;
    readonly routeMapOut6: string;
    readonly routeMapOut6Preferable: string;
    readonly routeMapOutEvpn: string;
    readonly routeMapOutPreferable: string;
    readonly routeMapOutVpnv4: string;
    readonly routeMapOutVpnv4Preferable: string;
    readonly routeMapOutVpnv6: string;
    readonly routeMapOutVpnv6Preferable: string;
    readonly routeReflectorClient: string;
    readonly routeReflectorClient6: string;
    readonly routeReflectorClientEvpn: string;
    readonly routeReflectorClientVpnv4: string;
    readonly routeReflectorClientVpnv6: string;
    readonly routeServerClient: string;
    readonly routeServerClient6: string;
    readonly routeServerClientEvpn: string;
    readonly routeServerClientVpnv4: string;
    readonly routeServerClientVpnv6: string;
    readonly sendCommunity: string;
    readonly sendCommunity6: string;
    readonly sendCommunityEvpn: string;
    readonly sendCommunityVpnv4: string;
    readonly sendCommunityVpnv6: string;
    readonly shutdown: string;
    readonly softReconfiguration: string;
    readonly softReconfiguration6: string;
    readonly softReconfigurationEvpn: string;
    readonly softReconfigurationVpnv4: string;
    readonly softReconfigurationVpnv6: string;
    readonly staleRoute: string;
    readonly strictCapabilityMatch: string;
    readonly unsuppressMap: string;
    readonly unsuppressMap6: string;
    readonly updateSource: string;
    readonly vdomparam?: string;
    readonly weight: number;
}
export function getRouterbgpNeighborOutput(args: GetRouterbgpNeighborOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterbgpNeighborResult> {
    return pulumi.output(args).apply((a: any) => getRouterbgpNeighbor(a, opts))
}

/**
 * A collection of arguments for invoking getRouterbgpNeighbor.
 */
export interface GetRouterbgpNeighborOutputArgs {
    id?: pulumi.Input<string>;
    ip: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
