// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemReplacemsggroup extends pulumi.CustomResource {
    /**
     * Get an existing SystemReplacemsggroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemReplacemsggroupState, opts?: pulumi.CustomResourceOptions): SystemReplacemsggroup {
        return new SystemReplacemsggroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/systemReplacemsggroup:SystemReplacemsggroup';

    /**
     * Returns true if the given object is an instance of SystemReplacemsggroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemReplacemsggroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemReplacemsggroup.__pulumiType;
    }

    public readonly admins!: pulumi.Output<outputs.SystemReplacemsggroupAdmin[] | undefined>;
    public readonly alertmails!: pulumi.Output<outputs.SystemReplacemsggroupAlertmail[] | undefined>;
    public readonly auths!: pulumi.Output<outputs.SystemReplacemsggroupAuth[] | undefined>;
    public readonly automations!: pulumi.Output<outputs.SystemReplacemsggroupAutomation[] | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly customMessages!: pulumi.Output<outputs.SystemReplacemsggroupCustomMessage[] | undefined>;
    public readonly deviceDetectionPortals!: pulumi.Output<outputs.SystemReplacemsggroupDeviceDetectionPortal[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly ecs!: pulumi.Output<outputs.SystemReplacemsggroupEc[] | undefined>;
    public readonly fortiguardWfs!: pulumi.Output<outputs.SystemReplacemsggroupFortiguardWf[] | undefined>;
    public readonly ftps!: pulumi.Output<outputs.SystemReplacemsggroupFtp[] | undefined>;
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    public readonly groupType!: pulumi.Output<string>;
    public readonly https!: pulumi.Output<outputs.SystemReplacemsggroupHttp[] | undefined>;
    public readonly icaps!: pulumi.Output<outputs.SystemReplacemsggroupIcap[] | undefined>;
    public readonly mails!: pulumi.Output<outputs.SystemReplacemsggroupMail[] | undefined>;
    public readonly nacQuars!: pulumi.Output<outputs.SystemReplacemsggroupNacQuar[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly nntps!: pulumi.Output<outputs.SystemReplacemsggroupNntp[] | undefined>;
    public readonly spams!: pulumi.Output<outputs.SystemReplacemsggroupSpam[] | undefined>;
    public readonly sslvpns!: pulumi.Output<outputs.SystemReplacemsggroupSslvpn[] | undefined>;
    public readonly trafficQuotas!: pulumi.Output<outputs.SystemReplacemsggroupTrafficQuota[] | undefined>;
    public readonly utms!: pulumi.Output<outputs.SystemReplacemsggroupUtm[] | undefined>;
    public readonly vdomparam!: pulumi.Output<string>;
    public readonly webproxies!: pulumi.Output<outputs.SystemReplacemsggroupWebproxy[] | undefined>;

    /**
     * Create a SystemReplacemsggroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemReplacemsggroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemReplacemsggroupArgs | SystemReplacemsggroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemReplacemsggroupState | undefined;
            resourceInputs["admins"] = state ? state.admins : undefined;
            resourceInputs["alertmails"] = state ? state.alertmails : undefined;
            resourceInputs["auths"] = state ? state.auths : undefined;
            resourceInputs["automations"] = state ? state.automations : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["customMessages"] = state ? state.customMessages : undefined;
            resourceInputs["deviceDetectionPortals"] = state ? state.deviceDetectionPortals : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["ecs"] = state ? state.ecs : undefined;
            resourceInputs["fortiguardWfs"] = state ? state.fortiguardWfs : undefined;
            resourceInputs["ftps"] = state ? state.ftps : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["groupType"] = state ? state.groupType : undefined;
            resourceInputs["https"] = state ? state.https : undefined;
            resourceInputs["icaps"] = state ? state.icaps : undefined;
            resourceInputs["mails"] = state ? state.mails : undefined;
            resourceInputs["nacQuars"] = state ? state.nacQuars : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nntps"] = state ? state.nntps : undefined;
            resourceInputs["spams"] = state ? state.spams : undefined;
            resourceInputs["sslvpns"] = state ? state.sslvpns : undefined;
            resourceInputs["trafficQuotas"] = state ? state.trafficQuotas : undefined;
            resourceInputs["utms"] = state ? state.utms : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["webproxies"] = state ? state.webproxies : undefined;
        } else {
            const args = argsOrState as SystemReplacemsggroupArgs | undefined;
            if ((!args || args.groupType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupType'");
            }
            resourceInputs["admins"] = args ? args.admins : undefined;
            resourceInputs["alertmails"] = args ? args.alertmails : undefined;
            resourceInputs["auths"] = args ? args.auths : undefined;
            resourceInputs["automations"] = args ? args.automations : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["customMessages"] = args ? args.customMessages : undefined;
            resourceInputs["deviceDetectionPortals"] = args ? args.deviceDetectionPortals : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["ecs"] = args ? args.ecs : undefined;
            resourceInputs["fortiguardWfs"] = args ? args.fortiguardWfs : undefined;
            resourceInputs["ftps"] = args ? args.ftps : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["groupType"] = args ? args.groupType : undefined;
            resourceInputs["https"] = args ? args.https : undefined;
            resourceInputs["icaps"] = args ? args.icaps : undefined;
            resourceInputs["mails"] = args ? args.mails : undefined;
            resourceInputs["nacQuars"] = args ? args.nacQuars : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nntps"] = args ? args.nntps : undefined;
            resourceInputs["spams"] = args ? args.spams : undefined;
            resourceInputs["sslvpns"] = args ? args.sslvpns : undefined;
            resourceInputs["trafficQuotas"] = args ? args.trafficQuotas : undefined;
            resourceInputs["utms"] = args ? args.utms : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["webproxies"] = args ? args.webproxies : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemReplacemsggroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemReplacemsggroup resources.
 */
export interface SystemReplacemsggroupState {
    admins?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupAdmin>[]>;
    alertmails?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupAlertmail>[]>;
    auths?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupAuth>[]>;
    automations?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupAutomation>[]>;
    comment?: pulumi.Input<string>;
    customMessages?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupCustomMessage>[]>;
    deviceDetectionPortals?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupDeviceDetectionPortal>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    ecs?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupEc>[]>;
    fortiguardWfs?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupFortiguardWf>[]>;
    ftps?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupFtp>[]>;
    getAllTables?: pulumi.Input<string>;
    groupType?: pulumi.Input<string>;
    https?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupHttp>[]>;
    icaps?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupIcap>[]>;
    mails?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupMail>[]>;
    nacQuars?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupNacQuar>[]>;
    name?: pulumi.Input<string>;
    nntps?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupNntp>[]>;
    spams?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupSpam>[]>;
    sslvpns?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupSslvpn>[]>;
    trafficQuotas?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupTrafficQuota>[]>;
    utms?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupUtm>[]>;
    vdomparam?: pulumi.Input<string>;
    webproxies?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupWebproxy>[]>;
}

/**
 * The set of arguments for constructing a SystemReplacemsggroup resource.
 */
export interface SystemReplacemsggroupArgs {
    admins?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupAdmin>[]>;
    alertmails?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupAlertmail>[]>;
    auths?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupAuth>[]>;
    automations?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupAutomation>[]>;
    comment?: pulumi.Input<string>;
    customMessages?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupCustomMessage>[]>;
    deviceDetectionPortals?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupDeviceDetectionPortal>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    ecs?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupEc>[]>;
    fortiguardWfs?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupFortiguardWf>[]>;
    ftps?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupFtp>[]>;
    getAllTables?: pulumi.Input<string>;
    groupType: pulumi.Input<string>;
    https?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupHttp>[]>;
    icaps?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupIcap>[]>;
    mails?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupMail>[]>;
    nacQuars?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupNacQuar>[]>;
    name?: pulumi.Input<string>;
    nntps?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupNntp>[]>;
    spams?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupSpam>[]>;
    sslvpns?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupSslvpn>[]>;
    trafficQuotas?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupTrafficQuota>[]>;
    utms?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupUtm>[]>;
    vdomparam?: pulumi.Input<string>;
    webproxies?: pulumi.Input<pulumi.Input<inputs.SystemReplacemsggroupWebproxy>[]>;
}
