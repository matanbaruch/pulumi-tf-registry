// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RuleFmwp extends pulumi.CustomResource {
    /**
     * Get an existing RuleFmwp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RuleFmwpState, opts?: pulumi.CustomResourceOptions): RuleFmwp {
        return new RuleFmwp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/ruleFmwp:RuleFmwp';

    /**
     * Returns true if the given object is an instance of RuleFmwp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RuleFmwp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RuleFmwp.__pulumiType;
    }

    public readonly action!: pulumi.Output<string>;
    public readonly application!: pulumi.Output<string>;
    public readonly date!: pulumi.Output<number>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    public readonly group!: pulumi.Output<string>;
    public readonly location!: pulumi.Output<string>;
    public readonly log!: pulumi.Output<string>;
    public readonly logPacket!: pulumi.Output<string>;
    public readonly metadatas!: pulumi.Output<outputs.RuleFmwpMetadata[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly os!: pulumi.Output<string>;
    public readonly rev!: pulumi.Output<number>;
    public readonly ruleId!: pulumi.Output<number>;
    public readonly service!: pulumi.Output<string>;
    public readonly severity!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a RuleFmwp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RuleFmwpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RuleFmwpArgs | RuleFmwpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RuleFmwpState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["application"] = state ? state.application : undefined;
            resourceInputs["date"] = state ? state.date : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["group"] = state ? state.group : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["log"] = state ? state.log : undefined;
            resourceInputs["logPacket"] = state ? state.logPacket : undefined;
            resourceInputs["metadatas"] = state ? state.metadatas : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["os"] = state ? state.os : undefined;
            resourceInputs["rev"] = state ? state.rev : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["severity"] = state ? state.severity : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as RuleFmwpArgs | undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["application"] = args ? args.application : undefined;
            resourceInputs["date"] = args ? args.date : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["group"] = args ? args.group : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["log"] = args ? args.log : undefined;
            resourceInputs["logPacket"] = args ? args.logPacket : undefined;
            resourceInputs["metadatas"] = args ? args.metadatas : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["os"] = args ? args.os : undefined;
            resourceInputs["rev"] = args ? args.rev : undefined;
            resourceInputs["ruleId"] = args ? args.ruleId : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["severity"] = args ? args.severity : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RuleFmwp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RuleFmwp resources.
 */
export interface RuleFmwpState {
    action?: pulumi.Input<string>;
    application?: pulumi.Input<string>;
    date?: pulumi.Input<number>;
    dynamicSortSubtable?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    log?: pulumi.Input<string>;
    logPacket?: pulumi.Input<string>;
    metadatas?: pulumi.Input<pulumi.Input<inputs.RuleFmwpMetadata>[]>;
    name?: pulumi.Input<string>;
    os?: pulumi.Input<string>;
    rev?: pulumi.Input<number>;
    ruleId?: pulumi.Input<number>;
    service?: pulumi.Input<string>;
    severity?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RuleFmwp resource.
 */
export interface RuleFmwpArgs {
    action?: pulumi.Input<string>;
    application?: pulumi.Input<string>;
    date?: pulumi.Input<number>;
    dynamicSortSubtable?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    log?: pulumi.Input<string>;
    logPacket?: pulumi.Input<string>;
    metadatas?: pulumi.Input<pulumi.Input<inputs.RuleFmwpMetadata>[]>;
    name?: pulumi.Input<string>;
    os?: pulumi.Input<string>;
    rev?: pulumi.Input<number>;
    ruleId?: pulumi.Input<number>;
    service?: pulumi.Input<string>;
    severity?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
