// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FirewallProxyaddress extends pulumi.CustomResource {
    /**
     * Get an existing FirewallProxyaddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallProxyaddressState, opts?: pulumi.CustomResourceOptions): FirewallProxyaddress {
        return new FirewallProxyaddress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/firewallProxyaddress:FirewallProxyaddress';

    /**
     * Returns true if the given object is an instance of FirewallProxyaddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallProxyaddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallProxyaddress.__pulumiType;
    }

    public readonly applications!: pulumi.Output<outputs.FirewallProxyaddressApplication[] | undefined>;
    public readonly caseSensitivity!: pulumi.Output<string>;
    public readonly categories!: pulumi.Output<outputs.FirewallProxyaddressCategory[] | undefined>;
    public readonly color!: pulumi.Output<number>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    public readonly header!: pulumi.Output<string>;
    public readonly headerGroups!: pulumi.Output<outputs.FirewallProxyaddressHeaderGroup[] | undefined>;
    public readonly headerName!: pulumi.Output<string>;
    public readonly host!: pulumi.Output<string>;
    public readonly hostRegex!: pulumi.Output<string>;
    public readonly method!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly path!: pulumi.Output<string>;
    public readonly query!: pulumi.Output<string>;
    public readonly referrer!: pulumi.Output<string>;
    public readonly taggings!: pulumi.Output<outputs.FirewallProxyaddressTagging[] | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly ua!: pulumi.Output<string>;
    public readonly uaMaxVer!: pulumi.Output<string>;
    public readonly uaMinVer!: pulumi.Output<string>;
    public readonly uuid!: pulumi.Output<string>;
    public readonly vdomparam!: pulumi.Output<string>;
    public readonly visibility!: pulumi.Output<string>;

    /**
     * Create a FirewallProxyaddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirewallProxyaddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallProxyaddressArgs | FirewallProxyaddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallProxyaddressState | undefined;
            resourceInputs["applications"] = state ? state.applications : undefined;
            resourceInputs["caseSensitivity"] = state ? state.caseSensitivity : undefined;
            resourceInputs["categories"] = state ? state.categories : undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["header"] = state ? state.header : undefined;
            resourceInputs["headerGroups"] = state ? state.headerGroups : undefined;
            resourceInputs["headerName"] = state ? state.headerName : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["hostRegex"] = state ? state.hostRegex : undefined;
            resourceInputs["method"] = state ? state.method : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["query"] = state ? state.query : undefined;
            resourceInputs["referrer"] = state ? state.referrer : undefined;
            resourceInputs["taggings"] = state ? state.taggings : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["ua"] = state ? state.ua : undefined;
            resourceInputs["uaMaxVer"] = state ? state.uaMaxVer : undefined;
            resourceInputs["uaMinVer"] = state ? state.uaMinVer : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
            resourceInputs["visibility"] = state ? state.visibility : undefined;
        } else {
            const args = argsOrState as FirewallProxyaddressArgs | undefined;
            resourceInputs["applications"] = args ? args.applications : undefined;
            resourceInputs["caseSensitivity"] = args ? args.caseSensitivity : undefined;
            resourceInputs["categories"] = args ? args.categories : undefined;
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["header"] = args ? args.header : undefined;
            resourceInputs["headerGroups"] = args ? args.headerGroups : undefined;
            resourceInputs["headerName"] = args ? args.headerName : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["hostRegex"] = args ? args.hostRegex : undefined;
            resourceInputs["method"] = args ? args.method : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["query"] = args ? args.query : undefined;
            resourceInputs["referrer"] = args ? args.referrer : undefined;
            resourceInputs["taggings"] = args ? args.taggings : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["ua"] = args ? args.ua : undefined;
            resourceInputs["uaMaxVer"] = args ? args.uaMaxVer : undefined;
            resourceInputs["uaMinVer"] = args ? args.uaMinVer : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
            resourceInputs["visibility"] = args ? args.visibility : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallProxyaddress.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirewallProxyaddress resources.
 */
export interface FirewallProxyaddressState {
    applications?: pulumi.Input<pulumi.Input<inputs.FirewallProxyaddressApplication>[]>;
    caseSensitivity?: pulumi.Input<string>;
    categories?: pulumi.Input<pulumi.Input<inputs.FirewallProxyaddressCategory>[]>;
    color?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    header?: pulumi.Input<string>;
    headerGroups?: pulumi.Input<pulumi.Input<inputs.FirewallProxyaddressHeaderGroup>[]>;
    headerName?: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    hostRegex?: pulumi.Input<string>;
    method?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
    referrer?: pulumi.Input<string>;
    taggings?: pulumi.Input<pulumi.Input<inputs.FirewallProxyaddressTagging>[]>;
    type?: pulumi.Input<string>;
    ua?: pulumi.Input<string>;
    uaMaxVer?: pulumi.Input<string>;
    uaMinVer?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    visibility?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallProxyaddress resource.
 */
export interface FirewallProxyaddressArgs {
    applications?: pulumi.Input<pulumi.Input<inputs.FirewallProxyaddressApplication>[]>;
    caseSensitivity?: pulumi.Input<string>;
    categories?: pulumi.Input<pulumi.Input<inputs.FirewallProxyaddressCategory>[]>;
    color?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    getAllTables?: pulumi.Input<string>;
    header?: pulumi.Input<string>;
    headerGroups?: pulumi.Input<pulumi.Input<inputs.FirewallProxyaddressHeaderGroup>[]>;
    headerName?: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    hostRegex?: pulumi.Input<string>;
    method?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
    referrer?: pulumi.Input<string>;
    taggings?: pulumi.Input<pulumi.Input<inputs.FirewallProxyaddressTagging>[]>;
    type?: pulumi.Input<string>;
    ua?: pulumi.Input<string>;
    uaMaxVer?: pulumi.Input<string>;
    uaMinVer?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
    visibility?: pulumi.Input<string>;
}
