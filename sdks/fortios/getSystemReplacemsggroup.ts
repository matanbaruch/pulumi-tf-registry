// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSystemReplacemsggroup(args: GetSystemReplacemsggroupArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemReplacemsggroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getSystemReplacemsggroup:getSystemReplacemsggroup", {
        "id": args.id,
        "name": args.name,
        "vdomparam": args.vdomparam,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemReplacemsggroup.
 */
export interface GetSystemReplacemsggroupArgs {
    id?: string;
    name: string;
    vdomparam?: string;
}

/**
 * A collection of values returned by getSystemReplacemsggroup.
 */
export interface GetSystemReplacemsggroupResult {
    readonly admins: outputs.GetSystemReplacemsggroupAdmin[];
    readonly alertmails: outputs.GetSystemReplacemsggroupAlertmail[];
    readonly auths: outputs.GetSystemReplacemsggroupAuth[];
    readonly automations: outputs.GetSystemReplacemsggroupAutomation[];
    readonly comment: string;
    readonly customMessages: outputs.GetSystemReplacemsggroupCustomMessage[];
    readonly deviceDetectionPortals: outputs.GetSystemReplacemsggroupDeviceDetectionPortal[];
    readonly ecs: outputs.GetSystemReplacemsggroupEc[];
    readonly fortiguardWfs: outputs.GetSystemReplacemsggroupFortiguardWf[];
    readonly ftps: outputs.GetSystemReplacemsggroupFtp[];
    readonly groupType: string;
    readonly https: outputs.GetSystemReplacemsggroupHttp[];
    readonly icaps: outputs.GetSystemReplacemsggroupIcap[];
    readonly id: string;
    readonly mails: outputs.GetSystemReplacemsggroupMail[];
    readonly nacQuars: outputs.GetSystemReplacemsggroupNacQuar[];
    readonly name: string;
    readonly nntps: outputs.GetSystemReplacemsggroupNntp[];
    readonly spams: outputs.GetSystemReplacemsggroupSpam[];
    readonly sslvpns: outputs.GetSystemReplacemsggroupSslvpn[];
    readonly trafficQuotas: outputs.GetSystemReplacemsggroupTrafficQuota[];
    readonly utms: outputs.GetSystemReplacemsggroupUtm[];
    readonly vdomparam?: string;
    readonly webproxies: outputs.GetSystemReplacemsggroupWebproxy[];
}
export function getSystemReplacemsggroupOutput(args: GetSystemReplacemsggroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemReplacemsggroupResult> {
    return pulumi.output(args).apply((a: any) => getSystemReplacemsggroup(a, opts))
}

/**
 * A collection of arguments for invoking getSystemReplacemsggroup.
 */
export interface GetSystemReplacemsggroupOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    vdomparam?: pulumi.Input<string>;
}
