// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AntivirusProfile extends pulumi.CustomResource {
    /**
     * Get an existing AntivirusProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AntivirusProfileState, opts?: pulumi.CustomResourceOptions): AntivirusProfile {
        return new AntivirusProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortios:index/antivirusProfile:AntivirusProfile';

    /**
     * Returns true if the given object is an instance of AntivirusProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AntivirusProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AntivirusProfile.__pulumiType;
    }

    public readonly analyticsAcceptFiletype!: pulumi.Output<number>;
    public readonly analyticsBlFiletype!: pulumi.Output<number>;
    public readonly analyticsDb!: pulumi.Output<string>;
    public readonly analyticsIgnoreFiletype!: pulumi.Output<number>;
    public readonly analyticsMaxUpload!: pulumi.Output<number>;
    public readonly analyticsWlFiletype!: pulumi.Output<number>;
    public readonly avBlockLog!: pulumi.Output<string>;
    public readonly avVirusLog!: pulumi.Output<string>;
    public readonly cifs!: pulumi.Output<outputs.AntivirusProfileCifs | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly contentDisarm!: pulumi.Output<outputs.AntivirusProfileContentDisarm | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly emsThreatFeed!: pulumi.Output<string>;
    public readonly extendedLog!: pulumi.Output<string>;
    public readonly externalBlocklistEnableAll!: pulumi.Output<string>;
    public readonly externalBlocklists!: pulumi.Output<outputs.AntivirusProfileExternalBlocklist[] | undefined>;
    public readonly featureSet!: pulumi.Output<string>;
    public readonly fortiaiErrorAction!: pulumi.Output<string>;
    public readonly fortiaiTimeoutAction!: pulumi.Output<string>;
    public readonly fortindrErrorAction!: pulumi.Output<string>;
    public readonly fortindrTimeoutAction!: pulumi.Output<string>;
    public readonly fortisandboxErrorAction!: pulumi.Output<string>;
    public readonly fortisandboxMaxUpload!: pulumi.Output<number>;
    public readonly fortisandboxMode!: pulumi.Output<string>;
    public readonly fortisandboxTimeoutAction!: pulumi.Output<string>;
    public readonly ftgdAnalytics!: pulumi.Output<string>;
    public readonly ftp!: pulumi.Output<outputs.AntivirusProfileFtp | undefined>;
    public readonly getAllTables!: pulumi.Output<string | undefined>;
    public readonly http!: pulumi.Output<outputs.AntivirusProfileHttp | undefined>;
    public readonly imap!: pulumi.Output<outputs.AntivirusProfileImap | undefined>;
    public readonly inspectionMode!: pulumi.Output<string>;
    public readonly mapi!: pulumi.Output<outputs.AntivirusProfileMapi | undefined>;
    public readonly mobileMalwareDb!: pulumi.Output<string>;
    public readonly nacQuar!: pulumi.Output<outputs.AntivirusProfileNacQuar | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly nntp!: pulumi.Output<outputs.AntivirusProfileNntp | undefined>;
    public readonly outbreakPrevention!: pulumi.Output<outputs.AntivirusProfileOutbreakPrevention | undefined>;
    public readonly outbreakPreventionArchiveScan!: pulumi.Output<string>;
    public readonly pop3!: pulumi.Output<outputs.AntivirusProfilePop3 | undefined>;
    public readonly replacemsgGroup!: pulumi.Output<string>;
    public readonly scanMode!: pulumi.Output<string>;
    public readonly smb!: pulumi.Output<outputs.AntivirusProfileSmb | undefined>;
    public readonly smtp!: pulumi.Output<outputs.AntivirusProfileSmtp | undefined>;
    public readonly ssh!: pulumi.Output<outputs.AntivirusProfileSsh | undefined>;
    public readonly vdomparam!: pulumi.Output<string>;

    /**
     * Create a AntivirusProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AntivirusProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AntivirusProfileArgs | AntivirusProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AntivirusProfileState | undefined;
            resourceInputs["analyticsAcceptFiletype"] = state ? state.analyticsAcceptFiletype : undefined;
            resourceInputs["analyticsBlFiletype"] = state ? state.analyticsBlFiletype : undefined;
            resourceInputs["analyticsDb"] = state ? state.analyticsDb : undefined;
            resourceInputs["analyticsIgnoreFiletype"] = state ? state.analyticsIgnoreFiletype : undefined;
            resourceInputs["analyticsMaxUpload"] = state ? state.analyticsMaxUpload : undefined;
            resourceInputs["analyticsWlFiletype"] = state ? state.analyticsWlFiletype : undefined;
            resourceInputs["avBlockLog"] = state ? state.avBlockLog : undefined;
            resourceInputs["avVirusLog"] = state ? state.avVirusLog : undefined;
            resourceInputs["cifs"] = state ? state.cifs : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["contentDisarm"] = state ? state.contentDisarm : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["emsThreatFeed"] = state ? state.emsThreatFeed : undefined;
            resourceInputs["extendedLog"] = state ? state.extendedLog : undefined;
            resourceInputs["externalBlocklistEnableAll"] = state ? state.externalBlocklistEnableAll : undefined;
            resourceInputs["externalBlocklists"] = state ? state.externalBlocklists : undefined;
            resourceInputs["featureSet"] = state ? state.featureSet : undefined;
            resourceInputs["fortiaiErrorAction"] = state ? state.fortiaiErrorAction : undefined;
            resourceInputs["fortiaiTimeoutAction"] = state ? state.fortiaiTimeoutAction : undefined;
            resourceInputs["fortindrErrorAction"] = state ? state.fortindrErrorAction : undefined;
            resourceInputs["fortindrTimeoutAction"] = state ? state.fortindrTimeoutAction : undefined;
            resourceInputs["fortisandboxErrorAction"] = state ? state.fortisandboxErrorAction : undefined;
            resourceInputs["fortisandboxMaxUpload"] = state ? state.fortisandboxMaxUpload : undefined;
            resourceInputs["fortisandboxMode"] = state ? state.fortisandboxMode : undefined;
            resourceInputs["fortisandboxTimeoutAction"] = state ? state.fortisandboxTimeoutAction : undefined;
            resourceInputs["ftgdAnalytics"] = state ? state.ftgdAnalytics : undefined;
            resourceInputs["ftp"] = state ? state.ftp : undefined;
            resourceInputs["getAllTables"] = state ? state.getAllTables : undefined;
            resourceInputs["http"] = state ? state.http : undefined;
            resourceInputs["imap"] = state ? state.imap : undefined;
            resourceInputs["inspectionMode"] = state ? state.inspectionMode : undefined;
            resourceInputs["mapi"] = state ? state.mapi : undefined;
            resourceInputs["mobileMalwareDb"] = state ? state.mobileMalwareDb : undefined;
            resourceInputs["nacQuar"] = state ? state.nacQuar : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nntp"] = state ? state.nntp : undefined;
            resourceInputs["outbreakPrevention"] = state ? state.outbreakPrevention : undefined;
            resourceInputs["outbreakPreventionArchiveScan"] = state ? state.outbreakPreventionArchiveScan : undefined;
            resourceInputs["pop3"] = state ? state.pop3 : undefined;
            resourceInputs["replacemsgGroup"] = state ? state.replacemsgGroup : undefined;
            resourceInputs["scanMode"] = state ? state.scanMode : undefined;
            resourceInputs["smb"] = state ? state.smb : undefined;
            resourceInputs["smtp"] = state ? state.smtp : undefined;
            resourceInputs["ssh"] = state ? state.ssh : undefined;
            resourceInputs["vdomparam"] = state ? state.vdomparam : undefined;
        } else {
            const args = argsOrState as AntivirusProfileArgs | undefined;
            resourceInputs["analyticsAcceptFiletype"] = args ? args.analyticsAcceptFiletype : undefined;
            resourceInputs["analyticsBlFiletype"] = args ? args.analyticsBlFiletype : undefined;
            resourceInputs["analyticsDb"] = args ? args.analyticsDb : undefined;
            resourceInputs["analyticsIgnoreFiletype"] = args ? args.analyticsIgnoreFiletype : undefined;
            resourceInputs["analyticsMaxUpload"] = args ? args.analyticsMaxUpload : undefined;
            resourceInputs["analyticsWlFiletype"] = args ? args.analyticsWlFiletype : undefined;
            resourceInputs["avBlockLog"] = args ? args.avBlockLog : undefined;
            resourceInputs["avVirusLog"] = args ? args.avVirusLog : undefined;
            resourceInputs["cifs"] = args ? args.cifs : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["contentDisarm"] = args ? args.contentDisarm : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["emsThreatFeed"] = args ? args.emsThreatFeed : undefined;
            resourceInputs["extendedLog"] = args ? args.extendedLog : undefined;
            resourceInputs["externalBlocklistEnableAll"] = args ? args.externalBlocklistEnableAll : undefined;
            resourceInputs["externalBlocklists"] = args ? args.externalBlocklists : undefined;
            resourceInputs["featureSet"] = args ? args.featureSet : undefined;
            resourceInputs["fortiaiErrorAction"] = args ? args.fortiaiErrorAction : undefined;
            resourceInputs["fortiaiTimeoutAction"] = args ? args.fortiaiTimeoutAction : undefined;
            resourceInputs["fortindrErrorAction"] = args ? args.fortindrErrorAction : undefined;
            resourceInputs["fortindrTimeoutAction"] = args ? args.fortindrTimeoutAction : undefined;
            resourceInputs["fortisandboxErrorAction"] = args ? args.fortisandboxErrorAction : undefined;
            resourceInputs["fortisandboxMaxUpload"] = args ? args.fortisandboxMaxUpload : undefined;
            resourceInputs["fortisandboxMode"] = args ? args.fortisandboxMode : undefined;
            resourceInputs["fortisandboxTimeoutAction"] = args ? args.fortisandboxTimeoutAction : undefined;
            resourceInputs["ftgdAnalytics"] = args ? args.ftgdAnalytics : undefined;
            resourceInputs["ftp"] = args ? args.ftp : undefined;
            resourceInputs["getAllTables"] = args ? args.getAllTables : undefined;
            resourceInputs["http"] = args ? args.http : undefined;
            resourceInputs["imap"] = args ? args.imap : undefined;
            resourceInputs["inspectionMode"] = args ? args.inspectionMode : undefined;
            resourceInputs["mapi"] = args ? args.mapi : undefined;
            resourceInputs["mobileMalwareDb"] = args ? args.mobileMalwareDb : undefined;
            resourceInputs["nacQuar"] = args ? args.nacQuar : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nntp"] = args ? args.nntp : undefined;
            resourceInputs["outbreakPrevention"] = args ? args.outbreakPrevention : undefined;
            resourceInputs["outbreakPreventionArchiveScan"] = args ? args.outbreakPreventionArchiveScan : undefined;
            resourceInputs["pop3"] = args ? args.pop3 : undefined;
            resourceInputs["replacemsgGroup"] = args ? args.replacemsgGroup : undefined;
            resourceInputs["scanMode"] = args ? args.scanMode : undefined;
            resourceInputs["smb"] = args ? args.smb : undefined;
            resourceInputs["smtp"] = args ? args.smtp : undefined;
            resourceInputs["ssh"] = args ? args.ssh : undefined;
            resourceInputs["vdomparam"] = args ? args.vdomparam : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AntivirusProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AntivirusProfile resources.
 */
export interface AntivirusProfileState {
    analyticsAcceptFiletype?: pulumi.Input<number>;
    analyticsBlFiletype?: pulumi.Input<number>;
    analyticsDb?: pulumi.Input<string>;
    analyticsIgnoreFiletype?: pulumi.Input<number>;
    analyticsMaxUpload?: pulumi.Input<number>;
    analyticsWlFiletype?: pulumi.Input<number>;
    avBlockLog?: pulumi.Input<string>;
    avVirusLog?: pulumi.Input<string>;
    cifs?: pulumi.Input<inputs.AntivirusProfileCifs>;
    comment?: pulumi.Input<string>;
    contentDisarm?: pulumi.Input<inputs.AntivirusProfileContentDisarm>;
    dynamicSortSubtable?: pulumi.Input<string>;
    emsThreatFeed?: pulumi.Input<string>;
    extendedLog?: pulumi.Input<string>;
    externalBlocklistEnableAll?: pulumi.Input<string>;
    externalBlocklists?: pulumi.Input<pulumi.Input<inputs.AntivirusProfileExternalBlocklist>[]>;
    featureSet?: pulumi.Input<string>;
    fortiaiErrorAction?: pulumi.Input<string>;
    fortiaiTimeoutAction?: pulumi.Input<string>;
    fortindrErrorAction?: pulumi.Input<string>;
    fortindrTimeoutAction?: pulumi.Input<string>;
    fortisandboxErrorAction?: pulumi.Input<string>;
    fortisandboxMaxUpload?: pulumi.Input<number>;
    fortisandboxMode?: pulumi.Input<string>;
    fortisandboxTimeoutAction?: pulumi.Input<string>;
    ftgdAnalytics?: pulumi.Input<string>;
    ftp?: pulumi.Input<inputs.AntivirusProfileFtp>;
    getAllTables?: pulumi.Input<string>;
    http?: pulumi.Input<inputs.AntivirusProfileHttp>;
    imap?: pulumi.Input<inputs.AntivirusProfileImap>;
    inspectionMode?: pulumi.Input<string>;
    mapi?: pulumi.Input<inputs.AntivirusProfileMapi>;
    mobileMalwareDb?: pulumi.Input<string>;
    nacQuar?: pulumi.Input<inputs.AntivirusProfileNacQuar>;
    name?: pulumi.Input<string>;
    nntp?: pulumi.Input<inputs.AntivirusProfileNntp>;
    outbreakPrevention?: pulumi.Input<inputs.AntivirusProfileOutbreakPrevention>;
    outbreakPreventionArchiveScan?: pulumi.Input<string>;
    pop3?: pulumi.Input<inputs.AntivirusProfilePop3>;
    replacemsgGroup?: pulumi.Input<string>;
    scanMode?: pulumi.Input<string>;
    smb?: pulumi.Input<inputs.AntivirusProfileSmb>;
    smtp?: pulumi.Input<inputs.AntivirusProfileSmtp>;
    ssh?: pulumi.Input<inputs.AntivirusProfileSsh>;
    vdomparam?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AntivirusProfile resource.
 */
export interface AntivirusProfileArgs {
    analyticsAcceptFiletype?: pulumi.Input<number>;
    analyticsBlFiletype?: pulumi.Input<number>;
    analyticsDb?: pulumi.Input<string>;
    analyticsIgnoreFiletype?: pulumi.Input<number>;
    analyticsMaxUpload?: pulumi.Input<number>;
    analyticsWlFiletype?: pulumi.Input<number>;
    avBlockLog?: pulumi.Input<string>;
    avVirusLog?: pulumi.Input<string>;
    cifs?: pulumi.Input<inputs.AntivirusProfileCifs>;
    comment?: pulumi.Input<string>;
    contentDisarm?: pulumi.Input<inputs.AntivirusProfileContentDisarm>;
    dynamicSortSubtable?: pulumi.Input<string>;
    emsThreatFeed?: pulumi.Input<string>;
    extendedLog?: pulumi.Input<string>;
    externalBlocklistEnableAll?: pulumi.Input<string>;
    externalBlocklists?: pulumi.Input<pulumi.Input<inputs.AntivirusProfileExternalBlocklist>[]>;
    featureSet?: pulumi.Input<string>;
    fortiaiErrorAction?: pulumi.Input<string>;
    fortiaiTimeoutAction?: pulumi.Input<string>;
    fortindrErrorAction?: pulumi.Input<string>;
    fortindrTimeoutAction?: pulumi.Input<string>;
    fortisandboxErrorAction?: pulumi.Input<string>;
    fortisandboxMaxUpload?: pulumi.Input<number>;
    fortisandboxMode?: pulumi.Input<string>;
    fortisandboxTimeoutAction?: pulumi.Input<string>;
    ftgdAnalytics?: pulumi.Input<string>;
    ftp?: pulumi.Input<inputs.AntivirusProfileFtp>;
    getAllTables?: pulumi.Input<string>;
    http?: pulumi.Input<inputs.AntivirusProfileHttp>;
    imap?: pulumi.Input<inputs.AntivirusProfileImap>;
    inspectionMode?: pulumi.Input<string>;
    mapi?: pulumi.Input<inputs.AntivirusProfileMapi>;
    mobileMalwareDb?: pulumi.Input<string>;
    nacQuar?: pulumi.Input<inputs.AntivirusProfileNacQuar>;
    name?: pulumi.Input<string>;
    nntp?: pulumi.Input<inputs.AntivirusProfileNntp>;
    outbreakPrevention?: pulumi.Input<inputs.AntivirusProfileOutbreakPrevention>;
    outbreakPreventionArchiveScan?: pulumi.Input<string>;
    pop3?: pulumi.Input<inputs.AntivirusProfilePop3>;
    replacemsgGroup?: pulumi.Input<string>;
    scanMode?: pulumi.Input<string>;
    smb?: pulumi.Input<inputs.AntivirusProfileSmb>;
    smtp?: pulumi.Input<inputs.AntivirusProfileSmtp>;
    ssh?: pulumi.Input<inputs.AntivirusProfileSsh>;
    vdomparam?: pulumi.Input<string>;
}
