// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpmaskCidr(args?: GetIpmaskCidrArgs, opts?: pulumi.InvokeOptions): Promise<GetIpmaskCidrResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortios:index/getIpmaskCidr:getIpmaskCidr", {
        "id": args.id,
        "ipmask": args.ipmask,
        "ipmasklists": args.ipmasklists,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpmaskCidr.
 */
export interface GetIpmaskCidrArgs {
    id?: string;
    ipmask?: string;
    ipmasklists?: string[];
}

/**
 * A collection of values returned by getIpmaskCidr.
 */
export interface GetIpmaskCidrResult {
    readonly cidr: string;
    readonly cidrlists: string[];
    readonly id: string;
    readonly ipmask?: string;
    readonly ipmasklists?: string[];
}
export function getIpmaskCidrOutput(args?: GetIpmaskCidrOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpmaskCidrResult> {
    return pulumi.output(args).apply((a: any) => getIpmaskCidr(a, opts))
}

/**
 * A collection of arguments for invoking getIpmaskCidr.
 */
export interface GetIpmaskCidrOutputArgs {
    id?: pulumi.Input<string>;
    ipmask?: pulumi.Input<string>;
    ipmasklists?: pulumi.Input<pulumi.Input<string>[]>;
}
