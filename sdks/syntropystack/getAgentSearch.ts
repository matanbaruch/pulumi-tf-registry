// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAgentSearch(args?: GetAgentSearchArgs, opts?: pulumi.InvokeOptions): Promise<GetAgentSearchResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("syntropystack:index/getAgentSearch:getAgentSearch", {
        "filter": args.filter,
        "search": args.search,
        "skip": args.skip,
        "take": args.take,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAgentSearch.
 */
export interface GetAgentSearchArgs {
    filter?: inputs.GetAgentSearchFilter;
    search?: string;
    skip?: number;
    take?: number;
}

/**
 * A collection of values returned by getAgentSearch.
 */
export interface GetAgentSearchResult {
    readonly agents: outputs.GetAgentSearchAgent[];
    readonly filter?: outputs.GetAgentSearchFilter;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly search: string;
    readonly skip?: number;
    readonly take?: number;
}
export function getAgentSearchOutput(args?: GetAgentSearchOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAgentSearchResult> {
    return pulumi.output(args).apply((a: any) => getAgentSearch(a, opts))
}

/**
 * A collection of arguments for invoking getAgentSearch.
 */
export interface GetAgentSearchOutputArgs {
    filter?: pulumi.Input<inputs.GetAgentSearchFilterArgs>;
    search?: pulumi.Input<string>;
    skip?: pulumi.Input<number>;
    take?: pulumi.Input<number>;
}
