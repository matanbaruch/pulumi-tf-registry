// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAgent(args: GetAgentArgs, opts?: pulumi.InvokeOptions): Promise<GetAgentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("syntropystack:index/getAgent:getAgent", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAgent.
 */
export interface GetAgentArgs {
    name: string;
}

/**
 * A collection of values returned by getAgent.
 */
export interface GetAgentResult {
    readonly deviceId: string;
    readonly id: number;
    readonly isOnline: boolean;
    readonly isVirtual: boolean;
    readonly locationCity: string;
    readonly locationCountry: string;
    readonly modifiedAt: string;
    readonly name: string;
    readonly provider: outputs.GetAgentProvider;
    readonly publicIpv4: string;
    readonly status: string;
    readonly tags: outputs.GetAgentTag[];
    readonly type: string;
    readonly version: string;
}
export function getAgentOutput(args: GetAgentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAgentResult> {
    return pulumi.output(args).apply((a: any) => getAgent(a, opts))
}

/**
 * A collection of arguments for invoking getAgent.
 */
export interface GetAgentOutputArgs {
    name: pulumi.Input<string>;
}
