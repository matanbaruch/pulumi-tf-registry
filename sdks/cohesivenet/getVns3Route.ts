// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVns3Route(args?: GetVns3RouteArgs, opts?: pulumi.InvokeOptions): Promise<GetVns3RouteResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cohesivenet:index/getVns3Route:getVns3Route", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVns3Route.
 */
export interface GetVns3RouteArgs {
    id?: string;
}

/**
 * A collection of values returned by getVns3Route.
 */
export interface GetVns3RouteResult {
    readonly id: string;
    readonly responses: outputs.GetVns3RouteResponse[];
}
export function getVns3RouteOutput(args?: GetVns3RouteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVns3RouteResult> {
    return pulumi.output(args).apply((a: any) => getVns3Route(a, opts))
}

/**
 * A collection of arguments for invoking getVns3Route.
 */
export interface GetVns3RouteOutputArgs {
    id?: pulumi.Input<string>;
}
