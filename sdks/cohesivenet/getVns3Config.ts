// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVns3Config(args?: GetVns3ConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetVns3ConfigResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cohesivenet:index/getVns3Config:getVns3Config", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVns3Config.
 */
export interface GetVns3ConfigArgs {
    id?: string;
}

/**
 * A collection of values returned by getVns3Config.
 */
export interface GetVns3ConfigResult {
    readonly id: string;
    readonly responses: outputs.GetVns3ConfigResponse[];
}
export function getVns3ConfigOutput(args?: GetVns3ConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVns3ConfigResult> {
    return pulumi.output(args).apply((a: any) => getVns3Config(a, opts))
}

/**
 * A collection of arguments for invoking getVns3Config.
 */
export interface GetVns3ConfigOutputArgs {
    id?: pulumi.Input<string>;
}
