// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class UpdateResource extends pulumi.CustomResource {
    /**
     * Get an existing UpdateResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UpdateResourceState, opts?: pulumi.CustomResourceOptions): UpdateResource {
        return new UpdateResource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azapi:index/updateResource:UpdateResource';

    /**
     * Returns true if the given object is an instance of UpdateResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UpdateResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UpdateResource.__pulumiType;
    }

    public readonly body!: pulumi.Output<any>;
    /**
     * @deprecated Deprecated
     */
    public readonly ignoreBodyChanges!: pulumi.Output<string[] | undefined>;
    public readonly ignoreCasing!: pulumi.Output<boolean>;
    public readonly ignoreMissingProperty!: pulumi.Output<boolean>;
    public readonly locks!: pulumi.Output<string[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly output!: pulumi.Output<any>;
    public readonly parentId!: pulumi.Output<string>;
    public readonly resourceId!: pulumi.Output<string>;
    public readonly responseExportValues!: pulumi.Output<string[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.UpdateResourceTimeouts | undefined>;
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a UpdateResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UpdateResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UpdateResourceArgs | UpdateResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UpdateResourceState | undefined;
            resourceInputs["body"] = state ? state.body : undefined;
            resourceInputs["ignoreBodyChanges"] = state ? state.ignoreBodyChanges : undefined;
            resourceInputs["ignoreCasing"] = state ? state.ignoreCasing : undefined;
            resourceInputs["ignoreMissingProperty"] = state ? state.ignoreMissingProperty : undefined;
            resourceInputs["locks"] = state ? state.locks : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["output"] = state ? state.output : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["responseExportValues"] = state ? state.responseExportValues : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as UpdateResourceArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["body"] = args ? args.body : undefined;
            resourceInputs["ignoreBodyChanges"] = args ? args.ignoreBodyChanges : undefined;
            resourceInputs["ignoreCasing"] = args ? args.ignoreCasing : undefined;
            resourceInputs["ignoreMissingProperty"] = args ? args.ignoreMissingProperty : undefined;
            resourceInputs["locks"] = args ? args.locks : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["responseExportValues"] = args ? args.responseExportValues : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["output"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UpdateResource.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering UpdateResource resources.
 */
export interface UpdateResourceState {
    body?: any;
    /**
     * @deprecated Deprecated
     */
    ignoreBodyChanges?: pulumi.Input<pulumi.Input<string>[]>;
    ignoreCasing?: pulumi.Input<boolean>;
    ignoreMissingProperty?: pulumi.Input<boolean>;
    locks?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    output?: any;
    parentId?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    responseExportValues?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.UpdateResourceTimeouts>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UpdateResource resource.
 */
export interface UpdateResourceArgs {
    body?: any;
    /**
     * @deprecated Deprecated
     */
    ignoreBodyChanges?: pulumi.Input<pulumi.Input<string>[]>;
    ignoreCasing?: pulumi.Input<boolean>;
    ignoreMissingProperty?: pulumi.Input<boolean>;
    locks?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    parentId?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    responseExportValues?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.UpdateResourceTimeouts>;
    type: pulumi.Input<string>;
}
