// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMember(args: GetMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetMemberResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("buddy:index/getMember:getMember", {
        "domain": args.domain,
        "email": args.email,
        "memberId": args.memberId,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMember.
 */
export interface GetMemberArgs {
    domain: string;
    email?: string;
    memberId?: number;
    name?: string;
}

/**
 * A collection of values returned by getMember.
 */
export interface GetMemberResult {
    readonly admin: boolean;
    readonly avatarUrl: string;
    readonly domain: string;
    readonly email: string;
    readonly htmlUrl: string;
    readonly id: string;
    readonly memberId: number;
    readonly name: string;
    readonly workspaceOwner: boolean;
}
export function getMemberOutput(args: GetMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMemberResult> {
    return pulumi.output(args).apply((a: any) => getMember(a, opts))
}

/**
 * A collection of arguments for invoking getMember.
 */
export interface GetMemberOutputArgs {
    domain: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    memberId?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
