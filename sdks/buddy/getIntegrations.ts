// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIntegrations(args: GetIntegrationsArgs, opts?: pulumi.InvokeOptions): Promise<GetIntegrationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("buddy:index/getIntegrations:getIntegrations", {
        "domain": args.domain,
        "nameRegex": args.nameRegex,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIntegrations.
 */
export interface GetIntegrationsArgs {
    domain: string;
    nameRegex?: string;
    type?: string;
}

/**
 * A collection of values returned by getIntegrations.
 */
export interface GetIntegrationsResult {
    readonly domain: string;
    readonly id: string;
    readonly integrations: outputs.GetIntegrationsIntegration[];
    readonly nameRegex?: string;
    readonly type?: string;
}
export function getIntegrationsOutput(args: GetIntegrationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIntegrationsResult> {
    return pulumi.output(args).apply((a: any) => getIntegrations(a, opts))
}

/**
 * A collection of arguments for invoking getIntegrations.
 */
export interface GetIntegrationsOutputArgs {
    domain: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
