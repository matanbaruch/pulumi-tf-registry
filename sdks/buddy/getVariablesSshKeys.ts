// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVariablesSshKeys(args: GetVariablesSshKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetVariablesSshKeysResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("buddy:index/getVariablesSshKeys:getVariablesSshKeys", {
        "actionId": args.actionId,
        "domain": args.domain,
        "keyRegex": args.keyRegex,
        "pipelineId": args.pipelineId,
        "projectName": args.projectName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVariablesSshKeys.
 */
export interface GetVariablesSshKeysArgs {
    actionId?: number;
    domain: string;
    keyRegex?: string;
    pipelineId?: number;
    projectName?: string;
}

/**
 * A collection of values returned by getVariablesSshKeys.
 */
export interface GetVariablesSshKeysResult {
    readonly actionId?: number;
    readonly domain: string;
    readonly id: string;
    readonly keyRegex?: string;
    readonly pipelineId?: number;
    readonly projectName?: string;
    readonly variables: outputs.GetVariablesSshKeysVariable[];
}
export function getVariablesSshKeysOutput(args: GetVariablesSshKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVariablesSshKeysResult> {
    return pulumi.output(args).apply((a: any) => getVariablesSshKeys(a, opts))
}

/**
 * A collection of arguments for invoking getVariablesSshKeys.
 */
export interface GetVariablesSshKeysOutputArgs {
    actionId?: pulumi.Input<number>;
    domain: pulumi.Input<string>;
    keyRegex?: pulumi.Input<string>;
    pipelineId?: pulumi.Input<number>;
    projectName?: pulumi.Input<string>;
}
