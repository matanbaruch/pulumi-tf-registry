// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPipeline(args: GetPipelineArgs, opts?: pulumi.InvokeOptions): Promise<GetPipelineResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("buddy:index/getPipeline:getPipeline", {
        "domain": args.domain,
        "name": args.name,
        "pipelineId": args.pipelineId,
        "projectName": args.projectName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPipeline.
 */
export interface GetPipelineArgs {
    domain: string;
    name?: string;
    pipelineId?: number;
    projectName: string;
}

/**
 * A collection of values returned by getPipeline.
 */
export interface GetPipelineResult {
    readonly definitionSource: string;
    readonly disabled: boolean;
    readonly disablingReason: string;
    readonly domain: string;
    readonly events: outputs.GetPipelineEvent[];
    readonly gitConfig: outputs.GetPipelineGitConfig;
    readonly gitConfigRef: string;
    readonly htmlUrl: string;
    readonly id: string;
    readonly lastExecutionRevision: string;
    readonly lastExecutionStatus: string;
    readonly name: string;
    readonly on: string;
    readonly pipelineId: number;
    readonly priority: string;
    readonly projectName: string;
    readonly refs: string[];
    readonly remoteBranch: string;
    readonly remoteParameters: outputs.GetPipelineRemoteParameter[];
    readonly remotePath: string;
    readonly remoteProjectName: string;
    readonly tags: string[];
}
export function getPipelineOutput(args: GetPipelineOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPipelineResult> {
    return pulumi.output(args).apply((a: any) => getPipeline(a, opts))
}

/**
 * A collection of arguments for invoking getPipeline.
 */
export interface GetPipelineOutputArgs {
    domain: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pipelineId?: pulumi.Input<number>;
    projectName: pulumi.Input<string>;
}
