// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMembers(args: GetMembersArgs, opts?: pulumi.InvokeOptions): Promise<GetMembersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("buddy:index/getMembers:getMembers", {
        "domain": args.domain,
        "nameRegex": args.nameRegex,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMembers.
 */
export interface GetMembersArgs {
    domain: string;
    nameRegex?: string;
}

/**
 * A collection of values returned by getMembers.
 */
export interface GetMembersResult {
    readonly domain: string;
    readonly id: string;
    readonly members: outputs.GetMembersMember[];
    readonly nameRegex?: string;
}
export function getMembersOutput(args: GetMembersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMembersResult> {
    return pulumi.output(args).apply((a: any) => getMembers(a, opts))
}

/**
 * A collection of arguments for invoking getMembers.
 */
export interface GetMembersOutputArgs {
    domain: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
}
