// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWebhooks(args: GetWebhooksArgs, opts?: pulumi.InvokeOptions): Promise<GetWebhooksResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("buddy:index/getWebhooks:getWebhooks", {
        "domain": args.domain,
        "targetUrlRegex": args.targetUrlRegex,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWebhooks.
 */
export interface GetWebhooksArgs {
    domain: string;
    targetUrlRegex?: string;
}

/**
 * A collection of values returned by getWebhooks.
 */
export interface GetWebhooksResult {
    readonly domain: string;
    readonly id: string;
    readonly targetUrlRegex?: string;
    readonly webhooks: outputs.GetWebhooksWebhook[];
}
export function getWebhooksOutput(args: GetWebhooksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWebhooksResult> {
    return pulumi.output(args).apply((a: any) => getWebhooks(a, opts))
}

/**
 * A collection of arguments for invoking getWebhooks.
 */
export interface GetWebhooksOutputArgs {
    domain: pulumi.Input<string>;
    targetUrlRegex?: pulumi.Input<string>;
}
