// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ImageTag extends pulumi.CustomResource {
    /**
     * Get an existing ImageTag resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ImageTagState, opts?: pulumi.CustomResourceOptions): ImageTag {
        return new ImageTag(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'chainguard:index/imageTag:ImageTag';

    /**
     * Returns true if the given object is an instance of ImageTag.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ImageTag {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ImageTag.__pulumiType;
    }

    /**
     * List of bundles associated with this repo (a-z freeform keywords for sales purposes).
     */
    public readonly bundles!: pulumi.Output<string[] | undefined>;
    /**
     * The name of this tag.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The repo that owns the repo.
     */
    public readonly repoId!: pulumi.Output<string>;

    /**
     * Create a ImageTag resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ImageTagArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ImageTagArgs | ImageTagState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ImageTagState | undefined;
            resourceInputs["bundles"] = state ? state.bundles : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["repoId"] = state ? state.repoId : undefined;
        } else {
            const args = argsOrState as ImageTagArgs | undefined;
            if ((!args || args.repoId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repoId'");
            }
            resourceInputs["bundles"] = args ? args.bundles : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["repoId"] = args ? args.repoId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ImageTag.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ImageTag resources.
 */
export interface ImageTagState {
    /**
     * List of bundles associated with this repo (a-z freeform keywords for sales purposes).
     */
    bundles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of this tag.
     */
    name?: pulumi.Input<string>;
    /**
     * The repo that owns the repo.
     */
    repoId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ImageTag resource.
 */
export interface ImageTagArgs {
    /**
     * List of bundles associated with this repo (a-z freeform keywords for sales purposes).
     */
    bundles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of this tag.
     */
    name?: pulumi.Input<string>;
    /**
     * The repo that owns the repo.
     */
    repoId: pulumi.Input<string>;
}
