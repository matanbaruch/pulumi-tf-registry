// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIdentity(args: GetIdentityArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("chainguard:index/getIdentity:getIdentity", {
        "issuer": args.issuer,
        "subject": args.subject,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentity.
 */
export interface GetIdentityArgs {
    issuer: string;
    subject: string;
}

/**
 * A collection of values returned by getIdentity.
 */
export interface GetIdentityResult {
    readonly id: string;
    readonly issuer: string;
    readonly subject: string;
}
export function getIdentityOutput(args: GetIdentityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityResult> {
    return pulumi.output(args).apply((a: any) => getIdentity(a, opts))
}

/**
 * A collection of arguments for invoking getIdentity.
 */
export interface GetIdentityOutputArgs {
    issuer: pulumi.Input<string>;
    subject: pulumi.Input<string>;
}
