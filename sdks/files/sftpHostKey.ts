// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SftpHostKey extends pulumi.CustomResource {
    /**
     * Get an existing SftpHostKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SftpHostKeyState, opts?: pulumi.CustomResourceOptions): SftpHostKey {
        return new SftpHostKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'files:index/sftpHostKey:SftpHostKey';

    /**
     * Returns true if the given object is an instance of SftpHostKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SftpHostKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SftpHostKey.__pulumiType;
    }

    /**
     * MD5 Fingerpint of the public key
     */
    public /*out*/ readonly fingerprintMd5!: pulumi.Output<string>;
    /**
     * SHA256 Fingerpint of the public key
     */
    public /*out*/ readonly fingerprintSha256!: pulumi.Output<string>;
    /**
     * The friendly name of this SFTP Host Key.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The private key data.
     */
    public readonly privateKey!: pulumi.Output<string | undefined>;

    /**
     * Create a SftpHostKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SftpHostKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SftpHostKeyArgs | SftpHostKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SftpHostKeyState | undefined;
            resourceInputs["fingerprintMd5"] = state ? state.fingerprintMd5 : undefined;
            resourceInputs["fingerprintSha256"] = state ? state.fingerprintSha256 : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
        } else {
            const args = argsOrState as SftpHostKeyArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["privateKey"] = args ? args.privateKey : undefined;
            resourceInputs["fingerprintMd5"] = undefined /*out*/;
            resourceInputs["fingerprintSha256"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SftpHostKey.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SftpHostKey resources.
 */
export interface SftpHostKeyState {
    /**
     * MD5 Fingerpint of the public key
     */
    fingerprintMd5?: pulumi.Input<string>;
    /**
     * SHA256 Fingerpint of the public key
     */
    fingerprintSha256?: pulumi.Input<string>;
    /**
     * The friendly name of this SFTP Host Key.
     */
    name?: pulumi.Input<string>;
    /**
     * The private key data.
     */
    privateKey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SftpHostKey resource.
 */
export interface SftpHostKeyArgs {
    /**
     * The friendly name of this SFTP Host Key.
     */
    name?: pulumi.Input<string>;
    /**
     * The private key data.
     */
    privateKey?: pulumi.Input<string>;
}
