// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLock(args: GetLockArgs, opts?: pulumi.InvokeOptions): Promise<GetLockResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("files:index/getLock:getLock", {
        "path": args.path,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLock.
 */
export interface GetLockArgs {
    path: string;
}

/**
 * A collection of values returned by getLock.
 */
export interface GetLockResult {
    readonly allowAccessByAnyUser: boolean;
    readonly depth: string;
    readonly exclusive: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly owner: string;
    readonly path: string;
    readonly recursive: boolean;
    readonly scope: string;
    readonly timeout: number;
    readonly token: string;
    readonly type: string;
    readonly userId: number;
    readonly username: string;
}
export function getLockOutput(args: GetLockOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLockResult> {
    return pulumi.output(args).apply((a: any) => getLock(a, opts))
}

/**
 * A collection of arguments for invoking getLock.
 */
export interface GetLockOutputArgs {
    path: pulumi.Input<string>;
}
