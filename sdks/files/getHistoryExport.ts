// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getHistoryExport(args: GetHistoryExportArgs, opts?: pulumi.InvokeOptions): Promise<GetHistoryExportResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("files:index/getHistoryExport:getHistoryExport", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHistoryExport.
 */
export interface GetHistoryExportArgs {
    id: number;
}

/**
 * A collection of values returned by getHistoryExport.
 */
export interface GetHistoryExportResult {
    readonly endAt: string;
    readonly historyVersion: string;
    readonly id: number;
    readonly queryAction: string;
    readonly queryDestination: string;
    readonly queryFailureType: string;
    readonly queryFileId: string;
    readonly queryFolder: string;
    readonly queryInterface: string;
    readonly queryIp: string;
    readonly queryParentId: string;
    readonly queryPath: string;
    readonly querySrc: string;
    readonly queryTargetId: string;
    readonly queryTargetName: string;
    readonly queryTargetPermission: string;
    readonly queryTargetPermissionSet: string;
    readonly queryTargetPlatform: string;
    readonly queryTargetUserId: string;
    readonly queryTargetUsername: string;
    readonly queryUserId: string;
    readonly queryUsername: string;
    readonly resultsUrl: string;
    readonly startAt: string;
    readonly status: string;
}
export function getHistoryExportOutput(args: GetHistoryExportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHistoryExportResult> {
    return pulumi.output(args).apply((a: any) => getHistoryExport(a, opts))
}

/**
 * A collection of arguments for invoking getHistoryExport.
 */
export interface GetHistoryExportOutputArgs {
    id: pulumi.Input<number>;
}
