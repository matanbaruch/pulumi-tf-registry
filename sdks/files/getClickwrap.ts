// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getClickwrap(args: GetClickwrapArgs, opts?: pulumi.InvokeOptions): Promise<GetClickwrapResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("files:index/getClickwrap:getClickwrap", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getClickwrap.
 */
export interface GetClickwrapArgs {
    id: number;
}

/**
 * A collection of values returned by getClickwrap.
 */
export interface GetClickwrapResult {
    readonly body: string;
    readonly id: number;
    readonly name: string;
    readonly useWithBundles: string;
    readonly useWithInboxes: string;
    readonly useWithUsers: string;
}
export function getClickwrapOutput(args: GetClickwrapOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClickwrapResult> {
    return pulumi.output(args).apply((a: any) => getClickwrap(a, opts))
}

/**
 * A collection of arguments for invoking getClickwrap.
 */
export interface GetClickwrapOutputArgs {
    id: pulumi.Input<number>;
}
