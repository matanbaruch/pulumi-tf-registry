// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFileMigration(args: GetFileMigrationArgs, opts?: pulumi.InvokeOptions): Promise<GetFileMigrationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("files:index/getFileMigration:getFileMigration", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFileMigration.
 */
export interface GetFileMigrationArgs {
    id: number;
}

/**
 * A collection of values returned by getFileMigration.
 */
export interface GetFileMigrationResult {
    readonly destPath: string;
    readonly filesMoved: number;
    readonly filesTotal: number;
    readonly id: number;
    readonly logUrl: string;
    readonly operation: string;
    readonly path: string;
    readonly region: string;
    readonly status: string;
}
export function getFileMigrationOutput(args: GetFileMigrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFileMigrationResult> {
    return pulumi.output(args).apply((a: any) => getFileMigration(a, opts))
}

/**
 * A collection of arguments for invoking getFileMigration.
 */
export interface GetFileMigrationOutputArgs {
    id: pulumi.Input<number>;
}
