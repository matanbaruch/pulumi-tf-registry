// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGroupUser(args: GetGroupUserArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("files:index/getGroupUser:getGroupUser", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGroupUser.
 */
export interface GetGroupUserArgs {
    id: number;
}

/**
 * A collection of values returned by getGroupUser.
 */
export interface GetGroupUserResult {
    readonly admin: boolean;
    readonly groupId: number;
    readonly groupName: string;
    readonly id: number;
    readonly userId: number;
    readonly usernames: string[];
}
export function getGroupUserOutput(args: GetGroupUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupUserResult> {
    return pulumi.output(args).apply((a: any) => getGroupUser(a, opts))
}

/**
 * A collection of arguments for invoking getGroupUser.
 */
export interface GetGroupUserOutputArgs {
    id: pulumi.Input<number>;
}
