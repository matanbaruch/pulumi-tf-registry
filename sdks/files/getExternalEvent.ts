// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getExternalEvent(args: GetExternalEventArgs, opts?: pulumi.InvokeOptions): Promise<GetExternalEventResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("files:index/getExternalEvent:getExternalEvent", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getExternalEvent.
 */
export interface GetExternalEventArgs {
    id: number;
}

/**
 * A collection of values returned by getExternalEvent.
 */
export interface GetExternalEventResult {
    readonly body: string;
    readonly bodyUrl: string;
    readonly bytesSynced: number;
    readonly comparedFiles: number;
    readonly comparedFolders: number;
    readonly createdAt: string;
    readonly erroredFiles: number;
    readonly eventType: string;
    readonly folderBehaviorId: number;
    readonly id: number;
    readonly remoteServerType: string;
    readonly siemHttpDestinationId: number;
    readonly status: string;
    readonly successfulFiles: number;
}
export function getExternalEventOutput(args: GetExternalEventOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetExternalEventResult> {
    return pulumi.output(args).apply((a: any) => getExternalEvent(a, opts))
}

/**
 * A collection of arguments for invoking getExternalEvent.
 */
export interface GetExternalEventOutputArgs {
    id: pulumi.Input<number>;
}
