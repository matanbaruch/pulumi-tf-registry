// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSsoStrategy(args: GetSsoStrategyArgs, opts?: pulumi.InvokeOptions): Promise<GetSsoStrategyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("files:index/getSsoStrategy:getSsoStrategy", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSsoStrategy.
 */
export interface GetSsoStrategyArgs {
    id: number;
}

/**
 * A collection of values returned by getSsoStrategy.
 */
export interface GetSsoStrategyResult {
    readonly deprovisionBehavior: string;
    readonly deprovisionGroups: boolean;
    readonly deprovisionUsers: boolean;
    readonly enabled: boolean;
    readonly id: number;
    readonly label: string;
    readonly ldapBaseDn: string;
    readonly ldapDomain: string;
    readonly ldapHost: string;
    readonly ldapHost2: string;
    readonly ldapHost3: string;
    readonly ldapPort: number;
    readonly ldapSecure: boolean;
    readonly ldapUsername: string;
    readonly ldapUsernameField: string;
    readonly logoUrl: string;
    readonly protocol: string;
    readonly provider_: string;
    readonly provisionAttachmentsPermission: boolean;
    readonly provisionCompany: string;
    readonly provisionDavPermission: boolean;
    readonly provisionEmailSignupGroups: string;
    readonly provisionFtpPermission: boolean;
    readonly provisionGroupAdminGroups: string;
    readonly provisionGroupDefault: string;
    readonly provisionGroupExclusion: string;
    readonly provisionGroupInclusion: string;
    readonly provisionGroupRequired: string;
    readonly provisionGroups: boolean;
    readonly provisionRequire2fa: string;
    readonly provisionSftpPermission: boolean;
    readonly provisionSiteAdminGroups: string;
    readonly provisionTimeZone: string;
    readonly provisionUsers: boolean;
    readonly samlProviderCertFingerprint: string;
    readonly samlProviderIssuerUrl: string;
    readonly samlProviderMetadataContent: string;
    readonly samlProviderMetadataUrl: string;
    readonly samlProviderSloTargetUrl: string;
    readonly samlProviderSsoTargetUrl: string;
    readonly scimAuthenticationMethod: string;
    readonly scimOauthAccessToken: string;
    readonly scimOauthAccessTokenExpiresAt: string;
    readonly scimUsername: string;
    readonly subdomain: string;
    readonly userCount: number;
}
export function getSsoStrategyOutput(args: GetSsoStrategyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSsoStrategyResult> {
    return pulumi.output(args).apply((a: any) => getSsoStrategy(a, opts))
}

/**
 * A collection of arguments for invoking getSsoStrategy.
 */
export interface GetSsoStrategyOutputArgs {
    id: pulumi.Input<number>;
}
