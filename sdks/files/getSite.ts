// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSite(opts?: pulumi.InvokeOptions): Promise<GetSiteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("files:index/getSite:getSite", {
    }, opts, utilities.getPackage());
}

/**
 * A collection of values returned by getSite.
 */
export interface GetSiteResult {
    readonly activeSftpHostKeyId: number;
    readonly additionalTextFileTypes: string[];
    readonly adminUserId: number;
    readonly adminsBypassLockedSubfolders: boolean;
    readonly allowBundleNames: boolean;
    readonly allowed2faMethodBypassForFtpSftpDav: boolean;
    readonly allowed2faMethodEmail: boolean;
    readonly allowed2faMethodSms: boolean;
    readonly allowed2faMethodStatic: boolean;
    readonly allowed2faMethodTotp: boolean;
    readonly allowed2faMethodU2f: boolean;
    readonly allowed2faMethodWebauthn: boolean;
    readonly allowed2faMethodYubi: boolean;
    readonly allowedCountries: string;
    readonly allowedIps: string;
    readonly alwaysMkdirParents: boolean;
    readonly askAboutOverwrites: boolean;
    readonly bundleActivityNotifications: string;
    readonly bundleExpiration: number;
    readonly bundleNotFoundMessage: string;
    readonly bundlePasswordRequired: boolean;
    readonly bundleRecipientBlacklistDomains: string[];
    readonly bundleRecipientBlacklistFreeEmailDomains: boolean;
    readonly bundleRegistrationNotifications: string;
    readonly bundleRequireNote: boolean;
    readonly bundleRequireRegistration: boolean;
    readonly bundleRequireShareRecipient: boolean;
    readonly bundleUploadReceiptNotifications: string;
    readonly bundleWatermarkAttachment: string;
    readonly bundleWatermarkValue: any;
    readonly color2Left: string;
    readonly color2Link: string;
    readonly color2Text: string;
    readonly color2Top: string;
    readonly color2TopText: string;
    readonly contactName: string;
    readonly createdAt: string;
    readonly currency: string;
    readonly customNamespace: boolean;
    readonly davEnabled: boolean;
    readonly davUserRootEnabled: boolean;
    readonly daysToRetainBackups: number;
    readonly defaultTimeZone: string;
    readonly desktopApp: boolean;
    readonly desktopAppSessionIpPinning: boolean;
    readonly desktopAppSessionLifetime: number;
    readonly disableFilesCertificateGeneration: boolean;
    readonly disableNotifications: boolean;
    readonly disablePasswordReset: boolean;
    readonly disableUsersFromInactivityPeriodDays: number;
    readonly disallowedCountries: string;
    readonly domain: string;
    readonly domainHstsHeader: boolean;
    readonly domainLetsencryptChain: string;
    readonly email: string;
    readonly folderPermissionsGroupsOnly: boolean;
    readonly ftpEnabled: boolean;
    readonly groupAdminsCanSetUserPassword: boolean;
    readonly hipaa: boolean;
    readonly icon128: string;
    readonly icon16: string;
    readonly icon32: string;
    readonly icon48: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly immutableFilesSetAt: string;
    readonly includePasswordInWelcomeEmail: boolean;
    readonly language: string;
    readonly ldapBaseDn: string;
    readonly ldapDomain: string;
    readonly ldapEnabled: boolean;
    readonly ldapGroupAction: string;
    readonly ldapGroupExclusion: string;
    readonly ldapGroupInclusion: string;
    readonly ldapHost: string;
    readonly ldapHost2: string;
    readonly ldapHost3: string;
    readonly ldapPort: number;
    readonly ldapSecure: boolean;
    readonly ldapType: string;
    readonly ldapUserAction: string;
    readonly ldapUserIncludeGroups: string;
    readonly ldapUsername: string;
    readonly ldapUsernameField: string;
    readonly loginHelpText: string;
    readonly loginPageBackgroundImage: string;
    readonly logo: string;
    readonly maxPriorPasswords: number;
    readonly mobileApp: boolean;
    readonly mobileAppSessionIpPinning: boolean;
    readonly mobileAppSessionLifetime: number;
    readonly motdText: string;
    readonly motdUseForFtp: boolean;
    readonly motdUseForSftp: boolean;
    readonly name: string;
    readonly nextBillingAmount: string;
    readonly nextBillingDate: string;
    readonly nonSsoGroupsAllowed: boolean;
    readonly nonSsoUsersAllowed: boolean;
    readonly officeIntegrationAvailable: boolean;
    readonly officeIntegrationType: string;
    readonly oncehubLink: string;
    readonly optOutGlobal: boolean;
    readonly overdue: boolean;
    readonly passwordMinLength: number;
    readonly passwordRequireLetter: boolean;
    readonly passwordRequireMixed: boolean;
    readonly passwordRequireNumber: boolean;
    readonly passwordRequireSpecial: boolean;
    readonly passwordRequireUnbreached: boolean;
    readonly passwordRequirementsApplyToBundles: boolean;
    readonly passwordValidityDays: number;
    readonly phone: string;
    readonly pinAllRemoteServersToSiteRegion: boolean;
    readonly preventRootPermissionsForNonSiteAdmins: boolean;
    readonly protocolAccessGroupsOnly: boolean;
    readonly replyToEmail: string;
    readonly require2fa: boolean;
    readonly require2faStopTime: string;
    readonly require2faUserType: string;
    readonly requireLogoutFromBundlesAndInboxes: boolean;
    readonly session: string;
    readonly sessionExpiry: string;
    readonly sessionExpiryMinutes: number;
    readonly sessionPinnedByIp: boolean;
    readonly sftpEnabled: boolean;
    readonly sftpHostKeyType: string;
    readonly sftpInsecureCiphers: boolean;
    readonly sftpInsecureDiffieHellman: boolean;
    readonly sftpUserRootEnabled: boolean;
    readonly sharingEnabled: boolean;
    readonly showRequestAccessLink: boolean;
    readonly siteFooter: string;
    readonly siteHeader: string;
    readonly smtpAddress: string;
    readonly smtpAuthentication: string;
    readonly smtpFrom: string;
    readonly smtpPort: number;
    readonly smtpUsername: string;
    readonly sslRequired: boolean;
    readonly subdomain: string;
    readonly switchToPlanDate: string;
    readonly tlsDisabled: boolean;
    readonly trialDaysLeft: number;
    readonly trialUntil: string;
    readonly uploadsViaEmailAuthentication: boolean;
    readonly useDedicatedIpsForSmtp: boolean;
    readonly useProvidedModifiedAt: boolean;
    readonly user: string;
    readonly userLockout: boolean;
    readonly userLockoutLockPeriod: number;
    readonly userLockoutTries: number;
    readonly userLockoutWithin: number;
    readonly userRequestsEnabled: boolean;
    readonly userRequestsNotifyAdmins: boolean;
    readonly usersCanCreateApiKeys: boolean;
    readonly usersCanCreateSshKeys: boolean;
    readonly welcomeCustomText: string;
    readonly welcomeEmailCc: string;
    readonly welcomeEmailEnabled: boolean;
    readonly welcomeEmailSubject: string;
    readonly welcomeScreen: string;
    readonly windowsModeFtp: boolean;
}
export function getSiteOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetSiteResult> {
    return pulumi.output(getSite(opts))
}
