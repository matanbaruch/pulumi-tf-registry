// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMessageCommentReaction(args: GetMessageCommentReactionArgs, opts?: pulumi.InvokeOptions): Promise<GetMessageCommentReactionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("files:index/getMessageCommentReaction:getMessageCommentReaction", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMessageCommentReaction.
 */
export interface GetMessageCommentReactionArgs {
    id: number;
}

/**
 * A collection of values returned by getMessageCommentReaction.
 */
export interface GetMessageCommentReactionResult {
    readonly emoji: string;
    readonly id: number;
}
export function getMessageCommentReactionOutput(args: GetMessageCommentReactionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMessageCommentReactionResult> {
    return pulumi.output(args).apply((a: any) => getMessageCommentReaction(a, opts))
}

/**
 * A collection of arguments for invoking getMessageCommentReaction.
 */
export interface GetMessageCommentReactionOutputArgs {
    id: pulumi.Input<number>;
}
