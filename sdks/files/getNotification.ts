// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNotification(args: GetNotificationArgs, opts?: pulumi.InvokeOptions): Promise<GetNotificationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("files:index/getNotification:getNotification", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNotification.
 */
export interface GetNotificationArgs {
    id: number;
}

/**
 * A collection of values returned by getNotification.
 */
export interface GetNotificationResult {
    readonly groupId: number;
    readonly groupName: string;
    readonly id: number;
    readonly message: string;
    readonly notifyOnCopy: boolean;
    readonly notifyOnDelete: boolean;
    readonly notifyOnDownload: boolean;
    readonly notifyOnMove: boolean;
    readonly notifyOnUpload: boolean;
    readonly notifyUserActions: boolean;
    readonly path: string;
    readonly recursive: boolean;
    readonly sendInterval: string;
    readonly suppressedEmail: boolean;
    readonly triggerByShareRecipients: boolean;
    readonly triggeringFilenames: string[];
    readonly triggeringGroupIds: number[];
    readonly triggeringUserIds: number[];
    readonly unsubscribed: boolean;
    readonly unsubscribedReason: string;
    readonly userId: number;
    readonly username: string;
}
export function getNotificationOutput(args: GetNotificationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNotificationResult> {
    return pulumi.output(args).apply((a: any) => getNotification(a, opts))
}

/**
 * A collection of arguments for invoking getNotification.
 */
export interface GetNotificationOutputArgs {
    id: pulumi.Input<number>;
}
