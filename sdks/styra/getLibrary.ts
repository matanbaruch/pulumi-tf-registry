// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLibrary(args: GetLibraryArgs, opts?: pulumi.InvokeOptions): Promise<GetLibraryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("styra:index/getLibrary:getLibrary", {
        "dependantBundles": args.dependantBundles,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLibrary.
 */
export interface GetLibraryArgs {
    dependantBundles?: string;
    id: string;
}

/**
 * A collection of values returned by getLibrary.
 */
export interface GetLibraryResult {
    readonly dependantBundles?: string;
    readonly id: string;
    readonly result: outputs.GetLibraryResult;
}
export function getLibraryOutput(args: GetLibraryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLibraryResult> {
    return pulumi.output(args).apply((a: any) => getLibrary(a, opts))
}

/**
 * A collection of arguments for invoking getLibrary.
 */
export interface GetLibraryOutputArgs {
    dependantBundles?: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
