// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStack(args: GetStackArgs, opts?: pulumi.InvokeOptions): Promise<GetStackResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("styra:index/getStack:getStack", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStack.
 */
export interface GetStackArgs {
    id: string;
}

/**
 * A collection of values returned by getStack.
 */
export interface GetStackResult {
    readonly authz: outputs.GetStackAuthz;
    readonly datasources: outputs.GetStackDatasource[];
    readonly description: string;
    readonly errors: {[key: string]: outputs.GetStackErrors};
    readonly id: string;
    readonly matchingSystems: string[];
    readonly metadata: outputs.GetStackMetadata;
    readonly migrationHistories: outputs.GetStackMigrationHistory[];
    readonly minimumOpaVersion: string;
    readonly name: string;
    readonly policies: outputs.GetStackPolicy[];
    readonly readOnly: boolean;
    readonly sourceControl: outputs.GetStackSourceControl;
    readonly status: string;
    readonly type: string;
    readonly typeParameters: outputs.GetStackTypeParameters;
}
export function getStackOutput(args: GetStackOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStackResult> {
    return pulumi.output(args).apply((a: any) => getStack(a, opts))
}

/**
 * A collection of arguments for invoking getStack.
 */
export interface GetStackOutputArgs {
    id: pulumi.Input<string>;
}
