// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRestconf(args: GetRestconfArgs, opts?: pulumi.InvokeOptions): Promise<GetRestconfResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nso:index/getRestconf:getRestconf", {
        "instance": args.instance,
        "path": args.path,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRestconf.
 */
export interface GetRestconfArgs {
    instance?: string;
    path: string;
}

/**
 * A collection of values returned by getRestconf.
 */
export interface GetRestconfResult {
    readonly attributes: {[key: string]: string};
    readonly id: string;
    readonly instance?: string;
    readonly path: string;
}
export function getRestconfOutput(args: GetRestconfOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRestconfResult> {
    return pulumi.output(args).apply((a: any) => getRestconf(a, opts))
}

/**
 * A collection of arguments for invoking getRestconf.
 */
export interface GetRestconfOutputArgs {
    instance?: pulumi.Input<string>;
    path: pulumi.Input<string>;
}
