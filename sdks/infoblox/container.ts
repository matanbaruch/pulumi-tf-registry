// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Container extends pulumi.CustomResource {
    /**
     * Get an existing Container resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContainerState, opts?: pulumi.CustomResourceOptions): Container {
        return new Container(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'infoblox:index/container:Container';

    /**
     * Returns true if the given object is an instance of Container.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Container {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Container.__pulumiType;
    }

    /**
     * The container network address in IPv4 Address/CIDR format.
     */
    public readonly cidr!: pulumi.Output<string>;
    /**
     * Comment for the container; maximum 256 characters.
     */
    public readonly comment!: pulumi.Output<string>;
    /**
     * Extensible attributes of A container (Values are JSON encoded).
     */
    public readonly extensibleAttributes!: pulumi.Output<{[key: string]: string}>;
    /**
     * The name of the network view in which this network resides.
     */
    public readonly networkView!: pulumi.Output<string | undefined>;
    /**
     * Reference id of A container object.
     */
    public /*out*/ readonly ref!: pulumi.Output<string>;

    /**
     * Create a Container resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContainerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContainerArgs | ContainerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContainerState | undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["extensibleAttributes"] = state ? state.extensibleAttributes : undefined;
            resourceInputs["networkView"] = state ? state.networkView : undefined;
            resourceInputs["ref"] = state ? state.ref : undefined;
        } else {
            const args = argsOrState as ContainerArgs | undefined;
            if ((!args || args.cidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidr'");
            }
            resourceInputs["cidr"] = args ? args.cidr : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["extensibleAttributes"] = args ? args.extensibleAttributes : undefined;
            resourceInputs["networkView"] = args ? args.networkView : undefined;
            resourceInputs["ref"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Container.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Container resources.
 */
export interface ContainerState {
    /**
     * The container network address in IPv4 Address/CIDR format.
     */
    cidr?: pulumi.Input<string>;
    /**
     * Comment for the container; maximum 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Extensible attributes of A container (Values are JSON encoded).
     */
    extensibleAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the network view in which this network resides.
     */
    networkView?: pulumi.Input<string>;
    /**
     * Reference id of A container object.
     */
    ref?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Container resource.
 */
export interface ContainerArgs {
    /**
     * The container network address in IPv4 Address/CIDR format.
     */
    cidr: pulumi.Input<string>;
    /**
     * Comment for the container; maximum 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Extensible attributes of A container (Values are JSON encoded).
     */
    extensibleAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the network view in which this network resides.
     */
    networkView?: pulumi.Input<string>;
}
