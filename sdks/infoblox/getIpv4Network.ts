// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIpv4Network(args: GetIpv4NetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetIpv4NetworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("infoblox:index/getIpv4Network:getIpv4Network", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpv4Network.
 */
export interface GetIpv4NetworkArgs {
    filters: {[key: string]: string};
    id?: string;
}

/**
 * A collection of values returned by getIpv4Network.
 */
export interface GetIpv4NetworkResult {
    readonly filters: {[key: string]: string};
    readonly id: string;
    readonly results: outputs.GetIpv4NetworkResult[];
}
export function getIpv4NetworkOutput(args: GetIpv4NetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpv4NetworkResult> {
    return pulumi.output(args).apply((a: any) => getIpv4Network(a, opts))
}

/**
 * A collection of arguments for invoking getIpv4Network.
 */
export interface GetIpv4NetworkOutputArgs {
    filters: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<string>;
}
