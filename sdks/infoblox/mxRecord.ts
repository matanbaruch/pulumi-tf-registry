// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MxRecord extends pulumi.CustomResource {
    /**
     * Get an existing MxRecord resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MxRecordState, opts?: pulumi.CustomResourceOptions): MxRecord {
        return new MxRecord(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'infoblox:index/mxRecord:MxRecord';

    /**
     * Returns true if the given object is an instance of MxRecord.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MxRecord {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MxRecord.__pulumiType;
    }

    /**
     * Description of the MX-Record.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * DNS view which the zone does exist within
     */
    public readonly dnsView!: pulumi.Output<string | undefined>;
    /**
     * Extensible attributes of the MX-record to be added/updated, as a map in JSON format.
     */
    public readonly extAttrs!: pulumi.Output<string | undefined>;
    /**
     * FQDN for the MX-record.
     */
    public readonly fqdn!: pulumi.Output<string>;
    public /*out*/ readonly internalId!: pulumi.Output<string>;
    /**
     * A record used to specify mail server.
     */
    public readonly mailExchanger!: pulumi.Output<string>;
    /**
     * Configures the preference (0-65535) for this MX-record.
     */
    public readonly preference!: pulumi.Output<number>;
    /**
     * NIOS object's reference, not to be set by a user.
     */
    public /*out*/ readonly ref!: pulumi.Output<string>;
    /**
     * TTL value for the MX-record.
     */
    public readonly ttl!: pulumi.Output<number | undefined>;

    /**
     * Create a MxRecord resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MxRecordArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MxRecordArgs | MxRecordState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MxRecordState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["dnsView"] = state ? state.dnsView : undefined;
            resourceInputs["extAttrs"] = state ? state.extAttrs : undefined;
            resourceInputs["fqdn"] = state ? state.fqdn : undefined;
            resourceInputs["internalId"] = state ? state.internalId : undefined;
            resourceInputs["mailExchanger"] = state ? state.mailExchanger : undefined;
            resourceInputs["preference"] = state ? state.preference : undefined;
            resourceInputs["ref"] = state ? state.ref : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
        } else {
            const args = argsOrState as MxRecordArgs | undefined;
            if ((!args || args.fqdn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fqdn'");
            }
            if ((!args || args.mailExchanger === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mailExchanger'");
            }
            if ((!args || args.preference === undefined) && !opts.urn) {
                throw new Error("Missing required property 'preference'");
            }
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["dnsView"] = args ? args.dnsView : undefined;
            resourceInputs["extAttrs"] = args ? args.extAttrs : undefined;
            resourceInputs["fqdn"] = args ? args.fqdn : undefined;
            resourceInputs["mailExchanger"] = args ? args.mailExchanger : undefined;
            resourceInputs["preference"] = args ? args.preference : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["internalId"] = undefined /*out*/;
            resourceInputs["ref"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MxRecord.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MxRecord resources.
 */
export interface MxRecordState {
    /**
     * Description of the MX-Record.
     */
    comment?: pulumi.Input<string>;
    /**
     * DNS view which the zone does exist within
     */
    dnsView?: pulumi.Input<string>;
    /**
     * Extensible attributes of the MX-record to be added/updated, as a map in JSON format.
     */
    extAttrs?: pulumi.Input<string>;
    /**
     * FQDN for the MX-record.
     */
    fqdn?: pulumi.Input<string>;
    internalId?: pulumi.Input<string>;
    /**
     * A record used to specify mail server.
     */
    mailExchanger?: pulumi.Input<string>;
    /**
     * Configures the preference (0-65535) for this MX-record.
     */
    preference?: pulumi.Input<number>;
    /**
     * NIOS object's reference, not to be set by a user.
     */
    ref?: pulumi.Input<string>;
    /**
     * TTL value for the MX-record.
     */
    ttl?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a MxRecord resource.
 */
export interface MxRecordArgs {
    /**
     * Description of the MX-Record.
     */
    comment?: pulumi.Input<string>;
    /**
     * DNS view which the zone does exist within
     */
    dnsView?: pulumi.Input<string>;
    /**
     * Extensible attributes of the MX-record to be added/updated, as a map in JSON format.
     */
    extAttrs?: pulumi.Input<string>;
    /**
     * FQDN for the MX-record.
     */
    fqdn: pulumi.Input<string>;
    /**
     * A record used to specify mail server.
     */
    mailExchanger: pulumi.Input<string>;
    /**
     * Configures the preference (0-65535) for this MX-record.
     */
    preference: pulumi.Input<number>;
    /**
     * TTL value for the MX-record.
     */
    ttl?: pulumi.Input<number>;
}
