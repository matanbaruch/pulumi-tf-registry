// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ipv4NetworkContainer extends pulumi.CustomResource {
    /**
     * Get an existing Ipv4NetworkContainer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ipv4NetworkContainerState, opts?: pulumi.CustomResourceOptions): Ipv4NetworkContainer {
        return new Ipv4NetworkContainer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'infoblox:index/ipv4NetworkContainer:Ipv4NetworkContainer';

    /**
     * Returns true if the given object is an instance of Ipv4NetworkContainer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ipv4NetworkContainer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ipv4NetworkContainer.__pulumiType;
    }

    /**
     * Set the parameter's value > 0 to allocate next available network container with corresponding prefix length from the
     * network container defined by 'parent_cidr'
     */
    public readonly allocatePrefixLen!: pulumi.Output<number | undefined>;
    /**
     * The network container's address, in CIDR format.
     */
    public readonly cidr!: pulumi.Output<string>;
    /**
     * A description of the network container.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * The Extensible attributes of the network container to be added/updated, as a map in JSON format
     */
    public readonly extAttrs!: pulumi.Output<string | undefined>;
    public /*out*/ readonly internalId!: pulumi.Output<string>;
    /**
     * The name of network view for the network container.
     */
    public readonly networkView!: pulumi.Output<string | undefined>;
    /**
     * The parent network container block in CIDR format to allocate from.
     */
    public readonly parentCidr!: pulumi.Output<string | undefined>;
    /**
     * NIOS object's reference, not to be set by a user.
     */
    public /*out*/ readonly ref!: pulumi.Output<string>;

    /**
     * Create a Ipv4NetworkContainer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Ipv4NetworkContainerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ipv4NetworkContainerArgs | Ipv4NetworkContainerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ipv4NetworkContainerState | undefined;
            resourceInputs["allocatePrefixLen"] = state ? state.allocatePrefixLen : undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["extAttrs"] = state ? state.extAttrs : undefined;
            resourceInputs["internalId"] = state ? state.internalId : undefined;
            resourceInputs["networkView"] = state ? state.networkView : undefined;
            resourceInputs["parentCidr"] = state ? state.parentCidr : undefined;
            resourceInputs["ref"] = state ? state.ref : undefined;
        } else {
            const args = argsOrState as Ipv4NetworkContainerArgs | undefined;
            resourceInputs["allocatePrefixLen"] = args ? args.allocatePrefixLen : undefined;
            resourceInputs["cidr"] = args ? args.cidr : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["extAttrs"] = args ? args.extAttrs : undefined;
            resourceInputs["networkView"] = args ? args.networkView : undefined;
            resourceInputs["parentCidr"] = args ? args.parentCidr : undefined;
            resourceInputs["internalId"] = undefined /*out*/;
            resourceInputs["ref"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ipv4NetworkContainer.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ipv4NetworkContainer resources.
 */
export interface Ipv4NetworkContainerState {
    /**
     * Set the parameter's value > 0 to allocate next available network container with corresponding prefix length from the
     * network container defined by 'parent_cidr'
     */
    allocatePrefixLen?: pulumi.Input<number>;
    /**
     * The network container's address, in CIDR format.
     */
    cidr?: pulumi.Input<string>;
    /**
     * A description of the network container.
     */
    comment?: pulumi.Input<string>;
    /**
     * The Extensible attributes of the network container to be added/updated, as a map in JSON format
     */
    extAttrs?: pulumi.Input<string>;
    internalId?: pulumi.Input<string>;
    /**
     * The name of network view for the network container.
     */
    networkView?: pulumi.Input<string>;
    /**
     * The parent network container block in CIDR format to allocate from.
     */
    parentCidr?: pulumi.Input<string>;
    /**
     * NIOS object's reference, not to be set by a user.
     */
    ref?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ipv4NetworkContainer resource.
 */
export interface Ipv4NetworkContainerArgs {
    /**
     * Set the parameter's value > 0 to allocate next available network container with corresponding prefix length from the
     * network container defined by 'parent_cidr'
     */
    allocatePrefixLen?: pulumi.Input<number>;
    /**
     * The network container's address, in CIDR format.
     */
    cidr?: pulumi.Input<string>;
    /**
     * A description of the network container.
     */
    comment?: pulumi.Input<string>;
    /**
     * The Extensible attributes of the network container to be added/updated, as a map in JSON format
     */
    extAttrs?: pulumi.Input<string>;
    /**
     * The name of network view for the network container.
     */
    networkView?: pulumi.Input<string>;
    /**
     * The parent network container block in CIDR format to allocate from.
     */
    parentCidr?: pulumi.Input<string>;
}
