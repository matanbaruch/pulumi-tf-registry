// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGridMember(args?: GetGridMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetGridMemberResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("infoblox:index/getGridMember:getGridMember", {
        "hostname": args.hostname,
        "id": args.id,
        "queryParams": args.queryParams,
        "ref": args.ref,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGridMember.
 */
export interface GetGridMemberArgs {
    hostname?: string;
    id?: string;
    queryParams?: {[key: string]: string};
    ref?: string;
}

/**
 * A collection of values returned by getGridMember.
 */
export interface GetGridMemberResult {
    readonly configAddressType: string;
    readonly hostname: string;
    readonly id: string;
    readonly queryParams?: {[key: string]: string};
    readonly ref: string;
    readonly serviceTypeConfiguration: string;
}
export function getGridMemberOutput(args?: GetGridMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGridMemberResult> {
    return pulumi.output(args).apply((a: any) => getGridMember(a, opts))
}

/**
 * A collection of arguments for invoking getGridMember.
 */
export interface GetGridMemberOutputArgs {
    hostname?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    queryParams?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ref?: pulumi.Input<string>;
}
