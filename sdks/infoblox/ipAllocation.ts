// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IpAllocation extends pulumi.CustomResource {
    /**
     * Get an existing IpAllocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpAllocationState, opts?: pulumi.CustomResourceOptions): IpAllocation {
        return new IpAllocation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'infoblox:index/ipAllocation:IpAllocation';

    /**
     * Returns true if the given object is an instance of IpAllocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpAllocation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpAllocation.__pulumiType;
    }

    /**
     * Value which comes from 'ipv4_addr' (if specified) or from auto-allocation function (using 'ipv4_cidr').
     */
    public readonly allocatedIpv4Addr!: pulumi.Output<string>;
    /**
     * Value which comes from 'ipv6_addr' (if specified) or from auto-allocation function (using 'ipv6_cidr').
     */
    public readonly allocatedIpv6Addr!: pulumi.Output<string>;
    /**
     * A description of IP address allocation.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * DNS view under which the zone has been created.
     */
    public readonly dnsView!: pulumi.Output<string>;
    /**
     * flag that defines if the host record is to be used for DNS purposes.
     */
    public readonly enableDns!: pulumi.Output<boolean | undefined>;
    /**
     * The extensible attributes for IP address allocation, as a map in JSON format
     */
    public readonly extAttrs!: pulumi.Output<string | undefined>;
    /**
     * The host name for Host Record in FQDN format.
     */
    public readonly fqdn!: pulumi.Output<string>;
    public /*out*/ readonly internalId!: pulumi.Output<string>;
    /**
     * IPv4 address of cloud instance.Set a valid IP address for static allocation and leave empty if dynamically allocated.
     */
    public readonly ipv4Addr!: pulumi.Output<string | undefined>;
    /**
     * The IPv4 cidr from which an IPv4 address will be allocated.
     */
    public readonly ipv4Cidr!: pulumi.Output<string | undefined>;
    /**
     * IPv6 address of cloud instance.Set a valid IP address for static allocation and leave empty if dynamically allocated.
     */
    public readonly ipv6Addr!: pulumi.Output<string | undefined>;
    /**
     * The IPv6 cidr from which an IPv6 address will be allocated.
     */
    public readonly ipv6Cidr!: pulumi.Output<string | undefined>;
    /**
     * network view name on NIOS server.
     */
    public readonly networkView!: pulumi.Output<string | undefined>;
    /**
     * NIOS object's reference, not to be set by a user.
     */
    public /*out*/ readonly ref!: pulumi.Output<string>;
    /**
     * TTL attribute value for the record.
     */
    public readonly ttl!: pulumi.Output<number | undefined>;

    /**
     * Create a IpAllocation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpAllocationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpAllocationArgs | IpAllocationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpAllocationState | undefined;
            resourceInputs["allocatedIpv4Addr"] = state ? state.allocatedIpv4Addr : undefined;
            resourceInputs["allocatedIpv6Addr"] = state ? state.allocatedIpv6Addr : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["dnsView"] = state ? state.dnsView : undefined;
            resourceInputs["enableDns"] = state ? state.enableDns : undefined;
            resourceInputs["extAttrs"] = state ? state.extAttrs : undefined;
            resourceInputs["fqdn"] = state ? state.fqdn : undefined;
            resourceInputs["internalId"] = state ? state.internalId : undefined;
            resourceInputs["ipv4Addr"] = state ? state.ipv4Addr : undefined;
            resourceInputs["ipv4Cidr"] = state ? state.ipv4Cidr : undefined;
            resourceInputs["ipv6Addr"] = state ? state.ipv6Addr : undefined;
            resourceInputs["ipv6Cidr"] = state ? state.ipv6Cidr : undefined;
            resourceInputs["networkView"] = state ? state.networkView : undefined;
            resourceInputs["ref"] = state ? state.ref : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
        } else {
            const args = argsOrState as IpAllocationArgs | undefined;
            if ((!args || args.fqdn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fqdn'");
            }
            resourceInputs["allocatedIpv4Addr"] = args ? args.allocatedIpv4Addr : undefined;
            resourceInputs["allocatedIpv6Addr"] = args ? args.allocatedIpv6Addr : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["dnsView"] = args ? args.dnsView : undefined;
            resourceInputs["enableDns"] = args ? args.enableDns : undefined;
            resourceInputs["extAttrs"] = args ? args.extAttrs : undefined;
            resourceInputs["fqdn"] = args ? args.fqdn : undefined;
            resourceInputs["ipv4Addr"] = args ? args.ipv4Addr : undefined;
            resourceInputs["ipv4Cidr"] = args ? args.ipv4Cidr : undefined;
            resourceInputs["ipv6Addr"] = args ? args.ipv6Addr : undefined;
            resourceInputs["ipv6Cidr"] = args ? args.ipv6Cidr : undefined;
            resourceInputs["networkView"] = args ? args.networkView : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["internalId"] = undefined /*out*/;
            resourceInputs["ref"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpAllocation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IpAllocation resources.
 */
export interface IpAllocationState {
    /**
     * Value which comes from 'ipv4_addr' (if specified) or from auto-allocation function (using 'ipv4_cidr').
     */
    allocatedIpv4Addr?: pulumi.Input<string>;
    /**
     * Value which comes from 'ipv6_addr' (if specified) or from auto-allocation function (using 'ipv6_cidr').
     */
    allocatedIpv6Addr?: pulumi.Input<string>;
    /**
     * A description of IP address allocation.
     */
    comment?: pulumi.Input<string>;
    /**
     * DNS view under which the zone has been created.
     */
    dnsView?: pulumi.Input<string>;
    /**
     * flag that defines if the host record is to be used for DNS purposes.
     */
    enableDns?: pulumi.Input<boolean>;
    /**
     * The extensible attributes for IP address allocation, as a map in JSON format
     */
    extAttrs?: pulumi.Input<string>;
    /**
     * The host name for Host Record in FQDN format.
     */
    fqdn?: pulumi.Input<string>;
    internalId?: pulumi.Input<string>;
    /**
     * IPv4 address of cloud instance.Set a valid IP address for static allocation and leave empty if dynamically allocated.
     */
    ipv4Addr?: pulumi.Input<string>;
    /**
     * The IPv4 cidr from which an IPv4 address will be allocated.
     */
    ipv4Cidr?: pulumi.Input<string>;
    /**
     * IPv6 address of cloud instance.Set a valid IP address for static allocation and leave empty if dynamically allocated.
     */
    ipv6Addr?: pulumi.Input<string>;
    /**
     * The IPv6 cidr from which an IPv6 address will be allocated.
     */
    ipv6Cidr?: pulumi.Input<string>;
    /**
     * network view name on NIOS server.
     */
    networkView?: pulumi.Input<string>;
    /**
     * NIOS object's reference, not to be set by a user.
     */
    ref?: pulumi.Input<string>;
    /**
     * TTL attribute value for the record.
     */
    ttl?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a IpAllocation resource.
 */
export interface IpAllocationArgs {
    /**
     * Value which comes from 'ipv4_addr' (if specified) or from auto-allocation function (using 'ipv4_cidr').
     */
    allocatedIpv4Addr?: pulumi.Input<string>;
    /**
     * Value which comes from 'ipv6_addr' (if specified) or from auto-allocation function (using 'ipv6_cidr').
     */
    allocatedIpv6Addr?: pulumi.Input<string>;
    /**
     * A description of IP address allocation.
     */
    comment?: pulumi.Input<string>;
    /**
     * DNS view under which the zone has been created.
     */
    dnsView?: pulumi.Input<string>;
    /**
     * flag that defines if the host record is to be used for DNS purposes.
     */
    enableDns?: pulumi.Input<boolean>;
    /**
     * The extensible attributes for IP address allocation, as a map in JSON format
     */
    extAttrs?: pulumi.Input<string>;
    /**
     * The host name for Host Record in FQDN format.
     */
    fqdn: pulumi.Input<string>;
    /**
     * IPv4 address of cloud instance.Set a valid IP address for static allocation and leave empty if dynamically allocated.
     */
    ipv4Addr?: pulumi.Input<string>;
    /**
     * The IPv4 cidr from which an IPv4 address will be allocated.
     */
    ipv4Cidr?: pulumi.Input<string>;
    /**
     * IPv6 address of cloud instance.Set a valid IP address for static allocation and leave empty if dynamically allocated.
     */
    ipv6Addr?: pulumi.Input<string>;
    /**
     * The IPv6 cidr from which an IPv6 address will be allocated.
     */
    ipv6Cidr?: pulumi.Input<string>;
    /**
     * network view name on NIOS server.
     */
    networkView?: pulumi.Input<string>;
    /**
     * TTL attribute value for the record.
     */
    ttl?: pulumi.Input<number>;
}
