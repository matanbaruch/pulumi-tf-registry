// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IpAssociation extends pulumi.CustomResource {
    /**
     * Get an existing IpAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpAssociationState, opts?: pulumi.CustomResourceOptions): IpAssociation {
        return new IpAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'infoblox:index/ipAssociation:IpAssociation';

    /**
     * Returns true if the given object is an instance of IpAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpAssociation.__pulumiType;
    }

    /**
     * DHCP unique identifier for IPv6.
     */
    public readonly duid!: pulumi.Output<string | undefined>;
    /**
     * The flag which defines if the host record is to be used for IPAM purposes.
     */
    public readonly enableDhcp!: pulumi.Output<boolean | undefined>;
    /**
     * This value must point to the ID of the appropriate allocation resource. Required on resource creation.
     */
    public readonly internalId!: pulumi.Output<string | undefined>;
    /**
     * MAC address of a cloud instance.
     */
    public readonly macAddr!: pulumi.Output<string | undefined>;
    /**
     * NIOS object's reference, not to be set by a user.
     */
    public /*out*/ readonly ref!: pulumi.Output<string>;

    /**
     * Create a IpAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IpAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpAssociationArgs | IpAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpAssociationState | undefined;
            resourceInputs["duid"] = state ? state.duid : undefined;
            resourceInputs["enableDhcp"] = state ? state.enableDhcp : undefined;
            resourceInputs["internalId"] = state ? state.internalId : undefined;
            resourceInputs["macAddr"] = state ? state.macAddr : undefined;
            resourceInputs["ref"] = state ? state.ref : undefined;
        } else {
            const args = argsOrState as IpAssociationArgs | undefined;
            resourceInputs["duid"] = args ? args.duid : undefined;
            resourceInputs["enableDhcp"] = args ? args.enableDhcp : undefined;
            resourceInputs["internalId"] = args ? args.internalId : undefined;
            resourceInputs["macAddr"] = args ? args.macAddr : undefined;
            resourceInputs["ref"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpAssociation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IpAssociation resources.
 */
export interface IpAssociationState {
    /**
     * DHCP unique identifier for IPv6.
     */
    duid?: pulumi.Input<string>;
    /**
     * The flag which defines if the host record is to be used for IPAM purposes.
     */
    enableDhcp?: pulumi.Input<boolean>;
    /**
     * This value must point to the ID of the appropriate allocation resource. Required on resource creation.
     */
    internalId?: pulumi.Input<string>;
    /**
     * MAC address of a cloud instance.
     */
    macAddr?: pulumi.Input<string>;
    /**
     * NIOS object's reference, not to be set by a user.
     */
    ref?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpAssociation resource.
 */
export interface IpAssociationArgs {
    /**
     * DHCP unique identifier for IPv6.
     */
    duid?: pulumi.Input<string>;
    /**
     * The flag which defines if the host record is to be used for IPAM purposes.
     */
    enableDhcp?: pulumi.Input<boolean>;
    /**
     * This value must point to the ID of the appropriate allocation resource. Required on resource creation.
     */
    internalId?: pulumi.Input<string>;
    /**
     * MAC address of a cloud instance.
     */
    macAddr?: pulumi.Input<string>;
}
