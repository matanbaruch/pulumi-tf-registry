// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FixedAddress extends pulumi.CustomResource {
    /**
     * Get an existing FixedAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FixedAddressState, opts?: pulumi.CustomResourceOptions): FixedAddress {
        return new FixedAddress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'infoblox:index/fixedAddress:FixedAddress';

    /**
     * Returns true if the given object is an instance of FixedAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FixedAddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FixedAddress.__pulumiType;
    }

    /**
     * The network to which this fixed address belongs, in IPv4 Address/CIDR format.
     */
    public readonly cidr!: pulumi.Output<string>;
    /**
     * Comment for the fixed address; maximum 256 characters.
     */
    public readonly comment!: pulumi.Output<string>;
    /**
     * Determines whether a fixed address is disabled or not. When this is set to False, the fixed address is enabled.
     */
    public readonly disable!: pulumi.Output<boolean | undefined>;
    /**
     * Extensible attributes of fixed address (Values are JSON encoded).
     */
    public readonly extensibleAttributes!: pulumi.Output<{[key: string]: string}>;
    /**
     * Ref for grid needed for restarting services.
     */
    public readonly gridRef!: pulumi.Output<string | undefined>;
    /**
     * This field contains the name of this fixed address.
     */
    public readonly hostname!: pulumi.Output<string>;
    /**
     * The IPv4 Address of the fixed address.
     */
    public readonly ipAddress!: pulumi.Output<string>;
    /**
     * The MAC address value for this fixed address.
     */
    public readonly mac!: pulumi.Output<string>;
    /**
     * The match_client value for this fixed address.
     */
    public readonly matchClient!: pulumi.Output<string>;
    /**
     * Grid member associated with fixed address.
     */
    public readonly member!: pulumi.Output<outputs.FixedAddressMember>;
    /**
     * The name of the network view in which this fixed address resides.
     */
    public readonly networkView!: pulumi.Output<string>;
    /**
     * An array of DHCP option structs that lists the DHCP options associated with the object.
     */
    public readonly options!: pulumi.Output<outputs.FixedAddressOption[] | undefined>;
    /**
     * Range start and end string for next_available_ip function calls.
     */
    public readonly rangeFunctionString!: pulumi.Output<string | undefined>;
    /**
     * Reference id of fixed address object.
     */
    public /*out*/ readonly ref!: pulumi.Output<string>;
    /**
     * Restart dhcp services if needed.
     */
    public readonly restartIfNeeded!: pulumi.Output<boolean | undefined>;

    /**
     * Create a FixedAddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FixedAddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FixedAddressArgs | FixedAddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FixedAddressState | undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["disable"] = state ? state.disable : undefined;
            resourceInputs["extensibleAttributes"] = state ? state.extensibleAttributes : undefined;
            resourceInputs["gridRef"] = state ? state.gridRef : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["mac"] = state ? state.mac : undefined;
            resourceInputs["matchClient"] = state ? state.matchClient : undefined;
            resourceInputs["member"] = state ? state.member : undefined;
            resourceInputs["networkView"] = state ? state.networkView : undefined;
            resourceInputs["options"] = state ? state.options : undefined;
            resourceInputs["rangeFunctionString"] = state ? state.rangeFunctionString : undefined;
            resourceInputs["ref"] = state ? state.ref : undefined;
            resourceInputs["restartIfNeeded"] = state ? state.restartIfNeeded : undefined;
        } else {
            const args = argsOrState as FixedAddressArgs | undefined;
            if ((!args || args.member === undefined) && !opts.urn) {
                throw new Error("Missing required property 'member'");
            }
            resourceInputs["cidr"] = args ? args.cidr : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disable"] = args ? args.disable : undefined;
            resourceInputs["extensibleAttributes"] = args ? args.extensibleAttributes : undefined;
            resourceInputs["gridRef"] = args ? args.gridRef : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["mac"] = args ? args.mac : undefined;
            resourceInputs["matchClient"] = args ? args.matchClient : undefined;
            resourceInputs["member"] = args ? args.member : undefined;
            resourceInputs["networkView"] = args ? args.networkView : undefined;
            resourceInputs["options"] = args ? args.options : undefined;
            resourceInputs["rangeFunctionString"] = args ? args.rangeFunctionString : undefined;
            resourceInputs["restartIfNeeded"] = args ? args.restartIfNeeded : undefined;
            resourceInputs["ref"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FixedAddress.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FixedAddress resources.
 */
export interface FixedAddressState {
    /**
     * The network to which this fixed address belongs, in IPv4 Address/CIDR format.
     */
    cidr?: pulumi.Input<string>;
    /**
     * Comment for the fixed address; maximum 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Determines whether a fixed address is disabled or not. When this is set to False, the fixed address is enabled.
     */
    disable?: pulumi.Input<boolean>;
    /**
     * Extensible attributes of fixed address (Values are JSON encoded).
     */
    extensibleAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Ref for grid needed for restarting services.
     */
    gridRef?: pulumi.Input<string>;
    /**
     * This field contains the name of this fixed address.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The IPv4 Address of the fixed address.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The MAC address value for this fixed address.
     */
    mac?: pulumi.Input<string>;
    /**
     * The match_client value for this fixed address.
     */
    matchClient?: pulumi.Input<string>;
    /**
     * Grid member associated with fixed address.
     */
    member?: pulumi.Input<inputs.FixedAddressMember>;
    /**
     * The name of the network view in which this fixed address resides.
     */
    networkView?: pulumi.Input<string>;
    /**
     * An array of DHCP option structs that lists the DHCP options associated with the object.
     */
    options?: pulumi.Input<pulumi.Input<inputs.FixedAddressOption>[]>;
    /**
     * Range start and end string for next_available_ip function calls.
     */
    rangeFunctionString?: pulumi.Input<string>;
    /**
     * Reference id of fixed address object.
     */
    ref?: pulumi.Input<string>;
    /**
     * Restart dhcp services if needed.
     */
    restartIfNeeded?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a FixedAddress resource.
 */
export interface FixedAddressArgs {
    /**
     * The network to which this fixed address belongs, in IPv4 Address/CIDR format.
     */
    cidr?: pulumi.Input<string>;
    /**
     * Comment for the fixed address; maximum 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Determines whether a fixed address is disabled or not. When this is set to False, the fixed address is enabled.
     */
    disable?: pulumi.Input<boolean>;
    /**
     * Extensible attributes of fixed address (Values are JSON encoded).
     */
    extensibleAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Ref for grid needed for restarting services.
     */
    gridRef?: pulumi.Input<string>;
    /**
     * This field contains the name of this fixed address.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The IPv4 Address of the fixed address.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The MAC address value for this fixed address.
     */
    mac?: pulumi.Input<string>;
    /**
     * The match_client value for this fixed address.
     */
    matchClient?: pulumi.Input<string>;
    /**
     * Grid member associated with fixed address.
     */
    member: pulumi.Input<inputs.FixedAddressMember>;
    /**
     * The name of the network view in which this fixed address resides.
     */
    networkView?: pulumi.Input<string>;
    /**
     * An array of DHCP option structs that lists the DHCP options associated with the object.
     */
    options?: pulumi.Input<pulumi.Input<inputs.FixedAddressOption>[]>;
    /**
     * Range start and end string for next_available_ip function calls.
     */
    rangeFunctionString?: pulumi.Input<string>;
    /**
     * Restart dhcp services if needed.
     */
    restartIfNeeded?: pulumi.Input<boolean>;
}
