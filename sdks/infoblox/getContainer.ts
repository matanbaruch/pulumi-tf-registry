// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getContainer(args?: GetContainerArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("infoblox:index/getContainer:getContainer", {
        "cidr": args.cidr,
        "id": args.id,
        "ref": args.ref,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContainer.
 */
export interface GetContainerArgs {
    cidr?: string;
    id?: string;
    ref?: string;
}

/**
 * A collection of values returned by getContainer.
 */
export interface GetContainerResult {
    readonly cidr?: string;
    readonly comment: string;
    readonly extensibleAttributes: {[key: string]: string};
    readonly id: string;
    readonly networkView: string;
    readonly ref?: string;
}
export function getContainerOutput(args?: GetContainerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerResult> {
    return pulumi.output(args).apply((a: any) => getContainer(a, opts))
}

/**
 * A collection of arguments for invoking getContainer.
 */
export interface GetContainerOutputArgs {
    cidr?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ref?: pulumi.Input<string>;
}
