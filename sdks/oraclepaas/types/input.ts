// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ApplicationContainerDeployment {
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    instances?: pulumi.Input<number>;
    javaSystemProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    memory?: pulumi.Input<string>;
    notes?: pulumi.Input<string>;
    secureEnvironments?: pulumi.Input<pulumi.Input<string>[]>;
    services?: pulumi.Input<pulumi.Input<inputs.ApplicationContainerDeploymentService>[]>;
}

export interface ApplicationContainerDeploymentService {
    identifier: pulumi.Input<string>;
    name: pulumi.Input<string>;
    password: pulumi.Input<string>;
    type: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface ApplicationContainerManifest {
    clustered?: pulumi.Input<boolean>;
    command?: pulumi.Input<string>;
    healthCheckEndpoint?: pulumi.Input<string>;
    home?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    notes?: pulumi.Input<string>;
    release?: pulumi.Input<inputs.ApplicationContainerManifestRelease>;
    runtime?: pulumi.Input<inputs.ApplicationContainerManifestRuntime>;
    shutdownTime?: pulumi.Input<number>;
    startupTime?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
}

export interface ApplicationContainerManifestRelease {
    build?: pulumi.Input<string>;
    commit?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface ApplicationContainerManifestRuntime {
    majorVersion: pulumi.Input<string>;
}

export interface ApplicationContainerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface DatabaseAccessRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface DatabaseServiceInstanceBackups {
    cloudStorageContainer: pulumi.Input<string>;
    cloudStoragePassword?: pulumi.Input<string>;
    cloudStorageUsername?: pulumi.Input<string>;
    createIfMissing?: pulumi.Input<boolean>;
}

export interface DatabaseServiceInstanceDatabaseConfiguration {
    adminPassword: pulumi.Input<string>;
    backupDestination?: pulumi.Input<string>;
    backupStorageVolumeSize?: pulumi.Input<number>;
    characterSet?: pulumi.Input<string>;
    dataStorageVolumeSize?: pulumi.Input<number>;
    dbDemo?: pulumi.Input<string>;
    disasterRecovery?: pulumi.Input<boolean>;
    failoverDatabase?: pulumi.Input<boolean>;
    goldenGate?: pulumi.Input<boolean>;
    isRac?: pulumi.Input<boolean>;
    nationalCharacterSet?: pulumi.Input<string>;
    pdbName?: pulumi.Input<string>;
    sid?: pulumi.Input<string>;
    snapshotName?: pulumi.Input<string>;
    sourceServiceName?: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    usableStorage: pulumi.Input<number>;
}

export interface DatabaseServiceInstanceDefaultAccessRules {
    enableDbConsole?: pulumi.Input<boolean>;
    enableDbExpress?: pulumi.Input<boolean>;
    enableDbListener?: pulumi.Input<boolean>;
    enableEmConsole?: pulumi.Input<boolean>;
    enableHttp?: pulumi.Input<boolean>;
    enableHttpSsl?: pulumi.Input<boolean>;
    enableRacDbListener?: pulumi.Input<boolean>;
    enableRacOns?: pulumi.Input<boolean>;
    enableScanListener?: pulumi.Input<boolean>;
    enableSsh?: pulumi.Input<boolean>;
}

export interface DatabaseServiceInstanceHybridDisasterRecovery {
    cloudStorageContainer: pulumi.Input<string>;
    cloudStoragePassword?: pulumi.Input<string>;
    cloudStorageUsername?: pulumi.Input<string>;
}

export interface DatabaseServiceInstanceInstantiateFromBackup {
    cloudStorageContainer: pulumi.Input<string>;
    cloudStoragePassword?: pulumi.Input<string>;
    cloudStorageUsername?: pulumi.Input<string>;
    databaseId: pulumi.Input<string>;
    decryptionKey?: pulumi.Input<string>;
    onPremise?: pulumi.Input<boolean>;
    serviceId?: pulumi.Input<string>;
    walletFileContent?: pulumi.Input<string>;
}

export interface DatabaseServiceInstanceStandby {
    availabilityDomain: pulumi.Input<string>;
    subnet: pulumi.Input<string>;
}

export interface DatabaseServiceInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface JavaAccessRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface JavaServiceInstanceBackups {
    autoGenerate?: pulumi.Input<boolean>;
    cloudStorageContainer: pulumi.Input<string>;
    cloudStoragePassword?: pulumi.Input<string>;
    cloudStorageUsername?: pulumi.Input<string>;
    useOauthForStorage?: pulumi.Input<boolean>;
}

export interface JavaServiceInstanceLoadBalancer {
    adminUrl?: pulumi.Input<string>;
    consoleUrl?: pulumi.Input<string>;
    loadBalancingPolicy?: pulumi.Input<string>;
    subnets?: pulumi.Input<pulumi.Input<string>[]>;
    url?: pulumi.Input<string>;
}

export interface JavaServiceInstanceOracleTrafficDirector {
    admin: pulumi.Input<inputs.JavaServiceInstanceOracleTrafficDirectorAdmin>;
    highAvailability?: pulumi.Input<boolean>;
    ipReservations?: pulumi.Input<pulumi.Input<string>[]>;
    listener?: pulumi.Input<inputs.JavaServiceInstanceOracleTrafficDirectorListener>;
    loadBalancingPolicy?: pulumi.Input<string>;
    rootUrl?: pulumi.Input<string>;
    shape: pulumi.Input<string>;
}

export interface JavaServiceInstanceOracleTrafficDirectorAdmin {
    hostname?: pulumi.Input<string>;
    password: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    username: pulumi.Input<string>;
}

export interface JavaServiceInstanceOracleTrafficDirectorListener {
    port?: pulumi.Input<number>;
    privilegedPort?: pulumi.Input<number>;
    privilegedSecuredPort?: pulumi.Input<number>;
    securedPort?: pulumi.Input<number>;
}

export interface JavaServiceInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface JavaServiceInstanceWeblogicServer {
    admin: pulumi.Input<inputs.JavaServiceInstanceWeblogicServerAdmin>;
    applicationDatabases?: pulumi.Input<pulumi.Input<inputs.JavaServiceInstanceWeblogicServerApplicationDatabase>[]>;
    backupVolumeSize?: pulumi.Input<string>;
    clusterName?: pulumi.Input<string>;
    clusters?: pulumi.Input<pulumi.Input<inputs.JavaServiceInstanceWeblogicServerCluster>[]>;
    connectString?: pulumi.Input<string>;
    database: pulumi.Input<inputs.JavaServiceInstanceWeblogicServerDatabase>;
    domain?: pulumi.Input<inputs.JavaServiceInstanceWeblogicServerDomain>;
    ipReservations?: pulumi.Input<pulumi.Input<string>[]>;
    managedServers?: pulumi.Input<inputs.JavaServiceInstanceWeblogicServerManagedServers>;
    middlewareVolumeSize?: pulumi.Input<string>;
    nodeManager?: pulumi.Input<inputs.JavaServiceInstanceWeblogicServerNodeManager>;
    ports?: pulumi.Input<inputs.JavaServiceInstanceWeblogicServerPorts>;
    rootUrl?: pulumi.Input<string>;
    shape: pulumi.Input<string>;
    upperStackProductName?: pulumi.Input<string>;
}

export interface JavaServiceInstanceWeblogicServerAdmin {
    hostname?: pulumi.Input<string>;
    password: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    securedPort?: pulumi.Input<number>;
    username: pulumi.Input<string>;
}

export interface JavaServiceInstanceWeblogicServerApplicationDatabase {
    name: pulumi.Input<string>;
    password: pulumi.Input<string>;
    pdbName?: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface JavaServiceInstanceWeblogicServerCluster {
    name: pulumi.Input<string>;
    pathPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serverCount?: pulumi.Input<number>;
    serversPerNode?: pulumi.Input<number>;
    shape?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface JavaServiceInstanceWeblogicServerDatabase {
    hostname?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    password: pulumi.Input<string>;
    pdbName?: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface JavaServiceInstanceWeblogicServerDomain {
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    partitionCount?: pulumi.Input<number>;
    volumeSize?: pulumi.Input<string>;
}

export interface JavaServiceInstanceWeblogicServerManagedServers {
    initialHeapSize?: pulumi.Input<number>;
    initialPermanentGeneration?: pulumi.Input<number>;
    jvmArgs?: pulumi.Input<string>;
    maxHeapSize?: pulumi.Input<number>;
    maxPermanentGeneration?: pulumi.Input<number>;
    overwriteJvmArgs?: pulumi.Input<boolean>;
    serverCount?: pulumi.Input<number>;
}

export interface JavaServiceInstanceWeblogicServerNodeManager {
    password?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    username?: pulumi.Input<string>;
}

export interface JavaServiceInstanceWeblogicServerPorts {
    contentPort?: pulumi.Input<number>;
    deploymentChannelPort?: pulumi.Input<number>;
    privilegedContentPort?: pulumi.Input<number>;
    privilegedSecuredContentPort?: pulumi.Input<number>;
}

export interface MysqlAccessRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface MysqlServiceInstanceBackups {
    cloudStorageContainer: pulumi.Input<string>;
    cloudStoragePassword?: pulumi.Input<string>;
    cloudStorageUsername?: pulumi.Input<string>;
    createIfMissing?: pulumi.Input<boolean>;
}

export interface MysqlServiceInstanceMysqlConfiguration {
    connectString?: pulumi.Input<string>;
    dbName?: pulumi.Input<string>;
    dbStorage?: pulumi.Input<number>;
    enterpriseMonitorConfiguration?: pulumi.Input<inputs.MysqlServiceInstanceMysqlConfigurationEnterpriseMonitorConfiguration>;
    ipAddress?: pulumi.Input<string>;
    mysqlCharset?: pulumi.Input<string>;
    mysqlCollation?: pulumi.Input<string>;
    mysqlPassword?: pulumi.Input<string>;
    mysqlPort?: pulumi.Input<number>;
    mysqlUsername?: pulumi.Input<string>;
    publicIpAddress?: pulumi.Input<string>;
    snapshotName?: pulumi.Input<string>;
    sourceServiceName?: pulumi.Input<string>;
}

export interface MysqlServiceInstanceMysqlConfigurationEnterpriseMonitorConfiguration {
    emAgentPassword?: pulumi.Input<string>;
    emAgentUsername?: pulumi.Input<string>;
    emPassword?: pulumi.Input<string>;
    emPort?: pulumi.Input<number>;
    emUsername?: pulumi.Input<string>;
}

export interface MysqlServiceInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}
