// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatabaseServiceInstance(args: GetDatabaseServiceInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseServiceInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oraclepaas:index/getDatabaseServiceInstance:getDatabaseServiceInstance", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseServiceInstance.
 */
export interface GetDatabaseServiceInstanceArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getDatabaseServiceInstance.
 */
export interface GetDatabaseServiceInstanceResult {
    readonly apexUrl: string;
    readonly availabilityDomain: string;
    readonly backupDestination: string;
    readonly bringYourOwnLicense: boolean;
    readonly characterSet: string;
    readonly cloudStorageContainer: string;
    readonly computeSiteName: string;
    readonly description: string;
    readonly edition: string;
    readonly enterpriseManagerUrl: string;
    readonly failoverDatabase: boolean;
    readonly glassfishUrl: string;
    readonly highPerformanceStorage: boolean;
    readonly hybridDisasterRecoveryIp: string;
    readonly id: string;
    readonly identityDomain: string;
    readonly ipNetwork: string;
    readonly ipReservations: string;
    readonly level: string;
    readonly listenerPort: number;
    readonly monitorUrl: string;
    readonly name: string;
    readonly nationalCharacterSet: string;
    readonly pluggableDatabaseName: string;
    readonly region: string;
    readonly shape: string;
    readonly uri: string;
    readonly version: string;
}
export function getDatabaseServiceInstanceOutput(args: GetDatabaseServiceInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseServiceInstanceResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseServiceInstance(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseServiceInstance.
 */
export interface GetDatabaseServiceInstanceOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
