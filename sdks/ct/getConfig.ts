// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConfig(args: GetConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ct:index/getConfig:getConfig", {
        "content": args.content,
        "id": args.id,
        "prettyPrint": args.prettyPrint,
        "snippets": args.snippets,
        "strict": args.strict,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConfig.
 */
export interface GetConfigArgs {
    content: string;
    id?: string;
    prettyPrint?: boolean;
    snippets?: string[];
    strict?: boolean;
}

/**
 * A collection of values returned by getConfig.
 */
export interface GetConfigResult {
    readonly content: string;
    readonly id: string;
    readonly prettyPrint?: boolean;
    readonly rendered: string;
    readonly snippets?: string[];
    readonly strict?: boolean;
}
export function getConfigOutput(args: GetConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigResult> {
    return pulumi.output(args).apply((a: any) => getConfig(a, opts))
}

/**
 * A collection of arguments for invoking getConfig.
 */
export interface GetConfigOutputArgs {
    content: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    prettyPrint?: pulumi.Input<boolean>;
    snippets?: pulumi.Input<pulumi.Input<string>[]>;
    strict?: pulumi.Input<boolean>;
}
