// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIncomingWebhook(args: GetIncomingWebhookArgs, opts?: pulumi.InvokeOptions): Promise<GetIncomingWebhookResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("better-uptime:index/getIncomingWebhook:getIncomingWebhook", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIncomingWebhook.
 */
export interface GetIncomingWebhookArgs {
    name: string;
}

/**
 * A collection of values returned by getIncomingWebhook.
 */
export interface GetIncomingWebhookResult {
    readonly acknowledgedAlertIdFields: outputs.GetIncomingWebhookAcknowledgedAlertIdField[];
    readonly acknowledgedRuleType: string;
    readonly acknowledgedRules: outputs.GetIncomingWebhookAcknowledgedRule[];
    readonly call: boolean;
    readonly causeFields: outputs.GetIncomingWebhookCauseField[];
    readonly createdAt: string;
    readonly email: boolean;
    readonly id: string;
    readonly name: string;
    readonly otherAcknowledgedFields: outputs.GetIncomingWebhookOtherAcknowledgedField[];
    readonly otherResolvedFields: outputs.GetIncomingWebhookOtherResolvedField[];
    readonly otherStartedFields: outputs.GetIncomingWebhookOtherStartedField[];
    readonly paused: boolean;
    readonly policyId: string;
    readonly push: boolean;
    readonly recoveryPeriod: number;
    readonly resolvedAlertIdFields: outputs.GetIncomingWebhookResolvedAlertIdField[];
    readonly resolvedRuleType: string;
    readonly resolvedRules: outputs.GetIncomingWebhookResolvedRule[];
    readonly sampleBody: string;
    readonly sampleHeaders: string;
    readonly sampleQueryString: string;
    readonly sms: boolean;
    readonly startedAlertIdFields: outputs.GetIncomingWebhookStartedAlertIdField[];
    readonly startedRuleType: string;
    readonly startedRules: outputs.GetIncomingWebhookStartedRule[];
    readonly teamWait: number;
    readonly titleFields: outputs.GetIncomingWebhookTitleField[];
    readonly updatedAt: string;
    readonly url: string;
}
export function getIncomingWebhookOutput(args: GetIncomingWebhookOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIncomingWebhookResult> {
    return pulumi.output(args).apply((a: any) => getIncomingWebhook(a, opts))
}

/**
 * A collection of arguments for invoking getIncomingWebhook.
 */
export interface GetIncomingWebhookOutputArgs {
    name: pulumi.Input<string>;
}
