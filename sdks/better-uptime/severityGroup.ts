// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SeverityGroup extends pulumi.CustomResource {
    /**
     * Get an existing SeverityGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SeverityGroupState, opts?: pulumi.CustomResourceOptions): SeverityGroup {
        return new SeverityGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'better-uptime:index/severityGroup:SeverityGroup';

    /**
     * Returns true if the given object is an instance of SeverityGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SeverityGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SeverityGroup.__pulumiType;
    }

    /**
     * The time when this severity group was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * A name of the group that you can see in the dashboard.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Set sort_index to specify how to sort your severity groups.
     */
    public readonly sortIndex!: pulumi.Output<number>;
    /**
     * Used to specify the team the resource should be created in when using global tokens.
     */
    public readonly teamName!: pulumi.Output<string | undefined>;
    /**
     * The time when this severity group was updated.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a SeverityGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SeverityGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SeverityGroupArgs | SeverityGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SeverityGroupState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sortIndex"] = state ? state.sortIndex : undefined;
            resourceInputs["teamName"] = state ? state.teamName : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as SeverityGroupArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sortIndex"] = args ? args.sortIndex : undefined;
            resourceInputs["teamName"] = args ? args.teamName : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SeverityGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SeverityGroup resources.
 */
export interface SeverityGroupState {
    /**
     * The time when this severity group was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * A name of the group that you can see in the dashboard.
     */
    name?: pulumi.Input<string>;
    /**
     * Set sort_index to specify how to sort your severity groups.
     */
    sortIndex?: pulumi.Input<number>;
    /**
     * Used to specify the team the resource should be created in when using global tokens.
     */
    teamName?: pulumi.Input<string>;
    /**
     * The time when this severity group was updated.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SeverityGroup resource.
 */
export interface SeverityGroupArgs {
    /**
     * A name of the group that you can see in the dashboard.
     */
    name?: pulumi.Input<string>;
    /**
     * Set sort_index to specify how to sort your severity groups.
     */
    sortIndex?: pulumi.Input<number>;
    /**
     * Used to specify the team the resource should be created in when using global tokens.
     */
    teamName?: pulumi.Input<string>;
}
