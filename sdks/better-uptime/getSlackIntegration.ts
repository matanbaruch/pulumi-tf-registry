// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSlackIntegration(args: GetSlackIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetSlackIntegrationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("better-uptime:index/getSlackIntegration:getSlackIntegration", {
        "slackChannelName": args.slackChannelName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSlackIntegration.
 */
export interface GetSlackIntegrationArgs {
    slackChannelName: string;
}

/**
 * A collection of values returned by getSlackIntegration.
 */
export interface GetSlackIntegrationResult {
    readonly id: string;
    readonly integrationType: string;
    readonly onCallNotifications: boolean;
    readonly slackChannelId: string;
    readonly slackChannelName: string;
    readonly slackStatus: string;
    readonly slackTeamId: string;
    readonly slackTeamName: string;
}
export function getSlackIntegrationOutput(args: GetSlackIntegrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSlackIntegrationResult> {
    return pulumi.output(args).apply((a: any) => getSlackIntegration(a, opts))
}

/**
 * A collection of arguments for invoking getSlackIntegration.
 */
export interface GetSlackIntegrationOutputArgs {
    slackChannelName: pulumi.Input<string>;
}
