// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpList(args?: GetIpListArgs, opts?: pulumi.InvokeOptions): Promise<GetIpListResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("better-uptime:index/getIpList:getIpList", {
        "filterClusters": args.filterClusters,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpList.
 */
export interface GetIpListArgs {
    filterClusters?: string[];
}

/**
 * A collection of values returned by getIpList.
 */
export interface GetIpListResult {
    readonly allClusters: string[];
    readonly filterClusters?: string[];
    readonly id: string;
    readonly ips: string[];
}
export function getIpListOutput(args?: GetIpListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpListResult> {
    return pulumi.output(args).apply((a: any) => getIpList(a, opts))
}

/**
 * A collection of arguments for invoking getIpList.
 */
export interface GetIpListOutputArgs {
    filterClusters?: pulumi.Input<pulumi.Input<string>[]>;
}
