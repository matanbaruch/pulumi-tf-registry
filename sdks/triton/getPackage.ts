// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPackage(args: GetPackageArgs, opts?: pulumi.InvokeOptions): Promise<GetPackageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("triton:index/getPackage:getPackage", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPackage.
 */
export interface GetPackageArgs {
    filters: inputs.GetPackageFilter[];
    id?: string;
}

/**
 * A collection of values returned by getPackage.
 */
export interface GetPackageResult {
    readonly disk: number;
    readonly filters: outputs.GetPackageFilter[];
    readonly group: string;
    readonly id: string;
    readonly lwps: number;
    readonly memory: number;
    readonly name: string;
    readonly swap: number;
    readonly vcpus: number;
    readonly version: string;
}
export function getPackageOutput(args: GetPackageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPackageResult> {
    return pulumi.output(args).apply((a: any) => getPackage(a, opts))
}

/**
 * A collection of arguments for invoking getPackage.
 */
export interface GetPackageOutputArgs {
    filters: pulumi.Input<pulumi.Input<inputs.GetPackageFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
