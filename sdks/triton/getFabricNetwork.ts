// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFabricNetwork(args: GetFabricNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricNetworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("triton:index/getFabricNetwork:getFabricNetwork", {
        "id": args.id,
        "name": args.name,
        "vlanId": args.vlanId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricNetwork.
 */
export interface GetFabricNetworkArgs {
    id?: string;
    name: string;
    vlanId: number;
}

/**
 * A collection of values returned by getFabricNetwork.
 */
export interface GetFabricNetworkResult {
    readonly description: string;
    readonly fabric: boolean;
    readonly gateway: string;
    readonly id: string;
    readonly internetNat: boolean;
    readonly name: string;
    readonly provisionEndIp: string;
    readonly provisionStartIp: string;
    readonly public: boolean;
    readonly resolvers: string[];
    readonly routes: {[key: string]: string};
    readonly subnet: string;
    readonly vlanId: number;
}
export function getFabricNetworkOutput(args: GetFabricNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricNetworkResult> {
    return pulumi.output(args).apply((a: any) => getFabricNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getFabricNetwork.
 */
export interface GetFabricNetworkOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    vlanId: pulumi.Input<number>;
}
