// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ProjectAdminPrivilege {
    /**
     * Enables a project admin to define the resources to be indexed by Xray
     */
    indexResources: boolean;
    /**
     * Allows the Project Admin to manage Platform users/groups as project members with different roles.
     */
    manageMembers: boolean;
    /**
     * Allows the Project Admin to manage resources - repositories, builds and Pipelines resources on the project level.
     */
    manageResources: boolean;
}

export interface ProjectGroup {
    /**
     * Must be existing Artifactory group
     */
    name: string;
    /**
     * List of pre-defined Project or custom roles
     */
    roles: string[];
}

export interface ProjectMember {
    /**
     * Must be existing Artifactory user
     */
    name: string;
    /**
     * List of pre-defined Project or custom roles
     */
    roles: string[];
}

export interface ProjectRole {
    /**
     * List of pre-defined actions (READ_REPOSITORY, ANNOTATE_REPOSITORY, DEPLOY_CACHE_REPOSITORY, DELETE_OVERWRITE_REPOSITORY, MANAGE_XRAY_MD_REPOSITORY, READ_RELEASE_BUNDLE, ANNOTATE_RELEASE_BUNDLE, CREATE_RELEASE_BUNDLE, DISTRIBUTE_RELEASE_BUNDLE, DELETE_RELEASE_BUNDLE, MANAGE_XRAY_MD_RELEASE_BUNDLE, READ_BUILD, ANNOTATE_BUILD, DEPLOY_BUILD, DELETE_BUILD, MANAGE_XRAY_MD_BUILD, READ_SOURCES_PIPELINE, TRIGGER_PIPELINE, READ_INTEGRATIONS_PIPELINE, READ_POOLS_PIPELINE, MANAGE_INTEGRATIONS_PIPELINE, MANAGE_SOURCES_PIPELINE, MANAGE_POOLS_PIPELINE, TRIGGER_SECURITY, ISSUES_SECURITY, LICENCES_SECURITY, REPORTS_SECURITY, WATCHES_SECURITY, POLICIES_SECURITY, RULES_SECURITY, MANAGE_MEMBERS, MANAGE_RESOURCES)
     */
    actions: string[];
    description?: string;
    /**
     * A repository can be available in different environments. Members with roles defined in the set environment will have access to the repository. List of pre-defined environments (DEV, PROD)
     */
    environments: string[];
    name: string;
    /**
     * Type of role. Only "CUSTOM" is supported
     */
    type?: string;
}

