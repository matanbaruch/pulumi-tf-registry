// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNotificationDestination(args?: GetNotificationDestinationArgs, opts?: pulumi.InvokeOptions): Promise<GetNotificationDestinationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("newrelic:index/getNotificationDestination:getNotificationDestination", {
        "accountId": args.accountId,
        "id": args.id,
        "name": args.name,
        "secureUrls": args.secureUrls,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNotificationDestination.
 */
export interface GetNotificationDestinationArgs {
    accountId?: number;
    id?: string;
    name?: string;
    secureUrls?: inputs.GetNotificationDestinationSecureUrl[];
}

/**
 * A collection of values returned by getNotificationDestination.
 */
export interface GetNotificationDestinationResult {
    readonly accountId: number;
    readonly active: boolean;
    readonly guid: string;
    readonly id?: string;
    readonly name?: string;
    readonly properties: outputs.GetNotificationDestinationProperty[];
    readonly secureUrls?: outputs.GetNotificationDestinationSecureUrl[];
    readonly status: string;
    readonly type: string;
}
export function getNotificationDestinationOutput(args?: GetNotificationDestinationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNotificationDestinationResult> {
    return pulumi.output(args).apply((a: any) => getNotificationDestination(a, opts))
}

/**
 * A collection of arguments for invoking getNotificationDestination.
 */
export interface GetNotificationDestinationOutputArgs {
    accountId?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    secureUrls?: pulumi.Input<pulumi.Input<inputs.GetNotificationDestinationSecureUrlArgs>[]>;
}
