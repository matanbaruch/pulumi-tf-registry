// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAlertPolicy(args: GetAlertPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetAlertPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("newrelic:index/getAlertPolicy:getAlertPolicy", {
        "accountId": args.accountId,
        "id": args.id,
        "incidentPreference": args.incidentPreference,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAlertPolicy.
 */
export interface GetAlertPolicyArgs {
    accountId?: number;
    id?: string;
    incidentPreference?: string;
    name: string;
}

/**
 * A collection of values returned by getAlertPolicy.
 */
export interface GetAlertPolicyResult {
    readonly accountId: number;
    readonly createdAt: string;
    readonly id: string;
    readonly incidentPreference?: string;
    readonly name: string;
    readonly updatedAt: string;
}
export function getAlertPolicyOutput(args: GetAlertPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlertPolicyResult> {
    return pulumi.output(args).apply((a: any) => getAlertPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getAlertPolicy.
 */
export interface GetAlertPolicyOutputArgs {
    accountId?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    incidentPreference?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
