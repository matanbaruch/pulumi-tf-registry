// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CloudAwsGovcloudLinkAccount extends pulumi.CustomResource {
    /**
     * Get an existing CloudAwsGovcloudLinkAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudAwsGovcloudLinkAccountState, opts?: pulumi.CustomResourceOptions): CloudAwsGovcloudLinkAccount {
        return new CloudAwsGovcloudLinkAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'newrelic:index/cloudAwsGovcloudLinkAccount:CloudAwsGovcloudLinkAccount';

    /**
     * Returns true if the given object is an instance of CloudAwsGovcloudLinkAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudAwsGovcloudLinkAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudAwsGovcloudLinkAccount.__pulumiType;
    }

    /**
     * access-key-id of awsGovcloud account
     */
    public readonly accessKeyId!: pulumi.Output<string>;
    /**
     * The ID of the account in New Relic.
     */
    public readonly accountId!: pulumi.Output<number>;
    /**
     * awsGovcloud account id
     */
    public readonly awsAccountId!: pulumi.Output<string>;
    /**
     * push or pull
     */
    public readonly metricCollectionMode!: pulumi.Output<string | undefined>;
    /**
     * name of the account
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * secret access key of the awsGovcloud account
     */
    public readonly secretAccessKey!: pulumi.Output<string>;

    /**
     * Create a CloudAwsGovcloudLinkAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudAwsGovcloudLinkAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudAwsGovcloudLinkAccountArgs | CloudAwsGovcloudLinkAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudAwsGovcloudLinkAccountState | undefined;
            resourceInputs["accessKeyId"] = state ? state.accessKeyId : undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["awsAccountId"] = state ? state.awsAccountId : undefined;
            resourceInputs["metricCollectionMode"] = state ? state.metricCollectionMode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["secretAccessKey"] = state ? state.secretAccessKey : undefined;
        } else {
            const args = argsOrState as CloudAwsGovcloudLinkAccountArgs | undefined;
            if ((!args || args.accessKeyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessKeyId'");
            }
            if ((!args || args.awsAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsAccountId'");
            }
            if ((!args || args.secretAccessKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secretAccessKey'");
            }
            resourceInputs["accessKeyId"] = args?.accessKeyId ? pulumi.secret(args.accessKeyId) : undefined;
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["awsAccountId"] = args ? args.awsAccountId : undefined;
            resourceInputs["metricCollectionMode"] = args ? args.metricCollectionMode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["secretAccessKey"] = args?.secretAccessKey ? pulumi.secret(args.secretAccessKey) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accessKeyId", "secretAccessKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CloudAwsGovcloudLinkAccount.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudAwsGovcloudLinkAccount resources.
 */
export interface CloudAwsGovcloudLinkAccountState {
    /**
     * access-key-id of awsGovcloud account
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * The ID of the account in New Relic.
     */
    accountId?: pulumi.Input<number>;
    /**
     * awsGovcloud account id
     */
    awsAccountId?: pulumi.Input<string>;
    /**
     * push or pull
     */
    metricCollectionMode?: pulumi.Input<string>;
    /**
     * name of the account
     */
    name?: pulumi.Input<string>;
    /**
     * secret access key of the awsGovcloud account
     */
    secretAccessKey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudAwsGovcloudLinkAccount resource.
 */
export interface CloudAwsGovcloudLinkAccountArgs {
    /**
     * access-key-id of awsGovcloud account
     */
    accessKeyId: pulumi.Input<string>;
    /**
     * The ID of the account in New Relic.
     */
    accountId?: pulumi.Input<number>;
    /**
     * awsGovcloud account id
     */
    awsAccountId: pulumi.Input<string>;
    /**
     * push or pull
     */
    metricCollectionMode?: pulumi.Input<string>;
    /**
     * name of the account
     */
    name?: pulumi.Input<string>;
    /**
     * secret access key of the awsGovcloud account
     */
    secretAccessKey: pulumi.Input<string>;
}
