// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTestGrokPattern(args: GetTestGrokPatternArgs, opts?: pulumi.InvokeOptions): Promise<GetTestGrokPatternResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("newrelic:index/getTestGrokPattern:getTestGrokPattern", {
        "accountId": args.accountId,
        "grok": args.grok,
        "id": args.id,
        "logLines": args.logLines,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTestGrokPattern.
 */
export interface GetTestGrokPatternArgs {
    accountId?: number;
    grok: string;
    id?: string;
    logLines: string[];
}

/**
 * A collection of values returned by getTestGrokPattern.
 */
export interface GetTestGrokPatternResult {
    readonly accountId?: number;
    readonly grok: string;
    readonly id: string;
    readonly logLines: string[];
    readonly testGroks: outputs.GetTestGrokPatternTestGrok[];
}
export function getTestGrokPatternOutput(args: GetTestGrokPatternOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTestGrokPatternResult> {
    return pulumi.output(args).apply((a: any) => getTestGrokPattern(a, opts))
}

/**
 * A collection of arguments for invoking getTestGrokPattern.
 */
export interface GetTestGrokPatternOutputArgs {
    accountId?: pulumi.Input<number>;
    grok: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    logLines: pulumi.Input<pulumi.Input<string>[]>;
}
