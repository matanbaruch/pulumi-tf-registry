// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AlertChannelConfig {
    /**
     * The API key for integrating with OpsGenie.
     */
    apiKey?: pulumi.Input<string>;
    /**
     * Specifies an authentication password for use with a channel. Supported by the webhook channel type.
     */
    authPassword?: pulumi.Input<string>;
    /**
     * Specifies an authentication method for use with a channel. Supported by the webhook channel type. Only HTTP basic authentication is currently supported via the value BASIC.
     */
    authType?: pulumi.Input<string>;
    /**
     * Specifies an authentication username for use with a channel. Supported by the webhook channel type.
     */
    authUsername?: pulumi.Input<string>;
    /**
     * The base URL of the webhook destination.
     */
    baseUrl?: pulumi.Input<string>;
    /**
     * The Slack channel to send notifications to.
     */
    channel?: pulumi.Input<string>;
    /**
     * A map of key/value pairs that represents extra HTTP headers to be sent along with the webhook payload.
     */
    headers?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Use instead of headers if the desired payload is more complex than a list of key/value pairs (e.g. a set of headers that makes use of nested objects). The value provided should be a valid JSON string with escaped double quotes. Conflicts with headers.
     */
    headersString?: pulumi.Input<string>;
    /**
     * true or false. Flag for whether or not to attach a JSON document containing information about the associated alert to the email that is sent to recipients.
     */
    includeJsonAttachment?: pulumi.Input<string>;
    /**
     * The key for integrating with VictorOps.
     */
    key?: pulumi.Input<string>;
    /**
     * A map of key/value pairs that represents the webhook payload. Must provide payload_type if setting this argument.
     */
    payload?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Use instead of payload if the desired payload is more complex than a list of key/value pairs (e.g. a payload that makes use of nested objects). The value provided should be a valid JSON string with escaped double quotes. Conflicts with payload.
     */
    payloadString?: pulumi.Input<string>;
    /**
     * Can either be application/json or application/x-www-form-urlencoded. The payload_type argument is required if payload is set.
     */
    payloadType?: pulumi.Input<string>;
    /**
     * A set of recipients for targeting notifications. Multiple values are comma separated.
     */
    recipients?: pulumi.Input<string>;
    /**
     * The data center region to store your data. Valid values are US and EU. Default is US.
     */
    region?: pulumi.Input<string>;
    /**
     * The route key for integrating with VictorOps.
     */
    routeKey?: pulumi.Input<string>;
    /**
     * Specifies the service key for integrating with Pagerduty.
     */
    serviceKey?: pulumi.Input<string>;
    /**
     * A set of tags for targeting notifications. Multiple values are comma separated.
     */
    tags?: pulumi.Input<string>;
    /**
     * A set of teams for targeting notifications. Multiple values are comma separated.
     */
    teams?: pulumi.Input<string>;
    /**
     * Your organization's Slack URL.
     */
    url?: pulumi.Input<string>;
    /**
     * The user ID for use with the user channel type.
     */
    userId?: pulumi.Input<string>;
}

export interface AlertConditionTerm {
    /**
     * In minutes, must be in the range of 5 to 120, inclusive.
     */
    duration: pulumi.Input<number>;
    /**
     * One of (above, below, equal). Defaults to equal.
     */
    operator?: pulumi.Input<string>;
    /**
     * One of (critical, warning). Defaults to critical.
     */
    priority?: pulumi.Input<string>;
    /**
     * Must be 0 or greater.
     */
    threshold: pulumi.Input<number>;
    /**
     * One of (all, any).
     */
    timeFunction: pulumi.Input<string>;
}

export interface AlertMutingRuleCondition {
    /**
     * The individual MutingRuleConditions within the group.
     */
    conditions: pulumi.Input<pulumi.Input<inputs.AlertMutingRuleConditionCondition>[]>;
    /**
     * The operator used to combine all the MutingRuleConditions within the group.
     */
    operator: pulumi.Input<string>;
}

export interface AlertMutingRuleConditionCondition {
    /**
     * The attribute on an incident.
     */
    attribute: pulumi.Input<string>;
    /**
     * The operator used to compare the attribute's value with the supplied value(s).
     */
    operator: pulumi.Input<string>;
    /**
     * The value(s) to compare against the attribute's value.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AlertMutingRuleSchedule {
    /**
     * The datetime stamp when the MutingRule schedule should stop repeating.
     */
    endRepeat?: pulumi.Input<string>;
    /**
     * The datetime stamp representing when the MutingRule should end.
     */
    endTime?: pulumi.Input<string>;
    /**
     * The frequency the MutingRule schedule repeats. One of [DAILY, WEEKLY, MONTHLY]
     */
    repeat?: pulumi.Input<string>;
    /**
     * The number of times the MutingRule schedule should repeat.
     */
    repeatCount?: pulumi.Input<number>;
    /**
     * The datetime stamp representing when the MutingRule should start.
     */
    startTime?: pulumi.Input<string>;
    /**
     * The time zone that applies to the MutingRule schedule.
     */
    timeZone: pulumi.Input<string>;
    /**
     * The day(s) of the week that a MutingRule should repeat when the repeat field is set to WEEKLY.
     */
    weeklyRepeatDays?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AlertPolicyChannelTimeouts {
    create?: pulumi.Input<string>;
}

export interface CloudAwsGovcloudIntegrationsAlb {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * Specify each name or prefix for the LBs that you want to monitor. Filter values are case-sensitive.
     */
    loadBalancerPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsGovcloudIntegrationsApiGateway {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    stagePrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsGovcloudIntegrationsAutoScaling {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsGovcloudIntegrationsAwsDirectConnect {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsGovcloudIntegrationsAwsStates {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsGovcloudIntegrationsCloudtrail {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsGovcloudIntegrationsDynamoDb {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsGovcloudIntegrationsEbs {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsGovcloudIntegrationsEc2 {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify if IP addresses of ec2 instance should be collected
     */
    fetchIpAddresses?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsGovcloudIntegrationsElasticSearch {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify if IP addresses of ec2 instance should be collected
     */
    fetchNodes?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsGovcloudIntegrationsElb {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsGovcloudIntegrationsEmr {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<string>;
    /**
     * Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsGovcloudIntegrationsIam {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsGovcloudIntegrationsLambda {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsGovcloudIntegrationsRds {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsGovcloudIntegrationsRedShift {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsGovcloudIntegrationsRoute53 {
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsGovcloudIntegrationsS3 {
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsGovcloudIntegrationsSns {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsGovcloudIntegrationsSqs {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each name or prefix for the Queues that you want to monitor. Filter values are case-sensitive.
     */
    queuePrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsAlb {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * Specify each name or prefix for the LBs that you want to monitor. Filter values are case-sensitive.
     */
    loadBalancerPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsApiGateway {
    /**
     * Specify each AWS region that includes the resources that you want to monitor
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    stagePrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsAutoScaling {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsAppSync {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsAthena {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsCognito {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsConnect {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsDirectConnect {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsFsx {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsGlue {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsKinesisAnalytics {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsMediaConvert {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsMediaPackageVod {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsMq {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsMsk {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsNeptune {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsQldb {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsRoute53resolver {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsStates {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsTransitGateway {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsWaf {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsAwsWafv2 {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsBilling {
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsCloudfront {
    /**
     * Specify if Lambdas@Edge should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchLambdasAtEdge?: pulumi.Input<boolean>;
    /**
     * Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsCloudtrail {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsDocDb {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsDynamodb {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * Specify if tags and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsEbs {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsEc2 {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify if the old legacy metadata and tag names have to be kept, it will consume more ingest data size
     */
    duplicateEc2Tags?: pulumi.Input<boolean>;
    /**
     * Specify if IP addresses of ec2 instance should be collected
     */
    fetchIpAddresses?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsEcs {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify if tags and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsEfs {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify if tags and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsElasticache {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsElasticbeanstalk {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * Specify if tags and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsElasticsearch {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify if metrics should be collected for nodes. Turning it on will increase the number of API calls made to CloudWatch.
     */
    fetchNodes?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsElb {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsEmr {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify if tags and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsHealth {
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsIam {
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsIot {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsKinesis {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify if Shards should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchShards?: pulumi.Input<boolean>;
    /**
     * Specify if tags and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsKinesisFirehose {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsLambda {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify if tags and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsRds {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify if tags and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsRedshift {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsRoute53 {
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsS3 {
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsSes {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsSns {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsSqs {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchExtendedInventory?: pulumi.Input<boolean>;
    /**
     * Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each name or prefix for the Queues that you want to monitor. Filter values are case-sensitive.
     */
    queuePrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsTrustedAdvisor {
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAwsIntegrationsVpc {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify if NAT gateway should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchNatGateway?: pulumi.Input<boolean>;
    /**
     * Specify if VPN should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.
     */
    fetchVpn?: pulumi.Input<boolean>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagKey?: pulumi.Input<string>;
    /**
     * Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
     */
    tagValue?: pulumi.Input<string>;
}

export interface CloudAwsIntegrationsXRay {
    /**
     * Specify each AWS region that includes the resources that you want to monitor.
     */
    awsRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds.
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudAzureIntegrationsApiManagement {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsAppGateway {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsAppService {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsContainers {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsCosmosDb {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsCostManagement {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify if additional cost data per tag should be collected. This field is case sensitive.
     */
    tagKeys?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsDataFactory {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsEventHub {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsExpressRoute {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsFirewalls {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsFrontDoor {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsFunctions {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsKeyVault {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsLoadBalancer {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsLogicApps {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsMachineLearning {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsMariaDb {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsMonitor {
    /**
     * A flag that specifies if the integration is active
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specify resource tags in 'key:value' form to be excluded from monitoring
     */
    excludeTags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify resource tags in 'key:value' form to be monitored
     */
    includeTags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify each Azure resource type that needs to be monitored
     */
    resourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsMysql {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsMysqlFlexible {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsPostgresql {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsPostgresqlFlexible {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsPowerBiDedicated {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsRedisCache {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsServiceBus {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsSql {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsSqlManaged {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsStorage {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsVirtualMachine {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsVirtualNetworks {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsVms {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudAzureIntegrationsVpnGateway {
    /**
     * The data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CloudGcpIntegrationsAlloyDb {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsAppEngine {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsBigQuery {
    /**
     * to fetch tags of the resource
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsBigTable {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsComposer {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsDataFlow {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsDataProc {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsDataStore {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsFireBaseDatabase {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsFireBaseHosting {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsFireBaseStorage {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsFireStore {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsFunctions {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsInterconnect {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsKubernetes {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsLoadBalancing {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsMemCache {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsPubSub {
    /**
     * to fetch tags of the resource
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsRedis {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsRouter {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsRun {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsSpanner {
    /**
     * to fetch tags of the resource
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsSql {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsStorage {
    /**
     * to fetch tags of the resource
     */
    fetchTags?: pulumi.Input<boolean>;
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsVirtualMachines {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface CloudGcpIntegrationsVpcAccess {
    /**
     * the data polling interval in seconds
     */
    metricsPollingInterval?: pulumi.Input<number>;
}

export interface DataPartitionRuleTimeouts {
    create?: pulumi.Input<string>;
}

export interface EntityTagsTag {
    /**
     * The tag key.
     */
    key: pulumi.Input<string>;
    /**
     * The tag values.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EntityTagsTimeouts {
    create?: pulumi.Input<string>;
}

export interface GetEntityTag {
    /**
     * The tag key.
     */
    key: string;
    /**
     * The tag value.
     */
    value: string;
}

export interface GetEntityTagArgs {
    /**
     * The tag key.
     */
    key: pulumi.Input<string>;
    /**
     * The tag value.
     */
    value: pulumi.Input<string>;
}

export interface GetNotificationDestinationSecureUrl {
    prefix: string;
}

export interface GetNotificationDestinationSecureUrlArgs {
    prefix: pulumi.Input<string>;
}

export interface InfraAlertConditionCritical {
    duration: pulumi.Input<number>;
    timeFunction?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

export interface InfraAlertConditionWarning {
    duration: pulumi.Input<number>;
    timeFunction?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

export interface InsightsEventEvent {
    /**
     * An attribute to include in your event payload. Multiple attribute blocks can be defined for an event.
     */
    attributes: pulumi.Input<pulumi.Input<inputs.InsightsEventEventAttribute>[]>;
    /**
     * Must be a Unix epoch timestamp. You can define timestamps either in seconds or in milliseconds.
     */
    timestamp?: pulumi.Input<number>;
    /**
     * The event's name. Can be a combination of alphanumeric characters, underscores, and colons.
     */
    type: pulumi.Input<string>;
}

export interface InsightsEventEventAttribute {
    /**
     * The name of the attribute.
     */
    key: pulumi.Input<string>;
    /**
     * Specify the type for the attribute value. This is useful when passing integer or float values to Insights. Allowed values are string, int, or float. Defaults to string.
     */
    type?: pulumi.Input<string>;
    /**
     * The value of the attribute.
     */
    value: pulumi.Input<string>;
}

export interface MonitorDowntimeEndRepeat {
    /**
     * A date, on which the Monitor Downtime's repeat cycle is expected to end.
     */
    onDate?: pulumi.Input<string>;
    /**
     * Number of repetitions after which the Monitor Downtime's repeat cycle is expected to end.
     */
    onRepeat?: pulumi.Input<number>;
}

export interface MonitorDowntimeFrequency {
    /**
     * A numerical list of days of a month on which the Monitor Downtime is scheduled to run.
     */
    daysOfMonths?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * A list of days of the week on which the Monitor Downtime is scheduled to run.
     */
    daysOfWeek?: pulumi.Input<inputs.MonitorDowntimeFrequencyDaysOfWeek>;
}

export interface MonitorDowntimeFrequencyDaysOfWeek {
    /**
     * An occurrence of the day selected within the month.
     */
    ordinalDayOfMonth: pulumi.Input<string>;
    /**
     * The day of the week on which the Monitor Downtime would run.
     */
    weekDay: pulumi.Input<string>;
}

export interface NotificationChannelProperty {
    /**
     * Notification property display key.
     */
    displayValue?: pulumi.Input<string>;
    /**
     * Notification property key.
     */
    key: pulumi.Input<string>;
    /**
     * Notification property label.
     */
    label?: pulumi.Input<string>;
    /**
     * Notification property value.
     */
    value: pulumi.Input<string>;
}

export interface NotificationChannelTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NotificationDestinationAuthBasic {
    password: pulumi.Input<string>;
    user: pulumi.Input<string>;
}

export interface NotificationDestinationAuthCustomHeader {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface NotificationDestinationAuthToken {
    prefix?: pulumi.Input<string>;
    token: pulumi.Input<string>;
}

export interface NotificationDestinationProperty {
    /**
     * Notification property display key.
     */
    displayValue?: pulumi.Input<string>;
    /**
     * Notification property key.
     */
    key: pulumi.Input<string>;
    /**
     * Notification property label.
     */
    label?: pulumi.Input<string>;
    /**
     * Notification property value.
     */
    value: pulumi.Input<string>;
}

export interface NotificationDestinationSecureUrl {
    prefix: pulumi.Input<string>;
    secureSuffix: pulumi.Input<string>;
}

export interface NotificationDestinationTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NrqlAlertConditionCritical {
    /**
     * In minutes, must be in the range of 1 to 120 (inclusive).
     *
     * @deprecated Deprecated
     */
    duration?: pulumi.Input<number>;
    /**
     * One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.
     */
    operator?: pulumi.Input<string>;
    /**
     * For baseline conditions must be in range [1, 1000].
     */
    threshold: pulumi.Input<number>;
    /**
     * The duration, in seconds, that the threshold must violate in order to create an incident. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-86400 seconds for baseline conditions, and within 60-86400 seconds for static conditions
     */
    thresholdDuration?: pulumi.Input<number>;
    /**
     * The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive).
     */
    thresholdOccurrences?: pulumi.Input<string>;
    /**
     * Valid values are: 'all' or 'any'
     *
     * @deprecated Deprecated
     */
    timeFunction?: pulumi.Input<string>;
}

export interface NrqlAlertConditionNrql {
    /**
     * BETA PREVIEW: the `data_account_id` field is in limited release and only enabled for preview on a per-account basis. - The New Relic account ID to use as the basis for the NRQL alert condition's `query`; will default to `account_id` if unspecified.
     */
    dataAccountId?: pulumi.Input<number>;
    /**
     * NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `evaluation_offset`.
     *
     * @deprecated Deprecated
     */
    evaluationOffset?: pulumi.Input<number>;
    query: pulumi.Input<string>;
    /**
     * NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `since_value`.
     *
     * @deprecated Deprecated
     */
    sinceValue?: pulumi.Input<string>;
}

export interface NrqlAlertConditionTerm {
    /**
     * In minutes, must be in the range of 1 to 120 (inclusive).
     *
     * @deprecated Deprecated
     */
    duration?: pulumi.Input<number>;
    /**
     * One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.
     */
    operator?: pulumi.Input<string>;
    /**
     * One of (critical, warning). Defaults to 'critical'. At least one condition term must have priority set to 'critical'.
     */
    priority?: pulumi.Input<string>;
    /**
     * For baseline conditions must be in range [1, 1000].
     */
    threshold: pulumi.Input<number>;
    /**
     * The duration, in seconds, that the threshold must violate in order to create an incident. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-86400 seconds for baseline conditions, and within 60-86400 seconds for static conditions
     */
    thresholdDuration?: pulumi.Input<number>;
    /**
     * The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive).
     */
    thresholdOccurrences?: pulumi.Input<string>;
    /**
     * Valid values are: 'all' or 'any'
     *
     * @deprecated Deprecated
     */
    timeFunction?: pulumi.Input<string>;
}

export interface NrqlAlertConditionTimeouts {
    create?: pulumi.Input<string>;
}

export interface NrqlAlertConditionWarning {
    /**
     * In minutes, must be in the range of 1 to 120 (inclusive).
     *
     * @deprecated Deprecated
     */
    duration?: pulumi.Input<number>;
    /**
     * One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.
     */
    operator?: pulumi.Input<string>;
    /**
     * For baseline conditions must be in range [1, 1000].
     */
    threshold: pulumi.Input<number>;
    /**
     * The duration, in seconds, that the threshold must violate in order to create an incident. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-86400 seconds for baseline conditions, and within 60-86400 seconds for static conditions
     */
    thresholdDuration?: pulumi.Input<number>;
    /**
     * The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive).
     */
    thresholdOccurrences?: pulumi.Input<string>;
    /**
     * Valid values are: 'all' or 'any'
     *
     * @deprecated Deprecated
     */
    timeFunction?: pulumi.Input<string>;
}

export interface ObfuscationRuleAction {
    /**
     * Attribute names for action. An empty list applies the action to all the attributes.
     */
    attributes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Expression Id for action.
     */
    expressionId: pulumi.Input<string>;
    /**
     * Obfuscation method to use.
     */
    method: pulumi.Input<string>;
}

export interface OneDashboardJsonTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OneDashboardPage {
    /**
     * The dashboard page's description.
     */
    description?: pulumi.Input<string>;
    /**
     * The unique entity identifier of the dashboard page in New Relic.
     */
    guid?: pulumi.Input<string>;
    /**
     * The dashboard page's name.
     */
    name: pulumi.Input<string>;
    /**
     * An area widget.
     */
    widgetAreas?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetArea>[]>;
    /**
     * A bar widget.
     */
    widgetBars?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBar>[]>;
    /**
     * A billboard widget.
     */
    widgetBillboards?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBillboard>[]>;
    /**
     * A bullet widget.
     */
    widgetBullets?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBullet>[]>;
    /**
     * A funnel widget.
     */
    widgetFunnels?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetFunnel>[]>;
    /**
     * A heatmap widget.
     */
    widgetHeatmaps?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHeatmap>[]>;
    /**
     * A histogram widget.
     */
    widgetHistograms?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHistogram>[]>;
    /**
     * A JSON widget.
     */
    widgetJsons?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetJson>[]>;
    /**
     * A line widget.
     */
    widgetLines?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLine>[]>;
    /**
     * A log table widget.
     */
    widgetLogTables?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLogTable>[]>;
    /**
     * A markdown widget.
     */
    widgetMarkdowns?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetMarkdown>[]>;
    /**
     * A pie widget.
     */
    widgetPies?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetPy>[]>;
    /**
     * A stacked bar widget.
     */
    widgetStackedBars?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetStackedBar>[]>;
    /**
     * A table widget.
     */
    widgetTables?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetTable>[]>;
}

export interface OneDashboardPageWidgetArea {
    colors?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetAreaColor>[]>;
    column: pulumi.Input<number>;
    facetShowOtherSeries?: pulumi.Input<boolean>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    ignoreTimeRange?: pulumi.Input<boolean>;
    initialSorting?: pulumi.Input<inputs.OneDashboardPageWidgetAreaInitialSorting>;
    legendEnabled?: pulumi.Input<boolean>;
    nrqlQueries: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetAreaNrqlQuery>[]>;
    nullValues?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetAreaNullValue>[]>;
    refreshRate?: pulumi.Input<string>;
    row: pulumi.Input<number>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    units?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetAreaUnit>[]>;
    width?: pulumi.Input<number>;
    yAxisLeftMax?: pulumi.Input<number>;
    yAxisLeftMin?: pulumi.Input<number>;
}

export interface OneDashboardPageWidgetAreaColor {
    color?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetAreaColorSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetAreaColorSeriesOverride {
    /**
     * Color code
     */
    color?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetAreaInitialSorting {
    /**
     * Defines the sort order. Either ascending or descending.
     */
    direction: pulumi.Input<string>;
    /**
     * The column name to be sorted
     */
    name: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetAreaNrqlQuery {
    /**
     * The account id used for the NRQL query.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The NRQL query.
     */
    query: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetAreaNullValue {
    nullValue?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetAreaNullValueSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetAreaNullValueSeriesOverride {
    /**
     * Null value
     */
    nullValue?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetAreaUnit {
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetAreaUnitSeriesOverride>[]>;
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetAreaUnitSeriesOverride {
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
    /**
     * Unit name
     */
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBar {
    colors?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBarColor>[]>;
    column: pulumi.Input<number>;
    facetShowOtherSeries?: pulumi.Input<boolean>;
    /**
     * Use this item to filter the current dashboard
     */
    filterCurrentDashboard?: pulumi.Input<boolean>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    ignoreTimeRange?: pulumi.Input<boolean>;
    initialSorting?: pulumi.Input<inputs.OneDashboardPageWidgetBarInitialSorting>;
    legendEnabled?: pulumi.Input<boolean>;
    /**
     * Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
     */
    linkedEntityGuids?: pulumi.Input<pulumi.Input<string>[]>;
    nrqlQueries: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBarNrqlQuery>[]>;
    nullValues?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBarNullValue>[]>;
    refreshRate?: pulumi.Input<string>;
    row: pulumi.Input<number>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    units?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBarUnit>[]>;
    width?: pulumi.Input<number>;
    yAxisLeftMax?: pulumi.Input<number>;
    yAxisLeftMin?: pulumi.Input<number>;
}

export interface OneDashboardPageWidgetBarColor {
    color?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBarColorSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetBarColorSeriesOverride {
    /**
     * Color code
     */
    color?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBarInitialSorting {
    /**
     * Defines the sort order. Either ascending or descending.
     */
    direction: pulumi.Input<string>;
    /**
     * The column name to be sorted
     */
    name: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBarNrqlQuery {
    /**
     * The account id used for the NRQL query.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The NRQL query.
     */
    query: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBarNullValue {
    nullValue?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBarNullValueSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetBarNullValueSeriesOverride {
    /**
     * Null value
     */
    nullValue?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBarUnit {
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBarUnitSeriesOverride>[]>;
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBarUnitSeriesOverride {
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
    /**
     * Unit name
     */
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBillboard {
    colors?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBillboardColor>[]>;
    column: pulumi.Input<number>;
    /**
     * The critical threshold value.
     */
    critical?: pulumi.Input<string>;
    facetShowOtherSeries?: pulumi.Input<boolean>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    ignoreTimeRange?: pulumi.Input<boolean>;
    initialSorting?: pulumi.Input<inputs.OneDashboardPageWidgetBillboardInitialSorting>;
    legendEnabled?: pulumi.Input<boolean>;
    nrqlQueries: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBillboardNrqlQuery>[]>;
    nullValues?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBillboardNullValue>[]>;
    refreshRate?: pulumi.Input<string>;
    row: pulumi.Input<number>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    units?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBillboardUnit>[]>;
    /**
     * The warning threshold value.
     */
    warning?: pulumi.Input<string>;
    width?: pulumi.Input<number>;
    yAxisLeftMax?: pulumi.Input<number>;
    yAxisLeftMin?: pulumi.Input<number>;
}

export interface OneDashboardPageWidgetBillboardColor {
    color?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBillboardColorSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetBillboardColorSeriesOverride {
    /**
     * Color code
     */
    color?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBillboardInitialSorting {
    /**
     * Defines the sort order. Either ascending or descending.
     */
    direction: pulumi.Input<string>;
    /**
     * The column name to be sorted
     */
    name: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBillboardNrqlQuery {
    /**
     * The account id used for the NRQL query.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The NRQL query.
     */
    query: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBillboardNullValue {
    nullValue?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBillboardNullValueSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetBillboardNullValueSeriesOverride {
    /**
     * Null value
     */
    nullValue?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBillboardUnit {
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBillboardUnitSeriesOverride>[]>;
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBillboardUnitSeriesOverride {
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
    /**
     * Unit name
     */
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBullet {
    colors?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBulletColor>[]>;
    column: pulumi.Input<number>;
    facetShowOtherSeries?: pulumi.Input<boolean>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    ignoreTimeRange?: pulumi.Input<boolean>;
    initialSorting?: pulumi.Input<inputs.OneDashboardPageWidgetBulletInitialSorting>;
    legendEnabled?: pulumi.Input<boolean>;
    /**
     * The maximum value for the visualization
     */
    limit: pulumi.Input<number>;
    nrqlQueries: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBulletNrqlQuery>[]>;
    nullValues?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBulletNullValue>[]>;
    refreshRate?: pulumi.Input<string>;
    row: pulumi.Input<number>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    units?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBulletUnit>[]>;
    width?: pulumi.Input<number>;
    yAxisLeftMax?: pulumi.Input<number>;
    yAxisLeftMin?: pulumi.Input<number>;
}

export interface OneDashboardPageWidgetBulletColor {
    color?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBulletColorSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetBulletColorSeriesOverride {
    /**
     * Color code
     */
    color?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBulletInitialSorting {
    /**
     * Defines the sort order. Either ascending or descending.
     */
    direction: pulumi.Input<string>;
    /**
     * The column name to be sorted
     */
    name: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBulletNrqlQuery {
    /**
     * The account id used for the NRQL query.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The NRQL query.
     */
    query: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBulletNullValue {
    nullValue?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBulletNullValueSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetBulletNullValueSeriesOverride {
    /**
     * Null value
     */
    nullValue?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBulletUnit {
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetBulletUnitSeriesOverride>[]>;
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetBulletUnitSeriesOverride {
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
    /**
     * Unit name
     */
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetFunnel {
    colors?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetFunnelColor>[]>;
    column: pulumi.Input<number>;
    facetShowOtherSeries?: pulumi.Input<boolean>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    ignoreTimeRange?: pulumi.Input<boolean>;
    initialSorting?: pulumi.Input<inputs.OneDashboardPageWidgetFunnelInitialSorting>;
    legendEnabled?: pulumi.Input<boolean>;
    nrqlQueries: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetFunnelNrqlQuery>[]>;
    nullValues?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetFunnelNullValue>[]>;
    refreshRate?: pulumi.Input<string>;
    row: pulumi.Input<number>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    units?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetFunnelUnit>[]>;
    width?: pulumi.Input<number>;
    yAxisLeftMax?: pulumi.Input<number>;
    yAxisLeftMin?: pulumi.Input<number>;
}

export interface OneDashboardPageWidgetFunnelColor {
    color?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetFunnelColorSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetFunnelColorSeriesOverride {
    /**
     * Color code
     */
    color?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetFunnelInitialSorting {
    /**
     * Defines the sort order. Either ascending or descending.
     */
    direction: pulumi.Input<string>;
    /**
     * The column name to be sorted
     */
    name: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetFunnelNrqlQuery {
    /**
     * The account id used for the NRQL query.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The NRQL query.
     */
    query: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetFunnelNullValue {
    nullValue?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetFunnelNullValueSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetFunnelNullValueSeriesOverride {
    /**
     * Null value
     */
    nullValue?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetFunnelUnit {
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetFunnelUnitSeriesOverride>[]>;
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetFunnelUnitSeriesOverride {
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
    /**
     * Unit name
     */
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetHeatmap {
    colors?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHeatmapColor>[]>;
    column: pulumi.Input<number>;
    facetShowOtherSeries?: pulumi.Input<boolean>;
    /**
     * Use this item to filter the current dashboard
     */
    filterCurrentDashboard?: pulumi.Input<boolean>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    ignoreTimeRange?: pulumi.Input<boolean>;
    initialSorting?: pulumi.Input<inputs.OneDashboardPageWidgetHeatmapInitialSorting>;
    legendEnabled?: pulumi.Input<boolean>;
    /**
     * Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
     */
    linkedEntityGuids?: pulumi.Input<pulumi.Input<string>[]>;
    nrqlQueries: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHeatmapNrqlQuery>[]>;
    nullValues?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHeatmapNullValue>[]>;
    refreshRate?: pulumi.Input<string>;
    row: pulumi.Input<number>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    units?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHeatmapUnit>[]>;
    width?: pulumi.Input<number>;
    yAxisLeftMax?: pulumi.Input<number>;
    yAxisLeftMin?: pulumi.Input<number>;
}

export interface OneDashboardPageWidgetHeatmapColor {
    color?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHeatmapColorSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetHeatmapColorSeriesOverride {
    /**
     * Color code
     */
    color?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetHeatmapInitialSorting {
    /**
     * Defines the sort order. Either ascending or descending.
     */
    direction: pulumi.Input<string>;
    /**
     * The column name to be sorted
     */
    name: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetHeatmapNrqlQuery {
    /**
     * The account id used for the NRQL query.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The NRQL query.
     */
    query: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetHeatmapNullValue {
    nullValue?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHeatmapNullValueSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetHeatmapNullValueSeriesOverride {
    /**
     * Null value
     */
    nullValue?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetHeatmapUnit {
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHeatmapUnitSeriesOverride>[]>;
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetHeatmapUnitSeriesOverride {
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
    /**
     * Unit name
     */
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetHistogram {
    colors?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHistogramColor>[]>;
    column: pulumi.Input<number>;
    facetShowOtherSeries?: pulumi.Input<boolean>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    ignoreTimeRange?: pulumi.Input<boolean>;
    initialSorting?: pulumi.Input<inputs.OneDashboardPageWidgetHistogramInitialSorting>;
    legendEnabled?: pulumi.Input<boolean>;
    nrqlQueries: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHistogramNrqlQuery>[]>;
    nullValues?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHistogramNullValue>[]>;
    refreshRate?: pulumi.Input<string>;
    row: pulumi.Input<number>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    units?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHistogramUnit>[]>;
    width?: pulumi.Input<number>;
    yAxisLeftMax?: pulumi.Input<number>;
    yAxisLeftMin?: pulumi.Input<number>;
}

export interface OneDashboardPageWidgetHistogramColor {
    color?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHistogramColorSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetHistogramColorSeriesOverride {
    /**
     * Color code
     */
    color?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetHistogramInitialSorting {
    /**
     * Defines the sort order. Either ascending or descending.
     */
    direction: pulumi.Input<string>;
    /**
     * The column name to be sorted
     */
    name: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetHistogramNrqlQuery {
    /**
     * The account id used for the NRQL query.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The NRQL query.
     */
    query: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetHistogramNullValue {
    nullValue?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHistogramNullValueSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetHistogramNullValueSeriesOverride {
    /**
     * Null value
     */
    nullValue?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetHistogramUnit {
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetHistogramUnitSeriesOverride>[]>;
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetHistogramUnitSeriesOverride {
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
    /**
     * Unit name
     */
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetJson {
    colors?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetJsonColor>[]>;
    column: pulumi.Input<number>;
    facetShowOtherSeries?: pulumi.Input<boolean>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    ignoreTimeRange?: pulumi.Input<boolean>;
    initialSorting?: pulumi.Input<inputs.OneDashboardPageWidgetJsonInitialSorting>;
    legendEnabled?: pulumi.Input<boolean>;
    nrqlQueries: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetJsonNrqlQuery>[]>;
    nullValues?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetJsonNullValue>[]>;
    refreshRate?: pulumi.Input<string>;
    row: pulumi.Input<number>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    units?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetJsonUnit>[]>;
    width?: pulumi.Input<number>;
    yAxisLeftMax?: pulumi.Input<number>;
    yAxisLeftMin?: pulumi.Input<number>;
}

export interface OneDashboardPageWidgetJsonColor {
    color?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetJsonColorSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetJsonColorSeriesOverride {
    /**
     * Color code
     */
    color?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetJsonInitialSorting {
    /**
     * Defines the sort order. Either ascending or descending.
     */
    direction: pulumi.Input<string>;
    /**
     * The column name to be sorted
     */
    name: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetJsonNrqlQuery {
    /**
     * The account id used for the NRQL query.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The NRQL query.
     */
    query: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetJsonNullValue {
    nullValue?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetJsonNullValueSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetJsonNullValueSeriesOverride {
    /**
     * Null value
     */
    nullValue?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetJsonUnit {
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetJsonUnitSeriesOverride>[]>;
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetJsonUnitSeriesOverride {
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
    /**
     * Unit name
     */
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetLine {
    colors?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLineColor>[]>;
    column: pulumi.Input<number>;
    facetShowOtherSeries?: pulumi.Input<boolean>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    ignoreTimeRange?: pulumi.Input<boolean>;
    initialSorting?: pulumi.Input<inputs.OneDashboardPageWidgetLineInitialSorting>;
    /**
     * Specified if the label should be visible in the graph created when specified with thresholds.
     */
    isLabelVisible?: pulumi.Input<boolean>;
    legendEnabled?: pulumi.Input<boolean>;
    nrqlQueries: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLineNrqlQuery>[]>;
    nullValues?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLineNullValue>[]>;
    refreshRate?: pulumi.Input<string>;
    row: pulumi.Input<number>;
    thresholds?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLineThreshold>[]>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    units?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLineUnit>[]>;
    width?: pulumi.Input<number>;
    yAxisLeftMax?: pulumi.Input<number>;
    yAxisLeftMin?: pulumi.Input<number>;
    /**
     * Specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range.
     */
    yAxisLeftZero?: pulumi.Input<boolean>;
    yAxisRight?: pulumi.Input<inputs.OneDashboardPageWidgetLineYAxisRight>;
}

export interface OneDashboardPageWidgetLineColor {
    color?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLineColorSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetLineColorSeriesOverride {
    /**
     * Color code
     */
    color?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetLineInitialSorting {
    /**
     * Defines the sort order. Either ascending or descending.
     */
    direction: pulumi.Input<string>;
    /**
     * The column name to be sorted
     */
    name: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetLineNrqlQuery {
    /**
     * The account id used for the NRQL query.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The NRQL query.
     */
    query: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetLineNullValue {
    nullValue?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLineNullValueSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetLineNullValueSeriesOverride {
    /**
     * Null value
     */
    nullValue?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetLineThreshold {
    /**
     * The number from which the range starts in thresholds.
     */
    from?: pulumi.Input<string>;
    /**
     * Name of the threshold created.
     */
    name?: pulumi.Input<string>;
    /**
     * Severity of the threshold, which would reflect in the widget, in the range of the threshold specified.
     */
    severity?: pulumi.Input<string>;
    /**
     * The number at which the range ends in thresholds.
     */
    to?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetLineUnit {
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLineUnitSeriesOverride>[]>;
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetLineUnitSeriesOverride {
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
    /**
     * Unit name
     */
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetLineYAxisRight {
    /**
     * Minimum value of the range to be specified with the Y-Axis on the right of the line widget.
     */
    yAxisRightMax?: pulumi.Input<number>;
    /**
     * Minimum value of the range to be specified with the Y-Axis on the right of the line widget.
     */
    yAxisRightMin?: pulumi.Input<number>;
    /**
     * A set of series that helps specify the Y-Axis on the right of the line widget.
     */
    yAxisRightSeries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An attribute that helps specify the Y-Axis on the right of the line widget.
     */
    yAxisRightZero?: pulumi.Input<boolean>;
}

export interface OneDashboardPageWidgetLogTable {
    colors?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLogTableColor>[]>;
    column: pulumi.Input<number>;
    facetShowOtherSeries?: pulumi.Input<boolean>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    ignoreTimeRange?: pulumi.Input<boolean>;
    initialSorting?: pulumi.Input<inputs.OneDashboardPageWidgetLogTableInitialSorting>;
    legendEnabled?: pulumi.Input<boolean>;
    nrqlQueries: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLogTableNrqlQuery>[]>;
    nullValues?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLogTableNullValue>[]>;
    refreshRate?: pulumi.Input<string>;
    row: pulumi.Input<number>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    units?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLogTableUnit>[]>;
    width?: pulumi.Input<number>;
    yAxisLeftMax?: pulumi.Input<number>;
    yAxisLeftMin?: pulumi.Input<number>;
}

export interface OneDashboardPageWidgetLogTableColor {
    color?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLogTableColorSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetLogTableColorSeriesOverride {
    /**
     * Color code
     */
    color?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetLogTableInitialSorting {
    /**
     * Defines the sort order. Either ascending or descending.
     */
    direction: pulumi.Input<string>;
    /**
     * The column name to be sorted
     */
    name: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetLogTableNrqlQuery {
    /**
     * The account id used for the NRQL query.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The NRQL query.
     */
    query: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetLogTableNullValue {
    nullValue?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLogTableNullValueSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetLogTableNullValueSeriesOverride {
    /**
     * Null value
     */
    nullValue?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetLogTableUnit {
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetLogTableUnitSeriesOverride>[]>;
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetLogTableUnitSeriesOverride {
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
    /**
     * Unit name
     */
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetMarkdown {
    colors?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetMarkdownColor>[]>;
    column: pulumi.Input<number>;
    facetShowOtherSeries?: pulumi.Input<boolean>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    ignoreTimeRange?: pulumi.Input<boolean>;
    initialSorting?: pulumi.Input<inputs.OneDashboardPageWidgetMarkdownInitialSorting>;
    legendEnabled?: pulumi.Input<boolean>;
    nullValues?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetMarkdownNullValue>[]>;
    refreshRate?: pulumi.Input<string>;
    row: pulumi.Input<number>;
    text: pulumi.Input<string>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    units?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetMarkdownUnit>[]>;
    width?: pulumi.Input<number>;
    yAxisLeftMax?: pulumi.Input<number>;
    yAxisLeftMin?: pulumi.Input<number>;
}

export interface OneDashboardPageWidgetMarkdownColor {
    color?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetMarkdownColorSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetMarkdownColorSeriesOverride {
    /**
     * Color code
     */
    color?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetMarkdownInitialSorting {
    /**
     * Defines the sort order. Either ascending or descending.
     */
    direction: pulumi.Input<string>;
    /**
     * The column name to be sorted
     */
    name: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetMarkdownNullValue {
    nullValue?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetMarkdownNullValueSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetMarkdownNullValueSeriesOverride {
    /**
     * Null value
     */
    nullValue?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetMarkdownUnit {
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetMarkdownUnitSeriesOverride>[]>;
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetMarkdownUnitSeriesOverride {
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
    /**
     * Unit name
     */
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetPy {
    colors?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetPyColor>[]>;
    column: pulumi.Input<number>;
    facetShowOtherSeries?: pulumi.Input<boolean>;
    /**
     * Use this item to filter the current dashboard
     */
    filterCurrentDashboard?: pulumi.Input<boolean>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    ignoreTimeRange?: pulumi.Input<boolean>;
    initialSorting?: pulumi.Input<inputs.OneDashboardPageWidgetPyInitialSorting>;
    legendEnabled?: pulumi.Input<boolean>;
    /**
     * Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
     */
    linkedEntityGuids?: pulumi.Input<pulumi.Input<string>[]>;
    nrqlQueries: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetPyNrqlQuery>[]>;
    nullValues?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetPyNullValue>[]>;
    refreshRate?: pulumi.Input<string>;
    row: pulumi.Input<number>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    units?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetPyUnit>[]>;
    width?: pulumi.Input<number>;
    yAxisLeftMax?: pulumi.Input<number>;
    yAxisLeftMin?: pulumi.Input<number>;
}

export interface OneDashboardPageWidgetPyColor {
    color?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetPyColorSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetPyColorSeriesOverride {
    /**
     * Color code
     */
    color?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetPyInitialSorting {
    /**
     * Defines the sort order. Either ascending or descending.
     */
    direction: pulumi.Input<string>;
    /**
     * The column name to be sorted
     */
    name: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetPyNrqlQuery {
    /**
     * The account id used for the NRQL query.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The NRQL query.
     */
    query: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetPyNullValue {
    nullValue?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetPyNullValueSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetPyNullValueSeriesOverride {
    /**
     * Null value
     */
    nullValue?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetPyUnit {
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetPyUnitSeriesOverride>[]>;
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetPyUnitSeriesOverride {
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
    /**
     * Unit name
     */
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetStackedBar {
    colors?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetStackedBarColor>[]>;
    column: pulumi.Input<number>;
    facetShowOtherSeries?: pulumi.Input<boolean>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    ignoreTimeRange?: pulumi.Input<boolean>;
    initialSorting?: pulumi.Input<inputs.OneDashboardPageWidgetStackedBarInitialSorting>;
    legendEnabled?: pulumi.Input<boolean>;
    nrqlQueries: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetStackedBarNrqlQuery>[]>;
    nullValues?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetStackedBarNullValue>[]>;
    refreshRate?: pulumi.Input<string>;
    row: pulumi.Input<number>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    units?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetStackedBarUnit>[]>;
    width?: pulumi.Input<number>;
    yAxisLeftMax?: pulumi.Input<number>;
    yAxisLeftMin?: pulumi.Input<number>;
}

export interface OneDashboardPageWidgetStackedBarColor {
    color?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetStackedBarColorSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetStackedBarColorSeriesOverride {
    /**
     * Color code
     */
    color?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetStackedBarInitialSorting {
    /**
     * Defines the sort order. Either ascending or descending.
     */
    direction: pulumi.Input<string>;
    /**
     * The column name to be sorted
     */
    name: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetStackedBarNrqlQuery {
    /**
     * The account id used for the NRQL query.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The NRQL query.
     */
    query: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetStackedBarNullValue {
    nullValue?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetStackedBarNullValueSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetStackedBarNullValueSeriesOverride {
    /**
     * Null value
     */
    nullValue?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetStackedBarUnit {
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetStackedBarUnitSeriesOverride>[]>;
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetStackedBarUnitSeriesOverride {
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
    /**
     * Unit name
     */
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetTable {
    colors?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetTableColor>[]>;
    column: pulumi.Input<number>;
    facetShowOtherSeries?: pulumi.Input<boolean>;
    /**
     * Use this item to filter the current dashboard
     */
    filterCurrentDashboard?: pulumi.Input<boolean>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    ignoreTimeRange?: pulumi.Input<boolean>;
    initialSorting?: pulumi.Input<inputs.OneDashboardPageWidgetTableInitialSorting>;
    legendEnabled?: pulumi.Input<boolean>;
    /**
     * Related entities. Currently only supports Dashboard entities, but may allow other cases in the future.
     */
    linkedEntityGuids?: pulumi.Input<pulumi.Input<string>[]>;
    nrqlQueries: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetTableNrqlQuery>[]>;
    nullValues?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetTableNullValue>[]>;
    refreshRate?: pulumi.Input<string>;
    row: pulumi.Input<number>;
    thresholds?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetTableThreshold>[]>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    units?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetTableUnit>[]>;
    width?: pulumi.Input<number>;
    yAxisLeftMax?: pulumi.Input<number>;
    yAxisLeftMin?: pulumi.Input<number>;
}

export interface OneDashboardPageWidgetTableColor {
    color?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetTableColorSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetTableColorSeriesOverride {
    /**
     * Color code
     */
    color?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetTableInitialSorting {
    /**
     * Defines the sort order. Either ascending or descending.
     */
    direction: pulumi.Input<string>;
    /**
     * The column name to be sorted
     */
    name: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetTableNrqlQuery {
    /**
     * The account id used for the NRQL query.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The NRQL query.
     */
    query: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetTableNullValue {
    nullValue?: pulumi.Input<string>;
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetTableNullValueSeriesOverride>[]>;
}

export interface OneDashboardPageWidgetTableNullValueSeriesOverride {
    /**
     * Null value
     */
    nullValue?: pulumi.Input<string>;
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetTableThreshold {
    /**
     * Name of the column in the table, to which the threshold would be applied.
     */
    columnName?: pulumi.Input<string>;
    /**
     * The number from which the range starts in thresholds.
     */
    from?: pulumi.Input<string>;
    /**
     * Severity of the threshold, which would reflect in the widget, in the range of the threshold specified.
     */
    severity?: pulumi.Input<string>;
    /**
     * The number at which the range ends in thresholds.
     */
    to?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetTableUnit {
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.OneDashboardPageWidgetTableUnitSeriesOverride>[]>;
    unit?: pulumi.Input<string>;
}

export interface OneDashboardPageWidgetTableUnitSeriesOverride {
    /**
     * Series name
     */
    seriesName?: pulumi.Input<string>;
    /**
     * Unit name
     */
    unit?: pulumi.Input<string>;
}

export interface OneDashboardRawPage {
    /**
     * The dashboard page's description.
     */
    description?: pulumi.Input<string>;
    /**
     * The unique entity identifier of the dashboard page in New Relic.
     */
    guid?: pulumi.Input<string>;
    /**
     * The dashboard page's name.
     */
    name: pulumi.Input<string>;
    /**
     * A generic widget configuration. Visualization id is required.
     */
    widgets?: pulumi.Input<pulumi.Input<inputs.OneDashboardRawPageWidget>[]>;
}

export interface OneDashboardRawPageWidget {
    column: pulumi.Input<number>;
    /**
     * The configuration of the widget.
     */
    configuration: pulumi.Input<string>;
    height?: pulumi.Input<number>;
    /**
     * The ID of the widget.
     */
    id?: pulumi.Input<string>;
    /**
     * (Optional) Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
     */
    linkedEntityGuids?: pulumi.Input<pulumi.Input<string>[]>;
    row: pulumi.Input<number>;
    /**
     * A title for the widget.
     */
    title: pulumi.Input<string>;
    /**
     * The visualization ID of the widget.
     */
    visualizationId: pulumi.Input<string>;
    width?: pulumi.Input<number>;
}

export interface OneDashboardVariable {
    /**
     * Default values for this variable.
     */
    defaultValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether this variable supports multiple selection or not. Only applies to variables of type NRQL or ENUM.
     */
    isMultiSelection?: pulumi.Input<boolean>;
    /**
     * List of possible values for variables of type ENUM
     */
    items?: pulumi.Input<pulumi.Input<inputs.OneDashboardVariableItem>[]>;
    /**
     * The variable identifier.
     */
    name: pulumi.Input<string>;
    /**
     * Configuration for variables of type NRQL.
     */
    nrqlQuery?: pulumi.Input<inputs.OneDashboardVariableNrqlQuery>;
    /**
     * Options applied to the variable.
     */
    options?: pulumi.Input<pulumi.Input<inputs.OneDashboardVariableOption>[]>;
    /**
     * Indicates the strategy to apply when replacing a variable in a NRQL query.
     */
    replacementStrategy: pulumi.Input<string>;
    /**
     * Human-friendly display string for this variable.
     */
    title: pulumi.Input<string>;
    /**
     * Specifies the data type of the variable and where its possible values may come from.
     */
    type: pulumi.Input<string>;
}

export interface OneDashboardVariableItem {
    /**
     * A human-friendly display string for this value.
     */
    title?: pulumi.Input<string>;
    /**
     * A possible variable value
     */
    value: pulumi.Input<string>;
}

export interface OneDashboardVariableNrqlQuery {
    /**
     * New Relic account ID(s) to issue the query against.
     */
    accountIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * NRQL formatted query.
     */
    query: pulumi.Input<string>;
}

export interface OneDashboardVariableOption {
    /**
     * Only applies to variables of type NRQL. With this turned on, the time range for the NRQL query will override the time picker on dashboards and other pages. Turn this off to use the time picker as normal.
     */
    ignoreTimeRange?: pulumi.Input<boolean>;
}

export interface ServiceLevelEvents {
    accountId: pulumi.Input<number>;
    badEvents?: pulumi.Input<inputs.ServiceLevelEventsBadEvents>;
    goodEvents?: pulumi.Input<inputs.ServiceLevelEventsGoodEvents>;
    validEvents: pulumi.Input<inputs.ServiceLevelEventsValidEvents>;
}

export interface ServiceLevelEventsBadEvents {
    from: pulumi.Input<string>;
    select?: pulumi.Input<inputs.ServiceLevelEventsBadEventsSelect>;
    where?: pulumi.Input<string>;
}

export interface ServiceLevelEventsBadEventsSelect {
    attribute?: pulumi.Input<string>;
    function: pulumi.Input<string>;
    /**
     * The event threshold to use in the SELECT clause
     */
    threshold?: pulumi.Input<number>;
}

export interface ServiceLevelEventsGoodEvents {
    from: pulumi.Input<string>;
    select?: pulumi.Input<inputs.ServiceLevelEventsGoodEventsSelect>;
    where?: pulumi.Input<string>;
}

export interface ServiceLevelEventsGoodEventsSelect {
    attribute?: pulumi.Input<string>;
    function: pulumi.Input<string>;
    /**
     * The event threshold to use in the SELECT clause
     */
    threshold?: pulumi.Input<number>;
}

export interface ServiceLevelEventsValidEvents {
    from: pulumi.Input<string>;
    select?: pulumi.Input<inputs.ServiceLevelEventsValidEventsSelect>;
    where?: pulumi.Input<string>;
}

export interface ServiceLevelEventsValidEventsSelect {
    attribute?: pulumi.Input<string>;
    function: pulumi.Input<string>;
    /**
     * The event threshold to use in the SELECT clause
     */
    threshold?: pulumi.Input<number>;
}

export interface ServiceLevelObjective {
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    target: pulumi.Input<number>;
    timeWindow: pulumi.Input<inputs.ServiceLevelObjectiveTimeWindow>;
}

export interface ServiceLevelObjectiveTimeWindow {
    rolling: pulumi.Input<inputs.ServiceLevelObjectiveTimeWindowRolling>;
}

export interface ServiceLevelObjectiveTimeWindowRolling {
    count: pulumi.Input<number>;
    unit: pulumi.Input<string>;
}

export interface SyntheticsBrokenLinksMonitorTag {
    /**
     * Name of the tag key
     */
    key: pulumi.Input<string>;
    /**
     * Values associated with the tag key
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SyntheticsCertCheckMonitorTag {
    /**
     * Name of the tag key
     */
    key: pulumi.Input<string>;
    /**
     * Values associated with the tag key
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SyntheticsMonitorCustomHeader {
    /**
     * Header name
     */
    name?: pulumi.Input<string>;
    /**
     * Header value
     */
    value?: pulumi.Input<string>;
}

export interface SyntheticsMonitorTag {
    /**
     * Name of the tag key
     */
    key: pulumi.Input<string>;
    /**
     * Values associated with the tag key
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SyntheticsMultilocationAlertConditionCritical {
    /**
     * The minimum number of monitor locations that must be concurrently failing before an incident is opened.
     */
    threshold: pulumi.Input<number>;
}

export interface SyntheticsMultilocationAlertConditionWarning {
    /**
     * The minimum number of monitor locations that must be concurrently failing before an incident is opened.
     */
    threshold: pulumi.Input<number>;
}

export interface SyntheticsScriptMonitorLocationPrivate {
    /**
     * The unique identifier for the Synthetics private location in New Relic.
     */
    guid: pulumi.Input<string>;
    /**
     * The location's Verified Script Execution password (Only necessary if Verified Script Execution is enabled for the location).
     */
    vsePassword?: pulumi.Input<string>;
}

export interface SyntheticsScriptMonitorTag {
    /**
     * Name of the tag key
     */
    key: pulumi.Input<string>;
    /**
     * Values associated with the tag key
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SyntheticsSecureCredentialTimeouts {
    read?: pulumi.Input<string>;
}

export interface SyntheticsStepMonitorLocationPrivate {
    /**
     * The unique identifier for the Synthetics private location in New Relic.
     */
    guid: pulumi.Input<string>;
    /**
     * The location's Verified Script Execution password (Only necessary if Verified Script Execution is enabled for the location).
     */
    vsePassword?: pulumi.Input<string>;
}

export interface SyntheticsStepMonitorStep {
    /**
     * The position of the step within the script ranging from 0-100
     */
    ordinal: pulumi.Input<number>;
    /**
     * The type of step to be added to the script.
     */
    type: pulumi.Input<string>;
    /**
     * The metadata values related to the check the step performs.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SyntheticsStepMonitorTag {
    /**
     * Name of the tag key
     */
    key: pulumi.Input<string>;
    /**
     * Values associated with the tag key
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WorkflowDestination {
    /**
     * (Required) Destination's channel id.
     */
    channelId: pulumi.Input<string>;
    /**
     * (Required) Destination's name.
     */
    name?: pulumi.Input<string>;
    /**
     * List of triggers to notify about in this destination configuration.
     */
    notificationTriggers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Required) The type of the destination. One of: (EMAIL, EVENT_BRIDGE, PAGERDUTY_ACCOUNT_INTEGRATION, PAGERDUTY_SERVICE_INTEGRATION, SERVICE_NOW, SERVICE_NOW_APP, WEBHOOK, MOBILE_PUSH, SLACK, JIRA).
     */
    type?: pulumi.Input<string>;
    /**
     * Update original notification message (Slack channels only)
     */
    updateOriginalMessage?: pulumi.Input<boolean>;
}

export interface WorkflowEnrichments {
    /**
     * (Required) Nrql type Enrichments.
     */
    nrqls: pulumi.Input<pulumi.Input<inputs.WorkflowEnrichmentsNrql>[]>;
}

export interface WorkflowEnrichmentsNrql {
    /**
     * The account id of the enrichment.
     */
    accountId?: pulumi.Input<number>;
    /**
     * A set of key-value pairs to represent a enrichment configuration.
     */
    configurations: pulumi.Input<pulumi.Input<inputs.WorkflowEnrichmentsNrqlConfiguration>[]>;
    /**
     * Enrichment's id.
     */
    enrichmentId?: pulumi.Input<string>;
    /**
     * (Required) Enrichment's name.
     */
    name: pulumi.Input<string>;
    /**
     * The type of the enrichment. One of: (NRQL).
     */
    type?: pulumi.Input<string>;
}

export interface WorkflowEnrichmentsNrqlConfiguration {
    /**
     * enrichment's NRQL query
     */
    query: pulumi.Input<string>;
}

export interface WorkflowIssuesFilter {
    /**
     * filter id.
     */
    filterId?: pulumi.Input<string>;
    /**
     * (Required) Filter's name.
     */
    name: pulumi.Input<string>;
    predicates?: pulumi.Input<pulumi.Input<inputs.WorkflowIssuesFilterPredicate>[]>;
    /**
     * (Required) The type of the filter. One of: (FILTER, VIEW).
     */
    type: pulumi.Input<string>;
}

export interface WorkflowIssuesFilterPredicate {
    /**
     * (Required) predicate's attribute.
     */
    attribute: pulumi.Input<string>;
    /**
     * The type of the operator. One of: (CONTAINS, DOES_NOT_CONTAIN, DOES_NOT_EQUAL, DOES_NOT_EXACTLY_MATCH, ENDS_WITH, EQUAL, EXACTLY_MATCHES, GREATER_OR_EQUAL, GREATER_THAN, IS, IS_NOT, LESS_OR_EQUAL, LESS_THAN, STARTS_WITH).
     */
    operator: pulumi.Input<string>;
    /**
     * List of predicate values.
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WorkloadEntitySearchQuery {
    /**
     * A valid entity search query; empty, and null values are considered invalid.
     */
    query: pulumi.Input<string>;
}

export interface WorkloadStatusConfigAutomatic {
    /**
     * Whether the automatic status configuration is enabled or not.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * An additional meta-rule that can consider all entities that haven't been evaluated by any other rule.
     */
    remainingEntitiesRule?: pulumi.Input<inputs.WorkloadStatusConfigAutomaticRemainingEntitiesRule>;
    /**
     * A list of rules.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.WorkloadStatusConfigAutomaticRule>[]>;
}

export interface WorkloadStatusConfigAutomaticRemainingEntitiesRule {
    /**
     * The input object used to represent a rollup strategy.
     */
    remainingEntitiesRuleRollup: pulumi.Input<inputs.WorkloadStatusConfigAutomaticRemainingEntitiesRuleRemainingEntitiesRuleRollup>;
}

export interface WorkloadStatusConfigAutomaticRemainingEntitiesRuleRemainingEntitiesRuleRollup {
    /**
     * The grouping to be applied to the remaining entities.
     */
    groupBy: pulumi.Input<string>;
    /**
     * The rollup strategy that is applied to a group of entities.
     */
    strategy: pulumi.Input<string>;
    /**
     * Type of threshold defined for the rule. This is an optional field that only applies when strategy is WORST_STATUS_WINS. Use a threshold to roll up the worst status only after a certain amount of entities are not operational.
     */
    thresholdType?: pulumi.Input<string>;
    /**
     * Threshold value defined for the rule. This optional field is used in combination with thresholdType. If the threshold type is null, the threshold value will be ignored.
     */
    thresholdValue?: pulumi.Input<number>;
}

export interface WorkloadStatusConfigAutomaticRule {
    /**
     * A list of entity GUIDs composing the rule.
     */
    entityGuids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of entity search queries used to retrieve the entities that compose the rule.
     */
    nrqlQueries?: pulumi.Input<pulumi.Input<inputs.WorkloadStatusConfigAutomaticRuleNrqlQuery>[]>;
    /**
     * The input object used to represent a rollup strategy.
     */
    rollup: pulumi.Input<inputs.WorkloadStatusConfigAutomaticRuleRollup>;
}

export interface WorkloadStatusConfigAutomaticRuleNrqlQuery {
    /**
     * The entity search query that is used to perform the search of a group of entities.
     */
    query: pulumi.Input<string>;
}

export interface WorkloadStatusConfigAutomaticRuleRollup {
    /**
     * The rollup strategy that is applied to a group of entities.
     */
    strategy: pulumi.Input<string>;
    /**
     * Type of threshold defined for the rule. This is an optional field that only applies when strategy is WORST_STATUS_WINS. Use a threshold to roll up the worst status only after a certain amount of entities are not operational.
     */
    thresholdType?: pulumi.Input<string>;
    /**
     * Threshold value defined for the rule. This optional field is used in combination with thresholdType. If the threshold type is null, the threshold value will be ignored.
     */
    thresholdValue?: pulumi.Input<number>;
}

export interface WorkloadStatusConfigStatic {
    /**
     * A description that provides additional details about the status of the workload.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the static status configuration is enabled or not.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The status of the workload.
     */
    status: pulumi.Input<string>;
    /**
     * A short description of the status of the workload.
     */
    summary?: pulumi.Input<string>;
}
