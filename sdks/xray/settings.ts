// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Settings extends pulumi.CustomResource {
    /**
     * Get an existing Settings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SettingsState, opts?: pulumi.CustomResourceOptions): Settings {
        return new Settings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'xray:index/settings:Settings';

    /**
     * Returns true if the given object is an instance of Settings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Settings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Settings.__pulumiType;
    }

    /**
     * Determines whether to allow artifacts blocked by Xray to be downloaded. This setting cannot override the blocking of
     * unscanned artifacts. Should only be set to `true` when `enabled` is set. Default value: `false`.
     */
    public readonly allowBlocked!: pulumi.Output<boolean>;
    /**
     * Determines whether to block certain operations (for example, downloading artifacts) when the connected Xray instance is
     * unavailable. Should only be set to `true` when `enabled` is set. Default value: `false`.
     */
    public readonly allowWhenUnavailable!: pulumi.Output<boolean>;
    /**
     * Defines the amount of time to wait for Xray to _finish_ scanning an artifact before blocking operations on that artifact
     * automatically if the scan is still unfinished. Default value: 1800 seconds (30 minutes)
     */
    public readonly blockUnfinishedScansTimeout!: pulumi.Output<number>;
    /**
     * Defines the amount of time to wait for Xray to _start_ scanning an artifact before blocking operations on that artifact
     * automatically if the scan has still not started. Default value: 60 seconds (1 minute)
     */
    public readonly blockUnscannedTimeout!: pulumi.Output<number>;
    /**
     * The time of the Xray DB sync daily update job. Format `HH:mm`
     */
    public readonly dbSyncUpdatesTime!: pulumi.Output<string>;
    /**
     * Determines whether Xray is currently enabled. Default value: `true`.
     */
    public readonly enabled!: pulumi.Output<boolean>;

    /**
     * Create a Settings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SettingsArgs | SettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SettingsState | undefined;
            resourceInputs["allowBlocked"] = state ? state.allowBlocked : undefined;
            resourceInputs["allowWhenUnavailable"] = state ? state.allowWhenUnavailable : undefined;
            resourceInputs["blockUnfinishedScansTimeout"] = state ? state.blockUnfinishedScansTimeout : undefined;
            resourceInputs["blockUnscannedTimeout"] = state ? state.blockUnscannedTimeout : undefined;
            resourceInputs["dbSyncUpdatesTime"] = state ? state.dbSyncUpdatesTime : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
        } else {
            const args = argsOrState as SettingsArgs | undefined;
            if ((!args || args.dbSyncUpdatesTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbSyncUpdatesTime'");
            }
            resourceInputs["allowBlocked"] = args ? args.allowBlocked : undefined;
            resourceInputs["allowWhenUnavailable"] = args ? args.allowWhenUnavailable : undefined;
            resourceInputs["blockUnfinishedScansTimeout"] = args ? args.blockUnfinishedScansTimeout : undefined;
            resourceInputs["blockUnscannedTimeout"] = args ? args.blockUnscannedTimeout : undefined;
            resourceInputs["dbSyncUpdatesTime"] = args ? args.dbSyncUpdatesTime : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Settings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Settings resources.
 */
export interface SettingsState {
    /**
     * Determines whether to allow artifacts blocked by Xray to be downloaded. This setting cannot override the blocking of
     * unscanned artifacts. Should only be set to `true` when `enabled` is set. Default value: `false`.
     */
    allowBlocked?: pulumi.Input<boolean>;
    /**
     * Determines whether to block certain operations (for example, downloading artifacts) when the connected Xray instance is
     * unavailable. Should only be set to `true` when `enabled` is set. Default value: `false`.
     */
    allowWhenUnavailable?: pulumi.Input<boolean>;
    /**
     * Defines the amount of time to wait for Xray to _finish_ scanning an artifact before blocking operations on that artifact
     * automatically if the scan is still unfinished. Default value: 1800 seconds (30 minutes)
     */
    blockUnfinishedScansTimeout?: pulumi.Input<number>;
    /**
     * Defines the amount of time to wait for Xray to _start_ scanning an artifact before blocking operations on that artifact
     * automatically if the scan has still not started. Default value: 60 seconds (1 minute)
     */
    blockUnscannedTimeout?: pulumi.Input<number>;
    /**
     * The time of the Xray DB sync daily update job. Format `HH:mm`
     */
    dbSyncUpdatesTime?: pulumi.Input<string>;
    /**
     * Determines whether Xray is currently enabled. Default value: `true`.
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Settings resource.
 */
export interface SettingsArgs {
    /**
     * Determines whether to allow artifacts blocked by Xray to be downloaded. This setting cannot override the blocking of
     * unscanned artifacts. Should only be set to `true` when `enabled` is set. Default value: `false`.
     */
    allowBlocked?: pulumi.Input<boolean>;
    /**
     * Determines whether to block certain operations (for example, downloading artifacts) when the connected Xray instance is
     * unavailable. Should only be set to `true` when `enabled` is set. Default value: `false`.
     */
    allowWhenUnavailable?: pulumi.Input<boolean>;
    /**
     * Defines the amount of time to wait for Xray to _finish_ scanning an artifact before blocking operations on that artifact
     * automatically if the scan is still unfinished. Default value: 1800 seconds (30 minutes)
     */
    blockUnfinishedScansTimeout?: pulumi.Input<number>;
    /**
     * Defines the amount of time to wait for Xray to _start_ scanning an artifact before blocking operations on that artifact
     * automatically if the scan has still not started. Default value: 60 seconds (1 minute)
     */
    blockUnscannedTimeout?: pulumi.Input<number>;
    /**
     * The time of the Xray DB sync daily update job. Format `HH:mm`
     */
    dbSyncUpdatesTime: pulumi.Input<string>;
    /**
     * Determines whether Xray is currently enabled. Default value: `true`.
     */
    enabled?: pulumi.Input<boolean>;
}
