// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIkeGateway(args: GetIkeGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetIkeGatewayResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getIkeGateway:getIkeGateway", {
        "device": args.device,
        "folder": args.folder,
        "id": args.id,
        "snippet": args.snippet,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIkeGateway.
 */
export interface GetIkeGatewayArgs {
    device?: string;
    folder?: string;
    id: string;
    snippet?: string;
}

/**
 * A collection of values returned by getIkeGateway.
 */
export interface GetIkeGatewayResult {
    readonly authentication: outputs.GetIkeGatewayAuthentication;
    readonly device?: string;
    readonly folder?: string;
    readonly id: string;
    readonly localId: outputs.GetIkeGatewayLocalId;
    readonly name: string;
    readonly peerAddress: outputs.GetIkeGatewayPeerAddress;
    readonly peerId: outputs.GetIkeGatewayPeerId;
    readonly protocol: outputs.GetIkeGatewayProtocol;
    readonly protocolCommon: outputs.GetIkeGatewayProtocolCommon;
    readonly snippet?: string;
    readonly tfid: string;
}
export function getIkeGatewayOutput(args: GetIkeGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIkeGatewayResult> {
    return pulumi.output(args).apply((a: any) => getIkeGateway(a, opts))
}

/**
 * A collection of arguments for invoking getIkeGateway.
 */
export interface GetIkeGatewayOutputArgs {
    device?: pulumi.Input<string>;
    folder?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    snippet?: pulumi.Input<string>;
}
