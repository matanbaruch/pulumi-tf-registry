// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUrlAccessProfile(args: GetUrlAccessProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetUrlAccessProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getUrlAccessProfile:getUrlAccessProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUrlAccessProfile.
 */
export interface GetUrlAccessProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getUrlAccessProfile.
 */
export interface GetUrlAccessProfileResult {
    readonly alerts: string[];
    readonly allows: string[];
    readonly blocks: string[];
    readonly cloudInlineCat: boolean;
    readonly continues: string[];
    readonly credentialEnforcement: outputs.GetUrlAccessProfileCredentialEnforcement;
    readonly description: string;
    readonly id: string;
    readonly localInlineCat: boolean;
    readonly logContainerPageOnly: boolean;
    readonly logHttpHdrReferer: boolean;
    readonly logHttpHdrUserAgent: boolean;
    readonly logHttpHdrXff: boolean;
    readonly mlavCategoryExceptions: string[];
    readonly name: string;
    readonly safeSearchEnforcement: boolean;
    readonly tfid: string;
}
export function getUrlAccessProfileOutput(args: GetUrlAccessProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUrlAccessProfileResult> {
    return pulumi.output(args).apply((a: any) => getUrlAccessProfile(a, opts))
}

/**
 * A collection of arguments for invoking getUrlAccessProfile.
 */
export interface GetUrlAccessProfileOutputArgs {
    id: pulumi.Input<string>;
}
