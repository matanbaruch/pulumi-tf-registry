// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getUrlCategory(args: GetUrlCategoryArgs, opts?: pulumi.InvokeOptions): Promise<GetUrlCategoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getUrlCategory:getUrlCategory", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUrlCategory.
 */
export interface GetUrlCategoryArgs {
    id: string;
}

/**
 * A collection of values returned by getUrlCategory.
 */
export interface GetUrlCategoryResult {
    readonly description: string;
    readonly id: string;
    readonly lists: string[];
    readonly name: string;
    readonly tfid: string;
    readonly type: string;
}
export function getUrlCategoryOutput(args: GetUrlCategoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUrlCategoryResult> {
    return pulumi.output(args).apply((a: any) => getUrlCategory(a, opts))
}

/**
 * A collection of arguments for invoking getUrlCategory.
 */
export interface GetUrlCategoryOutputArgs {
    id: pulumi.Input<string>;
}
