// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMfaServer(args: GetMfaServerArgs, opts?: pulumi.InvokeOptions): Promise<GetMfaServerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getMfaServer:getMfaServer", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMfaServer.
 */
export interface GetMfaServerArgs {
    id: string;
}

/**
 * A collection of values returned by getMfaServer.
 */
export interface GetMfaServerResult {
    readonly id: string;
    readonly mfaCertProfile: string;
    readonly mfaVendorType: outputs.GetMfaServerMfaVendorType;
    readonly name: string;
    readonly tfid: string;
}
export function getMfaServerOutput(args: GetMfaServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMfaServerResult> {
    return pulumi.output(args).apply((a: any) => getMfaServer(a, opts))
}

/**
 * A collection of arguments for invoking getMfaServer.
 */
export interface GetMfaServerOutputArgs {
    id: pulumi.Input<string>;
}
