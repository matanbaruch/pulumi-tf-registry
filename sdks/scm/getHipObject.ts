// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHipObject(args: GetHipObjectArgs, opts?: pulumi.InvokeOptions): Promise<GetHipObjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getHipObject:getHipObject", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHipObject.
 */
export interface GetHipObjectArgs {
    id: string;
}

/**
 * A collection of values returned by getHipObject.
 */
export interface GetHipObjectResult {
    readonly antiMalware: outputs.GetHipObjectAntiMalware;
    readonly certificate: outputs.GetHipObjectCertificate;
    readonly customChecks: outputs.GetHipObjectCustomChecks;
    readonly dataLossPrevention: outputs.GetHipObjectDataLossPrevention;
    readonly description: string;
    readonly diskBackup: outputs.GetHipObjectDiskBackup;
    readonly diskEncryption: outputs.GetHipObjectDiskEncryption;
    readonly firewall: outputs.GetHipObjectFirewall;
    readonly hostInfo: outputs.GetHipObjectHostInfo;
    readonly id: string;
    readonly mobileDevice: outputs.GetHipObjectMobileDevice;
    readonly name: string;
    readonly networkInfo: outputs.GetHipObjectNetworkInfo;
    readonly patchManagement: outputs.GetHipObjectPatchManagement;
    readonly tfid: string;
}
export function getHipObjectOutput(args: GetHipObjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHipObjectResult> {
    return pulumi.output(args).apply((a: any) => getHipObject(a, opts))
}

/**
 * A collection of arguments for invoking getHipObject.
 */
export interface GetHipObjectOutputArgs {
    id: pulumi.Input<string>;
}
