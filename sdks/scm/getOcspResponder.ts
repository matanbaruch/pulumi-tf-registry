// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOcspResponder(args: GetOcspResponderArgs, opts?: pulumi.InvokeOptions): Promise<GetOcspResponderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getOcspResponder:getOcspResponder", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOcspResponder.
 */
export interface GetOcspResponderArgs {
    id: string;
}

/**
 * A collection of values returned by getOcspResponder.
 */
export interface GetOcspResponderResult {
    readonly hostName: string;
    readonly id: string;
    readonly name: string;
    readonly tfid: string;
}
export function getOcspResponderOutput(args: GetOcspResponderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOcspResponderResult> {
    return pulumi.output(args).apply((a: any) => getOcspResponder(a, opts))
}

/**
 * A collection of arguments for invoking getOcspResponder.
 */
export interface GetOcspResponderOutputArgs {
    id: pulumi.Input<string>;
}
