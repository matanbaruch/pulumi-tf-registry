// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSamlServerProfile(args: GetSamlServerProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetSamlServerProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getSamlServerProfile:getSamlServerProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSamlServerProfile.
 */
export interface GetSamlServerProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getSamlServerProfile.
 */
export interface GetSamlServerProfileResult {
    readonly certificate: string;
    readonly entityId: string;
    readonly id: string;
    readonly maxClockSkew: number;
    readonly sloBindings: string;
    readonly ssoBindings: string;
    readonly ssoUrl: string;
    readonly tfid: string;
    readonly validateIdpCertificate: boolean;
    readonly wantAuthRequestsSigned: boolean;
}
export function getSamlServerProfileOutput(args: GetSamlServerProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSamlServerProfileResult> {
    return pulumi.output(args).apply((a: any) => getSamlServerProfile(a, opts))
}

/**
 * A collection of arguments for invoking getSamlServerProfile.
 */
export interface GetSamlServerProfileOutputArgs {
    id: pulumi.Input<string>;
}
