// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDecryptionProfile(args: GetDecryptionProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetDecryptionProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getDecryptionProfile:getDecryptionProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDecryptionProfile.
 */
export interface GetDecryptionProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getDecryptionProfile.
 */
export interface GetDecryptionProfileResult {
    readonly id: string;
    readonly name: string;
    readonly sslForwardProxy: outputs.GetDecryptionProfileSslForwardProxy;
    readonly sslInboundProxy: outputs.GetDecryptionProfileSslInboundProxy;
    readonly sslNoProxy: outputs.GetDecryptionProfileSslNoProxy;
    readonly sslProtocolSettings: outputs.GetDecryptionProfileSslProtocolSettings;
    readonly tfid: string;
}
export function getDecryptionProfileOutput(args: GetDecryptionProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDecryptionProfileResult> {
    return pulumi.output(args).apply((a: any) => getDecryptionProfile(a, opts))
}

/**
 * A collection of arguments for invoking getDecryptionProfile.
 */
export interface GetDecryptionProfileOutputArgs {
    id: pulumi.Input<string>;
}
