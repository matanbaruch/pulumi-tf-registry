// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getProfileGroup(args: GetProfileGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetProfileGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getProfileGroup:getProfileGroup", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProfileGroup.
 */
export interface GetProfileGroupArgs {
    id: string;
}

/**
 * A collection of values returned by getProfileGroup.
 */
export interface GetProfileGroupResult {
    readonly dnsSecurities: string[];
    readonly fileBlockings: string[];
    readonly id: string;
    readonly name: string;
    readonly saasSecurities: string[];
    readonly spywares: string[];
    readonly tfid: string;
    readonly urlFilterings: string[];
    readonly virusAndWildfireAnalyses: string[];
    readonly vulnerabilities: string[];
}
export function getProfileGroupOutput(args: GetProfileGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProfileGroupResult> {
    return pulumi.output(args).apply((a: any) => getProfileGroup(a, opts))
}

/**
 * A collection of arguments for invoking getProfileGroup.
 */
export interface GetProfileGroupOutputArgs {
    id: pulumi.Input<string>;
}
