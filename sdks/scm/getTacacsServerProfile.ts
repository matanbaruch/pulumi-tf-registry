// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTacacsServerProfile(args: GetTacacsServerProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetTacacsServerProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getTacacsServerProfile:getTacacsServerProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTacacsServerProfile.
 */
export interface GetTacacsServerProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getTacacsServerProfile.
 */
export interface GetTacacsServerProfileResult {
    readonly id: string;
    readonly protocol: string;
    readonly servers: outputs.GetTacacsServerProfileServer[];
    readonly tfid: string;
    readonly timeout: number;
    readonly useSingleConnection: boolean;
}
export function getTacacsServerProfileOutput(args: GetTacacsServerProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTacacsServerProfileResult> {
    return pulumi.output(args).apply((a: any) => getTacacsServerProfile(a, opts))
}

/**
 * A collection of arguments for invoking getTacacsServerProfile.
 */
export interface GetTacacsServerProfileOutputArgs {
    id: pulumi.Input<string>;
}
