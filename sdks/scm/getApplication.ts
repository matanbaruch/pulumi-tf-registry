// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplication(args: GetApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getApplication:getApplication", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationArgs {
    id: string;
}

/**
 * A collection of values returned by getApplication.
 */
export interface GetApplicationResult {
    readonly ableToTransferFile: boolean;
    readonly algDisableCapability: string;
    readonly category: string;
    readonly consumeBigBandwidth: boolean;
    readonly dataIdent: boolean;
    readonly default: outputs.GetApplicationDefault;
    readonly description: string;
    readonly evasiveBehavior: boolean;
    readonly fileTypeIdent: boolean;
    readonly hasKnownVulnerability: boolean;
    readonly id: string;
    readonly name: string;
    readonly noAppidCaching: boolean;
    readonly parentApp: string;
    readonly pervasiveUse: boolean;
    readonly proneToMisuse: boolean;
    readonly risk: number;
    readonly signatures: outputs.GetApplicationSignature[];
    readonly subcategory: string;
    readonly tcpHalfClosedTimeout: number;
    readonly tcpTimeWaitTimeout: number;
    readonly tcpTimeout: number;
    readonly technology: string;
    readonly tfid: string;
    readonly timeout: number;
    readonly tunnelApplications: boolean;
    readonly tunnelOtherApplication: boolean;
    readonly udpTimeout: number;
    readonly usedByMalware: boolean;
    readonly virusIdent: boolean;
}
export function getApplicationOutput(args: GetApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationResult> {
    return pulumi.output(args).apply((a: any) => getApplication(a, opts))
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationOutputArgs {
    id: pulumi.Input<string>;
}
