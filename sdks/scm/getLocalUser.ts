// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLocalUser(args: GetLocalUserArgs, opts?: pulumi.InvokeOptions): Promise<GetLocalUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getLocalUser:getLocalUser", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLocalUser.
 */
export interface GetLocalUserArgs {
    id: string;
}

/**
 * A collection of values returned by getLocalUser.
 */
export interface GetLocalUserResult {
    readonly disabled: boolean;
    readonly id: string;
    readonly name: string;
    readonly password: string;
    readonly tfid: string;
}
export function getLocalUserOutput(args: GetLocalUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocalUserResult> {
    return pulumi.output(args).apply((a: any) => getLocalUser(a, opts))
}

/**
 * A collection of arguments for invoking getLocalUser.
 */
export interface GetLocalUserOutputArgs {
    id: pulumi.Input<string>;
}
