// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRadiusServerProfile(args: GetRadiusServerProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetRadiusServerProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getRadiusServerProfile:getRadiusServerProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRadiusServerProfile.
 */
export interface GetRadiusServerProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getRadiusServerProfile.
 */
export interface GetRadiusServerProfileResult {
    readonly id: string;
    readonly protocol: outputs.GetRadiusServerProfileProtocol;
    readonly retries: number;
    readonly servers: outputs.GetRadiusServerProfileServer[];
    readonly tfid: string;
    readonly timeout: number;
}
export function getRadiusServerProfileOutput(args: GetRadiusServerProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRadiusServerProfileResult> {
    return pulumi.output(args).apply((a: any) => getRadiusServerProfile(a, opts))
}

/**
 * A collection of arguments for invoking getRadiusServerProfile.
 */
export interface GetRadiusServerProfileOutputArgs {
    id: pulumi.Input<string>;
}
