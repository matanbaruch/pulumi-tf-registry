// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTrafficSteeringRule(args: GetTrafficSteeringRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetTrafficSteeringRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getTrafficSteeringRule:getTrafficSteeringRule", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTrafficSteeringRule.
 */
export interface GetTrafficSteeringRuleArgs {
    id: string;
}

/**
 * A collection of values returned by getTrafficSteeringRule.
 */
export interface GetTrafficSteeringRuleResult {
    readonly action: outputs.GetTrafficSteeringRuleAction;
    readonly categories: string[];
    readonly destinations: string[];
    readonly id: string;
    readonly name: string;
    readonly services: string[];
    readonly sourceUsers: string[];
    readonly sources: string[];
    readonly tfid: string;
}
export function getTrafficSteeringRuleOutput(args: GetTrafficSteeringRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTrafficSteeringRuleResult> {
    return pulumi.output(args).apply((a: any) => getTrafficSteeringRule(a, opts))
}

/**
 * A collection of arguments for invoking getTrafficSteeringRule.
 */
export interface GetTrafficSteeringRuleOutputArgs {
    id: pulumi.Input<string>;
}
