// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAntiSpywareSignature(args: GetAntiSpywareSignatureArgs, opts?: pulumi.InvokeOptions): Promise<GetAntiSpywareSignatureResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getAntiSpywareSignature:getAntiSpywareSignature", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAntiSpywareSignature.
 */
export interface GetAntiSpywareSignatureArgs {
    id: string;
}

/**
 * A collection of values returned by getAntiSpywareSignature.
 */
export interface GetAntiSpywareSignatureResult {
    readonly bugtraqs: string[];
    readonly comment: string;
    readonly cves: string[];
    readonly defaultAction: outputs.GetAntiSpywareSignatureDefaultAction;
    readonly direction: string;
    readonly id: string;
    readonly references: string[];
    readonly severity: string;
    readonly signature: outputs.GetAntiSpywareSignatureSignature;
    readonly tfid: string;
    readonly threatId: number;
    readonly threatname: string;
    readonly vendors: string[];
}
export function getAntiSpywareSignatureOutput(args: GetAntiSpywareSignatureOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAntiSpywareSignatureResult> {
    return pulumi.output(args).apply((a: any) => getAntiSpywareSignature(a, opts))
}

/**
 * A collection of arguments for invoking getAntiSpywareSignature.
 */
export interface GetAntiSpywareSignatureOutputArgs {
    id: pulumi.Input<string>;
}
