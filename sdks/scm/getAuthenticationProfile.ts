// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAuthenticationProfile(args: GetAuthenticationProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthenticationProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getAuthenticationProfile:getAuthenticationProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAuthenticationProfile.
 */
export interface GetAuthenticationProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getAuthenticationProfile.
 */
export interface GetAuthenticationProfileResult {
    readonly allowLists: string[];
    readonly id: string;
    readonly lockout: outputs.GetAuthenticationProfileLockout;
    readonly method: outputs.GetAuthenticationProfileMethod;
    readonly multiFactorAuth: outputs.GetAuthenticationProfileMultiFactorAuth;
    readonly name: string;
    readonly singleSignOn: outputs.GetAuthenticationProfileSingleSignOn;
    readonly tfid: string;
    readonly userDomain: string;
    readonly usernameModifier: string;
}
export function getAuthenticationProfileOutput(args: GetAuthenticationProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthenticationProfileResult> {
    return pulumi.output(args).apply((a: any) => getAuthenticationProfile(a, opts))
}

/**
 * A collection of arguments for invoking getAuthenticationProfile.
 */
export interface GetAuthenticationProfileOutputArgs {
    id: pulumi.Input<string>;
}
