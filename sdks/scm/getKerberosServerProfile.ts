// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKerberosServerProfile(args: GetKerberosServerProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetKerberosServerProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getKerberosServerProfile:getKerberosServerProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKerberosServerProfile.
 */
export interface GetKerberosServerProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getKerberosServerProfile.
 */
export interface GetKerberosServerProfileResult {
    readonly id: string;
    readonly servers: outputs.GetKerberosServerProfileServer[];
    readonly tfid: string;
}
export function getKerberosServerProfileOutput(args: GetKerberosServerProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKerberosServerProfileResult> {
    return pulumi.output(args).apply((a: any) => getKerberosServerProfile(a, opts))
}

/**
 * A collection of arguments for invoking getKerberosServerProfile.
 */
export interface GetKerberosServerProfileOutputArgs {
    id: pulumi.Input<string>;
}
