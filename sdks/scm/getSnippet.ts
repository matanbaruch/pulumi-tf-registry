// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSnippet(args: GetSnippetArgs, opts?: pulumi.InvokeOptions): Promise<GetSnippetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getSnippet:getSnippet", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSnippet.
 */
export interface GetSnippetArgs {
    id: string;
}

/**
 * A collection of values returned by getSnippet.
 */
export interface GetSnippetResult {
    readonly createdIn: string;
    readonly description: string;
    readonly displayName: string;
    readonly folders: outputs.GetSnippetFolder[];
    readonly id: string;
    readonly labels: string[];
    readonly lastUpdate: string;
    readonly name: string;
    readonly sharedIn: string;
    readonly tfid: string;
    readonly type: string;
}
export function getSnippetOutput(args: GetSnippetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnippetResult> {
    return pulumi.output(args).apply((a: any) => getSnippet(a, opts))
}

/**
 * A collection of arguments for invoking getSnippet.
 */
export interface GetSnippetOutputArgs {
    id: pulumi.Input<string>;
}
