// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAuthenticationPortal(args: GetAuthenticationPortalArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthenticationPortalResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getAuthenticationPortal:getAuthenticationPortal", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAuthenticationPortal.
 */
export interface GetAuthenticationPortalArgs {
    id: string;
}

/**
 * A collection of values returned by getAuthenticationPortal.
 */
export interface GetAuthenticationPortalResult {
    readonly authenticationProfile: string;
    readonly certificateProfile: string;
    readonly gpUdpPort: number;
    readonly id: string;
    readonly idleTimer: number;
    readonly redirectHost: string;
    readonly tfid: string;
    readonly timer: number;
    readonly tlsServiceProfile: string;
}
export function getAuthenticationPortalOutput(args: GetAuthenticationPortalOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthenticationPortalResult> {
    return pulumi.output(args).apply((a: any) => getAuthenticationPortal(a, opts))
}

/**
 * A collection of arguments for invoking getAuthenticationPortal.
 */
export interface GetAuthenticationPortalOutputArgs {
    id: pulumi.Input<string>;
}
