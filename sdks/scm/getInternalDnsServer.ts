// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getInternalDnsServer(args: GetInternalDnsServerArgs, opts?: pulumi.InvokeOptions): Promise<GetInternalDnsServerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getInternalDnsServer:getInternalDnsServer", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInternalDnsServer.
 */
export interface GetInternalDnsServerArgs {
    id: string;
}

/**
 * A collection of values returned by getInternalDnsServer.
 */
export interface GetInternalDnsServerResult {
    readonly domainNames: string[];
    readonly id: string;
    readonly name: string;
    readonly primary: string;
    readonly secondary: string;
    readonly tfid: string;
}
export function getInternalDnsServerOutput(args: GetInternalDnsServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInternalDnsServerResult> {
    return pulumi.output(args).apply((a: any) => getInternalDnsServer(a, opts))
}

/**
 * A collection of arguments for invoking getInternalDnsServer.
 */
export interface GetInternalDnsServerOutputArgs {
    id: pulumi.Input<string>;
}
