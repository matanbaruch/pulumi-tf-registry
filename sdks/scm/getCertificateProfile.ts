// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCertificateProfile(args: GetCertificateProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getCertificateProfile:getCertificateProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCertificateProfile.
 */
export interface GetCertificateProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getCertificateProfile.
 */
export interface GetCertificateProfileResult {
    readonly blockExpiredCert: boolean;
    readonly blockTimeoutCert: boolean;
    readonly blockUnauthenticatedCert: boolean;
    readonly blockUnknownCert: boolean;
    readonly caCertificates: outputs.GetCertificateProfileCaCertificate[];
    readonly certStatusTimeout: string;
    readonly crlReceiveTimeout: string;
    readonly domain: string;
    readonly id: string;
    readonly name: string;
    readonly ocspReceiveTimeout: string;
    readonly tfid: string;
    readonly useCrl: boolean;
    readonly useOcsp: boolean;
    readonly usernameField: outputs.GetCertificateProfileUsernameField;
}
export function getCertificateProfileOutput(args: GetCertificateProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateProfileResult> {
    return pulumi.output(args).apply((a: any) => getCertificateProfile(a, opts))
}

/**
 * A collection of arguments for invoking getCertificateProfile.
 */
export interface GetCertificateProfileOutputArgs {
    id: pulumi.Input<string>;
}
