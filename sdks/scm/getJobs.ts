// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getJobs(args: GetJobsArgs, opts?: pulumi.InvokeOptions): Promise<GetJobsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getJobs:getJobs", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getJobs.
 */
export interface GetJobsArgs {
    id: number;
}

/**
 * A collection of values returned by getJobs.
 */
export interface GetJobsResult {
    readonly description: string;
    readonly deviceName: string;
    readonly endTs: string;
    readonly id: number;
    readonly jobResult: number;
    readonly jobStatus: number;
    readonly jobType: number;
    readonly parentId: number;
    readonly percent: number;
    readonly resultStr: string;
    readonly startTs: string;
    readonly statusStr: string;
    readonly summary: string;
    readonly tfid: string;
    readonly typeStr: string;
    readonly uname: string;
}
export function getJobsOutput(args: GetJobsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJobsResult> {
    return pulumi.output(args).apply((a: any) => getJobs(a, opts))
}

/**
 * A collection of arguments for invoking getJobs.
 */
export interface GetJobsOutputArgs {
    id: pulumi.Input<number>;
}
