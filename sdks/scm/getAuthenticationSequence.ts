// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAuthenticationSequence(args: GetAuthenticationSequenceArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthenticationSequenceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getAuthenticationSequence:getAuthenticationSequence", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAuthenticationSequence.
 */
export interface GetAuthenticationSequenceArgs {
    id: string;
}

/**
 * A collection of values returned by getAuthenticationSequence.
 */
export interface GetAuthenticationSequenceResult {
    readonly authenticationProfiles: string[];
    readonly id: string;
    readonly name: string;
    readonly tfid: string;
    readonly useDomainFindProfile: boolean;
}
export function getAuthenticationSequenceOutput(args: GetAuthenticationSequenceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthenticationSequenceResult> {
    return pulumi.output(args).apply((a: any) => getAuthenticationSequence(a, opts))
}

/**
 * A collection of arguments for invoking getAuthenticationSequence.
 */
export interface GetAuthenticationSequenceOutputArgs {
    id: pulumi.Input<string>;
}
