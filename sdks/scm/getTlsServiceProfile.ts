// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTlsServiceProfile(args: GetTlsServiceProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetTlsServiceProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getTlsServiceProfile:getTlsServiceProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTlsServiceProfile.
 */
export interface GetTlsServiceProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getTlsServiceProfile.
 */
export interface GetTlsServiceProfileResult {
    readonly certificate: string;
    readonly id: string;
    readonly name: string;
    readonly protocolSettings: outputs.GetTlsServiceProfileProtocolSettings;
    readonly tfid: string;
}
export function getTlsServiceProfileOutput(args: GetTlsServiceProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTlsServiceProfileResult> {
    return pulumi.output(args).apply((a: any) => getTlsServiceProfile(a, opts))
}

/**
 * A collection of arguments for invoking getTlsServiceProfile.
 */
export interface GetTlsServiceProfileOutputArgs {
    id: pulumi.Input<string>;
}
