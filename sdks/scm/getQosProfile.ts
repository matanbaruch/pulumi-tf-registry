// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getQosProfile(args: GetQosProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetQosProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scm:index/getQosProfile:getQosProfile", {
        "folder": args.folder,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getQosProfile.
 */
export interface GetQosProfileArgs {
    folder?: string;
    id: string;
}

/**
 * A collection of values returned by getQosProfile.
 */
export interface GetQosProfileResult {
    readonly aggregateBandwidth: outputs.GetQosProfileAggregateBandwidth;
    readonly classBandwidthType: outputs.GetQosProfileClassBandwidthType;
    readonly folder?: string;
    readonly id: string;
    readonly name: string;
    readonly tfid: string;
}
export function getQosProfileOutput(args: GetQosProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQosProfileResult> {
    return pulumi.output(args).apply((a: any) => getQosProfile(a, opts))
}

/**
 * A collection of arguments for invoking getQosProfile.
 */
export interface GetQosProfileOutputArgs {
    folder?: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
