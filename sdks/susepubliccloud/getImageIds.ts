// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getImageIds(args: GetImageIdsArgs, opts?: pulumi.InvokeOptions): Promise<GetImageIdsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("susepubliccloud:index/getImageIds:getImageIds", {
        "cloud": args.cloud,
        "id": args.id,
        "nameRegex": args.nameRegex,
        "region": args.region,
        "sortAscending": args.sortAscending,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImageIds.
 */
export interface GetImageIdsArgs {
    cloud: string;
    id?: string;
    nameRegex?: string;
    region: string;
    sortAscending?: boolean;
    state?: string;
}

/**
 * A collection of values returned by getImageIds.
 */
export interface GetImageIdsResult {
    readonly cloud: string;
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly region: string;
    readonly sortAscending?: boolean;
    readonly state?: string;
}
export function getImageIdsOutput(args: GetImageIdsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImageIdsResult> {
    return pulumi.output(args).apply((a: any) => getImageIds(a, opts))
}

/**
 * A collection of arguments for invoking getImageIds.
 */
export interface GetImageIdsOutputArgs {
    cloud: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    region: pulumi.Input<string>;
    sortAscending?: pulumi.Input<boolean>;
    state?: pulumi.Input<string>;
}
