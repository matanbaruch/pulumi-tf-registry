// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageAccount(args: GetStorageAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageAccountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurestack:index/getStorageAccount:getStorageAccount", {
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageAccount.
 */
export interface GetStorageAccountArgs {
    id?: string;
    name: string;
    resourceGroupName: string;
    timeouts?: inputs.GetStorageAccountTimeouts;
}

/**
 * A collection of values returned by getStorageAccount.
 */
export interface GetStorageAccountResult {
    readonly accountEncryptionSource: string;
    readonly accountKind: string;
    readonly accountReplicationType: string;
    readonly accountTier: string;
    readonly customDomains: outputs.GetStorageAccountCustomDomain[];
    readonly enableBlobEncryption: boolean;
    readonly httpsTrafficOnlyEnabled: boolean;
    readonly id: string;
    readonly location: string;
    readonly name: string;
    readonly primaryAccessKey: string;
    readonly primaryBlobConnectionString: string;
    readonly primaryBlobEndpoint: string;
    readonly primaryConnectionString: string;
    readonly primaryFileEndpoint: string;
    readonly primaryLocation: string;
    readonly primaryQueueEndpoint: string;
    readonly primaryTableEndpoint: string;
    readonly resourceGroupName: string;
    readonly secondaryAccessKey: string;
    readonly secondaryBlobConnectionString: string;
    readonly secondaryBlobEndpoint: string;
    readonly secondaryConnectionString: string;
    readonly secondaryLocation: string;
    readonly secondaryQueueEndpoint: string;
    readonly secondaryTableEndpoint: string;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetStorageAccountTimeouts;
}
export function getStorageAccountOutput(args: GetStorageAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageAccountResult> {
    return pulumi.output(args).apply((a: any) => getStorageAccount(a, opts))
}

/**
 * A collection of arguments for invoking getStorageAccount.
 */
export interface GetStorageAccountOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetStorageAccountTimeoutsArgs>;
}
