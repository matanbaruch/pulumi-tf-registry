// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageContainer(args: GetStorageContainerArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageContainerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurestack:index/getStorageContainer:getStorageContainer", {
        "id": args.id,
        "metadata": args.metadata,
        "name": args.name,
        "storageAccountName": args.storageAccountName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageContainer.
 */
export interface GetStorageContainerArgs {
    id?: string;
    metadata?: {[key: string]: string};
    name: string;
    storageAccountName: string;
    timeouts?: inputs.GetStorageContainerTimeouts;
}

/**
 * A collection of values returned by getStorageContainer.
 */
export interface GetStorageContainerResult {
    readonly containerAccessType: string;
    readonly hasImmutabilityPolicy: boolean;
    readonly hasLegalHold: boolean;
    readonly id: string;
    readonly metadata?: {[key: string]: string};
    readonly name: string;
    readonly storageAccountName: string;
    readonly timeouts?: outputs.GetStorageContainerTimeouts;
}
export function getStorageContainerOutput(args: GetStorageContainerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageContainerResult> {
    return pulumi.output(args).apply((a: any) => getStorageContainer(a, opts))
}

/**
 * A collection of arguments for invoking getStorageContainer.
 */
export interface GetStorageContainerOutputArgs {
    id?: pulumi.Input<string>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name: pulumi.Input<string>;
    storageAccountName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetStorageContainerTimeoutsArgs>;
}
