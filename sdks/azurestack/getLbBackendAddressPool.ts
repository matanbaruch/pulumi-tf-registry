// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLbBackendAddressPool(args: GetLbBackendAddressPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetLbBackendAddressPoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurestack:index/getLbBackendAddressPool:getLbBackendAddressPool", {
        "id": args.id,
        "loadbalancerId": args.loadbalancerId,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLbBackendAddressPool.
 */
export interface GetLbBackendAddressPoolArgs {
    id?: string;
    loadbalancerId: string;
    name: string;
    timeouts?: inputs.GetLbBackendAddressPoolTimeouts;
}

/**
 * A collection of values returned by getLbBackendAddressPool.
 */
export interface GetLbBackendAddressPoolResult {
    readonly backendIpConfigurations: outputs.GetLbBackendAddressPoolBackendIpConfiguration[];
    readonly id: string;
    readonly loadBalancingRules: string[];
    readonly loadbalancerId: string;
    readonly name: string;
    readonly timeouts?: outputs.GetLbBackendAddressPoolTimeouts;
}
export function getLbBackendAddressPoolOutput(args: GetLbBackendAddressPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbBackendAddressPoolResult> {
    return pulumi.output(args).apply((a: any) => getLbBackendAddressPool(a, opts))
}

/**
 * A collection of arguments for invoking getLbBackendAddressPool.
 */
export interface GetLbBackendAddressPoolOutputArgs {
    id?: pulumi.Input<string>;
    loadbalancerId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetLbBackendAddressPoolTimeoutsArgs>;
}
