// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProduct(args?: GetProductArgs, opts?: pulumi.InvokeOptions): Promise<GetProductResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hivelocity:index/getProduct:getProduct", {
        "filters": args.filters,
        "first": args.first,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProduct.
 */
export interface GetProductArgs {
    filters?: inputs.GetProductFilter[];
    first?: boolean;
    id?: string;
}

/**
 * A collection of values returned by getProduct.
 */
export interface GetProductResult {
    readonly annuallyLocationPremium: number;
    readonly biennialLocationPremium: number;
    readonly core: boolean;
    readonly dataCenter: string;
    readonly edge: boolean;
    readonly filters?: outputs.GetProductFilter[];
    readonly first?: boolean;
    readonly hourlyLocationPremium: number;
    readonly id: string;
    readonly monthlyLocationPremium: number;
    readonly productAnnuallyPrice: number;
    readonly productBandwidth: string;
    readonly productBiennialPrice: number;
    readonly productCpu: string;
    readonly productCpuCores: string;
    readonly productDisabledBillingPeriods: string[];
    readonly productDisplayPrice: number;
    readonly productDrive: string;
    readonly productGpu: string;
    readonly productHourlyPrice: number;
    readonly productId: number;
    readonly productMemory: string;
    readonly productMonthlyPrice: number;
    readonly productName: string;
    readonly productOnSale: boolean;
    readonly productOriginalPrice: number;
    readonly productQuarterlyPrice: number;
    readonly productSemiAnnuallyPrice: number;
    readonly productTriennialPrice: number;
    readonly quarterlyLocationPremium: number;
    readonly semiAnnuallyLocationPremium: number;
    readonly stock: string;
    readonly triennialLocationPremium: number;
}
export function getProductOutput(args?: GetProductOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProductResult> {
    return pulumi.output(args).apply((a: any) => getProduct(a, opts))
}

/**
 * A collection of arguments for invoking getProduct.
 */
export interface GetProductOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetProductFilterArgs>[]>;
    first?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
}
