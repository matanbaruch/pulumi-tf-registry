// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDevicePort(args: GetDevicePortArgs, opts?: pulumi.InvokeOptions): Promise<GetDevicePortResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hivelocity:index/getDevicePort:getDevicePort", {
        "deviceId": args.deviceId,
        "filters": args.filters,
        "first": args.first,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDevicePort.
 */
export interface GetDevicePortArgs {
    deviceId: number;
    filters?: inputs.GetDevicePortFilter[];
    first?: boolean;
    id?: string;
}

/**
 * A collection of values returned by getDevicePort.
 */
export interface GetDevicePortResult {
    readonly deviceId: number;
    readonly filters?: outputs.GetDevicePortFilter[];
    readonly first?: boolean;
    readonly id: string;
    readonly isBond: boolean;
    readonly name: string;
    readonly portId: number;
    readonly private: boolean;
}
export function getDevicePortOutput(args: GetDevicePortOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDevicePortResult> {
    return pulumi.output(args).apply((a: any) => getDevicePort(a, opts))
}

/**
 * A collection of arguments for invoking getDevicePort.
 */
export interface GetDevicePortOutputArgs {
    deviceId: pulumi.Input<number>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDevicePortFilterArgs>[]>;
    first?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
}
