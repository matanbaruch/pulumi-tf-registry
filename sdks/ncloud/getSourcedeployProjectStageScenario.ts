// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSourcedeployProjectStageScenario(args: GetSourcedeployProjectStageScenarioArgs, opts?: pulumi.InvokeOptions): Promise<GetSourcedeployProjectStageScenarioResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getSourcedeployProjectStageScenario:getSourcedeployProjectStageScenario", {
        "id": args.id,
        "projectId": args.projectId,
        "stageId": args.stageId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSourcedeployProjectStageScenario.
 */
export interface GetSourcedeployProjectStageScenarioArgs {
    id: number;
    projectId: number;
    stageId: number;
}

/**
 * A collection of values returned by getSourcedeployProjectStageScenario.
 */
export interface GetSourcedeployProjectStageScenarioResult {
    readonly configs: outputs.GetSourcedeployProjectStageScenarioConfig[];
    readonly description: string;
    readonly id: number;
    readonly name: string;
    readonly projectId: number;
    readonly stageId: number;
}
export function getSourcedeployProjectStageScenarioOutput(args: GetSourcedeployProjectStageScenarioOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSourcedeployProjectStageScenarioResult> {
    return pulumi.output(args).apply((a: any) => getSourcedeployProjectStageScenario(a, opts))
}

/**
 * A collection of arguments for invoking getSourcedeployProjectStageScenario.
 */
export interface GetSourcedeployProjectStageScenarioOutputArgs {
    id: pulumi.Input<number>;
    projectId: pulumi.Input<number>;
    stageId: pulumi.Input<number>;
}
