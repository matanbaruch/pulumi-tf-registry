// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCdssNodeProduct(args: GetCdssNodeProductArgs, opts?: pulumi.InvokeOptions): Promise<GetCdssNodeProductResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getCdssNodeProduct:getCdssNodeProduct", {
        "filters": args.filters,
        "osImage": args.osImage,
        "subnetNo": args.subnetNo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCdssNodeProduct.
 */
export interface GetCdssNodeProductArgs {
    filters?: inputs.GetCdssNodeProductFilter[];
    osImage: string;
    subnetNo: string;
}

/**
 * A collection of values returned by getCdssNodeProduct.
 */
export interface GetCdssNodeProductResult {
    readonly cpuCount: string;
    readonly filters?: outputs.GetCdssNodeProductFilter[];
    readonly id: string;
    readonly memorySize: string;
    readonly osImage: string;
    readonly productType: string;
    readonly subnetNo: string;
}
export function getCdssNodeProductOutput(args: GetCdssNodeProductOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCdssNodeProductResult> {
    return pulumi.output(args).apply((a: any) => getCdssNodeProduct(a, opts))
}

/**
 * A collection of arguments for invoking getCdssNodeProduct.
 */
export interface GetCdssNodeProductOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetCdssNodeProductFilterArgs>[]>;
    osImage: pulumi.Input<string>;
    subnetNo: pulumi.Input<string>;
}
