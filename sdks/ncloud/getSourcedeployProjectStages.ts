// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSourcedeployProjectStages(args: GetSourcedeployProjectStagesArgs, opts?: pulumi.InvokeOptions): Promise<GetSourcedeployProjectStagesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getSourcedeployProjectStages:getSourcedeployProjectStages", {
        "filters": args.filters,
        "id": args.id,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSourcedeployProjectStages.
 */
export interface GetSourcedeployProjectStagesArgs {
    filters?: inputs.GetSourcedeployProjectStagesFilter[];
    id?: string;
    projectId: number;
}

/**
 * A collection of values returned by getSourcedeployProjectStages.
 */
export interface GetSourcedeployProjectStagesResult {
    readonly filters?: outputs.GetSourcedeployProjectStagesFilter[];
    readonly id: string;
    readonly projectId: number;
    readonly stages: outputs.GetSourcedeployProjectStagesStage[];
}
export function getSourcedeployProjectStagesOutput(args: GetSourcedeployProjectStagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSourcedeployProjectStagesResult> {
    return pulumi.output(args).apply((a: any) => getSourcedeployProjectStages(a, opts))
}

/**
 * A collection of arguments for invoking getSourcedeployProjectStages.
 */
export interface GetSourcedeployProjectStagesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetSourcedeployProjectStagesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    projectId: pulumi.Input<number>;
}
