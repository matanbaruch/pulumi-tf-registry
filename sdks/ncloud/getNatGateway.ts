// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNatGateway(args?: GetNatGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetNatGatewayResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getNatGateway:getNatGateway", {
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "vpcName": args.vpcName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNatGateway.
 */
export interface GetNatGatewayArgs {
    filters?: inputs.GetNatGatewayFilter[];
    id?: string;
    name?: string;
    vpcName?: string;
}

/**
 * A collection of values returned by getNatGateway.
 */
export interface GetNatGatewayResult {
    readonly description: string;
    readonly filters?: outputs.GetNatGatewayFilter[];
    readonly id: string;
    readonly name: string;
    readonly natGatewayNo: string;
    readonly privateIp: string;
    readonly publicIp: string;
    readonly publicIpNo: string;
    readonly subnetName: string;
    readonly subnetNo: string;
    readonly vpcName?: string;
    readonly vpcNo: string;
    readonly zone: string;
}
export function getNatGatewayOutput(args?: GetNatGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNatGatewayResult> {
    return pulumi.output(args).apply((a: any) => getNatGateway(a, opts))
}

/**
 * A collection of arguments for invoking getNatGateway.
 */
export interface GetNatGatewayOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetNatGatewayFilterArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    vpcName?: pulumi.Input<string>;
}
