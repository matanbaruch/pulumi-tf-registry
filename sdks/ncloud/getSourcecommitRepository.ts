// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSourcecommitRepository(args: GetSourcecommitRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetSourcecommitRepositoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getSourcecommitRepository:getSourcecommitRepository", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSourcecommitRepository.
 */
export interface GetSourcecommitRepositoryArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getSourcecommitRepository.
 */
export interface GetSourcecommitRepositoryResult {
    readonly creator: string;
    readonly description: string;
    readonly fileSafer: boolean;
    readonly gitHttpsUrl: string;
    readonly gitSshUrl: string;
    readonly id: string;
    readonly name: string;
    readonly repositoryNo: string;
}
export function getSourcecommitRepositoryOutput(args: GetSourcecommitRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSourcecommitRepositoryResult> {
    return pulumi.output(args).apply((a: any) => getSourcecommitRepository(a, opts))
}

/**
 * A collection of arguments for invoking getSourcecommitRepository.
 */
export interface GetSourcecommitRepositoryOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
