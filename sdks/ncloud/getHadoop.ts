// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHadoop(args?: GetHadoopArgs, opts?: pulumi.InvokeOptions): Promise<GetHadoopResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getHadoop:getHadoop", {
        "clusterName": args.clusterName,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHadoop.
 */
export interface GetHadoopArgs {
    clusterName?: string;
    id?: string;
}

/**
 * A collection of values returned by getHadoop.
 */
export interface GetHadoopResult {
    readonly accessControlGroupNoLists: string[];
    readonly addOnCodeLists: string[];
    readonly ambariServerHost: string;
    readonly bucketName: string;
    readonly clusterDirectAccessAccount: string;
    readonly clusterName: string;
    readonly clusterTypeCode: string;
    readonly domain: string;
    readonly edgeNodeProductCode: string;
    readonly edgeNodeSubnetNo: string;
    readonly hadoopServerLists: outputs.GetHadoopHadoopServerList[];
    readonly id: string;
    readonly imageProductCode: string;
    readonly isHa: boolean;
    readonly kdcRealm: string;
    readonly loginKeyName: string;
    readonly masterNodeDataStorageSize: number;
    readonly masterNodeDataStorageType: string;
    readonly masterNodeProductCode: string;
    readonly masterNodeSubnetNo: string;
    readonly regionCode: string;
    readonly useKdc: boolean;
    readonly version: string;
    readonly vpcNo: string;
    readonly workerNodeCount: number;
    readonly workerNodeDataStorageSize: number;
    readonly workerNodeDataStorageType: string;
    readonly workerNodeProductCode: string;
    readonly workerNodeSubnetNo: string;
}
export function getHadoopOutput(args?: GetHadoopOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHadoopResult> {
    return pulumi.output(args).apply((a: any) => getHadoop(a, opts))
}

/**
 * A collection of arguments for invoking getHadoop.
 */
export interface GetHadoopOutputArgs {
    clusterName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
