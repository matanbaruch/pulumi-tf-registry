// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServerImage(args?: GetServerImageArgs, opts?: pulumi.InvokeOptions): Promise<GetServerImageResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getServerImage:getServerImage", {
        "exclusionProductCode": args.exclusionProductCode,
        "filters": args.filters,
        "id": args.id,
        "infraResourceDetailTypeCode": args.infraResourceDetailTypeCode,
        "platformType": args.platformType,
        "platformTypeCodeLists": args.platformTypeCodeLists,
        "productCode": args.productCode,
        "productNameRegex": args.productNameRegex,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServerImage.
 */
export interface GetServerImageArgs {
    /**
     * @deprecated Deprecated
     */
    exclusionProductCode?: string;
    filters?: inputs.GetServerImageFilter[];
    id?: string;
    infraResourceDetailTypeCode?: string;
    platformType?: string;
    /**
     * @deprecated Deprecated
     */
    platformTypeCodeLists?: string[];
    productCode?: string;
    /**
     * @deprecated Deprecated
     */
    productNameRegex?: string;
}

/**
 * A collection of values returned by getServerImage.
 */
export interface GetServerImageResult {
    readonly baseBlockStorageSize: string;
    /**
     * @deprecated Deprecated
     */
    readonly exclusionProductCode?: string;
    readonly filters?: outputs.GetServerImageFilter[];
    readonly id: string;
    readonly infraResourceDetailTypeCode: string;
    readonly infraResourceType: string;
    readonly osInformation: string;
    readonly platformType: string;
    /**
     * @deprecated Deprecated
     */
    readonly platformTypeCodeLists?: string[];
    readonly productCode: string;
    readonly productDescription: string;
    readonly productName: string;
    /**
     * @deprecated Deprecated
     */
    readonly productNameRegex?: string;
    readonly productType: string;
}
export function getServerImageOutput(args?: GetServerImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerImageResult> {
    return pulumi.output(args).apply((a: any) => getServerImage(a, opts))
}

/**
 * A collection of arguments for invoking getServerImage.
 */
export interface GetServerImageOutputArgs {
    /**
     * @deprecated Deprecated
     */
    exclusionProductCode?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetServerImageFilterArgs>[]>;
    id?: pulumi.Input<string>;
    infraResourceDetailTypeCode?: pulumi.Input<string>;
    platformType?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    platformTypeCodeLists?: pulumi.Input<pulumi.Input<string>[]>;
    productCode?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    productNameRegex?: pulumi.Input<string>;
}
