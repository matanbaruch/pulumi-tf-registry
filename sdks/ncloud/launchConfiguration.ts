// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LaunchConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing LaunchConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LaunchConfigurationState, opts?: pulumi.CustomResourceOptions): LaunchConfiguration {
        return new LaunchConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ncloud:index/launchConfiguration:LaunchConfiguration';

    /**
     * Returns true if the given object is an instance of LaunchConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LaunchConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LaunchConfiguration.__pulumiType;
    }

    /**
     * This parameter cannot be duplicated in classic type.
     */
    public readonly accessControlGroupNoLists!: pulumi.Output<string[]>;
    public readonly initScriptNo!: pulumi.Output<string | undefined>;
    public readonly isEncryptedVolume!: pulumi.Output<boolean>;
    public /*out*/ readonly launchConfigurationNo!: pulumi.Output<string>;
    public readonly loginKeyName!: pulumi.Output<string>;
    public readonly memberServerImageNo!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly serverImageProductCode!: pulumi.Output<string>;
    public readonly serverProductCode!: pulumi.Output<string>;
    public readonly userData!: pulumi.Output<string | undefined>;

    /**
     * Create a LaunchConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LaunchConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LaunchConfigurationArgs | LaunchConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LaunchConfigurationState | undefined;
            resourceInputs["accessControlGroupNoLists"] = state ? state.accessControlGroupNoLists : undefined;
            resourceInputs["initScriptNo"] = state ? state.initScriptNo : undefined;
            resourceInputs["isEncryptedVolume"] = state ? state.isEncryptedVolume : undefined;
            resourceInputs["launchConfigurationNo"] = state ? state.launchConfigurationNo : undefined;
            resourceInputs["loginKeyName"] = state ? state.loginKeyName : undefined;
            resourceInputs["memberServerImageNo"] = state ? state.memberServerImageNo : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serverImageProductCode"] = state ? state.serverImageProductCode : undefined;
            resourceInputs["serverProductCode"] = state ? state.serverProductCode : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
        } else {
            const args = argsOrState as LaunchConfigurationArgs | undefined;
            resourceInputs["accessControlGroupNoLists"] = args ? args.accessControlGroupNoLists : undefined;
            resourceInputs["initScriptNo"] = args ? args.initScriptNo : undefined;
            resourceInputs["isEncryptedVolume"] = args ? args.isEncryptedVolume : undefined;
            resourceInputs["loginKeyName"] = args ? args.loginKeyName : undefined;
            resourceInputs["memberServerImageNo"] = args ? args.memberServerImageNo : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serverImageProductCode"] = args ? args.serverImageProductCode : undefined;
            resourceInputs["serverProductCode"] = args ? args.serverProductCode : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["launchConfigurationNo"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LaunchConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LaunchConfiguration resources.
 */
export interface LaunchConfigurationState {
    /**
     * This parameter cannot be duplicated in classic type.
     */
    accessControlGroupNoLists?: pulumi.Input<pulumi.Input<string>[]>;
    initScriptNo?: pulumi.Input<string>;
    isEncryptedVolume?: pulumi.Input<boolean>;
    launchConfigurationNo?: pulumi.Input<string>;
    loginKeyName?: pulumi.Input<string>;
    memberServerImageNo?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    serverImageProductCode?: pulumi.Input<string>;
    serverProductCode?: pulumi.Input<string>;
    userData?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LaunchConfiguration resource.
 */
export interface LaunchConfigurationArgs {
    /**
     * This parameter cannot be duplicated in classic type.
     */
    accessControlGroupNoLists?: pulumi.Input<pulumi.Input<string>[]>;
    initScriptNo?: pulumi.Input<string>;
    isEncryptedVolume?: pulumi.Input<boolean>;
    loginKeyName?: pulumi.Input<string>;
    memberServerImageNo?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    serverImageProductCode?: pulumi.Input<string>;
    serverProductCode?: pulumi.Input<string>;
    userData?: pulumi.Input<string>;
}
