// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMysqlImageProducts(args?: GetMysqlImageProductsArgs, opts?: pulumi.InvokeOptions): Promise<GetMysqlImageProductsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getMysqlImageProducts:getMysqlImageProducts", {
        "filters": args.filters,
        "outputFile": args.outputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMysqlImageProducts.
 */
export interface GetMysqlImageProductsArgs {
    filters?: inputs.GetMysqlImageProductsFilter[];
    outputFile?: string;
}

/**
 * A collection of values returned by getMysqlImageProducts.
 */
export interface GetMysqlImageProductsResult {
    readonly filters?: outputs.GetMysqlImageProductsFilter[];
    readonly id: string;
    readonly imageProductLists: outputs.GetMysqlImageProductsImageProductList[];
    readonly outputFile?: string;
}
export function getMysqlImageProductsOutput(args?: GetMysqlImageProductsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMysqlImageProductsResult> {
    return pulumi.output(args).apply((a: any) => getMysqlImageProducts(a, opts))
}

/**
 * A collection of arguments for invoking getMysqlImageProducts.
 */
export interface GetMysqlImageProductsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetMysqlImageProductsFilterArgs>[]>;
    outputFile?: pulumi.Input<string>;
}
