// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNasVolumes(args?: GetNasVolumesArgs, opts?: pulumi.InvokeOptions): Promise<GetNasVolumesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getNasVolumes:getNasVolumes", {
        "filters": args.filters,
        "id": args.id,
        "isEventConfiguration": args.isEventConfiguration,
        "isSnapshotConfiguration": args.isSnapshotConfiguration,
        "noLists": args.noLists,
        "outputFile": args.outputFile,
        "region": args.region,
        "volumeAllotmentProtocolTypeCode": args.volumeAllotmentProtocolTypeCode,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNasVolumes.
 */
export interface GetNasVolumesArgs {
    filters?: inputs.GetNasVolumesFilter[];
    id?: string;
    isEventConfiguration?: boolean;
    isSnapshotConfiguration?: boolean;
    noLists?: string[];
    outputFile?: string;
    region?: string;
    volumeAllotmentProtocolTypeCode?: string;
    zone?: string;
}

/**
 * A collection of values returned by getNasVolumes.
 */
export interface GetNasVolumesResult {
    readonly filters?: outputs.GetNasVolumesFilter[];
    readonly id: string;
    readonly ids: string[];
    readonly isEventConfiguration?: boolean;
    readonly isSnapshotConfiguration?: boolean;
    readonly nasVolumes: outputs.GetNasVolumesNasVolume[];
    readonly noLists: string[];
    readonly outputFile?: string;
    readonly region?: string;
    readonly volumeAllotmentProtocolTypeCode?: string;
    readonly zone?: string;
}
export function getNasVolumesOutput(args?: GetNasVolumesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNasVolumesResult> {
    return pulumi.output(args).apply((a: any) => getNasVolumes(a, opts))
}

/**
 * A collection of arguments for invoking getNasVolumes.
 */
export interface GetNasVolumesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetNasVolumesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    isEventConfiguration?: pulumi.Input<boolean>;
    isSnapshotConfiguration?: pulumi.Input<boolean>;
    noLists?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    volumeAllotmentProtocolTypeCode?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
