// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRedisConfigGroup(args: GetRedisConfigGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetRedisConfigGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getRedisConfigGroup:getRedisConfigGroup", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRedisConfigGroup.
 */
export interface GetRedisConfigGroupArgs {
    name: string;
}

/**
 * A collection of values returned by getRedisConfigGroup.
 */
export interface GetRedisConfigGroupResult {
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly redisVersion: string;
}
export function getRedisConfigGroupOutput(args: GetRedisConfigGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRedisConfigGroupResult> {
    return pulumi.output(args).apply((a: any) => getRedisConfigGroup(a, opts))
}

/**
 * A collection of arguments for invoking getRedisConfigGroup.
 */
export interface GetRedisConfigGroupOutputArgs {
    name: pulumi.Input<string>;
}
