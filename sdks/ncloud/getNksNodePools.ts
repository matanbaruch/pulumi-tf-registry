// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNksNodePools(args: GetNksNodePoolsArgs, opts?: pulumi.InvokeOptions): Promise<GetNksNodePoolsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getNksNodePools:getNksNodePools", {
        "clusterUuid": args.clusterUuid,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNksNodePools.
 */
export interface GetNksNodePoolsArgs {
    clusterUuid: string;
    id?: string;
}

/**
 * A collection of values returned by getNksNodePools.
 */
export interface GetNksNodePoolsResult {
    readonly clusterUuid: string;
    readonly id: string;
    readonly nodePoolNames: string[];
}
export function getNksNodePoolsOutput(args: GetNksNodePoolsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNksNodePoolsResult> {
    return pulumi.output(args).apply((a: any) => getNksNodePools(a, opts))
}

/**
 * A collection of arguments for invoking getNksNodePools.
 */
export interface GetNksNodePoolsOutputArgs {
    clusterUuid: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
