// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBlockStorageSnapshot(args?: GetBlockStorageSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetBlockStorageSnapshotResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getBlockStorageSnapshot:getBlockStorageSnapshot", {
        "blockStorageNo": args.blockStorageNo,
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlockStorageSnapshot.
 */
export interface GetBlockStorageSnapshotArgs {
    blockStorageNo?: string;
    filters?: inputs.GetBlockStorageSnapshotFilter[];
    id?: string;
}

/**
 * A collection of values returned by getBlockStorageSnapshot.
 */
export interface GetBlockStorageSnapshotResult {
    readonly blockStorageNo: string;
    readonly description: string;
    readonly filters?: outputs.GetBlockStorageSnapshotFilter[];
    readonly id: string;
    readonly name: string;
    readonly snapshotNo: string;
    readonly volumeSize: number;
}
export function getBlockStorageSnapshotOutput(args?: GetBlockStorageSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlockStorageSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getBlockStorageSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getBlockStorageSnapshot.
 */
export interface GetBlockStorageSnapshotOutputArgs {
    blockStorageNo?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetBlockStorageSnapshotFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
