// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCdssOsImage(args?: GetCdssOsImageArgs, opts?: pulumi.InvokeOptions): Promise<GetCdssOsImageResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getCdssOsImage:getCdssOsImage", {
        "filters": args.filters,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCdssOsImage.
 */
export interface GetCdssOsImageArgs {
    filters?: inputs.GetCdssOsImageFilter[];
}

/**
 * A collection of values returned by getCdssOsImage.
 */
export interface GetCdssOsImageResult {
    readonly filters?: outputs.GetCdssOsImageFilter[];
    readonly id: string;
    readonly imageName: string;
}
export function getCdssOsImageOutput(args?: GetCdssOsImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCdssOsImageResult> {
    return pulumi.output(args).apply((a: any) => getCdssOsImage(a, opts))
}

/**
 * A collection of arguments for invoking getCdssOsImage.
 */
export interface GetCdssOsImageOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetCdssOsImageFilterArgs>[]>;
}
