// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSourcebuildProject(args: GetSourcebuildProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetSourcebuildProjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getSourcebuildProject:getSourcebuildProject", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSourcebuildProject.
 */
export interface GetSourcebuildProjectArgs {
    id: number;
}

/**
 * A collection of values returned by getSourcebuildProject.
 */
export interface GetSourcebuildProjectResult {
    readonly artifacts: outputs.GetSourcebuildProjectArtifact[];
    readonly buildCommands: outputs.GetSourcebuildProjectBuildCommand[];
    readonly buildImageUploads: outputs.GetSourcebuildProjectBuildImageUpload[];
    readonly createds: outputs.GetSourcebuildProjectCreated[];
    readonly description: string;
    readonly envs: outputs.GetSourcebuildProjectEnv[];
    readonly id: number;
    readonly lastBuilds: outputs.GetSourcebuildProjectLastBuild[];
    readonly linkeds: outputs.GetSourcebuildProjectLinked[];
    readonly name: string;
    readonly projectNo: number;
    readonly sources: outputs.GetSourcebuildProjectSource[];
}
export function getSourcebuildProjectOutput(args: GetSourcebuildProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSourcebuildProjectResult> {
    return pulumi.output(args).apply((a: any) => getSourcebuildProject(a, opts))
}

/**
 * A collection of arguments for invoking getSourcebuildProject.
 */
export interface GetSourcebuildProjectOutputArgs {
    id: pulumi.Input<number>;
}
