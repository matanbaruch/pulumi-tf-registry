// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRegions(args?: GetRegionsArgs, opts?: pulumi.InvokeOptions): Promise<GetRegionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getRegions:getRegions", {
        "code": args.code,
        "filters": args.filters,
        "id": args.id,
        "outputFile": args.outputFile,
        "regions": args.regions,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRegions.
 */
export interface GetRegionsArgs {
    code?: string;
    filters?: inputs.GetRegionsFilter[];
    id?: string;
    outputFile?: string;
    regions?: inputs.GetRegionsRegion[];
}

/**
 * A collection of values returned by getRegions.
 */
export interface GetRegionsResult {
    readonly code?: string;
    readonly filters?: outputs.GetRegionsFilter[];
    readonly id: string;
    readonly outputFile?: string;
    readonly regions?: outputs.GetRegionsRegion[];
}
export function getRegionsOutput(args?: GetRegionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRegionsResult> {
    return pulumi.output(args).apply((a: any) => getRegions(a, opts))
}

/**
 * A collection of arguments for invoking getRegions.
 */
export interface GetRegionsOutputArgs {
    code?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetRegionsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    regions?: pulumi.Input<pulumi.Input<inputs.GetRegionsRegionArgs>[]>;
}
