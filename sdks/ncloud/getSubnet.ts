// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSubnet(args?: GetSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetSubnetResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getSubnet:getSubnet", {
        "filters": args.filters,
        "id": args.id,
        "networkAclNo": args.networkAclNo,
        "subnet": args.subnet,
        "subnetType": args.subnetType,
        "usageType": args.usageType,
        "vpcNo": args.vpcNo,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetArgs {
    filters?: inputs.GetSubnetFilter[];
    id?: string;
    networkAclNo?: string;
    subnet?: string;
    subnetType?: string;
    usageType?: string;
    vpcNo?: string;
    zone?: string;
}

/**
 * A collection of values returned by getSubnet.
 */
export interface GetSubnetResult {
    readonly filters?: outputs.GetSubnetFilter[];
    readonly id: string;
    readonly name: string;
    readonly networkAclNo: string;
    readonly subnet: string;
    readonly subnetNo: string;
    readonly subnetType: string;
    readonly usageType: string;
    readonly vpcNo: string;
    readonly zone: string;
}
export function getSubnetOutput(args?: GetSubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubnetResult> {
    return pulumi.output(args).apply((a: any) => getSubnet(a, opts))
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetSubnetFilterArgs>[]>;
    id?: pulumi.Input<string>;
    networkAclNo?: pulumi.Input<string>;
    subnet?: pulumi.Input<string>;
    subnetType?: pulumi.Input<string>;
    usageType?: pulumi.Input<string>;
    vpcNo?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
