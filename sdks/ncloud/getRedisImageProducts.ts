// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRedisImageProducts(args?: GetRedisImageProductsArgs, opts?: pulumi.InvokeOptions): Promise<GetRedisImageProductsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getRedisImageProducts:getRedisImageProducts", {
        "filters": args.filters,
        "outputFile": args.outputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRedisImageProducts.
 */
export interface GetRedisImageProductsArgs {
    filters?: inputs.GetRedisImageProductsFilter[];
    outputFile?: string;
}

/**
 * A collection of values returned by getRedisImageProducts.
 */
export interface GetRedisImageProductsResult {
    readonly filters?: outputs.GetRedisImageProductsFilter[];
    readonly id: string;
    readonly imageProductLists: outputs.GetRedisImageProductsImageProductList[];
    readonly outputFile?: string;
}
export function getRedisImageProductsOutput(args?: GetRedisImageProductsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRedisImageProductsResult> {
    return pulumi.output(args).apply((a: any) => getRedisImageProducts(a, opts))
}

/**
 * A collection of arguments for invoking getRedisImageProducts.
 */
export interface GetRedisImageProductsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetRedisImageProductsFilterArgs>[]>;
    outputFile?: pulumi.Input<string>;
}
