// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMysqlProducts(args: GetMysqlProductsArgs, opts?: pulumi.InvokeOptions): Promise<GetMysqlProductsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getMysqlProducts:getMysqlProducts", {
        "filters": args.filters,
        "imageProductCode": args.imageProductCode,
        "outputFile": args.outputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMysqlProducts.
 */
export interface GetMysqlProductsArgs {
    filters?: inputs.GetMysqlProductsFilter[];
    imageProductCode: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getMysqlProducts.
 */
export interface GetMysqlProductsResult {
    readonly filters?: outputs.GetMysqlProductsFilter[];
    readonly id: string;
    readonly imageProductCode: string;
    readonly outputFile?: string;
    readonly productLists: outputs.GetMysqlProductsProductList[];
}
export function getMysqlProductsOutput(args: GetMysqlProductsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMysqlProductsResult> {
    return pulumi.output(args).apply((a: any) => getMysqlProducts(a, opts))
}

/**
 * A collection of arguments for invoking getMysqlProducts.
 */
export interface GetMysqlProductsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetMysqlProductsFilterArgs>[]>;
    imageProductCode: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
