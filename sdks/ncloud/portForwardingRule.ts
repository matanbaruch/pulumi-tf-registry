// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PortForwardingRule extends pulumi.CustomResource {
    /**
     * Get an existing PortForwardingRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PortForwardingRuleState, opts?: pulumi.CustomResourceOptions): PortForwardingRule {
        return new PortForwardingRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ncloud:index/portForwardingRule:PortForwardingRule';

    /**
     * Returns true if the given object is an instance of PortForwardingRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PortForwardingRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PortForwardingRule.__pulumiType;
    }

    /**
     * Port forwarding configuration number.
     */
    public readonly portForwardingConfigurationNo!: pulumi.Output<string>;
    /**
     * External port for port forwarding
     */
    public readonly portForwardingExternalPort!: pulumi.Output<number>;
    /**
     * Internal port for port forwarding. Only the following ports are available. [Linux: `22` | Windows: `3389`]
     */
    public readonly portForwardingInternalPort!: pulumi.Output<number>;
    /**
     * Port forwarding Public IP
     */
    public /*out*/ readonly portForwardingPublicIp!: pulumi.Output<string>;
    /**
     * Server instance number for which port forwarding is set
     */
    public readonly serverInstanceNo!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.PortForwardingRuleTimeouts | undefined>;
    /**
     * Zone info
     */
    public /*out*/ readonly zone!: pulumi.Output<string>;

    /**
     * Create a PortForwardingRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PortForwardingRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PortForwardingRuleArgs | PortForwardingRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PortForwardingRuleState | undefined;
            resourceInputs["portForwardingConfigurationNo"] = state ? state.portForwardingConfigurationNo : undefined;
            resourceInputs["portForwardingExternalPort"] = state ? state.portForwardingExternalPort : undefined;
            resourceInputs["portForwardingInternalPort"] = state ? state.portForwardingInternalPort : undefined;
            resourceInputs["portForwardingPublicIp"] = state ? state.portForwardingPublicIp : undefined;
            resourceInputs["serverInstanceNo"] = state ? state.serverInstanceNo : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as PortForwardingRuleArgs | undefined;
            if ((!args || args.portForwardingExternalPort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portForwardingExternalPort'");
            }
            if ((!args || args.portForwardingInternalPort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portForwardingInternalPort'");
            }
            if ((!args || args.serverInstanceNo === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverInstanceNo'");
            }
            resourceInputs["portForwardingConfigurationNo"] = args ? args.portForwardingConfigurationNo : undefined;
            resourceInputs["portForwardingExternalPort"] = args ? args.portForwardingExternalPort : undefined;
            resourceInputs["portForwardingInternalPort"] = args ? args.portForwardingInternalPort : undefined;
            resourceInputs["serverInstanceNo"] = args ? args.serverInstanceNo : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["portForwardingPublicIp"] = undefined /*out*/;
            resourceInputs["zone"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PortForwardingRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PortForwardingRule resources.
 */
export interface PortForwardingRuleState {
    /**
     * Port forwarding configuration number.
     */
    portForwardingConfigurationNo?: pulumi.Input<string>;
    /**
     * External port for port forwarding
     */
    portForwardingExternalPort?: pulumi.Input<number>;
    /**
     * Internal port for port forwarding. Only the following ports are available. [Linux: `22` | Windows: `3389`]
     */
    portForwardingInternalPort?: pulumi.Input<number>;
    /**
     * Port forwarding Public IP
     */
    portForwardingPublicIp?: pulumi.Input<string>;
    /**
     * Server instance number for which port forwarding is set
     */
    serverInstanceNo?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.PortForwardingRuleTimeouts>;
    /**
     * Zone info
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PortForwardingRule resource.
 */
export interface PortForwardingRuleArgs {
    /**
     * Port forwarding configuration number.
     */
    portForwardingConfigurationNo?: pulumi.Input<string>;
    /**
     * External port for port forwarding
     */
    portForwardingExternalPort: pulumi.Input<number>;
    /**
     * Internal port for port forwarding. Only the following ports are available. [Linux: `22` | Windows: `3389`]
     */
    portForwardingInternalPort: pulumi.Input<number>;
    /**
     * Server instance number for which port forwarding is set
     */
    serverInstanceNo: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.PortForwardingRuleTimeouts>;
}
