// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNksKubeConfig(args: GetNksKubeConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetNksKubeConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getNksKubeConfig:getNksKubeConfig", {
        "clusterUuid": args.clusterUuid,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNksKubeConfig.
 */
export interface GetNksKubeConfigArgs {
    clusterUuid: string;
    id?: string;
}

/**
 * A collection of values returned by getNksKubeConfig.
 */
export interface GetNksKubeConfigResult {
    readonly clientCertificate: string;
    readonly clientKey: string;
    readonly clusterCaCertificate: string;
    readonly clusterUuid: string;
    readonly host: string;
    readonly id: string;
}
export function getNksKubeConfigOutput(args: GetNksKubeConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNksKubeConfigResult> {
    return pulumi.output(args).apply((a: any) => getNksKubeConfig(a, opts))
}

/**
 * A collection of arguments for invoking getNksKubeConfig.
 */
export interface GetNksKubeConfigOutputArgs {
    clusterUuid: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
