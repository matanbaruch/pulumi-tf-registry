// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAccessControlRule(args?: GetAccessControlRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessControlRuleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getAccessControlRule:getAccessControlRule", {
        "accessControlGroupConfigurationNo": args.accessControlGroupConfigurationNo,
        "accessControlGroupName": args.accessControlGroupName,
        "destinationPort": args.destinationPort,
        "id": args.id,
        "isDefaultGroup": args.isDefaultGroup,
        "protocolType": args.protocolType,
        "sourceNameRegex": args.sourceNameRegex,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccessControlRule.
 */
export interface GetAccessControlRuleArgs {
    accessControlGroupConfigurationNo?: string;
    accessControlGroupName?: string;
    destinationPort?: string;
    id?: string;
    isDefaultGroup?: boolean;
    protocolType?: string;
    sourceNameRegex?: string;
}

/**
 * A collection of values returned by getAccessControlRule.
 */
export interface GetAccessControlRuleResult {
    readonly accessControlGroupConfigurationNo: string;
    readonly accessControlGroupName?: string;
    readonly configurationNo: string;
    readonly description: string;
    readonly destinationPort: string;
    readonly id: string;
    readonly isDefaultGroup?: boolean;
    readonly protocolType: string;
    readonly sourceConfigurationNo: string;
    readonly sourceIp: string;
    readonly sourceName: string;
    readonly sourceNameRegex?: string;
}
export function getAccessControlRuleOutput(args?: GetAccessControlRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessControlRuleResult> {
    return pulumi.output(args).apply((a: any) => getAccessControlRule(a, opts))
}

/**
 * A collection of arguments for invoking getAccessControlRule.
 */
export interface GetAccessControlRuleOutputArgs {
    accessControlGroupConfigurationNo?: pulumi.Input<string>;
    accessControlGroupName?: pulumi.Input<string>;
    destinationPort?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isDefaultGroup?: pulumi.Input<boolean>;
    protocolType?: pulumi.Input<string>;
    sourceNameRegex?: pulumi.Input<string>;
}
