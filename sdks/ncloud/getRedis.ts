// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRedis(args?: GetRedisArgs, opts?: pulumi.InvokeOptions): Promise<GetRedisResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getRedis:getRedis", {
        "id": args.id,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRedis.
 */
export interface GetRedisArgs {
    id?: string;
    serviceName?: string;
}

/**
 * A collection of values returned by getRedis.
 */
export interface GetRedisResult {
    readonly accessControlGroupNoLists: string[];
    readonly backupFileRetentionPeriod: number;
    readonly backupSchedule: string;
    readonly backupTime: string;
    readonly configGroupNo: string;
    readonly id: string;
    readonly imageProductCode: string;
    readonly isBackup: boolean;
    readonly isHa: boolean;
    readonly mode: string;
    readonly port: number;
    readonly productCode: string;
    readonly redisServerLists: outputs.GetRedisRedisServerList[];
    readonly regionCode: string;
    readonly serverNamePrefix: string;
    readonly serviceName: string;
    readonly subnetNo: string;
    readonly vpcNo: string;
}
export function getRedisOutput(args?: GetRedisOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRedisResult> {
    return pulumi.output(args).apply((a: any) => getRedis(a, opts))
}

/**
 * A collection of arguments for invoking getRedis.
 */
export interface GetRedisOutputArgs {
    id?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
}
