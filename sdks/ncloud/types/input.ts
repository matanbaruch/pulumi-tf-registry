// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AccessControlGroupRuleInbound {
    description: pulumi.Input<string>;
    ipBlock: pulumi.Input<string>;
    portRange: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    sourceAccessControlGroupNo: pulumi.Input<string>;
}

export interface AccessControlGroupRuleOutbound {
    description: pulumi.Input<string>;
    ipBlock: pulumi.Input<string>;
    portRange: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    sourceAccessControlGroupNo: pulumi.Input<string>;
}

export interface AccessControlGroupRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BlockStorageSnapshotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface BlockStorageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface CdssClusterBrokerNodes {
    nodeCount: pulumi.Input<number>;
    nodeProductCode: pulumi.Input<string>;
    storageSize: pulumi.Input<number>;
    subnetNo: pulumi.Input<string>;
}

export interface CdssClusterCmak {
    userName: pulumi.Input<string>;
    userPassword: pulumi.Input<string>;
}

export interface CdssClusterEndpoint {
    hostsPrivateEndpointTls: pulumi.Input<pulumi.Input<string>[]>;
    hostsPublicEndpointTls: pulumi.Input<pulumi.Input<string>[]>;
    plaintexts: pulumi.Input<pulumi.Input<string>[]>;
    publicEndpointPlaintextListenerPorts: pulumi.Input<pulumi.Input<string>[]>;
    publicEndpointPlaintexts: pulumi.Input<pulumi.Input<string>[]>;
    publicEndpointTls: pulumi.Input<pulumi.Input<string>[]>;
    publicEndpointTlsListenerPorts: pulumi.Input<pulumi.Input<string>[]>;
    tls: pulumi.Input<pulumi.Input<string>[]>;
    zookeepers: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdssClusterManagerNode {
    nodeProductCode: pulumi.Input<string>;
    subnetNo: pulumi.Input<string>;
}

export interface CdssClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GetAccessControlGroupFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAccessControlGroupFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAutoScalingAdjustmentTypesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAutoScalingAdjustmentTypesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAutoScalingGroupFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAutoScalingGroupFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAutoScalingPolicyFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAutoScalingPolicyFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAutoScalingScheduleFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetAutoScalingScheduleFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBlockStorageFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBlockStorageFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBlockStorageSnapshotFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetBlockStorageSnapshotFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCdssClusterBrokerNode {
    nodeCount?: string;
    nodeProductCode?: string;
    storageSize?: string;
    subnetNo?: string;
}

export interface GetCdssClusterBrokerNodeArgs {
    nodeCount?: pulumi.Input<string>;
    nodeProductCode?: pulumi.Input<string>;
    storageSize?: pulumi.Input<string>;
    subnetNo?: pulumi.Input<string>;
}

export interface GetCdssClusterCmak {
    userName?: string;
    userPassword?: string;
}

export interface GetCdssClusterCmakArgs {
    userName?: pulumi.Input<string>;
    userPassword?: pulumi.Input<string>;
}

export interface GetCdssClusterFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCdssClusterFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCdssClusterManagerNode {
    nodeProductCode?: string;
    subnetNo?: string;
}

export interface GetCdssClusterManagerNodeArgs {
    nodeProductCode?: pulumi.Input<string>;
    subnetNo?: pulumi.Input<string>;
}

export interface GetCdssConfigGroupFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCdssConfigGroupFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCdssKafkaVersionFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCdssKafkaVersionFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCdssNodeProductFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCdssNodeProductFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCdssOsImageFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetCdssOsImageFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetHadoopImageProductsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetHadoopImageProductsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetHadoopProductsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetHadoopProductsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetHadoopProductsProductList {
    cpuCount?: number;
    diskType?: string;
    infraResourceDetailType?: string;
    infraResourceType?: string;
    memorySize?: number;
    productCode?: string;
    productDescription?: string;
    productName?: string;
    productType?: string;
}

export interface GetHadoopProductsProductListArgs {
    cpuCount?: pulumi.Input<number>;
    diskType?: pulumi.Input<string>;
    infraResourceDetailType?: pulumi.Input<string>;
    infraResourceType?: pulumi.Input<string>;
    memorySize?: pulumi.Input<number>;
    productCode?: pulumi.Input<string>;
    productDescription?: pulumi.Input<string>;
    productName?: pulumi.Input<string>;
    productType?: pulumi.Input<string>;
}

export interface GetInitScriptFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetInitScriptFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLaunchConfigurationFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLaunchConfigurationFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLbFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLbFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLbListenerFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLbListenerFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLbTargetGroupFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetLbTargetGroupFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMemberServerImageFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMemberServerImageFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMemberServerImagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMemberServerImagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMongodbImageProductsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMongodbImageProductsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMongodbProductsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMongodbProductsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMssqlImageProductsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMssqlImageProductsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMssqlProductsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMssqlProductsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMysqlImageProductsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlImageProductsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMysqlProductsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetMysqlProductsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNasVolumeFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNasVolumeFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNasVolumesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNasVolumesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNatGatewayFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNatGatewayFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkAclDenyAllowGroupsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkAclDenyAllowGroupsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkAclsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkAclsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkInterfaceFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkInterfaceFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkInterfacesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNetworkInterfacesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNksClusterIpAcl {
    action: string;
    address: string;
    comment: string;
}

export interface GetNksClusterIpAclArgs {
    action: pulumi.Input<string>;
    address: pulumi.Input<string>;
    comment: pulumi.Input<string>;
}

export interface GetNksClusterOidc {
    clientId: string;
    groupsClaim?: string;
    groupsPrefix?: string;
    issuerUrl: string;
    requiredClaim?: string;
    usernameClaim?: string;
    usernamePrefix?: string;
}

export interface GetNksClusterOidcArgs {
    clientId: pulumi.Input<string>;
    groupsClaim?: pulumi.Input<string>;
    groupsPrefix?: pulumi.Input<string>;
    issuerUrl: pulumi.Input<string>;
    requiredClaim?: pulumi.Input<string>;
    usernameClaim?: pulumi.Input<string>;
    usernamePrefix?: pulumi.Input<string>;
}

export interface GetNksNodePoolLabel {
    key: string;
    value: string;
}

export interface GetNksNodePoolLabelArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetNksNodePoolTaint {
    effect: string;
    key: string;
    value: string;
}

export interface GetNksNodePoolTaintArgs {
    effect: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetNksServerImagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNksServerImagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNksServerProductsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNksServerProductsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNksVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetNksVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPlacementGroupFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetPlacementGroupFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPublicIpFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetPublicIpFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRedisImageProductsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetRedisImageProductsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRedisProductsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetRedisProductsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRegionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetRegionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRegionsRegion {
    regionCode?: string;
    regionName?: string;
    regionNo?: string;
}

export interface GetRegionsRegionArgs {
    regionCode?: pulumi.Input<string>;
    regionName?: pulumi.Input<string>;
    regionNo?: pulumi.Input<string>;
}

export interface GetRouteTableFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetRouteTableFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRouteTablesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetRouteTablesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServerFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServerFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServerImageFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServerImageFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServerImagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServerImagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServerProductFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServerProductFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServerProductsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServerProductsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetServersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetServersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSesClustersFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSesClustersFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSesNodeOsImagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSesNodeOsImagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSesNodeProductsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSesNodeProductsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSesVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSesVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSourcebuildProjectComputesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSourcebuildProjectComputesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSourcebuildProjectDockerEnginesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSourcebuildProjectDockerEnginesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSourcebuildProjectOsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSourcebuildProjectOsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSourcebuildProjectOsRuntimeVersionsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSourcebuildProjectOsRuntimeVersionsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSourcebuildProjectOsRuntimesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSourcebuildProjectOsRuntimesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSourcebuildProjectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSourcebuildProjectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSourcecommitRepositoriesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSourcecommitRepositoriesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSourcedeployProjectStageScenariosFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSourcedeployProjectStageScenariosFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSourcedeployProjectStagesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSourcedeployProjectStagesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSourcedeployProjectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSourcedeployProjectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSourcepipelineProjectsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSourcepipelineProjectsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSubnetFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSubnetFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSubnetsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetSubnetsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSubnetsSubnet {
    id?: string;
    name?: string;
    networkAclNo?: string;
    subnet?: string;
    subnetNo?: string;
    subnetType?: string;
    usageType?: string;
    vpcNo?: string;
    zone?: string;
}

export interface GetSubnetsSubnetArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkAclNo?: pulumi.Input<string>;
    subnet?: pulumi.Input<string>;
    subnetNo?: pulumi.Input<string>;
    subnetType?: pulumi.Input<string>;
    usageType?: pulumi.Input<string>;
    vpcNo?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}

export interface GetVpcFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVpcFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVpcPeeringFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVpcPeeringFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVpcsFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetVpcsFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVpcsVpc {
    defaultAccessControlGroupNo?: string;
    defaultNetworkAclNo?: string;
    defaultPrivateRouteTableNo?: string;
    defaultPublicRouteTableNo?: string;
    id?: string;
    ipv4CidrBlock?: string;
    name?: string;
    vpcNo?: string;
}

export interface GetVpcsVpcArgs {
    defaultAccessControlGroupNo?: pulumi.Input<string>;
    defaultNetworkAclNo?: pulumi.Input<string>;
    defaultPrivateRouteTableNo?: pulumi.Input<string>;
    defaultPublicRouteTableNo?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ipv4CidrBlock?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    vpcNo?: pulumi.Input<string>;
}

export interface GetZonesFilter {
    name: string;
    regex?: boolean;
    values: string[];
}

export interface GetZonesFilterArgs {
    name: pulumi.Input<string>;
    regex?: pulumi.Input<boolean>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HadoopHadoopServerList {
    cpuCount?: pulumi.Input<number>;
    createDate?: pulumi.Input<string>;
    dataStorageSize?: pulumi.Input<number>;
    dataStorageType?: pulumi.Input<string>;
    isPublicSubnet?: pulumi.Input<boolean>;
    memorySize?: pulumi.Input<number>;
    productCode?: pulumi.Input<string>;
    serverInstanceNo?: pulumi.Input<string>;
    serverName?: pulumi.Input<string>;
    serverRole?: pulumi.Input<string>;
    subnetNo?: pulumi.Input<string>;
    uptime?: pulumi.Input<string>;
    zoneCode?: pulumi.Input<string>;
}

export interface LbListenerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LbTargetGroupAttachmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface LbTargetGroupHealthCheck {
    cycle?: pulumi.Input<number>;
    downThreshold?: pulumi.Input<number>;
    httpMethod?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    upThreshold?: pulumi.Input<number>;
    urlPath?: pulumi.Input<string>;
}

export interface LbTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoadBalancerRuleList {
    /**
     * Load balancer SSL certificate. Required when the protocol_type value is SSL/HTTPS.
     */
    certificateName?: pulumi.Input<string>;
    /**
     * Health check path of load balancer rules. Required when the protocol_type is HTTP/HTTPS.
     */
    l7HealthCheckPath?: pulumi.Input<string>;
    /**
     * Load balancer port of load balancer rules
     */
    loadBalancerPort: pulumi.Input<number>;
    /**
     * Protocol type code of load balancer rules. The following codes are available. [HTTP | HTTPS | TCP | SSL]
     */
    protocolType: pulumi.Input<string>;
    /**
     * Use 'Y' if you want to check client IP addresses by enabling the proxy protocol while you select TCP or SSL.
     */
    proxyProtocolUseYn?: pulumi.Input<string>;
    /**
     * Server port of load balancer rules
     */
    serverPort: pulumi.Input<number>;
}

export interface LoadBalancerSslCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface LoadBalancerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MongodbMongodbServerList {
    clusterRole?: pulumi.Input<string>;
    cpuCount?: pulumi.Input<number>;
    createDate?: pulumi.Input<string>;
    dataStorageSize?: pulumi.Input<number>;
    memorySize?: pulumi.Input<number>;
    privateDomain?: pulumi.Input<string>;
    productCode?: pulumi.Input<string>;
    publicDomain?: pulumi.Input<string>;
    replicaSetName?: pulumi.Input<string>;
    serverInstanceNo?: pulumi.Input<string>;
    serverName?: pulumi.Input<string>;
    serverRole?: pulumi.Input<string>;
    uptime?: pulumi.Input<string>;
}

export interface MssqlMssqlServerList {
    cpuCount?: pulumi.Input<number>;
    createDate?: pulumi.Input<string>;
    dataStorageSize?: pulumi.Input<number>;
    isPublicSubnet?: pulumi.Input<boolean>;
    memorySize?: pulumi.Input<number>;
    privateDomain?: pulumi.Input<string>;
    productCode?: pulumi.Input<string>;
    publicDomain?: pulumi.Input<string>;
    serverInstanceNo?: pulumi.Input<string>;
    serverName?: pulumi.Input<string>;
    serverRole?: pulumi.Input<string>;
    subnetNo?: pulumi.Input<string>;
    uptime?: pulumi.Input<string>;
    usedDataStorageSize?: pulumi.Input<number>;
    zoneCode?: pulumi.Input<string>;
}

export interface MysqlMysqlServerList {
    cpuCount?: pulumi.Input<number>;
    createDate?: pulumi.Input<string>;
    dataStorageSize?: pulumi.Input<number>;
    isPublicSubnet?: pulumi.Input<boolean>;
    memorySize?: pulumi.Input<number>;
    privateDomain?: pulumi.Input<string>;
    productCode?: pulumi.Input<string>;
    publicDomain?: pulumi.Input<string>;
    serverInstanceNo?: pulumi.Input<string>;
    serverName?: pulumi.Input<string>;
    serverRole?: pulumi.Input<string>;
    subnetNo?: pulumi.Input<string>;
    uptime?: pulumi.Input<string>;
    usedDataStorageSize?: pulumi.Input<number>;
    zoneCode?: pulumi.Input<string>;
}

export interface NasVolumeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface NetworkAclRuleInbound {
    denyAllowGroupNo: pulumi.Input<string>;
    description: pulumi.Input<string>;
    ipBlock: pulumi.Input<string>;
    portRange: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    ruleAction: pulumi.Input<string>;
}

export interface NetworkAclRuleOutbound {
    denyAllowGroupNo: pulumi.Input<string>;
    description: pulumi.Input<string>;
    ipBlock: pulumi.Input<string>;
    portRange: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    ruleAction: pulumi.Input<string>;
}

export interface NksClusterIpAcl {
    action: pulumi.Input<string>;
    address: pulumi.Input<string>;
    comment: pulumi.Input<string>;
}

export interface NksClusterLog {
    audit: pulumi.Input<boolean>;
}

export interface NksClusterOidc {
    clientId: pulumi.Input<string>;
    groupsClaim?: pulumi.Input<string>;
    groupsPrefix?: pulumi.Input<string>;
    issuerUrl: pulumi.Input<string>;
    requiredClaim?: pulumi.Input<string>;
    usernameClaim?: pulumi.Input<string>;
    usernamePrefix?: pulumi.Input<string>;
}

export interface NksClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NksNodePoolAutoscale {
    enabled: pulumi.Input<boolean>;
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface NksNodePoolLabel {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface NksNodePoolNode {
    containerVersion: pulumi.Input<string>;
    instanceNo: pulumi.Input<number>;
    kernelVersion: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nodeStatus: pulumi.Input<string>;
    privateIp: pulumi.Input<string>;
    publicIp: pulumi.Input<string>;
    spec: pulumi.Input<string>;
}

export interface NksNodePoolTaint {
    effect: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface NksNodePoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PortForwardingRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface RedisRedisServerList {
    createDate?: pulumi.Input<string>;
    memorySize?: pulumi.Input<number>;
    osMemorySize?: pulumi.Input<number>;
    privateDomain?: pulumi.Input<string>;
    redisServerInstanceNo?: pulumi.Input<string>;
    redisServerName?: pulumi.Input<string>;
    redisServerRole?: pulumi.Input<string>;
    uptime?: pulumi.Input<string>;
}

export interface ServerNetworkInterface {
    networkInterfaceNo: pulumi.Input<string>;
    order: pulumi.Input<number>;
    privateIp?: pulumi.Input<string>;
    subnetNo?: pulumi.Input<string>;
}

export interface ServerTagList {
    tagKey?: pulumi.Input<string>;
    tagValue?: pulumi.Input<string>;
}

export interface ServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface SesClusterClusterNodeList {
    computeInstanceName: pulumi.Input<string>;
    computeInstanceNo: pulumi.Input<number>;
    nodeType: pulumi.Input<string>;
    privateIp: pulumi.Input<string>;
    serverStatus: pulumi.Input<string>;
    subnet: pulumi.Input<string>;
}

export interface SesClusterDataNode {
    acgId?: pulumi.Input<number>;
    acgName?: pulumi.Input<string>;
    count: pulumi.Input<number>;
    productCode: pulumi.Input<string>;
    storageSize: pulumi.Input<number>;
    subnetNo: pulumi.Input<number>;
}

export interface SesClusterManagerNode {
    acgId?: pulumi.Input<number>;
    acgName?: pulumi.Input<string>;
    count?: pulumi.Input<number>;
    isDualManager: pulumi.Input<boolean>;
    productCode: pulumi.Input<string>;
    subnetNo: pulumi.Input<number>;
}

export interface SesClusterMasterNode {
    acgId?: pulumi.Input<number>;
    acgName?: pulumi.Input<string>;
    count?: pulumi.Input<number>;
    productCode?: pulumi.Input<string>;
    subnetNo?: pulumi.Input<number>;
}

export interface SesClusterSearchEngine {
    dashboardPort: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    userName: pulumi.Input<string>;
    userPassword: pulumi.Input<string>;
    versionCode: pulumi.Input<string>;
}

export interface SesClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SourcebuildProjectArtifact {
    backup?: pulumi.Input<boolean>;
    objectStorageToUpload?: pulumi.Input<inputs.SourcebuildProjectArtifactObjectStorageToUpload>;
    paths?: pulumi.Input<pulumi.Input<string>[]>;
    use?: pulumi.Input<boolean>;
}

export interface SourcebuildProjectArtifactObjectStorageToUpload {
    bucket?: pulumi.Input<string>;
    filename?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
}

export interface SourcebuildProjectBuildCommand {
    dockerImageBuild?: pulumi.Input<inputs.SourcebuildProjectBuildCommandDockerImageBuild>;
    inBuilds?: pulumi.Input<pulumi.Input<string>[]>;
    postBuilds?: pulumi.Input<pulumi.Input<string>[]>;
    preBuilds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SourcebuildProjectBuildCommandDockerImageBuild {
    dockerfile?: pulumi.Input<string>;
    image?: pulumi.Input<string>;
    latest?: pulumi.Input<boolean>;
    registry?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
    use?: pulumi.Input<boolean>;
}

export interface SourcebuildProjectBuildImageUpload {
    containerRegistryName?: pulumi.Input<string>;
    imageName?: pulumi.Input<string>;
    latest?: pulumi.Input<boolean>;
    tag?: pulumi.Input<string>;
    use?: pulumi.Input<boolean>;
}

export interface SourcebuildProjectCreated {
    timestamp: pulumi.Input<number>;
    user: pulumi.Input<string>;
}

export interface SourcebuildProjectEnv {
    compute: pulumi.Input<inputs.SourcebuildProjectEnvCompute>;
    dockerEngine?: pulumi.Input<inputs.SourcebuildProjectEnvDockerEngine>;
    envVars?: pulumi.Input<pulumi.Input<inputs.SourcebuildProjectEnvEnvVar>[]>;
    platform: pulumi.Input<inputs.SourcebuildProjectEnvPlatform>;
    timeout?: pulumi.Input<number>;
}

export interface SourcebuildProjectEnvCompute {
    cpu?: pulumi.Input<number>;
    id: pulumi.Input<number>;
    mem?: pulumi.Input<number>;
}

export interface SourcebuildProjectEnvDockerEngine {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    use?: pulumi.Input<boolean>;
}

export interface SourcebuildProjectEnvEnvVar {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface SourcebuildProjectEnvPlatform {
    config: pulumi.Input<inputs.SourcebuildProjectEnvPlatformConfig>;
    type: pulumi.Input<string>;
}

export interface SourcebuildProjectEnvPlatformConfig {
    image?: pulumi.Input<string>;
    os?: pulumi.Input<inputs.SourcebuildProjectEnvPlatformConfigOs>;
    registry?: pulumi.Input<string>;
    runtime?: pulumi.Input<inputs.SourcebuildProjectEnvPlatformConfigRuntime>;
    tag?: pulumi.Input<string>;
}

export interface SourcebuildProjectEnvPlatformConfigOs {
    archi?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface SourcebuildProjectEnvPlatformConfigRuntime {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    version: pulumi.Input<inputs.SourcebuildProjectEnvPlatformConfigRuntimeVersion>;
}

export interface SourcebuildProjectEnvPlatformConfigRuntimeVersion {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}

export interface SourcebuildProjectLastBuild {
    id: pulumi.Input<string>;
    status: pulumi.Input<string>;
    timestamp: pulumi.Input<number>;
}

export interface SourcebuildProjectLinked {
    cloudLogAnalytics?: pulumi.Input<boolean>;
    fileSafer?: pulumi.Input<boolean>;
}

export interface SourcebuildProjectSource {
    config: pulumi.Input<inputs.SourcebuildProjectSourceConfig>;
    type: pulumi.Input<string>;
}

export interface SourcebuildProjectSourceConfig {
    branch: pulumi.Input<string>;
    repositoryName: pulumi.Input<string>;
}

export interface SourcebuildProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SourcecommitRepositoryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SourcedeployProjectStageConfig {
    autoScalingGroupName?: pulumi.Input<string>;
    autoScalingGroupNo?: pulumi.Input<number>;
    bucketName?: pulumi.Input<string>;
    clusterName?: pulumi.Input<string>;
    clusterUuid?: pulumi.Input<string>;
    servers?: pulumi.Input<pulumi.Input<inputs.SourcedeployProjectStageConfigServer>[]>;
}

export interface SourcedeployProjectStageConfigServer {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface SourcedeployProjectStageScenarioConfig {
    canaryConfig?: pulumi.Input<inputs.SourcedeployProjectStageScenarioConfigCanaryConfig>;
    deployCommand?: pulumi.Input<inputs.SourcedeployProjectStageScenarioConfigDeployCommand>;
    file?: pulumi.Input<inputs.SourcedeployProjectStageScenarioConfigFile>;
    loadBalancer?: pulumi.Input<inputs.SourcedeployProjectStageScenarioConfigLoadBalancer>;
    manifest?: pulumi.Input<inputs.SourcedeployProjectStageScenarioConfigManifest>;
    path?: pulumi.Input<inputs.SourcedeployProjectStageScenarioConfigPath>;
    rollback?: pulumi.Input<boolean>;
    strategy?: pulumi.Input<string>;
}

export interface SourcedeployProjectStageScenarioConfigCanaryConfig {
    analysisConfig?: pulumi.Input<inputs.SourcedeployProjectStageScenarioConfigCanaryConfigAnalysisConfig>;
    analysisType?: pulumi.Input<string>;
    canaryCount?: pulumi.Input<number>;
    env?: pulumi.Input<inputs.SourcedeployProjectStageScenarioConfigCanaryConfigEnv>;
    metrics?: pulumi.Input<pulumi.Input<inputs.SourcedeployProjectStageScenarioConfigCanaryConfigMetric>[]>;
    passScore?: pulumi.Input<number>;
    prometheus?: pulumi.Input<string>;
    timeout?: pulumi.Input<number>;
}

export interface SourcedeployProjectStageScenarioConfigCanaryConfigAnalysisConfig {
    delay?: pulumi.Input<number>;
    duration?: pulumi.Input<number>;
    interval?: pulumi.Input<number>;
    step?: pulumi.Input<number>;
}

export interface SourcedeployProjectStageScenarioConfigCanaryConfigEnv {
    baseline?: pulumi.Input<string>;
    canary?: pulumi.Input<string>;
}

export interface SourcedeployProjectStageScenarioConfigCanaryConfigMetric {
    filter?: pulumi.Input<string>;
    metric?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
    queryType?: pulumi.Input<string>;
    successCriteria?: pulumi.Input<string>;
    weight?: pulumi.Input<number>;
}

export interface SourcedeployProjectStageScenarioConfigDeployCommand {
    paths?: pulumi.Input<pulumi.Input<inputs.SourcedeployProjectStageScenarioConfigDeployCommandPath>[]>;
    postDeploys?: pulumi.Input<pulumi.Input<inputs.SourcedeployProjectStageScenarioConfigDeployCommandPostDeploy>[]>;
    preDeploys?: pulumi.Input<pulumi.Input<inputs.SourcedeployProjectStageScenarioConfigDeployCommandPreDeploy>[]>;
}

export interface SourcedeployProjectStageScenarioConfigDeployCommandPath {
    deployPath?: pulumi.Input<string>;
    sourcePath?: pulumi.Input<string>;
}

export interface SourcedeployProjectStageScenarioConfigDeployCommandPostDeploy {
    command?: pulumi.Input<string>;
    user?: pulumi.Input<string>;
}

export interface SourcedeployProjectStageScenarioConfigDeployCommandPreDeploy {
    command?: pulumi.Input<string>;
    user?: pulumi.Input<string>;
}

export interface SourcedeployProjectStageScenarioConfigFile {
    objectStorage?: pulumi.Input<inputs.SourcedeployProjectStageScenarioConfigFileObjectStorage>;
    sourceBuild?: pulumi.Input<inputs.SourcedeployProjectStageScenarioConfigFileSourceBuild>;
    type?: pulumi.Input<string>;
}

export interface SourcedeployProjectStageScenarioConfigFileObjectStorage {
    bucket?: pulumi.Input<string>;
    object?: pulumi.Input<string>;
}

export interface SourcedeployProjectStageScenarioConfigFileSourceBuild {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}

export interface SourcedeployProjectStageScenarioConfigLoadBalancer {
    deleteServer?: pulumi.Input<boolean>;
    loadBalancerTargetGroupName?: pulumi.Input<string>;
    loadBalancerTargetGroupNo?: pulumi.Input<number>;
}

export interface SourcedeployProjectStageScenarioConfigManifest {
    branch?: pulumi.Input<string>;
    paths?: pulumi.Input<pulumi.Input<string>[]>;
    repositoryName?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface SourcedeployProjectStageScenarioConfigPath {
    deployPath?: pulumi.Input<string>;
    sourcePath?: pulumi.Input<string>;
}

export interface SourcedeployProjectStageScenarioTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SourcedeployProjectStageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SourcedeployProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SourcepipelineProjectTask {
    config: pulumi.Input<inputs.SourcepipelineProjectTaskConfig>;
    linkedTasks: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SourcepipelineProjectTaskConfig {
    projectId: pulumi.Input<number>;
    scenarioId?: pulumi.Input<number>;
    stageId?: pulumi.Input<number>;
    target?: pulumi.Input<inputs.SourcepipelineProjectTaskConfigTarget>;
}

export interface SourcepipelineProjectTaskConfigTarget {
    file?: pulumi.Input<string>;
    fullManifest?: pulumi.Input<string>;
    manifest?: pulumi.Input<string>;
    projectName?: pulumi.Input<string>;
    repositoryBranch?: pulumi.Input<string>;
    repositoryName?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface SourcepipelineProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SourcepipelineProjectTriggers {
    repositories?: pulumi.Input<pulumi.Input<inputs.SourcepipelineProjectTriggersRepository>[]>;
    schedules?: pulumi.Input<pulumi.Input<inputs.SourcepipelineProjectTriggersSchedule>[]>;
    sourcepipelines?: pulumi.Input<pulumi.Input<inputs.SourcepipelineProjectTriggersSourcepipeline>[]>;
}

export interface SourcepipelineProjectTriggersRepository {
    branch: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SourcepipelineProjectTriggersSchedule {
    days: pulumi.Input<pulumi.Input<string>[]>;
    executeOnlyWithChange: pulumi.Input<boolean>;
    time: pulumi.Input<string>;
    timezone: pulumi.Input<string>;
}

export interface SourcepipelineProjectTriggersSourcepipeline {
    id: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
