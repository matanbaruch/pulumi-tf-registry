// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSubnets(args?: GetSubnetsArgs, opts?: pulumi.InvokeOptions): Promise<GetSubnetsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getSubnets:getSubnets", {
        "filters": args.filters,
        "networkAclNo": args.networkAclNo,
        "subnet": args.subnet,
        "subnetNos": args.subnetNos,
        "subnetType": args.subnetType,
        "subnets": args.subnets,
        "usageType": args.usageType,
        "vpcNo": args.vpcNo,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSubnets.
 */
export interface GetSubnetsArgs {
    filters?: inputs.GetSubnetsFilter[];
    networkAclNo?: string;
    subnet?: string;
    subnetNos?: string[];
    subnetType?: string;
    subnets?: inputs.GetSubnetsSubnet[];
    usageType?: string;
    vpcNo?: string;
    zone?: string;
}

/**
 * A collection of values returned by getSubnets.
 */
export interface GetSubnetsResult {
    readonly filters?: outputs.GetSubnetsFilter[];
    readonly id: string;
    readonly networkAclNo?: string;
    readonly subnet?: string;
    readonly subnetNos?: string[];
    readonly subnetType?: string;
    readonly subnets?: outputs.GetSubnetsSubnet[];
    readonly usageType?: string;
    readonly vpcNo?: string;
    readonly zone?: string;
}
export function getSubnetsOutput(args?: GetSubnetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubnetsResult> {
    return pulumi.output(args).apply((a: any) => getSubnets(a, opts))
}

/**
 * A collection of arguments for invoking getSubnets.
 */
export interface GetSubnetsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetSubnetsFilterArgs>[]>;
    networkAclNo?: pulumi.Input<string>;
    subnet?: pulumi.Input<string>;
    subnetNos?: pulumi.Input<pulumi.Input<string>[]>;
    subnetType?: pulumi.Input<string>;
    subnets?: pulumi.Input<pulumi.Input<inputs.GetSubnetsSubnetArgs>[]>;
    usageType?: pulumi.Input<string>;
    vpcNo?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
