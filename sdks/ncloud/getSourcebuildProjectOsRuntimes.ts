// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSourcebuildProjectOsRuntimes(args: GetSourcebuildProjectOsRuntimesArgs, opts?: pulumi.InvokeOptions): Promise<GetSourcebuildProjectOsRuntimesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getSourcebuildProjectOsRuntimes:getSourcebuildProjectOsRuntimes", {
        "filters": args.filters,
        "id": args.id,
        "osId": args.osId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSourcebuildProjectOsRuntimes.
 */
export interface GetSourcebuildProjectOsRuntimesArgs {
    filters?: inputs.GetSourcebuildProjectOsRuntimesFilter[];
    id?: string;
    osId: number;
}

/**
 * A collection of values returned by getSourcebuildProjectOsRuntimes.
 */
export interface GetSourcebuildProjectOsRuntimesResult {
    readonly filters?: outputs.GetSourcebuildProjectOsRuntimesFilter[];
    readonly id: string;
    readonly osId: number;
    readonly runtimes: outputs.GetSourcebuildProjectOsRuntimesRuntime[];
}
export function getSourcebuildProjectOsRuntimesOutput(args: GetSourcebuildProjectOsRuntimesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSourcebuildProjectOsRuntimesResult> {
    return pulumi.output(args).apply((a: any) => getSourcebuildProjectOsRuntimes(a, opts))
}

/**
 * A collection of arguments for invoking getSourcebuildProjectOsRuntimes.
 */
export interface GetSourcebuildProjectOsRuntimesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetSourcebuildProjectOsRuntimesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    osId: pulumi.Input<number>;
}
