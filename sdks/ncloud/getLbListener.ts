// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLbListener(args: GetLbListenerArgs, opts?: pulumi.InvokeOptions): Promise<GetLbListenerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getLbListener:getLbListener", {
        "filters": args.filters,
        "id": args.id,
        "loadBalancerNo": args.loadBalancerNo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLbListener.
 */
export interface GetLbListenerArgs {
    filters?: inputs.GetLbListenerFilter[];
    id?: string;
    loadBalancerNo: string;
}

/**
 * A collection of values returned by getLbListener.
 */
export interface GetLbListenerResult {
    readonly filters?: outputs.GetLbListenerFilter[];
    readonly id: string;
    readonly listenerNo: string;
    readonly loadBalancerNo: string;
    readonly port: number;
    readonly protocol: string;
    readonly ruleNoLists: string[];
    readonly sslCertificateNo: string;
    readonly targetGroupNo: string;
    readonly tlsMinVersionType: string;
    readonly useHttp2: boolean;
}
export function getLbListenerOutput(args: GetLbListenerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbListenerResult> {
    return pulumi.output(args).apply((a: any) => getLbListener(a, opts))
}

/**
 * A collection of arguments for invoking getLbListener.
 */
export interface GetLbListenerOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetLbListenerFilterArgs>[]>;
    id?: pulumi.Input<string>;
    loadBalancerNo: pulumi.Input<string>;
}
