// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLbTargetGroup(args?: GetLbTargetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetLbTargetGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getLbTargetGroup:getLbTargetGroup", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLbTargetGroup.
 */
export interface GetLbTargetGroupArgs {
    filters?: inputs.GetLbTargetGroupFilter[];
    id?: string;
}

/**
 * A collection of values returned by getLbTargetGroup.
 */
export interface GetLbTargetGroupResult {
    readonly algorithmType: string;
    readonly description: string;
    readonly filters?: outputs.GetLbTargetGroupFilter[];
    readonly healthChecks: outputs.GetLbTargetGroupHealthCheck[];
    readonly id: string;
    readonly loadBalancerInstanceNo: string;
    readonly name: string;
    readonly port: number;
    readonly protocol: string;
    readonly targetGroupNo: string;
    readonly targetNoLists: string[];
    readonly targetType: string;
    readonly useProxyProtocol: boolean;
    readonly useStickySession: boolean;
    readonly vpcNo: string;
}
export function getLbTargetGroupOutput(args?: GetLbTargetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbTargetGroupResult> {
    return pulumi.output(args).apply((a: any) => getLbTargetGroup(a, opts))
}

/**
 * A collection of arguments for invoking getLbTargetGroup.
 */
export interface GetLbTargetGroupOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetLbTargetGroupFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
