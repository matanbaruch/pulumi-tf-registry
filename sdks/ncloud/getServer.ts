// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServer(args?: GetServerArgs, opts?: pulumi.InvokeOptions): Promise<GetServerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getServer:getServer", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServer.
 */
export interface GetServerArgs {
    filters?: inputs.GetServerFilter[];
    id?: string;
}

/**
 * A collection of values returned by getServer.
 */
export interface GetServerResult {
    readonly baseBlockStorageDiskDetailType: string;
    readonly baseBlockStorageDiskType: string;
    readonly baseBlockStorageSize: number;
    readonly cpuCount: number;
    readonly description: string;
    readonly filters?: outputs.GetServerFilter[];
    readonly id: string;
    readonly initScriptNo: string;
    readonly instanceNo: string;
    /**
     * @deprecated Deprecated
     */
    readonly internetLineType: string;
    readonly isEncryptedBaseBlockStorageVolume: boolean;
    /**
     * @deprecated Deprecated
     */
    readonly isFeeChargingMonitoring: boolean;
    readonly isProtectServerTermination: boolean;
    readonly loginKeyName: string;
    readonly memorySize: number;
    readonly name: string;
    readonly networkInterfaces: outputs.GetServerNetworkInterface[];
    readonly placementGroupNo: string;
    readonly platformType: string;
    readonly portForwardingExternalPort: number;
    readonly portForwardingInternalPort: number;
    readonly portForwardingPublicIp: string;
    readonly privateIp: string;
    readonly publicIp: string;
    /**
     * @deprecated Deprecated
     */
    readonly region: string;
    readonly serverImageName: string;
    readonly serverImageProductCode: string;
    readonly serverProductCode: string;
    readonly subnetNo: string;
    readonly vpcNo: string;
    readonly zone: string;
}
export function getServerOutput(args?: GetServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerResult> {
    return pulumi.output(args).apply((a: any) => getServer(a, opts))
}

/**
 * A collection of arguments for invoking getServer.
 */
export interface GetServerOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetServerFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
