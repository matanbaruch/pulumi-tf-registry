// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMemberServerImage(args?: GetMemberServerImageArgs, opts?: pulumi.InvokeOptions): Promise<GetMemberServerImageResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getMemberServerImage:getMemberServerImage", {
        "filters": args.filters,
        "id": args.id,
        "nameRegex": args.nameRegex,
        "noLists": args.noLists,
        "platformTypeCodeLists": args.platformTypeCodeLists,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMemberServerImage.
 */
export interface GetMemberServerImageArgs {
    filters?: inputs.GetMemberServerImageFilter[];
    id?: string;
    /**
     * @deprecated Deprecated
     */
    nameRegex?: string;
    noLists?: string[];
    platformTypeCodeLists?: string[];
    /**
     * @deprecated Deprecated
     */
    region?: string;
}

/**
 * A collection of values returned by getMemberServerImage.
 */
export interface GetMemberServerImageResult {
    readonly blockStorageTotalRows: number;
    readonly blockStorageTotalSize: number;
    readonly description: string;
    readonly filters?: outputs.GetMemberServerImageFilter[];
    readonly id: string;
    readonly name: string;
    /**
     * @deprecated Deprecated
     */
    readonly nameRegex?: string;
    readonly no: string;
    readonly noLists?: string[];
    readonly originalBaseBlockStorageDiskType: string;
    readonly originalOsInformation: string;
    readonly originalServerImageName: string;
    readonly originalServerImageProductCode: string;
    readonly originalServerInstanceNo: string;
    readonly originalServerName: string;
    readonly originalServerProductCode: string;
    readonly platformType: string;
    readonly platformTypeCodeLists?: string[];
    /**
     * @deprecated Deprecated
     */
    readonly region?: string;
}
export function getMemberServerImageOutput(args?: GetMemberServerImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMemberServerImageResult> {
    return pulumi.output(args).apply((a: any) => getMemberServerImage(a, opts))
}

/**
 * A collection of arguments for invoking getMemberServerImage.
 */
export interface GetMemberServerImageOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetMemberServerImageFilterArgs>[]>;
    id?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    nameRegex?: pulumi.Input<string>;
    noLists?: pulumi.Input<pulumi.Input<string>[]>;
    platformTypeCodeLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated
     */
    region?: pulumi.Input<string>;
}
