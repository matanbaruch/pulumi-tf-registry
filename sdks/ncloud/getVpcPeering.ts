// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcPeering(args?: GetVpcPeeringArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcPeeringResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getVpcPeering:getVpcPeering", {
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "sourceVpcName": args.sourceVpcName,
        "targetVpcName": args.targetVpcName,
        "vpcPeeringNo": args.vpcPeeringNo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcPeering.
 */
export interface GetVpcPeeringArgs {
    filters?: inputs.GetVpcPeeringFilter[];
    id?: string;
    name?: string;
    sourceVpcName?: string;
    targetVpcName?: string;
    vpcPeeringNo?: string;
}

/**
 * A collection of values returned by getVpcPeering.
 */
export interface GetVpcPeeringResult {
    readonly description: string;
    readonly filters?: outputs.GetVpcPeeringFilter[];
    readonly hasReverseVpcPeering: boolean;
    readonly id: string;
    readonly isBetweenAccounts: boolean;
    readonly name: string;
    readonly sourceVpcName: string;
    readonly sourceVpcNo: string;
    readonly targetVpcLoginId: string;
    readonly targetVpcName: string;
    readonly targetVpcNo: string;
    readonly vpcPeeringNo: string;
}
export function getVpcPeeringOutput(args?: GetVpcPeeringOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcPeeringResult> {
    return pulumi.output(args).apply((a: any) => getVpcPeering(a, opts))
}

/**
 * A collection of arguments for invoking getVpcPeering.
 */
export interface GetVpcPeeringOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetVpcPeeringFilterArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sourceVpcName?: pulumi.Input<string>;
    targetVpcName?: pulumi.Input<string>;
    vpcPeeringNo?: pulumi.Input<string>;
}
