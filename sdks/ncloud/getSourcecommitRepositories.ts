// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSourcecommitRepositories(args?: GetSourcecommitRepositoriesArgs, opts?: pulumi.InvokeOptions): Promise<GetSourcecommitRepositoriesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getSourcecommitRepositories:getSourcecommitRepositories", {
        "filters": args.filters,
        "id": args.id,
        "outputFile": args.outputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSourcecommitRepositories.
 */
export interface GetSourcecommitRepositoriesArgs {
    filters?: inputs.GetSourcecommitRepositoriesFilter[];
    id?: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getSourcecommitRepositories.
 */
export interface GetSourcecommitRepositoriesResult {
    readonly filters?: outputs.GetSourcecommitRepositoriesFilter[];
    readonly id: string;
    readonly outputFile?: string;
    readonly repositories: outputs.GetSourcecommitRepositoriesRepository[];
}
export function getSourcecommitRepositoriesOutput(args?: GetSourcecommitRepositoriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSourcecommitRepositoriesResult> {
    return pulumi.output(args).apply((a: any) => getSourcecommitRepositories(a, opts))
}

/**
 * A collection of arguments for invoking getSourcecommitRepositories.
 */
export interface GetSourcecommitRepositoriesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetSourcecommitRepositoriesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
