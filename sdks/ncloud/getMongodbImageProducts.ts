// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMongodbImageProducts(args?: GetMongodbImageProductsArgs, opts?: pulumi.InvokeOptions): Promise<GetMongodbImageProductsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getMongodbImageProducts:getMongodbImageProducts", {
        "filters": args.filters,
        "outputFile": args.outputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMongodbImageProducts.
 */
export interface GetMongodbImageProductsArgs {
    filters?: inputs.GetMongodbImageProductsFilter[];
    outputFile?: string;
}

/**
 * A collection of values returned by getMongodbImageProducts.
 */
export interface GetMongodbImageProductsResult {
    readonly filters?: outputs.GetMongodbImageProductsFilter[];
    readonly id: string;
    readonly imageProductLists: outputs.GetMongodbImageProductsImageProductList[];
    readonly outputFile?: string;
}
export function getMongodbImageProductsOutput(args?: GetMongodbImageProductsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMongodbImageProductsResult> {
    return pulumi.output(args).apply((a: any) => getMongodbImageProducts(a, opts))
}

/**
 * A collection of arguments for invoking getMongodbImageProducts.
 */
export interface GetMongodbImageProductsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetMongodbImageProductsFilterArgs>[]>;
    outputFile?: pulumi.Input<string>;
}
