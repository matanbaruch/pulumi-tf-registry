// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAccessControlRules(args: GetAccessControlRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessControlRulesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getAccessControlRules:getAccessControlRules", {
        "accessControlGroupConfigurationNo": args.accessControlGroupConfigurationNo,
        "id": args.id,
        "outputFile": args.outputFile,
        "sourceNameRegex": args.sourceNameRegex,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccessControlRules.
 */
export interface GetAccessControlRulesArgs {
    accessControlGroupConfigurationNo: string;
    id?: string;
    outputFile?: string;
    sourceNameRegex?: string;
}

/**
 * A collection of values returned by getAccessControlRules.
 */
export interface GetAccessControlRulesResult {
    readonly accessControlGroupConfigurationNo: string;
    readonly accessControlRules: string[];
    readonly id: string;
    readonly outputFile?: string;
    readonly sourceNameRegex?: string;
}
export function getAccessControlRulesOutput(args: GetAccessControlRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessControlRulesResult> {
    return pulumi.output(args).apply((a: any) => getAccessControlRules(a, opts))
}

/**
 * A collection of arguments for invoking getAccessControlRules.
 */
export interface GetAccessControlRulesOutputArgs {
    accessControlGroupConfigurationNo: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    sourceNameRegex?: pulumi.Input<string>;
}
