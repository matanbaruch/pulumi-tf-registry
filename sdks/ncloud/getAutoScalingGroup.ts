// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAutoScalingGroup(args?: GetAutoScalingGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAutoScalingGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getAutoScalingGroup:getAutoScalingGroup", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAutoScalingGroup.
 */
export interface GetAutoScalingGroupArgs {
    filters?: inputs.GetAutoScalingGroupFilter[];
    id?: string;
}

/**
 * A collection of values returned by getAutoScalingGroup.
 */
export interface GetAutoScalingGroupResult {
    readonly autoScalingGroupNo: string;
    readonly desiredCapacity: number;
    readonly filters?: outputs.GetAutoScalingGroupFilter[];
    readonly healthCheckTypeCode: string;
    readonly id: string;
    readonly launchConfigurationNo: string;
    readonly maxSize: number;
    readonly minSize: number;
    readonly name: string;
    readonly serverInstanceNoLists: string[];
    readonly serverNamePrefix: string;
    readonly vpcNo: string;
}
export function getAutoScalingGroupOutput(args?: GetAutoScalingGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutoScalingGroupResult> {
    return pulumi.output(args).apply((a: any) => getAutoScalingGroup(a, opts))
}

/**
 * A collection of arguments for invoking getAutoScalingGroup.
 */
export interface GetAutoScalingGroupOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetAutoScalingGroupFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
