// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCdssNodeProducts(args: GetCdssNodeProductsArgs, opts?: pulumi.InvokeOptions): Promise<GetCdssNodeProductsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getCdssNodeProducts:getCdssNodeProducts", {
        "id": args.id,
        "osImage": args.osImage,
        "subnetNo": args.subnetNo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCdssNodeProducts.
 */
export interface GetCdssNodeProductsArgs {
    id?: string;
    osImage: string;
    subnetNo: string;
}

/**
 * A collection of values returned by getCdssNodeProducts.
 */
export interface GetCdssNodeProductsResult {
    readonly id: string;
    readonly nodeProducts: outputs.GetCdssNodeProductsNodeProduct[];
    readonly osImage: string;
    readonly subnetNo: string;
}
export function getCdssNodeProductsOutput(args: GetCdssNodeProductsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCdssNodeProductsResult> {
    return pulumi.output(args).apply((a: any) => getCdssNodeProducts(a, opts))
}

/**
 * A collection of arguments for invoking getCdssNodeProducts.
 */
export interface GetCdssNodeProductsOutputArgs {
    id?: pulumi.Input<string>;
    osImage: pulumi.Input<string>;
    subnetNo: pulumi.Input<string>;
}
