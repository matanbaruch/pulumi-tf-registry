// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcs(args?: GetVpcsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getVpcs:getVpcs", {
        "filters": args.filters,
        "name": args.name,
        "vpcNo": args.vpcNo,
        "vpcs": args.vpcs,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcs.
 */
export interface GetVpcsArgs {
    filters?: inputs.GetVpcsFilter[];
    name?: string;
    vpcNo?: string;
    vpcs?: inputs.GetVpcsVpc[];
}

/**
 * A collection of values returned by getVpcs.
 */
export interface GetVpcsResult {
    readonly filters?: outputs.GetVpcsFilter[];
    readonly id: string;
    readonly name?: string;
    readonly vpcNo?: string;
    readonly vpcs?: outputs.GetVpcsVpc[];
}
export function getVpcsOutput(args?: GetVpcsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcsResult> {
    return pulumi.output(args).apply((a: any) => getVpcs(a, opts))
}

/**
 * A collection of arguments for invoking getVpcs.
 */
export interface GetVpcsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetVpcsFilterArgs>[]>;
    name?: pulumi.Input<string>;
    vpcNo?: pulumi.Input<string>;
    vpcs?: pulumi.Input<pulumi.Input<inputs.GetVpcsVpcArgs>[]>;
}
