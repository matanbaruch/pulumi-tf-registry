// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServerProduct(args: GetServerProductArgs, opts?: pulumi.InvokeOptions): Promise<GetServerProductResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getServerProduct:getServerProduct", {
        "exclusionProductCode": args.exclusionProductCode,
        "filters": args.filters,
        "id": args.id,
        "internetLineTypeCode": args.internetLineTypeCode,
        "productCode": args.productCode,
        "productNameRegex": args.productNameRegex,
        "serverImageProductCode": args.serverImageProductCode,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServerProduct.
 */
export interface GetServerProductArgs {
    /**
     * @deprecated Deprecated
     */
    exclusionProductCode?: string;
    filters?: inputs.GetServerProductFilter[];
    id?: string;
    /**
     * @deprecated Deprecated
     */
    internetLineTypeCode?: string;
    productCode?: string;
    /**
     * @deprecated Deprecated
     */
    productNameRegex?: string;
    serverImageProductCode: string;
    zone?: string;
}

/**
 * A collection of values returned by getServerProduct.
 */
export interface GetServerProductResult {
    readonly baseBlockStorageSize: string;
    readonly cpuCount: number;
    readonly diskType: string;
    /**
     * @deprecated Deprecated
     */
    readonly exclusionProductCode?: string;
    readonly filters?: outputs.GetServerProductFilter[];
    readonly generationCode: string;
    readonly id: string;
    readonly infraResourceType: string;
    /**
     * @deprecated Deprecated
     */
    readonly internetLineTypeCode?: string;
    readonly memorySize: string;
    readonly productCode: string;
    readonly productDescription: string;
    readonly productName: string;
    /**
     * @deprecated Deprecated
     */
    readonly productNameRegex?: string;
    readonly productType: string;
    readonly serverImageProductCode: string;
    readonly zone?: string;
}
export function getServerProductOutput(args: GetServerProductOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerProductResult> {
    return pulumi.output(args).apply((a: any) => getServerProduct(a, opts))
}

/**
 * A collection of arguments for invoking getServerProduct.
 */
export interface GetServerProductOutputArgs {
    /**
     * @deprecated Deprecated
     */
    exclusionProductCode?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetServerProductFilterArgs>[]>;
    id?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    internetLineTypeCode?: pulumi.Input<string>;
    productCode?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    productNameRegex?: pulumi.Input<string>;
    serverImageProductCode: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
