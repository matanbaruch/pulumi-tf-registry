// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSourcepipelineProject(args: GetSourcepipelineProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetSourcepipelineProjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getSourcepipelineProject:getSourcepipelineProject", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSourcepipelineProject.
 */
export interface GetSourcepipelineProjectArgs {
    id: number;
}

/**
 * A collection of values returned by getSourcepipelineProject.
 */
export interface GetSourcepipelineProjectResult {
    readonly description: string;
    readonly id: number;
    readonly name: string;
    readonly tasks: outputs.GetSourcepipelineProjectTask[];
    readonly triggers: outputs.GetSourcepipelineProjectTrigger[];
}
export function getSourcepipelineProjectOutput(args: GetSourcepipelineProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSourcepipelineProjectResult> {
    return pulumi.output(args).apply((a: any) => getSourcepipelineProject(a, opts))
}

/**
 * A collection of arguments for invoking getSourcepipelineProject.
 */
export interface GetSourcepipelineProjectOutputArgs {
    id: pulumi.Input<number>;
}
