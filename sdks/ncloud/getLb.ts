// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLb(args?: GetLbArgs, opts?: pulumi.InvokeOptions): Promise<GetLbResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getLb:getLb", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLb.
 */
export interface GetLbArgs {
    filters?: inputs.GetLbFilter[];
    id?: string;
}

/**
 * A collection of values returned by getLb.
 */
export interface GetLbResult {
    readonly description: string;
    readonly domain: string;
    readonly filters?: outputs.GetLbFilter[];
    readonly id: string;
    readonly idleTimeout: number;
    readonly ipLists: string[];
    readonly listenerNoLists: string[];
    readonly loadBalancerNo: string;
    readonly name: string;
    readonly networkType: string;
    readonly subnetNoLists: string[];
    readonly throughputType: string;
    readonly type: string;
    readonly vpcNo: string;
}
export function getLbOutput(args?: GetLbOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbResult> {
    return pulumi.output(args).apply((a: any) => getLb(a, opts))
}

/**
 * A collection of arguments for invoking getLb.
 */
export interface GetLbOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetLbFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
