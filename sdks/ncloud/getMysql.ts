// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMysql(args?: GetMysqlArgs, opts?: pulumi.InvokeOptions): Promise<GetMysqlResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getMysql:getMysql", {
        "id": args.id,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMysql.
 */
export interface GetMysqlArgs {
    id?: string;
    serviceName?: string;
}

/**
 * A collection of values returned by getMysql.
 */
export interface GetMysqlResult {
    readonly accessControlGroupNoLists: string[];
    readonly backupFileRetentionPeriod: number;
    readonly backupTime: string;
    readonly dataStorageType: string;
    readonly engineVersionCode: string;
    readonly id: string;
    readonly imageProductCode: string;
    readonly isBackup: boolean;
    readonly isHa: boolean;
    readonly isMultiZone: boolean;
    readonly isStorageEncryption: boolean;
    readonly mysqlConfigLists: string[];
    readonly mysqlServerLists: outputs.GetMysqlMysqlServerList[];
    readonly port: number;
    readonly regionCode: string;
    readonly serviceName: string;
    readonly vpcNo: string;
}
export function getMysqlOutput(args?: GetMysqlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMysqlResult> {
    return pulumi.output(args).apply((a: any) => getMysql(a, opts))
}

/**
 * A collection of arguments for invoking getMysql.
 */
export interface GetMysqlOutputArgs {
    id?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
}
