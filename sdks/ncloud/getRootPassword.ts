// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRootPassword(args: GetRootPasswordArgs, opts?: pulumi.InvokeOptions): Promise<GetRootPasswordResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ncloud:index/getRootPassword:getRootPassword", {
        "id": args.id,
        "privateKey": args.privateKey,
        "serverInstanceNo": args.serverInstanceNo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRootPassword.
 */
export interface GetRootPasswordArgs {
    id?: string;
    privateKey: string;
    serverInstanceNo: string;
}

/**
 * A collection of values returned by getRootPassword.
 */
export interface GetRootPasswordResult {
    readonly id: string;
    readonly privateKey: string;
    readonly rootPassword: string;
    readonly serverInstanceNo: string;
}
export function getRootPasswordOutput(args: GetRootPasswordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRootPasswordResult> {
    return pulumi.output(args).apply((a: any) => getRootPassword(a, opts))
}

/**
 * A collection of arguments for invoking getRootPassword.
 */
export interface GetRootPasswordOutputArgs {
    id?: pulumi.Input<string>;
    privateKey: pulumi.Input<string>;
    serverInstanceNo: pulumi.Input<string>;
}
