// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CustomCompliance extends pulumi.CustomResource {
    /**
     * Get an existing CustomCompliance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomComplianceState, opts?: pulumi.CustomResourceOptions): CustomCompliance {
        return new CustomCompliance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prismacloudcompute:index/customCompliance:CustomCompliance';

    /**
     * Returns true if the given object is an instance of CustomCompliance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomCompliance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomCompliance.__pulumiType;
    }

    /**
     * Free-form text description of the custom Compliance.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Prisma Cloud Compute ID of the custom rule.
     */
    public /*out*/ readonly prismaId!: pulumi.Output<number>;
    /**
     * Script of this custom compliance
     */
    public readonly script!: pulumi.Output<string>;
    /**
     * Severity of this custom compliance
     */
    public readonly severity!: pulumi.Output<string>;
    /**
     * Description of the custom compliance
     */
    public readonly title!: pulumi.Output<string>;

    /**
     * Create a CustomCompliance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomComplianceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomComplianceArgs | CustomComplianceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomComplianceState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["prismaId"] = state ? state.prismaId : undefined;
            resourceInputs["script"] = state ? state.script : undefined;
            resourceInputs["severity"] = state ? state.severity : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
        } else {
            const args = argsOrState as CustomComplianceArgs | undefined;
            if ((!args || args.script === undefined) && !opts.urn) {
                throw new Error("Missing required property 'script'");
            }
            if ((!args || args.severity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'severity'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["script"] = args ? args.script : undefined;
            resourceInputs["severity"] = args ? args.severity : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["prismaId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomCompliance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CustomCompliance resources.
 */
export interface CustomComplianceState {
    /**
     * Free-form text description of the custom Compliance.
     */
    name?: pulumi.Input<string>;
    /**
     * Prisma Cloud Compute ID of the custom rule.
     */
    prismaId?: pulumi.Input<number>;
    /**
     * Script of this custom compliance
     */
    script?: pulumi.Input<string>;
    /**
     * Severity of this custom compliance
     */
    severity?: pulumi.Input<string>;
    /**
     * Description of the custom compliance
     */
    title?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomCompliance resource.
 */
export interface CustomComplianceArgs {
    /**
     * Free-form text description of the custom Compliance.
     */
    name?: pulumi.Input<string>;
    /**
     * Script of this custom compliance
     */
    script: pulumi.Input<string>;
    /**
     * Severity of this custom compliance
     */
    severity: pulumi.Input<string>;
    /**
     * Description of the custom compliance
     */
    title: pulumi.Input<string>;
}
