// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudAccount extends pulumi.CustomResource {
    /**
     * Get an existing CloudAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudAccountState, opts?: pulumi.CustomResourceOptions): CloudAccount {
        return new CloudAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prismacloudcompute:index/cloudAccount:CloudAccount';

    /**
     * Returns true if the given object is an instance of CloudAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudAccount.__pulumiType;
    }

    /**
     * Serverless Scan Configuration
     */
    public readonly agentlessScanSpec!: pulumi.Output<outputs.CloudAccountAgentlessScanSpec | undefined>;
    /**
     * AWS Region Type
     */
    public readonly awsRegionType!: pulumi.Output<string | undefined>;
    /**
     * Serverless Scan Configuration
     */
    public readonly credential!: pulumi.Output<outputs.CloudAccountCredential | undefined>;
    /**
     * Credential ID
     */
    public readonly credentialId!: pulumi.Output<string | undefined>;
    /**
     * Cloud Discovery Enabled
     */
    public readonly discoverAllFunctionVersions!: pulumi.Output<boolean | undefined>;
    /**
     * Enables cloud discovery, which will discover all workloads in the account and their scan status.
     */
    public readonly discoveryEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Serverless Radar Cap
     */
    public readonly serverlessRadarCap!: pulumi.Output<number | undefined>;
    /**
     * Enables the discovery of serverless functions.
     */
    public readonly serverlessRadarEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Serverless Scan Configuration
     */
    public readonly serverlessScanSpec!: pulumi.Output<outputs.CloudAccountServerlessScanSpec | undefined>;
    /**
     * Enables the discovery of tags on VMs in AWS accounts.
     */
    public readonly vmTagsEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a CloudAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CloudAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudAccountArgs | CloudAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudAccountState | undefined;
            resourceInputs["agentlessScanSpec"] = state ? state.agentlessScanSpec : undefined;
            resourceInputs["awsRegionType"] = state ? state.awsRegionType : undefined;
            resourceInputs["credential"] = state ? state.credential : undefined;
            resourceInputs["credentialId"] = state ? state.credentialId : undefined;
            resourceInputs["discoverAllFunctionVersions"] = state ? state.discoverAllFunctionVersions : undefined;
            resourceInputs["discoveryEnabled"] = state ? state.discoveryEnabled : undefined;
            resourceInputs["serverlessRadarCap"] = state ? state.serverlessRadarCap : undefined;
            resourceInputs["serverlessRadarEnabled"] = state ? state.serverlessRadarEnabled : undefined;
            resourceInputs["serverlessScanSpec"] = state ? state.serverlessScanSpec : undefined;
            resourceInputs["vmTagsEnabled"] = state ? state.vmTagsEnabled : undefined;
        } else {
            const args = argsOrState as CloudAccountArgs | undefined;
            resourceInputs["agentlessScanSpec"] = args ? args.agentlessScanSpec : undefined;
            resourceInputs["awsRegionType"] = args ? args.awsRegionType : undefined;
            resourceInputs["credential"] = args ? args.credential : undefined;
            resourceInputs["credentialId"] = args ? args.credentialId : undefined;
            resourceInputs["discoverAllFunctionVersions"] = args ? args.discoverAllFunctionVersions : undefined;
            resourceInputs["discoveryEnabled"] = args ? args.discoveryEnabled : undefined;
            resourceInputs["serverlessRadarCap"] = args ? args.serverlessRadarCap : undefined;
            resourceInputs["serverlessRadarEnabled"] = args ? args.serverlessRadarEnabled : undefined;
            resourceInputs["serverlessScanSpec"] = args ? args.serverlessScanSpec : undefined;
            resourceInputs["vmTagsEnabled"] = args ? args.vmTagsEnabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudAccount.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudAccount resources.
 */
export interface CloudAccountState {
    /**
     * Serverless Scan Configuration
     */
    agentlessScanSpec?: pulumi.Input<inputs.CloudAccountAgentlessScanSpec>;
    /**
     * AWS Region Type
     */
    awsRegionType?: pulumi.Input<string>;
    /**
     * Serverless Scan Configuration
     */
    credential?: pulumi.Input<inputs.CloudAccountCredential>;
    /**
     * Credential ID
     */
    credentialId?: pulumi.Input<string>;
    /**
     * Cloud Discovery Enabled
     */
    discoverAllFunctionVersions?: pulumi.Input<boolean>;
    /**
     * Enables cloud discovery, which will discover all workloads in the account and their scan status.
     */
    discoveryEnabled?: pulumi.Input<boolean>;
    /**
     * Serverless Radar Cap
     */
    serverlessRadarCap?: pulumi.Input<number>;
    /**
     * Enables the discovery of serverless functions.
     */
    serverlessRadarEnabled?: pulumi.Input<boolean>;
    /**
     * Serverless Scan Configuration
     */
    serverlessScanSpec?: pulumi.Input<inputs.CloudAccountServerlessScanSpec>;
    /**
     * Enables the discovery of tags on VMs in AWS accounts.
     */
    vmTagsEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a CloudAccount resource.
 */
export interface CloudAccountArgs {
    /**
     * Serverless Scan Configuration
     */
    agentlessScanSpec?: pulumi.Input<inputs.CloudAccountAgentlessScanSpec>;
    /**
     * AWS Region Type
     */
    awsRegionType?: pulumi.Input<string>;
    /**
     * Serverless Scan Configuration
     */
    credential?: pulumi.Input<inputs.CloudAccountCredential>;
    /**
     * Credential ID
     */
    credentialId?: pulumi.Input<string>;
    /**
     * Cloud Discovery Enabled
     */
    discoverAllFunctionVersions?: pulumi.Input<boolean>;
    /**
     * Enables cloud discovery, which will discover all workloads in the account and their scan status.
     */
    discoveryEnabled?: pulumi.Input<boolean>;
    /**
     * Serverless Radar Cap
     */
    serverlessRadarCap?: pulumi.Input<number>;
    /**
     * Enables the discovery of serverless functions.
     */
    serverlessRadarEnabled?: pulumi.Input<boolean>;
    /**
     * Serverless Scan Configuration
     */
    serverlessScanSpec?: pulumi.Input<inputs.CloudAccountServerlessScanSpec>;
    /**
     * Enables the discovery of tags on VMs in AWS accounts.
     */
    vmTagsEnabled?: pulumi.Input<boolean>;
}
