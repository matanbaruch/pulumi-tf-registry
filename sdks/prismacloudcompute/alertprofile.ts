// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Alertprofile extends pulumi.CustomResource {
    /**
     * Get an existing Alertprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlertprofileState, opts?: pulumi.CustomResourceOptions): Alertprofile {
        return new Alertprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prismacloudcompute:index/alertprofile:Alertprofile';

    /**
     * Returns true if the given object is an instance of Alertprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Alertprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Alertprofile.__pulumiType;
    }

    /**
     * Enable immediate vulnerabilities alerts
     */
    public readonly enableImmediateVulnerabilitiesAlerts!: pulumi.Output<boolean | undefined>;
    /**
     * Alert Profile name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Owner
     */
    public /*out*/ readonly owner!: pulumi.Output<string>;
    /**
     * Policy configuration. Configure triggers for alerts.
     */
    public readonly policy!: pulumi.Output<outputs.AlertprofilePolicy | undefined>;
    /**
     * Alert Profile configuration, the values depend on the alert profile type
     */
    public readonly webhook!: pulumi.Output<outputs.AlertprofileWebhook | undefined>;

    /**
     * Create a Alertprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AlertprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlertprofileArgs | AlertprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlertprofileState | undefined;
            resourceInputs["enableImmediateVulnerabilitiesAlerts"] = state ? state.enableImmediateVulnerabilitiesAlerts : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["webhook"] = state ? state.webhook : undefined;
        } else {
            const args = argsOrState as AlertprofileArgs | undefined;
            resourceInputs["enableImmediateVulnerabilitiesAlerts"] = args ? args.enableImmediateVulnerabilitiesAlerts : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["webhook"] = args ? args.webhook : undefined;
            resourceInputs["owner"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Alertprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Alertprofile resources.
 */
export interface AlertprofileState {
    /**
     * Enable immediate vulnerabilities alerts
     */
    enableImmediateVulnerabilitiesAlerts?: pulumi.Input<boolean>;
    /**
     * Alert Profile name
     */
    name?: pulumi.Input<string>;
    /**
     * Owner
     */
    owner?: pulumi.Input<string>;
    /**
     * Policy configuration. Configure triggers for alerts.
     */
    policy?: pulumi.Input<inputs.AlertprofilePolicy>;
    /**
     * Alert Profile configuration, the values depend on the alert profile type
     */
    webhook?: pulumi.Input<inputs.AlertprofileWebhook>;
}

/**
 * The set of arguments for constructing a Alertprofile resource.
 */
export interface AlertprofileArgs {
    /**
     * Enable immediate vulnerabilities alerts
     */
    enableImmediateVulnerabilitiesAlerts?: pulumi.Input<boolean>;
    /**
     * Alert Profile name
     */
    name?: pulumi.Input<string>;
    /**
     * Policy configuration. Configure triggers for alerts.
     */
    policy?: pulumi.Input<inputs.AlertprofilePolicy>;
    /**
     * Alert Profile configuration, the values depend on the alert profile type
     */
    webhook?: pulumi.Input<inputs.AlertprofileWebhook>;
}
