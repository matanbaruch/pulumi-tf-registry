// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CustomRule extends pulumi.CustomResource {
    /**
     * Get an existing CustomRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomRuleState, opts?: pulumi.CustomResourceOptions): CustomRule {
        return new CustomRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prismacloudcompute:index/customRule:CustomRule';

    /**
     * Returns true if the given object is an instance of CustomRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomRule.__pulumiType;
    }

    /**
     * Attack techniques from the MITRE ATT&CK Framework that the rule is concerned with.
     */
    public readonly attackTechniques!: pulumi.Output<string[] | undefined>;
    /**
     * Free-form text description of the custom rule.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Message to display for a custom rule event.
     */
    public readonly message!: pulumi.Output<string | undefined>;
    /**
     * Message to display for a custom rule event.
     */
    public readonly minVersion!: pulumi.Output<string | undefined>;
    /**
     * Unique custom rule name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Prisma Cloud Compute ID of the custom rule.
     */
    public /*out*/ readonly prismaId!: pulumi.Output<number>;
    /**
     * Custom rule expression.
     */
    public readonly script!: pulumi.Output<string | undefined>;
    /**
     * Custom rule type. Can be set to 'processes', 'filesystem', 'network-outgoing', 'kubernetes-audit', 'waas-request', or
     * 'waas-response'.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * List of vulnerability IDs.
     */
    public readonly vulnIds!: pulumi.Output<string[] | undefined>;

    /**
     * Create a CustomRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomRuleArgs | CustomRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomRuleState | undefined;
            resourceInputs["attackTechniques"] = state ? state.attackTechniques : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["message"] = state ? state.message : undefined;
            resourceInputs["minVersion"] = state ? state.minVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["prismaId"] = state ? state.prismaId : undefined;
            resourceInputs["script"] = state ? state.script : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vulnIds"] = state ? state.vulnIds : undefined;
        } else {
            const args = argsOrState as CustomRuleArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["attackTechniques"] = args ? args.attackTechniques : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["message"] = args ? args.message : undefined;
            resourceInputs["minVersion"] = args ? args.minVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["script"] = args ? args.script : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vulnIds"] = args ? args.vulnIds : undefined;
            resourceInputs["prismaId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CustomRule resources.
 */
export interface CustomRuleState {
    /**
     * Attack techniques from the MITRE ATT&CK Framework that the rule is concerned with.
     */
    attackTechniques?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Free-form text description of the custom rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Message to display for a custom rule event.
     */
    message?: pulumi.Input<string>;
    /**
     * Message to display for a custom rule event.
     */
    minVersion?: pulumi.Input<string>;
    /**
     * Unique custom rule name.
     */
    name?: pulumi.Input<string>;
    /**
     * Prisma Cloud Compute ID of the custom rule.
     */
    prismaId?: pulumi.Input<number>;
    /**
     * Custom rule expression.
     */
    script?: pulumi.Input<string>;
    /**
     * Custom rule type. Can be set to 'processes', 'filesystem', 'network-outgoing', 'kubernetes-audit', 'waas-request', or
     * 'waas-response'.
     */
    type?: pulumi.Input<string>;
    /**
     * List of vulnerability IDs.
     */
    vulnIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a CustomRule resource.
 */
export interface CustomRuleArgs {
    /**
     * Attack techniques from the MITRE ATT&CK Framework that the rule is concerned with.
     */
    attackTechniques?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Free-form text description of the custom rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Message to display for a custom rule event.
     */
    message?: pulumi.Input<string>;
    /**
     * Message to display for a custom rule event.
     */
    minVersion?: pulumi.Input<string>;
    /**
     * Unique custom rule name.
     */
    name?: pulumi.Input<string>;
    /**
     * Custom rule expression.
     */
    script?: pulumi.Input<string>;
    /**
     * Custom rule type. Can be set to 'processes', 'filesystem', 'network-outgoing', 'kubernetes-audit', 'waas-request', or
     * 'waas-response'.
     */
    type: pulumi.Input<string>;
    /**
     * List of vulnerability IDs.
     */
    vulnIds?: pulumi.Input<pulumi.Input<string>[]>;
}
