// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Collection extends pulumi.CustomResource {
    /**
     * Get an existing Collection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CollectionState, opts?: pulumi.CustomResourceOptions): Collection {
        return new Collection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prismacloudcompute:index/collection:Collection';

    /**
     * Returns true if the given object is an instance of Collection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Collection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Collection.__pulumiType;
    }

    /**
     * Targeted cloud account IDs.
     */
    public readonly accountIds!: pulumi.Output<string[] | undefined>;
    /**
     * Targeted application IDs (for app-embedded). Values must end in a wildcard (*).
     */
    public readonly applicationIds!: pulumi.Output<string[] | undefined>;
    /**
     * Targeted cluster names.
     */
    public readonly clusters!: pulumi.Output<string[] | undefined>;
    /**
     * Targeted code repositories.
     */
    public readonly codeRepositories!: pulumi.Output<string[] | undefined>;
    /**
     * A hex color code for the collection to display in the Console.
     */
    public readonly color!: pulumi.Output<string | undefined>;
    /**
     * Targeted containers.
     */
    public readonly containers!: pulumi.Output<string[] | undefined>;
    /**
     * A free-form text description of the collection.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Targeted functions.
     */
    public readonly functions!: pulumi.Output<string[] | undefined>;
    /**
     * Targeted hosts.
     */
    public readonly hosts!: pulumi.Output<string[] | undefined>;
    /**
     * Targeted images.
     */
    public readonly images!: pulumi.Output<string[] | undefined>;
    /**
     * Targeted labels.
     */
    public readonly labels!: pulumi.Output<string[] | undefined>;
    /**
     * A unique collection name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Targeted cluster namespaces.
     */
    public readonly namespaces!: pulumi.Output<string[] | undefined>;

    /**
     * Create a Collection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CollectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CollectionArgs | CollectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CollectionState | undefined;
            resourceInputs["accountIds"] = state ? state.accountIds : undefined;
            resourceInputs["applicationIds"] = state ? state.applicationIds : undefined;
            resourceInputs["clusters"] = state ? state.clusters : undefined;
            resourceInputs["codeRepositories"] = state ? state.codeRepositories : undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["containers"] = state ? state.containers : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["functions"] = state ? state.functions : undefined;
            resourceInputs["hosts"] = state ? state.hosts : undefined;
            resourceInputs["images"] = state ? state.images : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespaces"] = state ? state.namespaces : undefined;
        } else {
            const args = argsOrState as CollectionArgs | undefined;
            resourceInputs["accountIds"] = args ? args.accountIds : undefined;
            resourceInputs["applicationIds"] = args ? args.applicationIds : undefined;
            resourceInputs["clusters"] = args ? args.clusters : undefined;
            resourceInputs["codeRepositories"] = args ? args.codeRepositories : undefined;
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["containers"] = args ? args.containers : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["functions"] = args ? args.functions : undefined;
            resourceInputs["hosts"] = args ? args.hosts : undefined;
            resourceInputs["images"] = args ? args.images : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespaces"] = args ? args.namespaces : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Collection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Collection resources.
 */
export interface CollectionState {
    /**
     * Targeted cloud account IDs.
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Targeted application IDs (for app-embedded). Values must end in a wildcard (*).
     */
    applicationIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Targeted cluster names.
     */
    clusters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Targeted code repositories.
     */
    codeRepositories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A hex color code for the collection to display in the Console.
     */
    color?: pulumi.Input<string>;
    /**
     * Targeted containers.
     */
    containers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A free-form text description of the collection.
     */
    description?: pulumi.Input<string>;
    /**
     * Targeted functions.
     */
    functions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Targeted hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Targeted images.
     */
    images?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Targeted labels.
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A unique collection name.
     */
    name?: pulumi.Input<string>;
    /**
     * Targeted cluster namespaces.
     */
    namespaces?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Collection resource.
 */
export interface CollectionArgs {
    /**
     * Targeted cloud account IDs.
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Targeted application IDs (for app-embedded). Values must end in a wildcard (*).
     */
    applicationIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Targeted cluster names.
     */
    clusters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Targeted code repositories.
     */
    codeRepositories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A hex color code for the collection to display in the Console.
     */
    color?: pulumi.Input<string>;
    /**
     * Targeted containers.
     */
    containers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A free-form text description of the collection.
     */
    description?: pulumi.Input<string>;
    /**
     * Targeted functions.
     */
    functions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Targeted hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Targeted images.
     */
    images?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Targeted labels.
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A unique collection name.
     */
    name?: pulumi.Input<string>;
    /**
     * Targeted cluster namespaces.
     */
    namespaces?: pulumi.Input<pulumi.Input<string>[]>;
}
