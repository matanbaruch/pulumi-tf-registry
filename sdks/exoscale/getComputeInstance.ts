// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComputeInstance(args: GetComputeInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getComputeInstance:getComputeInstance", {
        "id": args.id,
        "name": args.name,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeInstance.
 */
export interface GetComputeInstanceArgs {
    id?: string;
    name?: string;
    zone: string;
}

/**
 * A collection of values returned by getComputeInstance.
 */
export interface GetComputeInstanceResult {
    readonly antiAffinityGroupIds: string[];
    readonly createdAt: string;
    readonly deployTargetId: string;
    readonly diskSize: number;
    readonly elasticIpIds: string[];
    readonly id?: string;
    readonly ipv6: boolean;
    readonly ipv6Address: string;
    readonly labels: {[key: string]: string};
    readonly managerId: string;
    readonly managerType: string;
    readonly name?: string;
    readonly privateNetworkIds: string[];
    readonly publicIpAddress: string;
    readonly reverseDns: string;
    readonly securityGroupIds: string[];
    readonly sshKey: string;
    readonly state: string;
    readonly templateId: string;
    readonly type: string;
    readonly userData: string;
    readonly zone: string;
}
export function getComputeInstanceOutput(args: GetComputeInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeInstanceResult> {
    return pulumi.output(args).apply((a: any) => getComputeInstance(a, opts))
}

/**
 * A collection of arguments for invoking getComputeInstance.
 */
export interface GetComputeInstanceOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    zone: pulumi.Input<string>;
}
