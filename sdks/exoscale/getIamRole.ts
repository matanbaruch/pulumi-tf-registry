// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamRole(args?: GetIamRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetIamRoleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getIamRole:getIamRole", {
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamRole.
 */
export interface GetIamRoleArgs {
    id?: string;
    name?: string;
    timeouts?: inputs.GetIamRoleTimeouts;
}

/**
 * A collection of values returned by getIamRole.
 */
export interface GetIamRoleResult {
    readonly description: string;
    readonly editable: boolean;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly permissions: string[];
    readonly policy: outputs.GetIamRolePolicy;
    readonly timeouts?: outputs.GetIamRoleTimeouts;
}
export function getIamRoleOutput(args?: GetIamRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamRoleResult> {
    return pulumi.output(args).apply((a: any) => getIamRole(a, opts))
}

/**
 * A collection of arguments for invoking getIamRole.
 */
export interface GetIamRoleOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetIamRoleTimeoutsArgs>;
}
