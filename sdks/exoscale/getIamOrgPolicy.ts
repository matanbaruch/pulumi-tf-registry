// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamOrgPolicy(args?: GetIamOrgPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetIamOrgPolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getIamOrgPolicy:getIamOrgPolicy", {
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamOrgPolicy.
 */
export interface GetIamOrgPolicyArgs {
    timeouts?: inputs.GetIamOrgPolicyTimeouts;
}

/**
 * A collection of values returned by getIamOrgPolicy.
 */
export interface GetIamOrgPolicyResult {
    readonly defaultServiceStrategy: string;
    readonly id: string;
    readonly services: {[key: string]: outputs.GetIamOrgPolicyServices};
    readonly timeouts?: outputs.GetIamOrgPolicyTimeouts;
}
export function getIamOrgPolicyOutput(args?: GetIamOrgPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamOrgPolicyResult> {
    return pulumi.output(args).apply((a: any) => getIamOrgPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getIamOrgPolicy.
 */
export interface GetIamOrgPolicyOutputArgs {
    timeouts?: pulumi.Input<inputs.GetIamOrgPolicyTimeoutsArgs>;
}
