// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBlockStorageVolumeSnapshot(args: GetBlockStorageVolumeSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetBlockStorageVolumeSnapshotResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("exoscale:index/getBlockStorageVolumeSnapshot:getBlockStorageVolumeSnapshot", {
        "id": args.id,
        "timeouts": args.timeouts,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlockStorageVolumeSnapshot.
 */
export interface GetBlockStorageVolumeSnapshotArgs {
    id: string;
    timeouts?: inputs.GetBlockStorageVolumeSnapshotTimeouts;
    zone: string;
}

/**
 * A collection of values returned by getBlockStorageVolumeSnapshot.
 */
export interface GetBlockStorageVolumeSnapshotResult {
    readonly createdAt: string;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly size: number;
    readonly state: string;
    readonly timeouts?: outputs.GetBlockStorageVolumeSnapshotTimeouts;
    readonly volume: outputs.GetBlockStorageVolumeSnapshotVolume;
    readonly zone: string;
}
export function getBlockStorageVolumeSnapshotOutput(args: GetBlockStorageVolumeSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlockStorageVolumeSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getBlockStorageVolumeSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getBlockStorageVolumeSnapshot.
 */
export interface GetBlockStorageVolumeSnapshotOutputArgs {
    id: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetBlockStorageVolumeSnapshotTimeoutsArgs>;
    zone: pulumi.Input<string>;
}
