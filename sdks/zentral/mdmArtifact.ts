// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MdmArtifact extends pulumi.CustomResource {
    /**
     * Get an existing MdmArtifact resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MdmArtifactState, opts?: pulumi.CustomResourceOptions): MdmArtifact {
        return new MdmArtifact(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zentral:index/mdmArtifact:MdmArtifact';

    /**
     * Returns true if the given object is an instance of MdmArtifact.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MdmArtifact {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MdmArtifact.__pulumiType;
    }

    /**
     * If `true`, new version of this artifact will be automatically installed. Defaults to `true`.
     */
    public readonly autoUpdate!: pulumi.Output<boolean>;
    /**
     * Channel of the artifact.
     */
    public readonly channel!: pulumi.Output<string>;
    /**
     * If `true`, this artifact will be installed during the setup assistant. Defaults to `false`.
     */
    public readonly installDuringSetupAssistant!: pulumi.Output<boolean>;
    /**
     * Name of the artifact.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Platforms of the artifact.
     */
    public readonly platforms!: pulumi.Output<string[]>;
    /**
     * In days, the time interval after which the artifact will be reinstalled. If `0`, the artifact will not be reinstalled.
     * Defaults to `0`.
     */
    public readonly reinstallInterval!: pulumi.Output<number>;
    /**
     * Possible values: `No`, `Major`, `Minor`, `Patch`. Defaults to `No`.
     */
    public readonly reinstallOnOsUpdate!: pulumi.Output<string>;
    /**
     * `ID`s of the artifacts required by this artifact.
     */
    public readonly requires!: pulumi.Output<string[]>;
    /**
     * Type of the artifact.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a MdmArtifact resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MdmArtifactArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MdmArtifactArgs | MdmArtifactState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MdmArtifactState | undefined;
            resourceInputs["autoUpdate"] = state ? state.autoUpdate : undefined;
            resourceInputs["channel"] = state ? state.channel : undefined;
            resourceInputs["installDuringSetupAssistant"] = state ? state.installDuringSetupAssistant : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["platforms"] = state ? state.platforms : undefined;
            resourceInputs["reinstallInterval"] = state ? state.reinstallInterval : undefined;
            resourceInputs["reinstallOnOsUpdate"] = state ? state.reinstallOnOsUpdate : undefined;
            resourceInputs["requires"] = state ? state.requires : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as MdmArtifactArgs | undefined;
            if ((!args || args.channel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'channel'");
            }
            if ((!args || args.platforms === undefined) && !opts.urn) {
                throw new Error("Missing required property 'platforms'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["autoUpdate"] = args ? args.autoUpdate : undefined;
            resourceInputs["channel"] = args ? args.channel : undefined;
            resourceInputs["installDuringSetupAssistant"] = args ? args.installDuringSetupAssistant : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["platforms"] = args ? args.platforms : undefined;
            resourceInputs["reinstallInterval"] = args ? args.reinstallInterval : undefined;
            resourceInputs["reinstallOnOsUpdate"] = args ? args.reinstallOnOsUpdate : undefined;
            resourceInputs["requires"] = args ? args.requires : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MdmArtifact.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MdmArtifact resources.
 */
export interface MdmArtifactState {
    /**
     * If `true`, new version of this artifact will be automatically installed. Defaults to `true`.
     */
    autoUpdate?: pulumi.Input<boolean>;
    /**
     * Channel of the artifact.
     */
    channel?: pulumi.Input<string>;
    /**
     * If `true`, this artifact will be installed during the setup assistant. Defaults to `false`.
     */
    installDuringSetupAssistant?: pulumi.Input<boolean>;
    /**
     * Name of the artifact.
     */
    name?: pulumi.Input<string>;
    /**
     * Platforms of the artifact.
     */
    platforms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * In days, the time interval after which the artifact will be reinstalled. If `0`, the artifact will not be reinstalled.
     * Defaults to `0`.
     */
    reinstallInterval?: pulumi.Input<number>;
    /**
     * Possible values: `No`, `Major`, `Minor`, `Patch`. Defaults to `No`.
     */
    reinstallOnOsUpdate?: pulumi.Input<string>;
    /**
     * `ID`s of the artifacts required by this artifact.
     */
    requires?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of the artifact.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MdmArtifact resource.
 */
export interface MdmArtifactArgs {
    /**
     * If `true`, new version of this artifact will be automatically installed. Defaults to `true`.
     */
    autoUpdate?: pulumi.Input<boolean>;
    /**
     * Channel of the artifact.
     */
    channel: pulumi.Input<string>;
    /**
     * If `true`, this artifact will be installed during the setup assistant. Defaults to `false`.
     */
    installDuringSetupAssistant?: pulumi.Input<boolean>;
    /**
     * Name of the artifact.
     */
    name?: pulumi.Input<string>;
    /**
     * Platforms of the artifact.
     */
    platforms: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * In days, the time interval after which the artifact will be reinstalled. If `0`, the artifact will not be reinstalled.
     * Defaults to `0`.
     */
    reinstallInterval?: pulumi.Input<number>;
    /**
     * Possible values: `No`, `Major`, `Minor`, `Patch`. Defaults to `No`.
     */
    reinstallOnOsUpdate?: pulumi.Input<string>;
    /**
     * `ID`s of the artifacts required by this artifact.
     */
    requires?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of the artifact.
     */
    type: pulumi.Input<string>;
}
