// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsqueryQuery(args?: GetOsqueryQueryArgs, opts?: pulumi.InvokeOptions): Promise<GetOsqueryQueryResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zentral:index/getOsqueryQuery:getOsqueryQuery", {
        "id": args.id,
        "name": args.name,
        "scheduling": args.scheduling,
        "tagId": args.tagId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsqueryQuery.
 */
export interface GetOsqueryQueryArgs {
    id?: number;
    name?: string;
    scheduling?: inputs.GetOsqueryQueryScheduling;
    tagId?: number;
}

/**
 * A collection of values returned by getOsqueryQuery.
 */
export interface GetOsqueryQueryResult {
    readonly complianceCheckEnabled: boolean;
    readonly description: string;
    readonly id?: number;
    readonly minimumOsqueryVersion: string;
    readonly name?: string;
    readonly platforms: string[];
    readonly scheduling: outputs.GetOsqueryQueryScheduling;
    readonly sql: string;
    readonly tagId?: number;
    readonly value: string;
    readonly version: number;
}
export function getOsqueryQueryOutput(args?: GetOsqueryQueryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsqueryQueryResult> {
    return pulumi.output(args).apply((a: any) => getOsqueryQuery(a, opts))
}

/**
 * A collection of arguments for invoking getOsqueryQuery.
 */
export interface GetOsqueryQueryOutputArgs {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    scheduling?: pulumi.Input<inputs.GetOsqueryQuerySchedulingArgs>;
    tagId?: pulumi.Input<number>;
}
