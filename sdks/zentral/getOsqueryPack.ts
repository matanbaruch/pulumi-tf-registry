// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOsqueryPack(args?: GetOsqueryPackArgs, opts?: pulumi.InvokeOptions): Promise<GetOsqueryPackResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zentral:index/getOsqueryPack:getOsqueryPack", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsqueryPack.
 */
export interface GetOsqueryPackArgs {
    id?: number;
    name?: string;
}

/**
 * A collection of values returned by getOsqueryPack.
 */
export interface GetOsqueryPackResult {
    readonly description: string;
    readonly discoveryQueries: string[];
    readonly eventRoutingKey: string;
    readonly id?: number;
    readonly name?: string;
    readonly shard: number;
    readonly slug: string;
}
export function getOsqueryPackOutput(args?: GetOsqueryPackOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsqueryPackResult> {
    return pulumi.output(args).apply((a: any) => getOsqueryPack(a, opts))
}

/**
 * A collection of arguments for invoking getOsqueryPack.
 */
export interface GetOsqueryPackOutputArgs {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
