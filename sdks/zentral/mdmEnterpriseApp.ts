// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MdmEnterpriseApp extends pulumi.CustomResource {
    /**
     * Get an existing MdmEnterpriseApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MdmEnterpriseAppState, opts?: pulumi.CustomResourceOptions): MdmEnterpriseApp {
        return new MdmEnterpriseApp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zentral:index/mdmEnterpriseApp:MdmEnterpriseApp';

    /**
     * Returns true if the given object is an instance of MdmEnterpriseApp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MdmEnterpriseApp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MdmEnterpriseApp.__pulumiType;
    }

    /**
     * `ID` of the app artifact.
     */
    public readonly artifactId!: pulumi.Output<string>;
    /**
     * A dictionary serialized as plist that contains the initial configuration of the app.
     */
    public readonly configuration!: pulumi.Output<string | undefined>;
    /**
     * The default shard value. Defaults to `100`.
     */
    public readonly defaultShard!: pulumi.Output<number>;
    /**
     * Machines tagged with one of these tags will not receive the app.
     */
    public readonly excludedTagIds!: pulumi.Output<number[]>;
    /**
     * If `true`, install the app as a managed app. Defaults to `false`.
     */
    public readonly installAsManaged!: pulumi.Output<boolean>;
    /**
     * Toggles the installation of the app on iOS devices.
     */
    public readonly ios!: pulumi.Output<boolean>;
    /**
     * Indicates if the app is an iOS app that can run on an Apple silicon in macOS 11 and later. Defaults to `false`
     */
    public readonly iosApp!: pulumi.Output<boolean>;
    /**
     * Devices with this iOS version or higher will **not** receive this app.
     */
    public readonly iosMaxVersion!: pulumi.Output<string>;
    /**
     * Devices with this iOS version or higher will receive this app.
     */
    public readonly iosMinVersion!: pulumi.Output<string>;
    /**
     * Toggles the installation of the app on iPadOS devices.
     */
    public readonly ipados!: pulumi.Output<boolean>;
    /**
     * Devices with this iPadOS version or higher will **not** receive this app.
     */
    public readonly ipadosMaxVersion!: pulumi.Output<string>;
    /**
     * Devices with this iPadOS version or higher will receive this app.
     */
    public readonly ipadosMinVersion!: pulumi.Output<string>;
    /**
     * Toggles the installation of the app on macOS devices.
     */
    public readonly macos!: pulumi.Output<boolean>;
    /**
     * Devices with this macOS version or higher will **not** receive this app.
     */
    public readonly macosMaxVersion!: pulumi.Output<string>;
    /**
     * Devices with this macOS version or higher will receive this app.
     */
    public readonly macosMinVersion!: pulumi.Output<string>;
    /**
     * The hexadecimal digest of the sha256 hash of the package.
     */
    public readonly packageSha256!: pulumi.Output<string>;
    /**
     * The URI of the app package.
     */
    public readonly packageUri!: pulumi.Output<string>;
    /**
     * If `true`, the app will be removed when the device is unenrolled. Defaults to `false`.
     */
    public readonly removeOnUnenroll!: pulumi.Output<boolean>;
    /**
     * The modulo used to calculate the shards. Defaults to `100`.
     */
    public readonly shardModulo!: pulumi.Output<number>;
    /**
     * A set of tag shard values different from the default shard, to determine if the tagged machines will receive the app.
     */
    public readonly tagShards!: pulumi.Output<outputs.MdmEnterpriseAppTagShard[]>;
    /**
     * Toggles the installation of the app on tvOS devices.
     */
    public readonly tvos!: pulumi.Output<boolean>;
    /**
     * Devices with this tvOS version or higher will **not** receive this app.
     */
    public readonly tvosMaxVersion!: pulumi.Output<string>;
    /**
     * Devices with this tvOS version or higher will receive this app.
     */
    public readonly tvosMinVersion!: pulumi.Output<string>;
    /**
     * Version of the app.
     */
    public readonly version!: pulumi.Output<number>;

    /**
     * Create a MdmEnterpriseApp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MdmEnterpriseAppArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MdmEnterpriseAppArgs | MdmEnterpriseAppState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MdmEnterpriseAppState | undefined;
            resourceInputs["artifactId"] = state ? state.artifactId : undefined;
            resourceInputs["configuration"] = state ? state.configuration : undefined;
            resourceInputs["defaultShard"] = state ? state.defaultShard : undefined;
            resourceInputs["excludedTagIds"] = state ? state.excludedTagIds : undefined;
            resourceInputs["installAsManaged"] = state ? state.installAsManaged : undefined;
            resourceInputs["ios"] = state ? state.ios : undefined;
            resourceInputs["iosApp"] = state ? state.iosApp : undefined;
            resourceInputs["iosMaxVersion"] = state ? state.iosMaxVersion : undefined;
            resourceInputs["iosMinVersion"] = state ? state.iosMinVersion : undefined;
            resourceInputs["ipados"] = state ? state.ipados : undefined;
            resourceInputs["ipadosMaxVersion"] = state ? state.ipadosMaxVersion : undefined;
            resourceInputs["ipadosMinVersion"] = state ? state.ipadosMinVersion : undefined;
            resourceInputs["macos"] = state ? state.macos : undefined;
            resourceInputs["macosMaxVersion"] = state ? state.macosMaxVersion : undefined;
            resourceInputs["macosMinVersion"] = state ? state.macosMinVersion : undefined;
            resourceInputs["packageSha256"] = state ? state.packageSha256 : undefined;
            resourceInputs["packageUri"] = state ? state.packageUri : undefined;
            resourceInputs["removeOnUnenroll"] = state ? state.removeOnUnenroll : undefined;
            resourceInputs["shardModulo"] = state ? state.shardModulo : undefined;
            resourceInputs["tagShards"] = state ? state.tagShards : undefined;
            resourceInputs["tvos"] = state ? state.tvos : undefined;
            resourceInputs["tvosMaxVersion"] = state ? state.tvosMaxVersion : undefined;
            resourceInputs["tvosMinVersion"] = state ? state.tvosMinVersion : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as MdmEnterpriseAppArgs | undefined;
            if ((!args || args.artifactId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'artifactId'");
            }
            if ((!args || args.packageSha256 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'packageSha256'");
            }
            if ((!args || args.packageUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'packageUri'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["artifactId"] = args ? args.artifactId : undefined;
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["defaultShard"] = args ? args.defaultShard : undefined;
            resourceInputs["excludedTagIds"] = args ? args.excludedTagIds : undefined;
            resourceInputs["installAsManaged"] = args ? args.installAsManaged : undefined;
            resourceInputs["ios"] = args ? args.ios : undefined;
            resourceInputs["iosApp"] = args ? args.iosApp : undefined;
            resourceInputs["iosMaxVersion"] = args ? args.iosMaxVersion : undefined;
            resourceInputs["iosMinVersion"] = args ? args.iosMinVersion : undefined;
            resourceInputs["ipados"] = args ? args.ipados : undefined;
            resourceInputs["ipadosMaxVersion"] = args ? args.ipadosMaxVersion : undefined;
            resourceInputs["ipadosMinVersion"] = args ? args.ipadosMinVersion : undefined;
            resourceInputs["macos"] = args ? args.macos : undefined;
            resourceInputs["macosMaxVersion"] = args ? args.macosMaxVersion : undefined;
            resourceInputs["macosMinVersion"] = args ? args.macosMinVersion : undefined;
            resourceInputs["packageSha256"] = args ? args.packageSha256 : undefined;
            resourceInputs["packageUri"] = args ? args.packageUri : undefined;
            resourceInputs["removeOnUnenroll"] = args ? args.removeOnUnenroll : undefined;
            resourceInputs["shardModulo"] = args ? args.shardModulo : undefined;
            resourceInputs["tagShards"] = args ? args.tagShards : undefined;
            resourceInputs["tvos"] = args ? args.tvos : undefined;
            resourceInputs["tvosMaxVersion"] = args ? args.tvosMaxVersion : undefined;
            resourceInputs["tvosMinVersion"] = args ? args.tvosMinVersion : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MdmEnterpriseApp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MdmEnterpriseApp resources.
 */
export interface MdmEnterpriseAppState {
    /**
     * `ID` of the app artifact.
     */
    artifactId?: pulumi.Input<string>;
    /**
     * A dictionary serialized as plist that contains the initial configuration of the app.
     */
    configuration?: pulumi.Input<string>;
    /**
     * The default shard value. Defaults to `100`.
     */
    defaultShard?: pulumi.Input<number>;
    /**
     * Machines tagged with one of these tags will not receive the app.
     */
    excludedTagIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * If `true`, install the app as a managed app. Defaults to `false`.
     */
    installAsManaged?: pulumi.Input<boolean>;
    /**
     * Toggles the installation of the app on iOS devices.
     */
    ios?: pulumi.Input<boolean>;
    /**
     * Indicates if the app is an iOS app that can run on an Apple silicon in macOS 11 and later. Defaults to `false`
     */
    iosApp?: pulumi.Input<boolean>;
    /**
     * Devices with this iOS version or higher will **not** receive this app.
     */
    iosMaxVersion?: pulumi.Input<string>;
    /**
     * Devices with this iOS version or higher will receive this app.
     */
    iosMinVersion?: pulumi.Input<string>;
    /**
     * Toggles the installation of the app on iPadOS devices.
     */
    ipados?: pulumi.Input<boolean>;
    /**
     * Devices with this iPadOS version or higher will **not** receive this app.
     */
    ipadosMaxVersion?: pulumi.Input<string>;
    /**
     * Devices with this iPadOS version or higher will receive this app.
     */
    ipadosMinVersion?: pulumi.Input<string>;
    /**
     * Toggles the installation of the app on macOS devices.
     */
    macos?: pulumi.Input<boolean>;
    /**
     * Devices with this macOS version or higher will **not** receive this app.
     */
    macosMaxVersion?: pulumi.Input<string>;
    /**
     * Devices with this macOS version or higher will receive this app.
     */
    macosMinVersion?: pulumi.Input<string>;
    /**
     * The hexadecimal digest of the sha256 hash of the package.
     */
    packageSha256?: pulumi.Input<string>;
    /**
     * The URI of the app package.
     */
    packageUri?: pulumi.Input<string>;
    /**
     * If `true`, the app will be removed when the device is unenrolled. Defaults to `false`.
     */
    removeOnUnenroll?: pulumi.Input<boolean>;
    /**
     * The modulo used to calculate the shards. Defaults to `100`.
     */
    shardModulo?: pulumi.Input<number>;
    /**
     * A set of tag shard values different from the default shard, to determine if the tagged machines will receive the app.
     */
    tagShards?: pulumi.Input<pulumi.Input<inputs.MdmEnterpriseAppTagShard>[]>;
    /**
     * Toggles the installation of the app on tvOS devices.
     */
    tvos?: pulumi.Input<boolean>;
    /**
     * Devices with this tvOS version or higher will **not** receive this app.
     */
    tvosMaxVersion?: pulumi.Input<string>;
    /**
     * Devices with this tvOS version or higher will receive this app.
     */
    tvosMinVersion?: pulumi.Input<string>;
    /**
     * Version of the app.
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a MdmEnterpriseApp resource.
 */
export interface MdmEnterpriseAppArgs {
    /**
     * `ID` of the app artifact.
     */
    artifactId: pulumi.Input<string>;
    /**
     * A dictionary serialized as plist that contains the initial configuration of the app.
     */
    configuration?: pulumi.Input<string>;
    /**
     * The default shard value. Defaults to `100`.
     */
    defaultShard?: pulumi.Input<number>;
    /**
     * Machines tagged with one of these tags will not receive the app.
     */
    excludedTagIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * If `true`, install the app as a managed app. Defaults to `false`.
     */
    installAsManaged?: pulumi.Input<boolean>;
    /**
     * Toggles the installation of the app on iOS devices.
     */
    ios?: pulumi.Input<boolean>;
    /**
     * Indicates if the app is an iOS app that can run on an Apple silicon in macOS 11 and later. Defaults to `false`
     */
    iosApp?: pulumi.Input<boolean>;
    /**
     * Devices with this iOS version or higher will **not** receive this app.
     */
    iosMaxVersion?: pulumi.Input<string>;
    /**
     * Devices with this iOS version or higher will receive this app.
     */
    iosMinVersion?: pulumi.Input<string>;
    /**
     * Toggles the installation of the app on iPadOS devices.
     */
    ipados?: pulumi.Input<boolean>;
    /**
     * Devices with this iPadOS version or higher will **not** receive this app.
     */
    ipadosMaxVersion?: pulumi.Input<string>;
    /**
     * Devices with this iPadOS version or higher will receive this app.
     */
    ipadosMinVersion?: pulumi.Input<string>;
    /**
     * Toggles the installation of the app on macOS devices.
     */
    macos?: pulumi.Input<boolean>;
    /**
     * Devices with this macOS version or higher will **not** receive this app.
     */
    macosMaxVersion?: pulumi.Input<string>;
    /**
     * Devices with this macOS version or higher will receive this app.
     */
    macosMinVersion?: pulumi.Input<string>;
    /**
     * The hexadecimal digest of the sha256 hash of the package.
     */
    packageSha256: pulumi.Input<string>;
    /**
     * The URI of the app package.
     */
    packageUri: pulumi.Input<string>;
    /**
     * If `true`, the app will be removed when the device is unenrolled. Defaults to `false`.
     */
    removeOnUnenroll?: pulumi.Input<boolean>;
    /**
     * The modulo used to calculate the shards. Defaults to `100`.
     */
    shardModulo?: pulumi.Input<number>;
    /**
     * A set of tag shard values different from the default shard, to determine if the tagged machines will receive the app.
     */
    tagShards?: pulumi.Input<pulumi.Input<inputs.MdmEnterpriseAppTagShard>[]>;
    /**
     * Toggles the installation of the app on tvOS devices.
     */
    tvos?: pulumi.Input<boolean>;
    /**
     * Devices with this tvOS version or higher will **not** receive this app.
     */
    tvosMaxVersion?: pulumi.Input<string>;
    /**
     * Devices with this tvOS version or higher will receive this app.
     */
    tvosMinVersion?: pulumi.Input<string>;
    /**
     * Version of the app.
     */
    version: pulumi.Input<number>;
}
