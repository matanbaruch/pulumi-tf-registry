// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMetaBusinessUnit(args?: GetMetaBusinessUnitArgs, opts?: pulumi.InvokeOptions): Promise<GetMetaBusinessUnitResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zentral:index/getMetaBusinessUnit:getMetaBusinessUnit", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMetaBusinessUnit.
 */
export interface GetMetaBusinessUnitArgs {
    id?: number;
    name?: string;
}

/**
 * A collection of values returned by getMetaBusinessUnit.
 */
export interface GetMetaBusinessUnitResult {
    readonly apiEnrollmentEnabled: boolean;
    readonly id?: number;
    readonly name?: string;
}
export function getMetaBusinessUnitOutput(args?: GetMetaBusinessUnitOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetaBusinessUnitResult> {
    return pulumi.output(args).apply((a: any) => getMetaBusinessUnit(a, opts))
}

/**
 * A collection of arguments for invoking getMetaBusinessUnit.
 */
export interface GetMetaBusinessUnitOutputArgs {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
