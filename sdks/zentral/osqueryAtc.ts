// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OsqueryAtc extends pulumi.CustomResource {
    /**
     * Get an existing OsqueryAtc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OsqueryAtcState, opts?: pulumi.CustomResourceOptions): OsqueryAtc {
        return new OsqueryAtc(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zentral:index/osqueryAtc:OsqueryAtc';

    /**
     * Returns true if the given object is an instance of OsqueryAtc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OsqueryAtc {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OsqueryAtc.__pulumiType;
    }

    /**
     * List of the column names corresponding the the query.
     */
    public readonly columns!: pulumi.Output<string[]>;
    /**
     * Description of the Osquery ATC.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Name of the Osquery ATC.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Path of the SQLite table on the device.
     */
    public readonly path!: pulumi.Output<string>;
    /**
     * Platform on which this ATC can be activated
     */
    public readonly platforms!: pulumi.Output<string[]>;
    /**
     * Query used to fetch the ATC data.
     */
    public readonly query!: pulumi.Output<string>;
    /**
     * Name of the Osquery ATC table.
     */
    public readonly tableName!: pulumi.Output<string>;

    /**
     * Create a OsqueryAtc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OsqueryAtcArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OsqueryAtcArgs | OsqueryAtcState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OsqueryAtcState | undefined;
            resourceInputs["columns"] = state ? state.columns : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["platforms"] = state ? state.platforms : undefined;
            resourceInputs["query"] = state ? state.query : undefined;
            resourceInputs["tableName"] = state ? state.tableName : undefined;
        } else {
            const args = argsOrState as OsqueryAtcArgs | undefined;
            if ((!args || args.columns === undefined) && !opts.urn) {
                throw new Error("Missing required property 'columns'");
            }
            if ((!args || args.path === undefined) && !opts.urn) {
                throw new Error("Missing required property 'path'");
            }
            if ((!args || args.platforms === undefined) && !opts.urn) {
                throw new Error("Missing required property 'platforms'");
            }
            if ((!args || args.query === undefined) && !opts.urn) {
                throw new Error("Missing required property 'query'");
            }
            if ((!args || args.tableName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tableName'");
            }
            resourceInputs["columns"] = args ? args.columns : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["platforms"] = args ? args.platforms : undefined;
            resourceInputs["query"] = args ? args.query : undefined;
            resourceInputs["tableName"] = args ? args.tableName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OsqueryAtc.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OsqueryAtc resources.
 */
export interface OsqueryAtcState {
    /**
     * List of the column names corresponding the the query.
     */
    columns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the Osquery ATC.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the Osquery ATC.
     */
    name?: pulumi.Input<string>;
    /**
     * Path of the SQLite table on the device.
     */
    path?: pulumi.Input<string>;
    /**
     * Platform on which this ATC can be activated
     */
    platforms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Query used to fetch the ATC data.
     */
    query?: pulumi.Input<string>;
    /**
     * Name of the Osquery ATC table.
     */
    tableName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OsqueryAtc resource.
 */
export interface OsqueryAtcArgs {
    /**
     * List of the column names corresponding the the query.
     */
    columns: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the Osquery ATC.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the Osquery ATC.
     */
    name?: pulumi.Input<string>;
    /**
     * Path of the SQLite table on the device.
     */
    path: pulumi.Input<string>;
    /**
     * Platform on which this ATC can be activated
     */
    platforms: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Query used to fetch the ATC data.
     */
    query: pulumi.Input<string>;
    /**
     * Name of the Osquery ATC table.
     */
    tableName: pulumi.Input<string>;
}
