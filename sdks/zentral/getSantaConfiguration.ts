// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSantaConfiguration(args?: GetSantaConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetSantaConfigurationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zentral:index/getSantaConfiguration:getSantaConfiguration", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSantaConfiguration.
 */
export interface GetSantaConfigurationArgs {
    id?: number;
    name?: string;
}

/**
 * A collection of values returned by getSantaConfiguration.
 */
export interface GetSantaConfigurationResult {
    readonly allowUnknownShard: number;
    readonly allowedPathRegex: string;
    readonly batchSize: number;
    readonly blockUsbMount: boolean;
    readonly blockedPathRegex: string;
    readonly clientCertificateAuth: boolean;
    readonly clientMode: string;
    readonly enableAllEventUploadShard: number;
    readonly enableBundles: boolean;
    readonly enableTransitiveRules: boolean;
    readonly fullSyncInterval: number;
    readonly id?: number;
    readonly name?: string;
    readonly remountUsbModes: string[];
    readonly syncIncidentSeverity: number;
}
export function getSantaConfigurationOutput(args?: GetSantaConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSantaConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getSantaConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getSantaConfiguration.
 */
export interface GetSantaConfigurationOutputArgs {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
