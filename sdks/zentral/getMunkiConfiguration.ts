// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMunkiConfiguration(args?: GetMunkiConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetMunkiConfigurationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zentral:index/getMunkiConfiguration:getMunkiConfiguration", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMunkiConfiguration.
 */
export interface GetMunkiConfigurationArgs {
    id?: number;
    name?: string;
}

/**
 * A collection of values returned by getMunkiConfiguration.
 */
export interface GetMunkiConfigurationResult {
    readonly autoFailedInstallIncidents: boolean;
    readonly autoReinstallIncidents: boolean;
    readonly collectedConditionKeys: string[];
    readonly description: string;
    readonly id?: number;
    readonly inventoryAppsFullInfoShard: number;
    readonly managedInstallsSyncIntervalDays: number;
    readonly name?: string;
    readonly principalUserDetectionDomains: string[];
    readonly principalUserDetectionSources: string[];
    readonly scriptChecksRunIntervalSeconds: number;
    readonly version: number;
}
export function getMunkiConfigurationOutput(args?: GetMunkiConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMunkiConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getMunkiConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getMunkiConfiguration.
 */
export interface GetMunkiConfigurationOutputArgs {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
