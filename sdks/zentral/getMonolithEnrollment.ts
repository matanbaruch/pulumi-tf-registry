// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMonolithEnrollment(args?: GetMonolithEnrollmentArgs, opts?: pulumi.InvokeOptions): Promise<GetMonolithEnrollmentResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zentral:index/getMonolithEnrollment:getMonolithEnrollment", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonolithEnrollment.
 */
export interface GetMonolithEnrollmentArgs {
    id?: number;
}

/**
 * A collection of values returned by getMonolithEnrollment.
 */
export interface GetMonolithEnrollmentResult {
    readonly configurationProfileUrl: string;
    readonly id?: number;
    readonly manifestId: number;
    readonly metaBusinessUnitId: number;
    readonly plistUrl: string;
    readonly quota: number;
    readonly secret: string;
    readonly serialNumbers: string[];
    readonly tagIds: number[];
    readonly udids: string[];
    readonly version: number;
}
export function getMonolithEnrollmentOutput(args?: GetMonolithEnrollmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonolithEnrollmentResult> {
    return pulumi.output(args).apply((a: any) => getMonolithEnrollment(a, opts))
}

/**
 * A collection of arguments for invoking getMonolithEnrollment.
 */
export interface GetMonolithEnrollmentOutputArgs {
    id?: pulumi.Input<number>;
}
