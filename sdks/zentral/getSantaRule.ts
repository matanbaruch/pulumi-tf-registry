// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSantaRule(args?: GetSantaRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetSantaRuleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zentral:index/getSantaRule:getSantaRule", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSantaRule.
 */
export interface GetSantaRuleArgs {
    id?: number;
}

/**
 * A collection of values returned by getSantaRule.
 */
export interface GetSantaRuleResult {
    readonly configurationId: number;
    readonly customMessage: string;
    readonly description: string;
    readonly excludedPrimaryUsers: string[];
    readonly excludedSerialNumbers: string[];
    readonly excludedTagIds: number[];
    readonly id?: number;
    readonly policy: string;
    readonly primaryUsers: string[];
    readonly rulesetId: number;
    readonly serialNumbers: string[];
    readonly tagIds: number[];
    readonly targetIdentifier: string;
    readonly targetType: string;
    readonly version: number;
}
export function getSantaRuleOutput(args?: GetSantaRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSantaRuleResult> {
    return pulumi.output(args).apply((a: any) => getSantaRule(a, opts))
}

/**
 * A collection of arguments for invoking getSantaRule.
 */
export interface GetSantaRuleOutputArgs {
    id?: pulumi.Input<number>;
}
