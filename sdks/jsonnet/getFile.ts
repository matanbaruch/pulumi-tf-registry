// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFile(args?: GetFileArgs, opts?: pulumi.InvokeOptions): Promise<GetFileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("jsonnet:index/getFile:getFile", {
        "content": args.content,
        "extCode": args.extCode,
        "extStr": args.extStr,
        "jsonnetPath": args.jsonnetPath,
        "source": args.source,
        "stringOutput": args.stringOutput,
        "tlaCode": args.tlaCode,
        "tlaStr": args.tlaStr,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFile.
 */
export interface GetFileArgs {
    content?: string;
    extCode?: {[key: string]: string};
    extStr?: {[key: string]: string};
    jsonnetPath?: string;
    source?: string;
    stringOutput?: boolean;
    tlaCode?: {[key: string]: string};
    tlaStr?: {[key: string]: string};
}

/**
 * A collection of values returned by getFile.
 */
export interface GetFileResult {
    readonly content?: string;
    readonly extCode?: {[key: string]: string};
    readonly extStr?: {[key: string]: string};
    readonly id: string;
    readonly jsonnetPath?: string;
    readonly rendered: string;
    readonly source?: string;
    readonly stringOutput?: boolean;
    readonly tlaCode?: {[key: string]: string};
    readonly tlaStr?: {[key: string]: string};
}
export function getFileOutput(args?: GetFileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFileResult> {
    return pulumi.output(args).apply((a: any) => getFile(a, opts))
}

/**
 * A collection of arguments for invoking getFile.
 */
export interface GetFileOutputArgs {
    content?: pulumi.Input<string>;
    extCode?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    extStr?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    jsonnetPath?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    stringOutput?: pulumi.Input<boolean>;
    tlaCode?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tlaStr?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
