// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DefaultServiceAccountV1 extends pulumi.CustomResource {
    /**
     * Get an existing DefaultServiceAccountV1 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultServiceAccountV1State, opts?: pulumi.CustomResourceOptions): DefaultServiceAccountV1 {
        return new DefaultServiceAccountV1(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'kubernetes:index/defaultServiceAccountV1:DefaultServiceAccountV1';

    /**
     * Returns true if the given object is an instance of DefaultServiceAccountV1.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultServiceAccountV1 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultServiceAccountV1.__pulumiType;
    }

    /**
     * Enable automatic mounting of the service account token
     */
    public readonly automountServiceAccountToken!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Deprecated
     */
    public /*out*/ readonly defaultSecretName!: pulumi.Output<string>;
    /**
     * A list of references to secrets in the same namespace to use for pulling any images in pods that reference this Service
     * Account. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
     */
    public readonly imagePullSecrets!: pulumi.Output<outputs.DefaultServiceAccountV1ImagePullSecret[] | undefined>;
    /**
     * Standard service account's metadata. More info:
     * https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
     */
    public readonly metadata!: pulumi.Output<outputs.DefaultServiceAccountV1Metadata>;
    /**
     * A list of secrets allowed to be used by pods running using this Service Account. More info:
     * https://kubernetes.io/docs/concepts/configuration/secret
     */
    public readonly secrets!: pulumi.Output<outputs.DefaultServiceAccountV1Secret[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.DefaultServiceAccountV1Timeouts | undefined>;

    /**
     * Create a DefaultServiceAccountV1 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DefaultServiceAccountV1Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultServiceAccountV1Args | DefaultServiceAccountV1State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultServiceAccountV1State | undefined;
            resourceInputs["automountServiceAccountToken"] = state ? state.automountServiceAccountToken : undefined;
            resourceInputs["defaultSecretName"] = state ? state.defaultSecretName : undefined;
            resourceInputs["imagePullSecrets"] = state ? state.imagePullSecrets : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["secrets"] = state ? state.secrets : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DefaultServiceAccountV1Args | undefined;
            if ((!args || args.metadata === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metadata'");
            }
            resourceInputs["automountServiceAccountToken"] = args ? args.automountServiceAccountToken : undefined;
            resourceInputs["imagePullSecrets"] = args ? args.imagePullSecrets : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["secrets"] = args ? args.secrets : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["defaultSecretName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultServiceAccountV1.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DefaultServiceAccountV1 resources.
 */
export interface DefaultServiceAccountV1State {
    /**
     * Enable automatic mounting of the service account token
     */
    automountServiceAccountToken?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    defaultSecretName?: pulumi.Input<string>;
    /**
     * A list of references to secrets in the same namespace to use for pulling any images in pods that reference this Service
     * Account. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
     */
    imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.DefaultServiceAccountV1ImagePullSecret>[]>;
    /**
     * Standard service account's metadata. More info:
     * https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
     */
    metadata?: pulumi.Input<inputs.DefaultServiceAccountV1Metadata>;
    /**
     * A list of secrets allowed to be used by pods running using this Service Account. More info:
     * https://kubernetes.io/docs/concepts/configuration/secret
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.DefaultServiceAccountV1Secret>[]>;
    timeouts?: pulumi.Input<inputs.DefaultServiceAccountV1Timeouts>;
}

/**
 * The set of arguments for constructing a DefaultServiceAccountV1 resource.
 */
export interface DefaultServiceAccountV1Args {
    /**
     * Enable automatic mounting of the service account token
     */
    automountServiceAccountToken?: pulumi.Input<boolean>;
    /**
     * A list of references to secrets in the same namespace to use for pulling any images in pods that reference this Service
     * Account. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
     */
    imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.DefaultServiceAccountV1ImagePullSecret>[]>;
    /**
     * Standard service account's metadata. More info:
     * https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
     */
    metadata: pulumi.Input<inputs.DefaultServiceAccountV1Metadata>;
    /**
     * A list of secrets allowed to be used by pods running using this Service Account. More info:
     * https://kubernetes.io/docs/concepts/configuration/secret
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.DefaultServiceAccountV1Secret>[]>;
    timeouts?: pulumi.Input<inputs.DefaultServiceAccountV1Timeouts>;
}
